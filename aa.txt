TranslationUnitDecl 0xa9dd48 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0xa9e5e0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0xa9e2e0 '__int128'
|-TypedefDecl 0xa9e650 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0xa9e300 'unsigned __int128'
|-TypedefDecl 0xa9e958 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0xa9e730 'struct __NSConstantString_tag'
|   `-Record 0xa9e6a8 '__NSConstantString_tag'
|-TypedefDecl 0xa9e9f0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0xa9e9b0 'char *'
|   `-BuiltinType 0xa9dde0 'char'
|-TypedefDecl 0xa9ece8 <<invalid sloc>> <invalid sloc> implicit referenced __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0xa9ec90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0xa9ead0 'struct __va_list_tag'
|     `-Record 0xa9ea48 '__va_list_tag'
|-TypedefDecl 0xb00f70 <main/los_compiler.h:308:1, col:32> col:32 referenced UINT8 'unsigned char'
| `-BuiltinType 0xa9dea0 'unsigned char'
|-TypedefDecl 0xb00fe0 <line:309:1, col:32> col:32 referenced UINT16 'unsigned short'
| `-BuiltinType 0xa9dec0 'unsigned short'
|-TypedefDecl 0xb01050 <line:310:1, col:32> col:32 referenced UINT32 'unsigned int'
| `-BuiltinType 0xa9dee0 'unsigned int'
|-TypedefDecl 0xb010c0 <line:311:1, col:32> col:32 INT8 'signed char'
| `-BuiltinType 0xa9de00 'signed char'
|-TypedefDecl 0xb01130 <line:312:1, col:32> col:32 INT16 'short'
| `-BuiltinType 0xa9de20 'short'
|-TypedefDecl 0xb011a0 <line:313:1, col:32> col:32 referenced INT32 'int'
| `-BuiltinType 0xa9de40 'int'
|-TypedefDecl 0xb01210 <line:314:1, col:32> col:32 FLOAT 'float'
| `-BuiltinType 0xa9df40 'float'
|-TypedefDecl 0xb01280 <line:315:1, col:32> col:32 DOUBLE 'double'
| `-BuiltinType 0xa9df60 'double'
|-TypedefDecl 0xb012e8 <line:316:1, col:32> col:32 referenced CHAR 'char'
| `-BuiltinType 0xa9dde0 'char'
|-TypedefDecl 0xb01358 <line:318:1, col:32> col:32 referenced BOOL 'unsigned int'
| `-BuiltinType 0xa9dee0 'unsigned int'
|-TypedefDecl 0xb013c8 <line:319:1, col:32> col:32 referenced UINT64 'unsigned long long'
| `-BuiltinType 0xa9df20 'unsigned long long'
|-TypedefDecl 0xb01438 <line:320:1, col:32> col:32 referenced INT64 'long long'
| `-BuiltinType 0xa9de80 'long long'
|-TypedefDecl 0xb014a8 <line:321:1, col:32> col:32 referenced UINTPTR 'unsigned int'
| `-BuiltinType 0xa9dee0 'unsigned int'
|-TypedefDecl 0xb01518 <line:322:1, col:32> col:32 INTPTR 'int'
| `-BuiltinType 0xa9de40 'int'
|-TypedefDecl 0xb015a0 <line:324:1, col:24> col:24 Atomic 'volatile INT32':'volatile int'
| `-QualType 0xb01574 'volatile INT32' volatile
|   `-TypedefType 0xb01570 'INT32' sugar
|     |-Typedef 0xb011a0 'INT32'
|     `-BuiltinType 0xa9de40 'int'
|-TypedefDecl 0xb01630 <line:325:1, col:24> col:24 Atomic64 'volatile INT64':'volatile long long'
| `-QualType 0xb01604 'volatile INT64' volatile
|   `-TypedefType 0xb01600 'INT64' sugar
|     |-Typedef 0xb01438 'INT64'
|     `-BuiltinType 0xa9de80 'long long'
|-FunctionDecl 0xb018d8 <line:407:1, line:410:1> line:407:22 LOS_Align 'UINT32 (UINT32, UINT32)' static inline
| |-ParmVarDecl 0xb01750 <col:32, col:39> col:39 used addr 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb017c8 <col:45, col:52> col:52 used boundary 'UINT32':'unsigned int'
| |-CompoundStmt 0xb0e758 <line:408:1, line:410:1>
| | `-ReturnStmt 0xb0e748 <line:409:5, col:93>
| |   `-BinaryOperator 0xb0e728 <col:12, col:93> 'unsigned int' '&'
| |     |-ParenExpr 0xb0e640 <col:12, col:75> 'unsigned int'
| |     | `-BinaryOperator 0xb0e620 <col:13, col:74> 'unsigned int' '+'
| |     |   |-ImplicitCastExpr 0xb0e608 <col:13> 'UINT32':'unsigned int' <LValueToRValue>
| |     |   | `-DeclRefExpr 0xb019d0 <col:13> 'UINT32':'unsigned int' lvalue ParmVar 0xb01750 'addr' 'UINT32':'unsigned int'
| |     |   `-ParenExpr 0xb0e5e8 <col:20, col:74> 'unsigned int'
| |     |     `-ConditionalOperator 0xb0e5b8 <col:21, col:73> 'unsigned int'
| |     |       |-ParenExpr 0xb01b70 <col:21, col:52> 'int'
| |     |       | `-BinaryOperator 0xb01b50 <col:22, col:48> 'int' '>'
| |     |       |   |-ParenExpr 0xb01af8 <col:22, col:44> 'unsigned int'
| |     |       |   | `-BinaryOperator 0xb01ad8 <col:23, col:43> 'unsigned int' '+'
| |     |       |   |   |-ImplicitCastExpr 0xb01ac0 <col:23> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |   | `-DeclRefExpr 0xb019f0 <col:23> 'UINT32':'unsigned int' lvalue ParmVar 0xb01750 'addr' 'UINT32':'unsigned int'
| |     |       |   |   `-ParenExpr 0xb01aa0 <col:30, col:43> 'unsigned int'
| |     |       |   |     `-BinaryOperator 0xb01a80 <col:31, col:42> 'unsigned int' '-'
| |     |       |   |       |-ImplicitCastExpr 0xb01a50 <col:31> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |       | `-DeclRefExpr 0xb01a10 <col:31> 'UINT32':'unsigned int' lvalue ParmVar 0xb017c8 'boundary' 'UINT32':'unsigned int'
| |     |       |   |       `-ImplicitCastExpr 0xb01a68 <col:42> 'unsigned int' <IntegralCast>
| |     |       |   |         `-IntegerLiteral 0xb01a30 <col:42> 'int' 1
| |     |       |   `-ImplicitCastExpr 0xb01b38 <col:48> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |     `-DeclRefExpr 0xb01b18 <col:48> 'UINT32':'unsigned int' lvalue ParmVar 0xb01750 'addr' 'UINT32':'unsigned int'
| |     |       |-ParenExpr 0xb01c20 <col:56, col:69> 'unsigned int'
| |     |       | `-BinaryOperator 0xb01c00 <col:57, col:68> 'unsigned int' '-'
| |     |       |   |-ImplicitCastExpr 0xb01bd0 <col:57> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   | `-DeclRefExpr 0xb01b90 <col:57> 'UINT32':'unsigned int' lvalue ParmVar 0xb017c8 'boundary' 'UINT32':'unsigned int'
| |     |       |   `-ImplicitCastExpr 0xb01be8 <col:68> 'unsigned int' <IntegralCast>
| |     |       |     `-IntegerLiteral 0xb01bb0 <col:68> 'int' 1
| |     |       `-ImplicitCastExpr 0xb0e5a0 <col:73> 'unsigned int' <IntegralCast>
| |     |         `-IntegerLiteral 0xb01c40 <col:73> 'int' 0
| |     `-UnaryOperator 0xb0e710 <col:79, col:93> 'unsigned int' prefix '~' cannot overflow
| |       `-ParenExpr 0xb0e6f0 <col:80, col:93> 'unsigned int'
| |         `-BinaryOperator 0xb0e6d0 <col:81, col:92> 'unsigned int' '-'
| |           |-ImplicitCastExpr 0xb0e6a0 <col:81> 'UINT32':'unsigned int' <LValueToRValue>
| |           | `-DeclRefExpr 0xb0e660 <col:81> 'UINT32':'unsigned int' lvalue ParmVar 0xb017c8 'boundary' 'UINT32':'unsigned int'
| |           `-ImplicitCastExpr 0xb0e6b8 <col:92> 'unsigned int' <IntegralCast>
| |             `-IntegerLiteral 0xb0e680 <col:92> 'int' 1
| `-FullComment 0xb833a0 <line:388:3, line:405:7>
|   |-ParagraphComment 0xb42740 <line:388:3>
|   | `-TextComment 0xb42710 <col:3> Text=" "
|   |-VerbatimLineComment 0xb42760 <col:4, col:21> Text=" los_base"
|   |-ParagraphComment 0xb427d0 <line:389:3>
|   | `-TextComment 0xb427a0 <col:3> Text=" "
|   |-BlockCommandComment 0xb427f0 <col:4, col:70> Name="brief"
|   | `-ParagraphComment 0xb42850 <col:10, col:70>
|   |   `-TextComment 0xb42820 <col:10, col:70> Text=" Align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0xb428a0 <line:391:3>
|   | `-TextComment 0xb42870 <col:3> Text=" "
|   |-BlockCommandComment 0xb428c0 <col:4, line:392:83> Name="par"
|   | `-ParagraphComment 0xb42940 <line:391:8, line:392:83>
|   |   |-TextComment 0xb428f0 <line:391:8, col:20> Text=" Description:"
|   |   `-TextComment 0xb42910 <line:392:3, col:83> Text=" This API is used to align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0xb42990 <line:394:3>
|   | `-TextComment 0xb42960 <col:3> Text=" "
|   |-BlockCommandComment 0xb429b0 <col:4, line:397:8> Name="attention"
|   | `-ParagraphComment 0xb42b80 <line:395:3, line:397:8>
|   |   |-TextComment 0xb429e0 <line:395:3> Text=" "
|   |   |-HTMLStartTagComment 0xb42a00 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb42a40 <line:396:3> Text=" "
|   |   |-HTMLStartTagComment 0xb42a60 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb42aa0 <col:8, col:50> Text="the value of boundary usually is 4,8,16,32."
|   |   |-HTMLEndTagComment 0xb42ac0 <col:51, col:55> Name="li"
|   |   |-TextComment 0xb42af0 <line:397:3> Text=" "
|   |   `-HTMLEndTagComment 0xb42b10 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb42bd0 <line:399:3>
|   | `-TextComment 0xb42ba0 <col:3> Text=" "
|   |-ParamCommandComment 0xb42bf0 <col:4, line:400:3> [in] implicitly Param="addr" ParamIndex=0
|   | `-ParagraphComment 0xb42ca0 <line:399:15, line:400:3>
|   |   |-TextComment 0xb42c50 <line:399:15, col:61> Text="     [IN]  The variable what you want to align."
|   |   `-TextComment 0xb42c70 <line:400:3> Text=" "
|   |-ParamCommandComment 0xb42cc0 <col:4, col:63> [in] implicitly Param="boundary" ParamIndex=1
|   | `-ParagraphComment 0xb42d50 <col:19, col:63>
|   |   `-TextComment 0xb42d20 <col:19, col:63> Text=" [IN]  The align size what you want to align."
|   |-ParagraphComment 0xb42da0 <line:402:3>
|   | `-TextComment 0xb42d70 <col:3> Text=" "
|   |-BlockCommandComment 0xb42dc0 <col:4, line:403:3> Name="retval"
|   | `-ParagraphComment 0xb42e40 <line:402:11, line:403:3>
|   |   |-TextComment 0xb42df0 <line:402:11, col:55> Text=" #UINT32 The variable what have been aligned."
|   |   `-TextComment 0xb42e10 <line:403:3> Text=" "
|   |-BlockCommandComment 0xb42e60 <col:4, line:405:3> Name="par"
|   | `-ParagraphComment 0xb832b0 <line:403:8, line:405:3>
|   |   |-TextComment 0xb42e90 <line:403:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb42eb0 <line:404:3> Text=" "
|   |   |-HTMLStartTagComment 0xb42ed0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb42f10 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb831d0 <col:12, col:73> Text="los_base.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb831f0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb83220 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb83250 <line:405:3> Text=" "
|   `-BlockCommandComment 0xb832d0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xb83300 <<invalid sloc>>
|-FunctionDecl 0xb0e848 <line:423:1, line:438:1> line:423:20 used maybe_release_fence 'void (int)' static inline
| |-ParmVarDecl 0xb0e788 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0xb0ee00 <line:424:1, line:438:1>
|   `-SwitchStmt 0xb0e928 <line:425:5, line:437:5>
|     |-ImplicitCastExpr 0xb0e910 <line:425:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0xb0e8f0 <col:13> 'int' lvalue ParmVar 0xb0e788 'model' 'int'
|     `-CompoundStmt 0xb0edb8 <col:20, line:437:5>
|       |-CaseStmt 0xb0e980 <line:426:9, line:427:52>
|       | |-ConstantExpr 0xb0e968 <<built-in>:14:26> 'int'
|       | | `-IntegerLiteral 0xb0e948 <col:26> 'int' 3
|       | `-CallExpr 0xb0eb90 <main/los_compiler.h:427:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xb0eb78 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xb0eb10 <col:13> '<builtin fn type>' Function 0xb0e9a8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xb0eb30 <<built-in>:14:26> 'int' 3
|       |-BreakStmt 0xb0ebb8 <main/los_compiler.h:428:13>
|       |-CaseStmt 0xb0ebf8 <line:429:9, line:430:52>
|       | |-ConstantExpr 0xb0ebe0 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0xb0ebc0 <col:26> 'int' 4
|       | `-CallExpr 0xb0ec78 <main/los_compiler.h:430:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xb0ec60 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xb0ec20 <col:13> '<builtin fn type>' Function 0xb0e9a8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xb0ec40 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0xb0eca0 <main/los_compiler.h:431:13>
|       |-CaseStmt 0xb0ece0 <line:432:9, line:433:52>
|       | |-ConstantExpr 0xb0ecc8 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0xb0eca8 <col:26> 'int' 5
|       | `-CallExpr 0xb0ed60 <main/los_compiler.h:433:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xb0ed48 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xb0ed08 <col:13> '<builtin fn type>' Function 0xb0e9a8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xb0ed28 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0xb0ed88 <main/los_compiler.h:434:13>
|       `-DefaultStmt 0xb0ed98 <line:435:9, line:436:13>
|         `-BreakStmt 0xb0ed90 <col:13>
|-FunctionDecl 0xb0e9a8 <line:427:13> col:13 implicit used __atomic_thread_fence 'void (int)' extern
| |-ParmVarDecl 0xb0ea48 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0xb0eab8 <col:13> Implicit
|-FunctionDecl 0xb0eec0 <line:440:1, line:455:1> line:440:20 used maybe_acquire_fence 'void (int)' static inline
| |-ParmVarDecl 0xb0ee30 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0xb0f2e8 <line:441:1, line:455:1>
|   `-SwitchStmt 0xb0efa0 <line:442:5, line:454:5>
|     |-ImplicitCastExpr 0xb0ef88 <line:442:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0xb0ef68 <col:13> 'int' lvalue ParmVar 0xb0ee30 'model' 'int'
|     `-CompoundStmt 0xb0f2a0 <col:20, line:454:5>
|       |-CaseStmt 0xb0eff8 <line:443:9, line:444:52>
|       | |-ConstantExpr 0xb0efe0 <<built-in>:13:26> 'int'
|       | | `-IntegerLiteral 0xb0efc0 <col:26> 'int' 2
|       | `-CallExpr 0xb0f078 <main/los_compiler.h:444:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xb0f060 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xb0f020 <col:13> '<builtin fn type>' Function 0xb0e9a8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xb0f040 <<built-in>:13:26> 'int' 2
|       |-BreakStmt 0xb0f0a0 <main/los_compiler.h:445:13>
|       |-CaseStmt 0xb0f0e0 <line:446:9, line:447:52>
|       | |-ConstantExpr 0xb0f0c8 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0xb0f0a8 <col:26> 'int' 4
|       | `-CallExpr 0xb0f160 <main/los_compiler.h:447:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xb0f148 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xb0f108 <col:13> '<builtin fn type>' Function 0xb0e9a8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xb0f128 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0xb0f188 <main/los_compiler.h:448:13>
|       |-CaseStmt 0xb0f1c8 <line:449:9, line:450:52>
|       | |-ConstantExpr 0xb0f1b0 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0xb0f190 <col:26> 'int' 5
|       | `-CallExpr 0xb0f248 <main/los_compiler.h:450:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xb0f230 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xb0f1f0 <col:13> '<builtin fn type>' Function 0xb0e9a8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xb0f210 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0xb0f270 <main/los_compiler.h:451:13>
|       `-DefaultStmt 0xb0f280 <line:452:9, line:453:13>
|         `-BreakStmt 0xb0f278 <col:13>
|-FunctionDecl 0xb0f488 <line:458:1, line:472:1> line:458:21 used __libatomic_flag_for_address 'BOOL *(void *)' static inline
| |-ParmVarDecl 0xb0f338 <col:50, col:56> col:56 used addr 'void *'
| `-CompoundStmt 0xb13d00 <line:459:1, line:472:1>
|   |-DeclStmt 0xb122b0 <line:460:5, col:99>
|   | `-VarDecl 0xb11d38 <col:5, col:98> col:17 used flag_table 'BOOL [16]' static cinit
|   |   `-InitListExpr 0xb12070 <col:51, col:98> 'BOOL [16]'
|   |     |-ImplicitCastExpr 0xb12130 <col:52> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xb11da0 <col:52> 'int' 0
|   |     |-ImplicitCastExpr 0xb12148 <col:55> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xb11dc0 <col:55> 'int' 0
|   |     |-ImplicitCastExpr 0xb12160 <col:58> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xb11de0 <col:58> 'int' 0
|   |     |-ImplicitCastExpr 0xb12178 <col:61> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xb11e00 <col:61> 'int' 0
|   |     |-ImplicitCastExpr 0xb12190 <col:64> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xb11e20 <col:64> 'int' 0
|   |     |-ImplicitCastExpr 0xb121a8 <col:67> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xb11e40 <col:67> 'int' 0
|   |     |-ImplicitCastExpr 0xb121c0 <col:70> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xb11e60 <col:70> 'int' 0
|   |     |-ImplicitCastExpr 0xb121d8 <col:73> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xb11e80 <col:73> 'int' 0
|   |     |-ImplicitCastExpr 0xb121f0 <col:76> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xb11ea0 <col:76> 'int' 0
|   |     |-ImplicitCastExpr 0xb12208 <col:79> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xb11ec0 <col:79> 'int' 0
|   |     |-ImplicitCastExpr 0xb12220 <col:82> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xb11ee0 <col:82> 'int' 0
|   |     |-ImplicitCastExpr 0xb12238 <col:85> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xb11f00 <col:85> 'int' 0
|   |     |-ImplicitCastExpr 0xb12250 <col:88> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xb11f20 <col:88> 'int' 0
|   |     |-ImplicitCastExpr 0xb12268 <col:91> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xb11f40 <col:91> 'int' 0
|   |     |-ImplicitCastExpr 0xb12280 <col:94> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xb11f60 <col:94> 'int' 0
|   |     `-ImplicitCastExpr 0xb12298 <col:97> 'BOOL':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0xb11f80 <col:97> 'int' 0
|   |-DeclStmt 0xb12440 <line:461:5, col:41>
|   | `-VarDecl 0xb12300 <col:5, col:37> col:13 used p 'UINTPTR':'unsigned int' cinit
|   |   `-CStyleCastExpr 0xb12418 <col:17, col:37> 'UINTPTR':'unsigned int' <PointerToIntegral>
|   |     `-CStyleCastExpr 0xb123e0 <col:26, col:37> 'UINTPTR *' <BitCast>
|   |       `-ImplicitCastExpr 0xb123c8 <col:37> 'void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0xb12368 <col:37> 'void *' lvalue ParmVar 0xb0f338 'addr' 'void *'
|   |-CompoundAssignOperator 0xb125c8 <line:462:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0xb12458 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0xb12300 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0xb125a8 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0xb124f0 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0xb124d0 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0xb124b8 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0xb12478 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0xb12300 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0xb12498 <col:16> 'int' 2
|   |   `-ParenExpr 0xb12588 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0xb12568 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0xb12550 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0xb12510 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0xb12300 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0xb12530 <col:27> 'int' 4
|   |-CompoundAssignOperator 0xb12768 <line:463:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0xb125f8 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0xb12300 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0xb12748 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0xb12690 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0xb12670 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0xb12658 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0xb12618 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0xb12300 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0xb12638 <col:16> 'int' 7
|   |   `-ParenExpr 0xb12728 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0xb12708 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0xb126f0 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0xb126b0 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0xb12300 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0xb126d0 <col:27> 'int' 5
|   |-CompoundAssignOperator 0xb12908 <line:464:5, col:30> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0xb12798 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0xb12300 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0xb128e8 <col:10, col:30> 'unsigned int' '+'
|   |   |-ParenExpr 0xb12830 <col:10, col:18> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0xb12810 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0xb127f8 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0xb127b8 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0xb12300 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0xb127d8 <col:16> 'int' 17
|   |   `-ParenExpr 0xb128c8 <col:22, col:30> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0xb128a8 <col:23, col:28> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0xb12890 <col:23> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0xb12850 <col:23> 'UINTPTR':'unsigned int' lvalue Var 0xb12300 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0xb12870 <col:28> 'int' 13
|   |-IfStmt 0xb12ac8 <line:466:5, line:468:5>
|   | |-BinaryOperator 0xb129a8 <line:466:9, col:26> 'int' '>'
|   | | |-UnaryExprOrTypeTraitExpr 0xb12950 <col:9, col:22> 'unsigned long' sizeof 'void *'
|   | | `-ImplicitCastExpr 0xb12990 <col:26> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0xb12970 <col:26> 'int' 4
|   | `-CompoundStmt 0xb12ab0 <col:29, line:468:5>
|   |   `-CompoundAssignOperator 0xb12a80 <line:467:9, col:22> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0xb129c8 <col:9> 'UINTPTR':'unsigned int' lvalue Var 0xb12300 'p' 'UINTPTR':'unsigned int'
|   |     `-ParenExpr 0xb12a60 <col:14, col:22> 'UINTPTR':'unsigned int'
|   |       `-BinaryOperator 0xb12a40 <col:15, col:20> 'UINTPTR':'unsigned int' '>>'
|   |         |-ImplicitCastExpr 0xb12a28 <col:15> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |         | `-DeclRefExpr 0xb129e8 <col:15> 'UINTPTR':'unsigned int' lvalue Var 0xb12300 'p' 'UINTPTR':'unsigned int'
|   |         `-IntegerLiteral 0xb12a08 <col:20> 'int' 31
|   |-CompoundAssignOperator 0xb12bf8 <line:470:5, col:34> 'UINTPTR':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0xb12ae0 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0xb12300 'p' 'UINTPTR':'unsigned int'
|   | `-ImplicitCastExpr 0xb12be0 <col:10, col:34> 'unsigned int' <IntegralCast>
|   |   `-ParenExpr 0xb12bc0 <col:10, col:34> 'int'
|   |     `-BinaryOperator 0xb12ba0 <line:457:29, line:470:33> 'int' '-'
|   |       |-ParenExpr 0xb12b60 <line:457:29, col:36> 'int'
|   |       | `-BinaryOperator 0xb12b40 <col:30, col:35> 'int' '<<'
|   |       |   |-IntegerLiteral 0xb12b00 <col:30> 'int' 1
|   |       |   `-IntegerLiteral 0xb12b20 <col:35> 'int' 4
|   |       `-IntegerLiteral 0xb12b80 <line:470:33> 'int' 1
|   `-ReturnStmt 0xb13cf0 <line:471:5, col:25>
|     `-BinaryOperator 0xb13cd0 <col:12, col:25> 'BOOL *' '+'
|       |-ImplicitCastExpr 0xb13ca0 <col:12> 'BOOL *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0xb12c28 <col:12> 'BOOL [16]' lvalue Var 0xb11d38 'flag_table' 'BOOL [16]'
|       `-ImplicitCastExpr 0xb13cb8 <col:25> 'UINTPTR':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0xb13c80 <col:25> 'UINTPTR':'unsigned int' lvalue Var 0xb12300 'p' 'UINTPTR':'unsigned int'
|-FunctionDecl 0xb13eb8 <line:474:1, line:482:1> line:474:20 used get_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0xb13d68 <col:29, col:35> col:35 used addr 'void *'
| |-ParmVarDecl 0xb13de8 <col:41, col:45> col:45 used model 'int'
| `-CompoundStmt 0xb14570 <line:475:1, line:482:1>
|   |-DeclStmt 0xb140d0 <line:476:5, col:57>
|   | `-VarDecl 0xb13f78 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0xb14090 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0xb14078 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0xb13fe0 <col:22> 'BOOL *(void *)' Function 0xb0f488 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0xb140b8 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0xb14000 <col:52> 'void *' lvalue ParmVar 0xb13d68 'addr' 'void *'
|   |-CallExpr 0xb14140 <line:478:5, col:31> 'void'
|   | |-ImplicitCastExpr 0xb14128 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xb140e8 <col:5> 'void (int)' Function 0xb0e848 'maybe_release_fence' 'void (int)'
|   | `-ImplicitCastExpr 0xb14168 <col:26> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xb14108 <col:26> 'int' lvalue ParmVar 0xb13de8 'model' 'int'
|   `-WhileStmt 0xb14558 <line:479:5, line:481:5>
|     |-BinaryOperator 0xb14518 <line:479:12, col:66> 'int' '=='
|     | |-ImplicitCastExpr 0xb14500 <col:12, col:61> 'int' <IntegralCast>
|     | | `-CallExpr 0xb14480 <col:12, col:61> '_Bool'
|     | |   |-ImplicitCastExpr 0xb14468 <col:12> '_Bool (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|     | |   | `-DeclRefExpr 0xb143c0 <col:12> '<builtin fn type>' Function 0xb141e8 '__atomic_test_and_set' '_Bool (volatile void *, int)'
|     | |   |-ImplicitCastExpr 0xb144c8 <col:35> 'volatile void *' <BitCast>
|     | |   | `-ImplicitCastExpr 0xb144b0 <col:35> 'BOOL *' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0xb143e0 <col:35> 'BOOL *' lvalue Var 0xb13f78 'lock_ptr' 'BOOL *'
|     | |   `-IntegerLiteral 0xb14400 <<built-in>:13:26> 'int' 2
|     | `-IntegerLiteral 0xb144e0 <main/los_compiler.h:479:66> 'int' 1
|     `-CompoundStmt 0xb14540 <col:69, line:481:5>
|       `-NullStmt 0xb14538 <line:480:9>
|-FunctionDecl 0xb141e8 <line:479:12> col:12 implicit used __atomic_test_and_set '_Bool (volatile void *, int)' extern
| |-ParmVarDecl 0xb14288 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0xb142f0 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0xb14368 <col:12> Implicit
|-FunctionDecl 0xb146c8 <line:484:1, line:490:1> line:484:20 used free_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0xb145b0 <col:30, col:36> col:36 used addr 'void *'
| |-ParmVarDecl 0xb14630 <col:42, col:46> col:46 used model 'int'
| `-CompoundStmt 0xb14ce0 <line:485:1, line:490:1>
|   |-DeclStmt 0xb14888 <line:486:5, col:57>
|   | `-VarDecl 0xb14788 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0xb14848 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0xb14830 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0xb147f0 <col:22> 'BOOL *(void *)' Function 0xb0f488 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0xb14870 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0xb14810 <col:52> 'void *' lvalue ParmVar 0xb145b0 'addr' 'void *'
|   |-CallExpr 0xb14b70 <line:488:5, col:47> 'void'
|   | |-ImplicitCastExpr 0xb14b58 <col:5> 'void (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0xb14ab0 <col:5> '<builtin fn type>' Function 0xb148d8 '__atomic_clear' 'void (volatile void *, int)'
|   | |-ImplicitCastExpr 0xb14bb8 <col:21> 'volatile void *' <BitCast>
|   | | `-ImplicitCastExpr 0xb14ba0 <col:21> 'BOOL *' <LValueToRValue>
|   | |   `-DeclRefExpr 0xb14ad0 <col:21> 'BOOL *' lvalue Var 0xb14788 'lock_ptr' 'BOOL *'
|   | `-IntegerLiteral 0xb14af0 <<built-in>:14:26> 'int' 3
|   `-CallExpr 0xb14c28 <main/los_compiler.h:489:5, col:31> 'void'
|     |-ImplicitCastExpr 0xb14c10 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0xb14bd0 <col:5> 'void (int)' Function 0xb0eec0 'maybe_acquire_fence' 'void (int)'
|     `-ImplicitCastExpr 0xb14c50 <col:26> 'int' <LValueToRValue>
|       `-DeclRefExpr 0xb14bf0 <col:26> 'int' lvalue ParmVar 0xb14630 'model' 'int'
|-FunctionDecl 0xb148d8 <line:488:5> col:5 implicit used __atomic_clear 'void (volatile void *, int)' extern
| |-ParmVarDecl 0xb14978 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0xb149e0 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0xb14a58 <col:5> Implicit
|-FunctionDecl 0xb14f08 <line:492:1, line:501:1> line:492:23 __atomic_load_8 'UINT64 (const volatile void *, int)' static inline
| |-ParmVarDecl 0xb14d70 <col:39, col:60> col:60 used mem 'const volatile void *'
| |-ParmVarDecl 0xb14df0 <col:65, col:69> col:69 used model 'int'
| `-CompoundStmt 0xb154b8 <line:493:1, line:501:1>
|   |-DeclStmt 0xb15030 <line:494:5, col:15>
|   | `-VarDecl 0xb14fc8 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0xb15140 <line:496:5, col:29>
|   | `-VarDecl 0xb15060 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0xb15118 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0xb15100 <col:26> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0xb150c8 <col:26> 'const volatile void *' lvalue ParmVar 0xb14d70 'mem' 'const volatile void *'
|   |-CallExpr 0xb15200 <line:497:5, col:26> 'void'
|   | |-ImplicitCastExpr 0xb151e8 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xb15158 <col:5> 'void (void *, int)' Function 0xb13eb8 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0xb15230 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0xb15178 <col:15> 'void *' lvalue Var 0xb15060 'memP' 'void *'
|   | `-ImplicitCastExpr 0xb15248 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xb15198 <col:21> 'int' lvalue ParmVar 0xb14df0 'model' 'int'
|   |-BinaryOperator 0xb15378 <line:498:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0xb15260 <col:5> 'UINT64':'unsigned long long' lvalue Var 0xb14fc8 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0xb15360 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0xb15348 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0xb15320 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0xb15308 <col:22> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0xb152d8 <col:22> 'const volatile void *' lvalue ParmVar 0xb14d70 'mem' 'const volatile void *'
|   |-CallExpr 0xb15410 <line:499:5, col:27> 'void'
|   | |-ImplicitCastExpr 0xb153f8 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xb15398 <col:5> 'void (void *, int)' Function 0xb146c8 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0xb15440 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0xb153b8 <col:16> 'void *' lvalue Var 0xb15060 'memP' 'void *'
|   | `-ImplicitCastExpr 0xb15458 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xb153d8 <col:22> 'int' lvalue ParmVar 0xb14df0 'model' 'int'
|   `-ReturnStmt 0xb154a8 <line:500:5, col:12>
|     `-ImplicitCastExpr 0xb15490 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0xb15470 <col:12> 'UINT64':'unsigned long long' lvalue Var 0xb14fc8 'ret' 'UINT64':'unsigned long long'
|-FunctionDecl 0xb15728 <line:503:1, line:509:1> line:503:20 __atomic_store_8 'void (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0xb15510 <col:37, col:52> col:52 used mem 'volatile void *'
| |-ParmVarDecl 0xb15588 <col:57, col:64> col:64 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xb15608 <col:69, col:73> col:73 used model 'int'
| `-CompoundStmt 0xb15b80 <line:504:1, line:509:1>
|   |-DeclStmt 0xb158d8 <line:505:5, col:29>
|   | `-VarDecl 0xb157f8 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0xb158b0 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0xb15898 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0xb15860 <col:26> 'volatile void *' lvalue ParmVar 0xb15510 'mem' 'volatile void *'
|   |-CallExpr 0xb15968 <line:506:5, col:26> 'void'
|   | |-ImplicitCastExpr 0xb15950 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xb158f0 <col:5> 'void (void *, int)' Function 0xb13eb8 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0xb15998 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0xb15910 <col:15> 'void *' lvalue Var 0xb157f8 'memP' 'void *'
|   | `-ImplicitCastExpr 0xb159b0 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xb15930 <col:21> 'int' lvalue ParmVar 0xb15608 'model' 'int'
|   |-BinaryOperator 0xb15a88 <line:507:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0xb15a38 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0xb15a10 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0xb159f8 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0xb159c8 <col:16> 'volatile void *' lvalue ParmVar 0xb15510 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0xb15a70 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0xb15a50 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0xb15588 'val' 'UINT64':'unsigned long long'
|   `-CallExpr 0xb15b20 <line:508:5, col:27> 'void'
|     |-ImplicitCastExpr 0xb15b08 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0xb15aa8 <col:5> 'void (void *, int)' Function 0xb146c8 'free_lock' 'void (void *, int)'
|     |-ImplicitCastExpr 0xb15b50 <col:16> 'void *' <LValueToRValue>
|     | `-DeclRefExpr 0xb15ac8 <col:16> 'void *' lvalue Var 0xb157f8 'memP' 'void *'
|     `-ImplicitCastExpr 0xb15b68 <col:22> 'int' <LValueToRValue>
|       `-DeclRefExpr 0xb15ae8 <col:22> 'int' lvalue ParmVar 0xb15608 'model' 'int'
|-FunctionDecl 0xb15e18 <line:511:1, line:521:1> line:511:22 __atomic_exchange_8 'UINT64 (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0xb15bc8 <col:42, col:57> col:57 used mem 'volatile void *'
| |-ParmVarDecl 0xb15c40 <col:62, col:69> col:69 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xb15cf0 <col:74, col:78> col:78 used model 'int'
| `-CompoundStmt 0xb16428 <line:512:1, line:521:1>
|   |-DeclStmt 0xb15f48 <line:513:5, col:15>
|   | `-VarDecl 0xb15ee0 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0xb16058 <line:515:5, col:29>
|   | `-VarDecl 0xb15f78 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0xb16030 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0xb16018 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0xb15fe0 <col:26> 'volatile void *' lvalue ParmVar 0xb15bc8 'mem' 'volatile void *'
|   |-CallExpr 0xb160e8 <line:516:5, col:26> 'void'
|   | |-ImplicitCastExpr 0xb160d0 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xb16070 <col:5> 'void (void *, int)' Function 0xb13eb8 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0xb16118 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0xb16090 <col:15> 'void *' lvalue Var 0xb15f78 'memP' 'void *'
|   | `-ImplicitCastExpr 0xb16130 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xb160b0 <col:21> 'int' lvalue ParmVar 0xb15cf0 'model' 'int'
|   |-BinaryOperator 0xb16208 <line:517:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0xb16148 <col:5> 'UINT64':'unsigned long long' lvalue Var 0xb15ee0 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0xb161f0 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0xb161d8 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0xb161b0 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0xb16198 <col:22> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0xb16168 <col:22> 'volatile void *' lvalue ParmVar 0xb15bc8 'mem' 'volatile void *'
|   |-BinaryOperator 0xb162e8 <line:518:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0xb16298 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0xb16270 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0xb16258 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0xb16228 <col:16> 'volatile void *' lvalue ParmVar 0xb15bc8 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0xb162d0 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0xb162b0 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0xb15c40 'val' 'UINT64':'unsigned long long'
|   |-CallExpr 0xb16380 <line:519:5, col:27> 'void'
|   | |-ImplicitCastExpr 0xb16368 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xb16308 <col:5> 'void (void *, int)' Function 0xb146c8 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0xb163b0 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0xb16328 <col:16> 'void *' lvalue Var 0xb15f78 'memP' 'void *'
|   | `-ImplicitCastExpr 0xb163c8 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xb16348 <col:22> 'int' lvalue ParmVar 0xb15cf0 'model' 'int'
|   `-ReturnStmt 0xb16418 <line:520:5, col:12>
|     `-ImplicitCastExpr 0xb16400 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0xb163e0 <col:12> 'UINT64':'unsigned long long' lvalue Var 0xb15ee0 'ret' 'UINT64':'unsigned long long'
|-VarDecl 0xb16480 <main/target_config.h:100:1, col:16> col:16 __heap_start 'UINTPTR':'unsigned int' extern
|-VarDecl 0xb16c08 <main/los_config.h:419:1, col:15> col:15 m_aucSysMem0 'UINT8 *' extern
|-EnumDecl 0xb1c928 <main/los_debug.h:74:9, line:80:1> line:74:9
| |-EnumConstantDecl 0xb1c9f0 <line:75:5> col:5 EXC_REBOOT 'int'
| |-EnumConstantDecl 0xb1ca40 <line:76:5> col:5 EXC_ASSERT 'int'
| |-EnumConstantDecl 0xb1ca90 <line:77:5> col:5 EXC_STACKOVERFLOW 'int'
| |-EnumConstantDecl 0xb1cae0 <line:78:5> col:5 EXC_INTERRUPT 'int'
| `-EnumConstantDecl 0xb1cb30 <line:79:5> col:5 EXC_TYPE_END 'int'
|-TypedefDecl 0xb1cbd8 <line:74:1, line:80:3> col:3 referenced EXC_TYPE 'enum EXC_TYPE':'EXC_TYPE'
| `-ElaboratedType 0xb1cb80 'enum EXC_TYPE' sugar
|   `-EnumType 0xb1c9d0 'EXC_TYPE'
|     `-Enum 0xb1c928 ''
|-TypedefDecl 0xb1ce10 <line:82:1, col:43> col:16 referenced ExcHookFn 'void (*)(EXC_TYPE)'
| `-PointerType 0xb1cdb0 'void (*)(EXC_TYPE)'
|   `-ParenType 0xb1cd50 'void (EXC_TYPE)' sugar
|     `-FunctionProtoType 0xb1cd20 'void (EXC_TYPE)' cdecl
|       |-BuiltinType 0xa9dda0 'void'
|       `-TypedefType 0xb1cc50 'EXC_TYPE' sugar
|         |-Typedef 0xb1cbd8 'EXC_TYPE'
|         `-ElaboratedType 0xb1cb80 'enum EXC_TYPE' sugar
|           `-EnumType 0xb1c9d0 'EXC_TYPE'
|             `-Enum 0xb1c928 ''
|-FunctionDecl 0xb1cf98 <main/los_compiler.h:327:23, main/los_debug.h:84:43> col:6 OsExcHookRegister 'void (ExcHookFn)'
| `-ParmVarDecl 0xb1cea0 <col:24, col:34> col:34 excHookFn 'ExcHookFn':'void (*)(EXC_TYPE)'
|-FunctionDecl 0xb1d0e0 <main/los_compiler.h:327:23, main/los_debug.h:86:34> col:6 OsDoExcHook 'void (EXC_TYPE)'
| `-ParmVarDecl 0xb1d050 <col:18, col:27> col:27 excType 'EXC_TYPE':'EXC_TYPE'
|-EnumDecl 0xb1d188 <line:104:9, line:108:1> line:104:9
| |-EnumConstantDecl 0xb1d250 <line:105:5> col:5 LOG_MODULE_KERNEL 'int'
| |-EnumConstantDecl 0xb1d2a0 <line:106:5> col:5 LOG_MODULE_FS 'int'
| `-EnumConstantDecl 0xb1d2f0 <line:107:5> col:5 LOS_MODULE_OTHERS 'int'
|-TypedefDecl 0xb1d398 <line:104:1, line:108:3> col:3 LogModuleType 'enum LogModuleType':'LogModuleType'
| `-ElaboratedType 0xb1d340 'enum LogModuleType' sugar
|   `-EnumType 0xb1d230 'LogModuleType'
|     `-Enum 0xb1d188 ''
|-FunctionDecl 0xb1f7e0 <line:132:14> col:14 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0xb1f880 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0xb1f8f0 <col:14> Implicit printf 1 2
|-FunctionDecl 0xb1f958 prev 0xb1f7e0 <col:1, col:41> col:14 used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0xb1d488 <col:21, col:33> col:33 fmt 'const CHAR *'
| `-FormatAttr 0xb1fa30 <col:14> Inherited printf 1 2
|-FunctionDecl 0xb1fb68 <line:133:1, col:41> col:14 used OsLogLevelCheck 'INT32 (INT32)' extern
| `-ParmVarDecl 0xb1fa78 <col:30, col:36> col:36 level 'INT32':'int'
|-TypedefDecl 0xb1ff68 <line:167:1, col:89> col:16 referenced BACK_TRACE_HOOK 'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
| `-PointerType 0xb1fef0 'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
|   `-ParenType 0xb1fe90 'void (UINTPTR *, UINT32, UINT32, UINTPTR)' sugar
|     `-FunctionProtoType 0xb1fe40 'void (UINTPTR *, UINT32, UINT32, UINTPTR)' cdecl
|       |-BuiltinType 0xa9dda0 'void'
|       |-PointerType 0xb12390 'UINTPTR *'
|       | `-TypedefType 0xb122d0 'UINTPTR' sugar
|       |   |-Typedef 0xb014a8 'UINTPTR'
|       |   `-BuiltinType 0xa9dee0 'unsigned int'
|       |-TypedefType 0xb01720 'UINT32' sugar
|       | |-Typedef 0xb01050 'UINT32'
|       | `-BuiltinType 0xa9dee0 'unsigned int'
|       |-TypedefType 0xb01720 'UINT32' sugar
|       | |-Typedef 0xb01050 'UINT32'
|       | `-BuiltinType 0xa9dee0 'unsigned int'
|       `-TypedefType 0xb122d0 'UINTPTR' sugar
|         |-Typedef 0xb014a8 'UINTPTR'
|         `-BuiltinType 0xa9dee0 'unsigned int'
|-FunctionDecl 0xb200e8 <line:168:1, col:52> col:13 OsBackTraceHookSet 'void (BACK_TRACE_HOOK)' extern
| `-ParmVarDecl 0xb1fff0 <col:32, col:48> col:48 hook 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
|-FunctionDecl 0xb203b0 <line:169:1, col:89> col:13 OsBackTraceHookCall 'void (UINTPTR *, UINT32, UINT32, UINTPTR)' extern
| |-ParmVarDecl 0xb201a0 <col:33, col:42> col:42 LR 'UINTPTR *'
| |-ParmVarDecl 0xb20218 <col:46, col:53> col:53 LRSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb20290 <col:61, col:68> col:68 jumpCount 'UINT32':'unsigned int'
| `-ParmVarDecl 0xb20308 <col:79, col:87> col:87 SP 'UINTPTR':'unsigned int'
|-TypedefDecl 0xb204a0 </usr/lib/llvm-10/lib/clang/10.0.0/include/stdarg.h:14:1, col:27> col:27 va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0xb20470 '__builtin_va_list' sugar
|   |-Typedef 0xa9ece8 '__builtin_va_list'
|   `-ConstantArrayType 0xa9ec90 'struct __va_list_tag [1]' 1 
|     `-RecordType 0xa9ead0 'struct __va_list_tag'
|       `-Record 0xa9ea48 '__va_list_tag'
|-TypedefDecl 0xb20508 <line:32:1, col:27> col:27 __gnuc_va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0xb20470 '__builtin_va_list' sugar
|   |-Typedef 0xa9ece8 '__builtin_va_list'
|   `-ConstantArrayType 0xa9ec90 'struct __va_list_tag [1]' 1 
|     `-RecordType 0xa9ead0 'struct __va_list_tag'
|       `-Record 0xa9ea48 '__va_list_tag'
|-TypedefDecl 0xb20570 <main/los_interrupt.h:44:1, col:16> col:16 referenced HWI_HANDLE_T 'UINT32':'unsigned int'
| `-TypedefType 0xb01720 'UINT32' sugar
|   |-Typedef 0xb01050 'UINT32'
|   `-BuiltinType 0xa9dee0 'unsigned int'
|-TypedefDecl 0xb20600 <line:46:1, col:16> col:16 referenced HWI_PRIOR_T 'UINT16':'unsigned short'
| `-TypedefType 0xb205d0 'UINT16' sugar
|   |-Typedef 0xb00fe0 'UINT16'
|   `-BuiltinType 0xa9dec0 'unsigned short'
|-TypedefDecl 0xb20668 <line:48:1, col:16> col:16 referenced HWI_MODE_T 'UINT16':'unsigned short'
| `-TypedefType 0xb205d0 'UINT16' sugar
|   |-Typedef 0xb00fe0 'UINT16'
|   `-BuiltinType 0xa9dec0 'unsigned short'
|-TypedefDecl 0xb206d0 <line:50:1, col:16> col:16 HWI_ARG_T 'UINT32':'unsigned int'
| `-TypedefType 0xb01720 'UINT32' sugar
|   |-Typedef 0xb01050 'UINT32'
|   `-BuiltinType 0xa9dee0 'unsigned int'
|-TypedefDecl 0xb27fc8 <line:55:1, col:35> col:16 referenced HWI_PROC_FUNC 'void (*)(void)'
| `-PointerType 0xb27f70 'void (*)(void)'
|   `-ParenType 0xb27f10 'void (void)' sugar
|     `-FunctionProtoType 0xb27ee0 'void (void)' cdecl
|       `-BuiltinType 0xa9dda0 'void'
|-RecordDecl 0xb28020 <line:57:9, line:61:1> line:57:16 struct tagIrqParam definition
| |-FieldDecl 0xb280d8 <line:58:5, col:9> col:9 swIrq 'int'
| | `-FullComment 0xb83470 <col:28, col:49>
| |   `-ParagraphComment 0xb83440 <col:28, col:49>
| |     `-TextComment 0xb83410 <col:28, col:49> Text=" The interrupt number "
| |-FieldDecl 0xb28170 <main/los_compiler.h:327:23, main/los_interrupt.h:59:11> col:11 pDevId 'void *'
| | `-FullComment 0xb83540 <col:28, col:85>
| |   `-ParagraphComment 0xb83510 <col:28, col:85>
| |     `-TextComment 0xb834e0 <col:28, col:85> Text=" The pointer to the device ID that launches the interrupt "
| `-FieldDecl 0xb281f8 <line:60:5, col:17> col:17 pName 'const CHAR *'
|   `-FullComment 0xb83610 <col:28, col:47>
|     `-ParagraphComment 0xb835e0 <col:28, col:47>
|       `-TextComment 0xb835b0 <col:28, col:47> Text=" The interrupt name "
|-TypedefDecl 0xb282d8 <line:57:1, line:61:3> col:3 referenced HwiIrqParam 'struct tagIrqParam':'struct tagIrqParam'
| `-ElaboratedType 0xb28280 'struct tagIrqParam' sugar
|   `-RecordType 0xb280a0 'struct tagIrqParam'
|     `-Record 0xb28020 'tagIrqParam'
|-RecordDecl 0xb28348 <line:63:9, line:70:1> line:63:9 struct definition
| |-FieldDecl 0xb285b0 <line:64:5, col:45> col:14 referenced triggerIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0xb286b0 <line:65:5, col:43> col:14 referenced clearIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0xb287b0 <line:66:5, col:44> col:14 referenced enableIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0xb288b0 <line:67:5, col:45> col:14 referenced disableIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0xb28b38 <line:68:5, col:65> col:14 referenced setIrqPriority 'UINT32 (*)(HWI_HANDLE_T, UINT8)'
| `-FieldDecl 0xb28d18 <line:69:5, col:32> col:14 referenced getCurIrqNum 'UINT32 (*)(void)'
|-TypedefDecl 0xb28dc8 <line:63:1, line:70:3> col:3 referenced HwiControllerOps 'struct HwiControllerOps':'HwiControllerOps'
| `-ElaboratedType 0xb28d70 'struct HwiControllerOps' sugar
|   `-RecordType 0xb283d0 'HwiControllerOps'
|     `-Record 0xb28348 ''
|-VarDecl 0xb28f20 <line:72:1, col:25> col:25 used g_archHwiOps 'HwiControllerOps':'HwiControllerOps' extern
|-VarDecl 0xb28f98 <line:75:1, col:15> col:15 __stack_chk_guard 'UINT32':'unsigned int' extern
|-FunctionDecl 0xb29098 <line:77:1, col:34> col:13 __stack_chk_fail 'void (void)' extern
|-FunctionDecl 0xb291d0 <line:79:1, col:28> col:8 ArchIsIntActive 'UINT32 (void)'
|-FunctionDecl 0xb29308 <line:91:1, col:24> col:8 used ArchIntLock 'UINT32 (void)'
|-FunctionDecl 0xb29448 <line:93:1, col:37> col:8 HwiUnmask 'UINT32 (HWI_HANDLE_T)'
| `-ParmVarDecl 0xb293b8 <col:18, col:31> col:31 hwiNum 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xb29590 <line:94:1, col:35> col:8 HwiMask 'UINT32 (HWI_HANDLE_T)'
| `-ParmVarDecl 0xb29500 <col:16, col:29> col:29 hwiNum 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xb29738 <main/los_compiler.h:327:23, main/los_interrupt.h:95:35> col:6 used ArchIntRestore 'void (UINT32)'
| `-ParmVarDecl 0xb29648 <col:21, col:28> col:28 intSave 'UINT32':'unsigned int'
|-FunctionDecl 0xb29878 <line:98:1, col:26> col:8 ArchIntUnLock 'UINT32 (void)'
|-FunctionDecl 0xb29b58 <line:127:1, col:64> col:8 ArchHwiDelete 'UINT32 (HWI_HANDLE_T, HwiIrqParam *)'
| |-ParmVarDecl 0xb29958 <col:22, col:35> col:35 hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0xb29a48 <col:43, col:56> col:56 irqParam 'HwiIrqParam *'
| `-FullComment 0xb85b00 <line:104:3, line:125:13>
|   |-ParagraphComment 0xb836b0 <line:104:3>
|   | `-TextComment 0xb83680 <col:3> Text=" "
|   |-VerbatimLineComment 0xb836d0 <col:4, col:27> Text="  los_interrupt"
|   |-ParagraphComment 0xb83740 <line:105:3>
|   | `-TextComment 0xb83710 <col:3> Text=" "
|   |-BlockCommandComment 0xb83760 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0xb837c0 <col:10, col:36>
|   |   `-TextComment 0xb83790 <col:10, col:36> Text=" Delete hardware interrupt."
|   |-ParagraphComment 0xb83810 <line:107:3>
|   | `-TextComment 0xb837e0 <col:3> Text=" "
|   |-BlockCommandComment 0xb83830 <col:4, line:108:49> Name="par"
|   | `-ParagraphComment 0xb838b0 <line:107:8, line:108:49>
|   |   |-TextComment 0xb83860 <line:107:8, col:20> Text=" Description:"
|   |   `-TextComment 0xb83880 <line:108:3, col:49> Text=" This API is used to delete hardware interrupt."
|   |-ParagraphComment 0xb83900 <line:110:3>
|   | `-TextComment 0xb838d0 <col:3> Text=" "
|   |-BlockCommandComment 0xb83920 <col:4, line:116:8> Name="attention"
|   | `-ParagraphComment 0xb83d60 <line:111:3, line:116:8>
|   |   |-TextComment 0xb83950 <line:111:3> Text=" "
|   |   |-HTMLStartTagComment 0xb83970 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb839b0 <line:112:3> Text=" "
|   |   |-HTMLStartTagComment 0xb839d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb83a10 <col:8, col:124> Text="The hardware interrupt module is usable only when the configuration item for hardware interrupt tailoring is enabled."
|   |   |-HTMLEndTagComment 0xb83a30 <col:125, col:129> Name="li"
|   |   |-TextComment 0xb83a60 <line:113:3> Text=" "
|   |   |-HTMLStartTagComment 0xb83a80 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb83ac0 <col:8, col:144> Text="Hardware interrupt number value range: [OS_USER_HWI_MIN,OS_USER_HWI_MAX]. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   |-HTMLEndTagComment 0xb83ae0 <col:145, col:149> Name="li"
|   |   |-TextComment 0xb83b10 <line:114:3> Text=" "
|   |   |-HTMLStartTagComment 0xb83b30 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb83b70 <col:8, col:85> Text="OS_HWI_MAX_NUM specifies the maximum number of interrupts that can be created."
|   |   |-HTMLEndTagComment 0xb83b90 <col:86, col:90> Name="li"
|   |   |-TextComment 0xb83bc0 <line:115:3> Text=" "
|   |   |-HTMLStartTagComment 0xb83be0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb83c20 <col:8, col:93> Text="Before executing an interrupt on a platform, refer to the chip manual of the platform."
|   |   |-HTMLEndTagComment 0xb83c40 <col:94, col:98> Name="li"
|   |   |-TextComment 0xb83c70 <line:116:3> Text=" "
|   |   `-HTMLEndTagComment 0xb83c90 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb83db0 <line:118:3>
|   | `-TextComment 0xb83d80 <col:3> Text=" "
|   |-ParamCommandComment 0xb83dd0 <col:4, line:119:3> [in] implicitly Param="hwiNum" ParamIndex=0
|   | `-ParagraphComment 0xb83e80 <line:118:18, line:119:3>
|   |   |-TextComment 0xb83e30 <line:118:18, col:134> Text="   [IN] Type#HWI_HANDLE_T: hardware interrupt number. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   `-TextComment 0xb83e50 <line:119:3> Text=" "
|   |-ParamCommandComment 0xb83ea0 <col:4, line:121:3> [in] implicitly Param="irqParam" ParamIndex=1
|   | `-ParagraphComment 0xb83f80 <line:119:20, line:121:3>
|   |   |-TextComment 0xb83f00 <line:119:20, col:89> Text=" [IN] Type #HwiIrqParam *. ID of hardware interrupt which will base on"
|   |   |-TextComment 0xb83f20 <line:120:3, col:85> Text="                                                when delete the hardware interrupt."
|   |   `-TextComment 0xb83f40 <line:121:3> Text=" "
|   |-BlockCommandComment 0xb83fa0 <col:4, line:122:3> Name="retval"
|   | `-ParagraphComment 0xb84020 <line:121:11, line:122:3>
|   |   |-TextComment 0xb83fd0 <line:121:11, col:87> Text=" #OS_ERRNO_HWI_NUM_INVALID              0x02000900: Invalid interrupt number."
|   |   `-TextComment 0xb83ff0 <line:122:3> Text=" "
|   |-BlockCommandComment 0xb84040 <col:4, line:123:3> Name="retval"
|   | `-ParagraphComment 0xb840c0 <line:122:11, line:123:3>
|   |   |-TextComment 0xb84070 <line:122:11, col:99> Text=" #LOS_OK                                0         : The interrupt is successfully delete."
|   |   `-TextComment 0xb84090 <line:123:3> Text=" "
|   |-BlockCommandComment 0xb840e0 <col:4, line:125:3> Name="par"
|   | `-ParagraphComment 0xb859e0 <line:123:8, line:125:3>
|   |   |-TextComment 0xb84110 <line:123:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb84130 <line:124:3> Text=" "
|   |   |-HTMLStartTagComment 0xb84150 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb84190 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb85900 <col:12, col:78> Text="los_interrupt.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb85920 <col:79, col:83> Name="li"
|   |   |-HTMLEndTagComment 0xb85950 <col:84, col:88> Name="ul"
|   |   `-TextComment 0xb85980 <line:125:3> Text=" "
|   `-BlockCommandComment 0xb85a00 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xb85a60 <col:8, col:13>
|       `-TextComment 0xb85a30 <col:8, col:13> Text=" None."
|-FunctionDecl 0xb2c408 <line:160:1, line:164:43> line:160:8 ArchHwiCreate 'UINT32 (HWI_HANDLE_T, HWI_PRIOR_T, HWI_MODE_T, HWI_PROC_FUNC, HwiIrqParam *)'
| |-ParmVarDecl 0xb29c48 <col:22, col:35> col:35 hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0xb29ce0 <line:161:22, col:34> col:34 hwiPrio 'HWI_PRIOR_T':'unsigned short'
| |-ParmVarDecl 0xb29d80 <line:162:22, col:33> col:33 mode 'HWI_MODE_T':'unsigned short'
| |-ParmVarDecl 0xb29e20 <line:163:22, col:36> col:36 handler 'HWI_PROC_FUNC':'void (*)(void)'
| |-ParmVarDecl 0xb29e98 <line:164:22, col:35> col:35 irqParam 'HwiIrqParam *'
| `-FullComment 0xb86fb0 <line:130:3, line:158:13>
|   |-ParagraphComment 0xb85ba0 <line:130:3>
|   | `-TextComment 0xb85b70 <col:3> Text=" "
|   |-VerbatimLineComment 0xb85bc0 <col:4, col:27> Text="  los_interrupt"
|   |-ParagraphComment 0xb85c30 <line:131:3>
|   | `-TextComment 0xb85c00 <col:3> Text=" "
|   |-BlockCommandComment 0xb85c50 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0xb85cb0 <col:10, col:38>
|   |   `-TextComment 0xb85c80 <col:10, col:38> Text=" Create a hardware interrupt."
|   |-ParagraphComment 0xb85d00 <line:133:3>
|   | `-TextComment 0xb85cd0 <col:3> Text=" "
|   |-BlockCommandComment 0xb85d20 <col:4, line:134:106> Name="par"
|   | `-ParagraphComment 0xb85da0 <line:133:8, line:134:106>
|   |   |-TextComment 0xb85d50 <line:133:8, col:20> Text=" Description:"
|   |   `-TextComment 0xb85d70 <line:134:3, col:106> Text=" This API is used to configure a hardware interrupt and register a hardware interrupt handling function."
|   |-ParagraphComment 0xb85df0 <line:136:3>
|   | `-TextComment 0xb85dc0 <col:3> Text=" "
|   |-BlockCommandComment 0xb85e10 <col:4, line:142:8> Name="attention"
|   | `-ParagraphComment 0xb86250 <line:137:3, line:142:8>
|   |   |-TextComment 0xb85e40 <line:137:3> Text=" "
|   |   |-HTMLStartTagComment 0xb85e60 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb85ea0 <line:138:3> Text=" "
|   |   |-HTMLStartTagComment 0xb85ec0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb85f00 <col:8, col:124> Text="The hardware interrupt module is usable only when the configuration item for hardware interrupt tailoring is enabled."
|   |   |-HTMLEndTagComment 0xb85f20 <col:125, col:129> Name="li"
|   |   |-TextComment 0xb85f50 <line:139:3> Text=" "
|   |   |-HTMLStartTagComment 0xb85f70 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb85fb0 <col:8, col:144> Text="Hardware interrupt number value range: [OS_USER_HWI_MIN,OS_USER_HWI_MAX]. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   |-HTMLEndTagComment 0xb85fd0 <col:145, col:149> Name="li"
|   |   |-TextComment 0xb86000 <line:140:3> Text=" "
|   |   |-HTMLStartTagComment 0xb86020 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb86060 <col:8, col:85> Text="OS_HWI_MAX_NUM specifies the maximum number of interrupts that can be created."
|   |   |-HTMLEndTagComment 0xb86080 <col:86, col:90> Name="li"
|   |   |-TextComment 0xb860b0 <line:141:3> Text=" "
|   |   |-HTMLStartTagComment 0xb860d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb86110 <col:8, col:93> Text="Before executing an interrupt on a platform, refer to the chip manual of the platform."
|   |   |-HTMLEndTagComment 0xb86130 <col:94, col:98> Name="li"
|   |   |-TextComment 0xb86160 <line:142:3> Text=" "
|   |   `-HTMLEndTagComment 0xb86180 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb862a0 <line:144:3>
|   | `-TextComment 0xb86270 <col:3> Text=" "
|   |-ParamCommandComment 0xb862c0 <col:4, line:145:3> [in] implicitly Param="hwiNum" ParamIndex=0
|   | `-ParagraphComment 0xb86370 <line:144:18, line:145:3>
|   |   |-TextComment 0xb86320 <line:144:18, col:134> Text="   [IN] Type#HWI_HANDLE_T: hardware interrupt number. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   `-TextComment 0xb86340 <line:145:3> Text=" "
|   |-ParamCommandComment 0xb86390 <col:4, line:146:3> [in] implicitly Param="hwiPrio" ParamIndex=1
|   | `-ParagraphComment 0xb86440 <line:145:19, line:146:3>
|   |   |-TextComment 0xb863f0 <line:145:19, col:106> Text="  [IN] Type#HWI_PRIOR_T: hardware interrupt priority. Ignore this parameter temporarily."
|   |   `-TextComment 0xb86410 <line:146:3> Text=" "
|   |-ParamCommandComment 0xb86460 <col:4, line:147:3> [in] implicitly Param="mode" ParamIndex=2
|   | `-ParagraphComment 0xb86510 <line:146:16, line:147:3>
|   |   |-TextComment 0xb864c0 <line:146:16, col:101> Text="     [IN] Type#HWI_MODE_T: hardware interrupt mode. Ignore this parameter temporarily."
|   |   `-TextComment 0xb864e0 <line:147:3> Text=" "
|   |-ParamCommandComment 0xb86530 <col:4, line:148:3> [in] implicitly Param="handler" ParamIndex=3
|   | `-ParagraphComment 0xb865e0 <line:147:19, line:148:3>
|   |   |-TextComment 0xb86590 <line:147:19, col:107> Text="  [IN] Type#HWI_PROC_FUNC: interrupt handler used when a hardware interrupt is triggered."
|   |   `-TextComment 0xb865b0 <line:148:3> Text=" "
|   |-ParamCommandComment 0xb86600 <col:4, line:149:95> [in] implicitly Param="irqParam" ParamIndex=4
|   | `-ParagraphComment 0xb866b0 <line:148:20, line:149:95>
|   |   |-TextComment 0xb86660 <line:148:20, col:75> Text=" [IN] Type#HwiIrqParam: input parameter of the interrupt"
|   |   `-TextComment 0xb86680 <line:149:3, col:95> Text="                                         handler used when a hardware interrupt is triggered."
|   |-ParagraphComment 0xb86700 <line:151:3>
|   | `-TextComment 0xb866d0 <col:3> Text=" "
|   |-BlockCommandComment 0xb86720 <col:4, line:152:3> Name="retval"
|   | `-ParagraphComment 0xb867a0 <line:151:11, line:152:3>
|   |   |-TextComment 0xb86750 <line:151:11, col:108> Text=" #OS_ERRNO_HWI_PROC_FUNC_NULL               0x02000901: Null hardware interrupt handling function."
|   |   `-TextComment 0xb86770 <line:152:3> Text=" "
|   |-BlockCommandComment 0xb867c0 <col:4, line:153:3> Name="retval"
|   | `-ParagraphComment 0xb86840 <line:152:11, line:153:3>
|   |   |-TextComment 0xb867f0 <line:152:11, col:91> Text=" #OS_ERRNO_HWI_NUM_INVALID                  0x02000900: Invalid interrupt number."
|   |   `-TextComment 0xb86810 <line:153:3> Text=" "
|   |-BlockCommandComment 0xb86860 <col:4, line:154:3> Name="retval"
|   | `-ParagraphComment 0xb868e0 <line:153:11, line:154:3>
|   |   |-TextComment 0xb86890 <line:153:11, col:118> Text=" #OS_ERRNO_HWI_NO_MEMORY                    0x02000903: Insufficient memory for hardware interrupt creation."
|   |   `-TextComment 0xb868b0 <line:154:3> Text=" "
|   |-BlockCommandComment 0xb86b50 <col:4, line:155:3> Name="retval"
|   | `-ParagraphComment 0xb86bd0 <line:154:11, line:155:3>
|   |   |-TextComment 0xb86b80 <line:154:11, col:127> Text=" #OS_ERRNO_HWI_ALREADY_CREATED              0x02000904: The interrupt handler being created has already been created."
|   |   `-TextComment 0xb86ba0 <line:155:3> Text=" "
|   |-BlockCommandComment 0xb86bf0 <col:4, line:156:3> Name="retval"
|   | `-ParagraphComment 0xb86c70 <line:155:11, line:156:3>
|   |   |-TextComment 0xb86c20 <line:155:11, col:104> Text=" #LOS_OK                                    0         : The interrupt is successfully created."
|   |   `-TextComment 0xb86c40 <line:156:3> Text=" "
|   |-BlockCommandComment 0xb86c90 <col:4, line:158:3> Name="par"
|   | `-ParagraphComment 0xb86e60 <line:156:8, line:158:3>
|   |   |-TextComment 0xb86cc0 <line:156:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb86ce0 <line:157:3> Text=" "
|   |   |-HTMLStartTagComment 0xb86d00 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb86d40 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb86d80 <col:12, col:78> Text="los_interrupt.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb86da0 <col:79, col:83> Name="li"
|   |   |-HTMLEndTagComment 0xb86dd0 <col:84, col:88> Name="ul"
|   |   `-TextComment 0xb86e00 <line:158:3> Text=" "
|   `-BlockCommandComment 0xb86e80 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xb86ee0 <col:8, col:13>
|       `-TextComment 0xb86eb0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xb2c570 <main/los_compiler.h:158:22, main/los_interrupt.h:172:1> line:166:22 ArchIntTrigger 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0xb2c4e0 <col:37, col:50> col:50 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0xb2c978 <line:167:1, line:172:1>
|   |-IfStmt 0xb2c888 <line:168:5, line:170:5>
|   | |-BinaryOperator 0xb2c718 <line:168:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xb2c6e8 <main/los_interrupt.h:168:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0xb2c638 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .triggerIrq 0xb285b0
|   | | |   `-DeclRefExpr 0xb2c618 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xb28f20 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xb2c700 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0xb2c6c8 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xb2c6a0 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xb2c668 <col:31> 'int' 0
|   | `-CompoundStmt 0xb2c870 <main/los_interrupt.h:168:42, line:170:5>
|   |   `-ReturnStmt 0xb2c860 <line:169:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xb2c838 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xb2c818 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xb2c7d0 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xb2c7b0 <col:33> 'int' 1
|   `-ReturnStmt 0xb2c968 <main/los_interrupt.h:171:5, col:42>
|     `-CallExpr 0xb2c928 <col:12, col:42> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0xb2c910 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0xb2c8c0 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .triggerIrq 0xb285b0
|       |   `-DeclRefExpr 0xb2c8a0 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xb28f20 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0xb2c950 <col:36> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0xb2c8f0 <col:36> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0xb2c4e0 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xb2ca38 <main/los_compiler.h:158:22, main/los_interrupt.h:180:1> line:174:22 ArchIntEnable 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0xb2c9a8 <col:36, col:49> col:49 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0xb2cdc8 <line:175:1, line:180:1>
|   |-IfStmt 0xb2ccd8 <line:176:5, line:178:5>
|   | |-BinaryOperator 0xb2cbe0 <line:176:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xb2cbb0 <main/los_interrupt.h:176:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0xb2cb00 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .enableIrq 0xb287b0
|   | | |   `-DeclRefExpr 0xb2cae0 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xb28f20 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xb2cbc8 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0xb2cb90 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xb2cb68 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xb2cb30 <col:31> 'int' 0
|   | `-CompoundStmt 0xb2ccc0 <main/los_interrupt.h:176:41, line:178:5>
|   |   `-ReturnStmt 0xb2ccb0 <line:177:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xb2cc88 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xb2cc68 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xb2cc20 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xb2cc00 <col:33> 'int' 1
|   `-ReturnStmt 0xb2cdb8 <main/los_interrupt.h:179:5, col:41>
|     `-CallExpr 0xb2cd78 <col:12, col:41> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0xb2cd60 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0xb2cd10 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .enableIrq 0xb287b0
|       |   `-DeclRefExpr 0xb2ccf0 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xb28f20 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0xb2cda0 <col:35> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0xb2cd40 <col:35> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0xb2c9a8 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xb2ce88 <main/los_compiler.h:158:22, main/los_interrupt.h:188:1> line:182:22 ArchIntDisable 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0xb2cdf8 <col:37, col:50> col:50 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0xb2d218 <line:183:1, line:188:1>
|   |-IfStmt 0xb2d128 <line:184:5, line:186:5>
|   | |-BinaryOperator 0xb2d030 <line:184:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xb2d000 <main/los_interrupt.h:184:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0xb2cf50 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .disableIrq 0xb288b0
|   | | |   `-DeclRefExpr 0xb2cf30 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xb28f20 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xb2d018 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0xb2cfe0 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xb2cfb8 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xb2cf80 <col:31> 'int' 0
|   | `-CompoundStmt 0xb2d110 <main/los_interrupt.h:184:42, line:186:5>
|   |   `-ReturnStmt 0xb2d100 <line:185:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xb2d0d8 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xb2d0b8 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xb2d070 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xb2d050 <col:33> 'int' 1
|   `-ReturnStmt 0xb2d208 <main/los_interrupt.h:187:5, col:42>
|     `-CallExpr 0xb2d1c8 <col:12, col:42> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0xb2d1b0 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0xb2d160 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .disableIrq 0xb288b0
|       |   `-DeclRefExpr 0xb2d140 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xb28f20 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0xb2d1f0 <col:36> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0xb2d190 <col:36> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0xb2cdf8 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xb2d330 <main/los_compiler.h:158:22, main/los_interrupt.h:196:1> line:190:22 ArchIntClear 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0xb2d248 <col:35, col:48> col:48 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0xb2d6c0 <line:191:1, line:196:1>
|   |-IfStmt 0xb2d5d0 <line:192:5, line:194:5>
|   | |-BinaryOperator 0xb2d4d8 <line:192:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xb2d4a8 <main/los_interrupt.h:192:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0xb2d3f8 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .clearIrq 0xb286b0
|   | | |   `-DeclRefExpr 0xb2d3d8 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xb28f20 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xb2d4c0 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0xb2d488 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xb2d460 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xb2d428 <col:31> 'int' 0
|   | `-CompoundStmt 0xb2d5b8 <main/los_interrupt.h:192:40, line:194:5>
|   |   `-ReturnStmt 0xb2d5a8 <line:193:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xb2d580 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xb2d560 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xb2d518 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xb2d4f8 <col:33> 'int' 1
|   `-ReturnStmt 0xb2d6b0 <main/los_interrupt.h:195:5, col:40>
|     `-CallExpr 0xb2d670 <col:12, col:40> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0xb2d658 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0xb2d608 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .clearIrq 0xb286b0
|       |   `-DeclRefExpr 0xb2d5e8 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xb28f20 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0xb2d698 <col:34> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0xb2d638 <col:34> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0xb2d248 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xb2d878 <main/los_compiler.h:158:22, main/los_interrupt.h:204:1> line:198:22 ArchIntSetPriority 'UINT32 (HWI_HANDLE_T, HWI_PRIOR_T)' static inline
| |-ParmVarDecl 0xb2d6f0 <col:41, col:54> col:54 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0xb2d768 <col:62, col:74> col:74 used priority 'HWI_PRIOR_T':'unsigned short'
| `-CompoundStmt 0xb2dc68 <line:199:1, line:204:1>
|   |-IfStmt 0xb2db20 <line:200:5, line:202:5>
|   | |-BinaryOperator 0xb2da28 <line:200:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xb2d9f8 <main/los_interrupt.h:200:9, col:22> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <LValueToRValue>
|   | | | `-MemberExpr 0xb2d948 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' lvalue .setIrqPriority 0xb28b38
|   | | |   `-DeclRefExpr 0xb2d928 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xb28f20 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xb2da10 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <BitCast>
|   | |   `-ParenExpr 0xb2d9d8 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xb2d9b0 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xb2d978 <col:31> 'int' 0
|   | `-CompoundStmt 0xb2db08 <main/los_interrupt.h:200:46, line:202:5>
|   |   `-ReturnStmt 0xb2daf8 <line:201:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xb2dad0 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xb2dab0 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xb2da68 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xb2da48 <col:33> 'int' 1
|   `-ReturnStmt 0xb2dc58 <main/los_interrupt.h:203:5, col:56>
|     `-CallExpr 0xb2dbe0 <col:12, col:56> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0xb2dbc8 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <LValueToRValue>
|       | `-MemberExpr 0xb2db58 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' lvalue .setIrqPriority 0xb28b38
|       |   `-DeclRefExpr 0xb2db38 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xb28f20 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       |-ImplicitCastExpr 0xb2dc10 <col:40> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0xb2db88 <col:40> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0xb2d6f0 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|       `-ImplicitCastExpr 0xb2dc40 <col:48> 'UINT8':'unsigned char' <IntegralCast>
|         `-ImplicitCastExpr 0xb2dc28 <col:48> 'HWI_PRIOR_T':'unsigned short' <LValueToRValue>
|           `-DeclRefExpr 0xb2dba8 <col:48> 'HWI_PRIOR_T':'unsigned short' lvalue ParmVar 0xb2d768 'priority' 'HWI_PRIOR_T':'unsigned short'
|-FunctionDecl 0xb2dd20 <main/los_compiler.h:158:22, main/los_interrupt.h:212:1> line:206:22 ArchIntCurIrqNum 'UINT32 (void)' static inline
| `-CompoundStmt 0xb2e068 <line:207:1, line:212:1>
|   |-IfStmt 0xb2dfb8 <line:208:5, line:210:5>
|   | |-BinaryOperator 0xb2dec0 <line:208:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xb2de90 <main/los_interrupt.h:208:9, col:22> 'UINT32 (*)(void)' <LValueToRValue>
|   | | | `-MemberExpr 0xb2dde0 <col:9, col:22> 'UINT32 (*)(void)' lvalue .getCurIrqNum 0xb28d18
|   | | |   `-DeclRefExpr 0xb2ddc0 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xb28f20 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xb2dea8 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(void)' <BitCast>
|   | |   `-ParenExpr 0xb2de70 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xb2de48 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xb2de10 <col:31> 'int' 0
|   | `-CompoundStmt 0xb2dfa0 <main/los_interrupt.h:208:44, line:210:5>
|   |   `-ReturnStmt 0xb2df90 <line:209:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xb2df68 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xb2df48 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xb2df00 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xb2dee0 <col:33> 'int' 1
|   `-ReturnStmt 0xb2e058 <main/los_interrupt.h:211:5, col:38>
|     `-CallExpr 0xb2e038 <col:12, col:38> 'UINT32':'unsigned int'
|       `-ImplicitCastExpr 0xb2e020 <col:12, col:25> 'UINT32 (*)(void)' <LValueToRValue>
|         `-MemberExpr 0xb2dff0 <col:12, col:25> 'UINT32 (*)(void)' lvalue .getCurIrqNum 0xb28d18
|           `-DeclRefExpr 0xb2dfd0 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xb28f20 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|-FunctionDecl 0xb2e1d8 <main/los_compiler.h:158:22, main/los_interrupt.h:217:1> line:214:33 ArchIntOpsGet 'HwiControllerOps *(void)' static inline
| `-CompoundStmt 0xb2f9d8 <line:215:1, line:217:1>
|   `-ReturnStmt 0xb2e2b0 <line:216:5, col:13>
|     `-UnaryOperator 0xb2e298 <col:12, col:13> 'HwiControllerOps *' prefix '&' cannot overflow
|       `-DeclRefExpr 0xb2e278 <col:13> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xb28f20 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|-FunctionDecl 0xb2fc20 <main/los_compiler.h:327:23, main/los_context.h:68:71> col:7 ArchTskStackInit 'void *(UINT32, UINT32, void *)'
| |-ParmVarDecl 0xb2fa00 <col:24, col:31> col:31 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb2fa78 <col:39, col:46> col:46 stackSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb2faf8 <main/los_compiler.h:327:23, main/los_context.h:68:63> col:63 topStack 'void *'
| `-FullComment 0xb87b00 <line:50:3, line:66:13>
|   |-ParagraphComment 0xb87050 <line:50:3>
|   | `-TextComment 0xb87020 <col:3> Text=" "
|   |-VerbatimLineComment 0xb87070 <col:4, col:25> Text="  los_context"
|   |-ParagraphComment 0xb870e0 <line:51:3>
|   | `-TextComment 0xb870b0 <col:3> Text=" "
|   |-BlockCommandComment 0xb87100 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0xb87160 <col:10, col:37>
|   |   `-TextComment 0xb87130 <col:10, col:37> Text=": Task stack initialization."
|   |-ParagraphComment 0xb871b0 <line:53:3>
|   | `-TextComment 0xb87180 <col:3> Text=" "
|   |-BlockCommandComment 0xb871d0 <col:4, line:54:49> Name="par"
|   | `-ParagraphComment 0xb87250 <line:53:8, line:54:49>
|   |   |-TextComment 0xb87200 <line:53:8, col:20> Text=" Description:"
|   |   `-TextComment 0xb87220 <line:54:3, col:49> Text=" This API is used to initialize the task stack."
|   |-ParagraphComment 0xb872a0 <line:56:3>
|   | `-TextComment 0xb87270 <col:3> Text=" "
|   |-BlockCommandComment 0xb872c0 <col:4, line:57:26> Name="attention"
|   | `-ParagraphComment 0xb87460 <line:56:14, line:57:26>
|   |   |-TextComment 0xb872f0 <line:56:14> Text=":"
|   |   |-TextComment 0xb87310 <line:57:3> Text=" "
|   |   |-HTMLStartTagComment 0xb87330 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb87370 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb873b0 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0xb873d0 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0xb87400 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0xb874b0 <line:59:3>
|   | `-TextComment 0xb87480 <col:3> Text=" "
|   |-ParamCommandComment 0xb874d0 <col:4, line:60:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xb87580 <line:59:18, line:60:3>
|   |   |-TextComment 0xb87530 <line:59:18, col:47> Text="     [IN] Type#UINT32: TaskID."
|   |   `-TextComment 0xb87550 <line:60:3> Text=" "
|   |-ParamCommandComment 0xb875a0 <col:4, line:61:3> [in] implicitly Param="stackSize" ParamIndex=1
|   | `-ParagraphComment 0xb87650 <line:60:21, line:61:3>
|   |   |-TextComment 0xb87600 <line:60:21, col:64> Text="  [IN] Type#UINT32: Total size of the stack."
|   |   `-TextComment 0xb87620 <line:61:3> Text=" "
|   |-ParamCommandComment 0xb87670 <col:4, col:60> [in] implicitly Param="topStack" ParamIndex=2
|   | `-ParagraphComment 0xb87700 <col:20, col:60>
|   |   `-TextComment 0xb876d0 <col:20, col:60> Text="   [IN] Type#VOID *: Top of task's stack."
|   |-ParagraphComment 0xb87750 <line:63:3>
|   | `-TextComment 0xb87720 <col:3> Text=" "
|   |-BlockCommandComment 0xb87770 <col:4, line:64:3> Name="retval"
|   | `-ParagraphComment 0xb877f0 <line:63:11, line:64:3>
|   |   |-TextComment 0xb877a0 <line:63:11, col:39> Text=": context Type#TaskContext *."
|   |   `-TextComment 0xb877c0 <line:64:3> Text=" "
|   |-BlockCommandComment 0xb87810 <col:4, line:66:3> Name="par"
|   | `-ParagraphComment 0xb879e0 <line:64:8, line:66:3>
|   |   |-TextComment 0xb87840 <line:64:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb87860 <line:65:3> Text=" "
|   |   |-HTMLStartTagComment 0xb87880 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb878c0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb87900 <col:12, col:76> Text="los_context.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb87920 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0xb87950 <col:82, col:86> Name="ul"
|   |   `-TextComment 0xb87980 <line:66:3> Text=" "
|   `-BlockCommandComment 0xb87a00 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xb87a60 <col:8, col:13>
|       `-TextComment 0xb87a30 <col:8, col:13> Text=" None."
|-FunctionDecl 0xb2fd70 <main/los_compiler.h:327:23, main/los_context.h:69:34> col:6 HalIrqEndCheckNeedSched 'void (void)'
|-FunctionDecl 0xb2fea8 <main/los_compiler.h:327:23, main/los_context.h:70:35> col:6 EnableExceptionInterface 'void (void)'
|-FunctionDecl 0xb2ffe0 <main/los_compiler.h:327:23, main/los_context.h:71:31> col:6 HalTaskContextSwitch 'void (void)'
|-FunctionDecl 0xb30168 <main/los_compiler.h:146:23, main/los_context.h:89:54> col:38 ArchSysExit 'void (void) __attribute__((noreturn))'
| `-FullComment 0xb884a0 <line:73:3, line:87:13>
|   |-ParagraphComment 0xb87bd0 <line:73:3>
|   | `-TextComment 0xb87ba0 <col:3> Text=" "
|   |-VerbatimLineComment 0xb87bf0 <col:4, col:25> Text="  los_context"
|   |-ParagraphComment 0xb87c60 <line:74:3>
|   | `-TextComment 0xb87c30 <col:3> Text=" "
|   |-BlockCommandComment 0xb87c80 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0xb87ce0 <col:10, col:32>
|   |   `-TextComment 0xb87cb0 <col:10, col:32> Text=": Function to sys exit."
|   |-ParagraphComment 0xb87d30 <line:76:3>
|   | `-TextComment 0xb87d00 <col:3> Text=" "
|   |-BlockCommandComment 0xb87d50 <col:4, line:77:32> Name="par"
|   | `-ParagraphComment 0xb87dd0 <line:76:8, line:77:32>
|   |   |-TextComment 0xb87d80 <line:76:8, col:20> Text=" Description:"
|   |   `-TextComment 0xb87da0 <line:77:3, col:32> Text=" This API is used to sys exit."
|   |-ParagraphComment 0xb87e20 <line:79:3>
|   | `-TextComment 0xb87df0 <col:3> Text=" "
|   |-BlockCommandComment 0xb87e40 <col:4, line:80:26> Name="attention"
|   | `-ParagraphComment 0xb87fe0 <line:79:14, line:80:26>
|   |   |-TextComment 0xb87e70 <line:79:14> Text=":"
|   |   |-TextComment 0xb87e90 <line:80:3> Text=" "
|   |   |-HTMLStartTagComment 0xb87eb0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb87ef0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb87f30 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0xb87f50 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0xb87f80 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0xb88030 <line:82:3>
|   | `-TextComment 0xb88000 <col:3> Text=" "
|   |-ParamCommandComment 0xb88050 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xb880b0 <<invalid sloc>>
|   |-ParagraphComment 0xb88100 <line:84:3>
|   | `-TextComment 0xb880d0 <col:3> Text=" "
|   |-BlockCommandComment 0xb88120 <col:4, line:85:3> Name="retval"
|   | `-ParagraphComment 0xb881a0 <line:84:11, line:85:3>
|   |   |-TextComment 0xb88150 <line:84:11, col:17> Text=": None."
|   |   `-TextComment 0xb88170 <line:85:3> Text=" "
|   |-BlockCommandComment 0xb881c0 <col:4, line:87:3> Name="par"
|   | `-ParagraphComment 0xb88390 <line:85:8, line:87:3>
|   |   |-TextComment 0xb881f0 <line:85:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb88210 <line:86:3> Text=" "
|   |   |-HTMLStartTagComment 0xb88230 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb88270 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb882b0 <col:12, col:76> Text="los_context.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb882d0 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0xb88300 <col:82, col:86> Name="ul"
|   |   `-TextComment 0xb88330 <line:87:3> Text=" "
|   `-BlockCommandComment 0xb883b0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xb88410 <col:8, col:13>
|       `-TextComment 0xb883e0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xb302d0 <main/los_compiler.h:327:23, main/los_context.h:108:27> col:6 ArchTaskSchedule 'void (void)'
| `-FullComment 0xb88e20 <line:92:3, line:106:13>
|   |-ParagraphComment 0xb88540 <line:92:3>
|   | `-TextComment 0xb88510 <col:3> Text=" "
|   |-VerbatimLineComment 0xb88560 <col:4, col:25> Text="  los_context"
|   |-ParagraphComment 0xb885d0 <line:93:3>
|   | `-TextComment 0xb885a0 <col:3> Text=" "
|   |-BlockCommandComment 0xb885f0 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0xb88650 <col:10, col:36>
|   |   `-TextComment 0xb88620 <col:10, col:36> Text=": Task scheduling Function."
|   |-ParagraphComment 0xb886a0 <line:95:3>
|   | `-TextComment 0xb88670 <col:3> Text=" "
|   |-BlockCommandComment 0xb886c0 <col:4, line:96:39> Name="par"
|   | `-ParagraphComment 0xb88740 <line:95:8, line:96:39>
|   |   |-TextComment 0xb886f0 <line:95:8, col:20> Text=" Description:"
|   |   `-TextComment 0xb88710 <line:96:3, col:39> Text=" This API is used to scheduling task."
|   |-ParagraphComment 0xb88790 <line:98:3>
|   | `-TextComment 0xb88760 <col:3> Text=" "
|   |-BlockCommandComment 0xb887b0 <col:4, line:99:26> Name="attention"
|   | `-ParagraphComment 0xb88950 <line:98:14, line:99:26>
|   |   |-TextComment 0xb887e0 <line:98:14> Text=":"
|   |   |-TextComment 0xb88800 <line:99:3> Text=" "
|   |   |-HTMLStartTagComment 0xb88820 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb88860 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb888a0 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0xb888c0 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0xb888f0 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0xb889a0 <line:101:3>
|   | `-TextComment 0xb88970 <col:3> Text=" "
|   |-ParamCommandComment 0xb889c0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xb88a20 <<invalid sloc>>
|   |-ParagraphComment 0xb88a70 <line:103:3>
|   | `-TextComment 0xb88a40 <col:3> Text=" "
|   |-BlockCommandComment 0xb88a90 <col:4, line:104:3> Name="retval"
|   | `-ParagraphComment 0xb88b10 <line:103:11, line:104:3>
|   |   |-TextComment 0xb88ac0 <line:103:11, col:17> Text=": None."
|   |   `-TextComment 0xb88ae0 <line:104:3> Text=" "
|   |-BlockCommandComment 0xb88b30 <col:4, line:106:3> Name="par"
|   | `-ParagraphComment 0xb88d10 <line:104:8, line:106:3>
|   |   |-TextComment 0xb88b70 <line:104:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb88b90 <line:105:3> Text=" "
|   |   |-HTMLStartTagComment 0xb88bb0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb88bf0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb88c30 <col:12, col:76> Text="los_context.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb88c50 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0xb88c80 <col:82, col:86> Name="ul"
|   |   `-TextComment 0xb88cb0 <line:106:3> Text=" "
|   `-BlockCommandComment 0xb88d30 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xb88d90 <col:8, col:13>
|       `-TextComment 0xb88d60 <col:8, col:13> Text=" None."
|-FunctionDecl 0xb30408 <line:110:1, col:30> col:8 ArchStartSchedule 'UINT32 (void)'
|-FunctionDecl 0xb30780 <main/los_compiler.h:327:23, main/los_context.h:111:97> col:7 ArchSignalContextInit 'void *(void *, void *, UINTPTR, UINT32)'
| |-ParmVarDecl 0xb304c0 <main/los_compiler.h:327:23, main/los_context.h:111:35> col:35 stackPointer 'void *'
| |-ParmVarDecl 0xb30540 <main/los_compiler.h:327:23, main/los_context.h:111:55> col:55 stackTop 'void *'
| |-ParmVarDecl 0xb305b8 <col:65, col:73> col:73 sigHandler 'UINTPTR':'unsigned int'
| `-ParmVarDecl 0xb30630 <col:85, col:92> col:92 param 'UINT32':'unsigned int'
|-RecordDecl 0xb308c8 <main/los_list.h:52:9, line:55:1> line:52:16 struct LOS_DL_LIST definition
| |-FullComment 0xb88f90 <line:49:3, line:50:47>
| | |-ParagraphComment 0xb88ec0 <line:49:3>
| | | `-TextComment 0xb88e90 <col:3> Text=" "
| | |-VerbatimLineComment 0xb88ee0 <col:4, col:21> Text=" los_list"
| | `-ParagraphComment 0xb88f50 <line:50:3, col:47>
| |   `-TextComment 0xb88f20 <col:3, col:47> Text=" Structure of a node in a doubly linked list."
| |-FieldDecl 0xb3a6a0 <line:53:5, col:25> col:25 referenced pstPrev 'struct LOS_DL_LIST *'
| | `-FullComment 0xb89060 <col:38, col:82>
| |   `-ParagraphComment 0xb89030 <col:38, col:82>
| |     `-TextComment 0xb89000 <col:38, col:82> Text=" Current node's pointer to the previous node "
| `-FieldDecl 0xb3a740 <line:54:5, col:25> col:25 referenced pstNext 'struct LOS_DL_LIST *'
|   `-FullComment 0xb89130 <col:38, col:78>
|     `-ParagraphComment 0xb89100 <col:38, col:78>
|       `-TextComment 0xb890d0 <col:38, col:78> Text=" Current node's pointer to the next node "
|-TypedefDecl 0xb3a818 <line:52:1, line:55:3> col:3 referenced LOS_DL_LIST 'struct LOS_DL_LIST':'struct LOS_DL_LIST'
| |-ElaboratedType 0xb3a7c0 'struct LOS_DL_LIST' sugar
| | `-RecordType 0xb30950 'struct LOS_DL_LIST'
| |   `-Record 0xb308c8 'LOS_DL_LIST'
| `-FullComment 0xb892a0 <line:49:3, line:50:47>
|   |-ParagraphComment 0xb891d0 <line:49:3>
|   | `-TextComment 0xb891a0 <col:3> Text=" "
|   |-VerbatimLineComment 0xb891f0 <col:4, col:21> Text=" los_list"
|   `-ParagraphComment 0xb89260 <line:50:3, col:47>
|     `-TextComment 0xb89230 <col:3, col:47> Text=" Structure of a node in a doubly linked list."
|-FunctionDecl 0xb3a9f8 <main/los_compiler.h:130:23, main/los_list.h:79:1> line:75:43 used LOS_ListInit 'void (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xb3a908 <col:56, col:69> col:69 used list 'LOS_DL_LIST *'
| |-CompoundStmt 0xb3ac78 <line:76:1, line:79:1>
| | |-BinaryOperator 0xb3ab40 <line:77:5, col:21> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xb3aad8 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xb3a740
| | | | `-ImplicitCastExpr 0xb3aac0 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0xb3aaa0 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xb3a908 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xb3ab28 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| | |   `-DeclRefExpr 0xb3ab08 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0xb3a908 'list' 'LOS_DL_LIST *'
| | `-BinaryOperator 0xb3ac00 <line:78:5, col:21> 'struct LOS_DL_LIST *' '='
| |   |-MemberExpr 0xb3ab98 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xb3a6a0
| |   | `-ImplicitCastExpr 0xb3ab80 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| |   |   `-DeclRefExpr 0xb3ab60 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xb3a908 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0xb3abe8 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0xb3abc8 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0xb3a908 'list' 'LOS_DL_LIST *'
| `-FullComment 0xb89c40 <line:58:3, line:73:7>
|   |-ParagraphComment 0xb89340 <line:58:3>
|   | `-TextComment 0xb89310 <col:3> Text=" "
|   |-VerbatimLineComment 0xb89360 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xb893d0 <line:59:3>
|   | `-TextComment 0xb893a0 <col:3> Text=" "
|   |-BlockCommandComment 0xb893f0 <col:4, col:42> Name="brief"
|   | `-ParagraphComment 0xb89450 <col:10, col:42>
|   |   `-TextComment 0xb89420 <col:10, col:42> Text=" Initialize a doubly linked list."
|   |-ParagraphComment 0xb894a0 <line:61:3>
|   | `-TextComment 0xb89470 <col:3> Text=" "
|   |-BlockCommandComment 0xb894c0 <col:4, line:63:3> Name="par"
|   | `-ParagraphComment 0xb89570 <line:61:8, line:63:3>
|   |   |-TextComment 0xb894f0 <line:61:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb89510 <line:62:3, col:55> Text=" This API is used to initialize a doubly linked list."
|   |   `-TextComment 0xb89530 <line:63:3> Text=" "
|   |-BlockCommandComment 0xb89590 <col:4, line:66:8> Name="attention"
|   | `-ParagraphComment 0xb89760 <line:64:3, line:66:8>
|   |   |-TextComment 0xb895c0 <line:64:3> Text=" "
|   |   |-HTMLStartTagComment 0xb895e0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb89620 <line:65:3> Text=" "
|   |   |-HTMLStartTagComment 0xb89640 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb89680 <col:8, col:71> Text="The parameter passed in should be ensured to be a legal pointer."
|   |   |-HTMLEndTagComment 0xb896a0 <col:72, col:76> Name="li"
|   |   |-TextComment 0xb896d0 <line:66:3> Text=" "
|   |   `-HTMLEndTagComment 0xb896f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb897b0 <line:68:3>
|   | `-TextComment 0xb89780 <col:3> Text=" "
|   |-ParamCommandComment 0xb897d0 <col:4, col:52> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0xb89860 <col:15, col:52>
|   |   `-TextComment 0xb89830 <col:15, col:52> Text="    [IN] Node in a doubly linked list."
|   |-ParagraphComment 0xb898b0 <line:70:3>
|   | `-TextComment 0xb89880 <col:3> Text=" "
|   |-BlockCommandComment 0xb898d0 <col:4, line:71:3> Name="retval"
|   | `-ParagraphComment 0xb89950 <line:70:11, line:71:3>
|   |   |-TextComment 0xb89900 <line:70:11, col:16> Text=" None."
|   |   `-TextComment 0xb89920 <line:71:3> Text=" "
|   |-BlockCommandComment 0xb89970 <col:4, line:73:3> Name="par"
|   | `-ParagraphComment 0xb89b40 <line:71:8, line:73:3>
|   |   |-TextComment 0xb899a0 <line:71:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb899c0 <line:72:3> Text=" "
|   |   |-HTMLStartTagComment 0xb899e0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb89a20 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb89a60 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb89a80 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb89ab0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb89ae0 <line:73:3> Text=" "
|   `-BlockCommandComment 0xb89b80 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xb89bb0 <<invalid sloc>>
|-FunctionDecl 0xb3ae38 <main/los_compiler.h:130:23, main/los_list.h:128:1> line:122:43 used LOS_ListAdd 'void (LOS_DL_LIST *, LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xb3aca8 <col:55, col:68> col:68 used list 'LOS_DL_LIST *'
| |-ParmVarDecl 0xb3ad20 <col:74, col:87> col:87 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0xb3b2a8 <line:123:1, line:128:1>
| | |-BinaryOperator 0xb3afd0 <line:124:5, col:27> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xb3af20 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xb3a740
| | | | `-ImplicitCastExpr 0xb3af08 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0xb3aee8 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xb3ad20 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xb3afb8 <col:21, col:27> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0xb3af88 <col:21, col:27> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xb3a740
| | |     `-ImplicitCastExpr 0xb3af70 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0xb3af50 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0xb3aca8 'list' 'LOS_DL_LIST *'
| | |-BinaryOperator 0xb3b090 <line:125:5, col:21> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xb3b028 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xb3a6a0
| | | | `-ImplicitCastExpr 0xb3b010 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0xb3aff0 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xb3ad20 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xb3b078 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| | |   `-DeclRefExpr 0xb3b058 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0xb3aca8 'list' 'LOS_DL_LIST *'
| | |-BinaryOperator 0xb3b198 <line:126:5, col:30> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xb3b130 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xb3a6a0
| | | | `-ImplicitCastExpr 0xb3b118 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0xb3b0e8 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xb3a740
| | | |     `-ImplicitCastExpr 0xb3b0d0 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0xb3b0b0 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xb3aca8 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xb3b180 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |   `-DeclRefExpr 0xb3b160 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0xb3ad20 'node' 'LOS_DL_LIST *'
| | `-BinaryOperator 0xb3b258 <line:127:5, col:21> 'struct LOS_DL_LIST *' '='
| |   |-MemberExpr 0xb3b1f0 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xb3a740
| |   | `-ImplicitCastExpr 0xb3b1d8 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| |   |   `-DeclRefExpr 0xb3b1b8 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xb3aca8 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0xb3b240 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0xb3b220 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0xb3ad20 'node' 'LOS_DL_LIST *'
| `-FullComment 0xb8a6c0 <line:104:3, line:120:22>
|   |-ParagraphComment 0xb89ce0 <line:104:3>
|   | `-TextComment 0xb89cb0 <col:3> Text=" "
|   |-VerbatimLineComment 0xb89d00 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xb89d70 <line:105:3>
|   | `-TextComment 0xb89d40 <col:3> Text=" "
|   |-BlockCommandComment 0xb89d90 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0xb89df0 <col:10, col:52>
|   |   `-TextComment 0xb89dc0 <col:10, col:52> Text=" Insert a new node to a doubly linked list."
|   |-ParagraphComment 0xb89e40 <line:107:3>
|   | `-TextComment 0xb89e10 <col:3> Text=" "
|   |-BlockCommandComment 0xb89e60 <col:4, line:109:3> Name="par"
|   | `-ParagraphComment 0xb89f10 <line:107:8, line:109:3>
|   |   |-TextComment 0xb89e90 <line:107:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb89eb0 <line:108:3, col:65> Text=" This API is used to insert a new node to a doubly linked list."
|   |   `-TextComment 0xb89ed0 <line:109:3> Text=" "
|   |-BlockCommandComment 0xb89f30 <col:4, line:112:8> Name="attention"
|   | `-ParagraphComment 0xb8a100 <line:110:3, line:112:8>
|   |   |-TextComment 0xb89f60 <line:110:3> Text=" "
|   |   |-HTMLStartTagComment 0xb89f80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb89fc0 <line:111:3> Text=" "
|   |   |-HTMLStartTagComment 0xb89fe0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb8a020 <col:8, col:71> Text="The parameters passed in should be ensured to be legal pointers."
|   |   |-HTMLEndTagComment 0xb8a040 <col:72, col:76> Name="li"
|   |   |-TextComment 0xb8a070 <line:112:3> Text=" "
|   |   `-HTMLEndTagComment 0xb8a090 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb8a150 <line:114:3>
|   | `-TextComment 0xb8a120 <col:3> Text=" "
|   |-ParamCommandComment 0xb8a170 <col:4, line:115:3> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0xb8a220 <line:114:15, line:115:3>
|   |   |-TextComment 0xb8a1d0 <line:114:15, col:75> Text="    [IN]   Doubly linked list where the new node is inserted."
|   |   `-TextComment 0xb8a1f0 <line:115:3> Text=" "
|   |-ParamCommandComment 0xb8a240 <col:4, col:49> [in] implicitly Param="node" ParamIndex=1
|   | `-ParagraphComment 0xb8a2d0 <col:15, col:49>
|   |   `-TextComment 0xb8a2a0 <col:15, col:49> Text="    [IN]   New node to be inserted."
|   |-ParagraphComment 0xb8a320 <line:117:3>
|   | `-TextComment 0xb8a2f0 <col:3> Text=" "
|   |-BlockCommandComment 0xb8a340 <col:4, line:118:3> Name="retval"
|   | `-ParagraphComment 0xb8a3c0 <line:117:11, line:118:3>
|   |   |-TextComment 0xb8a370 <line:117:11, col:15> Text=" None"
|   |   `-TextComment 0xb8a390 <line:118:3> Text=" "
|   |-BlockCommandComment 0xb8a3e0 <col:4, line:120:3> Name="par"
|   | `-ParagraphComment 0xb8a5b0 <line:118:8, line:120:3>
|   |   |-TextComment 0xb8a410 <line:118:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb8a430 <line:119:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8a450 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb8a490 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb8a4d0 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb8a4f0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb8a520 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb8a550 <line:120:3> Text=" "
|   `-BlockCommandComment 0xb8a5d0 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xb8a630 <col:8, col:22>
|       `-TextComment 0xb8a600 <col:8, col:22> Text=" LOS_ListDelete"
|-FunctionDecl 0xb3b3f8 <main/los_compiler.h:130:23, main/los_list.h:152:1> line:149:43 LOS_ListTailInsert 'void (LOS_DL_LIST *, LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xb3b2e8 <col:62, col:75> col:75 used list 'LOS_DL_LIST *'
| |-ParmVarDecl 0xb3b360 <col:81, col:94> col:94 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0xb3f7e8 <line:150:1, line:152:1>
| | `-CallExpr 0xb3b5c0 <line:151:5, col:36> 'void'
| |   |-ImplicitCastExpr 0xb3b5a8 <col:5> 'void (*)(LOS_DL_LIST *, LOS_DL_LIST *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0xb3b4a8 <col:5> 'void (LOS_DL_LIST *, LOS_DL_LIST *)' Function 0xb3ae38 'LOS_ListAdd' 'void (LOS_DL_LIST *, LOS_DL_LIST *)'
| |   |-ImplicitCastExpr 0xb3b5f0 <col:17, col:23> 'struct LOS_DL_LIST *' <LValueToRValue>
| |   | `-MemberExpr 0xb3b500 <col:17, col:23> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xb3a6a0
| |   |   `-ImplicitCastExpr 0xb3b4e8 <col:17> 'LOS_DL_LIST *' <LValueToRValue>
| |   |     `-DeclRefExpr 0xb3b4c8 <col:17> 'LOS_DL_LIST *' lvalue ParmVar 0xb3b2e8 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0xb3b608 <col:32> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0xb3b530 <col:32> 'LOS_DL_LIST *' lvalue ParmVar 0xb3b360 'node' 'LOS_DL_LIST *'
| `-FullComment 0xb8b150 <line:131:3, line:147:40>
|   |-ParagraphComment 0xb8a760 <line:131:3>
|   | `-TextComment 0xb8a730 <col:3> Text=" "
|   |-VerbatimLineComment 0xb8a780 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xb8a7f0 <line:132:3>
|   | `-TextComment 0xb8a7c0 <col:3> Text=" "
|   |-BlockCommandComment 0xb8a810 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0xb8a870 <col:10, col:60>
|   |   `-TextComment 0xb8a840 <col:10, col:60> Text=" Insert a node to the tail of a doubly linked list."
|   |-ParagraphComment 0xb8a8c0 <line:134:3>
|   | `-TextComment 0xb8a890 <col:3> Text=" "
|   |-BlockCommandComment 0xb8a8e0 <col:4, line:136:3> Name="par"
|   | `-ParagraphComment 0xb8a990 <line:134:8, line:136:3>
|   |   |-TextComment 0xb8a910 <line:134:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb8a930 <line:135:3, col:77> Text=" This API is used to insert a new node to the tail of a doubly linked list."
|   |   `-TextComment 0xb8a950 <line:136:3> Text=" "
|   |-BlockCommandComment 0xb8a9b0 <col:4, line:139:8> Name="attention"
|   | `-ParagraphComment 0xb8ab90 <line:137:3, line:139:8>
|   |   |-TextComment 0xb8a9e0 <line:137:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8aa00 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb8aa40 <line:138:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8aa60 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb8aaa0 <col:8, col:71> Text="The parameters passed in should be ensured to be legal pointers."
|   |   |-HTMLEndTagComment 0xb8aac0 <col:72, col:76> Name="li"
|   |   |-TextComment 0xb8aaf0 <line:139:3> Text=" "
|   |   `-HTMLEndTagComment 0xb8ab10 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb8abe0 <line:141:3>
|   | `-TextComment 0xb8abb0 <col:3> Text=" "
|   |-ParamCommandComment 0xb8ac00 <col:4, line:142:3> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0xb8acb0 <line:141:15, line:142:3>
|   |   |-TextComment 0xb8ac60 <line:141:15, col:74> Text="     [IN] Doubly linked list where the new node is inserted."
|   |   `-TextComment 0xb8ac80 <line:142:3> Text=" "
|   |-ParamCommandComment 0xb8acd0 <col:4, col:48> [in] implicitly Param="node" ParamIndex=1
|   | `-ParagraphComment 0xb8ad60 <col:15, col:48>
|   |   `-TextComment 0xb8ad30 <col:15, col:48> Text="     [IN] New node to be inserted."
|   |-ParagraphComment 0xb8adb0 <line:144:3>
|   | `-TextComment 0xb8ad80 <col:3> Text=" "
|   |-BlockCommandComment 0xb8add0 <col:4, line:145:3> Name="retval"
|   | `-ParagraphComment 0xb8ae50 <line:144:11, line:145:3>
|   |   |-TextComment 0xb8ae00 <line:144:11, col:16> Text=" None."
|   |   `-TextComment 0xb8ae20 <line:145:3> Text=" "
|   |-BlockCommandComment 0xb8ae70 <col:4, line:147:3> Name="par"
|   | `-ParagraphComment 0xb8b040 <line:145:8, line:147:3>
|   |   |-TextComment 0xb8aea0 <line:145:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb8aec0 <line:146:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8aee0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb8af20 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb8af60 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb8af80 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb8afb0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb8afe0 <line:147:3> Text=" "
|   `-BlockCommandComment 0xb8b060 <col:4, col:40> Name="see"
|     `-ParagraphComment 0xb8b0c0 <col:8, col:40>
|       `-TextComment 0xb8b090 <col:8, col:40> Text=" LOS_ListAdd | LOS_ListHeadInsert"
|-FunctionDecl 0xb3f920 <main/los_compiler.h:130:23, main/los_list.h:176:1> line:173:43 LOS_ListHeadInsert 'void (LOS_DL_LIST *, LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xb3f810 <col:62, col:75> col:75 used list 'LOS_DL_LIST *'
| |-ParmVarDecl 0xb3f888 <col:81, col:94> col:94 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0xb3fad8 <line:174:1, line:176:1>
| | `-CallExpr 0xb3fa48 <line:175:5, col:27> 'void'
| |   |-ImplicitCastExpr 0xb3fa30 <col:5> 'void (*)(LOS_DL_LIST *, LOS_DL_LIST *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0xb3f9d0 <col:5> 'void (LOS_DL_LIST *, LOS_DL_LIST *)' Function 0xb3ae38 'LOS_ListAdd' 'void (LOS_DL_LIST *, LOS_DL_LIST *)'
| |   |-ImplicitCastExpr 0xb3fa78 <col:17> 'LOS_DL_LIST *' <LValueToRValue>
| |   | `-DeclRefExpr 0xb3f9f0 <col:17> 'LOS_DL_LIST *' lvalue ParmVar 0xb3f810 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0xb3fa90 <col:23> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0xb3fa10 <col:23> 'LOS_DL_LIST *' lvalue ParmVar 0xb3f888 'node' 'LOS_DL_LIST *'
| `-FullComment 0xb8bc10 <line:155:3, line:171:40>
|   |-ParagraphComment 0xb8b1f0 <line:155:3>
|   | `-TextComment 0xb8b1c0 <col:3> Text=" "
|   |-VerbatimLineComment 0xb8b210 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xb8b280 <line:156:3>
|   | `-TextComment 0xb8b250 <col:3> Text=" "
|   |-BlockCommandComment 0xb8b2a0 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0xb8b300 <col:10, col:60>
|   |   `-TextComment 0xb8b2d0 <col:10, col:60> Text=" Insert a node to the head of a doubly linked list."
|   |-ParagraphComment 0xb8b350 <line:158:3>
|   | `-TextComment 0xb8b320 <col:3> Text=" "
|   |-BlockCommandComment 0xb8b370 <col:4, line:160:3> Name="par"
|   | `-ParagraphComment 0xb8b420 <line:158:8, line:160:3>
|   |   |-TextComment 0xb8b3a0 <line:158:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb8b3c0 <line:159:3, col:77> Text=" This API is used to insert a new node to the head of a doubly linked list."
|   |   `-TextComment 0xb8b3e0 <line:160:3> Text=" "
|   |-BlockCommandComment 0xb8b440 <col:4, line:163:8> Name="attention"
|   | `-ParagraphComment 0xb8b610 <line:161:3, line:163:8>
|   |   |-TextComment 0xb8b470 <line:161:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8b490 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb8b4d0 <line:162:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8b4f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb8b530 <col:8, col:71> Text="The parameters passed in should be ensured to be legal pointers."
|   |   |-HTMLEndTagComment 0xb8b550 <col:72, col:76> Name="li"
|   |   |-TextComment 0xb8b580 <line:163:3> Text=" "
|   |   `-HTMLEndTagComment 0xb8b5a0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb8b660 <line:165:3>
|   | `-TextComment 0xb8b630 <col:3> Text=" "
|   |-ParamCommandComment 0xb8b680 <col:4, line:166:3> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0xb8b730 <line:165:15, line:166:3>
|   |   |-TextComment 0xb8b6e0 <line:165:15, col:74> Text="     [IN] Doubly linked list where the new node is inserted."
|   |   `-TextComment 0xb8b700 <line:166:3> Text=" "
|   |-ParamCommandComment 0xb8b750 <col:4, col:48> [in] implicitly Param="node" ParamIndex=1
|   | `-ParagraphComment 0xb8b7e0 <col:15, col:48>
|   |   `-TextComment 0xb8b7b0 <col:15, col:48> Text="     [IN] New node to be inserted."
|   |-ParagraphComment 0xb8b830 <line:168:3>
|   | `-TextComment 0xb8b800 <col:3> Text=" "
|   |-BlockCommandComment 0xb8b850 <col:4, line:169:3> Name="retval"
|   | `-ParagraphComment 0xb8b8d0 <line:168:11, line:169:3>
|   |   |-TextComment 0xb8b880 <line:168:11, col:16> Text=" None."
|   |   `-TextComment 0xb8b8a0 <line:169:3> Text=" "
|   |-BlockCommandComment 0xb8b8f0 <col:4, line:171:3> Name="par"
|   | `-ParagraphComment 0xb8bac0 <line:169:8, line:171:3>
|   |   |-TextComment 0xb8b920 <line:169:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb8b940 <line:170:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8b960 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb8b9a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb8b9e0 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb8ba00 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb8ba30 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb8ba60 <line:171:3> Text=" "
|   `-BlockCommandComment 0xb8bae0 <col:4, col:40> Name="see"
|     `-ParagraphComment 0xb8bb40 <col:8, col:40>
|       `-TextComment 0xb8bb10 <col:8, col:40> Text=" LOS_ListAdd | LOS_ListTailInsert"
|-FunctionDecl 0xb3fb90 <main/los_compiler.h:130:23, main/los_list.h:204:1> line:198:43 used LOS_ListDelete 'void (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xb3fb00 <col:58, col:71> col:71 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0xb401c8 <line:199:1, line:204:1>
| | |-BinaryOperator 0xb3fd68 <line:200:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xb3fcb8 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xb3a6a0
| | | | `-ImplicitCastExpr 0xb3fca0 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0xb3fc70 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xb3a740
| | | |     `-ImplicitCastExpr 0xb3fc58 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0xb3fc38 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xb3fb00 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xb3fd50 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0xb3fd20 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xb3a6a0
| | |     `-ImplicitCastExpr 0xb3fd08 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0xb3fce8 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0xb3fb00 'node' 'LOS_DL_LIST *'
| | |-BinaryOperator 0xb3feb8 <line:201:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xb3fe08 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xb3a740
| | | | `-ImplicitCastExpr 0xb3fdf0 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0xb3fdc0 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xb3a6a0
| | | |     `-ImplicitCastExpr 0xb3fda8 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0xb3fd88 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xb3fb00 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xb3fea0 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0xb3fe70 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xb3a740
| | |     `-ImplicitCastExpr 0xb3fe58 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0xb3fe38 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0xb3fb00 'node' 'LOS_DL_LIST *'
| | |-BinaryOperator 0xb40018 <line:202:5, main/los_compiler.h:341:32> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xb3ff10 <main/los_list.h:202:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xb3a740
| | | | `-ImplicitCastExpr 0xb3fef8 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0xb3fed8 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xb3fb00 'node' 'LOS_DL_LIST *'
| | | `-CStyleCastExpr 0xb3fff0 <col:21, main/los_compiler.h:341:32> 'LOS_DL_LIST *' <BitCast>
| | |   `-ParenExpr 0xb3ffd0 <col:23, col:32> 'void *'
| | |     `-CStyleCastExpr 0xb3ff78 <col:24, col:31> 'void *' <NullToPointer>
| | |       `-IntegerLiteral 0xb3ff40 <col:31> 'int' 0
| | `-BinaryOperator 0xb40178 <main/los_list.h:203:5, main/los_compiler.h:341:32> 'struct LOS_DL_LIST *' '='
| |   |-MemberExpr 0xb40070 <main/los_list.h:203:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xb3a6a0
| |   | `-ImplicitCastExpr 0xb40058 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| |   |   `-DeclRefExpr 0xb40038 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xb3fb00 'node' 'LOS_DL_LIST *'
| |   `-CStyleCastExpr 0xb40150 <col:21, main/los_compiler.h:341:32> 'LOS_DL_LIST *' <BitCast>
| |     `-ParenExpr 0xb40130 <col:23, col:32> 'void *'
| |       `-CStyleCastExpr 0xb400d8 <col:24, col:31> 'void *' <NullToPointer>
| |         `-IntegerLiteral 0xb400a0 <col:31> 'int' 0
| `-FullComment 0xb8c730 <main/los_list.h:179:3, line:196:19>
|   |-ParagraphComment 0xb8bcb0 <line:179:3>
|   | `-TextComment 0xb8bc80 <col:3> Text=" "
|   |-VerbatimLineComment 0xb8bcd0 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xb8bd40 <line:180:3>
|   | `-TextComment 0xb8bd10 <col:3> Text=" "
|   |-BlockCommandComment 0xb8bd60 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0xb8bdc0 <col:10, col:60>
|   |   `-TextComment 0xb8bd90 <col:10, col:60> Text=" Delete a specified node from a doubly linked list."
|   |-ParagraphComment 0xb8be10 <line:182:3>
|   | `-TextComment 0xb8bde0 <col:3> Text=" "
|   |-BlockCommandComment 0xb8be30 <col:4, line:186:3> Name="par"
|   | `-ParagraphComment 0xb8c050 <line:182:8, line:186:3>
|   |   |-TextComment 0xb8be60 <line:182:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb8be80 <line:183:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8bea0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb8bee0 <line:184:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8bf00 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb8bf40 <col:8, col:77> Text="This API is used to delete a specified node from a doubly linked list."
|   |   |-HTMLEndTagComment 0xb8bf60 <col:78, col:82> Name="li"
|   |   |-TextComment 0xb8bf90 <line:185:3> Text=" "
|   |   |-HTMLEndTagComment 0xb8bfb0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0xb8bfe0 <line:186:3> Text=" "
|   |-BlockCommandComment 0xb8c070 <col:4, line:189:8> Name="attention"
|   | `-ParagraphComment 0xb8c240 <line:187:3, line:189:8>
|   |   |-TextComment 0xb8c0a0 <line:187:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8c0c0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb8c100 <line:188:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8c120 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb8c160 <col:8, col:71> Text="The parameter passed in should be ensured to be a legal pointer."
|   |   |-HTMLEndTagComment 0xb8c180 <col:72, col:76> Name="li"
|   |   |-TextComment 0xb8c1b0 <line:189:3> Text=" "
|   |   `-HTMLEndTagComment 0xb8c1d0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb8c290 <line:191:3>
|   | `-TextComment 0xb8c260 <col:3> Text=" "
|   |-ParamCommandComment 0xb8c2b0 <col:4, col:42> [in] implicitly Param="node" ParamIndex=0
|   | `-ParagraphComment 0xb8c340 <col:15, col:42>
|   |   `-TextComment 0xb8c310 <col:15, col:42> Text="    [IN] Node to be deleted."
|   |-ParagraphComment 0xb8c390 <line:193:3>
|   | `-TextComment 0xb8c360 <col:3> Text=" "
|   |-BlockCommandComment 0xb8c3b0 <col:4, line:194:3> Name="retval"
|   | `-ParagraphComment 0xb8c430 <line:193:11, line:194:3>
|   |   |-TextComment 0xb8c3e0 <line:193:11, col:16> Text=" None."
|   |   `-TextComment 0xb8c400 <line:194:3> Text=" "
|   |-BlockCommandComment 0xb8c450 <col:4, line:196:3> Name="par"
|   | `-ParagraphComment 0xb8c620 <line:194:8, line:196:3>
|   |   |-TextComment 0xb8c480 <line:194:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb8c4a0 <line:195:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8c4c0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb8c500 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb8c540 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb8c560 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb8c590 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb8c5c0 <line:196:3> Text=" "
|   `-BlockCommandComment 0xb8c640 <col:4, col:19> Name="see"
|     `-ParagraphComment 0xb8c6a0 <col:8, col:19>
|       `-TextComment 0xb8c670 <col:8, col:19> Text=" LOS_ListAdd"
|-FunctionDecl 0xb402f8 <main/los_compiler.h:130:23, main/los_list.h:230:1> line:227:43 used LOS_ListEmpty 'BOOL (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xb40208 <col:57, col:70> col:70 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0xb405e8 <line:228:1, line:230:1>
| | `-ReturnStmt 0xb404f0 <line:229:5, col:40>
| |   `-CStyleCastExpr 0xb404c8 <col:12, col:40> 'BOOL':'unsigned int' <IntegralCast>
| |     `-ParenExpr 0xb404a8 <col:18, col:40> 'int'
| |       `-BinaryOperator 0xb40458 <col:19, col:36> 'int' '=='
| |         |-ImplicitCastExpr 0xb40428 <col:19, col:25> 'struct LOS_DL_LIST *' <LValueToRValue>
| |         | `-MemberExpr 0xb403d8 <col:19, col:25> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xb3a740
| |         |   `-ImplicitCastExpr 0xb403c0 <col:19> 'LOS_DL_LIST *' <LValueToRValue>
| |         |     `-DeclRefExpr 0xb403a0 <col:19> 'LOS_DL_LIST *' lvalue ParmVar 0xb40208 'node' 'LOS_DL_LIST *'
| |         `-ImplicitCastExpr 0xb40440 <col:36> 'LOS_DL_LIST *' <LValueToRValue>
| |           `-DeclRefExpr 0xb40408 <col:36> 'LOS_DL_LIST *' lvalue ParmVar 0xb40208 'node' 'LOS_DL_LIST *'
| `-FullComment 0xb8d2e0 <line:207:3, line:225:7>
|   |-ParagraphComment 0xb8c7d0 <line:207:3>
|   | `-TextComment 0xb8c7a0 <col:3> Text=" "
|   |-VerbatimLineComment 0xb8c7f0 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xb8c860 <line:208:3>
|   | `-TextComment 0xb8c830 <col:3> Text=" "
|   |-BlockCommandComment 0xb8c880 <col:4, col:67> Name="brief"
|   | `-ParagraphComment 0xb8c8e0 <col:10, col:67>
|   |   `-TextComment 0xb8c8b0 <col:10, col:67> Text=" Identify whether a specified doubly linked list is empty."
|   |-ParagraphComment 0xb8c930 <line:210:3>
|   | `-TextComment 0xb8c900 <col:3> Text=" "
|   |-BlockCommandComment 0xb8c950 <col:4, line:214:3> Name="par"
|   | `-ParagraphComment 0xb8cb70 <line:210:8, line:214:3>
|   |   |-TextComment 0xb8c980 <line:210:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb8c9a0 <line:211:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8c9c0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb8ca00 <line:212:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8ca20 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb8ca60 <col:8, col:72> Text="This API is used to return whether a doubly linked list is empty."
|   |   |-HTMLEndTagComment 0xb8ca80 <col:73, col:77> Name="li"
|   |   |-TextComment 0xb8cab0 <line:213:3> Text=" "
|   |   |-HTMLEndTagComment 0xb8cad0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0xb8cb00 <line:214:3> Text=" "
|   |-BlockCommandComment 0xb8cbb0 <col:4, line:217:8> Name="attention"
|   | `-ParagraphComment 0xb8cd80 <line:215:3, line:217:8>
|   |   |-TextComment 0xb8cbe0 <line:215:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8cc00 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb8cc40 <line:216:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8cc60 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb8cca0 <col:8, col:71> Text="The parameter passed in should be ensured to be a legal pointer."
|   |   |-HTMLEndTagComment 0xb8ccc0 <col:72, col:76> Name="li"
|   |   |-TextComment 0xb8ccf0 <line:217:3> Text=" "
|   |   `-HTMLEndTagComment 0xb8cd10 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb8cdd0 <line:219:3>
|   | `-TextComment 0xb8cda0 <col:3> Text=" "
|   |-ParamCommandComment 0xb8cdf0 <col:4, col:40> [in] implicitly Param="list"
|   | `-ParagraphComment 0xb8ce80 <col:15, col:40>
|   |   `-TextComment 0xb8ce50 <col:15, col:40> Text="  [IN] Doubly linked node."
|   |-ParagraphComment 0xb8ced0 <line:221:3>
|   | `-TextComment 0xb8cea0 <col:3> Text=" "
|   |-BlockCommandComment 0xb8cef0 <col:4, line:222:3> Name="retval"
|   | `-ParagraphComment 0xb8cf70 <line:221:11, line:222:3>
|   |   |-TextComment 0xb8cf20 <line:221:11, col:48> Text=" TRUE The doubly linked list is empty."
|   |   `-TextComment 0xb8cf40 <line:222:3> Text=" "
|   |-BlockCommandComment 0xb8cf90 <col:4, line:223:3> Name="retval"
|   | `-ParagraphComment 0xb8d010 <line:222:11, line:223:3>
|   |   |-TextComment 0xb8cfc0 <line:222:11, col:53> Text=" FALSE The doubly linked list is not empty."
|   |   `-TextComment 0xb8cfe0 <line:223:3> Text=" "
|   |-BlockCommandComment 0xb8d030 <col:4, line:225:3> Name="par"
|   | `-ParagraphComment 0xb8d200 <line:223:8, line:225:3>
|   |   |-TextComment 0xb8d060 <line:223:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb8d080 <line:224:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8d0a0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb8d0e0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb8d120 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb8d140 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb8d170 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb8d1a0 <line:225:3> Text=" "
|   `-BlockCommandComment 0xb8d220 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xb8d250 <<invalid sloc>>
|-FunctionDecl 0xb406a0 <main/los_compiler.h:130:23, main/los_list.h:356:1> line:351:43 LOS_ListDelInit 'void (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xb40610 <col:59, col:72> col:72 used list 'LOS_DL_LIST *'
| |-CompoundStmt 0xb44b68 <line:352:1, line:356:1>
| | |-BinaryOperator 0xb445d8 <line:353:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xb44528 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xb3a6a0
| | | | `-ImplicitCastExpr 0xb44510 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0xb40780 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xb3a740
| | | |     `-ImplicitCastExpr 0xb40768 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0xb40748 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xb40610 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xb445c0 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0xb44590 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xb3a6a0
| | |     `-ImplicitCastExpr 0xb44578 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0xb44558 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0xb40610 'list' 'LOS_DL_LIST *'
| | |-BinaryOperator 0xb44728 <line:354:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xb44678 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xb3a740
| | | | `-ImplicitCastExpr 0xb44660 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0xb44630 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xb3a6a0
| | | |     `-ImplicitCastExpr 0xb44618 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0xb445f8 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xb40610 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xb44710 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0xb446e0 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xb3a740
| | |     `-ImplicitCastExpr 0xb446c8 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0xb446a8 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0xb40610 'list' 'LOS_DL_LIST *'
| | `-CallExpr 0xb44800 <line:355:5, col:22> 'void'
| |   |-ImplicitCastExpr 0xb447e8 <col:5> 'void (*)(LOS_DL_LIST *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0xb44748 <col:5> 'void (LOS_DL_LIST *)' Function 0xb3a9f8 'LOS_ListInit' 'void (LOS_DL_LIST *)'
| |   `-ImplicitCastExpr 0xb44828 <col:18> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0xb44768 <col:18> 'LOS_DL_LIST *' lvalue ParmVar 0xb40610 'list' 'LOS_DL_LIST *'
| `-FullComment 0xb8dc80 <line:334:3, line:349:7>
|   |-ParagraphComment 0xb8d380 <line:334:3>
|   | `-TextComment 0xb8d350 <col:3> Text=" "
|   |-VerbatimLineComment 0xb8d3a0 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xb8d410 <line:335:3>
|   | `-TextComment 0xb8d3e0 <col:3> Text=" "
|   |-BlockCommandComment 0xb8d430 <col:4, col:49> Name="brief"
|   | `-ParagraphComment 0xb8d490 <col:10, col:49>
|   |   `-TextComment 0xb8d460 <col:10, col:49> Text=" Delete initialize a doubly linked list."
|   |-ParagraphComment 0xb8d4e0 <line:337:3>
|   | `-TextComment 0xb8d4b0 <col:3> Text=" "
|   |-BlockCommandComment 0xb8d500 <col:4, line:339:3> Name="par"
|   | `-ParagraphComment 0xb8d5b0 <line:337:8, line:339:3>
|   |   |-TextComment 0xb8d530 <line:337:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb8d550 <line:338:3, col:62> Text=" This API is used to delete initialize a doubly linked list."
|   |   `-TextComment 0xb8d570 <line:339:3> Text=" "
|   |-BlockCommandComment 0xb8d5d0 <col:4, line:342:8> Name="attention"
|   | `-ParagraphComment 0xb8d7a0 <line:340:3, line:342:8>
|   |   |-TextComment 0xb8d600 <line:340:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8d620 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb8d660 <line:341:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8d680 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb8d6c0 <col:8, col:71> Text="The parameter passed in should be ensured to be s legal pointer."
|   |   |-HTMLEndTagComment 0xb8d6e0 <col:72, col:76> Name="li"
|   |   |-TextComment 0xb8d710 <line:342:3> Text=" "
|   |   `-HTMLEndTagComment 0xb8d730 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb8d7f0 <line:344:3>
|   | `-TextComment 0xb8d7c0 <col:3> Text=" "
|   |-ParamCommandComment 0xb8d810 <col:4, col:42> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0xb8d8a0 <col:15, col:42>
|   |   `-TextComment 0xb8d870 <col:15, col:42> Text="    [IN] Doubly linked list."
|   |-ParagraphComment 0xb8d8f0 <line:346:3>
|   | `-TextComment 0xb8d8c0 <col:3> Text=" "
|   |-BlockCommandComment 0xb8d910 <col:4, line:347:3> Name="retval"
|   | `-ParagraphComment 0xb8d990 <line:346:11, line:347:3>
|   |   |-TextComment 0xb8d940 <line:346:11, col:16> Text=" None."
|   |   `-TextComment 0xb8d960 <line:347:3> Text=" "
|   |-BlockCommandComment 0xb8d9b0 <col:4, line:349:3> Name="par"
|   | `-ParagraphComment 0xb8db80 <line:347:8, line:349:3>
|   |   |-TextComment 0xb8d9e0 <line:347:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb8da00 <line:348:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8da20 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb8da60 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb8daa0 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb8dac0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb8daf0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb8db20 <line:349:3> Text=" "
|   `-BlockCommandComment 0xb8dbc0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xb8dbf0 <<invalid sloc>>
|-RecordDecl 0xb44b90 <main/los_event.h:171:9, line:175:1> line:171:16 struct tagEvent definition
| |-FullComment 0xb8ddf0 <line:168:3, line:169:26>
| | |-ParagraphComment 0xb8dd20 <line:168:3>
| | | `-TextComment 0xb8dcf0 <col:3> Text=" "
| | |-VerbatimLineComment 0xb8dd40 <col:4, col:22> Text=" los_event"
| | `-ParagraphComment 0xb8ddb0 <line:169:3, col:26>
| |   `-TextComment 0xb8dd80 <col:3, col:26> Text=" Event control structure"
| |-FieldDecl 0xb44c40 <line:172:5, col:12> col:12 uwEventID 'UINT32':'unsigned int'
| | `-FullComment 0xb8dee0 <col:34, line:173:90>
| |   `-ParagraphComment 0xb8deb0 <line:172:34, line:173:90>
| |     |-TextComment 0xb8de60 <line:172:34, col:72> Text=" Event mask in the event control block,"
| |     `-TextComment 0xb8de80 <line:173:1, col:90> Text="                                  indicating the event that has been logically processed. "
| `-FieldDecl 0xb44cc8 <line:174:5, col:17> col:17 stEventList 'LOS_DL_LIST':'struct LOS_DL_LIST'
|   `-FullComment 0xb8dfb0 <col:34, col:66>
|     `-ParagraphComment 0xb8df80 <col:34, col:66>
|       `-TextComment 0xb8df50 <col:34, col:66> Text=" Event control block linked list "
|-TypedefDecl 0xb44da8 <line:171:1, line:175:3> col:3 referenced EVENT_CB_S 'struct tagEvent':'struct tagEvent'
| |-ElaboratedType 0xb44d50 'struct tagEvent' sugar
| | `-RecordType 0xb44c10 'struct tagEvent'
| |   `-Record 0xb44b90 'tagEvent'
| `-FullComment 0xb8e120 <line:168:3, line:169:26>
|   |-ParagraphComment 0xb8e050 <line:168:3>
|   | `-TextComment 0xb8e020 <col:3> Text=" "
|   |-VerbatimLineComment 0xb8e070 <col:4, col:22> Text=" los_event"
|   `-ParagraphComment 0xb8e0e0 <line:169:3, col:26>
|     `-TextComment 0xb8e0b0 <col:3, col:26> Text=" Event control structure"
|-TypedefDecl 0xb44e80 <line:171:1, line:175:16> col:16 referenced PEVENT_CB_S 'struct tagEvent *'
| |-PointerType 0xb44e30 'struct tagEvent *'
| | `-ElaboratedType 0xb44d50 'struct tagEvent' sugar
| |   `-RecordType 0xb44c10 'struct tagEvent'
| |     `-Record 0xb44b90 'tagEvent'
| `-FullComment 0xb8e290 <line:168:3, line:169:26>
|   |-ParagraphComment 0xb8e1c0 <line:168:3>
|   | `-TextComment 0xb8e190 <col:3> Text=" "
|   |-VerbatimLineComment 0xb8e1e0 <col:4, col:22> Text=" los_event"
|   `-ParagraphComment 0xb8e250 <line:169:3, col:26>
|     `-TextComment 0xb8e220 <col:3, col:26> Text=" Event control structure"
|-FunctionDecl 0xb45058 <line:195:1, col:48> col:15 LOS_EventInit 'UINT32 (PEVENT_CB_S)' extern
| |-ParmVarDecl 0xb44f60 <col:29, col:41> col:41 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| `-FullComment 0xb90540 <line:177:3, line:193:22>
|   |-ParagraphComment 0xb8e330 <line:177:3>
|   | `-TextComment 0xb8e300 <col:3> Text=" "
|   |-VerbatimLineComment 0xb8e350 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xb8e3c0 <line:178:3>
|   | `-TextComment 0xb8e390 <col:3> Text=" "
|   |-BlockCommandComment 0xb8e3e0 <col:4, col:44> Name="brief"
|   | `-ParagraphComment 0xb8e440 <col:10, col:44>
|   |   `-TextComment 0xb8e410 <col:10, col:44> Text=" Initialize an event control block."
|   |-ParagraphComment 0xb8e490 <line:180:3>
|   | `-TextComment 0xb8e460 <col:3> Text=" "
|   |-BlockCommandComment 0xb8e4b0 <col:4, line:182:3> Name="par"
|   | `-ParagraphComment 0xb8e560 <line:180:8, line:182:3>
|   |   |-TextComment 0xb8e4e0 <line:180:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb8e500 <line:181:3, col:80> Text=" This API is used to initialize the event control block pointed to by eventCB."
|   |   `-TextComment 0xb8e520 <line:182:3> Text=" "
|   |-BlockCommandComment 0xb8e580 <col:4, line:185:8> Name="attention"
|   | `-ParagraphComment 0xb8e750 <line:183:3, line:185:8>
|   |   |-TextComment 0xb8e5b0 <line:183:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8e5d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb8e610 <line:184:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8e630 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb8e670 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xb8e690 <col:13, col:17> Name="li"
|   |   |-TextComment 0xb8e6c0 <line:185:3> Text=" "
|   |   `-HTMLEndTagComment 0xb8e6e0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb8e7a0 <line:187:3>
|   | `-TextComment 0xb8e770 <col:3> Text=" "
|   |-ParamCommandComment 0xb8e7c0 <col:4, col:80> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0xb8e850 <col:18, col:80>
|   |   `-TextComment 0xb8e820 <col:18, col:80> Text=" [IN/OUT] Pointer to the event control block to be initialized."
|   |-ParagraphComment 0xb8e8a0 <line:189:3>
|   | `-TextComment 0xb8e870 <col:3> Text=" "
|   |-BlockCommandComment 0xb8e8c0 <col:4, line:190:3> Name="retval"
|   | `-ParagraphComment 0xb8e940 <line:189:11, line:190:3>
|   |   |-TextComment 0xb8e8f0 <line:189:11, col:51> Text=" #LOS_ERRNO_EVENT_PTR_NULL  Null pointer."
|   |   `-TextComment 0xb8e910 <line:190:3> Text=" "
|   |-BlockCommandComment 0xb8e960 <col:4, line:191:3> Name="retval"
|   | `-ParagraphComment 0xb8e9e0 <line:190:11, line:191:3>
|   |   |-TextComment 0xb8e990 <line:190:11, col:90> Text=" #LOS_OK                    The event control block is successfully initialized."
|   |   `-TextComment 0xb8e9b0 <line:191:3> Text=" "
|   |-BlockCommandComment 0xb8ea00 <col:4, line:193:3> Name="par"
|   | `-ParagraphComment 0xb90430 <line:191:8, line:193:3>
|   |   |-TextComment 0xb8ea30 <line:191:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb8ea50 <line:192:3> Text=" "
|   |   |-HTMLStartTagComment 0xb8ea70 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb8eab0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb8eaf0 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb8eb10 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xb8eb40 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xb8eb70 <line:193:3> Text=" "
|   `-BlockCommandComment 0xb90450 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xb904b0 <col:8, col:22>
|       `-TextComment 0xb90480 <col:8, col:22> Text=" LOS_EventClear"
|-FunctionDecl 0xb45378 <line:221:1, col:75> col:15 LOS_EventPoll 'UINT32 (UINT32 *, UINT32, UINT32)' extern
| |-ParmVarDecl 0xb45168 <col:29, col:37> col:37 eventID 'UINT32 *'
| |-ParmVarDecl 0xb451e0 <col:46, col:53> col:53 eventMask 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb45258 <col:64, col:71> col:71 mode 'UINT32':'unsigned int'
| `-FullComment 0xb91260 <line:198:3, line:219:38>
|   |-ParagraphComment 0xb905e0 <line:198:3>
|   | `-TextComment 0xb905b0 <col:3> Text=" "
|   |-VerbatimLineComment 0xb90600 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xb90670 <line:199:3>
|   | `-TextComment 0xb90640 <col:3> Text=" "
|   |-BlockCommandComment 0xb90690 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0xb906f0 <col:10, col:52>
|   |   `-TextComment 0xb906c0 <col:10, col:52> Text=" Obtain an event specified by the event ID."
|   |-ParagraphComment 0xb90740 <line:201:3>
|   | `-TextComment 0xb90710 <col:3> Text=" "
|   |-BlockCommandComment 0xb90760 <col:4, line:204:3> Name="par"
|   | `-ParagraphComment 0xb90830 <line:201:8, line:204:3>
|   |   |-TextComment 0xb90790 <line:201:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb907b0 <line:202:3, col:112> Text=" This API is used to check whether an event expected by the user occurs according to the event ID, event mask,"
|   |   |-TextComment 0xb907d0 <line:203:3, col:122> Text=" and event reading mode, and process the event based on the event reading mode. The event ID must point to valid memory."
|   |   `-TextComment 0xb907f0 <line:204:3> Text=" "
|   |-BlockCommandComment 0xb90850 <col:4, line:208:8> Name="attention"
|   | `-ParagraphComment 0xb90af0 <line:205:3, line:208:8>
|   |   |-TextComment 0xb90880 <line:205:3> Text=" "
|   |   |-HTMLStartTagComment 0xb908a0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb908e0 <line:206:3> Text=" "
|   |   |-HTMLStartTagComment 0xb90900 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb90940 <col:8, col:68> Text="When the mode is LOS_WAITMODE_CLR, the eventID is passed-out."
|   |   |-HTMLEndTagComment 0xb90960 <col:69, col:73> Name="li"
|   |   |-TextComment 0xb90990 <line:207:3> Text=" "
|   |   |-HTMLStartTagComment 0xb909b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb909f0 <col:8, col:42> Text="Otherwise the eventID is passed-in."
|   |   |-HTMLEndTagComment 0xb90a10 <col:43, col:47> Name="li"
|   |   |-TextComment 0xb90a40 <line:208:3> Text=" "
|   |   `-HTMLEndTagComment 0xb90a60 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb90b40 <line:210:3>
|   | `-TextComment 0xb90b10 <col:3> Text=" "
|   |-ParamCommandComment 0xb90b60 <col:4, line:211:3> [in] implicitly Param="eventID" ParamIndex=0
|   | `-ParagraphComment 0xb90c10 <line:210:18, line:211:3>
|   |   |-TextComment 0xb90bc0 <line:210:18, col:77> Text="      [IN/OUT] Pointer to the ID of the event to be checked."
|   |   `-TextComment 0xb90be0 <line:211:3> Text=" "
|   |-ParamCommandComment 0xb90c30 <col:4, line:213:3> [in] implicitly Param="eventMask" ParamIndex=1
|   | `-ParagraphComment 0xb90d10 <line:211:20, line:213:3>
|   |   |-TextComment 0xb90c90 <line:211:20, col:112> Text="    [IN] Mask of the event expected to occur by the user, indicating the event obtained after"
|   |   |-TextComment 0xb90cb0 <line:212:3, col:68> Text=" it is logically processed that matches the ID pointed to by mode."
|   |   `-TextComment 0xb90cd0 <line:213:3> Text=" "
|   |-ParamCommandComment 0xb90d30 <col:4, col:118> [in] implicitly Param="mode" ParamIndex=2
|   | `-ParagraphComment 0xb90dc0 <col:15, col:118>
|   |   `-TextComment 0xb90d90 <col:15, col:118> Text="         [IN] Event reading mode. The modes include LOS_WAITMODE_AND, LOS_WAITMODE_OR, LOS_WAITMODE_CLR."
|   |-ParagraphComment 0xb90e10 <line:215:3>
|   | `-TextComment 0xb90de0 <col:3> Text=" "
|   |-BlockCommandComment 0xb90e30 <col:4, line:216:3> Name="retval"
|   | `-ParagraphComment 0xb90eb0 <line:215:11, line:216:3>
|   |   |-TextComment 0xb90e60 <line:215:11, col:71> Text=" 0             The event expected by the user does not occur."
|   |   `-TextComment 0xb90e80 <line:216:3> Text=" "
|   |-BlockCommandComment 0xb90ed0 <col:4, line:217:3> Name="retval"
|   | `-ParagraphComment 0xb90f50 <line:216:11, line:217:3>
|   |   |-TextComment 0xb90f00 <line:216:11, col:63> Text=" #UINT32       The event expected by the user occurs."
|   |   `-TextComment 0xb90f20 <line:217:3> Text=" "
|   |-BlockCommandComment 0xb90f70 <col:4, line:219:3> Name="par"
|   | `-ParagraphComment 0xb91140 <line:217:8, line:219:3>
|   |   |-TextComment 0xb90fa0 <line:217:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb90fc0 <line:218:3> Text=" "
|   |   |-HTMLStartTagComment 0xb90fe0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb91020 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb91060 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb91080 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xb910b0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xb910e0 <line:219:3> Text=" "
|   `-BlockCommandComment 0xb91160 <col:4, col:38> Name="see"
|     `-ParagraphComment 0xb911c0 <col:8, col:38>
|       `-TextComment 0xb91190 <col:8, col:38> Text=" LOS_EventRead | LOS_EventWrite"
|-FunctionDecl 0xb47b08 <line:255:1, col:95> col:15 LOS_EventRead 'UINT32 (PEVENT_CB_S, UINT32, UINT32, UINT32)' extern
| |-ParmVarDecl 0xb45468 <col:29, col:41> col:41 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0xb478d0 <col:50, col:57> col:57 eventMask 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb47948 <col:68, col:75> col:75 mode 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb479c0 <col:81, col:88> col:88 timeOut 'UINT32':'unsigned int'
| `-FullComment 0xb924d0 <line:224:3, line:253:38>
|   |-ParagraphComment 0xb91300 <line:224:3>
|   | `-TextComment 0xb912d0 <col:3> Text=" "
|   |-VerbatimLineComment 0xb91320 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xb91390 <line:225:3>
|   | `-TextComment 0xb91360 <col:3> Text=" "
|   |-BlockCommandComment 0xb913b0 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0xb91430 <col:10, col:24>
|   |   `-TextComment 0xb91400 <col:10, col:24> Text=" Read an event."
|   |-ParagraphComment 0xb91480 <line:227:3>
|   | `-TextComment 0xb91450 <col:3> Text=" "
|   |-BlockCommandComment 0xb914a0 <col:4, line:231:3> Name="par"
|   | `-ParagraphComment 0xb915d0 <line:227:8, line:231:3>
|   |   |-TextComment 0xb914d0 <line:227:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb914f0 <line:228:3, col:127> Text=" This API is used to block or schedule a task that reads an event of which the event control block, event mask, reading mode,"
|   |   |-TextComment 0xb91510 <line:229:3, col:41> Text=" and timeout information are specified."
|   |   |-TextComment 0xb91530 <line:230:3> Text=" "
|   |   |-HTMLEndTagComment 0xb91550 <col:4, col:8> Name="ul"
|   |   `-TextComment 0xb91580 <line:231:3> Text=" "
|   |-BlockCommandComment 0xb915f0 <col:4, line:235:8> Name="attention"
|   | `-ParagraphComment 0xb917e0 <line:232:3, line:235:8>
|   |   |-TextComment 0xb91620 <line:232:3> Text=" "
|   |   |-HTMLStartTagComment 0xb91640 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb91680 <line:233:3> Text=" "
|   |   |-HTMLStartTagComment 0xb916a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb916e0 <col:8, col:119> Text="An error code and an event return value can be same. To differentiate the error code and return value, bit 25 of"
|   |   |-TextComment 0xb91700 <line:234:3, col:42> Text=" the event mask is forbidden to be used."
|   |   |-HTMLEndTagComment 0xb91720 <col:43, col:47> Name="li"
|   |   |-TextComment 0xb91750 <line:235:3> Text=" "
|   |   `-HTMLEndTagComment 0xb91770 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb91830 <line:237:3>
|   | `-TextComment 0xb91800 <col:3> Text=" "
|   |-ParamCommandComment 0xb91850 <col:4, line:238:3> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0xb91900 <line:237:18, line:238:3>
|   |   |-TextComment 0xb918b0 <line:237:18, col:124> Text="      [IN/OUT] Pointer to the event control block to be checked. This parameter must point to valid memory."
|   |   `-TextComment 0xb918d0 <line:238:3> Text=" "
|   |-ParamCommandComment 0xb91920 <col:4, line:240:3> [in] implicitly Param="eventMask" ParamIndex=1
|   | `-ParagraphComment 0xb91a00 <line:238:20, line:240:3>
|   |   |-TextComment 0xb91980 <line:238:20, col:116> Text="    [IN]     Mask of the event expected to occur by the user, indicating the event obtained after"
|   |   |-TextComment 0xb919a0 <line:239:3, col:100> Text="                              it is logically processed that matches the ID pointed to by eventID."
|   |   `-TextComment 0xb919c0 <line:240:3> Text=" "
|   |-ParamCommandComment 0xb91a20 <col:4, line:241:3> [in] implicitly Param="mode" ParamIndex=2
|   | `-ParagraphComment 0xb91ad0 <line:240:15, line:241:3>
|   |   |-TextComment 0xb91a80 <line:240:15, col:51> Text="         [IN]     Event reading mode."
|   |   `-TextComment 0xb91aa0 <line:241:3> Text=" "
|   |-ParamCommandComment 0xb91af0 <col:4, col:79> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0xb91b80 <col:18, col:79>
|   |   `-TextComment 0xb91b50 <col:18, col:79> Text="      [IN]     Timeout interval of event reading (unit: Tick)."
|   |-ParagraphComment 0xb91bd0 <line:243:3>
|   | `-TextComment 0xb91ba0 <col:3> Text=" "
|   |-BlockCommandComment 0xb91bf0 <col:4, line:244:3> Name="retval"
|   | `-ParagraphComment 0xb91c70 <line:243:11, line:244:3>
|   |   |-TextComment 0xb91c20 <line:243:11, col:123> Text=" #LOS_ERRNO_EVENT_SETBIT_INVALID     Bit 25 of the event mask cannot be set because it is set to an error number."
|   |   `-TextComment 0xb91c40 <line:244:3> Text=" "
|   |-BlockCommandComment 0xb91c90 <col:4, line:245:3> Name="retval"
|   | `-ParagraphComment 0xb91d10 <line:244:11, line:245:3>
|   |   |-TextComment 0xb91cc0 <line:244:11, col:93> Text=" #LOS_ERRNO_EVENT_EVENTMASK_INVALID  The passed-in event reading mode is incorrect."
|   |   `-TextComment 0xb91ce0 <line:245:3> Text=" "
|   |-BlockCommandComment 0xb91d30 <col:4, line:246:3> Name="retval"
|   | `-ParagraphComment 0xb91db0 <line:245:11, line:246:3>
|   |   |-TextComment 0xb91d60 <line:245:11, col:91> Text=" #LOS_ERRNO_EVENT_READ_IN_INTERRUPT  The event is being read during an interrupt."
|   |   `-TextComment 0xb91d80 <line:246:3> Text=" "
|   |-BlockCommandComment 0xb91dd0 <col:4, line:247:3> Name="retval"
|   | `-ParagraphComment 0xb91e50 <line:246:11, line:247:3>
|   |   |-TextComment 0xb91e00 <line:246:11, col:73> Text=" #LOS_ERRNO_EVENT_FLAGS_INVALID      The event mode is invalid."
|   |   `-TextComment 0xb91e20 <line:247:3> Text=" "
|   |-BlockCommandComment 0xb91e70 <col:4, line:248:3> Name="retval"
|   | `-ParagraphComment 0xb91ef0 <line:247:11, line:248:3>
|   |   |-TextComment 0xb91ea0 <line:247:11, col:80> Text=" #LOS_ERRNO_EVENT_READ_IN_LOCK       The event reading task is locked."
|   |   `-TextComment 0xb91ec0 <line:248:3> Text=" "
|   |-BlockCommandComment 0xb91f10 <col:4, line:249:3> Name="retval"
|   | `-ParagraphComment 0xb91f90 <line:248:11, line:249:3>
|   |   |-TextComment 0xb91f40 <line:248:11, col:77> Text=" #LOS_ERRNO_EVENT_PTR_NULL           The passed-in pointer is null."
|   |   `-TextComment 0xb91f60 <line:249:3> Text=" "
|   |-BlockCommandComment 0xb91fb0 <col:4, line:250:3> Name="retval"
|   | `-ParagraphComment 0xb92030 <line:249:11, line:250:3>
|   |   |-TextComment 0xb91fe0 <line:249:11, col:93> Text=" 0                                   The event expected by the user does not occur."
|   |   `-TextComment 0xb92000 <line:250:3> Text=" "
|   |-BlockCommandComment 0xb92050 <col:4, line:251:3> Name="retval"
|   | `-ParagraphComment 0xb920d0 <line:250:11, line:251:3>
|   |   |-TextComment 0xb92080 <line:250:11, col:85> Text=" #UINT32                             The event expected by the user occurs."
|   |   `-TextComment 0xb920a0 <line:251:3> Text=" "
|   |-BlockCommandComment 0xb920f0 <col:4, line:253:3> Name="par"
|   | `-ParagraphComment 0xb922c0 <line:251:8, line:253:3>
|   |   |-TextComment 0xb92120 <line:251:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb92140 <line:252:3> Text=" "
|   |   |-HTMLStartTagComment 0xb92160 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb921a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb921e0 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb92200 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xb92230 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xb92260 <line:253:3> Text=" "
|   `-BlockCommandComment 0xb922e0 <col:4, col:38> Name="see"
|     `-ParagraphComment 0xb92340 <col:8, col:38>
|       `-TextComment 0xb92310 <col:8, col:38> Text=" LOS_EventPoll | LOS_EventWrite"
|-FunctionDecl 0xb47d98 <line:282:1, col:64> col:15 LOS_EventWrite 'UINT32 (PEVENT_CB_S, UINT32)' extern
| |-ParmVarDecl 0xb47c08 <col:30, col:42> col:42 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0xb47c80 <col:51, col:58> col:58 events 'UINT32':'unsigned int'
| `-FullComment 0xb93140 <line:258:3, line:280:37>
|   |-ParagraphComment 0xb92570 <line:258:3>
|   | `-TextComment 0xb92540 <col:3> Text=" "
|   |-VerbatimLineComment 0xb92590 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xb92600 <line:259:3>
|   | `-TextComment 0xb925d0 <col:3> Text=" "
|   |-BlockCommandComment 0xb92620 <col:4, col:25> Name="brief"
|   | `-ParagraphComment 0xb92680 <col:10, col:25>
|   |   `-TextComment 0xb92650 <col:10, col:25> Text=" Write an event."
|   |-ParagraphComment 0xb926d0 <line:261:3>
|   | `-TextComment 0xb926a0 <col:3> Text=" "
|   |-BlockCommandComment 0xb926f0 <col:4, line:264:3> Name="par"
|   | `-ParagraphComment 0xb927c0 <line:261:8, line:264:3>
|   |   |-TextComment 0xb92720 <line:261:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb92740 <line:262:3, col:103> Text=" This API is used to write an event specified by the passed-in event mask into an event control block"
|   |   |-TextComment 0xb92760 <line:263:3, col:25> Text=" pointed to by eventCB."
|   |   `-TextComment 0xb92780 <line:264:3> Text=" "
|   |-BlockCommandComment 0xb927e0 <col:4, line:268:8> Name="attention"
|   | `-ParagraphComment 0xb929d0 <line:265:3, line:268:8>
|   |   |-TextComment 0xb92810 <line:265:3> Text=" "
|   |   |-HTMLStartTagComment 0xb92830 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb92870 <line:266:3> Text=" "
|   |   |-HTMLStartTagComment 0xb92890 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb928d0 <col:8, col:109> Text="To determine whether the LOS_EventRead API returns an event or an error code, bit 25 of the event mask"
|   |   |-TextComment 0xb928f0 <line:267:3, col:27> Text=" is forbidden to be used."
|   |   |-HTMLEndTagComment 0xb92910 <col:28, col:32> Name="li"
|   |   |-TextComment 0xb92940 <line:268:3> Text=" "
|   |   `-HTMLEndTagComment 0xb92960 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb92a20 <line:270:3>
|   | `-TextComment 0xb929f0 <col:3> Text=" "
|   |-ParamCommandComment 0xb92a40 <col:4, line:272:3> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0xb92b20 <line:270:18, line:272:3>
|   |   |-TextComment 0xb92aa0 <line:270:18, col:100> Text="  [IN/OUT] Pointer to the event control block into which an event is to be written."
|   |   |-TextComment 0xb92ac0 <line:271:3, col:45> Text=" This parameter must point to valid memory."
|   |   `-TextComment 0xb92ae0 <line:272:3> Text=" "
|   |-ParamCommandComment 0xb92b40 <col:4, col:49> [in] implicitly Param="events" ParamIndex=1
|   | `-ParagraphComment 0xb92bd0 <col:17, col:49>
|   |   `-TextComment 0xb92ba0 <col:17, col:49> Text="   [IN] Event mask to be written."
|   |-ParagraphComment 0xb92c20 <line:274:3>
|   | `-TextComment 0xb92bf0 <col:3> Text=" "
|   |-BlockCommandComment 0xb92c40 <col:4, line:276:3> Name="retval"
|   | `-ParagraphComment 0xb92cf0 <line:274:11, line:276:3>
|   |   |-TextComment 0xb92c70 <line:274:11, col:94> Text=" #LOS_ERRNO_EVENT_SETBIT_INVALID  Bit 25 of the event mask cannot be set to an event"
|   |   |-TextComment 0xb92c90 <line:275:3, col:38> Text=" because it is set to an error code."
|   |   `-TextComment 0xb92cb0 <line:276:3> Text=" "
|   |-BlockCommandComment 0xb92d10 <col:4, line:277:3> Name="retval"
|   | `-ParagraphComment 0xb92d90 <line:276:11, line:277:3>
|   |   |-TextComment 0xb92d40 <line:276:11, col:57> Text=" #LOS_ERRNO_EVENT_PTR_NULL        Null pointer."
|   |   `-TextComment 0xb92d60 <line:277:3> Text=" "
|   |-BlockCommandComment 0xb92db0 <col:4, line:278:3> Name="retval"
|   | `-ParagraphComment 0xb92e30 <line:277:11, line:278:3>
|   |   |-TextComment 0xb92de0 <line:277:11, col:78> Text=" #LOS_OK                          The event is successfully written."
|   |   `-TextComment 0xb92e00 <line:278:3> Text=" "
|   |-BlockCommandComment 0xb92e50 <col:4, line:280:3> Name="par"
|   | `-ParagraphComment 0xb93020 <line:278:8, line:280:3>
|   |   |-TextComment 0xb92e80 <line:278:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb92ea0 <line:279:3> Text=" "
|   |   |-HTMLStartTagComment 0xb92ec0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb92f00 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb92f40 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb92f60 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xb92f90 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xb92fc0 <line:280:3> Text=" "
|   `-BlockCommandComment 0xb93040 <col:4, col:37> Name="see"
|     `-ParagraphComment 0xb930a0 <col:8, col:37>
|       `-TextComment 0xb93070 <col:8, col:37> Text=" LOS_EventPoll | LOS_EventRead"
|-FunctionDecl 0xb47f98 <line:307:1, col:67> col:15 LOS_EventClear 'UINT32 (PEVENT_CB_S, UINT32)' extern
| |-ParmVarDecl 0xb47e88 <col:30, col:42> col:42 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0xb47f00 <col:51, col:58> col:58 eventMask 'UINT32':'unsigned int'
| `-FullComment 0xb93e20 <line:285:3, line:305:54>
|   |-ParagraphComment 0xb931e0 <line:285:3>
|   | `-TextComment 0xb931b0 <col:3> Text=" "
|   |-VerbatimLineComment 0xb93200 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xb93270 <line:286:3>
|   | `-TextComment 0xb93240 <col:3> Text=" "
|   |-BlockCommandComment 0xb93290 <col:4, col:66> Name="brief"
|   | `-ParagraphComment 0xb932f0 <col:10, col:66>
|   |   `-TextComment 0xb932c0 <col:10, col:66> Text=" Clear the event of the eventCB by a specified eventMask."
|   |-ParagraphComment 0xb93340 <line:288:3>
|   | `-TextComment 0xb93310 <col:3> Text=" "
|   |-BlockCommandComment 0xb93360 <col:4, line:293:3> Name="par"
|   | `-ParagraphComment 0xb935c0 <line:288:8, line:293:3>
|   |   |-TextComment 0xb93390 <line:288:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb933b0 <line:289:3> Text=" "
|   |   |-HTMLStartTagComment 0xb933d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb93420 <line:290:3> Text=" "
|   |   |-HTMLStartTagComment 0xb93440 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb93480 <col:8, col:117> Text="This API is used to set the ID of an event that has a specified mask and of which the information is stored in"
|   |   |-TextComment 0xb934a0 <line:291:3, col:89> Text=" an event control block pointed to by eventCB to 0. eventCB must point to valid memory."
|   |   |-HTMLEndTagComment 0xb934c0 <col:90, col:94> Name="li"
|   |   |-TextComment 0xb934f0 <line:292:3> Text=" "
|   |   |-HTMLEndTagComment 0xb93510 <col:4, col:8> Name="ul"
|   |   `-TextComment 0xb93540 <line:293:3> Text=" "
|   |-BlockCommandComment 0xb935e0 <col:4, line:296:8> Name="attention"
|   | `-ParagraphComment 0xb937b0 <line:294:3, line:296:8>
|   |   |-TextComment 0xb93610 <line:294:3> Text=" "
|   |   |-HTMLStartTagComment 0xb93630 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb93670 <line:295:3> Text=" "
|   |   |-HTMLStartTagComment 0xb93690 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb936d0 <col:8, col:69> Text="The value of events needs to be reversed when it is passed-in."
|   |   |-HTMLEndTagComment 0xb936f0 <col:70, col:74> Name="li"
|   |   |-TextComment 0xb93720 <line:296:3> Text=" "
|   |   `-HTMLEndTagComment 0xb93740 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb93800 <line:298:3>
|   | `-TextComment 0xb937d0 <col:3> Text=" "
|   |-ParamCommandComment 0xb93820 <col:4, line:299:3> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0xb938d0 <line:298:18, line:299:3>
|   |   |-TextComment 0xb93880 <line:298:18, col:80> Text="     [IN/OUT] Pointer to the event control block to be cleared."
|   |   `-TextComment 0xb938a0 <line:299:3> Text=" "
|   |-ParamCommandComment 0xb938f0 <col:4, col:63> [in] implicitly Param="eventMask" ParamIndex=1
|   | `-ParagraphComment 0xb93980 <col:20, col:63>
|   |   `-TextComment 0xb93950 <col:20, col:63> Text="   [IN]     Mask of the event to be cleared."
|   |-ParagraphComment 0xb939d0 <line:301:3>
|   | `-TextComment 0xb939a0 <col:3> Text=" "
|   |-BlockCommandComment 0xb939f0 <col:4, line:302:3> Name="retval"
|   | `-ParagraphComment 0xb93a70 <line:301:11, line:302:3>
|   |   |-TextComment 0xb93a20 <line:301:11, col:51> Text=" #LOS_ERRNO_EVENT_PTR_NULL  Null pointer."
|   |   `-TextComment 0xb93a40 <line:302:3> Text=" "
|   |-BlockCommandComment 0xb93a90 <col:4, line:303:3> Name="retval"
|   | `-ParagraphComment 0xb93b10 <line:302:11, line:303:3>
|   |   |-TextComment 0xb93ac0 <line:302:11, col:72> Text=" #LOS_OK                    The event is successfully cleared."
|   |   `-TextComment 0xb93ae0 <line:303:3> Text=" "
|   |-BlockCommandComment 0xb93b30 <col:4, line:305:3> Name="par"
|   | `-ParagraphComment 0xb93d00 <line:303:8, line:305:3>
|   |   |-TextComment 0xb93b60 <line:303:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb93b80 <line:304:3> Text=" "
|   |   |-HTMLStartTagComment 0xb93ba0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb93be0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb93c20 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb93c40 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xb93c70 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xb93ca0 <line:305:3> Text=" "
|   `-BlockCommandComment 0xb93d20 <col:4, col:54> Name="see"
|     `-ParagraphComment 0xb93d80 <col:8, col:54>
|       `-TextComment 0xb93d50 <col:8, col:54> Text=" LOS_EventPoll | LOS_EventRead | LOS_EventWrite"
|-FunctionDecl 0xb48118 <line:330:1, col:51> col:15 LOS_EventDestroy 'UINT32 (PEVENT_CB_S)' extern
| |-ParmVarDecl 0xb48088 <col:32, col:44> col:44 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| `-FullComment 0xb94a00 <line:310:3, line:328:54>
|   |-ParagraphComment 0xb93ec0 <line:310:3>
|   | `-TextComment 0xb93e90 <col:3> Text=" "
|   |-VerbatimLineComment 0xb93ee0 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xb93f50 <line:311:3>
|   | `-TextComment 0xb93f20 <col:3> Text=" "
|   |-BlockCommandComment 0xb93f70 <col:4, col:27> Name="brief"
|   | `-ParagraphComment 0xb93fd0 <col:10, col:27>
|   |   `-TextComment 0xb93fa0 <col:10, col:27> Text=" Destroy an event."
|   |-ParagraphComment 0xb94020 <line:313:3>
|   | `-TextComment 0xb93ff0 <col:3> Text=" "
|   |-BlockCommandComment 0xb94040 <col:4, line:317:3> Name="par"
|   | `-ParagraphComment 0xb94260 <line:313:8, line:317:3>
|   |   |-TextComment 0xb94070 <line:313:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb94090 <line:314:3> Text=" "
|   |   |-HTMLStartTagComment 0xb940b0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb940f0 <line:315:3> Text=" "
|   |   |-HTMLStartTagComment 0xb94110 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb94150 <col:8, col:44> Text="This API is used to Destroy an event."
|   |   |-HTMLEndTagComment 0xb94170 <col:45, col:49> Name="li"
|   |   |-TextComment 0xb941a0 <line:316:3> Text=" "
|   |   |-HTMLEndTagComment 0xb941c0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0xb941f0 <line:317:3> Text=" "
|   |-BlockCommandComment 0xb94280 <col:4, line:320:8> Name="attention"
|   | `-ParagraphComment 0xb94470 <line:318:3, line:320:8>
|   |   |-TextComment 0xb942b0 <line:318:3> Text=" "
|   |   |-HTMLStartTagComment 0xb942d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb94310 <line:319:3> Text=" "
|   |   |-HTMLStartTagComment 0xb94330 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb94370 <col:8, col:48> Text="The specific event should be a valid one."
|   |   |-HTMLEndTagComment 0xb94390 <col:49, col:53> Name="li"
|   |   |-TextComment 0xb943c0 <line:320:3> Text=" "
|   |   `-HTMLEndTagComment 0xb943e0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb944c0 <line:322:3>
|   | `-TextComment 0xb94490 <col:3> Text=" "
|   |-ParamCommandComment 0xb944e0 <col:4, col:82> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0xb94570 <col:18, col:82>
|   |   `-TextComment 0xb94540 <col:18, col:82> Text="     [IN/OUT] Pointer to the event control block to be Destroyed."
|   |-ParagraphComment 0xb945c0 <line:324:3>
|   | `-TextComment 0xb94590 <col:3> Text=" "
|   |-BlockCommandComment 0xb945e0 <col:4, line:325:3> Name="retval"
|   | `-ParagraphComment 0xb94660 <line:324:11, line:325:3>
|   |   |-TextComment 0xb94610 <line:324:11, col:50> Text=" #LOS_ERRNO_EVENT_PTR_NULL Null pointer."
|   |   `-TextComment 0xb94630 <line:325:3> Text=" "
|   |-BlockCommandComment 0xb94680 <col:4, line:326:3> Name="retval"
|   | `-ParagraphComment 0xb94700 <line:325:11, line:326:3>
|   |   |-TextComment 0xb946b0 <line:325:11, col:71> Text=" #LOS_OK                   The event is successfully cleared."
|   |   `-TextComment 0xb946d0 <line:326:3> Text=" "
|   |-BlockCommandComment 0xb94720 <col:4, line:328:3> Name="par"
|   | `-ParagraphComment 0xb948f0 <line:326:8, line:328:3>
|   |   |-TextComment 0xb94750 <line:326:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb94770 <line:327:3> Text=" "
|   |   |-HTMLStartTagComment 0xb94790 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb947d0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb94810 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb94830 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xb94860 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xb94890 <line:328:3> Text=" "
|   `-BlockCommandComment 0xb94910 <col:4, col:54> Name="see"
|     `-ParagraphComment 0xb94970 <col:8, col:54>
|       `-TextComment 0xb94940 <col:8, col:54> Text=" LOS_EventPoll | LOS_EventRead | LOS_EventWrite"
|-FunctionDecl 0xb483e0 <line:332:1, col:97> col:15 OsEventReadOnce 'UINT32 (PEVENT_CB_S, UINT32, UINT32, UINT32)' extern
| |-ParmVarDecl 0xb481d0 <col:31, col:43> col:43 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0xb48248 <col:52, col:59> col:59 eventMask 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb482c0 <col:70, col:77> col:77 mode 'UINT32':'unsigned int'
| `-ParmVarDecl 0xb48338 <col:83, col:90> col:90 timeOut 'UINT32':'unsigned int'
|-FunctionDecl 0xb485c0 <line:333:1, col:66> col:15 OsEventWriteOnce 'UINT32 (PEVENT_CB_S, UINT32)' extern
| |-ParmVarDecl 0xb484b0 <col:32, col:44> col:44 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| `-ParmVarDecl 0xb48528 <col:53, col:60> col:60 events 'UINT32':'unsigned int'
|-TypedefDecl 0xb52330 <main/los_error.h:130:1, line:134:51> line:130:16 referenced LOS_ERRORHANDLE_FUNC 'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
| |-PointerType 0xb522b0 'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
| | `-ParenType 0xb52250 'void (CHAR *, UINT32, UINT32, UINT32, void *)' sugar
| |   `-FunctionProtoType 0xb52200 'void (CHAR *, UINT32, UINT32, UINT32, void *)' cdecl
| |     |-BuiltinType 0xa9dda0 'void'
| |     |-PointerType 0xb51ea0 'CHAR *'
| |     | `-TypedefType 0xb1d430 'CHAR' sugar
| |     |   |-Typedef 0xb012e8 'CHAR'
| |     |   `-BuiltinType 0xa9dde0 'char'
| |     |-TypedefType 0xb01720 'UINT32' sugar
| |     | |-Typedef 0xb01050 'UINT32'
| |     | `-BuiltinType 0xa9dee0 'unsigned int'
| |     |-TypedefType 0xb01720 'UINT32' sugar
| |     | |-Typedef 0xb01050 'UINT32'
| |     | `-BuiltinType 0xa9dee0 'unsigned int'
| |     |-TypedefType 0xb01720 'UINT32' sugar
| |     | |-Typedef 0xb01050 'UINT32'
| |     | `-BuiltinType 0xa9dee0 'unsigned int'
| |     `-PointerType 0xa9e560 'void *'
| |       `-BuiltinType 0xa9dda0 'void'
| `-FullComment 0xb95740 <line:109:3, line:128:13>
|   |-ParagraphComment 0xb94aa0 <line:109:3>
|   | `-TextComment 0xb94a70 <col:3> Text=" "
|   |-VerbatimLineComment 0xb94ac0 <col:4, col:20> Text=" los_err"
|   |-ParagraphComment 0xb94b30 <line:110:3>
|   | `-TextComment 0xb94b00 <col:3> Text=" "
|   |-BlockCommandComment 0xb94b50 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0xb94bb0 <col:10, col:60>
|   |   `-TextComment 0xb94b80 <col:10, col:60> Text=" Define the pointer to the error handling function."
|   |-ParagraphComment 0xb94c00 <line:112:3>
|   | `-TextComment 0xb94bd0 <col:3> Text=" "
|   |-BlockCommandComment 0xb94c20 <col:4, line:114:3> Name="par"
|   | `-ParagraphComment 0xb94cd0 <line:112:8, line:114:3>
|   |   |-TextComment 0xb94c50 <line:112:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb94c70 <line:113:3, col:73> Text=" This API is used to define the pointer to the error handling function."
|   |   `-TextComment 0xb94c90 <line:114:3> Text=" "
|   |-BlockCommandComment 0xb94cf0 <col:4, line:117:8> Name="attention"
|   | `-ParagraphComment 0xb94ec0 <line:115:3, line:117:8>
|   |   |-TextComment 0xb94d20 <line:115:3> Text=" "
|   |   |-HTMLStartTagComment 0xb94d40 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb94d80 <line:116:3> Text=" "
|   |   |-HTMLStartTagComment 0xb94da0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb94de0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xb94e00 <col:13, col:17> Name="li"
|   |   |-TextComment 0xb94e30 <line:117:3> Text=" "
|   |   `-HTMLEndTagComment 0xb94e50 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb94f10 <line:119:3>
|   | `-TextComment 0xb94ee0 <col:3> Text=" "
|   |-ParamCommandComment 0xb94f30 <col:4, line:120:3> [in] implicitly Param="fileName" ParamIndex=0
|   | `-ParagraphComment 0xb94fe0 <line:119:20, line:120:3>
|   |   |-TextComment 0xb94f90 <line:119:20, col:65> Text="  [IN] Log file that stores error information."
|   |   `-TextComment 0xb94fb0 <line:120:3> Text=" "
|   |-ParamCommandComment 0xb95000 <col:4, line:121:3> [in] implicitly Param="lineNo" ParamIndex=1
|   | `-ParagraphComment 0xb950b0 <line:120:18, line:121:3>
|   |   |-TextComment 0xb95060 <line:120:18, col:60> Text="    [IN] Line number of the erroneous line."
|   |   `-TextComment 0xb95080 <line:121:3> Text=" "
|   |-ParamCommandComment 0xb950d0 <col:4, line:122:3> [in] implicitly Param="errorNo" ParamIndex=2
|   | `-ParagraphComment 0xb95180 <line:121:19, line:122:3>
|   |   |-TextComment 0xb95130 <line:121:19, col:37> Text="   [IN] Error code."
|   |   `-TextComment 0xb95150 <line:122:3> Text=" "
|   |-ParamCommandComment 0xb951a0 <col:4, line:123:3> [in] implicitly Param="paraLen" ParamIndex=3
|   | `-ParagraphComment 0xb95250 <line:122:19, line:123:3>
|   |   |-TextComment 0xb95200 <line:122:19, col:62> Text="   [IN] Length of the input parameter pPara."
|   |   `-TextComment 0xb95220 <line:123:3> Text=" "
|   |-ParamCommandComment 0xb95270 <col:4, col:50> [in] implicitly Param="para" ParamIndex=4
|   | `-ParagraphComment 0xb95300 <col:16, col:50>
|   |   `-TextComment 0xb952d0 <col:16, col:50> Text="      [IN] User label of the error."
|   |-ParagraphComment 0xb95350 <line:125:3>
|   | `-TextComment 0xb95320 <col:3> Text=" "
|   |-BlockCommandComment 0xb95370 <col:4, line:126:3> Name="retval"
|   | `-ParagraphComment 0xb953f0 <line:125:11, line:126:3>
|   |   |-TextComment 0xb953a0 <line:125:11, col:16> Text=" None."
|   |   `-TextComment 0xb953c0 <line:126:3> Text=" "
|   |-BlockCommandComment 0xb95440 <col:4, line:128:3> Name="par"
|   | `-ParagraphComment 0xb95610 <line:126:8, line:128:3>
|   |   |-TextComment 0xb95470 <line:126:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb95490 <line:127:3> Text=" "
|   |   |-HTMLStartTagComment 0xb954b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb954f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb95530 <col:12, col:72> Text="los_err.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb95550 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0xb95580 <col:78, col:82> Name="ul"
|   |   `-TextComment 0xb955b0 <line:128:3> Text=" "
|   `-BlockCommandComment 0xb95630 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xb95690 <col:8, col:13>
|       `-TextComment 0xb95660 <col:8, col:13> Text=" None."
|-FunctionDecl 0xb52708 <line:158:1, line:160:39> line:158:15 LOS_ErrHandle 'UINT32 (CHAR *, UINT32, UINT32, UINT32, void *)' extern
| |-ParmVarDecl 0xb523c8 <col:29, col:35> col:35 fileName 'CHAR *'
| |-ParmVarDecl 0xb52440 <col:45, col:52> col:52 lineNo 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb524b8 <line:159:29, col:36> col:36 errorNo 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb52530 <col:45, col:52> col:52 paraLen 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb525b0 <main/los_compiler.h:327:23, main/los_error.h:160:35> col:35 para 'void *'
| `-FullComment 0xb964e0 <line:137:3, line:156:12>
|   |-ParagraphComment 0xb957e0 <line:137:3>
|   | `-TextComment 0xb957b0 <col:3> Text=" "
|   |-VerbatimLineComment 0xb95800 <col:4, col:20> Text=" los_err"
|   |-ParagraphComment 0xb95870 <line:138:3>
|   | `-TextComment 0xb95840 <col:3> Text=" "
|   |-BlockCommandComment 0xb95890 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0xb958f0 <col:10, col:34>
|   |   `-TextComment 0xb958c0 <col:10, col:34> Text=" Error handling function."
|   |-ParagraphComment 0xb95940 <line:140:3>
|   | `-TextComment 0xb95910 <col:3> Text=" "
|   |-BlockCommandComment 0xb95960 <col:4, line:142:3> Name="par"
|   | `-ParagraphComment 0xb95a10 <line:140:8, line:142:3>
|   |   |-TextComment 0xb95990 <line:140:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb959b0 <line:141:3, col:77> Text=" This API is used to perform different operations according to error types."
|   |   `-TextComment 0xb959d0 <line:142:3> Text=" "
|   |-BlockCommandComment 0xb95a30 <col:4, line:145:8> Name="attention"
|   | `-ParagraphComment 0xb95c00 <line:143:3, line:145:8>
|   |   |-TextComment 0xb95a60 <line:143:3> Text=" "
|   |   |-HTMLStartTagComment 0xb95a80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb95ac0 <line:144:3> Text=" "
|   |   |-HTMLStartTagComment 0xb95ae0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb95b20 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0xb95b40 <col:12, col:16> Name="li"
|   |   |-TextComment 0xb95b70 <line:145:3> Text=" "
|   |   `-HTMLEndTagComment 0xb95b90 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb95c50 <line:147:3>
|   | `-TextComment 0xb95c20 <col:3> Text=" "
|   |-ParamCommandComment 0xb95c70 <col:4, line:148:3> [in] implicitly Param="fileName" ParamIndex=0
|   | `-ParagraphComment 0xb95d20 <line:147:20, line:148:3>
|   |   |-TextComment 0xb95cd0 <line:147:20, col:65> Text="  [IN] Log file that stores error information."
|   |   `-TextComment 0xb95cf0 <line:148:3> Text=" "
|   |-ParamCommandComment 0xb95d40 <col:4, line:149:3> [in] implicitly Param="lineNo" ParamIndex=1
|   | `-ParagraphComment 0xb95df0 <line:148:18, line:149:3>
|   |   |-TextComment 0xb95da0 <line:148:18, col:98> Text="    [IN] Line number of the erroneous line which should not be OS_ERR_MAGIC_WORD."
|   |   `-TextComment 0xb95dc0 <line:149:3> Text=" "
|   |-ParamCommandComment 0xb95e10 <col:4, line:150:3> [in] implicitly Param="errorNo" ParamIndex=2
|   | `-ParagraphComment 0xb95ec0 <line:149:19, line:150:3>
|   |   |-TextComment 0xb95e70 <line:149:19, col:37> Text="   [IN] Error code."
|   |   `-TextComment 0xb95e90 <line:150:3> Text=" "
|   |-ParamCommandComment 0xb95ee0 <col:4, line:151:3> [in] implicitly Param="paraLen" ParamIndex=3
|   | `-ParagraphComment 0xb95f90 <line:150:19, line:151:3>
|   |   |-TextComment 0xb95f40 <line:150:19, col:62> Text="   [IN] Length of the input parameter pPara."
|   |   `-TextComment 0xb95f60 <line:151:3> Text=" "
|   |-ParamCommandComment 0xb95fb0 <col:4, col:50> [in] implicitly Param="para" ParamIndex=4
|   | `-ParagraphComment 0xb96040 <col:16, col:50>
|   |   `-TextComment 0xb96010 <col:16, col:50> Text="      [IN] User label of the error."
|   |-ParagraphComment 0xb96090 <line:153:3>
|   | `-TextComment 0xb96060 <col:3> Text=" "
|   |-BlockCommandComment 0xb960b0 <col:4, line:154:3> Name="retval"
|   | `-ParagraphComment 0xb96130 <line:153:11, line:154:3>
|   |   |-TextComment 0xb960e0 <line:153:11, col:54> Text=" LOS_OK The error is successfully processed."
|   |   `-TextComment 0xb96100 <line:154:3> Text=" "
|   |-BlockCommandComment 0xb96150 <col:4, line:156:3> Name="par"
|   | `-ParagraphComment 0xb96320 <line:154:8, line:156:3>
|   |   |-TextComment 0xb96180 <line:154:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb961a0 <line:155:3> Text=" "
|   |   |-HTMLStartTagComment 0xb961c0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb96200 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb96240 <col:12, col:72> Text="los_err.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb96260 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0xb96290 <col:78, col:82> Name="ul"
|   |   `-TextComment 0xb962c0 <line:156:3> Text=" "
|   `-BlockCommandComment 0xb96340 <col:4, col:12> Name="see"
|     `-ParagraphComment 0xb963a0 <col:8, col:12>
|       `-TextComment 0xb96370 <col:8, col:12> Text=" None"
|-RecordDecl 0xb527f8 <line:166:9, line:168:1> line:166:16 struct tagUserErrFunc definition
| |-FullComment 0xb96650 <line:163:3, line:164:37>
| | |-ParagraphComment 0xb96580 <line:163:3>
| | | `-TextComment 0xb96550 <col:3> Text=" "
| | |-VerbatimLineComment 0xb965a0 <col:4, col:20> Text=" los_err"
| | `-ParagraphComment 0xb96610 <line:164:3, col:37>
| |   `-TextComment 0xb965e0 <col:3, col:37> Text=" Error handling function structure."
| `-FieldDecl 0xb528d0 <line:167:5, col:27> col:27 pfnHook 'LOS_ERRORHANDLE_FUNC':'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
|   `-FullComment 0xb96720 <col:41, col:75>
|     `-ParagraphComment 0xb966f0 <col:41, col:75>
|       `-TextComment 0xb966c0 <col:41, col:75> Text=" Hook function for error handling. "
|-TypedefDecl 0xb529a8 <line:166:1, line:168:3> col:3 UserErrFunc 'struct tagUserErrFunc':'struct tagUserErrFunc'
| |-ElaboratedType 0xb52950 'struct tagUserErrFunc' sugar
| | `-RecordType 0xb52880 'struct tagUserErrFunc'
| |   `-Record 0xb527f8 'tagUserErrFunc'
| `-FullComment 0xb96890 <line:163:3, line:164:37>
|   |-ParagraphComment 0xb967c0 <line:163:3>
|   | `-TextComment 0xb96790 <col:3> Text=" "
|   |-VerbatimLineComment 0xb967e0 <col:4, col:20> Text=" los_err"
|   `-ParagraphComment 0xb96850 <line:164:3, col:37>
|     `-TextComment 0xb96820 <col:3, col:37> Text=" Error handling function structure."
|-EnumDecl 0xb52a18 <line:171:1, line:207:1> line:171:6 LOS_MODULE_ID
| |-EnumConstantDecl 0xb52b18 <line:172:5, col:32> col:5 LOS_MOD_SYS 'int'
| | `-ConstantExpr 0xb52b00 <col:32> 'int'
| |   `-IntegerLiteral 0xb52ae0 <col:32> 'int' 0
| |-EnumConstantDecl 0xb52ba0 <line:173:5, col:32> col:5 LOS_MOD_MEM 'int'
| | `-ConstantExpr 0xb52b88 <col:32> 'int'
| |   `-IntegerLiteral 0xb52b68 <col:32> 'int' 1
| |-EnumConstantDecl 0xb52c28 <line:174:5, col:32> col:5 LOS_MOD_TSK 'int'
| | `-ConstantExpr 0xb52c10 <col:32> 'int'
| |   `-IntegerLiteral 0xb52bf0 <col:32> 'int' 2
| |-EnumConstantDecl 0xb52cb0 <line:175:5, col:32> col:5 LOS_MOD_SWTMR 'int'
| | `-ConstantExpr 0xb52c98 <col:32> 'int'
| |   `-IntegerLiteral 0xb52c78 <col:32> 'int' 3
| |-EnumConstantDecl 0xb52d38 <line:176:5, col:32> col:5 LOS_MOD_TICK 'int'
| | `-ConstantExpr 0xb52d20 <col:32> 'int'
| |   `-IntegerLiteral 0xb52d00 <col:32> 'int' 4
| |-EnumConstantDecl 0xb52dc0 <line:177:5, col:32> col:5 LOS_MOD_MSG 'int'
| | `-ConstantExpr 0xb52da8 <col:32> 'int'
| |   `-IntegerLiteral 0xb52d88 <col:32> 'int' 5
| |-EnumConstantDecl 0xb52e48 <line:178:5, col:32> col:5 LOS_MOD_QUE 'int'
| | `-ConstantExpr 0xb52e30 <col:32> 'int'
| |   `-IntegerLiteral 0xb52e10 <col:32> 'int' 6
| |-EnumConstantDecl 0xb53068 <line:179:5, col:32> col:5 LOS_MOD_SEM 'int'
| | `-ConstantExpr 0xb53050 <col:32> 'int'
| |   `-IntegerLiteral 0xb53030 <col:32> 'int' 7
| |-EnumConstantDecl 0xb530f0 <line:180:5, col:32> col:5 LOS_MOD_MBOX 'int'
| | `-ConstantExpr 0xb530d8 <col:32> 'int'
| |   `-IntegerLiteral 0xb530b8 <col:32> 'int' 8
| |-EnumConstantDecl 0xb53178 <line:181:5, col:32> col:5 LOS_MOD_HWI 'int'
| | `-ConstantExpr 0xb53160 <col:32> 'int'
| |   `-IntegerLiteral 0xb53140 <col:32> 'int' 9
| |-EnumConstantDecl 0xb53200 <line:182:5, col:32> col:5 LOS_MOD_HWWDG 'int'
| | `-ConstantExpr 0xb531e8 <col:32> 'int'
| |   `-IntegerLiteral 0xb531c8 <col:32> 'int' 10
| |-EnumConstantDecl 0xb53288 <line:183:5, col:32> col:5 LOS_MOD_CACHE 'int'
| | `-ConstantExpr 0xb53270 <col:32> 'int'
| |   `-IntegerLiteral 0xb53250 <col:32> 'int' 11
| |-EnumConstantDecl 0xb53310 <line:184:5, col:32> col:5 LOS_MOD_HWTMR 'int'
| | `-ConstantExpr 0xb532f8 <col:32> 'int'
| |   `-IntegerLiteral 0xb532d8 <col:32> 'int' 12
| |-EnumConstantDecl 0xb53398 <line:185:5, col:32> col:5 LOS_MOD_MMU 'int'
| | `-ConstantExpr 0xb53380 <col:32> 'int'
| |   `-IntegerLiteral 0xb53360 <col:32> 'int' 13
| |-EnumConstantDecl 0xb53420 <line:187:5, col:32> col:5 LOS_MOD_LOG 'int'
| | `-ConstantExpr 0xb53408 <col:32> 'int'
| |   `-IntegerLiteral 0xb533e8 <col:32> 'int' 14
| |-EnumConstantDecl 0xb534a8 <line:188:5, col:32> col:5 LOS_MOD_ERR 'int'
| | `-ConstantExpr 0xb53490 <col:32> 'int'
| |   `-IntegerLiteral 0xb53470 <col:32> 'int' 15
| |-EnumConstantDecl 0xb53530 <line:190:5, col:32> col:5 LOS_MOD_EXC 'int'
| | `-ConstantExpr 0xb53518 <col:32> 'int'
| |   `-IntegerLiteral 0xb534f8 <col:32> 'int' 16
| |-EnumConstantDecl 0xb535b8 <line:191:5, col:32> col:5 LOS_MOD_CSTK 'int'
| | `-ConstantExpr 0xb535a0 <col:32> 'int'
| |   `-IntegerLiteral 0xb53580 <col:32> 'int' 17
| |-EnumConstantDecl 0xb53640 <line:193:5, col:32> col:5 LOS_MOD_MPU 'int'
| | `-ConstantExpr 0xb53628 <col:32> 'int'
| |   `-IntegerLiteral 0xb53608 <col:32> 'int' 18
| |-EnumConstantDecl 0xb536c8 <line:194:5, col:32> col:5 LOS_MOD_NMHWI 'int'
| | `-ConstantExpr 0xb536b0 <col:32> 'int'
| |   `-IntegerLiteral 0xb53690 <col:32> 'int' 19
| |-EnumConstantDecl 0xb53750 <line:195:5, col:32> col:5 LOS_MOD_TRACE 'int'
| | `-ConstantExpr 0xb53738 <col:32> 'int'
| |   `-IntegerLiteral 0xb53718 <col:32> 'int' 20
| |-EnumConstantDecl 0xb537d8 <line:196:5, col:32> col:5 LOS_MOD_IPC 'int'
| | `-ConstantExpr 0xb537c0 <col:32> 'int'
| |   `-IntegerLiteral 0xb537a0 <col:32> 'int' 24
| |-EnumConstantDecl 0xb53860 <line:197:5, col:32> col:5 LOS_MOD_TIMER 'int'
| | `-ConstantExpr 0xb53848 <col:32> 'int'
| |   `-IntegerLiteral 0xb53828 <col:32> 'int' 26
| |-EnumConstantDecl 0xb538e8 <line:198:5, col:32> col:5 LOS_MOD_EVENT 'int'
| | `-ConstantExpr 0xb538d0 <col:32> 'int'
| |   `-IntegerLiteral 0xb538b0 <col:32> 'int' 28
| |-EnumConstantDecl 0xb53970 <line:199:5, col:32> col:5 LOS_MOD_MUX 'int'
| | `-ConstantExpr 0xb53958 <col:32> 'int'
| |   `-IntegerLiteral 0xb53938 <col:32> 'int' 29
| |-EnumConstantDecl 0xb539f8 <line:200:5, col:32> col:5 LOS_MOD_CPUP 'int'
| | `-ConstantExpr 0xb539e0 <col:32> 'int'
| |   `-IntegerLiteral 0xb539c0 <col:32> 'int' 30
| |-EnumConstantDecl 0xb53a80 <line:201:5, col:32> col:5 LOS_MOD_HOOK 'int'
| | `-ConstantExpr 0xb53a68 <col:32> 'int'
| |   `-IntegerLiteral 0xb53a48 <col:32> 'int' 31
| |-EnumConstantDecl 0xb53b08 <line:202:5, col:32> col:5 LOS_MOD_PM 'int'
| | `-ConstantExpr 0xb53af0 <col:32> 'int'
| |   `-IntegerLiteral 0xb53ad0 <col:32> 'int' 32
| |-EnumConstantDecl 0xb53b90 <line:203:5, col:32> col:5 LOS_MOD_LMK 'int'
| | `-ConstantExpr 0xb53b78 <col:32> 'int'
| |   `-IntegerLiteral 0xb53b58 <col:32> 'int' 33
| |-EnumConstantDecl 0xb53c18 <line:204:5, col:32> col:5 LOS_MOD_SHELL 'int'
| | `-ConstantExpr 0xb53c00 <col:32> 'int'
| |   `-IntegerLiteral 0xb53be0 <col:32> 'int' 49
| |-EnumConstantDecl 0xb53ca0 <line:205:5, col:32> col:5 LOS_MOD_SIGNAL 'int'
| | `-ConstantExpr 0xb53c88 <col:32> 'int'
| |   `-IntegerLiteral 0xb53c68 <col:32> 'int' 50
| `-EnumConstantDecl 0xb53cf0 <line:206:5> col:5 LOS_MOD_BUTT 'int'
|-RecordDecl 0xb53df8 <main/los_timer.h:56:9, line:66:1> line:56:9 struct definition
| |-FieldDecl 0xb53eb0 <line:57:5, col:19> col:19 freq 'UINT32':'unsigned int'
| |-FieldDecl 0xb53f10 <line:58:5, col:19> col:19 irqNum 'INT32':'int'
| |-FieldDecl 0xb53f70 <line:59:5, col:19> col:19 periodMax 'UINT64':'unsigned long long'
| |-FieldDecl 0xb58bd0 <line:60:5, col:52> col:21 init 'UINT32 (*)(HWI_PROC_FUNC)'
| |-FieldDecl 0xb58dc0 <line:61:5, col:45> col:21 getCycle 'UINT64 (*)(UINT32 *)'
| |-FieldDecl 0xb58fb0 <line:62:5, col:40> col:21 reload 'UINT64 (*)(UINT64)'
| |-FieldDecl 0xb590a8 <main/los_compiler.h:327:23, main/los_timer.h:63:31> col:21 lock 'void (*)(void)'
| |-FieldDecl 0xb591a0 <main/los_compiler.h:327:23, main/los_timer.h:64:33> col:21 unlock 'void (*)(void)'
| `-FieldDecl 0xb59200 <line:65:5, col:19> col:19 tickHandler 'HWI_PROC_FUNC':'void (*)(void)'
|-TypedefDecl 0xb592a8 <line:56:1, line:66:3> col:3 referenced ArchTickTimer 'struct ArchTickTimer':'ArchTickTimer'
| `-ElaboratedType 0xb59250 'struct ArchTickTimer' sugar
|   `-RecordType 0xb53e80 'ArchTickTimer'
|     `-Record 0xb53df8 ''
|-FunctionDecl 0xb593b0 <line:68:1, col:27> col:8 ArchEnterSleep 'UINT32 (void)'
|-FunctionDecl 0xb595f8 <line:84:1, col:40> col:16 ArchSysTickTimerGet 'ArchTickTimer *(void)'
| `-FullComment 0xb96fe0 <line:71:3, line:82:13>
|   |-ParagraphComment 0xb96930 <line:71:3>
|   | `-TextComment 0xb96900 <col:3> Text=" "
|   |-VerbatimLineComment 0xb96950 <col:4, col:22> Text=" los_timer"
|   |-ParagraphComment 0xb969c0 <line:72:3>
|   | `-TextComment 0xb96990 <col:3> Text=" "
|   |-BlockCommandComment 0xb969e0 <col:4, col:39> Name="brief"
|   | `-ParagraphComment 0xb96a40 <col:10, col:39>
|   |   `-TextComment 0xb96a10 <col:10, col:39> Text=" Get tick timer control block."
|   |-ParagraphComment 0xb96a90 <line:74:3>
|   | `-TextComment 0xb96a60 <col:3> Text=" "
|   |-BlockCommandComment 0xb96ab0 <col:4, line:75:52> Name="par"
|   | `-ParagraphComment 0xb96b30 <line:74:8, line:75:52>
|   |   |-TextComment 0xb96ae0 <line:74:8, col:20> Text=" Description:"
|   |   `-TextComment 0xb96b00 <line:75:3, col:52> Text=" This API is used to get tick timer control block."
|   |-ParagraphComment 0xb96b80 <line:77:3>
|   | `-TextComment 0xb96b50 <col:3> Text=" "
|   |-ParamCommandComment 0xb96ba0 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0xb96c00 <<invalid sloc>>
|   |-ParagraphComment 0xb96c50 <line:79:3>
|   | `-TextComment 0xb96c20 <col:3> Text=" "
|   |-BlockCommandComment 0xb96c70 <col:4, line:80:3> Name="retval"
|   | `-ParagraphComment 0xb96cf0 <line:79:11, line:80:3>
|   |   |-TextComment 0xb96ca0 <line:79:11, col:36> Text=" #tick timer control block"
|   |   `-TextComment 0xb96cc0 <line:80:3> Text=" "
|   |-BlockCommandComment 0xb96d10 <col:4, line:82:3> Name="par"
|   | `-ParagraphComment 0xb96ee0 <line:80:8, line:82:3>
|   |   |-TextComment 0xb96d40 <line:80:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb96d60 <line:81:3> Text=" "
|   |   |-HTMLStartTagComment 0xb96d80 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb96dc0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb96e00 <col:12, col:74> Text="los_timer.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb96e20 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xb96e50 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xb96e80 <line:82:3> Text=" "
|   `-BlockCommandComment 0xb96f00 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xb96f60 <col:8, col:13>
|       `-TextComment 0xb96f30 <col:8, col:13> Text=" None."
|-FunctionDecl 0xb59848 <main/los_tick.h:100:1, col:35> col:15 LOS_SysCycleGet 'UINT64 (void)' extern
| `-FullComment 0xb97a40 <line:82:3, line:99:3>
|   |-ParagraphComment 0xb97080 <line:82:3, col:4>
|   | `-TextComment 0xb97050 <col:3, col:4> Text="  "
|   |-VerbatimLineComment 0xb970a0 <col:5, col:23> Text="  los_tick"
|   |-ParagraphComment 0xb97110 <line:83:3, col:4>
|   | `-TextComment 0xb970e0 <col:3, col:4> Text="  "
|   |-BlockCommandComment 0xb97130 <col:5, col:45> Name="brief"
|   | `-ParagraphComment 0xb97190 <col:11, col:45>
|   |   `-TextComment 0xb97160 <col:11, col:45> Text=": System timer cycles get function."
|   |-ParagraphComment 0xb971e0 <line:85:3, col:4>
|   | `-TextComment 0xb971b0 <col:3, col:4> Text="  "
|   |-BlockCommandComment 0xb97200 <col:5, line:86:48> Name="par"
|   | `-ParagraphComment 0xb97280 <line:85:9, line:86:48>
|   |   |-TextComment 0xb97230 <line:85:9, col:21> Text=" Description:"
|   |   `-TextComment 0xb97250 <line:86:3, col:48> Text="  This API is used to get system timer cycles."
|   |-ParagraphComment 0xb972d0 <line:88:3>
|   | `-TextComment 0xb972a0 <col:3> Text=" "
|   |-BlockCommandComment 0xb972f0 <col:4, line:89:26> Name="attention"
|   | `-ParagraphComment 0xb974c0 <line:88:14, line:89:26>
|   |   |-TextComment 0xb97320 <line:88:14> Text=":"
|   |   |-TextComment 0xb97340 <line:89:3> Text=" "
|   |   |-HTMLStartTagComment 0xb97360 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb973a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb973e0 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0xb97400 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0xb97460 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0xb97510 <line:91:3>
|   | `-TextComment 0xb974e0 <col:3> Text=" "
|   |-ParamCommandComment 0xb97530 <col:4, col:16> [in] implicitly Param=":"
|   | `-ParagraphComment 0xb975c0 <col:11, col:16>
|   |   `-TextComment 0xb97590 <col:11, col:16> Text=" None."
|   |-ParagraphComment 0xb97610 <line:93:3>
|   | `-TextComment 0xb975e0 <col:3> Text=" "
|   |-BlockCommandComment 0xb97630 <col:4, col:34> Name="retval"
|   | `-ParagraphComment 0xb97690 <col:11, col:34>
|   |   `-TextComment 0xb97660 <col:11, col:34> Text=": current system cycles."
|   |-ParagraphComment 0xb976e0 <line:95:3>
|   | `-TextComment 0xb976b0 <col:3> Text=" "
|   |-BlockCommandComment 0xb97700 <col:4, line:97:3> Name="par"
|   | `-ParagraphComment 0xb978d0 <line:95:8, line:97:3>
|   |   |-TextComment 0xb97730 <line:95:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb97750 <line:96:3> Text=" "
|   |   |-HTMLStartTagComment 0xb97770 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb977b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb977f0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb97810 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb97840 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb97870 <line:97:3> Text=" "
|   |-BlockCommandComment 0xb978f0 <col:4, col:13> Name="see"
|   | `-ParagraphComment 0xb97950 <col:8, col:13>
|   |   `-TextComment 0xb97920 <col:8, col:13> Text=" None."
|   `-ParagraphComment 0xb979a0 <line:99:3>
|     `-TextComment 0xb97970 <col:3> Text=" "
|-VarDecl 0xb59958 <line:112:1, col:18> col:18 g_ticksPerSec 'UINT32':'unsigned int' extern
| `-FullComment 0xb97bb0 <line:109:3, line:110:19>
|   |-ParagraphComment 0xb97ae0 <line:109:3>
|   | `-TextComment 0xb97ab0 <col:3> Text=" "
|   |-VerbatimLineComment 0xb97b00 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xb97b70 <line:110:3, col:19>
|     `-TextComment 0xb97b40 <col:3, col:19> Text=" Ticks per second"
|-VarDecl 0xb59c50 <line:118:1, col:18> col:18 g_uwCyclePerSec 'UINT32':'unsigned int' extern
| `-FullComment 0xb97d20 <line:115:3, line:116:20>
|   |-ParagraphComment 0xb97c50 <line:115:3>
|   | `-TextComment 0xb97c20 <col:3> Text=" "
|   |-VerbatimLineComment 0xb97c70 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xb97ce0 <line:116:3, col:20>
|     `-TextComment 0xb97cb0 <col:3, col:20> Text=" Cycles per Second"
|-VarDecl 0xb59cf8 <line:124:1, col:18> col:18 g_cyclesPerTick 'UINT32':'unsigned int' extern
| `-FullComment 0xb97e90 <line:121:3, line:122:18>
|   |-ParagraphComment 0xb97dc0 <line:121:3>
|   | `-TextComment 0xb97d90 <col:3> Text=" "
|   |-VerbatimLineComment 0xb97de0 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xb97e50 <line:122:3, col:18>
|     `-TextComment 0xb97e20 <col:3, col:18> Text=" Cycles per Tick"
|-VarDecl 0xb59d98 <line:130:1, col:18> col:18 used g_sysClock 'UINT32':'unsigned int' extern
| `-FullComment 0xb98000 <line:127:3, line:128:15>
|   |-ParagraphComment 0xb97f30 <line:127:3>
|   | `-TextComment 0xb97f00 <col:3> Text=" "
|   |-VerbatimLineComment 0xb97f50 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xb97fc0 <line:128:3, col:15>
|     `-TextComment 0xb97f90 <col:3, col:15> Text=" System Clock"
|-RecordDecl 0xb59fd8 <line:244:9, line:252:1> line:244:16 struct TagSysTime definition
| |-FullComment 0xb98170 <line:241:3, line:242:25>
| | |-ParagraphComment 0xb980a0 <line:241:3>
| | | `-TextComment 0xb98070 <col:3> Text=" "
| | |-VerbatimLineComment 0xb980c0 <col:4, col:21> Text=" los_tick"
| | `-ParagraphComment 0xb98130 <line:242:3, col:25>
| |   `-TextComment 0xb98100 <col:3, col:25> Text=" system time structure."
| |-FieldDecl 0xb5a090 <line:245:5, col:13> col:13 uwYear 'UINT16':'unsigned short'
| | `-FullComment 0xb98240 <col:28, col:61>
| |   `-ParagraphComment 0xb98210 <col:28, col:61>
| |     `-TextComment 0xb981e0 <col:28, col:61> Text=" value 1970 ~ 2038 or 1970 ~ 2100 "
| |-FieldDecl 0xb5a118 <line:246:5, col:13> col:13 ucMonth 'UINT8':'unsigned char'
| | `-FullComment 0xb98310 <col:28, col:41>
| |   `-ParagraphComment 0xb982e0 <col:28, col:41>
| |     `-TextComment 0xb982b0 <col:28, col:41> Text=" value 1 - 12 "
| |-FieldDecl 0xb5a1a8 <line:247:5, col:13> col:13 ucDay 'UINT8':'unsigned char'
| | `-FullComment 0xb983e0 <col:28, col:41>
| |   `-ParagraphComment 0xb983b0 <col:28, col:41>
| |     `-TextComment 0xb98380 <col:28, col:41> Text=" value 1 - 31 "
| |-FieldDecl 0xb5a238 <line:248:5, col:13> col:13 ucHour 'UINT8':'unsigned char'
| | `-FullComment 0xb994f0 <col:28, col:41>
| |   `-ParagraphComment 0xb994c0 <col:28, col:41>
| |     `-TextComment 0xb99490 <col:28, col:41> Text=" value 0 - 23 "
| |-FieldDecl 0xb5a2c8 <line:249:5, col:13> col:13 ucMinute 'UINT8':'unsigned char'
| | `-FullComment 0xb995c0 <col:28, col:41>
| |   `-ParagraphComment 0xb99590 <col:28, col:41>
| |     `-TextComment 0xb99560 <col:28, col:41> Text=" value 0 - 59 "
| |-FieldDecl 0xb5a358 <line:250:5, col:13> col:13 ucSecond 'UINT8':'unsigned char'
| | `-FullComment 0xb99690 <col:28, col:41>
| |   `-ParagraphComment 0xb99660 <col:28, col:41>
| |     `-TextComment 0xb99630 <col:28, col:41> Text=" value 0 - 59 "
| `-FieldDecl 0xb5a3e8 <line:251:5, col:13> col:13 ucWeek 'UINT8':'unsigned char'
|   `-FullComment 0xb99760 <col:28, col:41>
|     `-ParagraphComment 0xb99730 <col:28, col:41>
|       `-TextComment 0xb99700 <col:28, col:41> Text=" value 0 - 6  "
|-TypedefDecl 0xb5a4c8 <line:244:1, line:252:3> col:3 SYS_TIME_S 'struct TagSysTime':'struct TagSysTime'
| |-ElaboratedType 0xb5a470 'struct TagSysTime' sugar
| | `-RecordType 0xb5a060 'struct TagSysTime'
| |   `-Record 0xb59fd8 'TagSysTime'
| `-FullComment 0xb998d0 <line:241:3, line:242:25>
|   |-ParagraphComment 0xb99800 <line:241:3>
|   | `-TextComment 0xb997d0 <col:3> Text=" "
|   |-VerbatimLineComment 0xb99820 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xb99890 <line:242:3, col:25>
|     `-TextComment 0xb99860 <col:3, col:25> Text=" system time structure."
|-FunctionDecl 0xb5a5d8 <line:254:1, col:39> col:8 OsTickTimerReload 'UINT64 (UINT64)'
| `-ParmVarDecl 0xb5a548 <col:26, col:33> col:33 period 'UINT64':'unsigned long long'
|-FunctionDecl 0xb5a718 <line:260:1, col:28> col:8 OsTickTimerInit 'UINT32 (void)'
|-FunctionDecl 0xb5a8b8 <main/los_compiler.h:327:23, main/los_tick.h:262:48> col:6 OsTickSysTimerStartTimeSet 'void (UINT64)'
| `-ParmVarDecl 0xb5a7c8 <col:33, col:40> col:40 currTime 'UINT64':'unsigned long long'
|-FunctionDecl 0xb5aa20 <line:282:1, col:36> col:15 LOS_TickCountGet 'UINT64 (void)' extern
| `-FullComment 0xb9a250 <line:265:3, line:280:12>
|   |-ParagraphComment 0xb99970 <line:265:3>
|   | `-TextComment 0xb99940 <col:3> Text=" "
|   |-VerbatimLineComment 0xb99990 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xb99a00 <line:266:3>
|   | `-TextComment 0xb999d0 <col:3> Text=" "
|   |-BlockCommandComment 0xb99a20 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0xb99a80 <col:10, col:37>
|   |   `-TextComment 0xb99a50 <col:10, col:37> Text=" Obtain the number of Ticks."
|   |-ParagraphComment 0xb99ad0 <line:268:3>
|   | `-TextComment 0xb99aa0 <col:3> Text=" "
|   |-BlockCommandComment 0xb99af0 <col:4, line:270:3> Name="par"
|   | `-ParagraphComment 0xb99ba0 <line:268:8, line:270:3>
|   |   |-TextComment 0xb99b20 <line:268:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb99b40 <line:269:3, col:50> Text=" This API is used to obtain the number of Ticks."
|   |   `-TextComment 0xb99b60 <line:270:3> Text=" "
|   |-BlockCommandComment 0xb99bc0 <col:4, line:273:8> Name="attention"
|   | `-ParagraphComment 0xb99d90 <line:271:3, line:273:8>
|   |   |-TextComment 0xb99bf0 <line:271:3> Text=" "
|   |   |-HTMLStartTagComment 0xb99c10 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb99c50 <line:272:3> Text=" "
|   |   |-HTMLStartTagComment 0xb99c70 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb99cb0 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0xb99cd0 <col:12, col:16> Name="li"
|   |   |-TextComment 0xb99d00 <line:273:3> Text=" "
|   |   `-HTMLEndTagComment 0xb99d20 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb99de0 <line:275:3>
|   | `-TextComment 0xb99db0 <col:3> Text=" "
|   |-ParamCommandComment 0xb99e00 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0xb99e60 <<invalid sloc>>
|   |-ParagraphComment 0xb99eb0 <line:277:3>
|   | `-TextComment 0xb99e80 <col:3> Text=" "
|   |-BlockCommandComment 0xb99ed0 <col:4, line:278:3> Name="retval"
|   | `-ParagraphComment 0xb99f50 <line:277:11, line:278:3>
|   |   |-TextComment 0xb99f00 <line:277:11, col:38> Text=" UINT64 The number of Ticks."
|   |   `-TextComment 0xb99f20 <line:278:3> Text=" "
|   |-BlockCommandComment 0xb99f70 <col:4, line:280:3> Name="par"
|   | `-ParagraphComment 0xb9a140 <line:278:8, line:280:3>
|   |   |-TextComment 0xb99fa0 <line:278:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb99fc0 <line:279:3> Text=" "
|   |   |-HTMLStartTagComment 0xb99fe0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb9a020 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb9a060 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb9a080 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb9a0b0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb9a0e0 <line:280:3> Text=" "
|   `-BlockCommandComment 0xb9a160 <col:4, col:12> Name="see"
|     `-ParagraphComment 0xb9a1c0 <col:8, col:12>
|       `-TextComment 0xb9a190 <col:8, col:12> Text=" None"
|-FunctionDecl 0xb5ab80 <line:302:1, col:39> col:15 LOS_CyclePerTickGet 'UINT32 (void)' extern
| `-FullComment 0xb9ac00 <line:285:3, line:300:12>
|   |-ParagraphComment 0xb9a2f0 <line:285:3>
|   | `-TextComment 0xb9a2c0 <col:3> Text=" "
|   |-VerbatimLineComment 0xb9a310 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xb9a380 <line:286:3>
|   | `-TextComment 0xb9a350 <col:3> Text=" "
|   |-BlockCommandComment 0xb9a3a0 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0xb9a400 <col:10, col:52>
|   |   `-TextComment 0xb9a3d0 <col:10, col:52> Text=" Obtain the number of cycles in one second."
|   |-ParagraphComment 0xb9a450 <line:288:3>
|   | `-TextComment 0xb9a420 <col:3> Text=" "
|   |-BlockCommandComment 0xb9a4a0 <col:4, line:290:3> Name="par"
|   | `-ParagraphComment 0xb9a550 <line:288:8, line:290:3>
|   |   |-TextComment 0xb9a4d0 <line:288:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb9a4f0 <line:289:3, col:65> Text=" This API is used to obtain the number of cycles in one second."
|   |   `-TextComment 0xb9a510 <line:290:3> Text=" "
|   |-BlockCommandComment 0xb9a570 <col:4, line:293:8> Name="attention"
|   | `-ParagraphComment 0xb9a740 <line:291:3, line:293:8>
|   |   |-TextComment 0xb9a5a0 <line:291:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9a5c0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb9a600 <line:292:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9a620 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb9a660 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0xb9a680 <col:12, col:16> Name="li"
|   |   |-TextComment 0xb9a6b0 <line:293:3> Text=" "
|   |   `-HTMLEndTagComment 0xb9a6d0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb9a790 <line:295:3>
|   | `-TextComment 0xb9a760 <col:3> Text=" "
|   |-ParamCommandComment 0xb9a7b0 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0xb9a810 <<invalid sloc>>
|   |-ParagraphComment 0xb9a860 <line:297:3>
|   | `-TextComment 0xb9a830 <col:3> Text=" "
|   |-BlockCommandComment 0xb9a880 <col:4, line:298:3> Name="retval"
|   | `-ParagraphComment 0xb9a900 <line:297:11, line:298:3>
|   |   |-TextComment 0xb9a8b0 <line:297:11, col:58> Text=" UINT32 Number of cycles obtained in one second."
|   |   `-TextComment 0xb9a8d0 <line:298:3> Text=" "
|   |-BlockCommandComment 0xb9a920 <col:4, line:300:3> Name="par"
|   | `-ParagraphComment 0xb9aaf0 <line:298:8, line:300:3>
|   |   |-TextComment 0xb9a950 <line:298:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb9a970 <line:299:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9a990 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb9a9d0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb9aa10 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb9aa30 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb9aa60 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb9aa90 <line:300:3> Text=" "
|   `-BlockCommandComment 0xb9ab10 <col:4, col:12> Name="see"
|     `-ParagraphComment 0xb9ab70 <col:8, col:12>
|       `-TextComment 0xb9ab40 <col:8, col:12> Text=" None"
|-FunctionDecl 0xb5d978 <line:323:1, col:39> col:15 LOS_Tick2MS 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xb5d8b0 <col:27, col:34> col:34 ticks 'UINT32':'unsigned int'
| `-FullComment 0xb9b600 <line:305:3, line:321:19>
|   |-ParagraphComment 0xb9aca0 <line:305:3>
|   | `-TextComment 0xb9ac70 <col:3> Text=" "
|   |-VerbatimLineComment 0xb9acc0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xb9ad30 <line:306:3>
|   | `-TextComment 0xb9ad00 <col:3> Text=" "
|   |-BlockCommandComment 0xb9ad50 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0xb9adb0 <col:10, col:40>
|   |   `-TextComment 0xb9ad80 <col:10, col:40> Text=" Convert Ticks to milliseconds."
|   |-ParagraphComment 0xb9ae00 <line:308:3>
|   | `-TextComment 0xb9add0 <col:3> Text=" "
|   |-BlockCommandComment 0xb9ae20 <col:4, line:310:3> Name="par"
|   | `-ParagraphComment 0xb9aed0 <line:308:8, line:310:3>
|   |   |-TextComment 0xb9ae50 <line:308:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb9ae70 <line:309:3, col:53> Text=" This API is used to convert Ticks to milliseconds."
|   |   `-TextComment 0xb9ae90 <line:310:3> Text=" "
|   |-BlockCommandComment 0xb9aef0 <col:4, line:313:8> Name="attention"
|   | `-ParagraphComment 0xb9b0c0 <line:311:3, line:313:8>
|   |   |-TextComment 0xb9af20 <line:311:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9af40 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb9af80 <line:312:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9afa0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb9afe0 <col:8, col:76> Text="The number of milliseconds obtained through the conversion is 32-bit."
|   |   |-HTMLEndTagComment 0xb9b000 <col:77, col:81> Name="li"
|   |   |-TextComment 0xb9b030 <line:313:3> Text=" "
|   |   `-HTMLEndTagComment 0xb9b050 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb9b110 <line:315:3>
|   | `-TextComment 0xb9b0e0 <col:3> Text=" "
|   |-ParamCommandComment 0xb9b130 <col:4, col:76> [in] implicitly Param="ticks" ParamIndex=0
|   | `-ParagraphComment 0xb9b1c0 <col:17, col:76>
|   |   `-TextComment 0xb9b190 <col:17, col:76> Text="  [IN] Number of Ticks. The value range is (0,OS_SYS_CLOCK)."
|   |-ParagraphComment 0xb9b210 <line:317:3>
|   | `-TextComment 0xb9b1e0 <col:3> Text=" "
|   |-BlockCommandComment 0xb9b230 <col:4, line:319:3> Name="retval"
|   | `-ParagraphComment 0xb9b2e0 <line:317:11, line:319:3>
|   |   |-TextComment 0xb9b260 <line:317:11, col:109> Text=" UINT32 Number of milliseconds obtained through the conversion. Ticks are successfully converted to"
|   |   |-TextComment 0xb9b280 <line:318:3, col:16> Text=" milliseconds."
|   |   `-TextComment 0xb9b2a0 <line:319:3> Text=" "
|   |-BlockCommandComment 0xb9b300 <col:4, line:321:3> Name="par"
|   | `-ParagraphComment 0xb9b4f0 <line:319:8, line:321:3>
|   |   |-TextComment 0xb9b330 <line:319:8, col:20> Text="  Dependency:"
|   |   |-TextComment 0xb9b350 <line:320:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9b370 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb9b3b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb9b3f0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb9b410 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb9b440 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb9b470 <line:321:3> Text=" "
|   `-BlockCommandComment 0xb9b510 <col:4, col:19> Name="see"
|     `-ParagraphComment 0xb9b570 <col:8, col:19>
|       `-TextComment 0xb9b540 <col:8, col:19> Text=" LOS_MS2Tick"
|-FunctionDecl 0xb5dae8 <line:344:1, col:42> col:15 LOS_MS2Tick 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xb5da58 <col:27, col:34> col:34 millisec 'UINT32':'unsigned int'
| `-FullComment 0xb9bfd0 <line:326:3, line:342:19>
|   |-ParagraphComment 0xb9b6a0 <line:326:3>
|   | `-TextComment 0xb9b670 <col:3> Text=" "
|   |-VerbatimLineComment 0xb9b6c0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xb9b730 <line:327:3>
|   | `-TextComment 0xb9b700 <col:3> Text=" "
|   |-BlockCommandComment 0xb9b750 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0xb9b7b0 <col:10, col:40>
|   |   `-TextComment 0xb9b780 <col:10, col:40> Text=" Convert milliseconds to Ticks."
|   |-ParagraphComment 0xb9b800 <line:329:3>
|   | `-TextComment 0xb9b7d0 <col:3> Text=" "
|   |-BlockCommandComment 0xb9b820 <col:4, line:331:3> Name="par"
|   | `-ParagraphComment 0xb9b8d0 <line:329:8, line:331:3>
|   |   |-TextComment 0xb9b850 <line:329:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb9b870 <line:330:3, col:53> Text=" This API is used to convert milliseconds to Ticks."
|   |   `-TextComment 0xb9b890 <line:331:3> Text=" "
|   |-BlockCommandComment 0xb9b8f0 <col:4, line:335:8> Name="attention"
|   | `-ParagraphComment 0xb9bae0 <line:332:3, line:335:8>
|   |   |-TextComment 0xb9b920 <line:332:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9b940 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb9b980 <line:333:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9b9a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb9b9e0 <col:8, col:116> Text="If the parameter passed in is equal to 0xFFFFFFFF, the retval is 0xFFFFFFFF. Pay attention to the value to be"
|   |   |-TextComment 0xb9ba00 <line:334:3, col:45> Text=" converted because data possibly overflows."
|   |   |-HTMLEndTagComment 0xb9ba20 <col:46, col:50> Name="li"
|   |   |-TextComment 0xb9ba50 <line:335:3> Text=" "
|   |   `-HTMLEndTagComment 0xb9ba70 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb9bb30 <line:337:3>
|   | `-TextComment 0xb9bb00 <col:3> Text=" "
|   |-ParamCommandComment 0xb9bb50 <col:4, col:49> [in] implicitly Param="millisec" ParamIndex=0
|   | `-ParagraphComment 0xb9bbe0 <col:20, col:49>
|   |   `-TextComment 0xb9bbb0 <col:20, col:49> Text="  [IN] Number of milliseconds."
|   |-ParagraphComment 0xb9bc30 <line:339:3>
|   | `-TextComment 0xb9bc00 <col:3> Text=" "
|   |-BlockCommandComment 0xb9bc50 <col:4, line:340:3> Name="retval"
|   | `-ParagraphComment 0xb9bcd0 <line:339:11, line:340:3>
|   |   |-TextComment 0xb9bc80 <line:339:11, col:66> Text=" UINT32 Number of Ticks obtained through the conversion."
|   |   `-TextComment 0xb9bca0 <line:340:3> Text=" "
|   |-BlockCommandComment 0xb9bcf0 <col:4, line:342:3> Name="par"
|   | `-ParagraphComment 0xb9bec0 <line:340:8, line:342:3>
|   |   |-TextComment 0xb9bd20 <line:340:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb9bd40 <line:341:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9bd60 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb9bda0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb9bde0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb9be00 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb9be30 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb9be60 <line:342:3> Text=" "
|   `-BlockCommandComment 0xb9bee0 <col:4, col:19> Name="see"
|     `-ParagraphComment 0xb9bf40 <col:8, col:19>
|       `-TextComment 0xb9bf10 <col:8, col:19> Text=" LOS_Tick2MS"
|-FunctionDecl 0xb5ddb8 <line:362:1, col:96> col:15 LOS_TickTimerRegister 'UINT32 (const ArchTickTimer *, const HWI_PROC_FUNC)' extern
| |-ParmVarDecl 0xb5dc28 <col:37, col:58> col:58 timer 'const ArchTickTimer *'
| |-ParmVarDecl 0xb5dca0 <col:65, col:85> col:85 tickHandler 'const HWI_PROC_FUNC':'void (*const)(void)'
| `-FullComment 0xb9c890 <line:347:3, line:360:7>
|   |-ParagraphComment 0xb9c070 <line:347:3>
|   | `-TextComment 0xb9c040 <col:3> Text=" "
|   |-VerbatimLineComment 0xb9c090 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xb9c100 <line:348:3>
|   | `-TextComment 0xb9c0d0 <col:3> Text=" "
|   |-BlockCommandComment 0xb9c120 <col:4, col:47> Name="brief"
|   | `-ParagraphComment 0xb9c180 <col:10, col:47>
|   |   `-TextComment 0xb9c150 <col:10, col:47> Text=" Re-initializes the system tick timer."
|   |-ParagraphComment 0xb9c1d0 <line:350:3>
|   | `-TextComment 0xb9c1a0 <col:3> Text=" "
|   |-BlockCommandComment 0xb9c1f0 <col:4, line:352:3> Name="par"
|   | `-ParagraphComment 0xb9c2a0 <line:350:8, line:352:3>
|   |   |-TextComment 0xb9c220 <line:350:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb9c240 <line:351:3, col:59> Text=" This API is used to re-initialize the system Tick timer."
|   |   `-TextComment 0xb9c260 <line:352:3> Text=" "
|   |-BlockCommandComment 0xb9c2c0 <col:4, col:13> Name="attention"
|   | `-ParagraphComment 0xb9c2f0 <<invalid sloc>>
|   |-ParagraphComment 0xb9c340 <line:354:3>
|   | `-TextComment 0xb9c310 <col:3> Text=" "
|   |-ParamCommandComment 0xb9c360 <col:4, line:355:3> [in] implicitly Param="timer" ParamIndex=0
|   | `-ParagraphComment 0xb9c410 <line:354:16, line:355:3>
|   |   |-TextComment 0xb9c3c0 <line:354:16, col:51> Text="        [IN] Specify the tick timer."
|   |   `-TextComment 0xb9c3e0 <line:355:3> Text=" "
|   |-ParamCommandComment 0xb9c430 <col:4, col:79> [in] implicitly Param="tickHandler" ParamIndex=1
|   | `-ParagraphComment 0xb9c4d0 <col:22, col:79>
|   |   `-TextComment 0xb9c490 <col:22, col:79> Text="  [IN] Tick Interrupts the execution of the hook function."
|   |-ParagraphComment 0xb9c520 <line:357:3>
|   | `-TextComment 0xb9c4f0 <col:3> Text=" "
|   |-BlockCommandComment 0xb9c540 <col:4, line:358:3> Name="retval"
|   | `-ParagraphComment 0xb9c5c0 <line:357:11, line:358:3>
|   |   |-TextComment 0xb9c570 <line:357:11, col:32> Text=" LOS_OK or Error code."
|   |   `-TextComment 0xb9c590 <line:358:3> Text=" "
|   |-BlockCommandComment 0xb9c5e0 <col:4, line:360:3> Name="par"
|   | `-ParagraphComment 0xb9c7b0 <line:358:8, line:360:3>
|   |   |-TextComment 0xb9c610 <line:358:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb9c630 <line:359:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9c650 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb9c690 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb9c6d0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb9c6f0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb9c720 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb9c750 <line:360:3> Text=" "
|   `-BlockCommandComment 0xb9c7d0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xb9c800 <<invalid sloc>>
|-FunctionDecl 0xb5df08 <line:381:1, col:43> col:13 LOS_UDelay 'void (UINT64)' extern
| `-ParmVarDecl 0xb5de78 <col:24, col:31> col:31 microseconds 'UINT64':'unsigned long long'
|-FunctionDecl 0xb5e050 <line:400:1, col:39> col:13 LOS_MDelay 'void (UINT32)' extern
| `-ParmVarDecl 0xb5dfc0 <col:24, col:31> col:31 millisec 'UINT32':'unsigned int'
|-FunctionDecl 0xb5e190 <line:419:1, col:35> col:15 LOS_CurrNanosec 'UINT64 (void)' extern
|-FunctionDecl 0xb5e2f0 <line:440:1, col:31> col:13 OsTickHandler 'void (void)' extern
| `-FullComment 0xb9d230 <line:422:3, line:438:13>
|   |-ParagraphComment 0xb9c930 <line:422:3>
|   | `-TextComment 0xb9c900 <col:3> Text=" "
|   |-VerbatimLineComment 0xb9c950 <col:4, col:22> Text="  los_tick"
|   |-ParagraphComment 0xb9c9c0 <line:423:3>
|   | `-TextComment 0xb9c990 <col:3> Text=" "
|   |-BlockCommandComment 0xb9c9e0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xb9ca40 <col:10, col:41>
|   |   `-TextComment 0xb9ca10 <col:10, col:41> Text=" Handle the system tick timeout."
|   |-ParagraphComment 0xb9ca90 <line:425:3>
|   | `-TextComment 0xb9ca60 <col:3> Text=" "
|   |-BlockCommandComment 0xb9cab0 <col:4, line:426:78> Name="par"
|   | `-ParagraphComment 0xb9cb30 <line:425:8, line:426:78>
|   |   |-TextComment 0xb9cae0 <line:425:8, col:20> Text=" Description:"
|   |   `-TextComment 0xb9cb00 <line:426:3, col:78> Text=" This API is called when the system tick timeout and triggers the interrupt."
|   |-ParagraphComment 0xb9cb80 <line:428:3>
|   | `-TextComment 0xb9cb50 <col:3> Text=" "
|   |-BlockCommandComment 0xb9cba0 <col:4, line:431:8> Name="attention"
|   | `-ParagraphComment 0xb9cd70 <line:429:3, line:431:8>
|   |   |-TextComment 0xb9cbd0 <line:429:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9cbf0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb9cc30 <line:430:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9cc50 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb9cc90 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xb9ccb0 <col:13, col:17> Name="li"
|   |   |-TextComment 0xb9cce0 <line:431:3> Text=" "
|   |   `-HTMLEndTagComment 0xb9cd00 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb9cdc0 <line:433:3>
|   | `-TextComment 0xb9cd90 <col:3> Text=" "
|   |-ParamCommandComment 0xb9cde0 <col:4, col:15> [in] implicitly Param="none."
|   | `-ParagraphComment 0xb9ce40 <<invalid sloc>>
|   |-ParagraphComment 0xb9ce90 <line:435:3>
|   | `-TextComment 0xb9ce60 <col:3> Text=" "
|   |-BlockCommandComment 0xb9ceb0 <col:4, line:436:3> Name="retval"
|   | `-ParagraphComment 0xb9cf30 <line:435:11, line:436:3>
|   |   |-TextComment 0xb9cee0 <line:435:11, col:16> Text=" None."
|   |   `-TextComment 0xb9cf00 <line:436:3> Text=" "
|   |-BlockCommandComment 0xb9cf50 <col:4, line:438:3> Name="par"
|   | `-ParagraphComment 0xb9d120 <line:436:8, line:438:3>
|   |   |-TextComment 0xb9cf80 <line:436:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb9cfa0 <line:437:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9cfc0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb9d000 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb9d040 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb9d060 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb9d090 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb9d0c0 <line:438:3> Text=" "
|   `-BlockCommandComment 0xb9d140 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xb9d1a0 <col:8, col:13>
|       `-TextComment 0xb9d170 <col:8, col:13> Text=" None."
|-RecordDecl 0xb5e3b8 <line:446:9, line:449:1> line:446:16 struct TagCpuTick definition
| |-FullComment 0xb9d3a0 <line:443:3, line:444:33>
| | |-ParagraphComment 0xb9d2d0 <line:443:3>
| | | `-TextComment 0xb9d2a0 <col:3> Text=" "
| | |-VerbatimLineComment 0xb9d2f0 <col:4, col:21> Text=" los_tick"
| | `-ParagraphComment 0xb9d360 <line:444:3, col:33>
| |   `-TextComment 0xb9d330 <col:3, col:33> Text=" Define the CPU Tick structure."
| |-FieldDecl 0xb5e470 <line:447:5, col:12> col:12 cntHi 'UINT32':'unsigned int'
| `-FieldDecl 0xb5e4d0 <line:448:5, col:12> col:12 cntLo 'UINT32':'unsigned int'
|-TypedefDecl 0xb5e578 <line:446:1, line:449:3> col:3 referenced CpuTick 'struct TagCpuTick':'struct TagCpuTick'
| |-ElaboratedType 0xb5e520 'struct TagCpuTick' sugar
| | `-RecordType 0xb5e440 'struct TagCpuTick'
| |   `-Record 0xb5e3b8 'TagCpuTick'
| `-FullComment 0xb9d520 <line:443:3, line:444:33>
|   |-ParagraphComment 0xb9d440 <line:443:3>
|   | `-TextComment 0xb9d410 <col:3> Text=" "
|   |-VerbatimLineComment 0xb9d460 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xb9d4e0 <line:444:3, col:33>
|     `-TextComment 0xb9d4a0 <col:3, col:33> Text=" Define the CPU Tick structure."
|-FunctionDecl 0xb609f8 <line:510:1, col:72> col:15 OsCpuTick2MS 'UINT32 (CpuTick *, UINT32 *, UINT32 *)' extern
| |-ParmVarDecl 0xb5e7b8 <col:28, col:37> col:37 cpuTick 'CpuTick *'
| |-ParmVarDecl 0xb5e830 <col:46, col:54> col:54 msHi 'UINT32 *'
| |-ParmVarDecl 0xb608d0 <col:60, col:68> col:68 msLo 'UINT32 *'
| `-FullComment 0xb9e120 <line:490:3, line:508:13>
|   |-ParagraphComment 0xb9d5c0 <line:490:3>
|   | `-TextComment 0xb9d590 <col:3> Text=" "
|   |-VerbatimLineComment 0xb9d5e0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xb9d650 <line:491:3>
|   | `-TextComment 0xb9d620 <col:3> Text=" "
|   |-BlockCommandComment 0xb9d670 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xb9d6d0 <col:10, col:41>
|   |   `-TextComment 0xb9d6a0 <col:10, col:41> Text=" Convert cycles to milliseconds."
|   |-ParagraphComment 0xb9d720 <line:493:3>
|   | `-TextComment 0xb9d6f0 <col:3> Text=" "
|   |-BlockCommandComment 0xb9d740 <col:4, line:495:3> Name="par"
|   | `-ParagraphComment 0xb9d7f0 <line:493:8, line:495:3>
|   |   |-TextComment 0xb9d770 <line:493:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb9d790 <line:494:3, col:54> Text=" This API is used to convert cycles to milliseconds."
|   |   `-TextComment 0xb9d7b0 <line:495:3> Text=" "
|   |-BlockCommandComment 0xb9d810 <col:4, line:498:8> Name="attention"
|   | `-ParagraphComment 0xb9d9e0 <line:496:3, line:498:8>
|   |   |-TextComment 0xb9d840 <line:496:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9d860 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb9d8a0 <line:497:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9d8c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb9d900 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xb9d920 <col:13, col:17> Name="li"
|   |   |-TextComment 0xb9d950 <line:498:3> Text=" "
|   |   `-HTMLEndTagComment 0xb9d970 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb9da30 <line:500:3>
|   | `-TextComment 0xb9da00 <col:3> Text=" "
|   |-ParamCommandComment 0xb9da50 <col:4, line:501:3> [in] implicitly Param="cpuTick" ParamIndex=0
|   | `-ParagraphComment 0xb9db00 <line:500:19, line:501:3>
|   |   |-TextComment 0xb9dab0 <line:500:19, col:47> Text="  [IN]  Number of CPU cycles."
|   |   `-TextComment 0xb9dad0 <line:501:3> Text=" "
|   |-ParamCommandComment 0xb9db20 <col:4, line:502:3> [in] implicitly Param="msHi" ParamIndex=1
|   | `-ParagraphComment 0xb9dbd0 <line:501:16, line:502:3>
|   |   |-TextComment 0xb9db80 <line:501:16, col:70> Text="     [OUT] Upper 32 bits of the number of milliseconds."
|   |   `-TextComment 0xb9dba0 <line:502:3> Text=" "
|   |-ParamCommandComment 0xb9dbf0 <col:4, col:70> [in] implicitly Param="msLo" ParamIndex=2
|   | `-ParagraphComment 0xb9dc80 <col:16, col:70>
|   |   `-TextComment 0xb9dc50 <col:16, col:70> Text="     [OUT] Lower 32 bits of the number of milliseconds."
|   |-ParagraphComment 0xb9dcd0 <line:504:3>
|   | `-TextComment 0xb9dca0 <col:3> Text=" "
|   |-BlockCommandComment 0xb9dcf0 <col:4, line:505:3> Name="retval"
|   | `-ParagraphComment 0xb9dd70 <line:504:11, line:505:3>
|   |   |-TextComment 0xb9dd20 <line:504:11, col:68> Text=" #LOS_ERRNO_SYS_PTR_NULL    0x02000011: Invalid parameter."
|   |   `-TextComment 0xb9dd40 <line:505:3> Text=" "
|   |-BlockCommandComment 0xb9dd90 <col:4, line:506:3> Name="retval"
|   | `-ParagraphComment 0xb9de10 <line:505:11, line:506:3>
|   |   |-TextComment 0xb9ddc0 <line:505:11, col:91> Text=" #LOS_OK                   0:  Cycles are successfully converted to microseconds."
|   |   `-TextComment 0xb9dde0 <line:506:3> Text=" "
|   |-BlockCommandComment 0xb9de30 <col:4, line:508:3> Name="par"
|   | `-ParagraphComment 0xb9e000 <line:506:8, line:508:3>
|   |   |-TextComment 0xb9de60 <line:506:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb9de80 <line:507:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9dea0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb9dee0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb9df20 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb9df40 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb9df70 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb9dfa0 <line:508:3> Text=" "
|   `-BlockCommandComment 0xb9e020 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xb9e080 <col:8, col:13>
|       `-TextComment 0xb9e050 <col:8, col:13> Text=" None."
|-FunctionDecl 0xb60c78 <line:533:1, col:72> col:15 OsCpuTick2US 'UINT32 (CpuTick *, UINT32 *, UINT32 *)' extern
| |-ParmVarDecl 0xb60ae8 <col:28, col:37> col:37 cpuTick 'CpuTick *'
| |-ParmVarDecl 0xb60b60 <col:46, col:54> col:54 usHi 'UINT32 *'
| |-ParmVarDecl 0xb60bd8 <col:60, col:68> col:68 usLo 'UINT32 *'
| `-FullComment 0xb9ed40 <line:513:3, line:531:13>
|   |-ParagraphComment 0xb9e1c0 <line:513:3>
|   | `-TextComment 0xb9e190 <col:3> Text=" "
|   |-VerbatimLineComment 0xb9e1e0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xb9e250 <line:514:3>
|   | `-TextComment 0xb9e220 <col:3> Text=" "
|   |-BlockCommandComment 0xb9e270 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xb9e2d0 <col:10, col:41>
|   |   `-TextComment 0xb9e2a0 <col:10, col:41> Text=" Convert cycles to microseconds."
|   |-ParagraphComment 0xb9e320 <line:516:3>
|   | `-TextComment 0xb9e2f0 <col:3> Text=" "
|   |-BlockCommandComment 0xb9e340 <col:4, line:518:3> Name="par"
|   | `-ParagraphComment 0xb9e3f0 <line:516:8, line:518:3>
|   |   |-TextComment 0xb9e370 <line:516:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb9e390 <line:517:3, col:54> Text=" This API is used to convert cycles to microseconds."
|   |   `-TextComment 0xb9e3b0 <line:518:3> Text=" "
|   |-BlockCommandComment 0xb9e410 <col:4, line:521:8> Name="attention"
|   | `-ParagraphComment 0xb9e600 <line:519:3, line:521:8>
|   |   |-TextComment 0xb9e440 <line:519:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9e460 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb9e4a0 <line:520:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9e4e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb9e520 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xb9e540 <col:13, col:17> Name="li"
|   |   |-TextComment 0xb9e570 <line:521:3> Text=" "
|   |   `-HTMLEndTagComment 0xb9e590 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb9e650 <line:523:3>
|   | `-TextComment 0xb9e620 <col:3> Text=" "
|   |-ParamCommandComment 0xb9e670 <col:4, line:524:3> [in] implicitly Param="cpuTick" ParamIndex=0
|   | `-ParagraphComment 0xb9e720 <line:523:19, line:524:3>
|   |   |-TextComment 0xb9e6d0 <line:523:19, col:47> Text="  [IN]  Number of CPU cycles."
|   |   `-TextComment 0xb9e6f0 <line:524:3> Text=" "
|   |-ParamCommandComment 0xb9e740 <col:4, line:525:3> [in] implicitly Param="usHi" ParamIndex=1
|   | `-ParagraphComment 0xb9e7f0 <line:524:16, line:525:3>
|   |   |-TextComment 0xb9e7a0 <line:524:16, col:70> Text="     [OUT] Upper 32 bits of the number of microseconds."
|   |   `-TextComment 0xb9e7c0 <line:525:3> Text=" "
|   |-ParamCommandComment 0xb9e810 <col:4, col:70> [in] implicitly Param="usLo" ParamIndex=2
|   | `-ParagraphComment 0xb9e8a0 <col:16, col:70>
|   |   `-TextComment 0xb9e870 <col:16, col:70> Text="     [OUT] Lower 32 bits of the number of microseconds."
|   |-ParagraphComment 0xb9e8f0 <line:527:3>
|   | `-TextComment 0xb9e8c0 <col:3> Text=" "
|   |-BlockCommandComment 0xb9e910 <col:4, line:528:3> Name="retval"
|   | `-ParagraphComment 0xb9e990 <line:527:11, line:528:3>
|   |   |-TextComment 0xb9e940 <line:527:11, col:68> Text=" #LOS_ERRNO_SYS_PTR_NULL    0x02000011: Invalid parameter."
|   |   `-TextComment 0xb9e960 <line:528:3> Text=" "
|   |-BlockCommandComment 0xb9e9b0 <col:4, line:529:3> Name="retval"
|   | `-ParagraphComment 0xb9ea30 <line:528:11, line:529:3>
|   |   |-TextComment 0xb9e9e0 <line:528:11, col:90> Text=" #LOS_OK                   0: Cycles are successfully converted to microseconds."
|   |   `-TextComment 0xb9ea00 <line:529:3> Text=" "
|   |-BlockCommandComment 0xb9ea50 <col:4, line:531:3> Name="par"
|   | `-ParagraphComment 0xb9ec20 <line:529:8, line:531:3>
|   |   |-TextComment 0xb9ea80 <line:529:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb9eaa0 <line:530:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9eac0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb9eb00 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb9eb40 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb9eb60 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb9eb90 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb9ebc0 <line:531:3> Text=" "
|   `-BlockCommandComment 0xb9ec40 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xb9eca0 <col:8, col:13>
|       `-TextComment 0xb9ec70 <col:8, col:13> Text=" None."
|-FunctionDecl 0xb60df8 <main/los_compiler.h:130:23, main/los_tick.h:556:1> line:553:22 OsCycle2MS 'UINT64 (UINT64)' static inline
| |-ParmVarDecl 0xb60d68 <col:33, col:40> col:40 used cycle 'UINT64':'unsigned long long'
| |-CompoundStmt 0xb61098 <line:554:1, line:556:1>
| | `-ReturnStmt 0xb61058 <line:555:5, col:66>
| |   `-CStyleCastExpr 0xb61030 <col:12, col:66> 'UINT64':'unsigned long long' <NoOp>
| |     `-ParenExpr 0xb61010 <col:20, col:66> 'unsigned long long'
| |       `-ParenExpr 0xb60fc0 <col:21, col:65> 'unsigned long long'
| |         `-BinaryOperator 0xb60fa0 <col:22, col:64> 'unsigned long long' '/'
| |           |-ImplicitCastExpr 0xb60f70 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
| |           | `-DeclRefExpr 0xb60ea0 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0xb60d68 'cycle' 'UINT64':'unsigned long long'
| |           `-ImplicitCastExpr 0xb60f88 <col:30, col:64> 'unsigned long long' <IntegralCast>
| |             `-ParenExpr 0xb60f50 <col:30, col:64> 'unsigned int'
| |               `-BinaryOperator 0xb60f30 <col:31, line:461:32> 'unsigned int' '/'
| |                 |-ImplicitCastExpr 0xb60f00 <line:555:31> 'UINT32':'unsigned int' <LValueToRValue>
| |                 | `-DeclRefExpr 0xb60ec0 <col:31> 'UINT32':'unsigned int' lvalue Var 0xb59d98 'g_sysClock' 'UINT32':'unsigned int'
| |                 `-ImplicitCastExpr 0xb60f18 <line:461:32> 'unsigned int' <IntegralCast>
| |                   `-IntegerLiteral 0xb60ee0 <col:32> 'int' 1000
| `-FullComment 0xb9f720 <line:536:3, line:551:13>
|   |-ParagraphComment 0xb9ede0 <line:536:3>
|   | `-TextComment 0xb9edb0 <col:3> Text=" "
|   |-VerbatimLineComment 0xb9ee00 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xb9ee70 <line:537:3>
|   | `-TextComment 0xb9ee40 <col:3> Text=" "
|   |-BlockCommandComment 0xb9ee90 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xb9eef0 <col:10, col:41>
|   |   `-TextComment 0xb9eec0 <col:10, col:41> Text=" Convert cycles to milliseconds."
|   |-ParagraphComment 0xb9ef40 <line:539:3>
|   | `-TextComment 0xb9ef10 <col:3> Text=" "
|   |-BlockCommandComment 0xb9ef60 <col:4, line:541:3> Name="par"
|   | `-ParagraphComment 0xb9f010 <line:539:8, line:541:3>
|   |   |-TextComment 0xb9ef90 <line:539:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb9efb0 <line:540:3, col:54> Text=" This API is used to convert cycles to milliseconds."
|   |   `-TextComment 0xb9efd0 <line:541:3> Text=" "
|   |-BlockCommandComment 0xb9f030 <col:4, line:544:8> Name="attention"
|   | `-ParagraphComment 0xb9f200 <line:542:3, line:544:8>
|   |   |-TextComment 0xb9f060 <line:542:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9f080 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb9f0c0 <line:543:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9f0e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb9f120 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xb9f140 <col:13, col:17> Name="li"
|   |   |-TextComment 0xb9f170 <line:544:3> Text=" "
|   |   `-HTMLEndTagComment 0xb9f190 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb9f250 <line:546:3>
|   | `-TextComment 0xb9f220 <col:3> Text=" "
|   |-ParamCommandComment 0xb9f270 <col:4, col:43> [in] implicitly Param="cycle" ParamIndex=0
|   | `-ParagraphComment 0xb9f300 <col:17, col:43>
|   |   `-TextComment 0xb9f2d0 <col:17, col:43> Text="     [IN] Number of cycles."
|   |-ParagraphComment 0xb9f350 <line:548:3>
|   | `-TextComment 0xb9f320 <col:3> Text=" "
|   |-BlockCommandComment 0xb9f370 <col:4, line:549:3> Name="retval"
|   | `-ParagraphComment 0xb9f3f0 <line:548:11, line:549:3>
|   |   |-TextComment 0xb9f3a0 <line:548:11, col:120> Text=" Number of milliseconds obtained through the conversion.    Cycles are successfully converted to milliseconds."
|   |   `-TextComment 0xb9f3c0 <line:549:3> Text=" "
|   |-BlockCommandComment 0xb9f410 <col:4, line:551:3> Name="par"
|   | `-ParagraphComment 0xb9f610 <line:549:8, line:551:3>
|   |   |-TextComment 0xb9f440 <line:549:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb9f460 <line:550:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9f480 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb9f4f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb9f530 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb9f550 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb9f580 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb9f5b0 <line:551:3> Text=" "
|   `-BlockCommandComment 0xb9f630 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xb9f690 <col:8, col:13>
|       `-TextComment 0xb9f660 <col:8, col:13> Text=" None."
|-FunctionDecl 0xb61150 <main/los_compiler.h:130:23, main/los_tick.h:583:1> line:576:22 OsCycle2US 'UINT64 (UINT64)' static inline
| |-ParmVarDecl 0xb610c0 <col:33, col:40> col:40 used cycle 'UINT64':'unsigned long long'
| |-CompoundStmt 0xb61550 <line:577:1, line:583:1>
| | |-DeclStmt 0xb61318 <line:578:5, col:51>
| | | `-VarDecl 0xb61208 <col:5, line:467:32> line:578:12 used tmp 'UINT64':'unsigned long long' cinit
| | |   `-ImplicitCastExpr 0xb61300 <col:18, line:467:32> 'UINT64':'unsigned long long' <IntegralCast>
| | |     `-BinaryOperator 0xb612e0 <line:578:18, line:467:32> 'unsigned int' '/'
| | |       |-ImplicitCastExpr 0xb612b0 <line:578:18> 'UINT32':'unsigned int' <LValueToRValue>
| | |       | `-DeclRefExpr 0xb61270 <col:18> 'UINT32':'unsigned int' lvalue Var 0xb59d98 'g_sysClock' 'UINT32':'unsigned int'
| | |       `-ImplicitCastExpr 0xb612c8 <line:467:32> 'unsigned int' <IntegralCast>
| | |         `-IntegerLiteral 0xb61290 <col:32> 'int' 1000000
| | |-IfStmt 0xb61420 <line:579:5, line:581:5>
| | | |-BinaryOperator 0xb613a0 <line:579:9, col:16> 'int' '=='
| | | | |-ImplicitCastExpr 0xb61370 <col:9> 'UINT64':'unsigned long long' <LValueToRValue>
| | | | | `-DeclRefExpr 0xb61330 <col:9> 'UINT64':'unsigned long long' lvalue Var 0xb61208 'tmp' 'UINT64':'unsigned long long'
| | | | `-ImplicitCastExpr 0xb61388 <col:16> 'unsigned long long' <IntegralCast>
| | | |   `-IntegerLiteral 0xb61350 <col:16> 'int' 0
| | | `-CompoundStmt 0xb61408 <col:19, line:581:5>
| | |   `-ReturnStmt 0xb613f8 <line:580:9, col:16>
| | |     `-ImplicitCastExpr 0xb613e0 <col:16> 'UINT64':'unsigned long long' <IntegralCast>
| | |       `-IntegerLiteral 0xb613c0 <col:16> 'int' 0
| | `-ReturnStmt 0xb61540 <line:582:5, col:32>
| |   `-CStyleCastExpr 0xb61518 <col:12, col:32> 'UINT64':'unsigned long long' <NoOp>
| |     `-ParenExpr 0xb614f8 <col:20, col:32> 'unsigned long long'
| |       `-BinaryOperator 0xb614a8 <col:21, col:29> 'unsigned long long' '/'
| |         |-ImplicitCastExpr 0xb61478 <col:21> 'UINT64':'unsigned long long' <LValueToRValue>
| |         | `-DeclRefExpr 0xb61438 <col:21> 'UINT64':'unsigned long long' lvalue ParmVar 0xb610c0 'cycle' 'UINT64':'unsigned long long'
| |         `-ImplicitCastExpr 0xb61490 <col:29> 'UINT64':'unsigned long long' <LValueToRValue>
| |           `-DeclRefExpr 0xb61458 <col:29> 'UINT64':'unsigned long long' lvalue Var 0xb61208 'tmp' 'UINT64':'unsigned long long'
| `-FullComment 0xba00d0 <line:559:3, line:574:13>
|   |-ParagraphComment 0xb9f7c0 <line:559:3>
|   | `-TextComment 0xb9f790 <col:3> Text=" "
|   |-VerbatimLineComment 0xb9f7e0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xb9f850 <line:560:3>
|   | `-TextComment 0xb9f820 <col:3> Text=" "
|   |-BlockCommandComment 0xb9f870 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xb9f8d0 <col:10, col:41>
|   |   `-TextComment 0xb9f8a0 <col:10, col:41> Text=" Convert cycles to microseconds."
|   |-ParagraphComment 0xb9f920 <line:562:3>
|   | `-TextComment 0xb9f8f0 <col:3> Text=" "
|   |-BlockCommandComment 0xb9f940 <col:4, line:564:3> Name="par"
|   | `-ParagraphComment 0xb9f9f0 <line:562:8, line:564:3>
|   |   |-TextComment 0xb9f970 <line:562:8, col:20> Text=" Description:"
|   |   |-TextComment 0xb9f990 <line:563:3, col:54> Text=" This API is used to convert cycles to microseconds."
|   |   `-TextComment 0xb9f9b0 <line:564:3> Text=" "
|   |-BlockCommandComment 0xb9fa10 <col:4, line:567:8> Name="attention"
|   | `-ParagraphComment 0xb9fbe0 <line:565:3, line:567:8>
|   |   |-TextComment 0xb9fa40 <line:565:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9fa60 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xb9faa0 <line:566:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9fac0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xb9fb00 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xb9fb20 <col:13, col:17> Name="li"
|   |   |-TextComment 0xb9fb50 <line:567:3> Text=" "
|   |   `-HTMLEndTagComment 0xb9fb70 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xb9fc30 <line:569:3>
|   | `-TextComment 0xb9fc00 <col:3> Text=" "
|   |-ParamCommandComment 0xb9fc50 <col:4, col:43> [in] implicitly Param="cycle" ParamIndex=0
|   | `-ParagraphComment 0xb9fce0 <col:17, col:43>
|   |   `-TextComment 0xb9fcb0 <col:17, col:43> Text="     [IN] Number of cycles."
|   |-ParagraphComment 0xb9fd30 <line:571:3>
|   | `-TextComment 0xb9fd00 <col:3> Text=" "
|   |-BlockCommandComment 0xb9fd50 <col:4, line:572:3> Name="retval"
|   | `-ParagraphComment 0xb9fdd0 <line:571:11, line:572:3>
|   |   |-TextComment 0xb9fd80 <line:571:11, col:117> Text=" Number of microseconds obtained through the conversion. Cycles are successfully converted to microseconds."
|   |   `-TextComment 0xb9fda0 <line:572:3> Text=" "
|   |-BlockCommandComment 0xb9fdf0 <col:4, line:574:3> Name="par"
|   | `-ParagraphComment 0xb9ffc0 <line:572:8, line:574:3>
|   |   |-TextComment 0xb9fe20 <line:572:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xb9fe40 <line:573:3> Text=" "
|   |   |-HTMLStartTagComment 0xb9fe60 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xb9fea0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xb9fee0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xb9ff00 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xb9ff30 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xb9ff60 <line:574:3> Text=" "
|   `-BlockCommandComment 0xb9ffe0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xba0040 <col:8, col:13>
|       `-TextComment 0xba0010 <col:8, col:13> Text=" None."
|-EnumDecl 0xb61578 <main/los_sortlink.h:44:9, line:47:1> line:44:9
| |-EnumConstantDecl 0xb61678 <line:45:5, col:25> col:5 OS_SORT_LINK_TASK 'int'
| | `-ConstantExpr 0xb61660 <col:25> 'int'
| |   `-IntegerLiteral 0xb61640 <col:25> 'int' 1
| `-EnumConstantDecl 0xb61700 <line:46:5, col:26> col:5 OS_SORT_LINK_SWTMR 'int'
|   `-ConstantExpr 0xb616e8 <col:26> 'int'
|     `-IntegerLiteral 0xb616c8 <col:26> 'int' 2
|-TypedefDecl 0xb617a8 <line:44:1, line:47:3> col:3 referenced SortLinkType 'enum SortLinkType':'SortLinkType'
| `-ElaboratedType 0xb61750 'enum SortLinkType' sugar
|   `-EnumType 0xb61620 'SortLinkType'
|     `-Enum 0xb61578 ''
|-RecordDecl 0xb61818 <line:49:9, line:52:1> line:49:9 struct definition
| |-FieldDecl 0xb62a10 <line:50:5, col:17> col:17 referenced sortLinkNode 'LOS_DL_LIST':'struct LOS_DL_LIST'
| `-FieldDecl 0xb62a70 <line:51:5, col:17> col:17 referenced responseTime 'UINT64':'unsigned long long'
|-TypedefDecl 0xb62b78 <line:49:1, line:52:3> col:3 referenced SortLinkList 'struct SortLinkList':'SortLinkList'
| `-ElaboratedType 0xb62b20 'struct SortLinkList' sugar
|   `-RecordType 0xb618a0 'SortLinkList'
|     `-Record 0xb61818 ''
|-RecordDecl 0xb62be8 <line:54:9, line:56:1> line:54:9 struct definition
| `-FieldDecl 0xb62ca0 <line:55:5, col:17> col:17 referenced sortLink 'LOS_DL_LIST':'struct LOS_DL_LIST'
|-TypedefDecl 0xb62d48 <line:54:1, line:56:3> col:3 referenced SortLinkAttribute 'struct SortLinkAttribute':'SortLinkAttribute'
| `-ElaboratedType 0xb62cf0 'struct SortLinkAttribute' sugar
|   `-RecordType 0xb62c70 'SortLinkAttribute'
|     `-Record 0xb62be8 ''
|-VarDecl 0xb62df0 <line:58:1, col:26> col:26 used g_taskSortLink 'SortLinkAttribute':'SortLinkAttribute' extern
|-VarDecl 0xb62e68 <line:59:1, col:26> col:26 used g_swtmrSortLink 'SortLinkAttribute':'SortLinkAttribute' extern
|-FunctionDecl 0xb630e8 <main/los_compiler.h:158:22, main/los_sortlink.h:73:1> line:67:22 OsSortLinkGetRemainTime 'UINT64 (UINT64, const SortLinkList *)' static inline
| |-ParmVarDecl 0xb62ee0 <col:46, col:53> col:53 used currTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xb62fd8 <col:63, col:83> col:83 used targetSortList 'const SortLinkList *'
| `-CompoundStmt 0xb633f0 <line:68:1, line:73:1>
|   |-IfStmt 0xb632d0 <line:69:5, line:71:5>
|   | |-BinaryOperator 0xb63250 <line:69:9, col:37> 'int' '>='
|   | | |-ImplicitCastExpr 0xb63220 <col:9> 'UINT64':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0xb63198 <col:9> 'UINT64':'unsigned long long' lvalue ParmVar 0xb62ee0 'currTime' 'UINT64':'unsigned long long'
|   | | `-ImplicitCastExpr 0xb63238 <col:21, col:37> 'UINT64':'unsigned long long' <LValueToRValue>
|   | |   `-MemberExpr 0xb631f0 <col:21, col:37> 'const UINT64':'const unsigned long long' lvalue ->responseTime 0xb62a70
|   | |     `-ImplicitCastExpr 0xb631d8 <col:21> 'const SortLinkList *' <LValueToRValue>
|   | |       `-DeclRefExpr 0xb631b8 <col:21> 'const SortLinkList *' lvalue ParmVar 0xb62fd8 'targetSortList' 'const SortLinkList *'
|   | `-CompoundStmt 0xb632b8 <col:51, line:71:5>
|   |   `-ReturnStmt 0xb632a8 <line:70:9, col:16>
|   |     `-ImplicitCastExpr 0xb63290 <col:16> 'UINT64':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0xb63270 <col:16> 'int' 0
|   `-ReturnStmt 0xb633e0 <line:72:5, col:52>
|     `-ParenExpr 0xb633c0 <col:12, col:52> 'unsigned long long'
|       `-BinaryOperator 0xb633a0 <col:13, col:44> 'unsigned long long' '-'
|         |-ImplicitCastExpr 0xb63370 <col:13, col:29> 'UINT64':'unsigned long long' <LValueToRValue>
|         | `-MemberExpr 0xb63320 <col:13, col:29> 'const UINT64':'const unsigned long long' lvalue ->responseTime 0xb62a70
|         |   `-ImplicitCastExpr 0xb63308 <col:13> 'const SortLinkList *' <LValueToRValue>
|         |     `-DeclRefExpr 0xb632e8 <col:13> 'const SortLinkList *' lvalue ParmVar 0xb62fd8 'targetSortList' 'const SortLinkList *'
|         `-ImplicitCastExpr 0xb63388 <col:44> 'UINT64':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0xb63350 <col:44> 'UINT64':'unsigned long long' lvalue ParmVar 0xb62ee0 'currTime' 'UINT64':'unsigned long long'
|-FunctionDecl 0xb63568 <main/los_compiler.h:158:22, main/los_sortlink.h:79:1> line:75:20 OsDeleteNodeSortLink 'void (SortLinkList *)' static inline
| |-ParmVarDecl 0xb63478 <col:41, col:55> col:55 used sortList 'SortLinkList *'
| `-CompoundStmt 0xb638e0 <line:76:1, line:79:1>
|   |-CallExpr 0xb636c8 <line:77:5, col:43> 'void'
|   | |-ImplicitCastExpr 0xb636b0 <col:5> 'void (*)(LOS_DL_LIST *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xb63610 <col:5> 'void (LOS_DL_LIST *)' Function 0xb3fb90 'LOS_ListDelete' 'void (LOS_DL_LIST *)'
|   | `-UnaryOperator 0xb63698 <col:20, col:31> 'LOS_DL_LIST *' prefix '&' cannot overflow
|   |   `-MemberExpr 0xb63668 <col:21, col:31> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue ->sortLinkNode 0xb62a10
|   |     `-ImplicitCastExpr 0xb63650 <col:21> 'SortLinkList *' <LValueToRValue>
|   |       `-DeclRefExpr 0xb63630 <col:21> 'SortLinkList *' lvalue ParmVar 0xb63478 'sortList' 'SortLinkList *'
|   `-ParenExpr 0xb638c0 <line:62:45, col:98> 'UINT64':'unsigned long long'
|     `-BinaryOperator 0xb638a0 <col:46, col:97> 'UINT64':'unsigned long long' '='
|       |-MemberExpr 0xb637c0 <col:46, col:76> 'UINT64':'unsigned long long' lvalue ->responseTime 0xb62a70
|       | `-ParenExpr 0xb637a0 <col:46, col:73> 'SortLinkList *'
|       |   `-CStyleCastExpr 0xb63778 <col:47, col:72> 'SortLinkList *' <NoOp>
|       |     `-ImplicitCastExpr 0xb63760 <col:63, col:72> 'SortLinkList *' <LValueToRValue> part_of_explicit_cast
|       |       `-ParenExpr 0xb63740 <col:63, col:72> 'SortLinkList *' lvalue
|       |         `-DeclRefExpr 0xb636f0 <line:78:24> 'SortLinkList *' lvalue ParmVar 0xb63478 'sortList' 'SortLinkList *'
|       `-ParenExpr 0xb63880 <line:62:91, col:97> 'UINT64':'unsigned long long'
|         `-ParenExpr 0xb63860 <line:61:35, col:46> 'UINT64':'unsigned long long'
|           `-CStyleCastExpr 0xb63838 <col:36, col:45> 'UINT64':'unsigned long long' <IntegralCast>
|             `-UnaryOperator 0xb63810 <col:44, col:45> 'int' prefix '-'
|               `-IntegerLiteral 0xb637f0 <col:45> 'int' 1
|-FunctionDecl 0xb64cd8 <main/los_compiler.h:158:22, main/los_sortlink.h:96:1> line:81:22 used GetSortLinkNextExpireTime 'UINT64 (SortLinkAttribute *, UINT64, UINT32)' static inline
| |-ParmVarDecl 0xb63968 <col:48, col:67> col:67 used sortHeader 'SortLinkAttribute *'
| |-ParmVarDecl 0xb64b40 <col:79, col:86> col:86 used startTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xb64bb8 <col:97, col:104> col:104 used tickPrecision 'UINT32':'unsigned int'
| `-CompoundStmt 0xb658a8 <line:82:1, line:96:1>
|   |-DeclStmt 0xb64e88 <line:83:5, col:46>
|   | `-VarDecl 0xb64da0 <col:5, col:38> col:18 used head 'LOS_DL_LIST *' cinit
|   |   `-UnaryOperator 0xb64e70 <col:25, col:38> 'LOS_DL_LIST *' prefix '&' cannot overflow
|   |     `-MemberExpr 0xb64e40 <col:26, col:38> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue ->sortLink 0xb62ca0
|   |       `-ImplicitCastExpr 0xb64e28 <col:26> 'SortLinkAttribute *' <LValueToRValue>
|   |         `-DeclRefExpr 0xb64e08 <col:26> 'SortLinkAttribute *' lvalue ParmVar 0xb63968 'sortHeader' 'SortLinkAttribute *'
|   |-DeclStmt 0xb64f98 <line:84:5, col:38>
|   | `-VarDecl 0xb64eb0 <col:5, col:31> col:18 used list 'LOS_DL_LIST *' cinit
|   |   `-ImplicitCastExpr 0xb64f80 <col:25, col:31> 'struct LOS_DL_LIST *' <LValueToRValue>
|   |     `-MemberExpr 0xb64f50 <col:25, col:31> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xb3a740
|   |       `-ImplicitCastExpr 0xb64f38 <col:25> 'LOS_DL_LIST *' <LValueToRValue>
|   |         `-DeclRefExpr 0xb64f18 <col:25> 'LOS_DL_LIST *' lvalue Var 0xb64da0 'head' 'LOS_DL_LIST *'
|   |-IfStmt 0xb651c8 <line:86:5, line:88:5>
|   | |-CallExpr 0xb65060 <line:86:9, col:27> 'BOOL':'unsigned int'
|   | | |-ImplicitCastExpr 0xb65048 <col:9> 'BOOL (*)(LOS_DL_LIST *)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0xb64fb0 <col:9> 'BOOL (LOS_DL_LIST *)' Function 0xb402f8 'LOS_ListEmpty' 'BOOL (LOS_DL_LIST *)'
|   | | `-ImplicitCastExpr 0xb65088 <col:23> 'LOS_DL_LIST *' <LValueToRValue>
|   | |   `-DeclRefExpr 0xb64fd0 <col:23> 'LOS_DL_LIST *' lvalue Var 0xb64da0 'head' 'LOS_DL_LIST *'
|   | `-CompoundStmt 0xb651b0 <col:30, line:88:5>
|   |   `-ReturnStmt 0xb651a0 <line:87:9, col:42>
|   |     `-BinaryOperator 0xb65180 <line:65:33, line:87:42> 'unsigned long long' '-'
|   |       |-ParenExpr 0xb65110 <line:65:33, col:44> 'UINT64':'unsigned long long'
|   |       | `-CStyleCastExpr 0xb650e8 <col:34, col:43> 'UINT64':'unsigned long long' <IntegralCast>
|   |       |   `-UnaryOperator 0xb650c0 <col:42, col:43> 'int' prefix '-'
|   |       |     `-IntegerLiteral 0xb650a0 <col:43> 'int' 1
|   |       `-ImplicitCastExpr 0xb65168 <line:87:42> 'unsigned long long' <IntegralCast>
|   |         `-ImplicitCastExpr 0xb65150 <col:42> 'UINT32':'unsigned int' <LValueToRValue>
|   |           `-DeclRefExpr 0xb65130 <col:42> 'UINT32':'unsigned int' lvalue ParmVar 0xb64bb8 'tickPrecision' 'UINT32':'unsigned int'
|   |-DeclStmt 0xb65590 <line:90:5, col:83>
|   | `-VarDecl 0xb651f0 <col:5, main/los_list.h:277:69> main/los_sortlink.h:90:19 used listSorted 'SortLinkList *' cinit
|   |   `-ParenExpr 0xb65518 <main/los_list.h:277:5, col:69> 'SortLinkList *'
|   |     `-CStyleCastExpr 0xb654f0 <col:6, col:68> 'SortLinkList *' <BitCast>
|   |       `-CStyleCastExpr 0xb654b8 <col:14, col:68> 'void *' <BitCast>
|   |         `-ParenExpr 0xb65498 <col:22, col:68> 'CHAR *'
|   |           `-BinaryOperator 0xb65440 <col:23, line:251:69> 'CHAR *' '-'
|   |             |-CStyleCastExpr 0xb652e0 <line:277:23, col:36> 'CHAR *' <BitCast>
|   |             | `-ImplicitCastExpr 0xb652c8 <col:31, col:36> 'LOS_DL_LIST *' <LValueToRValue> part_of_explicit_cast
|   |             |   `-ParenExpr 0xb652a8 <col:31, col:36> 'LOS_DL_LIST *' lvalue
|   |             |     `-DeclRefExpr 0xb65258 <main/los_sortlink.h:90:50> 'LOS_DL_LIST *' lvalue Var 0xb64eb0 'list' 'LOS_DL_LIST *'
|   |             `-ParenExpr 0xb65420 <main/los_list.h:251:38, col:69> 'UINT32':'unsigned int'
|   |               `-CStyleCastExpr 0xb653f8 <col:39, col:68> 'UINT32':'unsigned int' <PointerToIntegral>
|   |                 `-UnaryOperator 0xb653d0 <col:47, col:68> 'LOS_DL_LIST *' prefix '&' cannot overflow
|   |                   `-ParenExpr 0xb653b0 <col:48, col:68> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue
|   |                     `-MemberExpr 0xb65380 <col:49, main/los_sortlink.h:90:70> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue ->sortLinkNode 0xb62a10
|   |                       `-ParenExpr 0xb65360 <main/los_list.h:251:49, col:59> 'SortLinkList *'
|   |                         `-CStyleCastExpr 0xb65338 <col:50, col:58> 'SortLinkList *' <NullToPointer>
|   |                           `-IntegerLiteral 0xb65308 <col:58> 'int' 0
|   |-IfStmt 0xb65800 <main/los_sortlink.h:91:5, line:93:5>
|   | |-BinaryOperator 0xb656f0 <line:91:9, col:63> 'int' '<='
|   | | |-ImplicitCastExpr 0xb656d8 <col:9, col:21> 'UINT64':'unsigned long long' <LValueToRValue>
|   | | | `-MemberExpr 0xb655e0 <col:9, col:21> 'UINT64':'unsigned long long' lvalue ->responseTime 0xb62a70
|   | | |   `-ImplicitCastExpr 0xb655c8 <col:9> 'SortLinkList *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0xb655a8 <col:9> 'SortLinkList *' lvalue Var 0xb651f0 'listSorted' 'SortLinkList *'
|   | | `-ParenExpr 0xb656b8 <col:37, col:63> 'unsigned long long'
|   | |   `-BinaryOperator 0xb65698 <col:38, col:50> 'unsigned long long' '+'
|   | |     |-ImplicitCastExpr 0xb65650 <col:38> 'UINT64':'unsigned long long' <LValueToRValue>
|   | |     | `-DeclRefExpr 0xb65610 <col:38> 'UINT64':'unsigned long long' lvalue ParmVar 0xb64b40 'startTime' 'UINT64':'unsigned long long'
|   | |     `-ImplicitCastExpr 0xb65680 <col:50> 'unsigned long long' <IntegralCast>
|   | |       `-ImplicitCastExpr 0xb65668 <col:50> 'UINT32':'unsigned int' <LValueToRValue>
|   | |         `-DeclRefExpr 0xb65630 <col:50> 'UINT32':'unsigned int' lvalue ParmVar 0xb64bb8 'tickPrecision' 'UINT32':'unsigned int'
|   | `-CompoundStmt 0xb657e8 <col:66, line:93:5>
|   |   `-ReturnStmt 0xb657d8 <line:92:9, col:42>
|   |     `-ParenExpr 0xb657b8 <col:16, col:42> 'unsigned long long'
|   |       `-BinaryOperator 0xb65798 <col:17, col:29> 'unsigned long long' '+'
|   |         |-ImplicitCastExpr 0xb65750 <col:17> 'UINT64':'unsigned long long' <LValueToRValue>
|   |         | `-DeclRefExpr 0xb65710 <col:17> 'UINT64':'unsigned long long' lvalue ParmVar 0xb64b40 'startTime' 'UINT64':'unsigned long long'
|   |         `-ImplicitCastExpr 0xb65780 <col:29> 'unsigned long long' <IntegralCast>
|   |           `-ImplicitCastExpr 0xb65768 <col:29> 'UINT32':'unsigned int' <LValueToRValue>
|   |             `-DeclRefExpr 0xb65730 <col:29> 'UINT32':'unsigned int' lvalue ParmVar 0xb64bb8 'tickPrecision' 'UINT32':'unsigned int'
|   `-ReturnStmt 0xb65898 <line:95:5, col:24>
|     `-ImplicitCastExpr 0xb65880 <col:12, col:24> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-MemberExpr 0xb65850 <col:12, col:24> 'UINT64':'unsigned long long' lvalue ->responseTime 0xb62a70
|         `-ImplicitCastExpr 0xb65838 <col:12> 'SortLinkList *' <LValueToRValue>
|           `-DeclRefExpr 0xb65818 <col:12> 'SortLinkList *' lvalue Var 0xb651f0 'listSorted' 'SortLinkList *'
|-FunctionDecl 0xb65a88 <main/los_compiler.h:158:22, main/los_sortlink.h:103:1> line:98:22 OsGetNextExpireTime 'UINT64 (UINT64, UINT32)' static inline
| |-ParmVarDecl 0xb658f8 <col:42, col:49> col:49 used startTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xb65970 <col:60, col:67> col:67 used tickPrecision 'UINT32':'unsigned int'
| `-CompoundStmt 0xb667d8 <line:99:1, line:103:1>
|   |-DeclStmt 0xb664b8 <line:100:5, col:97>
|   | `-VarDecl 0xb662e0 <col:5, col:96> col:12 used taskExpireTime 'UINT64':'unsigned long long' cinit
|   |   `-CallExpr 0xb66450 <col:29, col:96> 'UINT64':'unsigned long long'
|   |     |-ImplicitCastExpr 0xb66438 <col:29> 'UINT64 (*)(SortLinkAttribute *, UINT64, UINT32)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0xb66348 <col:29> 'UINT64 (SortLinkAttribute *, UINT64, UINT32)' Function 0xb64cd8 'GetSortLinkNextExpireTime' 'UINT64 (SortLinkAttribute *, UINT64, UINT32)'
|   |     |-UnaryOperator 0xb66388 <col:55, col:56> 'SortLinkAttribute *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0xb66368 <col:56> 'SortLinkAttribute':'SortLinkAttribute' lvalue Var 0xb62df0 'g_taskSortLink' 'SortLinkAttribute':'SortLinkAttribute'
|   |     |-ImplicitCastExpr 0xb66488 <col:72> 'UINT64':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0xb663a0 <col:72> 'UINT64':'unsigned long long' lvalue ParmVar 0xb658f8 'startTime' 'UINT64':'unsigned long long'
|   |     `-ImplicitCastExpr 0xb664a0 <col:83> 'UINT32':'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0xb663c0 <col:83> 'UINT32':'unsigned int' lvalue ParmVar 0xb65970 'tickPrecision' 'UINT32':'unsigned int'
|   |-DeclStmt 0xb66660 <line:101:5, col:99>
|   | `-VarDecl 0xb664e0 <col:5, col:98> col:12 used swtmrExpireTime 'UINT64':'unsigned long long' cinit
|   |   `-CallExpr 0xb665f8 <col:30, col:98> 'UINT64':'unsigned long long'
|   |     |-ImplicitCastExpr 0xb665e0 <col:30> 'UINT64 (*)(SortLinkAttribute *, UINT64, UINT32)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0xb66548 <col:30> 'UINT64 (SortLinkAttribute *, UINT64, UINT32)' Function 0xb64cd8 'GetSortLinkNextExpireTime' 'UINT64 (SortLinkAttribute *, UINT64, UINT32)'
|   |     |-UnaryOperator 0xb66588 <col:56, col:57> 'SortLinkAttribute *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0xb66568 <col:57> 'SortLinkAttribute':'SortLinkAttribute' lvalue Var 0xb62e68 'g_swtmrSortLink' 'SortLinkAttribute':'SortLinkAttribute'
|   |     |-ImplicitCastExpr 0xb66630 <col:74> 'UINT64':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0xb665a0 <col:74> 'UINT64':'unsigned long long' lvalue ParmVar 0xb658f8 'startTime' 'UINT64':'unsigned long long'
|   |     `-ImplicitCastExpr 0xb66648 <col:85> 'UINT32':'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0xb665c0 <col:85> 'UINT32':'unsigned int' lvalue ParmVar 0xb65970 'tickPrecision' 'UINT32':'unsigned int'
|   `-ReturnStmt 0xb667c8 <line:102:5, col:66>
|     `-ConditionalOperator 0xb66798 <col:12, col:66> 'unsigned long long'
|       |-ParenExpr 0xb66708 <col:12, col:45> 'int'
|       | `-BinaryOperator 0xb666e8 <col:13, col:30> 'int' '<'
|       |   |-ImplicitCastExpr 0xb666b8 <col:13> 'UINT64':'unsigned long long' <LValueToRValue>
|       |   | `-DeclRefExpr 0xb66678 <col:13> 'UINT64':'unsigned long long' lvalue Var 0xb662e0 'taskExpireTime' 'UINT64':'unsigned long long'
|       |   `-ImplicitCastExpr 0xb666d0 <col:30> 'UINT64':'unsigned long long' <LValueToRValue>
|       |     `-DeclRefExpr 0xb66698 <col:30> 'UINT64':'unsigned long long' lvalue Var 0xb664e0 'swtmrExpireTime' 'UINT64':'unsigned long long'
|       |-ImplicitCastExpr 0xb66768 <col:49> 'UINT64':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0xb66728 <col:49> 'UINT64':'unsigned long long' lvalue Var 0xb662e0 'taskExpireTime' 'UINT64':'unsigned long long'
|       `-ImplicitCastExpr 0xb66780 <col:66> 'UINT64':'unsigned long long' <LValueToRValue>
|         `-DeclRefExpr 0xb66748 <col:66> 'UINT64':'unsigned long long' lvalue Var 0xb664e0 'swtmrExpireTime' 'UINT64':'unsigned long long'
|-FunctionDecl 0xb66928 <line:105:1, col:60> col:20 OsGetSortLinkAttribute 'SortLinkAttribute *(SortLinkType)'
| `-ParmVarDecl 0xb66830 <col:43, col:56> col:56 type 'SortLinkType':'SortLinkType'
|-FunctionDecl 0xb66ad8 <line:106:1, col:56> col:8 OsSortLinkInit 'UINT32 (SortLinkAttribute *)'
| `-ParmVarDecl 0xb669e0 <col:23, col:42> col:42 sortLinkHeader 'SortLinkAttribute *'
|-FunctionDecl 0xb66e38 <main/los_compiler.h:327:23, main/los_sortlink.h:107:94> col:6 OsAdd2SortLink 'void (SortLinkList *, UINT64, UINT32, SortLinkType)'
| |-ParmVarDecl 0xb66b90 <col:21, col:35> col:35 node 'SortLinkList *'
| |-ParmVarDecl 0xb66c08 <col:41, col:48> col:48 startTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xb66c80 <col:59, col:66> col:66 waitTicks 'UINT32':'unsigned int'
| `-ParmVarDecl 0xb66cf8 <col:77, col:90> col:90 type 'SortLinkType':'SortLinkType'
|-FunctionDecl 0xb66f98 <main/los_compiler.h:327:23, main/los_sortlink.h:108:41> col:6 OsDeleteSortLink 'void (SortLinkList *)'
| `-ParmVarDecl 0xb66f08 <col:23, col:37> col:37 node 'SortLinkList *'
|-FunctionDecl 0xb67160 <line:109:1, col:89> col:8 OsSortLinkGetTargetExpireTime 'UINT64 (UINT64, const SortLinkList *)'
| |-ParmVarDecl 0xb67050 <col:38, col:45> col:45 currTime 'UINT64':'unsigned long long'
| `-ParmVarDecl 0xb670c8 <col:55, col:75> col:75 targetSortList 'const SortLinkList *'
|-FunctionDecl 0xb673d8 <line:110:1, col:75> col:8 OsSortLinkGetNextExpireTime 'UINT64 (const SortLinkAttribute *)'
| `-ParmVarDecl 0xb672e0 <col:36, col:61> col:61 sortLinkHeader 'const SortLinkAttribute *'
|-TypedefDecl 0xb67d98 <main/los_task.h:448:1, col:43> col:17 referenced TSK_ENTRY_FUNC 'void *(*)(UINT32)'
| |-PointerType 0xb67d30 'void *(*)(UINT32)'
| | `-ParenType 0xb67cd0 'void *(UINT32)' sugar
| |   `-FunctionProtoType 0xb67ca0 'void *(UINT32)' cdecl
| |     |-PointerType 0xa9e560 'void *'
| |     | `-BuiltinType 0xa9dda0 'void'
| |     `-TypedefType 0xb01720 'UINT32' sugar
| |       |-Typedef 0xb01050 'UINT32'
| |       `-BuiltinType 0xa9dee0 'unsigned int'
| `-FullComment 0xba0290 <line:444:3, line:447:1>
|   |-ParagraphComment 0xba0170 <line:444:3>
|   | `-TextComment 0xba0140 <col:3> Text=" "
|   |-VerbatimLineComment 0xba0190 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xba0200 <line:445:3, col:46>
|   | `-TextComment 0xba01d0 <col:3, col:46> Text=" Define the type of the task entry function."
|   `-ParagraphComment 0xba0250 <line:447:1>
|     `-TextComment 0xba0220 <col:1> Text=" "
|-RecordDecl 0xb67e18 <line:456:9, line:464:1> line:456:16 struct tagTskInitParam definition
| |-FullComment 0xba0450 <line:451:3, line:454:70>
| | |-ParagraphComment 0xba0330 <line:451:3>
| | | `-TextComment 0xba0300 <col:3> Text=" "
| | |-VerbatimLineComment 0xba0350 <col:4, col:21> Text=" los_task"
| | |-ParagraphComment 0xba03c0 <line:452:3, col:65>
| | | `-TextComment 0xba0390 <col:3, col:65> Text=" Define the structure of the parameters used for task creation."
| | `-ParagraphComment 0xba0410 <line:454:3, col:70>
| |   `-TextComment 0xba03e0 <col:3, col:70> Text=" Information of specified parameters passed in during task creation."
| |-FieldDecl 0xb67ef0 <line:457:5, col:26> col:26 pfnTaskEntry 'TSK_ENTRY_FUNC':'void *(*)(UINT32)'
| | `-FullComment 0xba0d40 <col:57, col:96>
| |   `-ParagraphComment 0xba0d10 <col:57, col:96>
| |     `-TextComment 0xba04c0 <col:57, col:96> Text=" Task entrance function                 "
| |-FieldDecl 0xb67f78 <line:458:5, col:26> col:26 usTaskPrio 'UINT16':'unsigned short'
| | `-FullComment 0xba0e10 <col:57, col:96>
| |   `-ParagraphComment 0xba0de0 <col:57, col:96>
| |     `-TextComment 0xba0db0 <col:57, col:96> Text=" Task priority                          "
| |-FieldDecl 0xb68008 <line:459:5, col:26> col:26 uwArg 'UINT32':'unsigned int'
| | `-FullComment 0xba0ee0 <col:57, col:96>
| |   `-ParagraphComment 0xba0eb0 <col:57, col:96>
| |     `-TextComment 0xba0e80 <col:57, col:96> Text=" Task parameters                        "
| |-FieldDecl 0xb68098 <line:460:5, col:26> col:26 stackAddr 'UINTPTR':'unsigned int'
| | `-FullComment 0xba0fb0 <col:57, col:96>
| |   `-ParagraphComment 0xba0f80 <col:57, col:96>
| |     `-TextComment 0xba0f50 <col:57, col:96> Text=" Task satck memory                      "
| |-FieldDecl 0xb68128 <line:461:5, col:26> col:26 uwStackSize 'UINT32':'unsigned int'
| | `-FullComment 0xba1080 <col:57, col:96>
| |   `-ParagraphComment 0xba1050 <col:57, col:96>
| |     `-TextComment 0xba1020 <col:57, col:96> Text=" Task stack size                        "
| |-FieldDecl 0xb681b8 <line:462:5, col:27> col:27 pcName 'CHAR *'
| | `-FullComment 0xba1150 <col:57, col:96>
| |   `-ParagraphComment 0xba1120 <col:57, col:96>
| |     `-TextComment 0xba10f0 <col:57, col:96> Text=" Task name                              "
| `-FieldDecl 0xb68248 <line:463:5, col:26> col:26 uwResved 'UINT32':'unsigned int'
|   `-FullComment 0xba1220 <col:57, col:96>
|     `-ParagraphComment 0xba11f0 <col:57, col:96>
|       `-TextComment 0xba11c0 <col:57, col:96> Text=" Reserved                               "
|-TypedefDecl 0xb6dd98 <line:456:1, line:464:3> col:3 referenced TSK_INIT_PARAM_S 'struct tagTskInitParam':'struct tagTskInitParam'
| |-ElaboratedType 0xb6dd40 'struct tagTskInitParam' sugar
| | `-RecordType 0xb67ea0 'struct tagTskInitParam'
| |   `-Record 0xb67e18 'tagTskInitParam'
| `-FullComment 0xba13e0 <line:451:3, line:454:70>
|   |-ParagraphComment 0xba12c0 <line:451:3>
|   | `-TextComment 0xba1290 <col:3> Text=" "
|   |-VerbatimLineComment 0xba12e0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xba1350 <line:452:3, col:65>
|   | `-TextComment 0xba1320 <col:3, col:65> Text=" Define the structure of the parameters used for task creation."
|   `-ParagraphComment 0xba13a0 <line:454:3, col:70>
|     `-TextComment 0xba1370 <col:3, col:70> Text=" Information of specified parameters passed in during task creation."
|-RecordDecl 0xb6de90 <line:482:9, line:500:1> line:482:16 struct tagTskInfo definition
| |-FullComment 0xba1550 <line:479:3, line:480:30>
| | |-ParagraphComment 0xba1480 <line:479:3>
| | | `-TextComment 0xba1450 <col:3> Text=" "
| | |-VerbatimLineComment 0xba14a0 <col:4, col:21> Text=" los_task"
| | `-ParagraphComment 0xba1510 <line:480:3, col:30>
| |   `-TextComment 0xba14e0 <col:3, col:30> Text=" Task information structure."
| |-FieldDecl 0xb6e008 <line:483:5, col:48> col:25 acName 'CHAR [32]'
| | `-FullComment 0xba1620 <col:57, col:88>
| |   `-ParagraphComment 0xba15f0 <col:57, col:88>
| |     `-TextComment 0xba15c0 <col:57, col:88> Text=" Task entrance function         "
| |-FieldDecl 0xb6e098 <line:484:5, col:25> col:25 uwTaskID 'UINT32':'unsigned int'
| | `-FullComment 0xba16f0 <col:57, col:88>
| |   `-ParagraphComment 0xba16c0 <col:57, col:88>
| |     `-TextComment 0xba1690 <col:57, col:88> Text=" Task ID                        "
| |-FieldDecl 0xb6e128 <line:485:5, col:25> col:25 usTaskStatus 'UINT16':'unsigned short'
| | `-FullComment 0xba17c0 <col:57, col:88>
| |   `-ParagraphComment 0xba1790 <col:57, col:88>
| |     `-TextComment 0xba1760 <col:57, col:88> Text=" Task status                    "
| |-FieldDecl 0xb6e1b8 <line:486:5, col:25> col:25 usTaskPrio 'UINT16':'unsigned short'
| | `-FullComment 0xba1890 <col:57, col:88>
| |   `-ParagraphComment 0xba1860 <col:57, col:88>
| |     `-TextComment 0xba1830 <col:57, col:88> Text=" Task priority                  "
| |-FieldDecl 0xb6e250 <main/los_compiler.h:327:23, main/los_task.h:487:26> col:26 pTaskSem 'void *'
| | `-FullComment 0xba1960 <col:57, col:88>
| |   `-ParagraphComment 0xba1930 <col:57, col:88>
| |     `-TextComment 0xba1900 <col:57, col:88> Text=" Semaphore pointer              "
| |-FieldDecl 0xb6e2e0 <main/los_compiler.h:327:23, main/los_task.h:488:26> col:26 pTaskMux 'void *'
| | `-FullComment 0xba1a30 <col:57, col:88>
| |   `-ParagraphComment 0xba1a00 <col:57, col:88>
| |     `-TextComment 0xba19d0 <col:57, col:88> Text=" Mutex pointer                  "
| |-FieldDecl 0xb6e368 <line:489:5, col:25> col:25 uwSemID 'UINT32':'unsigned int'
| | `-FullComment 0xba1b00 <col:57, col:88>
| |   `-ParagraphComment 0xba1ad0 <col:57, col:88>
| |     `-TextComment 0xba1aa0 <col:57, col:88> Text=" Sem ID                         "
| |-FieldDecl 0xb6e3f8 <line:490:5, col:25> col:25 uwMuxID 'UINT32':'unsigned int'
| | `-FullComment 0xba1bd0 <col:57, col:88>
| |   `-ParagraphComment 0xba1ba0 <col:57, col:88>
| |     `-TextComment 0xba1b70 <col:57, col:88> Text=" Mux ID                         "
| |-FieldDecl 0xb6e4b0 <line:491:5, col:25> col:25 uwEvent 'EVENT_CB_S':'struct tagEvent'
| | `-FullComment 0xba1ca0 <col:57, col:88>
| |   `-ParagraphComment 0xba1c70 <col:57, col:88>
| |     `-TextComment 0xba1c40 <col:57, col:88> Text=" Event                          "
| |-FieldDecl 0xb6e538 <line:492:5, col:25> col:25 uwEventMask 'UINT32':'unsigned int'
| | `-FullComment 0xba4170 <col:57, col:88>
| |   `-ParagraphComment 0xba4140 <col:57, col:88>
| |     `-TextComment 0xba4110 <col:57, col:88> Text=" Event mask                     "
| |-FieldDecl 0xb6e5c8 <line:493:5, col:25> col:25 uwStackSize 'UINT32':'unsigned int'
| | `-FullComment 0xba4240 <col:57, col:88>
| |   `-ParagraphComment 0xba4210 <col:57, col:88>
| |     `-TextComment 0xba41e0 <col:57, col:88> Text=" Task stack size                "
| |-FieldDecl 0xb6e658 <line:494:5, col:25> col:25 uwTopOfStack 'UINT32':'unsigned int'
| | `-FullComment 0xba4310 <col:57, col:88>
| |   `-ParagraphComment 0xba42e0 <col:57, col:88>
| |     `-TextComment 0xba42b0 <col:57, col:88> Text=" Task stack top                 "
| |-FieldDecl 0xb6e6e8 <line:495:5, col:25> col:25 uwBottomOfStack 'UINT32':'unsigned int'
| | `-FullComment 0xba43e0 <col:57, col:88>
| |   `-ParagraphComment 0xba43b0 <col:57, col:88>
| |     `-TextComment 0xba4380 <col:57, col:88> Text=" Task stack bottom              "
| |-FieldDecl 0xb6e778 <line:496:5, col:25> col:25 uwSP 'UINT32':'unsigned int'
| | `-FullComment 0xba44b0 <col:57, col:88>
| |   `-ParagraphComment 0xba4480 <col:57, col:88>
| |     `-TextComment 0xba4450 <col:57, col:88> Text=" Task SP pointer                "
| |-FieldDecl 0xb6e808 <line:497:5, col:25> col:25 uwCurrUsed 'UINT32':'unsigned int'
| | `-FullComment 0xba4580 <col:57, col:88>
| |   `-ParagraphComment 0xba4550 <col:57, col:88>
| |     `-TextComment 0xba4520 <col:57, col:88> Text=" Current task stack usage       "
| |-FieldDecl 0xb6e898 <line:498:5, col:25> col:25 uwPeakUsed 'UINT32':'unsigned int'
| | `-FullComment 0xba4650 <col:57, col:88>
| |   `-ParagraphComment 0xba4620 <col:57, col:88>
| |     `-TextComment 0xba45f0 <col:57, col:88> Text=" Task stack usage peak          "
| `-FieldDecl 0xb6e928 <line:499:5, col:25> col:25 bOvf 'BOOL':'unsigned int'
|   `-FullComment 0xba4720 <col:57, col:114>
|     `-ParagraphComment 0xba46f0 <col:57, col:114>
|       `-TextComment 0xba46c0 <col:57, col:114> Text=" Flag that indicates whether a task stack overflow occurs "
|-TypedefDecl 0xb6ea08 <line:482:1, line:500:3> col:3 referenced TSK_INFO_S 'struct tagTskInfo':'struct tagTskInfo'
| |-ElaboratedType 0xb6e9b0 'struct tagTskInfo' sugar
| | `-RecordType 0xb6df10 'struct tagTskInfo'
| |   `-Record 0xb6de90 'tagTskInfo'
| `-FullComment 0xba4890 <line:479:3, line:480:30>
|   |-ParagraphComment 0xba47c0 <line:479:3>
|   | `-TextComment 0xba4790 <col:3> Text=" "
|   |-VerbatimLineComment 0xba47e0 <col:4, col:21> Text=" los_task"
|   `-ParagraphComment 0xba4850 <line:480:3, col:30>
|     `-TextComment 0xba4820 <col:3, col:30> Text=" Task information structure."
|-FunctionDecl 0xb6eba0 <line:540:1, col:36> col:13 LOS_Msleep 'void (UINT32)' extern
| |-ParmVarDecl 0xb6eb10 <col:24, col:31> col:31 mSecs 'UINT32':'unsigned int'
| `-FullComment 0xba54f0 <line:515:3, line:538:12>
|   |-ParagraphComment 0xba4930 <line:515:3>
|   | `-TextComment 0xba4900 <col:3> Text=" "
|   |-VerbatimLineComment 0xba4950 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xba49c0 <line:516:3>
|   | `-TextComment 0xba4990 <col:3> Text=" "
|   |-BlockCommandComment 0xba49e0 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0xba4a40 <col:10, col:33>
|   |   `-TextComment 0xba4a10 <col:10, col:33> Text=" Sleep the current task."
|   |-ParagraphComment 0xba4a90 <line:518:3>
|   | `-TextComment 0xba4a60 <col:3> Text=" "
|   |-BlockCommandComment 0xba4ab0 <col:4, line:520:55> Name="par"
|   | `-ParagraphComment 0xba4b60 <line:518:8, line:520:55>
|   |   |-TextComment 0xba4ae0 <line:518:8, col:20> Text=" Description:"
|   |   |-TextComment 0xba4b00 <line:519:3, col:96> Text=" This API is used to delay the execution of the current task. The task is able to be scheduled"
|   |   `-TextComment 0xba4b20 <line:520:3, col:55> Text=" after it is delayed for a specified number of Ticks."
|   |-ParagraphComment 0xba4bb0 <line:522:3>
|   | `-TextComment 0xba4b80 <col:3> Text=" "
|   |-BlockCommandComment 0xba4bd0 <col:4, line:531:8> Name="attention"
|   | `-ParagraphComment 0xba4fe0 <line:523:3, line:531:8>
|   |   |-TextComment 0xba4c00 <line:523:3> Text=" "
|   |   |-HTMLStartTagComment 0xba4c20 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xba4c60 <line:524:3> Text=" "
|   |   |-HTMLStartTagComment 0xba4c80 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba4cc0 <col:8, col:103> Text="The task fails to be delayed if it is being delayed during interrupt processing or it is locked."
|   |   |-HTMLEndTagComment 0xba4ce0 <col:104, col:108> Name="li"
|   |   |-TextComment 0xba4d10 <line:525:3> Text=" "
|   |   |-HTMLStartTagComment 0xba4d30 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba4d70 <col:8, col:63> Text="If 0 is passed in and the task scheduling is not locked,"
|   |   |-TextComment 0xba4d90 <line:526:3, col:85> Text=" execute the next task in the queue of tasks with the priority of the current task."
|   |   |-TextComment 0xba4db0 <line:527:3, col:71> Text=" If no ready task with the priority of the current task is available,"
|   |   |-TextComment 0xba4dd0 <line:528:3, col:85> Text=" the task scheduling will not occur, and the current task continues to be executed."
|   |   |-HTMLEndTagComment 0xba4df0 <col:86, col:90> Name="li"
|   |   |-TextComment 0xba4e20 <line:529:3> Text=" "
|   |   |-HTMLStartTagComment 0xba4e40 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba4e80 <col:8, col:80> Text="The parameter passed in can not be equal to LOS_WAIT_FOREVER(0xFFFFFFFF)."
|   |   |-TextComment 0xba4ea0 <line:530:3, col:112> Text=" If that happens, the task will not sleep 0xFFFFFFFF milliseconds or sleep forever but sleep 0xFFFFFFFF Ticks."
|   |   |-HTMLEndTagComment 0xba4ec0 <col:113, col:117> Name="li"
|   |   |-TextComment 0xba4ef0 <line:531:3> Text=" "
|   |   `-HTMLEndTagComment 0xba4f10 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xba5030 <line:533:3>
|   | `-TextComment 0xba5000 <col:3> Text=" "
|   |-ParamCommandComment 0xba5050 <col:4, col:77> [in] implicitly Param="mSecs" ParamIndex=0
|   | `-ParagraphComment 0xba50e0 <col:16, col:77>
|   |   `-TextComment 0xba50b0 <col:16, col:77> Text=" [IN] Type #UINT32 Number of MS for which the task is delayed."
|   |-ParagraphComment 0xba5150 <line:535:3>
|   | `-TextComment 0xba5120 <col:3> Text=" "
|   |-BlockCommandComment 0xba5170 <col:4, line:536:3> Name="retval"
|   | `-ParagraphComment 0xba51f0 <line:535:11, line:536:3>
|   |   |-TextComment 0xba51a0 <line:535:11, col:15> Text=" None"
|   |   `-TextComment 0xba51c0 <line:536:3> Text=" "
|   |-BlockCommandComment 0xba5210 <col:4, line:538:3> Name="par"
|   | `-ParagraphComment 0xba53e0 <line:536:8, line:538:3>
|   |   |-TextComment 0xba5240 <line:536:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xba5260 <line:537:3> Text=" "
|   |   |-HTMLStartTagComment 0xba5280 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xba52c0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xba5300 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xba5320 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xba5350 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xba5380 <line:538:3> Text=" "
|   `-BlockCommandComment 0xba5400 <col:4, col:12> Name="see"
|     `-ParagraphComment 0xba5460 <col:8, col:12>
|       `-TextComment 0xba5430 <col:8, col:12> Text=" None"
|-FunctionDecl 0xb6fd60 <line:562:1, col:29> col:15 LOS_Start 'UINT32 (void)' extern
| `-FullComment 0xba5ed0 <line:543:3, line:560:7>
|   |-ParagraphComment 0xba5590 <line:543:3>
|   | `-TextComment 0xba5560 <col:3> Text=" "
|   |-VerbatimLineComment 0xba55b0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xba5620 <line:544:3>
|   | `-TextComment 0xba55f0 <col:3> Text=" "
|   |-BlockCommandComment 0xba5640 <col:4, col:48> Name="brief"
|   | `-ParagraphComment 0xba56a0 <col:10, col:48>
|   |   `-TextComment 0xba5670 <col:10, col:48> Text=" System kernel initialization function."
|   |-ParagraphComment 0xba56f0 <line:546:3>
|   | `-TextComment 0xba56c0 <col:3> Text=" "
|   |-BlockCommandComment 0xba5710 <col:4, line:547:37> Name="par"
|   | `-ParagraphComment 0xba5790 <line:546:8, line:547:37>
|   |   |-TextComment 0xba5740 <line:546:8, col:20> Text=" Description:"
|   |   `-TextComment 0xba5760 <line:547:3, col:37> Text=" This API is used to start liteOS ."
|   |-ParagraphComment 0xba57e0 <line:549:3>
|   | `-TextComment 0xba57b0 <col:3> Text=" "
|   |-BlockCommandComment 0xba5800 <col:4, line:552:8> Name="attention"
|   | `-ParagraphComment 0xba59d0 <line:550:3, line:552:8>
|   |   |-TextComment 0xba5830 <line:550:3> Text=" "
|   |   |-HTMLStartTagComment 0xba5850 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xba5890 <line:551:3> Text=" "
|   |   |-HTMLStartTagComment 0xba58b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba58f0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xba5910 <col:13, col:17> Name="li"
|   |   |-TextComment 0xba5940 <line:552:3> Text=" "
|   |   `-HTMLEndTagComment 0xba5960 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xba5a20 <line:554:3>
|   | `-TextComment 0xba59f0 <col:3> Text=" "
|   |-ParamCommandComment 0xba5a40 <col:4, col:16> [in] implicitly Param=":"
|   | `-ParagraphComment 0xba5ad0 <col:11, col:16>
|   |   `-TextComment 0xba5aa0 <col:11, col:16> Text=" None."
|   |-ParagraphComment 0xba5b20 <line:556:3>
|   | `-TextComment 0xba5af0 <col:3> Text=" "
|   |-BlockCommandComment 0xba5b40 <col:4, col:75> Name="retval"
|   | `-ParagraphComment 0xba5ba0 <col:11, col:75>
|   |   `-TextComment 0xba5b70 <col:11, col:75> Text=" #LOS_OK                                  0:LiteOS start success."
|   |-ParagraphComment 0xba5bf0 <line:558:3>
|   | `-TextComment 0xba5bc0 <col:3> Text=" "
|   |-BlockCommandComment 0xba5c10 <col:4, line:560:3> Name="par"
|   | `-ParagraphComment 0xba5de0 <line:558:8, line:560:3>
|   |   |-TextComment 0xba5c40 <line:558:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xba5c60 <line:559:3> Text=" "
|   |   |-HTMLStartTagComment 0xba5c80 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xba5cc0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xba5d00 <col:12, col:75> Text="los_config.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xba5d20 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0xba5d50 <col:81, col:85> Name="ul"
|   |   `-TextComment 0xba5d80 <line:560:3> Text=" "
|   `-BlockCommandComment 0xba5e00 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xba5e30 <<invalid sloc>>
|-FunctionDecl 0xb6fe98 <line:563:1, col:37> col:22 LOS_Reboot 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0xb700d0 <line:564:1, col:52> col:22 LOS_Panic 'void (const CHAR *, ...) __attribute__((noreturn))' extern
| `-ParmVarDecl 0xb6ff48 <col:32, col:44> col:44 fmt 'const CHAR *'
|-FunctionDecl 0xb70240 <line:586:1, col:34> col:15 LOS_KernelInit 'UINT32 (void)' extern
| `-FullComment 0xba68c0 <line:567:3, line:584:7>
|   |-ParagraphComment 0xba5f70 <line:567:3>
|   | `-TextComment 0xba5f40 <col:3> Text=" "
|   |-VerbatimLineComment 0xba5f90 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xba6000 <line:568:3>
|   | `-TextComment 0xba5fd0 <col:3> Text=" "
|   |-BlockCommandComment 0xba6020 <col:4, col:48> Name="brief"
|   | `-ParagraphComment 0xba6080 <col:10, col:48>
|   |   `-TextComment 0xba6050 <col:10, col:48> Text=" System kernel initialization function."
|   |-ParagraphComment 0xba60d0 <line:570:3>
|   | `-TextComment 0xba60a0 <col:3> Text=" "
|   |-BlockCommandComment 0xba60f0 <col:4, line:571:71> Name="par"
|   | `-ParagraphComment 0xba6180 <line:570:8, line:571:71>
|   |   |-TextComment 0xba6130 <line:570:8, col:20> Text=" Description:"
|   |   `-TextComment 0xba6150 <line:571:3, col:71> Text=" This API is used to Initialize kernel ,configure all system modules."
|   |-ParagraphComment 0xba61d0 <line:573:3>
|   | `-TextComment 0xba61a0 <col:3> Text=" "
|   |-BlockCommandComment 0xba61f0 <col:4, line:576:8> Name="attention"
|   | `-ParagraphComment 0xba63c0 <line:574:3, line:576:8>
|   |   |-TextComment 0xba6220 <line:574:3> Text=" "
|   |   |-HTMLStartTagComment 0xba6240 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xba6280 <line:575:3> Text=" "
|   |   |-HTMLStartTagComment 0xba62a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba62e0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xba6300 <col:13, col:17> Name="li"
|   |   |-TextComment 0xba6330 <line:576:3> Text=" "
|   |   `-HTMLEndTagComment 0xba6350 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xba6410 <line:578:3>
|   | `-TextComment 0xba63e0 <col:3> Text=" "
|   |-ParamCommandComment 0xba6430 <col:4, col:16> [in] implicitly Param=":"
|   | `-ParagraphComment 0xba64c0 <col:11, col:16>
|   |   `-TextComment 0xba6490 <col:11, col:16> Text=" None."
|   |-ParagraphComment 0xba6510 <line:580:3>
|   | `-TextComment 0xba64e0 <col:3> Text=" "
|   |-BlockCommandComment 0xba6530 <col:4, col:91> Name="retval"
|   | `-ParagraphComment 0xba6590 <col:11, col:91>
|   |   `-TextComment 0xba6560 <col:11, col:91> Text=" #LOS_OK                                  0:System kernel initialization success."
|   |-ParagraphComment 0xba65e0 <line:582:3>
|   | `-TextComment 0xba65b0 <col:3> Text=" "
|   |-BlockCommandComment 0xba6600 <col:4, line:584:3> Name="par"
|   | `-ParagraphComment 0xba67d0 <line:582:8, line:584:3>
|   |   |-TextComment 0xba6630 <line:582:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xba6650 <line:583:3> Text=" "
|   |   |-HTMLStartTagComment 0xba6670 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xba66b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xba66f0 <col:12, col:75> Text="los_config.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xba6710 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0xba6740 <col:81, col:85> Name="ul"
|   |   `-TextComment 0xba6770 <line:584:3> Text=" "
|   `-BlockCommandComment 0xba67f0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xba6820 <<invalid sloc>>
|-FunctionDecl 0xb70518 <line:633:1, col:81> col:15 LOS_TaskCreateOnly 'UINT32 (UINT32 *, TSK_INIT_PARAM_S *)' extern
| |-ParmVarDecl 0xb70318 <col:34, col:42> col:42 taskID 'UINT32 *'
| |-ParmVarDecl 0xb70408 <col:50, col:68> col:68 taskInitParam 'TSK_INIT_PARAM_S *'
| `-FullComment 0xba8260 <line:589:3, line:631:22>
|   |-ParagraphComment 0xba6960 <line:589:3>
|   | `-TextComment 0xba6930 <col:3> Text=" "
|   |-VerbatimLineComment 0xba6980 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xba69f0 <line:590:3>
|   | `-TextComment 0xba69c0 <col:3> Text=" "
|   |-BlockCommandComment 0xba6a10 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0xba6a70 <col:10, col:36>
|   |   `-TextComment 0xba6a40 <col:10, col:36> Text=" Create a task and suspend."
|   |-ParagraphComment 0xba6ac0 <line:592:3>
|   | `-TextComment 0xba6a90 <col:3> Text=" "
|   |-BlockCommandComment 0xba6ae0 <col:4, line:594:13> Name="par"
|   | `-ParagraphComment 0xba6b90 <line:592:8, line:594:13>
|   |   |-TextComment 0xba6b10 <line:592:8, col:20> Text=" Description:"
|   |   |-TextComment 0xba6b30 <line:593:3, col:115> Text=" This API is used to create a task and suspend it. This task will not be added to the queue of ready tasks before"
|   |   `-TextComment 0xba6b50 <line:594:3, col:13> Text=" resume it."
|   |-ParagraphComment 0xba6be0 <line:596:3>
|   | `-TextComment 0xba6bb0 <col:3> Text=" "
|   |-BlockCommandComment 0xba6c00 <col:4, line:613:8> Name="attention"
|   | `-ParagraphComment 0xba7550 <line:597:3, line:613:8>
|   |   |-TextComment 0xba6c30 <line:597:3> Text=" "
|   |   |-HTMLStartTagComment 0xba6c50 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xba6c90 <line:598:3> Text=" "
|   |   |-HTMLStartTagComment 0xba6cb0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba6cf0 <col:8, col:119> Text="During task creation, the task control block and task stack of the task that is previously automatically deleted"
|   |   |-TextComment 0xba6d10 <line:599:3, col:19> Text=" are deallocated."
|   |   |-HTMLEndTagComment 0xba6d30 <col:20, col:24> Name="li"
|   |   |-TextComment 0xba6d60 <line:600:3> Text=" "
|   |   |-HTMLStartTagComment 0xba6d80 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba6dc0 <col:8, col:62> Text="The task name is a pointer and is not allocated memory."
|   |   |-HTMLEndTagComment 0xba6de0 <col:63, col:67> Name="li"
|   |   |-TextComment 0xba6e10 <line:601:3> Text=" "
|   |   |-HTMLStartTagComment 0xba6e30 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba6e70 <col:8, col:119> Text="If the size of the task stack of the task to be created is 0, configure #LOSCFG_BASE_CORE_TSK_DEFAULT_STACK_SIZE"
|   |   |-TextComment 0xba6e90 <line:602:3, col:117> Text=" to specify the default task stack size. The stack size should be a reasonable value, if the size is too large, may"
|   |   |-TextComment 0xba6eb0 <line:603:3, col:27> Text=" cause memory exhaustion."
|   |   |-HTMLEndTagComment 0xba6ed0 <col:28, col:32> Name="li"
|   |   |-TextComment 0xba6f00 <line:604:3> Text=" "
|   |   |-HTMLStartTagComment 0xba6f20 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba6f60 <col:8, col:114> Text="The task stack size must be aligned on the boundary of 8 bytes. The size is determined by whether it is big"
|   |   |-TextComment 0xba6f80 <line:605:3, col:39> Text=" enough to avoid task stack overflow."
|   |   |-HTMLEndTagComment 0xba6fa0 <col:40, col:44> Name="li"
|   |   |-TextComment 0xba6fd0 <line:606:3> Text=" "
|   |   |-HTMLStartTagComment 0xba6ff0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba7030 <col:8, col:59> Text="Less parameter value indicates higher task priority."
|   |   |-HTMLEndTagComment 0xba7050 <col:60, col:64> Name="li"
|   |   |-TextComment 0xba7080 <line:607:3> Text=" "
|   |   |-HTMLStartTagComment 0xba70a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba70e0 <col:8, col:36> Text="The task name cannot be null."
|   |   |-HTMLEndTagComment 0xba7100 <col:37, col:41> Name="li"
|   |   |-TextComment 0xba7140 <line:608:3> Text=" "
|   |   |-HTMLStartTagComment 0xba7160 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba71a0 <col:8, col:65> Text="The pointer to the task executing function cannot be null."
|   |   |-HTMLEndTagComment 0xba71c0 <col:66, col:70> Name="li"
|   |   |-TextComment 0xba71f0 <line:609:3> Text=" "
|   |   |-HTMLStartTagComment 0xba7210 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba7250 <col:8, col:114> Text="The two parameters of this interface is pointer, it should be a correct value, otherwise, the system may be"
|   |   |-TextComment 0xba7270 <line:610:3, col:12> Text=" abnormal."
|   |   |-HTMLEndTagComment 0xba7290 <col:13, col:17> Name="li"
|   |   |-TextComment 0xba72c0 <line:611:3> Text=" "
|   |   |-HTMLStartTagComment 0xba72e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba7320 <col:8, col:115> Text="If user mode is enabled, user should input user stack pointer and size, the size must fit the stack pointer,"
|   |   |-TextComment 0xba7340 <line:612:3, col:47> Text=" uwStackSize remain as the kernel stack size."
|   |   |-HTMLEndTagComment 0xba7360 <col:48, col:52> Name="li"
|   |   |-TextComment 0xba7390 <line:613:3> Text=" "
|   |   `-HTMLEndTagComment 0xba73b0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xba75a0 <line:615:3>
|   | `-TextComment 0xba7570 <col:3> Text=" "
|   |-ParamCommandComment 0xba75c0 <col:4, line:616:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xba7670 <line:615:18, line:616:3>
|   |   |-TextComment 0xba7620 <line:615:18, col:55> Text="        [OUT] Type  #UINT32 * Task ID."
|   |   `-TextComment 0xba7640 <line:616:3> Text=" "
|   |-ParamCommandComment 0xba7690 <col:4, col:85> [in] implicitly Param="taskInitParam" ParamIndex=1
|   | `-ParagraphComment 0xba7720 <col:25, col:85>
|   |   `-TextComment 0xba76f0 <col:25, col:85> Text=" [IN]  Type  #TSK_INIT_PARAM_S * Parameter for task creation."
|   |-ParagraphComment 0xba7770 <line:618:3>
|   | `-TextComment 0xba7740 <col:3> Text=" "
|   |-BlockCommandComment 0xba7790 <col:4, line:619:3> Name="retval"
|   | `-ParagraphComment 0xba7810 <line:618:11, line:619:3>
|   |   |-TextComment 0xba77c0 <line:618:11, col:85> Text=" #LOS_ERRNO_TSK_ID_INVALID        Invalid Task ID, param puwTaskID is NULL."
|   |   `-TextComment 0xba77e0 <line:619:3> Text=" "
|   |-BlockCommandComment 0xba7830 <col:4, line:620:3> Name="retval"
|   | `-ParagraphComment 0xba78b0 <line:619:11, line:620:3>
|   |   |-TextComment 0xba7860 <line:619:11, col:71> Text=" #LOS_ERRNO_TSK_PTR_NULL          Param pstInitParam is NULL."
|   |   `-TextComment 0xba7880 <line:620:3> Text=" "
|   |-BlockCommandComment 0xba78d0 <col:4, line:621:3> Name="retval"
|   | `-ParagraphComment 0xba7950 <line:620:11, line:621:3>
|   |   |-TextComment 0xba7900 <line:620:11, col:66> Text=" #LOS_ERRNO_TSK_NAME_EMPTY        The task name is NULL."
|   |   `-TextComment 0xba7920 <line:621:3> Text=" "
|   |-BlockCommandComment 0xba7970 <col:4, line:622:3> Name="retval"
|   | `-ParagraphComment 0xba79f0 <line:621:11, line:622:3>
|   |   |-TextComment 0xba79a0 <line:621:11, col:70> Text=" #LOS_ERRNO_TSK_ENTRY_NULL        The task entrance is NULL."
|   |   `-TextComment 0xba79c0 <line:622:3> Text=" "
|   |-BlockCommandComment 0xba7a10 <col:4, line:623:3> Name="retval"
|   | `-ParagraphComment 0xba7a90 <line:622:11, line:623:3>
|   |   |-TextComment 0xba7a40 <line:622:11, col:68> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR       Incorrect task priority."
|   |   `-TextComment 0xba7a60 <line:623:3> Text=" "
|   |-BlockCommandComment 0xba7ab0 <col:4, line:624:3> Name="retval"
|   | `-ParagraphComment 0xba7b30 <line:623:11, line:624:3>
|   |   |-TextComment 0xba7ae0 <line:623:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_LARGE   The task stack size is too large."
|   |   `-TextComment 0xba7b00 <line:624:3> Text=" "
|   |-BlockCommandComment 0xba7b50 <col:4, line:625:3> Name="retval"
|   | `-ParagraphComment 0xba7bd0 <line:624:11, line:625:3>
|   |   |-TextComment 0xba7b80 <line:624:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_SMALL   The task stack size is too small."
|   |   `-TextComment 0xba7ba0 <line:625:3> Text=" "
|   |-BlockCommandComment 0xba7bf0 <col:4, line:626:3> Name="retval"
|   | `-ParagraphComment 0xba7c70 <line:625:11, line:626:3>
|   |   |-TextComment 0xba7c20 <line:625:11, col:84> Text=" #LOS_ERRNO_TSK_TCB_UNAVAILABLE   No free task control block is available."
|   |   `-TextComment 0xba7c40 <line:626:3> Text=" "
|   |-BlockCommandComment 0xba7c90 <col:4, line:627:3> Name="retval"
|   | `-ParagraphComment 0xba7d10 <line:626:11, line:627:3>
|   |   |-TextComment 0xba7cc0 <line:626:11, col:82> Text=" #LOS_ERRNO_TSK_NO_MEMORY         Insufficient memory for task creation."
|   |   `-TextComment 0xba7ce0 <line:627:3> Text=" "
|   |-BlockCommandComment 0xba7d30 <col:4, line:628:3> Name="retval"
|   | `-ParagraphComment 0xba7db0 <line:627:11, line:628:3>
|   |   |-TextComment 0xba7d60 <line:627:11, col:77> Text=" #LOS_OK                          The task is successfully created."
|   |   `-TextComment 0xba7d80 <line:628:3> Text=" "
|   |-BlockCommandComment 0xba7dd0 <col:4, line:631:3> Name="par"
|   | `-ParagraphComment 0xba80f0 <line:628:8, line:631:3>
|   |   |-TextComment 0xba7e00 <line:628:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xba7e20 <line:629:3> Text=" "
|   |   |-HTMLStartTagComment 0xba7e40 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xba7e80 <col:8, col:11> Name="li"
|   |   |-TextComment 0xba7ec0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xba7ee0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xba7f10 <col:79, col:83> Name="ul"
|   |   |-TextComment 0xba7f40 <line:630:3> Text=" "
|   |   |-HTMLStartTagComment 0xba7f60 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xba7fa0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xba7fe0 <col:12, col:82> Text="los_config.h: the header file that contains system configuration items."
|   |   |-HTMLEndTagComment 0xba8000 <col:83, col:87> Name="li"
|   |   |-HTMLEndTagComment 0xba8030 <col:88, col:92> Name="ul"
|   |   `-TextComment 0xba8060 <line:631:3> Text=" "
|   `-BlockCommandComment 0xba8110 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xba8180 <col:8, col:22>
|       `-TextComment 0xba8150 <col:8, col:22> Text=" LOS_TaskDelete"
|-FunctionDecl 0xb70718 <line:680:1, col:77> col:15 LOS_TaskCreate 'UINT32 (UINT32 *, TSK_INIT_PARAM_S *)' extern
| |-ParmVarDecl 0xb70608 <col:30, col:38> col:38 taskID 'UINT32 *'
| |-ParmVarDecl 0xb70680 <col:46, col:64> col:64 taskInitParam 'TSK_INIT_PARAM_S *'
| `-FullComment 0xba9bf0 <line:636:3, line:678:22>
|   |-ParagraphComment 0xba8300 <line:636:3>
|   | `-TextComment 0xba82d0 <col:3> Text=" "
|   |-VerbatimLineComment 0xba8320 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xba8390 <line:637:3>
|   | `-TextComment 0xba8360 <col:3> Text=" "
|   |-BlockCommandComment 0xba83b0 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0xba8410 <col:10, col:24>
|   |   `-TextComment 0xba83e0 <col:10, col:24> Text=" Create a task."
|   |-ParagraphComment 0xba8460 <line:639:3>
|   | `-TextComment 0xba8430 <col:3> Text=" "
|   |-BlockCommandComment 0xba8480 <col:4, line:642:65> Name="par"
|   | `-ParagraphComment 0xba8550 <line:639:8, line:642:65>
|   |   |-TextComment 0xba84b0 <line:639:8, col:20> Text=" Description:"
|   |   |-TextComment 0xba84d0 <line:640:3, col:113> Text=" This API is used to create a task. If the priority of the task created after system initialized is higher than"
|   |   |-TextComment 0xba84f0 <line:641:3, col:83> Text=" the current task and task scheduling is not locked, it is scheduled for running."
|   |   `-TextComment 0xba8510 <line:642:3, col:65> Text=" If not, the created task is added to the queue of ready tasks."
|   |-ParagraphComment 0xba85a0 <line:644:3>
|   | `-TextComment 0xba8570 <col:3> Text=" "
|   |-BlockCommandComment 0xba85c0 <col:4, line:660:8> Name="attention"
|   | `-ParagraphComment 0xba8ed0 <line:645:3, line:660:8>
|   |   |-TextComment 0xba85f0 <line:645:3> Text=" "
|   |   |-HTMLStartTagComment 0xba8610 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xba8650 <line:646:3> Text=" "
|   |   |-HTMLStartTagComment 0xba8670 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba86b0 <col:8, col:111> Text="During task creation, the task control block and task stack of the task that is previously automatically"
|   |   |-TextComment 0xba86d0 <line:647:3, col:27> Text=" deleted are deallocated."
|   |   |-HTMLEndTagComment 0xba86f0 <col:28, col:32> Name="li"
|   |   |-TextComment 0xba8720 <line:648:3> Text=" "
|   |   |-HTMLStartTagComment 0xba8740 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba8780 <col:8, col:62> Text="The task name is a pointer and is not allocated memory."
|   |   |-HTMLEndTagComment 0xba87a0 <col:63, col:67> Name="li"
|   |   |-TextComment 0xba87d0 <line:649:3> Text=" "
|   |   |-HTMLStartTagComment 0xba87f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba8830 <col:8, col:119> Text="If the size of the task stack of the task to be created is 0, configure #LOSCFG_BASE_CORE_TSK_DEFAULT_STACK_SIZE"
|   |   |-TextComment 0xba8850 <line:650:3, col:42> Text=" to specify the default task stack size."
|   |   |-HTMLEndTagComment 0xba8870 <col:43, col:47> Name="li"
|   |   |-TextComment 0xba88a0 <line:651:3> Text=" "
|   |   |-HTMLStartTagComment 0xba88c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba8900 <col:8, col:114> Text="The task stack size must be aligned on the boundary of 8 bytes. The size is determined by whether it is big"
|   |   |-TextComment 0xba8920 <line:652:3, col:39> Text=" enough to avoid task stack overflow."
|   |   |-HTMLEndTagComment 0xba8940 <col:40, col:44> Name="li"
|   |   |-TextComment 0xba8970 <line:653:3> Text=" "
|   |   |-HTMLStartTagComment 0xba8990 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba89d0 <col:8, col:59> Text="Less parameter value indicates higher task priority."
|   |   |-HTMLEndTagComment 0xba89f0 <col:60, col:64> Name="li"
|   |   |-TextComment 0xba8a20 <line:654:3> Text=" "
|   |   |-HTMLStartTagComment 0xba8a40 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba8a80 <col:8, col:36> Text="The task name cannot be null."
|   |   |-HTMLEndTagComment 0xba8aa0 <col:37, col:41> Name="li"
|   |   |-TextComment 0xba8ad0 <line:655:3> Text=" "
|   |   |-HTMLStartTagComment 0xba8af0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba8b30 <col:8, col:65> Text="The pointer to the task executing function cannot be null."
|   |   |-HTMLEndTagComment 0xba8b50 <col:66, col:70> Name="li"
|   |   |-TextComment 0xba8b80 <line:656:3> Text=" "
|   |   |-HTMLStartTagComment 0xba8ba0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba8be0 <col:8, col:114> Text="The two parameters of this interface is pointer, it should be a correct value, otherwise, the system may be"
|   |   |-TextComment 0xba8c00 <line:657:3, col:12> Text=" abnormal."
|   |   |-HTMLEndTagComment 0xba8c20 <col:13, col:17> Name="li"
|   |   |-TextComment 0xba8c50 <line:658:3> Text=" "
|   |   |-HTMLStartTagComment 0xba8c70 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba8cb0 <col:8, col:115> Text="If user mode is enabled, user should input user stack pointer and size, the size must fit the stack pointer,"
|   |   |-TextComment 0xba8cd0 <line:659:3, col:47> Text=" uwStackSize remain as the kernel stack size."
|   |   |-HTMLEndTagComment 0xba8cf0 <col:48, col:52> Name="li"
|   |   |-TextComment 0xba8d20 <line:660:3> Text=" "
|   |   `-HTMLEndTagComment 0xba8d40 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xba8f20 <line:662:3>
|   | `-TextComment 0xba8ef0 <col:3> Text=" "
|   |-ParamCommandComment 0xba8f40 <col:4, line:663:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xba8ff0 <line:662:18, line:663:3>
|   |   |-TextComment 0xba8fa0 <line:662:18, col:55> Text="        [OUT] Type  #UINT32 * Task ID."
|   |   `-TextComment 0xba8fc0 <line:663:3> Text=" "
|   |-ParamCommandComment 0xba9010 <col:4, col:85> [in] implicitly Param="taskInitParam" ParamIndex=1
|   | `-ParagraphComment 0xba90a0 <col:25, col:85>
|   |   `-TextComment 0xba9070 <col:25, col:85> Text=" [IN]  Type  #TSK_INIT_PARAM_S * Parameter for task creation."
|   |-ParagraphComment 0xba90f0 <line:665:3>
|   | `-TextComment 0xba90c0 <col:3> Text=" "
|   |-BlockCommandComment 0xba9110 <col:4, line:666:3> Name="retval"
|   | `-ParagraphComment 0xba91b0 <line:665:11, line:666:3>
|   |   |-TextComment 0xba9160 <line:665:11, col:85> Text=" #LOS_ERRNO_TSK_ID_INVALID        Invalid Task ID, param puwTaskID is NULL."
|   |   `-TextComment 0xba9180 <line:666:3> Text=" "
|   |-BlockCommandComment 0xba91d0 <col:4, line:667:3> Name="retval"
|   | `-ParagraphComment 0xba9250 <line:666:11, line:667:3>
|   |   |-TextComment 0xba9200 <line:666:11, col:71> Text=" #LOS_ERRNO_TSK_PTR_NULL          Param pstInitParam is NULL."
|   |   `-TextComment 0xba9220 <line:667:3> Text=" "
|   |-BlockCommandComment 0xba9270 <col:4, line:668:3> Name="retval"
|   | `-ParagraphComment 0xba92f0 <line:667:11, line:668:3>
|   |   |-TextComment 0xba92a0 <line:667:11, col:66> Text=" #LOS_ERRNO_TSK_NAME_EMPTY        The task name is NULL."
|   |   `-TextComment 0xba92c0 <line:668:3> Text=" "
|   |-BlockCommandComment 0xba9310 <col:4, line:669:3> Name="retval"
|   | `-ParagraphComment 0xba9390 <line:668:11, line:669:3>
|   |   |-TextComment 0xba9340 <line:668:11, col:70> Text=" #LOS_ERRNO_TSK_ENTRY_NULL        The task entrance is NULL."
|   |   `-TextComment 0xba9360 <line:669:3> Text=" "
|   |-BlockCommandComment 0xba93b0 <col:4, line:670:3> Name="retval"
|   | `-ParagraphComment 0xba9430 <line:669:11, line:670:3>
|   |   |-TextComment 0xba93e0 <line:669:11, col:68> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR       Incorrect task priority."
|   |   `-TextComment 0xba9400 <line:670:3> Text=" "
|   |-BlockCommandComment 0xba9450 <col:4, line:671:3> Name="retval"
|   | `-ParagraphComment 0xba94d0 <line:670:11, line:671:3>
|   |   |-TextComment 0xba9480 <line:670:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_LARGE   The task stack size is too large."
|   |   `-TextComment 0xba94a0 <line:671:3> Text=" "
|   |-BlockCommandComment 0xba94f0 <col:4, line:672:3> Name="retval"
|   | `-ParagraphComment 0xba9570 <line:671:11, line:672:3>
|   |   |-TextComment 0xba9520 <line:671:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_SMALL   The task stack size is too small."
|   |   `-TextComment 0xba9540 <line:672:3> Text=" "
|   |-BlockCommandComment 0xba9590 <col:4, line:673:3> Name="retval"
|   | `-ParagraphComment 0xba9610 <line:672:11, line:673:3>
|   |   |-TextComment 0xba95c0 <line:672:11, col:84> Text=" #LOS_ERRNO_TSK_TCB_UNAVAILABLE   No free task control block is available."
|   |   `-TextComment 0xba95e0 <line:673:3> Text=" "
|   |-BlockCommandComment 0xba9630 <col:4, line:674:3> Name="retval"
|   | `-ParagraphComment 0xba96b0 <line:673:11, line:674:3>
|   |   |-TextComment 0xba9660 <line:673:11, col:82> Text=" #LOS_ERRNO_TSK_NO_MEMORY         Insufficient memory for task creation."
|   |   `-TextComment 0xba9680 <line:674:3> Text=" "
|   |-BlockCommandComment 0xba96d0 <col:4, line:675:3> Name="retval"
|   | `-ParagraphComment 0xba9750 <line:674:11, line:675:3>
|   |   |-TextComment 0xba9700 <line:674:11, col:77> Text=" #LOS_OK                          The task is successfully created."
|   |   `-TextComment 0xba9720 <line:675:3> Text=" "
|   |-BlockCommandComment 0xba9770 <col:4, line:678:3> Name="par"
|   | `-ParagraphComment 0xba9a90 <line:675:8, line:678:3>
|   |   |-TextComment 0xba97a0 <line:675:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xba97c0 <line:676:3> Text=" "
|   |   |-HTMLStartTagComment 0xba97e0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xba9820 <col:8, col:11> Name="li"
|   |   |-TextComment 0xba9860 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xba9880 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xba98b0 <col:79, col:83> Name="ul"
|   |   |-TextComment 0xba98e0 <line:677:3> Text=" "
|   |   |-HTMLStartTagComment 0xba9900 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xba9940 <col:8, col:11> Name="li"
|   |   |-TextComment 0xba9980 <col:12, col:82> Text="los_config.h: the header file that contains system configuration items."
|   |   |-HTMLEndTagComment 0xba99a0 <col:83, col:87> Name="li"
|   |   |-HTMLEndTagComment 0xba99d0 <col:88, col:92> Name="ul"
|   |   `-TextComment 0xba9a00 <line:678:3> Text=" "
|   `-BlockCommandComment 0xba9ab0 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xba9b10 <col:8, col:22>
|       `-TextComment 0xba9ae0 <col:8, col:22> Text=" LOS_TaskDelete"
|-FunctionDecl 0xb70898 <line:706:1, col:43> col:15 LOS_TaskResume 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xb70808 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0xbaa8d0 <line:683:3, line:704:23>
|   |-ParagraphComment 0xba9c90 <line:683:3>
|   | `-TextComment 0xba9c60 <col:3> Text=" "
|   |-VerbatimLineComment 0xba9cb0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xba9d20 <line:684:3>
|   | `-TextComment 0xba9cf0 <col:3> Text=" "
|   |-BlockCommandComment 0xba9d40 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0xba9da0 <col:10, col:24>
|   |   `-TextComment 0xba9d70 <col:10, col:24> Text=" Resume a task."
|   |-ParagraphComment 0xba9df0 <line:686:3>
|   | `-TextComment 0xba9dc0 <col:3> Text=" "
|   |-BlockCommandComment 0xba9e10 <col:4, line:687:47> Name="par"
|   | `-ParagraphComment 0xba9e90 <line:686:8, line:687:47>
|   |   |-TextComment 0xba9e40 <line:686:8, col:20> Text=" Description:"
|   |   `-TextComment 0xba9e60 <line:687:3, col:47> Text=" This API is used to resume a suspended task."
|   |-ParagraphComment 0xba9ee0 <line:689:3>
|   | `-TextComment 0xba9eb0 <col:3> Text=" "
|   |-BlockCommandComment 0xba9f00 <col:4, line:694:8> Name="attention"
|   | `-ParagraphComment 0xbaa1e0 <line:690:3, line:694:8>
|   |   |-TextComment 0xba9f30 <line:690:3> Text=" "
|   |   |-HTMLStartTagComment 0xba9f50 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xba9f90 <line:691:3> Text=" "
|   |   |-HTMLStartTagComment 0xba9fb0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xba9ff0 <col:8, col:104> Text="If the task is delayed or blocked, resume the task without adding it to the queue of ready tasks."
|   |   |-HTMLEndTagComment 0xbaa010 <col:105, col:109> Name="li"
|   |   |-TextComment 0xbaa040 <line:692:3> Text=" "
|   |   |-HTMLStartTagComment 0xbaa060 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbaa0a0 <col:8, col:119> Text="If the priority of the task resumed after system initialized is higher than the current task and task scheduling"
|   |   |-TextComment 0xbaa0c0 <line:693:3, col:46> Text=" is not locked, it is scheduled for running."
|   |   |-HTMLEndTagComment 0xbaa0e0 <col:47, col:51> Name="li"
|   |   |-TextComment 0xbaa110 <line:694:3> Text=" "
|   |   `-HTMLEndTagComment 0xbaa130 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbaa230 <line:696:3>
|   | `-TextComment 0xbaa200 <col:3> Text=" "
|   |-ParamCommandComment 0xbaa250 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xbaa2e0 <col:18, col:94>
|   |   `-TextComment 0xbaa2b0 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0xbaa330 <line:698:3>
|   | `-TextComment 0xbaa300 <col:3> Text=" "
|   |-BlockCommandComment 0xbaa350 <col:4, line:699:3> Name="retval"
|   | `-ParagraphComment 0xbaa3d0 <line:698:11, line:699:3>
|   |   |-TextComment 0xbaa380 <line:698:11, col:59> Text=" #LOS_ERRNO_TSK_ID_INVALID        Invalid Task ID"
|   |   `-TextComment 0xbaa3a0 <line:699:3> Text=" "
|   |-BlockCommandComment 0xbaa3f0 <col:4, line:700:3> Name="retval"
|   | `-ParagraphComment 0xbaa470 <line:699:11, line:700:3>
|   |   |-TextComment 0xbaa420 <line:699:11, col:68> Text=" #LOS_ERRNO_TSK_NOT_CREATED       The task is not created."
|   |   `-TextComment 0xbaa440 <line:700:3> Text=" "
|   |-BlockCommandComment 0xbaa490 <col:4, line:701:3> Name="retval"
|   | `-ParagraphComment 0xbaa510 <line:700:11, line:701:3>
|   |   |-TextComment 0xbaa4c0 <line:700:11, col:70> Text=" #LOS_ERRNO_TSK_NOT_SUSPENDED     The task is not suspended."
|   |   `-TextComment 0xbaa4e0 <line:701:3> Text=" "
|   |-BlockCommandComment 0xbaa530 <col:4, line:702:3> Name="retval"
|   | `-ParagraphComment 0xbaa5b0 <line:701:11, line:702:3>
|   |   |-TextComment 0xbaa560 <line:701:11, col:77> Text=" #LOS_OK                          The task is successfully resumed."
|   |   `-TextComment 0xbaa580 <line:702:3> Text=" "
|   |-BlockCommandComment 0xbaa5d0 <col:4, line:704:3> Name="par"
|   | `-ParagraphComment 0xbaa7a0 <line:702:8, line:704:3>
|   |   |-TextComment 0xbaa600 <line:702:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbaa620 <line:703:3> Text=" "
|   |   |-HTMLStartTagComment 0xbaa640 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbaa680 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbaa6c0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbaa6e0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbaa710 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbaa740 <line:704:3> Text=" "
|   `-BlockCommandComment 0xbaa7c0 <col:4, col:23> Name="see"
|     `-ParagraphComment 0xbaa820 <col:8, col:23>
|       `-TextComment 0xbaa7f0 <col:8, col:23> Text=" LOS_TaskSuspend"
|-FunctionDecl 0xb70a08 <line:735:1, col:44> col:15 LOS_TaskSuspend 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xb70978 <col:31, col:38> col:38 taskID 'UINT32':'unsigned int'
| `-FullComment 0xbab7b0 <line:709:3, line:733:22>
|   |-ParagraphComment 0xbaa970 <line:709:3>
|   | `-TextComment 0xbaa940 <col:3> Text=" "
|   |-VerbatimLineComment 0xbaa990 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbaaa00 <line:710:3>
|   | `-TextComment 0xbaa9d0 <col:3> Text=" "
|   |-BlockCommandComment 0xbaaa20 <col:4, col:25> Name="brief"
|   | `-ParagraphComment 0xbaaa80 <col:10, col:25>
|   |   `-TextComment 0xbaaa50 <col:10, col:25> Text=" Suspend a task."
|   |-ParagraphComment 0xbaaad0 <line:712:3>
|   | `-TextComment 0xbaaaa0 <col:3> Text=" "
|   |-BlockCommandComment 0xbaaaf0 <col:4, line:713:108> Name="par"
|   | `-ParagraphComment 0xbaab70 <line:712:8, line:713:108>
|   |   |-TextComment 0xbaab20 <line:712:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbaab40 <line:713:3, col:108> Text=" This API is used to suspend a specified task, and the task will be removed from the queue of ready tasks."
|   |-ParagraphComment 0xbaabc0 <line:715:3>
|   | `-TextComment 0xbaab90 <col:3> Text=" "
|   |-BlockCommandComment 0xbaabe0 <col:4, line:719:8> Name="attention"
|   | `-ParagraphComment 0xbaae80 <line:716:3, line:719:8>
|   |   |-TextComment 0xbaac10 <line:716:3> Text=" "
|   |   |-HTMLStartTagComment 0xbaac30 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbaac70 <line:717:3> Text=" "
|   |   |-HTMLStartTagComment 0xbaac90 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbaacd0 <col:8, col:63> Text="The task that is running and locked cannot be suspended."
|   |   |-HTMLEndTagComment 0xbaacf0 <col:64, col:68> Name="li"
|   |   |-TextComment 0xbaad20 <line:718:3> Text=" "
|   |   |-HTMLStartTagComment 0xbaad40 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbaad80 <col:8, col:56> Text="The idle task and swtmr task cannot be suspended."
|   |   |-HTMLEndTagComment 0xbaada0 <col:57, col:61> Name="li"
|   |   |-TextComment 0xbaadd0 <line:719:3> Text=" "
|   |   `-HTMLEndTagComment 0xbaadf0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbaaed0 <line:721:3>
|   | `-TextComment 0xbaaea0 <col:3> Text=" "
|   |-ParamCommandComment 0xbaaef0 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xbaaf80 <col:18, col:94>
|   |   `-TextComment 0xbaaf50 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0xbaafd0 <line:723:3>
|   | `-TextComment 0xbaafa0 <col:3> Text=" "
|   |-BlockCommandComment 0xbaaff0 <col:4, line:724:3> Name="retval"
|   | `-ParagraphComment 0xbab070 <line:723:11, line:724:3>
|   |   |-TextComment 0xbab020 <line:723:11, col:110> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE                  Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0xbab040 <line:724:3> Text=" "
|   |-BlockCommandComment 0xbab090 <col:4, line:725:3> Name="retval"
|   | `-ParagraphComment 0xbab110 <line:724:11, line:725:3>
|   |   |-TextComment 0xbab0c0 <line:724:11, col:111> Text=" #LOS_ERRNO_TSK_SUSPEND_SWTMR_NOT_ALLOWED     Check the task ID and do not operate on the swtmr task."
|   |   `-TextComment 0xbab0e0 <line:725:3> Text=" "
|   |-BlockCommandComment 0xbab130 <col:4, line:726:3> Name="retval"
|   | `-ParagraphComment 0xbab1d0 <line:725:11, line:726:3>
|   |   |-TextComment 0xbab180 <line:725:11, col:71> Text=" #LOS_ERRNO_TSK_ID_INVALID                    Invalid Task ID"
|   |   `-TextComment 0xbab1a0 <line:726:3> Text=" "
|   |-BlockCommandComment 0xbab1f0 <col:4, line:727:3> Name="retval"
|   | `-ParagraphComment 0xbab270 <line:726:11, line:727:3>
|   |   |-TextComment 0xbab220 <line:726:11, col:80> Text=" #LOS_ERRNO_TSK_NOT_CREATED                   The task is not created."
|   |   `-TextComment 0xbab240 <line:727:3> Text=" "
|   |-BlockCommandComment 0xbab290 <col:4, line:728:3> Name="retval"
|   | `-ParagraphComment 0xbab310 <line:727:11, line:728:3>
|   |   |-TextComment 0xbab2c0 <line:727:11, col:86> Text=" #LOS_ERRNO_TSK_ALREADY_SUSPENDED             The task is already suspended."
|   |   `-TextComment 0xbab2e0 <line:728:3> Text=" "
|   |-BlockCommandComment 0xbab330 <col:4, line:730:3> Name="retval"
|   | `-ParagraphComment 0xbab3e0 <line:728:11, line:730:3>
|   |   |-TextComment 0xbab360 <line:728:11, col:116> Text=" #LOS_ERRNO_TSK_SUSPEND_LOCKED                The task being suspended is current task and task scheduling"
|   |   |-TextComment 0xbab380 <line:729:3, col:66> Text="                                                      is locked."
|   |   `-TextComment 0xbab3a0 <line:730:3> Text=" "
|   |-BlockCommandComment 0xbab400 <col:4, line:731:3> Name="retval"
|   | `-ParagraphComment 0xbab480 <line:730:11, line:731:3>
|   |   |-TextComment 0xbab430 <line:730:11, col:91> Text=" #LOS_OK                                      The task is successfully suspended."
|   |   `-TextComment 0xbab450 <line:731:3> Text=" "
|   |-BlockCommandComment 0xbab4a0 <col:4, line:733:3> Name="par"
|   | `-ParagraphComment 0xbab670 <line:731:8, line:733:3>
|   |   |-TextComment 0xbab4d0 <line:731:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbab4f0 <line:732:3> Text=" "
|   |   |-HTMLStartTagComment 0xbab510 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbab550 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbab590 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbab5b0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbab5e0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbab610 <line:733:3> Text=" "
|   `-BlockCommandComment 0xbab690 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xbab6f0 <col:8, col:22>
|       `-TextComment 0xbab6c0 <col:8, col:22> Text=" LOS_TaskResume"
|-FunctionDecl 0xb70b78 <line:763:1, col:43> col:15 LOS_TaskDelete 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xb70ae8 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0xbac5f0 <line:738:3, line:761:43>
|   |-ParagraphComment 0xbab850 <line:738:3>
|   | `-TextComment 0xbab820 <col:3> Text=" "
|   |-VerbatimLineComment 0xbab870 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbab8e0 <line:739:3>
|   | `-TextComment 0xbab8b0 <col:3> Text=" "
|   |-BlockCommandComment 0xbab900 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0xbab960 <col:10, col:24>
|   |   `-TextComment 0xbab930 <col:10, col:24> Text=" Delete a task."
|   |-ParagraphComment 0xbab9b0 <line:741:3>
|   | `-TextComment 0xbab980 <col:3> Text=" "
|   |-BlockCommandComment 0xbab9d0 <col:4, line:742:115> Name="par"
|   | `-ParagraphComment 0xbaba50 <line:741:8, line:742:115>
|   |   |-TextComment 0xbaba00 <line:741:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbaba20 <line:742:3, col:115> Text=" This API is used to delete a specified task and release the resources for its task stack and task control block."
|   |-ParagraphComment 0xbabaa0 <line:744:3>
|   | `-TextComment 0xbaba70 <col:3> Text=" "
|   |-BlockCommandComment 0xbabac0 <col:4, line:750:8> Name="attention"
|   | `-ParagraphComment 0xbabe50 <line:745:3, line:750:8>
|   |   |-TextComment 0xbabaf0 <line:745:3> Text=" "
|   |   |-HTMLStartTagComment 0xbabb10 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbabb50 <line:746:3> Text=" "
|   |   |-HTMLStartTagComment 0xbabb70 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbabbb0 <col:8, col:54> Text="The idle task and swtmr task cannot be deleted."
|   |   |-HTMLEndTagComment 0xbabbd0 <col:55, col:59> Name="li"
|   |   |-TextComment 0xbabc00 <line:747:3> Text=" "
|   |   |-HTMLStartTagComment 0xbabc20 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbabc60 <col:8, col:59> Text="If delete current task maybe cause unexpected error."
|   |   |-HTMLEndTagComment 0xbabc80 <col:60, col:64> Name="li"
|   |   |-TextComment 0xbabcb0 <line:748:3> Text=" "
|   |   |-HTMLStartTagComment 0xbabcd0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbabd10 <col:8, col:110> Text="If a task get a mutex is deleted or automatically deleted before release this mutex, other tasks pended"
|   |   |-TextComment 0xbabd30 <line:749:3, col:39> Text=" this mutex maybe never be shchduled."
|   |   |-HTMLEndTagComment 0xbabd50 <col:40, col:44> Name="li"
|   |   |-TextComment 0xbabd80 <line:750:3> Text=" "
|   |   `-HTMLEndTagComment 0xbabda0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbabea0 <line:752:3>
|   | `-TextComment 0xbabe70 <col:3> Text=" "
|   |-ParamCommandComment 0xbabec0 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xbabf50 <col:18, col:94>
|   |   `-TextComment 0xbabf20 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0xbabfa0 <line:754:3>
|   | `-TextComment 0xbabf70 <col:3> Text=" "
|   |-BlockCommandComment 0xbabfc0 <col:4, line:755:3> Name="retval"
|   | `-ParagraphComment 0xbac040 <line:754:11, line:755:3>
|   |   |-TextComment 0xbabff0 <line:754:11, col:110> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE                  Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0xbac010 <line:755:3> Text=" "
|   |-BlockCommandComment 0xbac060 <col:4, line:756:3> Name="retval"
|   | `-ParagraphComment 0xbac0e0 <line:755:11, line:756:3>
|   |   |-TextComment 0xbac090 <line:755:11, col:111> Text=" #LOS_ERRNO_TSK_SUSPEND_SWTMR_NOT_ALLOWED     Check the task ID and do not operate on the swtmr task."
|   |   `-TextComment 0xbac0b0 <line:756:3> Text=" "
|   |-BlockCommandComment 0xbac100 <col:4, line:757:3> Name="retval"
|   | `-ParagraphComment 0xbac190 <line:756:11, line:757:3>
|   |   |-TextComment 0xbac130 <line:756:11, col:71> Text=" #LOS_ERRNO_TSK_ID_INVALID                    Invalid Task ID"
|   |   `-TextComment 0xbac150 <line:757:3> Text=" "
|   |-BlockCommandComment 0xbac1b0 <col:4, line:758:3> Name="retval"
|   | `-ParagraphComment 0xbac230 <line:757:11, line:758:3>
|   |   |-TextComment 0xbac1e0 <line:757:11, col:80> Text=" #LOS_ERRNO_TSK_NOT_CREATED                   The task is not created."
|   |   `-TextComment 0xbac200 <line:758:3> Text=" "
|   |-BlockCommandComment 0xbac250 <col:4, line:759:3> Name="retval"
|   | `-ParagraphComment 0xbac2d0 <line:758:11, line:759:3>
|   |   |-TextComment 0xbac280 <line:758:11, col:89> Text=" #LOS_OK                                      The task is successfully deleted."
|   |   `-TextComment 0xbac2a0 <line:759:3> Text=" "
|   |-BlockCommandComment 0xbac2f0 <col:4, line:761:3> Name="par"
|   | `-ParagraphComment 0xbac4c0 <line:759:8, line:761:3>
|   |   |-TextComment 0xbac320 <line:759:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbac340 <line:760:3> Text=" "
|   |   |-HTMLStartTagComment 0xbac360 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbac3a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbac3e0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbac400 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbac430 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbac460 <line:761:3> Text=" "
|   `-BlockCommandComment 0xbac4e0 <col:4, col:43> Name="see"
|     `-ParagraphComment 0xbac540 <col:8, col:43>
|       `-TextComment 0xbac510 <col:8, col:43> Text=" LOS_TaskCreate | LOS_TaskCreateOnly"
|-FunctionDecl 0xb70ef0 <line:794:1, col:40> col:15 LOS_TaskDelay 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xb70c58 <col:29, col:36> col:36 tick 'UINT32':'unsigned int'
| `-FullComment 0xbad490 <line:766:3, line:792:7>
|   |-ParagraphComment 0xbac690 <line:766:3>
|   | `-TextComment 0xbac660 <col:3> Text=" "
|   |-VerbatimLineComment 0xbac6b0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbac720 <line:767:3>
|   | `-TextComment 0xbac6f0 <col:3> Text=" "
|   |-BlockCommandComment 0xbac740 <col:4, col:23> Name="brief"
|   | `-ParagraphComment 0xbac7a0 <col:10, col:23>
|   |   `-TextComment 0xbac770 <col:10, col:23> Text=" Delay a task."
|   |-ParagraphComment 0xbac7f0 <line:769:3>
|   | `-TextComment 0xbac7c0 <col:3> Text=" "
|   |-BlockCommandComment 0xbac810 <col:4, line:771:35> Name="par"
|   | `-ParagraphComment 0xbac8c0 <line:769:8, line:771:35>
|   |   |-TextComment 0xbac840 <line:769:8, col:20> Text=" Description:"
|   |   |-TextComment 0xbac860 <line:770:3, col:116> Text=" This API is used to delay the execution of the current task. The task is able to be scheduled after it is delayed"
|   |   `-TextComment 0xbac880 <line:771:3, col:35> Text=" for a specified number of Ticks."
|   |-ParagraphComment 0xbac910 <line:773:3>
|   | `-TextComment 0xbac8e0 <col:3> Text=" "
|   |-BlockCommandComment 0xbac930 <col:4, line:781:8> Name="attention"
|   | `-ParagraphComment 0xbacd10 <line:774:3, line:781:8>
|   |   |-TextComment 0xbac960 <line:774:3> Text=" "
|   |   |-HTMLStartTagComment 0xbac980 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbac9c0 <line:775:3> Text=" "
|   |   |-HTMLStartTagComment 0xbac9e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbaca20 <col:8, col:103> Text="The task fails to be delayed if it is being delayed during interrupt processing or it is locked."
|   |   |-HTMLEndTagComment 0xbaca40 <col:104, col:108> Name="li"
|   |   |-TextComment 0xbaca70 <line:776:3> Text=" "
|   |   |-HTMLStartTagComment 0xbaca90 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbacad0 <col:8, col:112> Text="If 0 is passed in and the task scheduling is not locked, execute the next task in the queue of tasks with"
|   |   |-TextComment 0xbacaf0 <line:777:3, col:41> Text=" the same priority of the current task."
|   |   |-TextComment 0xbacb10 <line:778:3, col:115> Text=" If no ready task with the priority of the current task is available, the task scheduling will not occur, and the"
|   |   |-TextComment 0xbacb30 <line:779:3, col:41> Text=" current task continues to be executed."
|   |   |-HTMLEndTagComment 0xbacb50 <col:42, col:46> Name="li"
|   |   |-TextComment 0xbacb80 <line:780:3> Text=" "
|   |   |-HTMLStartTagComment 0xbacba0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbacbe0 <col:8, col:68> Text="Using the interface before system initialized is not allowed."
|   |   |-HTMLEndTagComment 0xbacc00 <col:69, col:73> Name="li"
|   |   |-TextComment 0xbacc30 <line:781:3> Text=" "
|   |   `-HTMLEndTagComment 0xbacc50 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbacd60 <line:783:3>
|   | `-TextComment 0xbacd30 <col:3> Text=" "
|   |-ParamCommandComment 0xbacd80 <col:4, col:80> [in] implicitly Param="tick" ParamIndex=0
|   | `-ParagraphComment 0xbace10 <col:16, col:80>
|   |   `-TextComment 0xbacde0 <col:16, col:80> Text=" [IN] Type #UINT32 Number of Ticks for which the task is delayed."
|   |-ParagraphComment 0xbace60 <line:785:3>
|   | `-TextComment 0xbace30 <col:3> Text=" "
|   |-BlockCommandComment 0xbace80 <col:4, line:786:3> Name="retval"
|   | `-ParagraphComment 0xbacf00 <line:785:11, line:786:3>
|   |   |-TextComment 0xbaceb0 <line:785:11, col:94> Text=" #LOS_ERRNO_TSK_DELAY_IN_INT              The task delay occurs during an interrupt."
|   |   `-TextComment 0xbaced0 <line:786:3> Text=" "
|   |-BlockCommandComment 0xbacf20 <col:4, line:787:3> Name="retval"
|   | `-ParagraphComment 0xbacfa0 <line:786:11, line:787:3>
|   |   |-TextComment 0xbacf50 <line:786:11, col:109> Text=" #LOS_ERRNO_TSK_DELAY_IN_LOCK             The task delay occurs when the task scheduling is locked."
|   |   `-TextComment 0xbacf70 <line:787:3> Text=" "
|   |-BlockCommandComment 0xbacfc0 <col:4, line:788:3> Name="retval"
|   | `-ParagraphComment 0xbad040 <line:787:11, line:788:3>
|   |   |-TextComment 0xbacff0 <line:787:11, col:67> Text=" #LOS_ERRNO_TSK_ID_INVALID                Invalid Task ID"
|   |   `-TextComment 0xbad010 <line:788:3> Text=" "
|   |-BlockCommandComment 0xbad060 <col:4, line:789:3> Name="retval"
|   | `-ParagraphComment 0xbad0e0 <line:788:11, line:789:3>
|   |   |-TextComment 0xbad090 <line:788:11, col:112> Text=" #LOS_ERRNO_TSK_YIELD_NOT_ENOUGH_TASK     No tasks with the same priority is available for scheduling."
|   |   `-TextComment 0xbad0b0 <line:789:3> Text=" "
|   |-BlockCommandComment 0xbad100 <col:4, line:790:3> Name="retval"
|   | `-ParagraphComment 0xbad1a0 <line:789:11, line:790:3>
|   |   |-TextComment 0xbad130 <line:789:11, col:85> Text=" #LOS_OK                                  The task is successfully delayed."
|   |   `-TextComment 0xbad150 <line:790:3> Text=" "
|   |-BlockCommandComment 0xbad1c0 <col:4, line:792:3> Name="par"
|   | `-ParagraphComment 0xbad390 <line:790:8, line:792:3>
|   |   |-TextComment 0xbad1f0 <line:790:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbad210 <line:791:3> Text=" "
|   |   |-HTMLStartTagComment 0xbad230 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbad270 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbad2b0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbad2d0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbad300 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbad330 <line:792:3> Text=" "
|   `-BlockCommandComment 0xbad3b0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xbad3e0 <<invalid sloc>>
|-FunctionDecl 0xb71060 <line:817:1, col:30> col:13 LOS_TaskLock 'void (void)' extern
| `-FullComment 0xbadf20 <line:797:3, line:815:22>
|   |-ParagraphComment 0xbad530 <line:797:3>
|   | `-TextComment 0xbad500 <col:3> Text=" "
|   |-VerbatimLineComment 0xbad550 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbad5c0 <line:798:3>
|   | `-TextComment 0xbad590 <col:3> Text=" "
|   |-BlockCommandComment 0xbad5e0 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0xbad640 <col:10, col:35>
|   |   `-TextComment 0xbad610 <col:10, col:35> Text=" Lock the task scheduling."
|   |-ParagraphComment 0xbad690 <line:800:3>
|   | `-TextComment 0xbad660 <col:3> Text=" "
|   |-BlockCommandComment 0xbad6b0 <col:4, line:801:112> Name="par"
|   | `-ParagraphComment 0xbad730 <line:800:8, line:801:112>
|   |   |-TextComment 0xbad6e0 <line:800:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbad700 <line:801:3, col:112> Text=" This API is used to lock the task scheduling. Task switching will not occur if the task scheduling is locked."
|   |-ParagraphComment 0xbad780 <line:803:3>
|   | `-TextComment 0xbad750 <col:3> Text=" "
|   |-BlockCommandComment 0xbad7a0 <col:4, line:808:8> Name="attention"
|   | `-ParagraphComment 0xbada60 <line:804:3, line:808:8>
|   |   |-TextComment 0xbad7d0 <line:804:3> Text=" "
|   |   |-HTMLStartTagComment 0xbad7f0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbad830 <line:805:3> Text=" "
|   |   |-HTMLStartTagComment 0xbad850 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbad890 <col:8, col:113> Text="If the task scheduling is locked, but interrupts are not disabled, tasks are still able to be interrupted."
|   |   |-HTMLEndTagComment 0xbad8b0 <col:114, col:118> Name="li"
|   |   |-TextComment 0xbad8e0 <line:806:3> Text=" "
|   |   |-HTMLStartTagComment 0xbad900 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbad940 <col:8, col:117> Text="One is added to the number of task scheduling locks if this API is called. The number of locks is decreased by"
|   |   |-TextComment 0xbad960 <line:807:3, col:107> Text=" one if the task scheduling is unlocked. Therefore, this API should be used together with LOS_TaskUnlock."
|   |   |-HTMLEndTagComment 0xbad980 <col:108, col:112> Name="li"
|   |   |-TextComment 0xbad9b0 <line:808:3> Text=" "
|   |   `-HTMLEndTagComment 0xbad9d0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbadab0 <line:810:3>
|   | `-TextComment 0xbada80 <col:3> Text=" "
|   |-ParamCommandComment 0xbadad0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xbadb30 <<invalid sloc>>
|   |-ParagraphComment 0xbadb80 <line:812:3>
|   | `-TextComment 0xbadb50 <col:3> Text=" "
|   |-BlockCommandComment 0xbadba0 <col:4, line:813:3> Name="retval"
|   | `-ParagraphComment 0xbadc20 <line:812:11, line:813:3>
|   |   |-TextComment 0xbadbd0 <line:812:11, col:16> Text=" None."
|   |   `-TextComment 0xbadbf0 <line:813:3> Text=" "
|   |-BlockCommandComment 0xbadc40 <col:4, line:815:3> Name="par"
|   | `-ParagraphComment 0xbade10 <line:813:8, line:815:3>
|   |   |-TextComment 0xbadc70 <line:813:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbadc90 <line:814:3> Text=" "
|   |   |-HTMLStartTagComment 0xbadcb0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbadcf0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbadd30 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbadd50 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbadd80 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbaddb0 <line:815:3> Text=" "
|   `-BlockCommandComment 0xbade30 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xbade90 <col:8, col:22>
|       `-TextComment 0xbade60 <col:8, col:22> Text=" LOS_TaskUnlock"
|-FunctionDecl 0xb711c0 <line:840:1, col:32> col:13 LOS_TaskUnlock 'void (void)' extern
| `-FullComment 0xbae930 <line:820:3, line:838:20>
|   |-ParagraphComment 0xbadfc0 <line:820:3>
|   | `-TextComment 0xbadf90 <col:3> Text=" "
|   |-VerbatimLineComment 0xbadfe0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbae050 <line:821:3>
|   | `-TextComment 0xbae020 <col:3> Text=" "
|   |-BlockCommandComment 0xbae070 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0xbae0d0 <col:10, col:37>
|   |   `-TextComment 0xbae0a0 <col:10, col:37> Text=" Unlock the task scheduling."
|   |-ParagraphComment 0xbae120 <line:823:3>
|   | `-TextComment 0xbae0f0 <col:3> Text=" "
|   |-BlockCommandComment 0xbae140 <col:4, line:825:119> Name="par"
|   | `-ParagraphComment 0xbae210 <line:823:8, line:825:119>
|   |   |-TextComment 0xbae170 <line:823:8, col:20> Text=" Description:"
|   |   |-TextComment 0xbae1b0 <line:824:3, col:114> Text=" This API is used to unlock the task scheduling. Calling this API will decrease the number of task locks by one."
|   |   `-TextComment 0xbae1d0 <line:825:3, col:119> Text=" If a task is locked more than once, the task scheduling will be unlocked only when the number of locks becomes zero."
|   |-ParagraphComment 0xbae260 <line:827:3>
|   | `-TextComment 0xbae230 <col:3> Text=" "
|   |-BlockCommandComment 0xbae280 <col:4, line:831:8> Name="attention"
|   | `-ParagraphComment 0xbae470 <line:828:3, line:831:8>
|   |   |-TextComment 0xbae2b0 <line:828:3> Text=" "
|   |   |-HTMLStartTagComment 0xbae2d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbae310 <line:829:3> Text=" "
|   |   |-HTMLStartTagComment 0xbae330 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbae370 <col:8, col:115> Text="The number of locks is decreased by one if this API is called. One is added to the number of task scheduling"
|   |   |-TextComment 0xbae390 <line:830:3, col:105> Text=" locks if the task scheduling is locked. Therefore, this API should be used together with LOS_TaskLock."
|   |   |-HTMLEndTagComment 0xbae3b0 <col:106, col:110> Name="li"
|   |   |-TextComment 0xbae3e0 <line:831:3> Text=" "
|   |   `-HTMLEndTagComment 0xbae400 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbae4c0 <line:833:3>
|   | `-TextComment 0xbae490 <col:3> Text=" "
|   |-ParamCommandComment 0xbae4e0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xbae540 <<invalid sloc>>
|   |-ParagraphComment 0xbae590 <line:835:3>
|   | `-TextComment 0xbae560 <col:3> Text=" "
|   |-BlockCommandComment 0xbae5b0 <col:4, line:836:3> Name="retval"
|   | `-ParagraphComment 0xbae630 <line:835:11, line:836:3>
|   |   |-TextComment 0xbae5e0 <line:835:11, col:16> Text=" None."
|   |   `-TextComment 0xbae600 <line:836:3> Text=" "
|   |-BlockCommandComment 0xbae650 <col:4, line:838:3> Name="par"
|   | `-ParagraphComment 0xbae820 <line:836:8, line:838:3>
|   |   |-TextComment 0xbae680 <line:836:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbae6a0 <line:837:3> Text=" "
|   |   |-HTMLStartTagComment 0xbae6c0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbae700 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbae740 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbae760 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbae790 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbae7c0 <line:838:3> Text=" "
|   `-BlockCommandComment 0xbae840 <col:4, col:20> Name="see"
|     `-ParagraphComment 0xbae8a0 <col:8, col:20>
|       `-TextComment 0xbae870 <col:8, col:20> Text=" LOS_TaskLock"
|-FunctionDecl 0xb713e8 <line:870:1, col:60> col:15 LOS_TaskPriSet 'UINT32 (UINT32, UINT16)' extern
| |-ParmVarDecl 0xb71298 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb71310 <col:45, col:52> col:52 taskPrio 'UINT16':'unsigned short'
| `-FullComment 0xbaf920 <line:843:3, line:868:22>
|   |-ParagraphComment 0xbae9d0 <line:843:3>
|   | `-TextComment 0xbae9a0 <col:3> Text=" "
|   |-VerbatimLineComment 0xbae9f0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbaea60 <line:844:3>
|   | `-TextComment 0xbaea30 <col:3> Text=" "
|   |-BlockCommandComment 0xbaea80 <col:4, col:30> Name="brief"
|   | `-ParagraphComment 0xbaeae0 <col:10, col:30>
|   |   `-TextComment 0xbaeab0 <col:10, col:30> Text=" Set a task priority."
|   |-ParagraphComment 0xbaeb30 <line:846:3>
|   | `-TextComment 0xbaeb00 <col:3> Text=" "
|   |-BlockCommandComment 0xbaeb50 <col:4, line:847:60> Name="par"
|   | `-ParagraphComment 0xbaebd0 <line:846:8, line:847:60>
|   |   |-TextComment 0xbaeb80 <line:846:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbaeba0 <line:847:3, col:60> Text=" This API is used to set the priority of a specified task."
|   |-ParagraphComment 0xbaec20 <line:849:3>
|   | `-TextComment 0xbaebf0 <col:3> Text=" "
|   |-BlockCommandComment 0xbaec40 <col:4, line:856:8> Name="attention"
|   | `-ParagraphComment 0xbaf0a0 <line:850:3, line:856:8>
|   |   |-TextComment 0xbaec70 <line:850:3> Text=" "
|   |   |-HTMLStartTagComment 0xbaec90 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbaecd0 <line:851:3> Text=" "
|   |   |-HTMLStartTagComment 0xbaecf0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbaed30 <col:8, col:116> Text="If the set priority is higher than the priority of the current running task, task scheduling probably occurs."
|   |   |-TextComment 0xbaed50 <line:852:3> Text=" "
|   |   |-HTMLEndTagComment 0xbaed70 <col:4, col:8> Name="li"
|   |   |-TextComment 0xbaeda0 <line:853:3> Text=" "
|   |   |-HTMLStartTagComment 0xbaedc0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbaee00 <col:8, col:94> Text="Changing the priority of the current running task also probably causes task scheduling."
|   |   |-HTMLEndTagComment 0xbaee20 <col:95, col:99> Name="li"
|   |   |-TextComment 0xbaee50 <line:854:3> Text=" "
|   |   |-HTMLStartTagComment 0xbaee70 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbaeeb0 <col:8, col:102> Text="Using the interface to change the priority of software timer task and idle task is not allowed."
|   |   |-HTMLEndTagComment 0xbaeed0 <col:103, col:107> Name="li"
|   |   |-TextComment 0xbaef00 <line:855:3> Text=" "
|   |   |-HTMLStartTagComment 0xbaef20 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbaef60 <col:8, col:59> Text="Using the interface in the interrupt is not allowed."
|   |   |-HTMLEndTagComment 0xbaef80 <col:60, col:64> Name="li"
|   |   |-TextComment 0xbaefb0 <line:856:3> Text=" "
|   |   `-HTMLEndTagComment 0xbaefd0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbaf0f0 <line:858:3>
|   | `-TextComment 0xbaf0c0 <col:3> Text=" "
|   |-ParamCommandComment 0xbaf110 <col:4, line:859:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xbaf1d0 <line:858:18, line:859:3>
|   |   |-TextComment 0xbaf170 <line:858:18, col:96> Text="   [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |   `-TextComment 0xbaf190 <line:859:3> Text=" "
|   |-ParamCommandComment 0xbaf1f0 <col:4, col:52> [in] implicitly Param="taskPrio" ParamIndex=1
|   | `-ParagraphComment 0xbaf280 <col:20, col:52>
|   |   `-TextComment 0xbaf250 <col:20, col:52> Text=" [IN] Type #UINT16 Task priority."
|   |-ParagraphComment 0xbaf2d0 <line:861:3>
|   | `-TextComment 0xbaf2a0 <col:3> Text=" "
|   |-BlockCommandComment 0xbaf2f0 <col:4, line:862:3> Name="retval"
|   | `-ParagraphComment 0xbaf370 <line:861:11, line:862:3>
|   |   |-TextComment 0xbaf320 <line:861:11, col:95> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR    Incorrect task priority.Re-configure the task priority"
|   |   `-TextComment 0xbaf340 <line:862:3> Text=" "
|   |-BlockCommandComment 0xbaf390 <col:4, line:863:3> Name="retval"
|   | `-ParagraphComment 0xbaf410 <line:862:11, line:863:3>
|   |   |-TextComment 0xbaf3c0 <line:862:11, col:95> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE   Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0xbaf3e0 <line:863:3> Text=" "
|   |-BlockCommandComment 0xbaf430 <col:4, line:864:3> Name="retval"
|   | `-ParagraphComment 0xbaf4b0 <line:863:11, line:864:3>
|   |   |-TextComment 0xbaf460 <line:863:11, col:56> Text=" #LOS_ERRNO_TSK_ID_INVALID     Invalid Task ID"
|   |   `-TextComment 0xbaf480 <line:864:3> Text=" "
|   |-BlockCommandComment 0xbaf4d0 <col:4, line:865:3> Name="retval"
|   | `-ParagraphComment 0xbaf550 <line:864:11, line:865:3>
|   |   |-TextComment 0xbaf500 <line:864:11, col:65> Text=" #LOS_ERRNO_TSK_NOT_CREATED    The task is not created."
|   |   `-TextComment 0xbaf520 <line:865:3> Text=" "
|   |-BlockCommandComment 0xbaf570 <col:4, line:866:3> Name="retval"
|   | `-ParagraphComment 0xbaf5f0 <line:865:11, line:866:3>
|   |   |-TextComment 0xbaf5a0 <line:865:11, col:103> Text=" #LOS_OK                       The task priority is successfully set to a specified priority."
|   |   `-TextComment 0xbaf5c0 <line:866:3> Text=" "
|   |-BlockCommandComment 0xbaf610 <col:4, line:868:3> Name="par"
|   | `-ParagraphComment 0xbaf7e0 <line:866:8, line:868:3>
|   |   |-TextComment 0xbaf640 <line:866:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbaf660 <line:867:3> Text=" "
|   |   |-HTMLStartTagComment 0xbaf680 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbaf6c0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbaf700 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbaf720 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbaf750 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbaf780 <line:868:3> Text=" "
|   `-BlockCommandComment 0xbaf800 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xbaf860 <col:8, col:22>
|       `-TextComment 0xbaf830 <col:8, col:22> Text=" LOS_TaskPriSet"
|-FunctionDecl 0xb715c8 <line:898:1, col:48> col:15 LOS_CurTaskPriSet 'UINT32 (UINT16)' extern
| |-ParmVarDecl 0xb714d8 <col:33, col:40> col:40 taskPrio 'UINT16':'unsigned short'
| `-FullComment 0xbb0780 <line:873:3, line:896:22>
|   |-ParagraphComment 0xbaf9c0 <line:873:3>
|   | `-TextComment 0xbaf990 <col:3> Text=" "
|   |-VerbatimLineComment 0xbaf9e0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbafa50 <line:874:3>
|   | `-TextComment 0xbafa20 <col:3> Text=" "
|   |-BlockCommandComment 0xbafa70 <col:4, col:79> Name="brief"
|   | `-ParagraphComment 0xbafad0 <col:10, col:79>
|   |   `-TextComment 0xbafaa0 <col:10, col:79> Text=" Set the priority of the current running task to a specified priority."
|   |-ParagraphComment 0xbafb20 <line:876:3>
|   | `-TextComment 0xbafaf0 <col:3> Text=" "
|   |-BlockCommandComment 0xbafb40 <col:4, line:877:92> Name="par"
|   | `-ParagraphComment 0xbafbc0 <line:876:8, line:877:92>
|   |   |-TextComment 0xbafb70 <line:876:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbafb90 <line:877:3, col:92> Text=" This API is used to set the priority of the current running task to a specified priority."
|   |-ParagraphComment 0xbafc10 <line:879:3>
|   | `-TextComment 0xbafbe0 <col:3> Text=" "
|   |-BlockCommandComment 0xbafc30 <col:4, line:884:8> Name="attention"
|   | `-ParagraphComment 0xbaffa0 <line:880:3, line:884:8>
|   |   |-TextComment 0xbafc60 <line:880:3> Text=" "
|   |   |-HTMLStartTagComment 0xbafc80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbafcc0 <line:881:3> Text=" "
|   |   |-HTMLStartTagComment 0xbafce0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbafd20 <col:8, col:89> Text="Changing the priority of the current running task probably causes task scheduling."
|   |   |-HTMLEndTagComment 0xbafd40 <col:90, col:94> Name="li"
|   |   |-TextComment 0xbafd70 <line:882:3> Text=" "
|   |   |-HTMLStartTagComment 0xbafd90 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbafdd0 <col:8, col:102> Text="Using the interface to change the priority of software timer task and idle task is not allowed."
|   |   |-HTMLEndTagComment 0xbafdf0 <col:103, col:107> Name="li"
|   |   |-TextComment 0xbafe20 <line:883:3> Text=" "
|   |   |-HTMLStartTagComment 0xbafe40 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbafe80 <col:8, col:59> Text="Using the interface in the interrupt is not allowed."
|   |   |-HTMLEndTagComment 0xbafea0 <col:60, col:64> Name="li"
|   |   |-TextComment 0xbafed0 <line:884:3> Text=" "
|   |   `-HTMLEndTagComment 0xbafef0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbafff0 <line:886:3>
|   | `-TextComment 0xbaffc0 <col:3> Text=" "
|   |-ParamCommandComment 0xbb0010 <col:4, col:52> [in] implicitly Param="taskPrio" ParamIndex=0
|   | `-ParagraphComment 0xbb00a0 <col:20, col:52>
|   |   `-TextComment 0xbb0070 <col:20, col:52> Text=" [IN] Type #UINT16 Task priority."
|   |-ParagraphComment 0xbb00f0 <line:888:3>
|   | `-TextComment 0xbb00c0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb0110 <col:4, line:889:3> Name="retval"
|   | `-ParagraphComment 0xbb0190 <line:888:11, line:889:3>
|   |   |-TextComment 0xbb0140 <line:888:11, col:96> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR     Incorrect task priority.Re-configure the task priority"
|   |   `-TextComment 0xbb0160 <line:889:3> Text=" "
|   |-BlockCommandComment 0xbb01d0 <col:4, line:890:3> Name="retval"
|   | `-ParagraphComment 0xbb0250 <line:889:11, line:890:3>
|   |   |-TextComment 0xbb0200 <line:889:11, col:96> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE    Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0xbb0220 <line:890:3> Text=" "
|   |-BlockCommandComment 0xbb0270 <col:4, line:891:3> Name="retval"
|   | `-ParagraphComment 0xbb02f0 <line:890:11, line:891:3>
|   |   |-TextComment 0xbb02a0 <line:890:11, col:57> Text=" #LOS_ERRNO_TSK_ID_INVALID      Invalid Task ID"
|   |   `-TextComment 0xbb02c0 <line:891:3> Text=" "
|   |-BlockCommandComment 0xbb0310 <col:4, line:892:3> Name="retval"
|   | `-ParagraphComment 0xbb0390 <line:891:11, line:892:3>
|   |   |-TextComment 0xbb0340 <line:891:11, col:66> Text=" #LOS_ERRNO_TSK_NOT_CREATED     The task is not created."
|   |   `-TextComment 0xbb0360 <line:892:3> Text=" "
|   |-BlockCommandComment 0xbb03b0 <col:4, line:894:3> Name="retval"
|   | `-ParagraphComment 0xbb0460 <line:892:11, line:894:3>
|   |   |-TextComment 0xbb03e0 <line:892:11, col:117> Text=" #LOS_OK                        The priority of the current running task is successfully set to a specified"
|   |   |-TextComment 0xbb0400 <line:893:3, col:51> Text="                                        priority."
|   |   `-TextComment 0xbb0420 <line:894:3> Text=" "
|   |-BlockCommandComment 0xbb0480 <col:4, line:896:3> Name="par"
|   | `-ParagraphComment 0xbb0650 <line:894:8, line:896:3>
|   |   |-TextComment 0xbb04b0 <line:894:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbb04d0 <line:895:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb04f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbb0530 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbb0570 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbb0590 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbb05c0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbb05f0 <line:896:3> Text=" "
|   `-BlockCommandComment 0xbb0670 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xbb06d0 <col:8, col:22>
|       `-TextComment 0xbb06a0 <col:8, col:22> Text=" LOS_TaskPriGet"
|-FunctionDecl 0xb71730 <line:924:1, col:33> col:15 LOS_TaskYield 'UINT32 (void)' extern
| `-FullComment 0xbb12d0 <line:901:3, line:922:7>
|   |-ParagraphComment 0xbb0820 <line:901:3>
|   | `-TextComment 0xbb07f0 <col:3> Text=" "
|   |-VerbatimLineComment 0xbb0840 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbb08b0 <line:902:3>
|   | `-TextComment 0xbb0880 <col:3> Text=" "
|   |-BlockCommandComment 0xbb08d0 <col:4, col:73> Name="brief"
|   | `-ParagraphComment 0xbb0930 <col:10, col:73>
|   |   `-TextComment 0xbb0900 <col:10, col:73> Text=" Change the scheduling sequence of tasks with the same priority."
|   |-ParagraphComment 0xbb0980 <line:904:3>
|   | `-TextComment 0xbb0950 <col:3> Text=" "
|   |-BlockCommandComment 0xbb09a0 <col:4, line:906:9> Name="par"
|   | `-ParagraphComment 0xbb0a50 <line:904:8, line:906:9>
|   |   |-TextComment 0xbb09d0 <line:904:8, col:20> Text=" Description:"
|   |   |-TextComment 0xbb09f0 <line:905:3, col:117> Text=" This API is used to move current task in a queue of tasks with the same priority to the tail of the queue of ready"
|   |   `-TextComment 0xbb0a10 <line:906:3, col:9> Text=" tasks."
|   |-ParagraphComment 0xbb0aa0 <line:908:3>
|   | `-TextComment 0xbb0a70 <col:3> Text=" "
|   |-BlockCommandComment 0xbb0ac0 <col:4, line:912:8> Name="attention"
|   | `-ParagraphComment 0xbb0cb0 <line:909:3, line:912:8>
|   |   |-TextComment 0xbb0af0 <line:909:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb0b10 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbb0b50 <line:910:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb0b70 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbb0bb0 <col:8, col:110> Text="At least two ready tasks need to be included in the queue of ready tasks with the same priority. If the"
|   |   |-TextComment 0xbb0bd0 <line:911:3, col:77> Text=" less than two ready tasks are included in the queue, an error is reported."
|   |   |-HTMLEndTagComment 0xbb0bf0 <col:78, col:82> Name="li"
|   |   |-TextComment 0xbb0c20 <line:912:3> Text=" "
|   |   `-HTMLEndTagComment 0xbb0c40 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbb0d00 <line:914:3>
|   | `-TextComment 0xbb0cd0 <col:3> Text=" "
|   |-ParamCommandComment 0xbb0d20 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xbb0d80 <<invalid sloc>>
|   |-ParagraphComment 0xbb0dd0 <line:916:3>
|   | `-TextComment 0xbb0da0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb0df0 <col:4, line:917:3> Name="retval"
|   | `-ParagraphComment 0xbb0e70 <line:916:11, line:917:3>
|   |   |-TextComment 0xbb0e20 <line:916:11, col:71> Text=" #LOS_ERRNO_TSK_ID_INVALID                    Invalid Task ID"
|   |   `-TextComment 0xbb0e40 <line:917:3> Text=" "
|   |-BlockCommandComment 0xbb0e90 <col:4, line:918:3> Name="retval"
|   | `-ParagraphComment 0xbb0f10 <line:917:11, line:918:3>
|   |   |-TextComment 0xbb0ec0 <line:917:11, col:116> Text=" #LOS_ERRNO_TSK_YIELD_NOT_ENOUGH_TASK         No tasks with the same priority is available for scheduling."
|   |   `-TextComment 0xbb0ee0 <line:918:3> Text=" "
|   |-BlockCommandComment 0xbb0f30 <col:4, line:920:3> Name="retval"
|   | `-ParagraphComment 0xbb0fe0 <line:918:11, line:920:3>
|   |   |-TextComment 0xbb0f60 <line:918:11, col:110> Text=" #LOS_OK                                      The scheduling sequence of tasks with same priority is"
|   |   |-TextComment 0xbb0f80 <line:919:3, col:77> Text="                                                      successfully changed."
|   |   `-TextComment 0xbb0fa0 <line:920:3> Text=" "
|   |-BlockCommandComment 0xbb1000 <col:4, line:922:3> Name="par"
|   | `-ParagraphComment 0xbb11e0 <line:920:8, line:922:3>
|   |   |-TextComment 0xbb1030 <line:920:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbb1050 <line:921:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb1070 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbb10b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbb10f0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbb1110 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbb1140 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbb1170 <line:922:3> Text=" "
|   `-BlockCommandComment 0xbb1200 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xbb1230 <<invalid sloc>>
|-FunctionDecl 0xb718f8 <line:943:1, col:43> col:15 LOS_TaskPriGet 'UINT16 (UINT32)' extern
| |-ParmVarDecl 0xb71808 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0xbb1be0 <line:927:3, line:941:22>
|   |-ParagraphComment 0xbb1370 <line:927:3>
|   | `-TextComment 0xbb1340 <col:3> Text=" "
|   |-VerbatimLineComment 0xbb1390 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbb1400 <line:928:3>
|   | `-TextComment 0xbb13d0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb1420 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0xbb1480 <col:10, col:33>
|   |   `-TextComment 0xbb1450 <col:10, col:33> Text=" Obtain a task priority."
|   |-ParagraphComment 0xbb14d0 <line:930:3>
|   | `-TextComment 0xbb14a0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb14f0 <col:4, line:931:63> Name="par"
|   | `-ParagraphComment 0xbb1570 <line:930:8, line:931:63>
|   |   |-TextComment 0xbb1520 <line:930:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbb1540 <line:931:3, col:63> Text=" This API is used to obtain the priority of a specified task."
|   |-ParagraphComment 0xbb15c0 <line:933:3>
|   | `-TextComment 0xbb1590 <col:3> Text=" "
|   |-BlockCommandComment 0xbb15e0 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xbb1640 <col:14, col:19>
|   |   `-TextComment 0xbb1610 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xbb1690 <line:935:3>
|   | `-TextComment 0xbb1660 <col:3> Text=" "
|   |-ParamCommandComment 0xbb16b0 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xbb1740 <col:18, col:94>
|   |   `-TextComment 0xbb1710 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0xbb1790 <line:937:3>
|   | `-TextComment 0xbb1760 <col:3> Text=" "
|   |-BlockCommandComment 0xbb17b0 <col:4, line:938:3> Name="retval"
|   | `-ParagraphComment 0xbb1830 <line:937:11, line:938:3>
|   |   |-TextComment 0xbb17e0 <line:937:11, col:67> Text=" #OS_INVALID      The task priority fails to be obtained."
|   |   `-TextComment 0xbb1800 <line:938:3> Text=" "
|   |-BlockCommandComment 0xbb1850 <col:4, line:939:3> Name="retval"
|   | `-ParagraphComment 0xbb18d0 <line:938:11, line:939:3>
|   |   |-TextComment 0xbb1880 <line:938:11, col:46> Text=" #UINT16          The task priority."
|   |   `-TextComment 0xbb18a0 <line:939:3> Text=" "
|   |-BlockCommandComment 0xbb18f0 <col:4, line:941:3> Name="par"
|   | `-ParagraphComment 0xbb1ac0 <line:939:8, line:941:3>
|   |   |-TextComment 0xbb1920 <line:939:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbb1940 <line:940:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb1960 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbb19a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbb19e0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbb1a00 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbb1a30 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbb1a60 <line:941:3> Text=" "
|   `-BlockCommandComment 0xbb1ae0 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xbb1b40 <col:8, col:22>
|       `-TextComment 0xbb1b10 <col:8, col:22> Text=" LOS_TaskPriSet"
|-FunctionDecl 0xb71a60 <line:963:1, col:36> col:15 LOS_CurTaskIDGet 'UINT32 (void)' extern
| `-FullComment 0xbb2540 <line:946:3, line:961:7>
|   |-ParagraphComment 0xbb1c80 <line:946:3>
|   | `-TextComment 0xbb1c50 <col:3> Text=" "
|   |-VerbatimLineComment 0xbb1ca0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbb1d10 <line:947:3>
|   | `-TextComment 0xbb1ce0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb1d30 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xbb1d90 <col:10, col:41>
|   |   `-TextComment 0xbb1d60 <col:10, col:41> Text=" Obtain current running task ID."
|   |-ParagraphComment 0xbb1de0 <line:949:3>
|   | `-TextComment 0xbb1db0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb1e00 <col:4, line:950:61> Name="par"
|   | `-ParagraphComment 0xbb1e80 <line:949:8, line:950:61>
|   |   |-TextComment 0xbb1e30 <line:949:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbb1e50 <line:950:3, col:61> Text=" This API is used to obtain the ID of current running task."
|   |-ParagraphComment 0xbb1ed0 <line:952:3>
|   | `-TextComment 0xbb1ea0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb1ef0 <col:4, line:955:8> Name="attention"
|   | `-ParagraphComment 0xbb20c0 <line:953:3, line:955:8>
|   |   |-TextComment 0xbb1f20 <line:953:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb1f40 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbb1f80 <line:954:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb1fa0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbb1fe0 <col:8, col:70> Text=" This interface should not be called before system initialized."
|   |   |-HTMLEndTagComment 0xbb2000 <col:71, col:75> Name="li"
|   |   |-TextComment 0xbb2030 <line:955:3> Text=" "
|   |   `-HTMLEndTagComment 0xbb2050 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbb2110 <line:957:3>
|   | `-TextComment 0xbb20e0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb2130 <col:4, line:958:3> Name="retval"
|   | `-ParagraphComment 0xbb21b0 <line:957:11, line:958:3>
|   |   |-TextComment 0xbb2160 <line:957:11, col:56> Text=" #LOS_ERRNO_TSK_ID_INVALID    Invalid Task ID."
|   |   `-TextComment 0xbb2180 <line:958:3> Text=" "
|   |-BlockCommandComment 0xbb21f0 <col:4, line:959:3> Name="retval"
|   | `-ParagraphComment 0xbb2270 <line:958:11, line:959:3>
|   |   |-TextComment 0xbb2220 <line:958:11, col:48> Text=" #UINT32                      Task ID."
|   |   `-TextComment 0xbb2240 <line:959:3> Text=" "
|   |-BlockCommandComment 0xbb2290 <col:4, line:961:3> Name="par"
|   | `-ParagraphComment 0xbb2460 <line:959:8, line:961:3>
|   |   |-TextComment 0xbb22c0 <line:959:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbb22e0 <line:960:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb2300 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbb2340 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbb2380 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbb23a0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbb23d0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbb2400 <line:961:3> Text=" "
|   `-BlockCommandComment 0xbb2480 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xbb24b0 <<invalid sloc>>
|-FunctionDecl 0xb71bc0 <line:981:1, col:37> col:15 LOS_NextTaskIDGet 'UINT32 (void)' extern
| `-FullComment 0xbb2d10 <line:966:3, line:979:7>
|   |-ParagraphComment 0xbb25e0 <line:966:3>
|   | `-TextComment 0xbb25b0 <col:3> Text=" "
|   |-VerbatimLineComment 0xbb2600 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbb2670 <line:967:3>
|   | `-TextComment 0xbb2640 <col:3> Text=" "
|   |-BlockCommandComment 0xbb2690 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0xbb26f0 <col:10, col:38>
|   |   `-TextComment 0xbb26c0 <col:10, col:38> Text=" Obtain next running task ID."
|   |-ParagraphComment 0xbb2740 <line:969:3>
|   | `-TextComment 0xbb2710 <col:3> Text=" "
|   |-BlockCommandComment 0xbb2760 <col:4, line:970:58> Name="par"
|   | `-ParagraphComment 0xbb27e0 <line:969:8, line:970:58>
|   |   |-TextComment 0xbb2790 <line:969:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbb27b0 <line:970:3, col:58> Text=" This API is used to obtain the ID of next running task."
|   |-ParagraphComment 0xbb2830 <line:972:3>
|   | `-TextComment 0xbb2800 <col:3> Text=" "
|   |-BlockCommandComment 0xbb2850 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xbb28b0 <col:14, col:19>
|   |   `-TextComment 0xbb2880 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xbb2900 <line:975:3>
|   | `-TextComment 0xbb28d0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb2920 <col:4, line:976:3> Name="retval"
|   | `-ParagraphComment 0xbb29a0 <line:975:11, line:976:3>
|   |   |-TextComment 0xbb2950 <line:975:11, col:56> Text=" #LOS_ERRNO_TSK_ID_INVALID    invalid Task ID."
|   |   `-TextComment 0xbb2970 <line:976:3> Text=" "
|   |-BlockCommandComment 0xbb29c0 <col:4, line:977:3> Name="retval"
|   | `-ParagraphComment 0xbb2a40 <line:976:11, line:977:3>
|   |   |-TextComment 0xbb29f0 <line:976:11, col:48> Text=" #UINT32                      task id."
|   |   `-TextComment 0xbb2a10 <line:977:3> Text=" "
|   |-BlockCommandComment 0xbb2a60 <col:4, line:979:3> Name="par"
|   | `-ParagraphComment 0xbb2c30 <line:977:8, line:979:3>
|   |   |-TextComment 0xbb2a90 <line:977:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbb2ab0 <line:978:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb2ad0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbb2b10 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbb2b50 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbb2b70 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbb2ba0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbb2bd0 <line:979:3> Text=" "
|   `-BlockCommandComment 0xbb2c50 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xbb2c80 <<invalid sloc>>
|-FunctionDecl 0xb71d78 <line:999:1, col:37> col:14 used LOS_CurTaskNameGet 'CHAR *(void)' extern
| `-FullComment 0xbb3a00 <line:984:3, line:997:7>
|   |-ParagraphComment 0xbb2db0 <line:984:3>
|   | `-TextComment 0xbb2d80 <col:3> Text=" "
|   |-VerbatimLineComment 0xbb2dd0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbb2e40 <line:985:3>
|   | `-TextComment 0xbb2e10 <col:3> Text=" "
|   |-BlockCommandComment 0xbb2e60 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0xbb2ec0 <col:10, col:38>
|   |   `-TextComment 0xbb2e90 <col:10, col:38> Text=" Obtain next running task ID."
|   |-ParagraphComment 0xbb2f10 <line:987:3>
|   | `-TextComment 0xbb2ee0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb2f30 <col:4, line:988:58> Name="par"
|   | `-ParagraphComment 0xbb2fb0 <line:987:8, line:988:58>
|   |   |-TextComment 0xbb2f60 <line:987:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbb2f80 <line:988:3, col:58> Text=" This API is used to obtain the ID of next running task."
|   |-ParagraphComment 0xbb3000 <line:990:3>
|   | `-TextComment 0xbb2fd0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb3020 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xbb3080 <col:14, col:19>
|   |   `-TextComment 0xbb3050 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xbb30d0 <line:993:3>
|   | `-TextComment 0xbb30a0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb30f0 <col:4, line:994:3> Name="retval"
|   | `-ParagraphComment 0xbb3170 <line:993:11, line:994:3>
|   |   |-TextComment 0xbb3120 <line:993:11, col:46> Text=" #NULL            invalid Task name."
|   |   `-TextComment 0xbb3140 <line:994:3> Text=" "
|   |-BlockCommandComment 0xbb3190 <col:4, line:995:3> Name="retval"
|   | `-ParagraphComment 0xbb3730 <line:994:11, line:995:3>
|   |   |-TextComment 0xbb31c0 <line:994:11, col:38> Text=" #CHAR*           task name."
|   |   `-TextComment 0xbb3700 <line:995:3> Text=" "
|   |-BlockCommandComment 0xbb3750 <col:4, line:997:3> Name="par"
|   | `-ParagraphComment 0xbb3920 <line:995:8, line:997:3>
|   |   |-TextComment 0xbb3780 <line:995:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbb37a0 <line:996:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb37c0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbb3800 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbb3840 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbb3860 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbb3890 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbb38c0 <line:997:3> Text=" "
|   `-BlockCommandComment 0xbb3940 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xbb3970 <<invalid sloc>>
|-FunctionDecl 0xb722f8 <line:1025:1, col:66> col:15 LOS_TaskInfoGet 'UINT32 (UINT32, TSK_INFO_S *)' extern
| |-ParmVarDecl 0xb71e58 <col:31, col:38> col:38 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb721e8 <col:46, col:58> col:58 taskInfo 'TSK_INFO_S *'
| `-FullComment 0xbb4690 <line:1002:3, line:1023:7>
|   |-ParagraphComment 0xbb3aa0 <line:1002:3>
|   | `-TextComment 0xbb3a70 <col:3> Text=" "
|   |-VerbatimLineComment 0xbb3ac0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbb3b30 <line:1003:3>
|   | `-TextComment 0xbb3b00 <col:3> Text=" "
|   |-BlockCommandComment 0xbb3b50 <col:4, col:46> Name="brief"
|   | `-ParagraphComment 0xbb3bb0 <col:10, col:46>
|   |   `-TextComment 0xbb3b80 <col:10, col:46> Text=" Obtain a task information structure."
|   |-ParagraphComment 0xbb3c00 <line:1005:3>
|   | `-TextComment 0xbb3bd0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb3c20 <col:4, line:1006:59> Name="par"
|   | `-ParagraphComment 0xbb3ca0 <line:1005:8, line:1006:59>
|   |   |-TextComment 0xbb3c50 <line:1005:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbb3c70 <line:1006:3, col:59> Text=" This API is used to obtain a task information structure."
|   |-ParagraphComment 0xbb3cf0 <line:1008:3>
|   | `-TextComment 0xbb3cc0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb3d10 <col:4, line:1012:8> Name="attention"
|   | `-ParagraphComment 0xbb3f00 <line:1009:3, line:1012:8>
|   |   |-TextComment 0xbb3d40 <line:1009:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb3d60 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbb3da0 <line:1010:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb3dc0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbb3e00 <col:8, col:111> Text="One parameter of this interface is a pointer, it should be a correct value, otherwise, the system may be"
|   |   |-TextComment 0xbb3e20 <line:1011:3, col:12> Text=" abnormal."
|   |   |-HTMLEndTagComment 0xbb3e40 <col:13, col:17> Name="li"
|   |   |-TextComment 0xbb3e70 <line:1012:3> Text=" "
|   |   `-HTMLEndTagComment 0xbb3e90 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbb3f50 <line:1014:3>
|   | `-TextComment 0xbb3f20 <col:3> Text=" "
|   |-ParamCommandComment 0xbb3f70 <col:4, line:1015:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xbb4020 <line:1014:18, line:1015:3>
|   |   |-TextComment 0xbb3fd0 <line:1014:18, col:99> Text="    [IN]  Type  #UINT32 Task ID. The task id value is obtained from task creation."
|   |   `-TextComment 0xbb3ff0 <line:1015:3> Text=" "
|   |-ParamCommandComment 0xbb4040 <col:4, col:103> [in] implicitly Param="taskInfo" ParamIndex=1
|   | `-ParagraphComment 0xbb40d0 <col:20, col:103>
|   |   `-TextComment 0xbb40a0 <col:20, col:103> Text="  [OUT] Type  #TSK_INFO_S* Pointer to the task information structure to be obtained."
|   |-ParagraphComment 0xbb4120 <line:1017:3>
|   | `-TextComment 0xbb40f0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb4140 <col:4, line:1018:3> Name="retval"
|   | `-ParagraphComment 0xbb41c0 <line:1017:11, line:1018:3>
|   |   |-TextComment 0xbb4170 <line:1017:11, col:57> Text=" #LOS_ERRNO_TSK_PTR_NULL        Null parameter."
|   |   `-TextComment 0xbb4190 <line:1018:3> Text=" "
|   |-BlockCommandComment 0xbb41e0 <col:4, line:1019:3> Name="retval"
|   | `-ParagraphComment 0xbb4260 <line:1018:11, line:1019:3>
|   |   |-TextComment 0xbb4210 <line:1018:11, col:58> Text=" #LOS_ERRNO_TSK_ID_INVALID      Invalid task ID."
|   |   `-TextComment 0xbb4230 <line:1019:3> Text=" "
|   |-BlockCommandComment 0xbb4280 <col:4, line:1020:3> Name="retval"
|   | `-ParagraphComment 0xbb4300 <line:1019:11, line:1020:3>
|   |   |-TextComment 0xbb42b0 <line:1019:11, col:66> Text=" #LOS_ERRNO_TSK_NOT_CREATED     The task is not created."
|   |   `-TextComment 0xbb42d0 <line:1020:3> Text=" "
|   |-BlockCommandComment 0xbb4320 <col:4, line:1021:3> Name="retval"
|   | `-ParagraphComment 0xbb43a0 <line:1020:11, line:1021:3>
|   |   |-TextComment 0xbb4350 <line:1020:11, col:98> Text=" #LOS_OK                        The task information structure is successfully obtained."
|   |   `-TextComment 0xbb4370 <line:1021:3> Text=" "
|   |-BlockCommandComment 0xbb43c0 <col:4, line:1023:3> Name="par"
|   | `-ParagraphComment 0xbb4590 <line:1021:8, line:1023:3>
|   |   |-TextComment 0xbb43f0 <line:1021:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbb4410 <line:1022:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb4430 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbb4470 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbb44b0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbb44d0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbb4500 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbb4530 <line:1023:3> Text=" "
|   `-BlockCommandComment 0xbb45b0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xbb45e0 <<invalid sloc>>
|-FunctionDecl 0xb72578 <line:1047:1, col:66> col:15 LOS_TaskStatusGet 'UINT32 (UINT32, UINT32 *)' extern
| |-ParmVarDecl 0xb723e8 <col:33, col:40> col:40 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb72460 <col:48, col:56> col:56 taskStatus 'UINT32 *'
| `-FullComment 0xbb51a0 <line:1028:3, line:1045:7>
|   |-ParagraphComment 0xbb4740 <line:1028:3>
|   | `-TextComment 0xbb4710 <col:3> Text=" "
|   |-VerbatimLineComment 0xbb4760 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbb47d0 <line:1029:3>
|   | `-TextComment 0xbb47a0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb47f0 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0xbb4850 <col:10, col:33>
|   |   `-TextComment 0xbb4820 <col:10, col:33> Text=" Obtain the task status."
|   |-ParagraphComment 0xbb48a0 <line:1031:3>
|   | `-TextComment 0xbb4870 <col:3> Text=" "
|   |-BlockCommandComment 0xbb48c0 <col:4, line:1032:46> Name="par"
|   | `-ParagraphComment 0xbb4940 <line:1031:8, line:1032:46>
|   |   |-TextComment 0xbb48f0 <line:1031:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbb4910 <line:1032:3, col:46> Text=" This API is used to obtain the task status."
|   |-ParagraphComment 0xbb4990 <line:1034:3>
|   | `-TextComment 0xbb4960 <col:3> Text=" "
|   |-BlockCommandComment 0xbb49b0 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xbb4a10 <col:14, col:19>
|   |   `-TextComment 0xbb49e0 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xbb4a60 <line:1036:3>
|   | `-TextComment 0xbb4a30 <col:3> Text=" "
|   |-ParamCommandComment 0xbb4a80 <col:4, line:1037:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xbb4b30 <line:1036:18, line:1037:3>
|   |   |-TextComment 0xbb4ae0 <line:1036:18, col:55> Text="     [IN] Type  #TSK_HANDLE_T Task ID."
|   |   `-TextComment 0xbb4b00 <line:1037:3> Text=" "
|   |-ParamCommandComment 0xbb4b50 <col:4, col:84> [in] implicitly Param="taskStatus" ParamIndex=1
|   | `-ParagraphComment 0xbb4be0 <col:22, col:84>
|   |   `-TextComment 0xbb4bb0 <col:22, col:84> Text=" [OUT] Type  #UINT32 Pointer to the task status to be obtained."
|   |-ParagraphComment 0xbb4c30 <line:1039:3>
|   | `-TextComment 0xbb4c00 <col:3> Text=" "
|   |-BlockCommandComment 0xbb4c50 <col:4, line:1040:3> Name="retval"
|   | `-ParagraphComment 0xbb4cd0 <line:1039:11, line:1040:3>
|   |   |-TextComment 0xbb4c80 <line:1039:11, col:81> Text=" #LOS_ERRNO_TSK_PTR_NULL                    0x02000201: Null parameter."
|   |   `-TextComment 0xbb4ca0 <line:1040:3> Text=" "
|   |-BlockCommandComment 0xbb4cf0 <col:4, line:1041:3> Name="retval"
|   | `-ParagraphComment 0xbb4d70 <line:1040:11, line:1041:3>
|   |   |-TextComment 0xbb4d20 <line:1040:11, col:82> Text=" #LOS_ERRNO_TSK_ID_INVALID                  0x02000207: Invalid task ID."
|   |   `-TextComment 0xbb4d40 <line:1041:3> Text=" "
|   |-BlockCommandComment 0xbb4d90 <col:4, line:1042:3> Name="retval"
|   | `-ParagraphComment 0xbb4e10 <line:1041:11, line:1042:3>
|   |   |-TextComment 0xbb4dc0 <line:1041:11, col:90> Text=" #LOS_ERRNO_TSK_NOT_CREATED                 0x0200020a: The task is not created."
|   |   `-TextComment 0xbb4de0 <line:1042:3> Text=" "
|   |-BlockCommandComment 0xbb4e30 <col:4, line:1043:3> Name="retval"
|   | `-ParagraphComment 0xbb4eb0 <line:1042:11, line:1043:3>
|   |   |-TextComment 0xbb4e60 <line:1042:11, col:112> Text=" #LOS_OK                                   0: The task information structure is successfully obtained."
|   |   `-TextComment 0xbb4e80 <line:1043:3> Text=" "
|   |-BlockCommandComment 0xbb4ed0 <col:4, line:1045:3> Name="par"
|   | `-ParagraphComment 0xbb50a0 <line:1043:8, line:1045:3>
|   |   |-TextComment 0xbb4f00 <line:1043:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbb4f20 <line:1044:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb4f40 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbb4f80 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbb4fc0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbb4fe0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbb5010 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbb5040 <line:1045:3> Text=" "
|   `-BlockCommandComment 0xbb50c0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xbb50f0 <<invalid sloc>>
|-FunctionDecl 0xb726f0 <line:1068:1, col:39> col:15 LOS_TaskInfoMonitor 'UINT32 (void)' extern
| `-FullComment 0xbb5bd0 <line:1050:3, line:1066:27>
|   |-ParagraphComment 0xbb5240 <line:1050:3>
|   | `-TextComment 0xbb5210 <col:3> Text=" "
|   |-VerbatimLineComment 0xbb5260 <col:4, col:24> Text=" los_monitor"
|   |-ParagraphComment 0xbb52d0 <line:1051:3>
|   | `-TextComment 0xbb52a0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb52f0 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0xbb5350 <col:10, col:32>
|   |   `-TextComment 0xbb5320 <col:10, col:32> Text=" Obtain all tasks info."
|   |-ParagraphComment 0xbb53a0 <line:1053:3>
|   | `-TextComment 0xbb5370 <col:3> Text=" "
|   |-BlockCommandComment 0xbb53c0 <col:4, line:1055:3> Name="par"
|   | `-ParagraphComment 0xbb5470 <line:1053:8, line:1055:3>
|   |   |-TextComment 0xbb53f0 <line:1053:8, col:20> Text=" Description:"
|   |   |-TextComment 0xbb5410 <line:1054:3, col:45> Text=" This API is used to obtain all tasks info."
|   |   `-TextComment 0xbb5430 <line:1055:3> Text=" "
|   |-BlockCommandComment 0xbb5490 <col:4, line:1058:8> Name="attention"
|   | `-ParagraphComment 0xbb5660 <line:1056:3, line:1058:8>
|   |   |-TextComment 0xbb54c0 <line:1056:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb54e0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbb5520 <line:1057:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb5540 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbb5580 <col:8, col:102> Text="This API can be called only after the CPU usage is initialized. Otherwise, -1 will be returned."
|   |   |-HTMLEndTagComment 0xbb55a0 <col:103, col:107> Name="li"
|   |   |-TextComment 0xbb55d0 <line:1058:3> Text=" "
|   |   `-HTMLEndTagComment 0xbb55f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbb56b0 <line:1060:3>
|   | `-TextComment 0xbb5680 <col:3> Text=" "
|   |-ParamCommandComment 0xbb56d0 <col:4, col:15> [in] implicitly Param="None."
|   | `-ParagraphComment 0xbb5740 <<invalid sloc>>
|   |-ParagraphComment 0xbb5790 <line:1062:3>
|   | `-TextComment 0xbb5760 <col:3> Text=" "
|   |-BlockCommandComment 0xbb57b0 <col:4, line:1063:3> Name="retval"
|   | `-ParagraphComment 0xbb5830 <line:1062:11, line:1063:3>
|   |   |-TextComment 0xbb57e0 <line:1062:11, col:63> Text=" #OS_ERROR           -1:all tasks info obtain failed."
|   |   `-TextComment 0xbb5800 <line:1063:3> Text=" "
|   |-BlockCommandComment 0xbb5850 <col:4, line:1064:3> Name="retval"
|   | `-ParagraphComment 0xbb58d0 <line:1063:11, line:1064:3>
|   |   |-TextComment 0xbb5880 <line:1063:11, col:74> Text=" #LOS_OK              0:all tasks info is successfully obtained."
|   |   `-TextComment 0xbb58a0 <line:1064:3> Text=" "
|   |-BlockCommandComment 0xbb58f0 <col:4, line:1066:3> Name="par"
|   | `-ParagraphComment 0xbb5ac0 <line:1064:8, line:1066:3>
|   |   |-TextComment 0xbb5920 <line:1064:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbb5940 <line:1065:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb5960 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbb59a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbb59e0 <col:12, col:76> Text="los_monitor.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbb5a00 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0xbb5a30 <col:82, col:86> Name="ul"
|   |   `-TextComment 0xbb5a60 <line:1066:3> Text=" "
|   `-BlockCommandComment 0xbb5ae0 <col:4, col:27> Name="see"
|     `-ParagraphComment 0xbb5b40 <col:8, col:27>
|       `-TextComment 0xbb5b10 <col:8, col:27> Text=" LOS_TaskInfoMonitor"
|-FunctionDecl 0xb728d8 <line:1089:1, col:73> col:15 LOS_TaskSwitchInfoGet 'UINT32 (UINT32, UINT32 *)' extern
| |-ParmVarDecl 0xb727c8 <col:37, col:44> col:44 index 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb72840 <col:51, col:59> col:59 taskSwitchInfo 'UINT32 *'
| `-FullComment 0xbb65a0 <line:1071:3, line:1087:7>
|   |-ParagraphComment 0xbb5c70 <line:1071:3>
|   | `-TextComment 0xbb5c40 <col:3> Text=" "
|   |-VerbatimLineComment 0xbb5c90 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbb5d00 <line:1072:3>
|   | `-TextComment 0xbb5cd0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb5d20 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0xbb5d80 <col:10, col:35>
|   |   `-TextComment 0xbb5d50 <col:10, col:35> Text=" Obtain tasks switch info."
|   |-ParagraphComment 0xbb5dd0 <line:1074:3>
|   | `-TextComment 0xbb5da0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb5df0 <col:4, line:1075:48> Name="par"
|   | `-ParagraphComment 0xbb5e70 <line:1074:8, line:1075:48>
|   |   |-TextComment 0xbb5e20 <line:1074:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbb5e40 <line:1075:3, col:48> Text=" This API is used to obtain tasks switch info."
|   |-ParagraphComment 0xbb5ec0 <line:1077:3>
|   | `-TextComment 0xbb5e90 <col:3> Text=" "
|   |-BlockCommandComment 0xbb5ee0 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xbb5f40 <col:14, col:19>
|   |   `-TextComment 0xbb5f10 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xbb5f90 <line:1079:3>
|   | `-TextComment 0xbb5f60 <col:3> Text=" "
|   |-ParamCommandComment 0xbb5fb0 <col:4, line:1080:3> [in] implicitly Param="index" ParamIndex=0
|   | `-ParagraphComment 0xbb6060 <line:1079:17, line:1080:3>
|   |   |-TextComment 0xbb6010 <line:1079:17, col:73> Text="            [IN]  Type  #UINT32  Switch info array index."
|   |   `-TextComment 0xbb6030 <line:1080:3> Text=" "
|   |-ParamCommandComment 0xbb6080 <col:4, line:1081:50> [in] implicitly Param="taskSwitchInfo" ParamIndex=1
|   | `-ParagraphComment 0xbb6130 <line:1080:26, line:1081:50>
|   |   |-TextComment 0xbb60e0 <line:1080:26, col:109> Text="   [OUT] Type  #UINT32* First 4 bytes is task id, and then is task name, name len is"
|   |   `-TextComment 0xbb6100 <line:1081:3, col:50> Text="                                OS_TSK_NAME_LEN."
|   |-ParagraphComment 0xbb6180 <line:1083:3>
|   | `-TextComment 0xbb6150 <col:3> Text=" "
|   |-BlockCommandComment 0xbb61a0 <col:4, line:1084:3> Name="retval"
|   | `-ParagraphComment 0xbb6220 <line:1083:11, line:1084:3>
|   |   |-TextComment 0xbb61d0 <line:1083:11, col:72> Text=" #LOS_ERRNO_TSK_PTR_NULL           0x02000201: Null parameter."
|   |   `-TextComment 0xbb61f0 <line:1084:3> Text=" "
|   |-BlockCommandComment 0xbb6240 <col:4, line:1085:3> Name="retval"
|   | `-ParagraphComment 0xbb62c0 <line:1084:11, line:1085:3>
|   |   |-TextComment 0xbb6270 <line:1084:11, col:101> Text=" #LOS_OK                           0: The task switch information is successfully obtained."
|   |   `-TextComment 0xbb6290 <line:1085:3> Text=" "
|   |-BlockCommandComment 0xbb62e0 <col:4, line:1087:3> Name="par"
|   | `-ParagraphComment 0xbb64b0 <line:1085:8, line:1087:3>
|   |   |-TextComment 0xbb6310 <line:1085:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbb6330 <line:1086:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb6350 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbb6390 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbb63d0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbb63f0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbb6420 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbb6450 <line:1087:3> Text=" "
|   `-BlockCommandComment 0xbb64d0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xbb6500 <<invalid sloc>>
|-FunctionDecl 0xb72a78 <line:1108:1, col:35> col:13 LOS_TaskIsRunning 'BOOL (void)' extern
| `-FullComment 0xbb6e60 <line:1092:3, line:1106:7>
|   |-ParagraphComment 0xbb6640 <line:1092:3>
|   | `-TextComment 0xbb6610 <col:3> Text=" "
|   |-VerbatimLineComment 0xbb6660 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbb66d0 <line:1093:3>
|   | `-TextComment 0xbb66a0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb66f0 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0xbb6760 <col:10, col:38>
|   |   `-TextComment 0xbb6730 <col:10, col:38> Text=" Obtain tasks schduling info."
|   |-ParagraphComment 0xbb67b0 <line:1095:3>
|   | `-TextComment 0xbb6780 <col:3> Text=" "
|   |-BlockCommandComment 0xbb67d0 <col:4, line:1096:48> Name="par"
|   | `-ParagraphComment 0xbb6850 <line:1095:8, line:1096:48>
|   |   |-TextComment 0xbb6800 <line:1095:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbb6820 <line:1096:3, col:48> Text=" This API is used to obtain task is scheduled."
|   |-ParagraphComment 0xbb68a0 <line:1098:3>
|   | `-TextComment 0xbb6870 <col:3> Text=" "
|   |-BlockCommandComment 0xbb68c0 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xbb6920 <col:14, col:19>
|   |   `-TextComment 0xbb68f0 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xbb6970 <line:1100:3>
|   | `-TextComment 0xbb6940 <col:3> Text=" "
|   |-ParamCommandComment 0xbb6990 <col:4, col:15> [in] implicitly Param="None."
|   | `-ParagraphComment 0xbb69f0 <<invalid sloc>>
|   |-ParagraphComment 0xbb6a40 <line:1102:3>
|   | `-TextComment 0xbb6a10 <col:3> Text=" "
|   |-BlockCommandComment 0xbb6a60 <col:4, line:1103:3> Name="retval"
|   | `-ParagraphComment 0xbb6ae0 <line:1102:11, line:1103:3>
|   |   |-TextComment 0xbb6a90 <line:1102:11, col:44> Text=" #TRUE         Tasks is scheduled."
|   |   `-TextComment 0xbb6ab0 <line:1103:3> Text=" "
|   |-BlockCommandComment 0xbb6b00 <col:4, line:1104:3> Name="retval"
|   | `-ParagraphComment 0xbb6b80 <line:1103:11, line:1104:3>
|   |   |-TextComment 0xbb6b30 <line:1103:11, col:50> Text=" #FALSE        Tasks not scheduling yet."
|   |   `-TextComment 0xbb6b50 <line:1104:3> Text=" "
|   |-BlockCommandComment 0xbb6ba0 <col:4, line:1106:3> Name="par"
|   | `-ParagraphComment 0xbb6d70 <line:1104:8, line:1106:3>
|   |   |-TextComment 0xbb6bd0 <line:1104:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbb6bf0 <line:1105:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb6c10 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbb6c50 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbb6c90 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbb6cb0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbb6ce0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbb6d10 <line:1106:3> Text=" "
|   `-BlockCommandComment 0xbb6d90 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xbb6dc0 <<invalid sloc>>
|-FunctionDecl 0xb72be0 <line:1126:1, col:37> col:16 LOS_NewTaskIDGet 'UINT32 (void)' extern
| `-FullComment 0xbb7630 <line:1111:3, line:1124:7>
|   |-ParagraphComment 0xbb6f00 <line:1111:3>
|   | `-TextComment 0xbb6ed0 <col:3> Text=" "
|   |-VerbatimLineComment 0xbb6f20 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbb6f90 <line:1112:3>
|   | `-TextComment 0xbb6f60 <col:3> Text=" "
|   |-BlockCommandComment 0xbb6fb0 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0xbb7010 <col:10, col:37>
|   |   `-TextComment 0xbb6fe0 <col:10, col:37> Text=" Obtain current new task ID."
|   |-ParagraphComment 0xbb7060 <line:1114:3>
|   | `-TextComment 0xbb7030 <col:3> Text=" "
|   |-BlockCommandComment 0xbb7080 <col:4, line:1115:49> Name="par"
|   | `-ParagraphComment 0xbb7100 <line:1114:8, line:1115:49>
|   |   |-TextComment 0xbb70b0 <line:1114:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbb70d0 <line:1115:3, col:49> Text=" This API is used to obtain the ID of new task."
|   |-ParagraphComment 0xbb7150 <line:1117:3>
|   | `-TextComment 0xbb7120 <col:3> Text=" "
|   |-BlockCommandComment 0xbb7170 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xbb71d0 <col:14, col:19>
|   |   `-TextComment 0xbb71a0 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xbb7220 <line:1120:3>
|   | `-TextComment 0xbb71f0 <col:3> Text=" "
|   |-BlockCommandComment 0xbb7240 <col:4, line:1121:3> Name="retval"
|   | `-ParagraphComment 0xbb72c0 <line:1120:11, line:1121:3>
|   |   |-TextComment 0xbb7270 <line:1120:11, col:68> Text=" #LOS_ERRNO_TSK_ID_INVALID    0x02000207: invalid Task ID."
|   |   `-TextComment 0xbb7290 <line:1121:3> Text=" "
|   |-BlockCommandComment 0xbb72e0 <col:4, line:1122:3> Name="retval"
|   | `-ParagraphComment 0xbb7360 <line:1121:11, line:1122:3>
|   |   |-TextComment 0xbb7310 <line:1121:11, col:21> Text=" # Task ID."
|   |   `-TextComment 0xbb7330 <line:1122:3> Text=" "
|   |-BlockCommandComment 0xbb7380 <col:4, line:1124:3> Name="par"
|   | `-ParagraphComment 0xbb7550 <line:1122:8, line:1124:3>
|   |   |-TextComment 0xbb73b0 <line:1122:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbb73d0 <line:1123:3> Text=" "
|   |   |-HTMLStartTagComment 0xbb73f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbb7430 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbb7470 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbb7490 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbb74c0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbb74f0 <line:1124:3> Text=" "
|   `-BlockCommandComment 0xbb7570 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xbb75a0 <<invalid sloc>>
|-FunctionDecl 0xb72da8 <line:1144:1, col:43> col:14 LOS_TaskNameGet 'CHAR *(UINT32)' extern
| |-ParmVarDecl 0xb72cb8 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0xbb7f20 <line:1128:4, line:1142:8>
|   |-ParagraphComment 0xbb76d0 <line:1128:4>
|   | `-TextComment 0xbb76a0 <col:4> Text=" "
|   |-VerbatimLineComment 0xbb76f0 <col:5, col:23> Text="  los_task"
|   |-ParagraphComment 0xbb7770 <line:1129:4>
|   | `-TextComment 0xbb7740 <col:4> Text=" "
|   |-BlockCommandComment 0xbb7790 <col:5, col:32> Name="brief"
|   | `-ParagraphComment 0xbb77f0 <col:11, col:32>
|   |   `-TextComment 0xbb77c0 <col:11, col:32> Text=" Obtain the task name."
|   |-ParagraphComment 0xbb7840 <line:1131:4>
|   | `-TextComment 0xbb7810 <col:4> Text=" "
|   |-BlockCommandComment 0xbb7860 <col:5, line:1132:45> Name="par"
|   | `-ParagraphComment 0xbb78e0 <line:1131:9, line:1132:45>
|   |   |-TextComment 0xbb7890 <line:1131:9, col:21> Text=" Description:"
|   |   `-TextComment 0xbb78b0 <line:1132:4, col:45> Text=" This API is used to obtain the task name."
|   |-ParagraphComment 0xbb7930 <line:1134:4>
|   | `-TextComment 0xbb7900 <col:4> Text=" "
|   |-BlockCommandComment 0xbb7950 <col:5, col:20> Name="attention"
|   | `-ParagraphComment 0xbb79b0 <col:15, col:20>
|   |   `-TextComment 0xbb7980 <col:15, col:20> Text=" None."
|   |-ParagraphComment 0xbb7a00 <line:1136:4>
|   | `-TextComment 0xbb79d0 <col:4> Text=" "
|   |-ParamCommandComment 0xbb7a20 <col:5, col:44> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xbb7ab0 <col:19, col:44>
|   |   `-TextComment 0xbb7a80 <col:19, col:44> Text="            [IN]  Task ID."
|   |-ParagraphComment 0xbb7b00 <line:1138:4>
|   | `-TextComment 0xbb7ad0 <col:4> Text=" "
|   |-BlockCommandComment 0xbb7b20 <col:5, line:1139:4> Name="retval"
|   | `-ParagraphComment 0xbb7ba0 <line:1138:12, line:1139:4>
|   |   |-TextComment 0xbb7b50 <line:1138:12, col:37> Text=" #NULL: invalid Task name."
|   |   `-TextComment 0xbb7b70 <line:1139:4> Text=" "
|   |-BlockCommandComment 0xbb7bc0 <col:5, line:1140:4> Name="retval"
|   | `-ParagraphComment 0xbb7c40 <line:1139:12, line:1140:4>
|   |   |-TextComment 0xbb7bf0 <line:1139:12, col:24> Text=" # Task name."
|   |   `-TextComment 0xbb7c10 <line:1140:4> Text=" "
|   |-BlockCommandComment 0xbb7c60 <col:5, line:1142:4> Name="par"
|   | `-ParagraphComment 0xbb7e30 <line:1140:9, line:1142:4>
|   |   |-TextComment 0xbb7c90 <line:1140:9, col:20> Text=" Dependency:"
|   |   |-TextComment 0xbb7cb0 <line:1141:4> Text=" "
|   |   |-HTMLStartTagComment 0xbb7cd0 <col:5, col:8> Name="ul"
|   |   |-HTMLStartTagComment 0xbb7d10 <col:9, col:12> Name="li"
|   |   |-TextComment 0xbb7d50 <col:13, col:74> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbb7d70 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xbb7da0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xbb7dd0 <line:1142:4> Text=" "
|   `-BlockCommandComment 0xbb7e50 <col:5, col:8> Name="see"
|     `-ParagraphComment 0xbb7e80 <<invalid sloc>>
|-FunctionDecl 0xb72fa8 <line:1164:1, col:58> col:15 LOS_TaskJoin 'UINT32 (UINT32, UINTPTR *)' extern
| |-ParmVarDecl 0xb72e60 <col:28, col:35> col:35 taskID 'UINT32':'unsigned int'
| `-ParmVarDecl 0xb72ed8 <col:43, col:52> col:52 retval 'UINTPTR *'
|-FunctionDecl 0xb73310 <line:1183:1, col:43> col:15 LOS_TaskDetach 'UINT32 (UINT32)' extern
| `-ParmVarDecl 0xb73068 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
|-RecordDecl 0xb73a48 <line:1465:9, line:1494:1> line:1465:9 struct definition
| |-FullComment 0xbb8090 <line:1462:3, line:1463:43>
| | |-ParagraphComment 0xbb7fc0 <line:1462:3>
| | | `-TextComment 0xbb7f90 <col:3> Text=" "
| | |-VerbatimLineComment 0xbb7fe0 <col:4, col:21> Text=" los_task"
| | `-ParagraphComment 0xbb8050 <line:1463:3, col:43>
| |   `-TextComment 0xbb8020 <col:3, col:43> Text=" Define the task control block structure."
| |-FieldDecl 0xb73b08 <main/los_compiler.h:327:23, main/los_task.h:1466:34> col:34 stackPointer 'void *'
| | `-FullComment 0xbb8160 <col:63, col:82>
| |   `-ParagraphComment 0xbb8130 <col:63, col:82>
| |     `-TextComment 0xbb8100 <col:63, col:82> Text=" Task stack pointer "
| |-FieldDecl 0xb73b98 <line:1467:5, col:33> col:33 taskStatus 'UINT16':'unsigned short'
| |-FieldDecl 0xb73bf8 <line:1468:5, col:33> col:33 priority 'UINT16':'unsigned short'
| |-FieldDecl 0xb73c58 <line:1469:5, col:33> col:33 timeSlice 'INT32':'int'
| |-FieldDecl 0xb73cb8 <line:1470:5, col:33> col:33 waitTimes 'UINT32':'unsigned int'
| |-FieldDecl 0xb73d18 <line:1471:5, col:33> col:33 sortList 'SortLinkList':'SortLinkList'
| |-FieldDecl 0xb73d78 <line:1472:5, col:33> col:33 startTime 'UINT64':'unsigned long long'
| |-FieldDecl 0xb73dd8 <line:1473:5, col:33> col:33 stackSize 'UINT32':'unsigned int'
| | `-FullComment 0xbb8230 <col:63, col:79>
| |   `-ParagraphComment 0xbb8200 <col:63, col:79>
| |     `-TextComment 0xbb81d0 <col:63, col:79> Text=" Task stack size "
| |-FieldDecl 0xb73e68 <line:1474:5, col:33> col:33 topOfStack 'UINT32':'unsigned int'
| | `-FullComment 0xbb8300 <col:63, col:78>
| |   `-ParagraphComment 0xbb82d0 <col:63, col:78>
| |     `-TextComment 0xbb82a0 <col:63, col:78> Text=" Task stack top "
| |-FieldDecl 0xb73ef8 <line:1475:5, col:33> col:33 taskID 'UINT32':'unsigned int'
| | `-FullComment 0xbb83d0 <col:63, col:71>
| |   `-ParagraphComment 0xbb83a0 <col:63, col:71>
| |     `-TextComment 0xbb8370 <col:63, col:71> Text=" Task ID "
| |-FieldDecl 0xb73f88 <line:1476:5, col:33> col:33 taskEntry 'TSK_ENTRY_FUNC':'void *(*)(UINT32)'
| | `-FullComment 0xbb84a0 <col:63, col:86>
| |   `-ParagraphComment 0xbb8470 <col:63, col:86>
| |     `-TextComment 0xbb8440 <col:63, col:86> Text=" Task entrance function "
| |-FieldDecl 0xb74020 <main/los_compiler.h:327:23, main/los_task.h:1477:34> col:34 taskSem 'void *'
| | `-FullComment 0xbb8570 <col:63, col:83>
| |   `-ParagraphComment 0xbb8540 <col:63, col:83>
| |     `-TextComment 0xbb8510 <col:63, col:83> Text=" Task-held semaphore "
| |-FieldDecl 0xb740b0 <main/los_compiler.h:327:23, main/los_task.h:1478:34> col:34 taskMux 'void *'
| | `-FullComment 0xbb8640 <col:63, col:79>
| |   `-ParagraphComment 0xbb8610 <col:63, col:79>
| |     `-TextComment 0xbb85e0 <col:63, col:79> Text=" Task-held mutex "
| |-FieldDecl 0xb74138 <line:1479:5, col:33> col:33 arg 'UINT32':'unsigned int'
| | `-FullComment 0xbb8710 <col:63, col:73>
| |   `-ParagraphComment 0xbb86e0 <col:63, col:73>
| |     `-TextComment 0xbb86b0 <col:63, col:73> Text=" Parameter "
| |-FieldDecl 0xb741c8 <line:1480:5, col:34> col:34 taskName 'CHAR *'
| | `-FullComment 0xbb9000 <col:63, col:73>
| |   `-ParagraphComment 0xbb8fd0 <col:63, col:73>
| |     `-TextComment 0xbb8fa0 <col:63, col:73> Text=" Task name "
| |-FieldDecl 0xb74258 <line:1481:5, col:33> col:33 pendList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| |-FieldDecl 0xb742b8 <line:1482:5, col:33> col:33 timerList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| |-FieldDecl 0xb781a0 <line:1483:5, col:33> col:33 joinList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| |-FieldDecl 0xb78200 <line:1484:5, col:33> col:33 joinRetval 'UINTPTR':'unsigned int'
| | `-FullComment 0xbb90d0 <col:63, col:190>
| |   `-ParagraphComment 0xbb90a0 <col:63, col:190>
| |     `-TextComment 0xbb9070 <col:63, col:190> Text=" Return value of the end of the task, If the task does not exit by itself, the ID of the task that killed the task is recorded. "
| |-FieldDecl 0xb78288 <line:1485:5, col:33> col:33 event 'EVENT_CB_S':'struct tagEvent'
| |-FieldDecl 0xb782e8 <line:1486:5, col:33> col:33 eventMask 'UINT32':'unsigned int'
| | `-FullComment 0xbb91a0 <col:63, col:74>
| |   `-ParagraphComment 0xbb9170 <col:63, col:74>
| |     `-TextComment 0xbb9140 <col:63, col:74> Text=" Event mask "
| |-FieldDecl 0xb78378 <line:1487:5, col:33> col:33 eventMode 'UINT32':'unsigned int'
| | `-FullComment 0xbb9270 <col:63, col:74>
| |   `-ParagraphComment 0xbb9240 <col:63, col:74>
| |     `-TextComment 0xbb9210 <col:63, col:74> Text=" Event mode "
| |-FieldDecl 0xb78410 <main/los_compiler.h:327:23, main/los_task.h:1488:34> col:34 msg 'void *'
| | `-FullComment 0xbb9340 <col:63, col:90>
| |   `-ParagraphComment 0xbb9310 <col:63, col:90>
| |     `-TextComment 0xbb92e0 <col:63, col:90> Text=" Memory allocated to queues "
| `-FieldDecl 0xb78498 <line:1489:5, col:33> col:33 errorNo 'INT32':'int'
|-TypedefDecl 0xb78578 <line:1465:1, line:1494:3> col:3 referenced LosTaskCB 'struct LosTaskCB':'LosTaskCB'
| |-ElaboratedType 0xb78520 'struct LosTaskCB' sugar
| | `-RecordType 0xb73ad0 'LosTaskCB'
| |   `-Record 0xb73a48 ''
| `-FullComment 0xbb94b0 <line:1462:3, line:1463:43>
|   |-ParagraphComment 0xbb93e0 <line:1462:3>
|   | `-TextComment 0xbb93b0 <col:3> Text=" "
|   |-VerbatimLineComment 0xbb9400 <col:4, col:21> Text=" los_task"
|   `-ParagraphComment 0xbb9470 <line:1463:3, col:43>
|     `-TextComment 0xbb9440 <col:3, col:43> Text=" Define the task control block structure."
|-RecordDecl 0xb785e8 <line:1496:9, line:1499:1> line:1496:9 struct definition
| |-FieldDecl 0xb78718 <line:1497:5, col:18> col:18 referenced runTask 'LosTaskCB *'
| `-FieldDecl 0xb78778 <line:1498:5, col:18> col:18 newTask 'LosTaskCB *'
|-TypedefDecl 0xb78828 <line:1496:1, line:1499:3> col:3 referenced LosTask 'struct LosTask':'LosTask'
| `-ElaboratedType 0xb787d0 'struct LosTask' sugar
|   `-RecordType 0xb78670 'LosTask'
|     `-Record 0xb785e8 ''
|-RecordDecl 0xb78898 <line:1501:9, line:1505:1> line:1501:9 struct definition
| |-FieldDecl 0xb78950 <line:1502:5, col:18> col:18 sortLink 'LOS_DL_LIST *'
| |-FieldDecl 0xb789b0 <line:1503:5, col:17> col:17 cursor 'UINT16':'unsigned short'
| `-FieldDecl 0xb78a10 <line:1504:5, col:17> col:17 reserved 'UINT16':'unsigned short'
|-TypedefDecl 0xb78ab8 <line:1501:1, line:1505:3> col:3 TaskSortLinkAttr 'struct TaskSortLinkAttr':'TaskSortLinkAttr'
| `-ElaboratedType 0xb78a60 'struct TaskSortLinkAttr' sugar
|   `-RecordType 0xb78920 'TaskSortLinkAttr'
|     `-Record 0xb78898 ''
|-RecordDecl 0xb78b50 <line:1511:9, line:1515:1> line:1511:16 struct TaskTimeSlice definition
| |-FullComment 0xbb9620 <line:1508:3, line:1509:24>
| | |-ParagraphComment 0xbb9550 <line:1508:3>
| | | `-TextComment 0xbb9520 <col:3> Text=" "
| | |-VerbatimLineComment 0xbb9570 <col:4, col:21> Text=" los_task"
| | `-ParagraphComment 0xbb95e0 <line:1509:3, col:24>
| |   `-TextComment 0xbb95b0 <col:3, col:24> Text=" Time slice structure."
| |-FieldDecl 0xb78c00 <line:1512:5, col:30> col:30 task 'LosTaskCB *'
| | `-FullComment 0xbb96f0 <col:63, col:84>
| |   `-ParagraphComment 0xbb96c0 <col:63, col:84>
| |     `-TextComment 0xbb9690 <col:63, col:84> Text=" Current running task "
| |-FieldDecl 0xb78c88 <line:1513:5, col:29> col:29 time 'UINT16':'unsigned short'
| | `-FullComment 0xbb97c0 <col:63, col:85>
| |   `-ParagraphComment 0xbb9790 <col:63, col:85>
| |     `-TextComment 0xbb9760 <col:63, col:85> Text=" Expiration time point "
| `-FieldDecl 0xb78d18 <line:1514:5, col:29> col:29 tout 'UINT16':'unsigned short'
|   `-FullComment 0xbb9890 <col:63, col:83>
|     `-ParagraphComment 0xbb9860 <col:63, col:83>
|       `-TextComment 0xbb9830 <col:63, col:83> Text=" Expiration duration "
|-TypedefDecl 0xb78df8 <line:1511:1, line:1515:3> col:3 OsTaskRobin 'struct TaskTimeSlice':'struct TaskTimeSlice'
| |-ElaboratedType 0xb78da0 'struct TaskTimeSlice' sugar
| | `-RecordType 0xb78bd0 'struct TaskTimeSlice'
| |   `-Record 0xb78b50 'TaskTimeSlice'
| `-FullComment 0xbb9a00 <line:1508:3, line:1509:24>
|   |-ParagraphComment 0xbb9930 <line:1508:3>
|   | `-TextComment 0xbb9900 <col:3> Text=" "
|   |-VerbatimLineComment 0xbb9950 <col:4, col:21> Text=" los_task"
|   `-ParagraphComment 0xbb99c0 <line:1509:3, col:24>
|     `-TextComment 0xbb9990 <col:3, col:24> Text=" Time slice structure."
|-RecordDecl 0xb78e68 <line:1517:9, line:1520:1> line:1517:9 struct definition
| |-FieldDecl 0xb78f58 <line:1518:5, col:20> col:11 maxCnt 'UINT8':'unsigned char'
| | `-ConstantExpr 0xb78f40 <col:20> 'int'
| |   `-IntegerLiteral 0xb78f10 <col:20> 'int' 7
| `-FieldDecl 0xb78ff0 <line:1519:5, col:20> col:11 isFull 'UINT8':'unsigned char'
|   `-ConstantExpr 0xb78fd8 <col:20> 'int'
|     `-IntegerLiteral 0xb78fa8 <col:20> 'int' 1
|-TypedefDecl 0xb79098 <line:1517:1, line:1520:3> col:3 referenced TaskCountInfo 'struct TaskCountInfo':'TaskCountInfo'
| `-ElaboratedType 0xb79040 'struct TaskCountInfo' sugar
|   `-RecordType 0xb78ef0 'TaskCountInfo'
|     `-Record 0xb78e68 ''
|-RecordDecl 0xb79420 <line:1527:9, line:1532:1> line:1527:9 struct definition
| |-FullComment 0xbb9bc0 <line:1523:3, line:1526:1>
| | |-ParagraphComment 0xbb9aa0 <line:1523:3>
| | | `-TextComment 0xbb9a70 <col:3> Text=" "
| | |-VerbatimLineComment 0xbb9ac0 <col:4, col:21> Text=" los_task"
| | |-ParagraphComment 0xbb9b30 <line:1524:3, col:37>
| | | `-TextComment 0xbb9b00 <col:3, col:37> Text=" Task switch information structure."
| | `-ParagraphComment 0xbb9b80 <line:1526:1>
| |   `-TextComment 0xbb9b50 <col:1> Text=" "
| |-FieldDecl 0xb794d0 <line:1528:5, col:11> col:11 idx 'UINT8':'unsigned char'
| |-FieldDecl 0xb79550 <line:1529:5, col:19> col:19 cntInfo 'TaskCountInfo':'TaskCountInfo'
| |-FieldDecl 0xb79678 <line:1530:5, col:41> col:12 pid 'UINT16 [10]'
| `-FieldDecl 0xb797e8 <line:1531:5, col:60> col:12 name 'CHAR [10][32]'
|-TypedefDecl 0xb79898 <line:1527:1, line:1532:3> col:3 TaskSwitchInfo 'struct TaskSwitchInfo':'TaskSwitchInfo'
| |-ElaboratedType 0xb79840 'struct TaskSwitchInfo' sugar
| | `-RecordType 0xb794a0 'TaskSwitchInfo'
| |   `-Record 0xb79420 ''
| `-FullComment 0xbb9d80 <line:1523:3, line:1526:1>
|   |-ParagraphComment 0xbb9c60 <line:1523:3>
|   | `-TextComment 0xbb9c30 <col:3> Text=" "
|   |-VerbatimLineComment 0xbb9c80 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xbb9cf0 <line:1524:3, col:37>
|   | `-TextComment 0xbb9cc0 <col:3, col:37> Text=" Task switch information structure."
|   `-ParagraphComment 0xbb9d40 <line:1526:1>
|     `-TextComment 0xbb9d10 <col:1> Text=" "
|-VarDecl 0xb79940 <line:1538:1, col:29> col:29 used g_losTask 'LosTask':'LosTask' extern
|-VarDecl 0xb799e8 <line:1545:1, col:29> col:29 g_losTaskLock 'UINT16':'unsigned short' extern
| `-FullComment 0xbb9f70 <line:1541:3, line:1544:1>
|   |-ParagraphComment 0xbb9e20 <line:1541:3>
|   | `-TextComment 0xbb9df0 <col:3> Text=" "
|   |-VerbatimLineComment 0xbb9e40 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xbb9eb0 <line:1542:3, col:18>
|   | `-TextComment 0xbb9e80 <col:3, col:18> Text=" Task lock flag."
|   `-ParagraphComment 0xbb9f00 <line:1544:1>
|     `-TextComment 0xbb9ed0 <col:1> Text=" "
|-VarDecl 0xb79a88 <line:1558:1, col:29> col:29 g_taskMaxNum 'UINT32':'unsigned int' extern
| `-FullComment 0xbba130 <line:1554:3, line:1557:1>
|   |-ParagraphComment 0xbba010 <line:1554:3>
|   | `-TextComment 0xbb9fe0 <col:3> Text=" "
|   |-VerbatimLineComment 0xbba030 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xbba0a0 <line:1555:3, col:27>
|   | `-TextComment 0xbba070 <col:3, col:27> Text=" Maximum number of tasks."
|   `-ParagraphComment 0xbba0f0 <line:1557:1>
|     `-TextComment 0xbba0c0 <col:1> Text=" "
|-VarDecl 0xb79b28 <line:1565:1, col:29> col:29 g_idleTaskID 'UINT32':'unsigned int' extern
| `-FullComment 0xbba2f0 <line:1561:3, line:1564:1>
|   |-ParagraphComment 0xbba1d0 <line:1561:3>
|   | `-TextComment 0xbba1a0 <col:3> Text=" "
|   |-VerbatimLineComment 0xbba1f0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xbba260 <line:1562:3, col:16>
|   | `-TextComment 0xbba230 <col:3, col:16> Text=" Idle task ID."
|   `-ParagraphComment 0xbba2b0 <line:1564:1>
|     `-TextComment 0xbba280 <col:1> Text=" "
|-VarDecl 0xb79bc8 <line:1572:1, col:29> col:29 g_swtmrTaskID 'UINT32':'unsigned int' extern
| `-FullComment 0xbba4b0 <line:1568:3, line:1571:1>
|   |-ParagraphComment 0xbba390 <line:1568:3>
|   | `-TextComment 0xbba360 <col:3> Text=" "
|   |-VerbatimLineComment 0xbba3b0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xbba420 <line:1569:3, col:26>
|   | `-TextComment 0xbba3f0 <col:3, col:26> Text=" Software timer task ID."
|   `-ParagraphComment 0xbba470 <line:1571:1>
|     `-TextComment 0xbba440 <col:1> Text=" "
|-VarDecl 0xb79c68 <line:1579:1, col:30> col:30 g_taskCBArray 'LosTaskCB *' extern
| `-FullComment 0xbba670 <line:1575:3, line:1578:1>
|   |-ParagraphComment 0xbba550 <line:1575:3>
|   | `-TextComment 0xbba520 <col:3> Text=" "
|   |-VerbatimLineComment 0xbba570 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xbba5e0 <line:1576:3, col:30>
|   | `-TextComment 0xbba5b0 <col:3, col:30> Text=" Starting address of a task."
|   `-ParagraphComment 0xbba630 <line:1578:1>
|     `-TextComment 0xbba600 <col:1> Text=" "
|-VarDecl 0xb79d08 <line:1586:1, col:29> col:29 g_losFreeTask 'LOS_DL_LIST':'struct LOS_DL_LIST' extern
| `-FullComment 0xbba830 <line:1582:3, line:1585:1>
|   |-ParagraphComment 0xbba710 <line:1582:3>
|   | `-TextComment 0xbba6e0 <col:3> Text=" "
|   |-VerbatimLineComment 0xbba730 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xbba7a0 <line:1583:3, col:25>
|   | `-TextComment 0xbba770 <col:3, col:25> Text=" Free task linked list."
|   `-ParagraphComment 0xbba7f0 <line:1585:1>
|     `-TextComment 0xbba7c0 <col:1> Text=" "
|-VarDecl 0xb79da8 <line:1593:1, col:29> col:29 g_taskRecycleList 'LOS_DL_LIST':'struct LOS_DL_LIST' extern
| `-FullComment 0xbba9f0 <line:1589:3, line:1592:1>
|   |-ParagraphComment 0xbba8d0 <line:1589:3>
|   | `-TextComment 0xbba8a0 <col:3> Text=" "
|   |-VerbatimLineComment 0xbba8f0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xbba960 <line:1590:3, col:73>
|   | `-TextComment 0xbba930 <col:3, col:73> Text=" Circular linked list that stores tasks that are deleted automatically."
|   `-ParagraphComment 0xbba9b0 <line:1592:1>
|     `-TextComment 0xbba980 <col:1> Text=" "
|-FunctionDecl 0xb79ed0 <line:1614:1, col:30> col:15 OsTaskInit 'UINT32 (void)' extern
| `-FullComment 0xbbb370 <line:1596:3, line:1612:7>
|   |-ParagraphComment 0xbbaa90 <line:1596:3>
|   | `-TextComment 0xbbaa60 <col:3> Text=" "
|   |-VerbatimLineComment 0xbbaab0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbbab20 <line:1597:3>
|   | `-TextComment 0xbbaaf0 <col:3> Text=" "
|   |-BlockCommandComment 0xbbab40 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0xbbaba0 <col:10, col:32>
|   |   `-TextComment 0xbbab70 <col:10, col:32> Text=" Initialization a task."
|   |-ParagraphComment 0xbbabf0 <line:1599:3>
|   | `-TextComment 0xbbabc0 <col:3> Text=" "
|   |-BlockCommandComment 0xbbac10 <col:4, line:1600:45> Name="par"
|   | `-ParagraphComment 0xbbac90 <line:1599:8, line:1600:45>
|   |   |-TextComment 0xbbac40 <line:1599:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbbac60 <line:1600:3, col:45> Text=" This API is used to initialization a task."
|   |-ParagraphComment 0xbbace0 <line:1602:3>
|   | `-TextComment 0xbbacb0 <col:3> Text=" "
|   |-BlockCommandComment 0xbbad00 <col:4, line:1605:8> Name="attention"
|   | `-ParagraphComment 0xbbaed0 <line:1603:3, line:1605:8>
|   |   |-TextComment 0xbbad30 <line:1603:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbad50 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbbad90 <line:1604:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbadb0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbbadf0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xbbae10 <col:13, col:17> Name="li"
|   |   |-TextComment 0xbbae40 <line:1605:3> Text=" "
|   |   `-HTMLEndTagComment 0xbbae60 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbbaf20 <line:1607:3>
|   | `-TextComment 0xbbaef0 <col:3> Text=" "
|   |-ParamCommandComment 0xbbaf40 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xbbafb0 <<invalid sloc>>
|   |-ParagraphComment 0xbbb000 <line:1609:3>
|   | `-TextComment 0xbbafd0 <col:3> Text=" "
|   |-BlockCommandComment 0xbbb020 <col:4, line:1610:3> Name="retval"
|   | `-ParagraphComment 0xbbb0a0 <line:1609:11, line:1610:3>
|   |   |-TextComment 0xbbb050 <line:1609:11, col:44> Text="  UINT32    Initialization result."
|   |   `-TextComment 0xbbb070 <line:1610:3> Text=" "
|   |-BlockCommandComment 0xbbb0c0 <col:4, line:1612:3> Name="par"
|   | `-ParagraphComment 0xbbb290 <line:1610:8, line:1612:3>
|   |   |-TextComment 0xbbb0f0 <line:1610:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbbb110 <line:1611:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbb130 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbbb170 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbbb1b0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbbb1d0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbbb200 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbbb230 <line:1612:3> Text=" "
|   `-BlockCommandComment 0xbbb2b0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xbbb2e0 <<invalid sloc>>
|-FunctionDecl 0xb7a030 <line:1635:1, col:36> col:15 OsIdleTaskCreate 'UINT32 (void)' extern
| `-FullComment 0xbbbce0 <line:1617:3, line:1633:7>
|   |-ParagraphComment 0xbbb410 <line:1617:3>
|   | `-TextComment 0xbbb3e0 <col:3> Text=" "
|   |-VerbatimLineComment 0xbbb430 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbbb4a0 <line:1618:3>
|   | `-TextComment 0xbbb470 <col:3> Text=" "
|   |-BlockCommandComment 0xbbb4c0 <col:4, col:27> Name="brief"
|   | `-ParagraphComment 0xbbb520 <col:10, col:27>
|   |   `-TextComment 0xbbb4f0 <col:10, col:27> Text=" Create idle task."
|   |-ParagraphComment 0xbbb570 <line:1620:3>
|   | `-TextComment 0xbbb540 <col:3> Text=" "
|   |-BlockCommandComment 0xbbb590 <col:4, line:1621:40> Name="par"
|   | `-ParagraphComment 0xbbb610 <line:1620:8, line:1621:40>
|   |   |-TextComment 0xbbb5c0 <line:1620:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbbb5e0 <line:1621:3, col:40> Text=" This API is used to create idle task."
|   |-ParagraphComment 0xbbb660 <line:1623:3>
|   | `-TextComment 0xbbb630 <col:3> Text=" "
|   |-BlockCommandComment 0xbbb680 <col:4, line:1626:8> Name="attention"
|   | `-ParagraphComment 0xbbb850 <line:1624:3, line:1626:8>
|   |   |-TextComment 0xbbb6b0 <line:1624:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbb6d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbbb710 <line:1625:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbb730 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbbb770 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xbbb790 <col:13, col:17> Name="li"
|   |   |-TextComment 0xbbb7c0 <line:1626:3> Text=" "
|   |   `-HTMLEndTagComment 0xbbb7e0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbbb8a0 <line:1628:3>
|   | `-TextComment 0xbbb870 <col:3> Text=" "
|   |-ParamCommandComment 0xbbb8c0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xbbb920 <<invalid sloc>>
|   |-ParagraphComment 0xbbb970 <line:1630:3>
|   | `-TextComment 0xbbb940 <col:3> Text=" "
|   |-BlockCommandComment 0xbbb990 <col:4, line:1631:3> Name="retval"
|   | `-ParagraphComment 0xbbba10 <line:1630:11, line:1631:3>
|   |   |-TextComment 0xbbb9c0 <line:1630:11, col:35> Text="  UINT32   Create result."
|   |   `-TextComment 0xbbb9e0 <line:1631:3> Text=" "
|   |-BlockCommandComment 0xbbba30 <col:4, line:1633:3> Name="par"
|   | `-ParagraphComment 0xbbbc00 <line:1631:8, line:1633:3>
|   |   |-TextComment 0xbbba60 <line:1631:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbbba80 <line:1632:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbbaa0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbbbae0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbbbb20 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbbbb40 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbbbb70 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbbbba0 <line:1633:3> Text=" "
|   `-BlockCommandComment 0xbbbc20 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xbbbc50 <<invalid sloc>>
|-FunctionDecl 0xb7a190 <line:1656:1, col:35> col:13 OsTaskSwitchCheck 'void (void)' extern
| `-FullComment 0xbbc660 <line:1638:3, line:1654:7>
|   |-ParagraphComment 0xbbbd80 <line:1638:3>
|   | `-TextComment 0xbbbd50 <col:3> Text=" "
|   |-VerbatimLineComment 0xbbbda0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbbbe10 <line:1639:3>
|   | `-TextComment 0xbbbde0 <col:3> Text=" "
|   |-BlockCommandComment 0xbbbe30 <col:4, col:28> Name="brief"
|   | `-ParagraphComment 0xbbbe90 <col:10, col:28>
|   |   `-TextComment 0xbbbe60 <col:10, col:28> Text=" Check task switch."
|   |-ParagraphComment 0xbbbee0 <line:1641:3>
|   | `-TextComment 0xbbbeb0 <col:3> Text=" "
|   |-BlockCommandComment 0xbbbf00 <col:4, line:1642:41> Name="par"
|   | `-ParagraphComment 0xbbbf90 <line:1641:8, line:1642:41>
|   |   |-TextComment 0xbbbf30 <line:1641:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbbbf50 <line:1642:3, col:41> Text=" This API is used to check task switch."
|   |-ParagraphComment 0xbbbfe0 <line:1644:3>
|   | `-TextComment 0xbbbfb0 <col:3> Text=" "
|   |-BlockCommandComment 0xbbc000 <col:4, line:1647:8> Name="attention"
|   | `-ParagraphComment 0xbbc1d0 <line:1645:3, line:1647:8>
|   |   |-TextComment 0xbbc030 <line:1645:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbc050 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbbc090 <line:1646:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbc0b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbbc0f0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xbbc110 <col:13, col:17> Name="li"
|   |   |-TextComment 0xbbc140 <line:1647:3> Text=" "
|   |   `-HTMLEndTagComment 0xbbc160 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbbc220 <line:1649:3>
|   | `-TextComment 0xbbc1f0 <col:3> Text=" "
|   |-ParamCommandComment 0xbbc240 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xbbc2a0 <<invalid sloc>>
|   |-ParagraphComment 0xbbc2f0 <line:1651:3>
|   | `-TextComment 0xbbc2c0 <col:3> Text=" "
|   |-BlockCommandComment 0xbbc310 <col:4, line:1652:3> Name="retval"
|   | `-ParagraphComment 0xbbc390 <line:1651:11, line:1652:3>
|   |   |-TextComment 0xbbc340 <line:1651:11, col:17> Text="  None."
|   |   `-TextComment 0xbbc360 <line:1652:3> Text=" "
|   |-BlockCommandComment 0xbbc3b0 <col:4, line:1654:3> Name="par"
|   | `-ParagraphComment 0xbbc580 <line:1652:8, line:1654:3>
|   |   |-TextComment 0xbbc3e0 <line:1652:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbbc400 <line:1653:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbc420 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbbc460 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbbc4a0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbbc4c0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbbc4f0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbbc520 <line:1654:3> Text=" "
|   `-BlockCommandComment 0xbbc5a0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xbbc5d0 <<invalid sloc>>
|-FunctionDecl 0xb7a2f0 <line:1677:1, col:31> col:13 OsTaskMonInit 'void (void)' extern
| `-FullComment 0xbbd010 <line:1659:3, line:1675:7>
|   |-ParagraphComment 0xbbc700 <line:1659:3>
|   | `-TextComment 0xbbc6d0 <col:3> Text=" "
|   |-VerbatimLineComment 0xbbc720 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbbc790 <line:1660:3>
|   | `-TextComment 0xbbc760 <col:3> Text=" "
|   |-BlockCommandComment 0xbbc7b0 <col:4, col:22> Name="brief"
|   | `-ParagraphComment 0xbbc810 <col:10, col:22>
|   |   `-TextComment 0xbbc7e0 <col:10, col:22> Text=" TaskMonInit."
|   |-ParagraphComment 0xbbc860 <line:1662:3>
|   | `-TextComment 0xbbc830 <col:3> Text=" "
|   |-BlockCommandComment 0xbbc880 <col:4, line:1663:35> Name="par"
|   | `-ParagraphComment 0xbbc900 <line:1662:8, line:1663:35>
|   |   |-TextComment 0xbbc8b0 <line:1662:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbbc8d0 <line:1663:3, col:35> Text=" This API is used to taskMonInit."
|   |-ParagraphComment 0xbbc950 <line:1665:3>
|   | `-TextComment 0xbbc920 <col:3> Text=" "
|   |-BlockCommandComment 0xbbc970 <col:4, line:1668:8> Name="attention"
|   | `-ParagraphComment 0xbbcb40 <line:1666:3, line:1668:8>
|   |   |-TextComment 0xbbc9a0 <line:1666:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbc9c0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbbca00 <line:1667:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbca20 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbbca60 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xbbca80 <col:13, col:17> Name="li"
|   |   |-TextComment 0xbbcab0 <line:1668:3> Text=" "
|   |   `-HTMLEndTagComment 0xbbcad0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbbcb90 <line:1670:3>
|   | `-TextComment 0xbbcb60 <col:3> Text=" "
|   |-ParamCommandComment 0xbbcbb0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xbbcc10 <<invalid sloc>>
|   |-ParagraphComment 0xbbcc60 <line:1672:3>
|   | `-TextComment 0xbbcc30 <col:3> Text=" "
|   |-BlockCommandComment 0xbbcc80 <col:4, line:1673:3> Name="retval"
|   | `-ParagraphComment 0xbbcd00 <line:1672:11, line:1673:3>
|   |   |-TextComment 0xbbccb0 <line:1672:11, col:17> Text="  None."
|   |   `-TextComment 0xbbccd0 <line:1673:3> Text=" "
|   |-BlockCommandComment 0xbbcd20 <col:4, line:1675:3> Name="par"
|   | `-ParagraphComment 0xbbcef0 <line:1673:8, line:1675:3>
|   |   |-TextComment 0xbbcd50 <line:1673:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbbcd70 <line:1674:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbcd90 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbbcdd0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbbce10 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbbce30 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbbce60 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbbce90 <line:1675:3> Text=" "
|   `-BlockCommandComment 0xbbcf10 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xbbcf40 <<invalid sloc>>
|-FunctionDecl 0xb7a7c0 <line:1698:1, col:38> col:13 OsTaskEntry 'void (UINT32)' extern
| |-ParmVarDecl 0xb7a730 <col:25, col:32> col:32 taskID 'UINT32':'unsigned int'
| `-FullComment 0xbbd9b0 <line:1680:3, line:1696:7>
|   |-ParagraphComment 0xbbd0b0 <line:1680:3>
|   | `-TextComment 0xbbd080 <col:3> Text=" "
|   |-VerbatimLineComment 0xbbd0d0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbbd140 <line:1681:3>
|   | `-TextComment 0xbbd110 <col:3> Text=" "
|   |-BlockCommandComment 0xbbd160 <col:4, col:21> Name="brief"
|   | `-ParagraphComment 0xbbd1c0 <col:10, col:21>
|   |   `-TextComment 0xbbd190 <col:10, col:21> Text=" Task entry."
|   |-ParagraphComment 0xbbd210 <line:1683:3>
|   | `-TextComment 0xbbd1e0 <col:3> Text=" "
|   |-BlockCommandComment 0xbbd230 <col:4, line:1684:34> Name="par"
|   | `-ParagraphComment 0xbbd2b0 <line:1683:8, line:1684:34>
|   |   |-TextComment 0xbbd260 <line:1683:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbbd280 <line:1684:3, col:34> Text=" This API is used to task entry."
|   |-ParagraphComment 0xbbd300 <line:1686:3>
|   | `-TextComment 0xbbd2d0 <col:3> Text=" "
|   |-BlockCommandComment 0xbbd320 <col:4, line:1689:8> Name="attention"
|   | `-ParagraphComment 0xbbd4f0 <line:1687:3, line:1689:8>
|   |   |-TextComment 0xbbd350 <line:1687:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbd370 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbbd3b0 <line:1688:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbd3d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbbd410 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xbbd430 <col:13, col:17> Name="li"
|   |   |-TextComment 0xbbd460 <line:1689:3> Text=" "
|   |   `-HTMLEndTagComment 0xbbd480 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbbd540 <line:1691:3>
|   | `-TextComment 0xbbd510 <col:3> Text=" "
|   |-ParamCommandComment 0xbbd560 <col:4, col:47> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xbbd5f0 <col:18, col:47>
|   |   `-TextComment 0xbbd5c0 <col:18, col:47> Text="  [IN] Type #UINT32   task id."
|   |-ParagraphComment 0xbbd640 <line:1693:3>
|   | `-TextComment 0xbbd610 <col:3> Text=" "
|   |-BlockCommandComment 0xbbd660 <col:4, line:1694:3> Name="retval"
|   | `-ParagraphComment 0xbbd6e0 <line:1693:11, line:1694:3>
|   |   |-TextComment 0xbbd690 <line:1693:11, col:17> Text="  None."
|   |   `-TextComment 0xbbd6b0 <line:1694:3> Text=" "
|   |-BlockCommandComment 0xbbd700 <col:4, line:1696:3> Name="par"
|   | `-ParagraphComment 0xbbd8d0 <line:1694:8, line:1696:3>
|   |   |-TextComment 0xbbd730 <line:1694:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbbd750 <line:1695:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbd770 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbbd7b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbbd7f0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbbd810 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbbd840 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbbd870 <line:1696:3> Text=" "
|   `-BlockCommandComment 0xbbd8f0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xbbd920 <<invalid sloc>>
|-FunctionDecl 0xb7a938 <line:1719:1, col:47> col:15 OsGetTaskWaterLine 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xb7a8a8 <col:34, col:41> col:41 taskID 'UINT32':'unsigned int'
| `-FullComment 0xbbe3a0 <line:1701:3, line:1717:13>
|   |-ParagraphComment 0xbbda50 <line:1701:3>
|   | `-TextComment 0xbbda20 <col:3> Text=" "
|   |-VerbatimLineComment 0xbbda70 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbbdae0 <line:1702:3>
|   | `-TextComment 0xbbdab0 <col:3> Text=" "
|   |-BlockCommandComment 0xbbdb00 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0xbbdb60 <col:10, col:34>
|   |   `-TextComment 0xbbdb30 <col:10, col:34> Text=" Get the task water line."
|   |-ParagraphComment 0xbbdbb0 <line:1704:3>
|   | `-TextComment 0xbbdb80 <col:3> Text=" "
|   |-BlockCommandComment 0xbbdbd0 <col:4, line:1705:47> Name="par"
|   | `-ParagraphComment 0xbbdc50 <line:1704:8, line:1705:47>
|   |   |-TextComment 0xbbdc00 <line:1704:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbbdc20 <line:1705:3, col:47> Text=" This API is used to get the task water line."
|   |-ParagraphComment 0xbbdca0 <line:1707:3>
|   | `-TextComment 0xbbdc70 <col:3> Text=" "
|   |-BlockCommandComment 0xbbdcc0 <col:4, line:1710:8> Name="attention"
|   | `-ParagraphComment 0xbbde90 <line:1708:3, line:1710:8>
|   |   |-TextComment 0xbbdcf0 <line:1708:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbdd10 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbbdd50 <line:1709:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbdd70 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbbddb0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xbbddd0 <col:13, col:17> Name="li"
|   |   |-TextComment 0xbbde00 <line:1710:3> Text=" "
|   |   `-HTMLEndTagComment 0xbbde20 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbbdee0 <line:1712:3>
|   | `-TextComment 0xbbdeb0 <col:3> Text=" "
|   |-ParamCommandComment 0xbbdf00 <col:4, col:44> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xbbdfb0 <col:18, col:44>
|   |   `-TextComment 0xbbdf60 <col:18, col:44> Text=" [IN] Type #UINT32 task id."
|   |-ParagraphComment 0xbbe000 <line:1714:3>
|   | `-TextComment 0xbbdfd0 <col:3> Text=" "
|   |-BlockCommandComment 0xbbe020 <col:4, line:1715:3> Name="retval"
|   | `-ParagraphComment 0xbbe0a0 <line:1714:11, line:1715:3>
|   |   |-TextComment 0xbbe050 <line:1714:11, col:36> Text="  UINT32  Task water line."
|   |   `-TextComment 0xbbe070 <line:1715:3> Text=" "
|   |-BlockCommandComment 0xbbe0c0 <col:4, line:1717:3> Name="par"
|   | `-ParagraphComment 0xbbe290 <line:1715:8, line:1717:3>
|   |   |-TextComment 0xbbe0f0 <line:1715:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbbe110 <line:1716:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbe130 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbbe170 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbbe1b0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbbe1d0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbbe200 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbbe230 <line:1717:3> Text=" "
|   `-BlockCommandComment 0xbbe2b0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xbbe310 <col:8, col:13>
|       `-TextComment 0xbbe2e0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xb7ab08 <line:1740:1, col:51> col:15 OsConvertTskStatus 'UINT8 *(UINT16)' extern
| |-ParmVarDecl 0xb7aa18 <col:34, col:41> col:41 taskStatus 'UINT16':'unsigned short'
| `-FullComment 0xbbed70 <line:1722:3, line:1738:13>
|   |-ParagraphComment 0xbbe440 <line:1722:3>
|   | `-TextComment 0xbbe410 <col:3> Text=" "
|   |-VerbatimLineComment 0xbbe460 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbbe4d0 <line:1723:3>
|   | `-TextComment 0xbbe4a0 <col:3> Text=" "
|   |-BlockCommandComment 0xbbe4f0 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0xbbe550 <col:10, col:40>
|   |   `-TextComment 0xbbe520 <col:10, col:40> Text=" Convert task status to string."
|   |-ParagraphComment 0xbbe5a0 <line:1725:3>
|   | `-TextComment 0xbbe570 <col:3> Text=" "
|   |-BlockCommandComment 0xbbe5c0 <col:4, line:1726:53> Name="par"
|   | `-ParagraphComment 0xbbe640 <line:1725:8, line:1726:53>
|   |   |-TextComment 0xbbe5f0 <line:1725:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbbe610 <line:1726:3, col:53> Text=" This API is used to convert task status to string."
|   |-ParagraphComment 0xbbe690 <line:1728:3>
|   | `-TextComment 0xbbe660 <col:3> Text=" "
|   |-BlockCommandComment 0xbbe6b0 <col:4, line:1731:8> Name="attention"
|   | `-ParagraphComment 0xbbe880 <line:1729:3, line:1731:8>
|   |   |-TextComment 0xbbe6e0 <line:1729:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbe700 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbbe740 <line:1730:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbe760 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbbe7a0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xbbe7c0 <col:13, col:17> Name="li"
|   |   |-TextComment 0xbbe7f0 <line:1731:3> Text=" "
|   |   `-HTMLEndTagComment 0xbbe810 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbbe8d0 <line:1733:3>
|   | `-TextComment 0xbbe8a0 <col:3> Text=" "
|   |-ParamCommandComment 0xbbe8f0 <col:4, col:52> [in] implicitly Param="taskStatus" ParamIndex=0
|   | `-ParagraphComment 0xbbe980 <col:22, col:52>
|   |   `-TextComment 0xbbe950 <col:22, col:52> Text=" [IN] Type #UINT16 task status."
|   |-ParagraphComment 0xbbe9d0 <line:1735:3>
|   | `-TextComment 0xbbe9a0 <col:3> Text=" "
|   |-BlockCommandComment 0xbbe9f0 <col:4, line:1736:3> Name="retval"
|   | `-ParagraphComment 0xbbea70 <line:1735:11, line:1736:3>
|   |   |-TextComment 0xbbea20 <line:1735:11, col:28> Text="  UINT8 *  String."
|   |   `-TextComment 0xbbea40 <line:1736:3> Text=" "
|   |-BlockCommandComment 0xbbea90 <col:4, line:1738:3> Name="par"
|   | `-ParagraphComment 0xbbec60 <line:1736:8, line:1738:3>
|   |   |-TextComment 0xbbeac0 <line:1736:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbbeae0 <line:1737:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbeb00 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbbeb40 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbbeb80 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbbeba0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbbebd0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbbec00 <line:1738:3> Text=" "
|   `-BlockCommandComment 0xbbec80 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xbbece0 <col:8, col:13>
|       `-TextComment 0xbbecb0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xb7ac70 <line:1761:1, col:35> col:15 OsGetAllTskInfo 'UINT32 (void)' extern
| `-FullComment 0xbbf740 <line:1743:3, line:1759:13>
|   |-ParagraphComment 0xbbee10 <line:1743:3>
|   | `-TextComment 0xbbede0 <col:3> Text=" "
|   |-VerbatimLineComment 0xbbee30 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xbbeea0 <line:1744:3>
|   | `-TextComment 0xbbee70 <col:3> Text=" "
|   |-BlockCommandComment 0xbbeec0 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0xbbef20 <col:10, col:35>
|   |   `-TextComment 0xbbeef0 <col:10, col:35> Text=" Get all task information."
|   |-ParagraphComment 0xbbef70 <line:1746:3>
|   | `-TextComment 0xbbef40 <col:3> Text=" "
|   |-BlockCommandComment 0xbbefc0 <col:4, line:1747:48> Name="par"
|   | `-ParagraphComment 0xbbf040 <line:1746:8, line:1747:48>
|   |   |-TextComment 0xbbeff0 <line:1746:8, col:20> Text=" Description:"
|   |   `-TextComment 0xbbf010 <line:1747:3, col:48> Text=" This API is used to get all task information."
|   |-ParagraphComment 0xbbf090 <line:1749:3>
|   | `-TextComment 0xbbf060 <col:3> Text=" "
|   |-BlockCommandComment 0xbbf0b0 <col:4, line:1752:8> Name="attention"
|   | `-ParagraphComment 0xbbf280 <line:1750:3, line:1752:8>
|   |   |-TextComment 0xbbf0e0 <line:1750:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbf100 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xbbf140 <line:1751:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbf160 <col:4, col:7> Name="li"
|   |   |-TextComment 0xbbf1a0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xbbf1c0 <col:13, col:17> Name="li"
|   |   |-TextComment 0xbbf1f0 <line:1752:3> Text=" "
|   |   `-HTMLEndTagComment 0xbbf210 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xbbf2d0 <line:1754:3>
|   | `-TextComment 0xbbf2a0 <col:3> Text=" "
|   |-ParamCommandComment 0xbbf2f0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xbbf350 <<invalid sloc>>
|   |-ParagraphComment 0xbbf3a0 <line:1756:3>
|   | `-TextComment 0xbbf370 <col:3> Text=" "
|   |-BlockCommandComment 0xbbf3c0 <col:4, line:1757:3> Name="retval"
|   | `-ParagraphComment 0xbbf440 <line:1756:11, line:1757:3>
|   |   |-TextComment 0xbbf3f0 <line:1756:11, col:41> Text="  UINT32  All task information."
|   |   `-TextComment 0xbbf410 <line:1757:3> Text=" "
|   |-BlockCommandComment 0xbbf460 <col:4, line:1759:3> Name="par"
|   | `-ParagraphComment 0xbbf630 <line:1757:8, line:1759:3>
|   |   |-TextComment 0xbbf490 <line:1757:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xbbf4b0 <line:1758:3> Text=" "
|   |   |-HTMLStartTagComment 0xbbf4d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xbbf510 <col:8, col:11> Name="li"
|   |   |-TextComment 0xbbf550 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xbbf570 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xbbf5a0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xbbf5d0 <line:1759:3> Text=" "
|   `-BlockCommandComment 0xbbf650 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xbbf6b0 <col:8, col:13>
|       `-TextComment 0xbbf680 <col:8, col:13> Text=" None."
|-FunctionDecl 0xb7af50 <line:1763:1, col:83> col:14 OsTskUserStackInit 'void *(void *, void *, UINT32)' extern
| |-ParmVarDecl 0xb7ad28 <main/los_compiler.h:327:23, main/los_task.h:1763:39> col:39 stackPtr 'void *'
| |-ParmVarDecl 0xb7ada8 <main/los_compiler.h:327:23, main/los_task.h:1763:55> col:55 userSP 'void *'
| `-ParmVarDecl 0xb7ae20 <col:63, col:70> col:70 userStackSize 'UINT32':'unsigned int'
|-FunctionDecl 0xb7b178 <line:1765:1, col:53> col:15 OsPmEnterHandlerSet 'UINT32 (void (*)(void))' extern
| `-ParmVarDecl 0xb7b0b0 <main/los_compiler.h:327:23, main/los_task.h:1765:52> col:42 func 'void (*)(void)'
|-FunctionDecl 0xb7b318 <main/los_compiler.h:158:22, main/los_task.h:1770:1> line:1767:26 OsCurrTaskGet 'LosTaskCB *(void)' static inline
| `-CompoundStmt 0xb7b430 <line:1768:1, line:1770:1>
|   `-ReturnStmt 0xb7b420 <line:1769:5, col:22>
|     `-ImplicitCastExpr 0xb7b408 <col:12, col:22> 'LosTaskCB *' <LValueToRValue>
|       `-MemberExpr 0xb7b3d8 <col:12, col:22> 'LosTaskCB *' lvalue .runTask 0xb78718
|         `-DeclRefExpr 0xb7b3b8 <col:12> 'LosTask':'LosTask' lvalue Var 0xb79940 'g_losTask' 'LosTask':'LosTask'
|-FunctionDecl 0xb7b4e0 <line:1772:1, col:36> col:13 LOS_TaskResRecycle 'void (void)' extern
|-VarDecl 0xb7b5f8 <main/los_compiler.h:158:22, main/los_debug.c:45:1> line:38:20 used g_logString 'const CHAR *[6]' static cinit
| `-InitListExpr 0xb7bde8 <col:36, line:45:1> 'const CHAR *[6]'
|   |-ImplicitCastExpr 0xb7be40 <line:39:5> 'const CHAR *' <NoOp>
|   | `-ImplicitCastExpr 0xb7be28 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0xb7b698 <col:5> 'char [4]' lvalue "EMG"
|   |-ImplicitCastExpr 0xb7be78 <line:40:5> 'const CHAR *' <NoOp>
|   | `-ImplicitCastExpr 0xb7be60 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0xb7b6f8 <col:5> 'char [7]' lvalue "COMMON"
|   |-ImplicitCastExpr 0xb7beb8 <line:41:5> 'const CHAR *' <NoOp>
|   | `-ImplicitCastExpr 0xb7bea0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0xb7bc70 <col:5> 'char [4]' lvalue "ERR"
|   |-ImplicitCastExpr 0xb7bf08 <line:42:5> 'const CHAR *' <NoOp>
|   | `-ImplicitCastExpr 0xb7bef0 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0xb7bcc8 <col:5> 'char [5]' lvalue "WARN"
|   |-ImplicitCastExpr 0xb7bf38 <line:43:5> 'const CHAR *' <NoOp>
|   | `-ImplicitCastExpr 0xb7bf20 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0xb7bce8 <col:5> 'char [5]' lvalue "INFO"
|   `-ImplicitCastExpr 0xb7bfa8 <line:44:5> 'const CHAR *' <NoOp>
|     `-ImplicitCastExpr 0xb7bf90 <col:5> 'char *' <ArrayToPointerDecay>
|       `-StringLiteral 0xb7bd48 <col:5> 'char [6]' lvalue "DEBUG"
|-VarDecl 0xb7c048 <main/los_compiler.h:158:22, main/los_debug.c:48:18> col:18 used g_excHook 'ExcHookFn':'void (*)(EXC_TYPE)' static
|-VarDecl 0xb7c0c0 <main/los_compiler.h:158:22, line:341:32> main/los_debug.c:49:24 used g_backTraceHook 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)' static cinit
| `-ImplicitCastExpr 0xb7c1a8 <main/los_compiler.h:341:23, col:32> 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)' <NullToPointer>
|   `-ParenExpr 0xb7c188 <col:23, col:32> 'void *'
|     `-CStyleCastExpr 0xb7c160 <col:24, col:31> 'void *' <NullToPointer>
|       `-IntegerLiteral 0xb7c128 <col:31> 'int' 0
|-FunctionDecl 0xb7c260 prev 0xb200e8 <line:327:23, main/los_debug.c:56:1> line:51:6 OsBackTraceHookSet 'void (BACK_TRACE_HOOK)'
| |-ParmVarDecl 0xb7c1d0 <col:25, col:41> col:41 used hook 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
| `-CompoundStmt 0xb7c4a0 <line:52:1, line:56:1>
|   `-IfStmt 0xb7c488 <line:53:5, line:55:5>
|     |-BinaryOperator 0xb7c3d8 <line:53:9, main/los_compiler.h:341:32> 'int' '=='
|     | |-ImplicitCastExpr 0xb7c3a8 <main/los_debug.c:53:9> 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)' <LValueToRValue>
|     | | `-DeclRefExpr 0xb7c308 <col:9> 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)' lvalue Var 0xb7c0c0 'g_backTraceHook' 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
|     | `-ImplicitCastExpr 0xb7c3c0 <main/los_compiler.h:341:23, col:32> 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)' <BitCast>
|     |   `-ParenExpr 0xb7c388 <col:23, col:32> 'void *'
|     |     `-CStyleCastExpr 0xb7c360 <col:24, col:31> 'void *' <NullToPointer>
|     |       `-IntegerLiteral 0xb7c328 <col:31> 'int' 0
|     `-CompoundStmt 0xb7c470 <main/los_debug.c:53:34, line:55:5>
|       `-BinaryOperator 0xb7c450 <line:54:9, col:27> 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)' '='
|         |-DeclRefExpr 0xb7c3f8 <col:9> 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)' lvalue Var 0xb7c0c0 'g_backTraceHook' 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
|         `-ImplicitCastExpr 0xb7c438 <col:27> 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)' <LValueToRValue>
|           `-DeclRefExpr 0xb7c418 <col:27> 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)' lvalue ParmVar 0xb7c1d0 'hook' 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
|-FunctionDecl 0xb7c6d8 prev 0xb203b0 <main/los_compiler.h:327:23, main/los_debug.c:66:1> line:58:6 OsBackTraceHookCall 'void (UINTPTR *, UINT32, UINT32, UINTPTR)'
| |-ParmVarDecl 0xb7c4c8 <col:26, col:35> col:35 used LR 'UINTPTR *'
| |-ParmVarDecl 0xb7c540 <col:39, col:46> col:46 used LRSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb7c5b8 <col:54, col:61> col:61 used jumpCount 'UINT32':'unsigned int'
| |-ParmVarDecl 0xb7c630 <col:72, col:80> col:80 used SP 'UINTPTR':'unsigned int'
| `-CompoundStmt 0xb41150 <line:59:1, line:66:1>
|   `-IfStmt 0xb41128 <line:60:5, line:65:5> has_else
|     |-BinaryOperator 0xb7c868 <line:60:9, main/los_compiler.h:341:32> 'int' '!='
|     | |-ImplicitCastExpr 0xb7c838 <main/los_debug.c:60:9> 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)' <LValueToRValue>
|     | | `-DeclRefExpr 0xb7c798 <col:9> 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)' lvalue Var 0xb7c0c0 'g_backTraceHook' 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
|     | `-ImplicitCastExpr 0xb7c850 <main/los_compiler.h:341:23, col:32> 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)' <BitCast>
|     |   `-ParenExpr 0xb7c818 <col:23, col:32> 'void *'
|     |     `-CStyleCastExpr 0xb7c7f0 <col:24, col:31> 'void *' <NullToPointer>
|     |       `-IntegerLiteral 0xb7c7b8 <col:31> 'int' 0
|     |-CompoundStmt 0xb7c9e0 <main/los_debug.c:60:34, line:62:5>
|     | `-CallExpr 0xb7c940 <line:61:9, col:50> 'void'
|     |   |-ImplicitCastExpr 0xb7c928 <col:9> 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)' <LValueToRValue>
|     |   | `-DeclRefExpr 0xb7c888 <col:9> 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)' lvalue Var 0xb7c0c0 'g_backTraceHook' 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
|     |   |-ImplicitCastExpr 0xb7c980 <col:25> 'UINTPTR *' <LValueToRValue>
|     |   | `-DeclRefExpr 0xb7c8a8 <col:25> 'UINTPTR *' lvalue ParmVar 0xb7c4c8 'LR' 'UINTPTR *'
|     |   |-ImplicitCastExpr 0xb7c998 <col:29> 'UINT32':'unsigned int' <LValueToRValue>
|     |   | `-DeclRefExpr 0xb7c8c8 <col:29> 'UINT32':'unsigned int' lvalue ParmVar 0xb7c540 'LRSize' 'UINT32':'unsigned int'
|     |   |-ImplicitCastExpr 0xb7c9b0 <col:37> 'UINT32':'unsigned int' <LValueToRValue>
|     |   | `-DeclRefExpr 0xb7c8e8 <col:37> 'UINT32':'unsigned int' lvalue ParmVar 0xb7c5b8 'jumpCount' 'UINT32':'unsigned int'
|     |   `-ImplicitCastExpr 0xb7c9c8 <col:48> 'UINTPTR':'unsigned int' <LValueToRValue>
|     |     `-DeclRefExpr 0xb7c908 <col:48> 'UINTPTR':'unsigned int' lvalue ParmVar 0xb7c630 'SP' 'UINTPTR':'unsigned int'
|     `-CompoundStmt 0xb41110 <line:62:12, line:65:5>
|       `-DoStmt 0xb410f0 <main/los_debug.h:134:49, line:138:11>
|         |-CompoundStmt 0xb410b8 <line:134:52, line:137:54>
|         | `-IfStmt 0xb410a0 <line:135:5, line:137:5>
|         |   |-UnaryOperator 0xb7cb98 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|         |   | `-CallExpr 0xb7cb70 <col:10, col:31> 'INT32':'int'
|         |   |   |-ImplicitCastExpr 0xb7cb58 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|         |   |   | `-DeclRefExpr 0xb7c9f8 <col:10> 'INT32 (INT32)' Function 0xb1fb68 'OsLogLevelCheck' 'INT32 (INT32)'
|         |   |   `-ParenExpr 0xb7cad8 <line:92:29, col:50> 'int'
|         |   |     `-BinaryOperator 0xb7cab8 <line:90:29, line:92:49> 'int' '+'
|         |   |       |-ParenExpr 0xb7ca78 <line:90:29, col:47> 'int'
|         |   |       | `-BinaryOperator 0xb7ca58 <line:88:29, line:90:46> 'int' '+'
|         |   |       |   |-IntegerLiteral 0xb7ca18 <line:88:29> 'int' 0
|         |   |       |   `-IntegerLiteral 0xb7ca38 <line:90:46> 'int' 1
|         |   |       `-IntegerLiteral 0xb7ca98 <line:92:49> 'int' 1
|         |   `-CompoundStmt 0xb41088 <line:135:34, line:137:5>
|         |     `-CallExpr 0xb41030 <line:136:9, col:27> 'int'
|         |       |-ImplicitCastExpr 0xb41018 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0xb7cbb0 <col:9> 'int (const char *, ...)' Function 0xb1f958 'printf' 'int (const char *, ...)'
|         |       `-ImplicitCastExpr 0xb41070 <main/los_debug.c:63:19, line:64:19> 'const char *' <NoOp>
|         |         `-ImplicitCastExpr 0xb41058 <line:63:19, line:64:19> 'char *' <ArrayToPointerDecay>
|         |           `-StringLiteral 0xb40f50 <line:63:19, line:64:19> 'char [101]' lvalue "Record LR failed, because of g_backTraceHook is not registered, should call OSBackTraceInit firstly\n"
|         `-IntegerLiteral 0xb410d0 <main/los_debug.h:138:10> 'int' 0
|-FunctionDecl 0xb41208 prev 0xb1cf98 <main/los_compiler.h:327:23, main/los_debug.c:75:1> line:68:6 OsExcHookRegister 'void (ExcHookFn)'
| |-ParmVarDecl 0xb41178 <col:24, col:34> col:34 used excHookFn 'ExcHookFn':'void (*)(EXC_TYPE)'
| `-CompoundStmt 0xb415b0 <line:69:1, line:75:1>
|   |-DeclStmt 0xb413b0 <line:70:5, col:35>
|   | `-VarDecl 0xb412c0 <col:5, col:34> col:12 used intSave 'UINT32':'unsigned int' cinit
|   |   `-CallExpr 0xb41390 <main/los_interrupt.h:92:21, main/los_debug.c:70:34> 'UINT32':'unsigned int'
|   |     `-ImplicitCastExpr 0xb41378 <main/los_interrupt.h:92:21> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0xb41328 <col:21> 'UINT32 (void)' Function 0xb29308 'ArchIntLock' 'UINT32 (void)'
|   |-IfStmt 0xb414a8 <main/los_debug.c:71:5, line:73:5>
|   | |-UnaryOperator 0xb41400 <line:71:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0xb413e8 <col:10> 'ExcHookFn':'void (*)(EXC_TYPE)' <LValueToRValue>
|   | |   `-DeclRefExpr 0xb413c8 <col:10> 'ExcHookFn':'void (*)(EXC_TYPE)' lvalue Var 0xb7c048 'g_excHook' 'ExcHookFn':'void (*)(EXC_TYPE)'
|   | `-CompoundStmt 0xb41490 <col:21, line:73:5>
|   |   `-BinaryOperator 0xb41470 <line:72:9, col:21> 'ExcHookFn':'void (*)(EXC_TYPE)' '='
|   |     |-DeclRefExpr 0xb41418 <col:9> 'ExcHookFn':'void (*)(EXC_TYPE)' lvalue Var 0xb7c048 'g_excHook' 'ExcHookFn':'void (*)(EXC_TYPE)'
|   |     `-ImplicitCastExpr 0xb41458 <col:21> 'ExcHookFn':'void (*)(EXC_TYPE)' <LValueToRValue>
|   |       `-DeclRefExpr 0xb41438 <col:21> 'ExcHookFn':'void (*)(EXC_TYPE)' lvalue ParmVar 0xb41178 'excHookFn' 'ExcHookFn':'void (*)(EXC_TYPE)'
|   `-CallExpr 0xb41570 <main/los_interrupt.h:96:24, main/los_debug.c:74:27> 'void'
|     |-ImplicitCastExpr 0xb41558 <main/los_interrupt.h:96:24> 'void (*)(UINT32)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0xb414c0 <col:24> 'void (UINT32)' Function 0xb29738 'ArchIntRestore' 'void (UINT32)'
|     `-ImplicitCastExpr 0xb41598 <main/los_debug.c:74:20> 'UINT32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0xb414e0 <col:20> 'UINT32':'unsigned int' lvalue Var 0xb412c0 'intSave' 'UINT32':'unsigned int'
|-FunctionDecl 0xb41678 prev 0xb1d0e0 <main/los_compiler.h:327:23, main/los_debug.c:84:1> line:77:6 OsDoExcHook 'void (EXC_TYPE)'
| |-ParmVarDecl 0xb415e8 <col:18, col:27> col:27 used excType 'EXC_TYPE':'EXC_TYPE'
| `-CompoundStmt 0xb419a0 <line:78:1, line:84:1>
|   |-DeclStmt 0xb417f0 <line:79:5, col:35>
|   | `-VarDecl 0xb41730 <col:5, col:34> col:12 used intSave 'UINT32':'unsigned int' cinit
|   |   `-CallExpr 0xb417d0 <main/los_interrupt.h:92:21, main/los_debug.c:79:34> 'UINT32':'unsigned int'
|   |     `-ImplicitCastExpr 0xb417b8 <main/los_interrupt.h:92:21> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0xb41798 <col:21> 'UINT32 (void)' Function 0xb29308 'ArchIntLock' 'UINT32 (void)'
|   |-IfStmt 0xb418f0 <main/los_debug.c:80:5, line:82:5>
|   | |-ImplicitCastExpr 0xb41828 <line:80:9> 'ExcHookFn':'void (*)(EXC_TYPE)' <LValueToRValue>
|   | | `-DeclRefExpr 0xb41808 <col:9> 'ExcHookFn':'void (*)(EXC_TYPE)' lvalue Var 0xb7c048 'g_excHook' 'ExcHookFn':'void (*)(EXC_TYPE)'
|   | `-CompoundStmt 0xb418d8 <col:20, line:82:5>
|   |   `-CallExpr 0xb41898 <line:81:9, col:26> 'void'
|   |     |-ImplicitCastExpr 0xb41880 <col:9> 'ExcHookFn':'void (*)(EXC_TYPE)' <LValueToRValue>
|   |     | `-DeclRefExpr 0xb41840 <col:9> 'ExcHookFn':'void (*)(EXC_TYPE)' lvalue Var 0xb7c048 'g_excHook' 'ExcHookFn':'void (*)(EXC_TYPE)'
|   |     `-ImplicitCastExpr 0xb418c0 <col:19> 'EXC_TYPE':'EXC_TYPE' <LValueToRValue>
|   |       `-DeclRefExpr 0xb41860 <col:19> 'EXC_TYPE':'EXC_TYPE' lvalue ParmVar 0xb415e8 'excType' 'EXC_TYPE':'EXC_TYPE'
|   `-CallExpr 0xb41960 <main/los_interrupt.h:96:24, main/los_debug.c:83:27> 'void'
|     |-ImplicitCastExpr 0xb41948 <main/los_interrupt.h:96:24> 'void (*)(UINT32)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0xb41908 <col:24> 'void (UINT32)' Function 0xb29738 'ArchIntRestore' 'void (UINT32)'
|     `-ImplicitCastExpr 0xb41988 <main/los_debug.c:83:20> 'UINT32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0xb41928 <col:20> 'UINT32':'unsigned int' lvalue Var 0xb41730 'intSave' 'UINT32':'unsigned int'
`-FunctionDecl 0xb41a68 prev 0xb1fb68 <line:87:1, line:98:1> line:87:7 used OsLogLevelCheck 'INT32 (INT32)'
  |-ParmVarDecl 0xb419d8 <col:23, col:29> col:29 used level 'INT32':'int'
  `-CompoundStmt 0xb426a0 <line:88:1, line:98:1>
    |-IfStmt 0xb41d38 <line:89:5, line:91:5>
    | |-BinaryOperator 0xb41c28 <line:89:9, main/los_debug.h:92:50> 'int' '>'
    | | |-ImplicitCastExpr 0xb41c10 <main/los_debug.c:89:9> 'INT32':'int' <LValueToRValue>
    | | | `-DeclRefExpr 0xb41b10 <col:9> 'INT32':'int' lvalue ParmVar 0xb419d8 'level' 'INT32':'int'
    | | `-ParenExpr 0xb41bf0 <main/los_debug.h:92:29, col:50> 'int'
    | |   `-BinaryOperator 0xb41bd0 <line:90:29, line:92:49> 'int' '+'
    | |     |-ParenExpr 0xb41b90 <line:90:29, col:47> 'int'
    | |     | `-BinaryOperator 0xb41b70 <line:88:29, line:90:46> 'int' '+'
    | |     |   |-IntegerLiteral 0xb41b30 <line:88:29> 'int' 0
    | |     |   `-IntegerLiteral 0xb41b50 <line:90:46> 'int' 1
    | |     `-IntegerLiteral 0xb41bb0 <line:92:49> 'int' 1
    | `-CompoundStmt 0xb41d20 <main/los_debug.c:89:30, line:91:5>
    |   `-ReturnStmt 0xb41d10 <line:90:9, main/los_compiler.h:354:34>
    |     `-ImplicitCastExpr 0xb41cf8 <col:23, col:34> 'INT32':'int' <IntegralCast>
    |       `-CStyleCastExpr 0xb41cd0 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
    |         `-ParenExpr 0xb41cb0 <col:31, col:34> 'int'
    |           `-UnaryOperator 0xb41c68 <col:32, col:33> 'int' prefix '-'
    |             `-IntegerLiteral 0xb41c48 <col:33> 'int' 1
    |-IfStmt 0xb42640 <main/los_debug.c:93:5, line:95:5>
    | |-BinaryOperator 0xb421b8 <line:93:9, col:94> 'int' '&&'
    | | |-ParenExpr 0xb41e28 <col:9, col:35> 'int'
    | | | `-BinaryOperator 0xb41e08 <col:10, main/los_debug.h:90:47> 'int' '!='
    | | |   |-ImplicitCastExpr 0xb41df0 <main/los_debug.c:93:10> 'INT32':'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0xb41d50 <col:10> 'INT32':'int' lvalue ParmVar 0xb419d8 'level' 'INT32':'int'
    | | |   `-ParenExpr 0xb41dd0 <main/los_debug.h:90:29, col:47> 'int'
    | | |     `-BinaryOperator 0xb41db0 <line:88:29, line:90:46> 'int' '+'
    | | |       |-IntegerLiteral 0xb41d70 <line:88:29> 'int' 0
    | | |       `-IntegerLiteral 0xb41d90 <line:90:46> 'int' 1
    | | `-ParenExpr 0xb42198 <main/los_debug.c:93:40, col:94> 'int'
    | |   `-BinaryOperator 0xb42178 <col:41, col:93> 'int' '&&'
    | |     |-ParenExpr 0xb41ec0 <col:41, col:63> 'int'
    | |     | `-BinaryOperator 0xb41ea0 <col:42, main/los_debug.h:88:29> 'int' '>'
    | |     |   |-ImplicitCastExpr 0xb41e88 <main/los_debug.c:93:42> 'INT32':'int' <LValueToRValue>
    | |     |   | `-DeclRefExpr 0xb41e48 <col:42> 'INT32':'int' lvalue ParmVar 0xb419d8 'level' 'INT32':'int'
    | |     |   `-IntegerLiteral 0xb41e68 <main/los_debug.h:88:29> 'int' 0
    | |     `-ParenExpr 0xb42158 <main/los_debug.c:93:68, col:93> 'int'
    | |       `-BinaryOperator 0xb42138 <col:69, main/los_debug.h:98:48> 'int' '<='
    | |         |-ImplicitCastExpr 0xb42120 <main/los_debug.c:93:69> 'INT32':'int' <LValueToRValue>
    | |         | `-DeclRefExpr 0xb41ee0 <col:69> 'INT32':'int' lvalue ParmVar 0xb419d8 'level' 'INT32':'int'
    | |         `-ParenExpr 0xb42100 <main/los_debug.h:98:29, col:48> 'int'
    | |           `-BinaryOperator 0xb420e0 <line:96:29, line:98:47> 'int' '+'
    | |             |-ParenExpr 0xb420a0 <line:96:29, col:48> 'int'
    | |             | `-BinaryOperator 0xb42080 <line:94:29, line:96:47> 'int' '+'
    | |             |   |-ParenExpr 0xb42040 <line:94:29, col:47> 'int'
    | |             |   | `-BinaryOperator 0xb42020 <line:92:29, line:94:46> 'int' '+'
    | |             |   |   |-ParenExpr 0xb41fe0 <line:92:29, col:50> 'int'
    | |             |   |   | `-BinaryOperator 0xb41fc0 <line:90:29, line:92:49> 'int' '+'
    | |             |   |   |   |-ParenExpr 0xb41f80 <line:90:29, col:47> 'int'
    | |             |   |   |   | `-BinaryOperator 0xb41f60 <line:88:29, line:90:46> 'int' '+'
    | |             |   |   |   |   |-IntegerLiteral 0xb41f00 <line:88:29> 'int' 0
    | |             |   |   |   |   `-IntegerLiteral 0xb41f20 <line:90:46> 'int' 1
    | |             |   |   |   `-IntegerLiteral 0xb41fa0 <line:92:49> 'int' 1
    | |             |   |   `-IntegerLiteral 0xb42000 <line:94:46> 'int' 1
    | |             |   `-IntegerLiteral 0xb42060 <line:96:47> 'int' 1
    | |             `-IntegerLiteral 0xb420c0 <line:98:47> 'int' 1
    | `-CompoundStmt 0xb42628 <main/los_debug.c:93:97, line:95:5>
    |   `-DoStmt 0xb42608 <main/los_debug.h:134:49, line:138:11>
    |     |-CompoundStmt 0xb425d0 <line:134:52, line:137:54>
    |     | `-IfStmt 0xb425b8 <line:135:5, line:137:5>
    |     |   |-UnaryOperator 0xb422b8 <line:135:9, col:31> 'int' prefix '!' cannot overflow
    |     |   | `-CallExpr 0xb42290 <col:10, col:31> 'INT32':'int'
    |     |   |   |-ImplicitCastExpr 0xb42278 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
    |     |   |   | `-DeclRefExpr 0xb421d8 <col:10> 'INT32 (INT32)' Function 0xb41a68 'OsLogLevelCheck' 'INT32 (INT32)'
    |     |   |   `-ParenExpr 0xb42258 <line:90:29, col:47> 'int'
    |     |   |     `-BinaryOperator 0xb42238 <line:88:29, line:90:46> 'int' '+'
    |     |   |       |-IntegerLiteral 0xb421f8 <line:88:29> 'int' 0
    |     |   |       `-IntegerLiteral 0xb42218 <line:90:46> 'int' 1
    |     |   `-CompoundStmt 0xb425a0 <line:135:34, line:137:5>
    |     |     `-CallExpr 0xb42520 <line:136:9, col:27> 'int'
    |     |       |-ImplicitCastExpr 0xb42508 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    |     |       | `-DeclRefExpr 0xb422d0 <col:9> 'int (const char *, ...)' Function 0xb1f958 'printf' 'int (const char *, ...)'
    |     |       |-ImplicitCastExpr 0xb42570 <main/los_debug.c:94:16> 'const char *' <NoOp>
    |     |       | `-ImplicitCastExpr 0xb42558 <col:16> 'char *' <ArrayToPointerDecay>
    |     |       |   `-StringLiteral 0xb42328 <col:16> 'char [9]' lvalue "[%s][%s]"
    |     |       |-ImplicitCastExpr 0xb42588 <col:28, col:45> 'const CHAR *' <LValueToRValue>
    |     |       | `-ArraySubscriptExpr 0xb42418 <col:28, col:45> 'const CHAR *' lvalue
    |     |       |   |-ImplicitCastExpr 0xb423e8 <col:28> 'const CHAR **' <ArrayToPointerDecay>
    |     |       |   | `-DeclRefExpr 0xb42348 <col:28> 'const CHAR *[6]' lvalue Var 0xb7b5f8 'g_logString' 'const CHAR *[6]'
    |     |       |   `-ImplicitCastExpr 0xb42400 <col:40> 'INT32':'int' <LValueToRValue>
    |     |       |     `-DeclRefExpr 0xb42368 <col:40> 'INT32':'int' lvalue ParmVar 0xb419d8 'level' 'INT32':'int'
    |     |       `-CallExpr 0xb424d0 <col:48, col:67> 'CHAR *'
    |     |         `-ImplicitCastExpr 0xb424b8 <col:48> 'CHAR *(*)(void)' <FunctionToPointerDecay>
    |     |           `-DeclRefExpr 0xb42438 <col:48> 'CHAR *(void)' Function 0xb71d78 'LOS_CurTaskNameGet' 'CHAR *(void)'
    |     `-IntegerLiteral 0xb425e8 <main/los_debug.h:138:10> 'int' 0
    `-ReturnStmt 0xb42690 <main/los_debug.c:97:5, main/los_compiler.h:350:23>
      `-ImplicitCastExpr 0xb42678 <col:23> 'INT32':'int' <IntegralCast>
        `-IntegerLiteral 0xb42658 <col:23> 'unsigned int' 0

TranslationUnitDecl 0x1512d48 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15135e0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15132e0 '__int128'
|-TypedefDecl 0x1513650 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1513300 'unsigned __int128'
|-TypedefDecl 0x1513958 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1513730 'struct __NSConstantString_tag'
|   `-Record 0x15136a8 '__NSConstantString_tag'
|-TypedefDecl 0x15139f0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15139b0 'char *'
|   `-BuiltinType 0x1512de0 'char'
|-TypedefDecl 0x1513ce8 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x1513c90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x1513ad0 'struct __va_list_tag'
|     `-Record 0x1513a48 '__va_list_tag'
|-TypedefDecl 0x1578ac0 <main/los_compiler.h:308:1, col:32> col:32 referenced UINT8 'unsigned char'
| `-BuiltinType 0x1512ea0 'unsigned char'
|-TypedefDecl 0x1578b30 <line:309:1, col:32> col:32 referenced UINT16 'unsigned short'
| `-BuiltinType 0x1512ec0 'unsigned short'
|-TypedefDecl 0x1578ba0 <line:310:1, col:32> col:32 referenced UINT32 'unsigned int'
| `-BuiltinType 0x1512ee0 'unsigned int'
|-TypedefDecl 0x1578c10 <line:311:1, col:32> col:32 INT8 'signed char'
| `-BuiltinType 0x1512e00 'signed char'
|-TypedefDecl 0x1578c80 <line:312:1, col:32> col:32 INT16 'short'
| `-BuiltinType 0x1512e20 'short'
|-TypedefDecl 0x1578cf0 <line:313:1, col:32> col:32 referenced INT32 'int'
| `-BuiltinType 0x1512e40 'int'
|-TypedefDecl 0x1578d60 <line:314:1, col:32> col:32 FLOAT 'float'
| `-BuiltinType 0x1512f40 'float'
|-TypedefDecl 0x1578dd0 <line:315:1, col:32> col:32 DOUBLE 'double'
| `-BuiltinType 0x1512f60 'double'
|-TypedefDecl 0x1578e38 <line:316:1, col:32> col:32 referenced CHAR 'char'
| `-BuiltinType 0x1512de0 'char'
|-TypedefDecl 0x1578ea8 <line:318:1, col:32> col:32 referenced BOOL 'unsigned int'
| `-BuiltinType 0x1512ee0 'unsigned int'
|-TypedefDecl 0x1578f18 <line:319:1, col:32> col:32 referenced UINT64 'unsigned long long'
| `-BuiltinType 0x1512f20 'unsigned long long'
|-TypedefDecl 0x1578f88 <line:320:1, col:32> col:32 referenced INT64 'long long'
| `-BuiltinType 0x1512e80 'long long'
|-TypedefDecl 0x1578ff8 <line:321:1, col:32> col:32 referenced UINTPTR 'unsigned int'
| `-BuiltinType 0x1512ee0 'unsigned int'
|-TypedefDecl 0x1579068 <line:322:1, col:32> col:32 INTPTR 'int'
| `-BuiltinType 0x1512e40 'int'
|-TypedefDecl 0x15790f0 <line:324:1, col:24> col:24 Atomic 'volatile INT32':'volatile int'
| `-QualType 0x15790c4 'volatile INT32' volatile
|   `-TypedefType 0x15790c0 'INT32' sugar
|     |-Typedef 0x1578cf0 'INT32'
|     `-BuiltinType 0x1512e40 'int'
|-TypedefDecl 0x1579180 <line:325:1, col:24> col:24 Atomic64 'volatile INT64':'volatile long long'
| `-QualType 0x1579154 'volatile INT64' volatile
|   `-TypedefType 0x1579150 'INT64' sugar
|     |-Typedef 0x1578f88 'INT64'
|     `-BuiltinType 0x1512e80 'long long'
|-FunctionDecl 0x1579428 <line:407:1, line:410:1> line:407:22 LOS_Align 'UINT32 (UINT32, UINT32)' static inline
| |-ParmVarDecl 0x15792a0 <col:32, col:39> col:39 used addr 'UINT32':'unsigned int'
| |-ParmVarDecl 0x1579318 <col:45, col:52> col:52 used boundary 'UINT32':'unsigned int'
| |-CompoundStmt 0x1580cf0 <line:408:1, line:410:1>
| | `-ReturnStmt 0x1580ce0 <line:409:5, col:93>
| |   `-BinaryOperator 0x1580cc0 <col:12, col:93> 'unsigned int' '&'
| |     |-ParenExpr 0x1580bd8 <col:12, col:75> 'unsigned int'
| |     | `-BinaryOperator 0x1580bb8 <col:13, col:74> 'unsigned int' '+'
| |     |   |-ImplicitCastExpr 0x1580ba0 <col:13> 'UINT32':'unsigned int' <LValueToRValue>
| |     |   | `-DeclRefExpr 0x1579520 <col:13> 'UINT32':'unsigned int' lvalue ParmVar 0x15792a0 'addr' 'UINT32':'unsigned int'
| |     |   `-ParenExpr 0x1580b80 <col:20, col:74> 'unsigned int'
| |     |     `-ConditionalOperator 0x15797c8 <col:21, col:73> 'unsigned int'
| |     |       |-ParenExpr 0x15796c0 <col:21, col:52> 'int'
| |     |       | `-BinaryOperator 0x15796a0 <col:22, col:48> 'int' '>'
| |     |       |   |-ParenExpr 0x1579648 <col:22, col:44> 'unsigned int'
| |     |       |   | `-BinaryOperator 0x1579628 <col:23, col:43> 'unsigned int' '+'
| |     |       |   |   |-ImplicitCastExpr 0x1579610 <col:23> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |   | `-DeclRefExpr 0x1579540 <col:23> 'UINT32':'unsigned int' lvalue ParmVar 0x15792a0 'addr' 'UINT32':'unsigned int'
| |     |       |   |   `-ParenExpr 0x15795f0 <col:30, col:43> 'unsigned int'
| |     |       |   |     `-BinaryOperator 0x15795d0 <col:31, col:42> 'unsigned int' '-'
| |     |       |   |       |-ImplicitCastExpr 0x15795a0 <col:31> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |       | `-DeclRefExpr 0x1579560 <col:31> 'UINT32':'unsigned int' lvalue ParmVar 0x1579318 'boundary' 'UINT32':'unsigned int'
| |     |       |   |       `-ImplicitCastExpr 0x15795b8 <col:42> 'unsigned int' <IntegralCast>
| |     |       |   |         `-IntegerLiteral 0x1579580 <col:42> 'int' 1
| |     |       |   `-ImplicitCastExpr 0x1579688 <col:48> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |     `-DeclRefExpr 0x1579668 <col:48> 'UINT32':'unsigned int' lvalue ParmVar 0x15792a0 'addr' 'UINT32':'unsigned int'
| |     |       |-ParenExpr 0x1579770 <col:56, col:69> 'unsigned int'
| |     |       | `-BinaryOperator 0x1579750 <col:57, col:68> 'unsigned int' '-'
| |     |       |   |-ImplicitCastExpr 0x1579720 <col:57> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   | `-DeclRefExpr 0x15796e0 <col:57> 'UINT32':'unsigned int' lvalue ParmVar 0x1579318 'boundary' 'UINT32':'unsigned int'
| |     |       |   `-ImplicitCastExpr 0x1579738 <col:68> 'unsigned int' <IntegralCast>
| |     |       |     `-IntegerLiteral 0x1579700 <col:68> 'int' 1
| |     |       `-ImplicitCastExpr 0x15797b0 <col:73> 'unsigned int' <IntegralCast>
| |     |         `-IntegerLiteral 0x1579790 <col:73> 'int' 0
| |     `-UnaryOperator 0x1580ca8 <col:79, col:93> 'unsigned int' prefix '~' cannot overflow
| |       `-ParenExpr 0x1580c88 <col:80, col:93> 'unsigned int'
| |         `-BinaryOperator 0x1580c68 <col:81, col:92> 'unsigned int' '-'
| |           |-ImplicitCastExpr 0x1580c38 <col:81> 'UINT32':'unsigned int' <LValueToRValue>
| |           | `-DeclRefExpr 0x1580bf8 <col:81> 'UINT32':'unsigned int' lvalue ParmVar 0x1579318 'boundary' 'UINT32':'unsigned int'
| |           `-ImplicitCastExpr 0x1580c50 <col:92> 'unsigned int' <IntegralCast>
| |             `-IntegerLiteral 0x1580c18 <col:92> 'int' 1
| `-FullComment 0x15c99b0 <line:388:3, line:405:7>
|   |-ParagraphComment 0x15c7fa0 <line:388:3>
|   | `-TextComment 0x15c7f70 <col:3> Text=" "
|   |-VerbatimLineComment 0x15c7fc0 <col:4, col:21> Text=" los_base"
|   |-ParagraphComment 0x15c8030 <line:389:3>
|   | `-TextComment 0x15c8000 <col:3> Text=" "
|   |-BlockCommandComment 0x15c8050 <col:4, col:70> Name="brief"
|   | `-ParagraphComment 0x15c80b0 <col:10, col:70>
|   |   `-TextComment 0x15c8080 <col:10, col:70> Text=" Align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0x15c8100 <line:391:3>
|   | `-TextComment 0x15c80d0 <col:3> Text=" "
|   |-BlockCommandComment 0x15c8120 <col:4, line:392:83> Name="par"
|   | `-ParagraphComment 0x15c81a0 <line:391:8, line:392:83>
|   |   |-TextComment 0x15c8150 <line:391:8, col:20> Text=" Description:"
|   |   `-TextComment 0x15c8170 <line:392:3, col:83> Text=" This API is used to align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0x15c81f0 <line:394:3>
|   | `-TextComment 0x15c81c0 <col:3> Text=" "
|   |-BlockCommandComment 0x15c8210 <col:4, line:397:8> Name="attention"
|   | `-ParagraphComment 0x15c83e0 <line:395:3, line:397:8>
|   |   |-TextComment 0x15c8240 <line:395:3> Text=" "
|   |   |-HTMLStartTagComment 0x15c8260 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x15c82a0 <line:396:3> Text=" "
|   |   |-HTMLStartTagComment 0x15c82c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15c8300 <col:8, col:50> Text="the value of boundary usually is 4,8,16,32."
|   |   |-HTMLEndTagComment 0x15c8320 <col:51, col:55> Name="li"
|   |   |-TextComment 0x15c8350 <line:397:3> Text=" "
|   |   `-HTMLEndTagComment 0x15c8370 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x15c9460 <line:399:3>
|   | `-TextComment 0x15c8400 <col:3> Text=" "
|   |-ParamCommandComment 0x15c9480 <col:4, line:400:3> [in] implicitly Param="addr" ParamIndex=0
|   | `-ParagraphComment 0x15c9530 <line:399:15, line:400:3>
|   |   |-TextComment 0x15c94e0 <line:399:15, col:61> Text="     [IN]  The variable what you want to align."
|   |   `-TextComment 0x15c9500 <line:400:3> Text=" "
|   |-ParamCommandComment 0x15c9550 <col:4, col:63> [in] implicitly Param="boundary" ParamIndex=1
|   | `-ParagraphComment 0x15c95e0 <col:19, col:63>
|   |   `-TextComment 0x15c95b0 <col:19, col:63> Text=" [IN]  The align size what you want to align."
|   |-ParagraphComment 0x15c9630 <line:402:3>
|   | `-TextComment 0x15c9600 <col:3> Text=" "
|   |-BlockCommandComment 0x15c9650 <col:4, line:403:3> Name="retval"
|   | `-ParagraphComment 0x15c96d0 <line:402:11, line:403:3>
|   |   |-TextComment 0x15c9680 <line:402:11, col:55> Text=" #UINT32 The variable what have been aligned."
|   |   `-TextComment 0x15c96a0 <line:403:3> Text=" "
|   |-BlockCommandComment 0x15c96f0 <col:4, line:405:3> Name="par"
|   | `-ParagraphComment 0x15c98c0 <line:403:8, line:405:3>
|   |   |-TextComment 0x15c9720 <line:403:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x15c9740 <line:404:3> Text=" "
|   |   |-HTMLStartTagComment 0x15c9760 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15c97a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15c97e0 <col:12, col:73> Text="los_base.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15c9800 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x15c9830 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x15c9860 <line:405:3> Text=" "
|   `-BlockCommandComment 0x15c98e0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x15c9910 <<invalid sloc>>
|-FunctionDecl 0x1580de8 <line:423:1, line:438:1> line:423:20 used maybe_release_fence 'void (int)' static inline
| |-ParmVarDecl 0x1580d20 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0x15813a0 <line:424:1, line:438:1>
|   `-SwitchStmt 0x1580ec8 <line:425:5, line:437:5>
|     |-ImplicitCastExpr 0x1580eb0 <line:425:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x1580e90 <col:13> 'int' lvalue ParmVar 0x1580d20 'model' 'int'
|     `-CompoundStmt 0x1581358 <col:20, line:437:5>
|       |-CaseStmt 0x1580f20 <line:426:9, line:427:52>
|       | |-ConstantExpr 0x1580f08 <<built-in>:14:26> 'int'
|       | | `-IntegerLiteral 0x1580ee8 <col:26> 'int' 3
|       | `-CallExpr 0x1581130 <main/los_compiler.h:427:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x1581118 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x15810b0 <col:13> '<builtin fn type>' Function 0x1580f48 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x15810d0 <<built-in>:14:26> 'int' 3
|       |-BreakStmt 0x1581158 <main/los_compiler.h:428:13>
|       |-CaseStmt 0x1581198 <line:429:9, line:430:52>
|       | |-ConstantExpr 0x1581180 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0x1581160 <col:26> 'int' 4
|       | `-CallExpr 0x1581218 <main/los_compiler.h:430:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x1581200 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x15811c0 <col:13> '<builtin fn type>' Function 0x1580f48 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x15811e0 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0x1581240 <main/los_compiler.h:431:13>
|       |-CaseStmt 0x1581280 <line:432:9, line:433:52>
|       | |-ConstantExpr 0x1581268 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0x1581248 <col:26> 'int' 5
|       | `-CallExpr 0x1581300 <main/los_compiler.h:433:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x15812e8 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x15812a8 <col:13> '<builtin fn type>' Function 0x1580f48 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x15812c8 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0x1581328 <main/los_compiler.h:434:13>
|       `-DefaultStmt 0x1581338 <line:435:9, line:436:13>
|         `-BreakStmt 0x1581330 <col:13>
|-FunctionDecl 0x1580f48 <line:427:13> col:13 implicit used __atomic_thread_fence 'void (int)' extern
| |-ParmVarDecl 0x1580fe8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1581058 <col:13> Implicit
|-FunctionDecl 0x1581460 <line:440:1, line:455:1> line:440:20 used maybe_acquire_fence 'void (int)' static inline
| |-ParmVarDecl 0x15813d0 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0x1581888 <line:441:1, line:455:1>
|   `-SwitchStmt 0x1581540 <line:442:5, line:454:5>
|     |-ImplicitCastExpr 0x1581528 <line:442:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x1581508 <col:13> 'int' lvalue ParmVar 0x15813d0 'model' 'int'
|     `-CompoundStmt 0x1581840 <col:20, line:454:5>
|       |-CaseStmt 0x1581598 <line:443:9, line:444:52>
|       | |-ConstantExpr 0x1581580 <<built-in>:13:26> 'int'
|       | | `-IntegerLiteral 0x1581560 <col:26> 'int' 2
|       | `-CallExpr 0x1581618 <main/los_compiler.h:444:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x1581600 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x15815c0 <col:13> '<builtin fn type>' Function 0x1580f48 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x15815e0 <<built-in>:13:26> 'int' 2
|       |-BreakStmt 0x1581640 <main/los_compiler.h:445:13>
|       |-CaseStmt 0x1581680 <line:446:9, line:447:52>
|       | |-ConstantExpr 0x1581668 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0x1581648 <col:26> 'int' 4
|       | `-CallExpr 0x1581700 <main/los_compiler.h:447:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x15816e8 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x15816a8 <col:13> '<builtin fn type>' Function 0x1580f48 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x15816c8 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0x1581728 <main/los_compiler.h:448:13>
|       |-CaseStmt 0x1581768 <line:449:9, line:450:52>
|       | |-ConstantExpr 0x1581750 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0x1581730 <col:26> 'int' 5
|       | `-CallExpr 0x15817e8 <main/los_compiler.h:450:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x15817d0 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x1581790 <col:13> '<builtin fn type>' Function 0x1580f48 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x15817b0 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0x1581810 <main/los_compiler.h:451:13>
|       `-DefaultStmt 0x1581820 <line:452:9, line:453:13>
|         `-BreakStmt 0x1581818 <col:13>
|-FunctionDecl 0x1581a28 <line:458:1, line:472:1> line:458:21 used __libatomic_flag_for_address 'BOOL *(void *)' static inline
| |-ParmVarDecl 0x15818d8 <col:50, col:56> col:56 used addr 'void *'
| `-CompoundStmt 0x1584190 <line:459:1, line:472:1>
|   |-DeclStmt 0x1582680 <line:460:5, col:99>
|   | `-VarDecl 0x1582108 <col:5, col:98> col:17 used flag_table 'BOOL [16]' static cinit
|   |   `-InitListExpr 0x1582440 <col:51, col:98> 'BOOL [16]'
|   |     |-ImplicitCastExpr 0x1582500 <col:52> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1582170 <col:52> 'int' 0
|   |     |-ImplicitCastExpr 0x1582518 <col:55> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1582190 <col:55> 'int' 0
|   |     |-ImplicitCastExpr 0x1582530 <col:58> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x15821b0 <col:58> 'int' 0
|   |     |-ImplicitCastExpr 0x1582548 <col:61> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x15821d0 <col:61> 'int' 0
|   |     |-ImplicitCastExpr 0x1582560 <col:64> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x15821f0 <col:64> 'int' 0
|   |     |-ImplicitCastExpr 0x1582578 <col:67> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1582210 <col:67> 'int' 0
|   |     |-ImplicitCastExpr 0x1582590 <col:70> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1582230 <col:70> 'int' 0
|   |     |-ImplicitCastExpr 0x15825a8 <col:73> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1582250 <col:73> 'int' 0
|   |     |-ImplicitCastExpr 0x15825c0 <col:76> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1582270 <col:76> 'int' 0
|   |     |-ImplicitCastExpr 0x15825d8 <col:79> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1582290 <col:79> 'int' 0
|   |     |-ImplicitCastExpr 0x15825f0 <col:82> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x15822b0 <col:82> 'int' 0
|   |     |-ImplicitCastExpr 0x1582608 <col:85> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x15822d0 <col:85> 'int' 0
|   |     |-ImplicitCastExpr 0x1582620 <col:88> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x15822f0 <col:88> 'int' 0
|   |     |-ImplicitCastExpr 0x1582638 <col:91> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1582310 <col:91> 'int' 0
|   |     |-ImplicitCastExpr 0x1582650 <col:94> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1582330 <col:94> 'int' 0
|   |     `-ImplicitCastExpr 0x1582668 <col:97> 'BOOL':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x1582350 <col:97> 'int' 0
|   |-DeclStmt 0x1582810 <line:461:5, col:41>
|   | `-VarDecl 0x15826d0 <col:5, col:37> col:13 used p 'UINTPTR':'unsigned int' cinit
|   |   `-CStyleCastExpr 0x15827e8 <col:17, col:37> 'UINTPTR':'unsigned int' <PointerToIntegral>
|   |     `-CStyleCastExpr 0x15827b0 <col:26, col:37> 'UINTPTR *' <BitCast>
|   |       `-ImplicitCastExpr 0x1582798 <col:37> 'void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x1582738 <col:37> 'void *' lvalue ParmVar 0x15818d8 'addr' 'void *'
|   |-CompoundAssignOperator 0x1582998 <line:462:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x1582828 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x15826d0 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x1582978 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0x15828c0 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x15828a0 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x1582888 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1582848 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x15826d0 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x1582868 <col:16> 'int' 2
|   |   `-ParenExpr 0x1582958 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x1582938 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x1582920 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x15828e0 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0x15826d0 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x1582900 <col:27> 'int' 4
|   |-CompoundAssignOperator 0x1582b38 <line:463:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x15829c8 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x15826d0 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x1582b18 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0x1582a60 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x1582a40 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x1582a28 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x15829e8 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x15826d0 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x1582a08 <col:16> 'int' 7
|   |   `-ParenExpr 0x1582af8 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x1582ad8 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x1582ac0 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1582a80 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0x15826d0 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x1582aa0 <col:27> 'int' 5
|   |-CompoundAssignOperator 0x1582cd8 <line:464:5, col:30> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x1582b68 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x15826d0 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x1582cb8 <col:10, col:30> 'unsigned int' '+'
|   |   |-ParenExpr 0x1582c00 <col:10, col:18> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x1582be0 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x1582bc8 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1582b88 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x15826d0 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x1582ba8 <col:16> 'int' 17
|   |   `-ParenExpr 0x1582c98 <col:22, col:30> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x1582c78 <col:23, col:28> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x1582c60 <col:23> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1582c20 <col:23> 'UINTPTR':'unsigned int' lvalue Var 0x15826d0 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x1582c40 <col:28> 'int' 13
|   |-IfStmt 0x1582e98 <line:466:5, line:468:5>
|   | |-BinaryOperator 0x1582d78 <line:466:9, col:26> 'int' '>'
|   | | |-UnaryExprOrTypeTraitExpr 0x1582d20 <col:9, col:22> 'unsigned long' sizeof 'void *'
|   | | `-ImplicitCastExpr 0x1582d60 <col:26> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1582d40 <col:26> 'int' 4
|   | `-CompoundStmt 0x1582e80 <col:29, line:468:5>
|   |   `-CompoundAssignOperator 0x1582e50 <line:467:9, col:22> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0x1582d98 <col:9> 'UINTPTR':'unsigned int' lvalue Var 0x15826d0 'p' 'UINTPTR':'unsigned int'
|   |     `-ParenExpr 0x1582e30 <col:14, col:22> 'UINTPTR':'unsigned int'
|   |       `-BinaryOperator 0x1582e10 <col:15, col:20> 'UINTPTR':'unsigned int' '>>'
|   |         |-ImplicitCastExpr 0x1582df8 <col:15> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1582db8 <col:15> 'UINTPTR':'unsigned int' lvalue Var 0x15826d0 'p' 'UINTPTR':'unsigned int'
|   |         `-IntegerLiteral 0x1582dd8 <col:20> 'int' 31
|   |-CompoundAssignOperator 0x1582fc8 <line:470:5, col:34> 'UINTPTR':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x1582eb0 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x15826d0 'p' 'UINTPTR':'unsigned int'
|   | `-ImplicitCastExpr 0x1582fb0 <col:10, col:34> 'unsigned int' <IntegralCast>
|   |   `-ParenExpr 0x1582f90 <col:10, col:34> 'int'
|   |     `-BinaryOperator 0x1582f70 <line:457:29, line:470:33> 'int' '-'
|   |       |-ParenExpr 0x1582f30 <line:457:29, col:36> 'int'
|   |       | `-BinaryOperator 0x1582f10 <col:30, col:35> 'int' '<<'
|   |       |   |-IntegerLiteral 0x1582ed0 <col:30> 'int' 1
|   |       |   `-IntegerLiteral 0x1582ef0 <col:35> 'int' 4
|   |       `-IntegerLiteral 0x1582f50 <line:470:33> 'int' 1
|   `-ReturnStmt 0x1584180 <line:471:5, col:25>
|     `-BinaryOperator 0x1584160 <col:12, col:25> 'BOOL *' '+'
|       |-ImplicitCastExpr 0x1583038 <col:12> 'BOOL *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x1582ff8 <col:12> 'BOOL [16]' lvalue Var 0x1582108 'flag_table' 'BOOL [16]'
|       `-ImplicitCastExpr 0x1583050 <col:25> 'UINTPTR':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x1583018 <col:25> 'UINTPTR':'unsigned int' lvalue Var 0x15826d0 'p' 'UINTPTR':'unsigned int'
|-FunctionDecl 0x1584348 <line:474:1, line:482:1> line:474:20 used get_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0x15841f8 <col:29, col:35> col:35 used addr 'void *'
| |-ParmVarDecl 0x1584278 <col:41, col:45> col:45 used model 'int'
| `-CompoundStmt 0x1584a00 <line:475:1, line:482:1>
|   |-DeclStmt 0x1584560 <line:476:5, col:57>
|   | `-VarDecl 0x1584408 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0x1584520 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0x1584508 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1584470 <col:22> 'BOOL *(void *)' Function 0x1581a28 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0x1584548 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1584490 <col:52> 'void *' lvalue ParmVar 0x15841f8 'addr' 'void *'
|   |-CallExpr 0x15845d0 <line:478:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x15845b8 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1584578 <col:5> 'void (int)' Function 0x1580de8 'maybe_release_fence' 'void (int)'
|   | `-ImplicitCastExpr 0x15845f8 <col:26> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1584598 <col:26> 'int' lvalue ParmVar 0x1584278 'model' 'int'
|   `-WhileStmt 0x15849e8 <line:479:5, line:481:5>
|     |-BinaryOperator 0x15849a8 <line:479:12, col:66> 'int' '=='
|     | |-ImplicitCastExpr 0x1584990 <col:12, col:61> 'int' <IntegralCast>
|     | | `-CallExpr 0x1584910 <col:12, col:61> '_Bool'
|     | |   |-ImplicitCastExpr 0x15848f8 <col:12> '_Bool (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|     | |   | `-DeclRefExpr 0x1584850 <col:12> '<builtin fn type>' Function 0x1584678 '__atomic_test_and_set' '_Bool (volatile void *, int)'
|     | |   |-ImplicitCastExpr 0x1584958 <col:35> 'volatile void *' <BitCast>
|     | |   | `-ImplicitCastExpr 0x1584940 <col:35> 'BOOL *' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x1584870 <col:35> 'BOOL *' lvalue Var 0x1584408 'lock_ptr' 'BOOL *'
|     | |   `-IntegerLiteral 0x1584890 <<built-in>:13:26> 'int' 2
|     | `-IntegerLiteral 0x1584970 <main/los_compiler.h:479:66> 'int' 1
|     `-CompoundStmt 0x15849d0 <col:69, line:481:5>
|       `-NullStmt 0x15849c8 <line:480:9>
|-FunctionDecl 0x1584678 <line:479:12> col:12 implicit used __atomic_test_and_set '_Bool (volatile void *, int)' extern
| |-ParmVarDecl 0x1584718 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0x1584780 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x15847f8 <col:12> Implicit
|-FunctionDecl 0x1584b58 <line:484:1, line:490:1> line:484:20 used free_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0x1584a40 <col:30, col:36> col:36 used addr 'void *'
| |-ParmVarDecl 0x1584ac0 <col:42, col:46> col:46 used model 'int'
| `-CompoundStmt 0x15850f8 <line:485:1, line:490:1>
|   |-DeclStmt 0x1584d18 <line:486:5, col:57>
|   | `-VarDecl 0x1584c18 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0x1584cd8 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0x1584cc0 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1584c80 <col:22> 'BOOL *(void *)' Function 0x1581a28 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0x1584d00 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1584ca0 <col:52> 'void *' lvalue ParmVar 0x1584a40 'addr' 'void *'
|   |-CallExpr 0x1585000 <line:488:5, col:47> 'void'
|   | |-ImplicitCastExpr 0x1584fe8 <col:5> 'void (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1584f40 <col:5> '<builtin fn type>' Function 0x1584d68 '__atomic_clear' 'void (volatile void *, int)'
|   | |-ImplicitCastExpr 0x1585048 <col:21> 'volatile void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1585030 <col:21> 'BOOL *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1584f60 <col:21> 'BOOL *' lvalue Var 0x1584c18 'lock_ptr' 'BOOL *'
|   | `-IntegerLiteral 0x1584f80 <<built-in>:14:26> 'int' 3
|   `-CallExpr 0x15850b8 <main/los_compiler.h:489:5, col:31> 'void'
|     |-ImplicitCastExpr 0x15850a0 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1585060 <col:5> 'void (int)' Function 0x1581460 'maybe_acquire_fence' 'void (int)'
|     `-ImplicitCastExpr 0x15850e0 <col:26> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1585080 <col:26> 'int' lvalue ParmVar 0x1584ac0 'model' 'int'
|-FunctionDecl 0x1584d68 <line:488:5> col:5 implicit used __atomic_clear 'void (volatile void *, int)' extern
| |-ParmVarDecl 0x1584e08 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0x1584e70 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1584ee8 <col:5> Implicit
|-FunctionDecl 0x15863a8 <line:492:1, line:501:1> line:492:23 __atomic_load_8 'UINT64 (const volatile void *, int)' static inline
| |-ParmVarDecl 0x1586210 <col:39, col:60> col:60 used mem 'const volatile void *'
| |-ParmVarDecl 0x1586290 <col:65, col:69> col:69 used model 'int'
| `-CompoundStmt 0x1586958 <line:493:1, line:501:1>
|   |-DeclStmt 0x15864d0 <line:494:5, col:15>
|   | `-VarDecl 0x1586468 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0x15865e0 <line:496:5, col:29>
|   | `-VarDecl 0x1586500 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x15865b8 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x15865a0 <col:26> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1586568 <col:26> 'const volatile void *' lvalue ParmVar 0x1586210 'mem' 'const volatile void *'
|   |-CallExpr 0x15866a0 <line:497:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x1586688 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15865f8 <col:5> 'void (void *, int)' Function 0x1584348 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x15866d0 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1586618 <col:15> 'void *' lvalue Var 0x1586500 'memP' 'void *'
|   | `-ImplicitCastExpr 0x15866e8 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1586638 <col:21> 'int' lvalue ParmVar 0x1586290 'model' 'int'
|   |-BinaryOperator 0x1586818 <line:498:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0x1586700 <col:5> 'UINT64':'unsigned long long' lvalue Var 0x1586468 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0x1586800 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0x15867e8 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0x15867c0 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0x15867a8 <col:22> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x1586778 <col:22> 'const volatile void *' lvalue ParmVar 0x1586210 'mem' 'const volatile void *'
|   |-CallExpr 0x15868b0 <line:499:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1586898 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1586838 <col:5> 'void (void *, int)' Function 0x1584b58 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x15868e0 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1586858 <col:16> 'void *' lvalue Var 0x1586500 'memP' 'void *'
|   | `-ImplicitCastExpr 0x15868f8 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1586878 <col:22> 'int' lvalue ParmVar 0x1586290 'model' 'int'
|   `-ReturnStmt 0x1586948 <line:500:5, col:12>
|     `-ImplicitCastExpr 0x1586930 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x1586910 <col:12> 'UINT64':'unsigned long long' lvalue Var 0x1586468 'ret' 'UINT64':'unsigned long long'
|-FunctionDecl 0x1586bc8 <line:503:1, line:509:1> line:503:20 __atomic_store_8 'void (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0x15869b0 <col:37, col:52> col:52 used mem 'volatile void *'
| |-ParmVarDecl 0x1586a28 <col:57, col:64> col:64 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x1586aa8 <col:69, col:73> col:73 used model 'int'
| `-CompoundStmt 0x1587020 <line:504:1, line:509:1>
|   |-DeclStmt 0x1586d78 <line:505:5, col:29>
|   | `-VarDecl 0x1586c98 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x1586d50 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x1586d38 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1586d00 <col:26> 'volatile void *' lvalue ParmVar 0x15869b0 'mem' 'volatile void *'
|   |-CallExpr 0x1586e08 <line:506:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x1586df0 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1586d90 <col:5> 'void (void *, int)' Function 0x1584348 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x1586e38 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1586db0 <col:15> 'void *' lvalue Var 0x1586c98 'memP' 'void *'
|   | `-ImplicitCastExpr 0x1586e50 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1586dd0 <col:21> 'int' lvalue ParmVar 0x1586aa8 'model' 'int'
|   |-BinaryOperator 0x1586f28 <line:507:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0x1586ed8 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0x1586eb0 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0x1586e98 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x1586e68 <col:16> 'volatile void *' lvalue ParmVar 0x15869b0 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0x1586f10 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1586ef0 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0x1586a28 'val' 'UINT64':'unsigned long long'
|   `-CallExpr 0x1586fc0 <line:508:5, col:27> 'void'
|     |-ImplicitCastExpr 0x1586fa8 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1586f48 <col:5> 'void (void *, int)' Function 0x1584b58 'free_lock' 'void (void *, int)'
|     |-ImplicitCastExpr 0x1586ff0 <col:16> 'void *' <LValueToRValue>
|     | `-DeclRefExpr 0x1586f68 <col:16> 'void *' lvalue Var 0x1586c98 'memP' 'void *'
|     `-ImplicitCastExpr 0x1587008 <col:22> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1586f88 <col:22> 'int' lvalue ParmVar 0x1586aa8 'model' 'int'
|-FunctionDecl 0x1587298 <line:511:1, line:521:1> line:511:22 __atomic_exchange_8 'UINT64 (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0x1587068 <col:42, col:57> col:57 used mem 'volatile void *'
| |-ParmVarDecl 0x15870e0 <col:62, col:69> col:69 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x1587160 <col:74, col:78> col:78 used model 'int'
| `-CompoundStmt 0x15878d8 <line:512:1, line:521:1>
|   |-DeclStmt 0x15873c8 <line:513:5, col:15>
|   | `-VarDecl 0x1587360 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0x15874d8 <line:515:5, col:29>
|   | `-VarDecl 0x15873f8 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x15874b0 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x1587498 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1587460 <col:26> 'volatile void *' lvalue ParmVar 0x1587068 'mem' 'volatile void *'
|   |-CallExpr 0x1587568 <line:516:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x1587550 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15874f0 <col:5> 'void (void *, int)' Function 0x1584348 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x1587598 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1587510 <col:15> 'void *' lvalue Var 0x15873f8 'memP' 'void *'
|   | `-ImplicitCastExpr 0x15875b0 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1587530 <col:21> 'int' lvalue ParmVar 0x1587160 'model' 'int'
|   |-BinaryOperator 0x1587688 <line:517:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0x15875c8 <col:5> 'UINT64':'unsigned long long' lvalue Var 0x1587360 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0x1587670 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0x1587658 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0x1587630 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0x1587618 <col:22> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x15875e8 <col:22> 'volatile void *' lvalue ParmVar 0x1587068 'mem' 'volatile void *'
|   |-BinaryOperator 0x1587768 <line:518:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0x1587718 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0x15876f0 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0x15876d8 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x15876a8 <col:16> 'volatile void *' lvalue ParmVar 0x1587068 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0x1587750 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1587730 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0x15870e0 'val' 'UINT64':'unsigned long long'
|   |-CallExpr 0x1587800 <line:519:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x15877e8 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1587788 <col:5> 'void (void *, int)' Function 0x1584b58 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x1587830 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x15877a8 <col:16> 'void *' lvalue Var 0x15873f8 'memP' 'void *'
|   | `-ImplicitCastExpr 0x1587848 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x15877c8 <col:22> 'int' lvalue ParmVar 0x1587160 'model' 'int'
|   `-ReturnStmt 0x1587898 <line:520:5, col:12>
|     `-ImplicitCastExpr 0x1587880 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x1587860 <col:12> 'UINT64':'unsigned long long' lvalue Var 0x1587360 'ret' 'UINT64':'unsigned long long'
|-VarDecl 0x1587930 <main/target_config.h:100:1, col:16> col:16 __heap_start 'UINTPTR':'unsigned int' extern
|-VarDecl 0x15880b8 <main/los_config.h:419:1, col:15> col:15 m_aucSysMem0 'UINT8 *' extern
|-TypedefDecl 0x1593078 <main/los_interrupt.h:44:1, col:16> col:16 referenced HWI_HANDLE_T 'UINT32':'unsigned int'
| `-TypedefType 0x1579270 'UINT32' sugar
|   |-Typedef 0x1578ba0 'UINT32'
|   `-BuiltinType 0x1512ee0 'unsigned int'
|-TypedefDecl 0x1593100 <line:46:1, col:16> col:16 referenced HWI_PRIOR_T 'UINT16':'unsigned short'
| `-TypedefType 0x15930d0 'UINT16' sugar
|   |-Typedef 0x1578b30 'UINT16'
|   `-BuiltinType 0x1512ec0 'unsigned short'
|-TypedefDecl 0x1593168 <line:48:1, col:16> col:16 referenced HWI_MODE_T 'UINT16':'unsigned short'
| `-TypedefType 0x15930d0 'UINT16' sugar
|   |-Typedef 0x1578b30 'UINT16'
|   `-BuiltinType 0x1512ec0 'unsigned short'
|-TypedefDecl 0x15931d0 <line:50:1, col:16> col:16 HWI_ARG_T 'UINT32':'unsigned int'
| `-TypedefType 0x1579270 'UINT32' sugar
|   |-Typedef 0x1578ba0 'UINT32'
|   `-BuiltinType 0x1512ee0 'unsigned int'
|-TypedefDecl 0x1593388 <line:55:1, col:35> col:16 referenced HWI_PROC_FUNC 'void (*)(void)'
| `-PointerType 0x1593330 'void (*)(void)'
|   `-ParenType 0x15932d0 'void (void)' sugar
|     `-FunctionProtoType 0x15932a0 'void (void)' cdecl
|       `-BuiltinType 0x1512da0 'void'
|-RecordDecl 0x15933e0 <line:57:9, line:61:1> line:57:16 struct tagIrqParam definition
| |-FieldDecl 0x1593498 <line:58:5, col:9> col:9 swIrq 'int'
| | `-FullComment 0x15c9a80 <col:28, col:49>
| |   `-ParagraphComment 0x15c9a50 <col:28, col:49>
| |     `-TextComment 0x15c9a20 <col:28, col:49> Text=" The interrupt number "
| |-FieldDecl 0x1593530 <main/los_compiler.h:327:23, main/los_interrupt.h:59:11> col:11 pDevId 'void *'
| | `-FullComment 0x15c9b50 <col:28, col:85>
| |   `-ParagraphComment 0x15c9b20 <col:28, col:85>
| |     `-TextComment 0x15c9af0 <col:28, col:85> Text=" The pointer to the device ID that launches the interrupt "
| `-FieldDecl 0x1593608 <line:60:5, col:17> col:17 pName 'const CHAR *'
|   `-FullComment 0x15c9c20 <col:28, col:47>
|     `-ParagraphComment 0x15c9bf0 <col:28, col:47>
|       `-TextComment 0x15c9bc0 <col:28, col:47> Text=" The interrupt name "
|-TypedefDecl 0x15936e8 <line:57:1, line:61:3> col:3 referenced HwiIrqParam 'struct tagIrqParam':'struct tagIrqParam'
| `-ElaboratedType 0x1593690 'struct tagIrqParam' sugar
|   `-RecordType 0x1593460 'struct tagIrqParam'
|     `-Record 0x15933e0 'tagIrqParam'
|-RecordDecl 0x1593758 <line:63:9, line:70:1> line:63:9 struct definition
| |-FieldDecl 0x15939c0 <line:64:5, col:45> col:14 referenced triggerIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0x1593ac0 <line:65:5, col:43> col:14 referenced clearIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0x1593bc0 <line:66:5, col:44> col:14 referenced enableIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0x15962d8 <line:67:5, col:45> col:14 referenced disableIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0x1596568 <line:68:5, col:65> col:14 referenced setIrqPriority 'UINT32 (*)(HWI_HANDLE_T, UINT8)'
| `-FieldDecl 0x1596748 <line:69:5, col:32> col:14 referenced getCurIrqNum 'UINT32 (*)(void)'
|-TypedefDecl 0x15967f8 <line:63:1, line:70:3> col:3 referenced HwiControllerOps 'struct HwiControllerOps':'HwiControllerOps'
| `-ElaboratedType 0x15967a0 'struct HwiControllerOps' sugar
|   `-RecordType 0x15937e0 'HwiControllerOps'
|     `-Record 0x1593758 ''
|-VarDecl 0x15968a0 <line:72:1, col:25> col:25 used g_archHwiOps 'HwiControllerOps':'HwiControllerOps' extern
|-VarDecl 0x1596918 <line:75:1, col:15> col:15 __stack_chk_guard 'UINT32':'unsigned int' extern
|-FunctionDecl 0x1596a18 <line:77:1, col:34> col:13 __stack_chk_fail 'void (void)' extern
|-FunctionDecl 0x1596b50 <line:79:1, col:28> col:8 ArchIsIntActive 'UINT32 (void)'
|-FunctionDecl 0x1596c88 <line:91:1, col:24> col:8 used ArchIntLock 'UINT32 (void)'
|-FunctionDecl 0x1596dc8 <line:93:1, col:37> col:8 used HwiUnmask 'UINT32 (HWI_HANDLE_T)'
| `-ParmVarDecl 0x1596d38 <col:18, col:31> col:31 hwiNum 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x1596f10 <line:94:1, col:35> col:8 used HwiMask 'UINT32 (HWI_HANDLE_T)'
| `-ParmVarDecl 0x1596e80 <col:16, col:29> col:29 hwiNum 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x15970b8 <main/los_compiler.h:327:23, main/los_interrupt.h:95:35> col:6 used ArchIntRestore 'void (UINT32)'
| `-ParmVarDecl 0x1596fc8 <col:21, col:28> col:28 intSave 'UINT32':'unsigned int'
|-FunctionDecl 0x15971f8 <line:98:1, col:26> col:8 ArchIntUnLock 'UINT32 (void)'
|-FunctionDecl 0x1599d08 <line:127:1, col:64> col:8 ArchHwiDelete 'UINT32 (HWI_HANDLE_T, HwiIrqParam *)'
| |-ParmVarDecl 0x1599b08 <col:22, col:35> col:35 hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0x1599bf8 <col:43, col:56> col:56 irqParam 'HwiIrqParam *'
| `-FullComment 0x15cc010 <line:104:3, line:125:13>
|   |-ParagraphComment 0x15c9cc0 <line:104:3>
|   | `-TextComment 0x15c9c90 <col:3> Text=" "
|   |-VerbatimLineComment 0x15c9ce0 <col:4, col:27> Text="  los_interrupt"
|   |-ParagraphComment 0x15c9d50 <line:105:3>
|   | `-TextComment 0x15c9d20 <col:3> Text=" "
|   |-BlockCommandComment 0x15c9d70 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0x15c9dd0 <col:10, col:36>
|   |   `-TextComment 0x15c9da0 <col:10, col:36> Text=" Delete hardware interrupt."
|   |-ParagraphComment 0x15c9e20 <line:107:3>
|   | `-TextComment 0x15c9df0 <col:3> Text=" "
|   |-BlockCommandComment 0x15c9e40 <col:4, line:108:49> Name="par"
|   | `-ParagraphComment 0x15c9ec0 <line:107:8, line:108:49>
|   |   |-TextComment 0x15c9e70 <line:107:8, col:20> Text=" Description:"
|   |   `-TextComment 0x15c9e90 <line:108:3, col:49> Text=" This API is used to delete hardware interrupt."
|   |-ParagraphComment 0x15c9f10 <line:110:3>
|   | `-TextComment 0x15c9ee0 <col:3> Text=" "
|   |-BlockCommandComment 0x15c9f30 <col:4, line:116:8> Name="attention"
|   | `-ParagraphComment 0x15ca370 <line:111:3, line:116:8>
|   |   |-TextComment 0x15c9f60 <line:111:3> Text=" "
|   |   |-HTMLStartTagComment 0x15c9f80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x15c9fc0 <line:112:3> Text=" "
|   |   |-HTMLStartTagComment 0x15c9fe0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15ca020 <col:8, col:124> Text="The hardware interrupt module is usable only when the configuration item for hardware interrupt tailoring is enabled."
|   |   |-HTMLEndTagComment 0x15ca040 <col:125, col:129> Name="li"
|   |   |-TextComment 0x15ca070 <line:113:3> Text=" "
|   |   |-HTMLStartTagComment 0x15ca090 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15ca0d0 <col:8, col:144> Text="Hardware interrupt number value range: [OS_USER_HWI_MIN,OS_USER_HWI_MAX]. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   |-HTMLEndTagComment 0x15ca0f0 <col:145, col:149> Name="li"
|   |   |-TextComment 0x15ca120 <line:114:3> Text=" "
|   |   |-HTMLStartTagComment 0x15ca140 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15ca180 <col:8, col:85> Text="OS_HWI_MAX_NUM specifies the maximum number of interrupts that can be created."
|   |   |-HTMLEndTagComment 0x15ca1a0 <col:86, col:90> Name="li"
|   |   |-TextComment 0x15ca1d0 <line:115:3> Text=" "
|   |   |-HTMLStartTagComment 0x15ca1f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15ca230 <col:8, col:93> Text="Before executing an interrupt on a platform, refer to the chip manual of the platform."
|   |   |-HTMLEndTagComment 0x15ca250 <col:94, col:98> Name="li"
|   |   |-TextComment 0x15ca280 <line:116:3> Text=" "
|   |   `-HTMLEndTagComment 0x15ca2a0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x15ca3c0 <line:118:3>
|   | `-TextComment 0x15ca390 <col:3> Text=" "
|   |-ParamCommandComment 0x15ca3e0 <col:4, line:119:3> [in] implicitly Param="hwiNum" ParamIndex=0
|   | `-ParagraphComment 0x15cbac0 <line:118:18, line:119:3>
|   |   |-TextComment 0x15ca440 <line:118:18, col:134> Text="   [IN] Type#HWI_HANDLE_T: hardware interrupt number. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   `-TextComment 0x15cba90 <line:119:3> Text=" "
|   |-ParamCommandComment 0x15cbae0 <col:4, line:121:3> [in] implicitly Param="irqParam" ParamIndex=1
|   | `-ParagraphComment 0x15cbbc0 <line:119:20, line:121:3>
|   |   |-TextComment 0x15cbb40 <line:119:20, col:89> Text=" [IN] Type #HwiIrqParam *. ID of hardware interrupt which will base on"
|   |   |-TextComment 0x15cbb60 <line:120:3, col:85> Text="                                                when delete the hardware interrupt."
|   |   `-TextComment 0x15cbb80 <line:121:3> Text=" "
|   |-BlockCommandComment 0x15cbbe0 <col:4, line:122:3> Name="retval"
|   | `-ParagraphComment 0x15cbc60 <line:121:11, line:122:3>
|   |   |-TextComment 0x15cbc10 <line:121:11, col:87> Text=" #OS_ERRNO_HWI_NUM_INVALID              0x02000900: Invalid interrupt number."
|   |   `-TextComment 0x15cbc30 <line:122:3> Text=" "
|   |-BlockCommandComment 0x15cbc80 <col:4, line:123:3> Name="retval"
|   | `-ParagraphComment 0x15cbd00 <line:122:11, line:123:3>
|   |   |-TextComment 0x15cbcb0 <line:122:11, col:99> Text=" #LOS_OK                                0         : The interrupt is successfully delete."
|   |   `-TextComment 0x15cbcd0 <line:123:3> Text=" "
|   |-BlockCommandComment 0x15cbd20 <col:4, line:125:3> Name="par"
|   | `-ParagraphComment 0x15cbef0 <line:123:8, line:125:3>
|   |   |-TextComment 0x15cbd50 <line:123:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x15cbd70 <line:124:3> Text=" "
|   |   |-HTMLStartTagComment 0x15cbd90 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15cbdd0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15cbe10 <col:12, col:78> Text="los_interrupt.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15cbe30 <col:79, col:83> Name="li"
|   |   |-HTMLEndTagComment 0x15cbe60 <col:84, col:88> Name="ul"
|   |   `-TextComment 0x15cbe90 <line:125:3> Text=" "
|   `-BlockCommandComment 0x15cbf10 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x15cbf70 <col:8, col:13>
|       `-TextComment 0x15cbf40 <col:8, col:13> Text=" None."
|-FunctionDecl 0x159a198 <line:160:1, line:164:43> line:160:8 ArchHwiCreate 'UINT32 (HWI_HANDLE_T, HWI_PRIOR_T, HWI_MODE_T, HWI_PROC_FUNC, HwiIrqParam *)'
| |-ParmVarDecl 0x1599df8 <col:22, col:35> col:35 hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0x1599e90 <line:161:22, col:34> col:34 hwiPrio 'HWI_PRIOR_T':'unsigned short'
| |-ParmVarDecl 0x1599f30 <line:162:22, col:33> col:33 mode 'HWI_MODE_T':'unsigned short'
| |-ParmVarDecl 0x1599fd0 <line:163:22, col:36> col:36 handler 'HWI_PROC_FUNC':'void (*)(void)'
| |-ParmVarDecl 0x159a048 <line:164:22, col:35> col:35 irqParam 'HwiIrqParam *'
| `-FullComment 0x15cd3b0 <line:130:3, line:158:13>
|   |-ParagraphComment 0x15cc0b0 <line:130:3>
|   | `-TextComment 0x15cc080 <col:3> Text=" "
|   |-VerbatimLineComment 0x15cc0d0 <col:4, col:27> Text="  los_interrupt"
|   |-ParagraphComment 0x15cc140 <line:131:3>
|   | `-TextComment 0x15cc110 <col:3> Text=" "
|   |-BlockCommandComment 0x15cc160 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0x15cc1c0 <col:10, col:38>
|   |   `-TextComment 0x15cc190 <col:10, col:38> Text=" Create a hardware interrupt."
|   |-ParagraphComment 0x15cc210 <line:133:3>
|   | `-TextComment 0x15cc1e0 <col:3> Text=" "
|   |-BlockCommandComment 0x15cc230 <col:4, line:134:106> Name="par"
|   | `-ParagraphComment 0x15cc2b0 <line:133:8, line:134:106>
|   |   |-TextComment 0x15cc260 <line:133:8, col:20> Text=" Description:"
|   |   `-TextComment 0x15cc280 <line:134:3, col:106> Text=" This API is used to configure a hardware interrupt and register a hardware interrupt handling function."
|   |-ParagraphComment 0x15cc300 <line:136:3>
|   | `-TextComment 0x15cc2d0 <col:3> Text=" "
|   |-BlockCommandComment 0x15cc320 <col:4, line:142:8> Name="attention"
|   | `-ParagraphComment 0x15cc760 <line:137:3, line:142:8>
|   |   |-TextComment 0x15cc350 <line:137:3> Text=" "
|   |   |-HTMLStartTagComment 0x15cc370 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x15cc3b0 <line:138:3> Text=" "
|   |   |-HTMLStartTagComment 0x15cc3d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15cc410 <col:8, col:124> Text="The hardware interrupt module is usable only when the configuration item for hardware interrupt tailoring is enabled."
|   |   |-HTMLEndTagComment 0x15cc430 <col:125, col:129> Name="li"
|   |   |-TextComment 0x15cc460 <line:139:3> Text=" "
|   |   |-HTMLStartTagComment 0x15cc480 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15cc4c0 <col:8, col:144> Text="Hardware interrupt number value range: [OS_USER_HWI_MIN,OS_USER_HWI_MAX]. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   |-HTMLEndTagComment 0x15cc4e0 <col:145, col:149> Name="li"
|   |   |-TextComment 0x15cc510 <line:140:3> Text=" "
|   |   |-HTMLStartTagComment 0x15cc530 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15cc570 <col:8, col:85> Text="OS_HWI_MAX_NUM specifies the maximum number of interrupts that can be created."
|   |   |-HTMLEndTagComment 0x15cc590 <col:86, col:90> Name="li"
|   |   |-TextComment 0x15cc5c0 <line:141:3> Text=" "
|   |   |-HTMLStartTagComment 0x15cc5e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15cc620 <col:8, col:93> Text="Before executing an interrupt on a platform, refer to the chip manual of the platform."
|   |   |-HTMLEndTagComment 0x15cc640 <col:94, col:98> Name="li"
|   |   |-TextComment 0x15cc670 <line:142:3> Text=" "
|   |   `-HTMLEndTagComment 0x15cc690 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x15cc7b0 <line:144:3>
|   | `-TextComment 0x15cc780 <col:3> Text=" "
|   |-ParamCommandComment 0x15cc7d0 <col:4, line:145:3> [in] implicitly Param="hwiNum" ParamIndex=0
|   | `-ParagraphComment 0x15cc880 <line:144:18, line:145:3>
|   |   |-TextComment 0x15cc830 <line:144:18, col:134> Text="   [IN] Type#HWI_HANDLE_T: hardware interrupt number. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   `-TextComment 0x15cc850 <line:145:3> Text=" "
|   |-ParamCommandComment 0x15cc8a0 <col:4, line:146:3> [in] implicitly Param="hwiPrio" ParamIndex=1
|   | `-ParagraphComment 0x15cc950 <line:145:19, line:146:3>
|   |   |-TextComment 0x15cc900 <line:145:19, col:106> Text="  [IN] Type#HWI_PRIOR_T: hardware interrupt priority. Ignore this parameter temporarily."
|   |   `-TextComment 0x15cc920 <line:146:3> Text=" "
|   |-ParamCommandComment 0x15cc970 <col:4, line:147:3> [in] implicitly Param="mode" ParamIndex=2
|   | `-ParagraphComment 0x15cca20 <line:146:16, line:147:3>
|   |   |-TextComment 0x15cc9d0 <line:146:16, col:101> Text="     [IN] Type#HWI_MODE_T: hardware interrupt mode. Ignore this parameter temporarily."
|   |   `-TextComment 0x15cc9f0 <line:147:3> Text=" "
|   |-ParamCommandComment 0x15cca40 <col:4, line:148:3> [in] implicitly Param="handler" ParamIndex=3
|   | `-ParagraphComment 0x15ccc30 <line:147:19, line:148:3>
|   |   |-TextComment 0x15ccbe0 <line:147:19, col:107> Text="  [IN] Type#HWI_PROC_FUNC: interrupt handler used when a hardware interrupt is triggered."
|   |   `-TextComment 0x15ccc00 <line:148:3> Text=" "
|   |-ParamCommandComment 0x15ccc50 <col:4, line:149:95> [in] implicitly Param="irqParam" ParamIndex=4
|   | `-ParagraphComment 0x15ccd00 <line:148:20, line:149:95>
|   |   |-TextComment 0x15cccb0 <line:148:20, col:75> Text=" [IN] Type#HwiIrqParam: input parameter of the interrupt"
|   |   `-TextComment 0x15cccd0 <line:149:3, col:95> Text="                                         handler used when a hardware interrupt is triggered."
|   |-ParagraphComment 0x15ccd50 <line:151:3>
|   | `-TextComment 0x15ccd20 <col:3> Text=" "
|   |-BlockCommandComment 0x15ccd70 <col:4, line:152:3> Name="retval"
|   | `-ParagraphComment 0x15ccdf0 <line:151:11, line:152:3>
|   |   |-TextComment 0x15ccda0 <line:151:11, col:108> Text=" #OS_ERRNO_HWI_PROC_FUNC_NULL               0x02000901: Null hardware interrupt handling function."
|   |   `-TextComment 0x15ccdc0 <line:152:3> Text=" "
|   |-BlockCommandComment 0x15cce10 <col:4, line:153:3> Name="retval"
|   | `-ParagraphComment 0x15cce90 <line:152:11, line:153:3>
|   |   |-TextComment 0x15cce40 <line:152:11, col:91> Text=" #OS_ERRNO_HWI_NUM_INVALID                  0x02000900: Invalid interrupt number."
|   |   `-TextComment 0x15cce60 <line:153:3> Text=" "
|   |-BlockCommandComment 0x15cceb0 <col:4, line:154:3> Name="retval"
|   | `-ParagraphComment 0x15ccf30 <line:153:11, line:154:3>
|   |   |-TextComment 0x15ccee0 <line:153:11, col:118> Text=" #OS_ERRNO_HWI_NO_MEMORY                    0x02000903: Insufficient memory for hardware interrupt creation."
|   |   `-TextComment 0x15ccf00 <line:154:3> Text=" "
|   |-BlockCommandComment 0x15ccf50 <col:4, line:155:3> Name="retval"
|   | `-ParagraphComment 0x15ccfd0 <line:154:11, line:155:3>
|   |   |-TextComment 0x15ccf80 <line:154:11, col:127> Text=" #OS_ERRNO_HWI_ALREADY_CREATED              0x02000904: The interrupt handler being created has already been created."
|   |   `-TextComment 0x15ccfa0 <line:155:3> Text=" "
|   |-BlockCommandComment 0x15ccff0 <col:4, line:156:3> Name="retval"
|   | `-ParagraphComment 0x15cd070 <line:155:11, line:156:3>
|   |   |-TextComment 0x15cd020 <line:155:11, col:104> Text=" #LOS_OK                                    0         : The interrupt is successfully created."
|   |   `-TextComment 0x15cd040 <line:156:3> Text=" "
|   |-BlockCommandComment 0x15cd090 <col:4, line:158:3> Name="par"
|   | `-ParagraphComment 0x15cd260 <line:156:8, line:158:3>
|   |   |-TextComment 0x15cd0c0 <line:156:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x15cd0e0 <line:157:3> Text=" "
|   |   |-HTMLStartTagComment 0x15cd100 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15cd140 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15cd180 <col:12, col:78> Text="los_interrupt.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15cd1a0 <col:79, col:83> Name="li"
|   |   |-HTMLEndTagComment 0x15cd1d0 <col:84, col:88> Name="ul"
|   |   `-TextComment 0x15cd200 <line:158:3> Text=" "
|   `-BlockCommandComment 0x15cd280 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x15cd2e0 <col:8, col:13>
|       `-TextComment 0x15cd2b0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x159a300 <main/los_compiler.h:158:22, main/los_interrupt.h:172:1> line:166:22 ArchIntTrigger 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0x159a270 <col:37, col:50> col:50 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0x159a708 <line:167:1, line:172:1>
|   |-IfStmt 0x159a618 <line:168:5, line:170:5>
|   | |-BinaryOperator 0x159a4a8 <line:168:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0x159a478 <main/los_interrupt.h:168:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0x159a3c8 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .triggerIrq 0x15939c0
|   | | |   `-DeclRefExpr 0x159a3a8 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x15968a0 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x159a490 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0x159a458 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0x159a430 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x159a3f8 <col:31> 'int' 0
|   | `-CompoundStmt 0x159a600 <main/los_interrupt.h:168:42, line:170:5>
|   |   `-ReturnStmt 0x159a5f0 <line:169:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x159a5c8 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x159a5a8 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x159a560 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x159a540 <col:33> 'int' 1
|   `-ReturnStmt 0x159a6f8 <main/los_interrupt.h:171:5, col:42>
|     `-CallExpr 0x159a6b8 <col:12, col:42> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0x159a6a0 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0x159a650 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .triggerIrq 0x15939c0
|       |   `-DeclRefExpr 0x159a630 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x15968a0 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0x159a6e0 <col:36> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x159a680 <col:36> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x159a270 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x159a7c8 <main/los_compiler.h:158:22, main/los_interrupt.h:180:1> line:174:22 ArchIntEnable 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0x159a738 <col:36, col:49> col:49 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0x159b4a8 <line:175:1, line:180:1>
|   |-IfStmt 0x159aa68 <line:176:5, line:178:5>
|   | |-BinaryOperator 0x159a970 <line:176:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0x159a940 <main/los_interrupt.h:176:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0x159a890 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .enableIrq 0x1593bc0
|   | | |   `-DeclRefExpr 0x159a870 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x15968a0 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x159a958 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0x159a920 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0x159a8f8 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x159a8c0 <col:31> 'int' 0
|   | `-CompoundStmt 0x159aa50 <main/los_interrupt.h:176:41, line:178:5>
|   |   `-ReturnStmt 0x159aa40 <line:177:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x159aa18 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x159a9f8 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x159a9b0 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x159a990 <col:33> 'int' 1
|   `-ReturnStmt 0x159b498 <main/los_interrupt.h:179:5, col:41>
|     `-CallExpr 0x159b458 <col:12, col:41> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0x159b440 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0x159aaa0 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .enableIrq 0x1593bc0
|       |   `-DeclRefExpr 0x159aa80 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x15968a0 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0x159b480 <col:35> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x159b420 <col:35> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x159a738 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x159b568 <main/los_compiler.h:158:22, main/los_interrupt.h:188:1> line:182:22 ArchIntDisable 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0x159b4d8 <col:37, col:50> col:50 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0x159b8f8 <line:183:1, line:188:1>
|   |-IfStmt 0x159b808 <line:184:5, line:186:5>
|   | |-BinaryOperator 0x159b710 <line:184:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0x159b6e0 <main/los_interrupt.h:184:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0x159b630 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .disableIrq 0x15962d8
|   | | |   `-DeclRefExpr 0x159b610 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x15968a0 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x159b6f8 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0x159b6c0 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0x159b698 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x159b660 <col:31> 'int' 0
|   | `-CompoundStmt 0x159b7f0 <main/los_interrupt.h:184:42, line:186:5>
|   |   `-ReturnStmt 0x159b7e0 <line:185:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x159b7b8 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x159b798 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x159b750 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x159b730 <col:33> 'int' 1
|   `-ReturnStmt 0x159b8e8 <main/los_interrupt.h:187:5, col:42>
|     `-CallExpr 0x159b8a8 <col:12, col:42> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0x159b890 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0x159b840 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .disableIrq 0x15962d8
|       |   `-DeclRefExpr 0x159b820 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x15968a0 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0x159b8d0 <col:36> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x159b870 <col:36> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x159b4d8 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x159b9b8 <main/los_compiler.h:158:22, main/los_interrupt.h:196:1> line:190:22 ArchIntClear 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0x159b928 <col:35, col:48> col:48 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0x159bd48 <line:191:1, line:196:1>
|   |-IfStmt 0x159bc58 <line:192:5, line:194:5>
|   | |-BinaryOperator 0x159bb60 <line:192:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0x159bb30 <main/los_interrupt.h:192:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0x159ba80 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .clearIrq 0x1593ac0
|   | | |   `-DeclRefExpr 0x159ba60 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x15968a0 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x159bb48 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0x159bb10 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0x159bae8 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x159bab0 <col:31> 'int' 0
|   | `-CompoundStmt 0x159bc40 <main/los_interrupt.h:192:40, line:194:5>
|   |   `-ReturnStmt 0x159bc30 <line:193:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x159bc08 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x159bbe8 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x159bba0 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x159bb80 <col:33> 'int' 1
|   `-ReturnStmt 0x159bd38 <main/los_interrupt.h:195:5, col:40>
|     `-CallExpr 0x159bcf8 <col:12, col:40> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0x159bce0 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0x159bc90 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .clearIrq 0x1593ac0
|       |   `-DeclRefExpr 0x159bc70 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x15968a0 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0x159bd20 <col:34> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x159bcc0 <col:34> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x159b928 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x159bf08 <main/los_compiler.h:158:22, main/los_interrupt.h:204:1> line:198:22 ArchIntSetPriority 'UINT32 (HWI_HANDLE_T, HWI_PRIOR_T)' static inline
| |-ParmVarDecl 0x159bd78 <col:41, col:54> col:54 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0x159bdf0 <col:62, col:74> col:74 used priority 'HWI_PRIOR_T':'unsigned short'
| `-CompoundStmt 0x159c2f8 <line:199:1, line:204:1>
|   |-IfStmt 0x159c1b0 <line:200:5, line:202:5>
|   | |-BinaryOperator 0x159c0b8 <line:200:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0x159c088 <main/los_interrupt.h:200:9, col:22> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <LValueToRValue>
|   | | | `-MemberExpr 0x159bfd8 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' lvalue .setIrqPriority 0x1596568
|   | | |   `-DeclRefExpr 0x159bfb8 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x15968a0 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x159c0a0 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <BitCast>
|   | |   `-ParenExpr 0x159c068 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0x159c040 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x159c008 <col:31> 'int' 0
|   | `-CompoundStmt 0x159c198 <main/los_interrupt.h:200:46, line:202:5>
|   |   `-ReturnStmt 0x159c188 <line:201:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x159c160 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x159c140 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x159c0f8 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x159c0d8 <col:33> 'int' 1
|   `-ReturnStmt 0x159c2e8 <main/los_interrupt.h:203:5, col:56>
|     `-CallExpr 0x159c270 <col:12, col:56> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0x159c258 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <LValueToRValue>
|       | `-MemberExpr 0x159c1e8 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' lvalue .setIrqPriority 0x1596568
|       |   `-DeclRefExpr 0x159c1c8 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x15968a0 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       |-ImplicitCastExpr 0x159c2a0 <col:40> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x159c218 <col:40> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x159bd78 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|       `-ImplicitCastExpr 0x159c2d0 <col:48> 'UINT8':'unsigned char' <IntegralCast>
|         `-ImplicitCastExpr 0x159c2b8 <col:48> 'HWI_PRIOR_T':'unsigned short' <LValueToRValue>
|           `-DeclRefExpr 0x159c238 <col:48> 'HWI_PRIOR_T':'unsigned short' lvalue ParmVar 0x159bdf0 'priority' 'HWI_PRIOR_T':'unsigned short'
|-FunctionDecl 0x159dc20 <main/los_compiler.h:158:22, main/los_interrupt.h:212:1> line:206:22 ArchIntCurIrqNum 'UINT32 (void)' static inline
| `-CompoundStmt 0x159df68 <line:207:1, line:212:1>
|   |-IfStmt 0x159deb8 <line:208:5, line:210:5>
|   | |-BinaryOperator 0x159ddc0 <line:208:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0x159dd90 <main/los_interrupt.h:208:9, col:22> 'UINT32 (*)(void)' <LValueToRValue>
|   | | | `-MemberExpr 0x159dce0 <col:9, col:22> 'UINT32 (*)(void)' lvalue .getCurIrqNum 0x1596748
|   | | |   `-DeclRefExpr 0x159dcc0 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x15968a0 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x159dda8 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(void)' <BitCast>
|   | |   `-ParenExpr 0x159dd70 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0x159dd48 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x159dd10 <col:31> 'int' 0
|   | `-CompoundStmt 0x159dea0 <main/los_interrupt.h:208:44, line:210:5>
|   |   `-ReturnStmt 0x159de90 <line:209:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x159de68 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x159de48 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x159de00 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x159dde0 <col:33> 'int' 1
|   `-ReturnStmt 0x159df58 <main/los_interrupt.h:211:5, col:38>
|     `-CallExpr 0x159df38 <col:12, col:38> 'UINT32':'unsigned int'
|       `-ImplicitCastExpr 0x159df20 <col:12, col:25> 'UINT32 (*)(void)' <LValueToRValue>
|         `-MemberExpr 0x159def0 <col:12, col:25> 'UINT32 (*)(void)' lvalue .getCurIrqNum 0x1596748
|           `-DeclRefExpr 0x159ded0 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x15968a0 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|-FunctionDecl 0x159e0d8 <main/los_compiler.h:158:22, main/los_interrupt.h:217:1> line:214:33 ArchIntOpsGet 'HwiControllerOps *(void)' static inline
| `-CompoundStmt 0x159e1c0 <line:215:1, line:217:1>
|   `-ReturnStmt 0x159e1b0 <line:216:5, col:13>
|     `-UnaryOperator 0x159e198 <col:12, col:13> 'HwiControllerOps *' prefix '&' cannot overflow
|       `-DeclRefExpr 0x159e178 <col:13> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x15968a0 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|-RecordDecl 0x159e1d8 <main/los_timer.h:56:9, line:66:1> line:56:9 struct definition
| |-FieldDecl 0x159e290 <line:57:5, col:19> col:19 referenced freq 'UINT32':'unsigned int'
| |-FieldDecl 0x159e2f0 <line:58:5, col:19> col:19 referenced irqNum 'INT32':'int'
| |-FieldDecl 0x159e350 <line:59:5, col:19> col:19 referenced periodMax 'UINT64':'unsigned long long'
| |-FieldDecl 0x159e540 <line:60:5, col:52> col:21 init 'UINT32 (*)(HWI_PROC_FUNC)'
| |-FieldDecl 0x159e750 <line:61:5, col:45> col:21 getCycle 'UINT64 (*)(UINT32 *)'
| |-FieldDecl 0x159e940 <line:62:5, col:40> col:21 reload 'UINT64 (*)(UINT64)'
| |-FieldDecl 0x159ea38 <main/los_compiler.h:327:23, main/los_timer.h:63:31> col:21 lock 'void (*)(void)'
| |-FieldDecl 0x159eb30 <main/los_compiler.h:327:23, main/los_timer.h:64:33> col:21 unlock 'void (*)(void)'
| `-FieldDecl 0x159eb90 <line:65:5, col:19> col:19 tickHandler 'HWI_PROC_FUNC':'void (*)(void)'
|-TypedefDecl 0x159ec50 <line:56:1, line:66:3> col:3 referenced ArchTickTimer 'struct ArchTickTimer':'ArchTickTimer'
| `-ElaboratedType 0x159ebe0 'struct ArchTickTimer' sugar
|   `-RecordType 0x159e260 'ArchTickTimer'
|     `-Record 0x159e1d8 ''
|-FunctionDecl 0x159ed58 <line:68:1, col:27> col:8 ArchEnterSleep 'UINT32 (void)'
|-FunctionDecl 0x159efa8 <line:84:1, col:40> col:16 ArchSysTickTimerGet 'ArchTickTimer *(void)'
| `-FullComment 0x15cdb00 <line:71:3, line:82:13>
|   |-ParagraphComment 0x15cd450 <line:71:3>
|   | `-TextComment 0x15cd420 <col:3> Text=" "
|   |-VerbatimLineComment 0x15cd470 <col:4, col:22> Text=" los_timer"
|   |-ParagraphComment 0x15cd4e0 <line:72:3>
|   | `-TextComment 0x15cd4b0 <col:3> Text=" "
|   |-BlockCommandComment 0x15cd500 <col:4, col:39> Name="brief"
|   | `-ParagraphComment 0x15cd560 <col:10, col:39>
|   |   `-TextComment 0x15cd530 <col:10, col:39> Text=" Get tick timer control block."
|   |-ParagraphComment 0x15cd5b0 <line:74:3>
|   | `-TextComment 0x15cd580 <col:3> Text=" "
|   |-BlockCommandComment 0x15cd5d0 <col:4, line:75:52> Name="par"
|   | `-ParagraphComment 0x15cd650 <line:74:8, line:75:52>
|   |   |-TextComment 0x15cd600 <line:74:8, col:20> Text=" Description:"
|   |   `-TextComment 0x15cd620 <line:75:3, col:52> Text=" This API is used to get tick timer control block."
|   |-ParagraphComment 0x15cd6a0 <line:77:3>
|   | `-TextComment 0x15cd670 <col:3> Text=" "
|   |-ParamCommandComment 0x15cd6c0 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0x15cd720 <<invalid sloc>>
|   |-ParagraphComment 0x15cd770 <line:79:3>
|   | `-TextComment 0x15cd740 <col:3> Text=" "
|   |-BlockCommandComment 0x15cd790 <col:4, line:80:3> Name="retval"
|   | `-ParagraphComment 0x15cd810 <line:79:11, line:80:3>
|   |   |-TextComment 0x15cd7c0 <line:79:11, col:36> Text=" #tick timer control block"
|   |   `-TextComment 0x15cd7e0 <line:80:3> Text=" "
|   |-BlockCommandComment 0x15cd830 <col:4, line:82:3> Name="par"
|   | `-ParagraphComment 0x15cda00 <line:80:8, line:82:3>
|   |   |-TextComment 0x15cd860 <line:80:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x15cd880 <line:81:3> Text=" "
|   |   |-HTMLStartTagComment 0x15cd8a0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15cd8e0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15cd920 <col:12, col:74> Text="los_timer.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15cd940 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x15cd970 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x15cd9a0 <line:82:3> Text=" "
|   `-BlockCommandComment 0x15cda20 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x15cda80 <col:8, col:13>
|       `-TextComment 0x15cda50 <col:8, col:13> Text=" None."
|-TypedefDecl 0x159f720 <main/los_error.h:130:1, line:134:51> line:130:16 referenced LOS_ERRORHANDLE_FUNC 'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
| |-PointerType 0x159f6a0 'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
| | `-ParenType 0x159f640 'void (CHAR *, UINT32, UINT32, UINT32, void *)' sugar
| |   `-FunctionProtoType 0x159f5f0 'void (CHAR *, UINT32, UINT32, UINT32, void *)' cdecl
| |     |-BuiltinType 0x1512da0 'void'
| |     |-PointerType 0x159f290 'CHAR *'
| |     | `-TypedefType 0x15935b0 'CHAR' sugar
| |     |   |-Typedef 0x1578e38 'CHAR'
| |     |   `-BuiltinType 0x1512de0 'char'
| |     |-TypedefType 0x1579270 'UINT32' sugar
| |     | |-Typedef 0x1578ba0 'UINT32'
| |     | `-BuiltinType 0x1512ee0 'unsigned int'
| |     |-TypedefType 0x1579270 'UINT32' sugar
| |     | |-Typedef 0x1578ba0 'UINT32'
| |     | `-BuiltinType 0x1512ee0 'unsigned int'
| |     |-TypedefType 0x1579270 'UINT32' sugar
| |     | |-Typedef 0x1578ba0 'UINT32'
| |     | `-BuiltinType 0x1512ee0 'unsigned int'
| |     `-PointerType 0x1513560 'void *'
| |       `-BuiltinType 0x1512da0 'void'
| `-FullComment 0x15cf950 <line:109:3, line:128:13>
|   |-ParagraphComment 0x15cdba0 <line:109:3>
|   | `-TextComment 0x15cdb70 <col:3> Text=" "
|   |-VerbatimLineComment 0x15ced00 <col:4, col:20> Text=" los_err"
|   |-ParagraphComment 0x15ced70 <line:110:3>
|   | `-TextComment 0x15ced40 <col:3> Text=" "
|   |-BlockCommandComment 0x15ced90 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0x15cedf0 <col:10, col:60>
|   |   `-TextComment 0x15cedc0 <col:10, col:60> Text=" Define the pointer to the error handling function."
|   |-ParagraphComment 0x15cee40 <line:112:3>
|   | `-TextComment 0x15cee10 <col:3> Text=" "
|   |-BlockCommandComment 0x15cee60 <col:4, line:114:3> Name="par"
|   | `-ParagraphComment 0x15cef10 <line:112:8, line:114:3>
|   |   |-TextComment 0x15cee90 <line:112:8, col:20> Text=" Description:"
|   |   |-TextComment 0x15ceeb0 <line:113:3, col:73> Text=" This API is used to define the pointer to the error handling function."
|   |   `-TextComment 0x15ceed0 <line:114:3> Text=" "
|   |-BlockCommandComment 0x15cef30 <col:4, line:117:8> Name="attention"
|   | `-ParagraphComment 0x15cf100 <line:115:3, line:117:8>
|   |   |-TextComment 0x15cef60 <line:115:3> Text=" "
|   |   |-HTMLStartTagComment 0x15cef80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x15cefc0 <line:116:3> Text=" "
|   |   |-HTMLStartTagComment 0x15cefe0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15cf020 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x15cf040 <col:13, col:17> Name="li"
|   |   |-TextComment 0x15cf070 <line:117:3> Text=" "
|   |   `-HTMLEndTagComment 0x15cf090 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x15cf150 <line:119:3>
|   | `-TextComment 0x15cf120 <col:3> Text=" "
|   |-ParamCommandComment 0x15cf170 <col:4, line:120:3> [in] implicitly Param="fileName" ParamIndex=0
|   | `-ParagraphComment 0x15cf220 <line:119:20, line:120:3>
|   |   |-TextComment 0x15cf1d0 <line:119:20, col:65> Text="  [IN] Log file that stores error information."
|   |   `-TextComment 0x15cf1f0 <line:120:3> Text=" "
|   |-ParamCommandComment 0x15cf240 <col:4, line:121:3> [in] implicitly Param="lineNo" ParamIndex=1
|   | `-ParagraphComment 0x15cf2f0 <line:120:18, line:121:3>
|   |   |-TextComment 0x15cf2a0 <line:120:18, col:60> Text="    [IN] Line number of the erroneous line."
|   |   `-TextComment 0x15cf2c0 <line:121:3> Text=" "
|   |-ParamCommandComment 0x15cf310 <col:4, line:122:3> [in] implicitly Param="errorNo" ParamIndex=2
|   | `-ParagraphComment 0x15cf3c0 <line:121:19, line:122:3>
|   |   |-TextComment 0x15cf370 <line:121:19, col:37> Text="   [IN] Error code."
|   |   `-TextComment 0x15cf390 <line:122:3> Text=" "
|   |-ParamCommandComment 0x15cf3e0 <col:4, line:123:3> [in] implicitly Param="paraLen" ParamIndex=3
|   | `-ParagraphComment 0x15cf490 <line:122:19, line:123:3>
|   |   |-TextComment 0x15cf440 <line:122:19, col:62> Text="   [IN] Length of the input parameter pPara."
|   |   `-TextComment 0x15cf460 <line:123:3> Text=" "
|   |-ParamCommandComment 0x15cf4b0 <col:4, col:50> [in] implicitly Param="para" ParamIndex=4
|   | `-ParagraphComment 0x15cf540 <col:16, col:50>
|   |   `-TextComment 0x15cf510 <col:16, col:50> Text="      [IN] User label of the error."
|   |-ParagraphComment 0x15cf590 <line:125:3>
|   | `-TextComment 0x15cf560 <col:3> Text=" "
|   |-BlockCommandComment 0x15cf5b0 <col:4, line:126:3> Name="retval"
|   | `-ParagraphComment 0x15cf630 <line:125:11, line:126:3>
|   |   |-TextComment 0x15cf5e0 <line:125:11, col:16> Text=" None."
|   |   `-TextComment 0x15cf600 <line:126:3> Text=" "
|   |-BlockCommandComment 0x15cf650 <col:4, line:128:3> Name="par"
|   | `-ParagraphComment 0x15cf820 <line:126:8, line:128:3>
|   |   |-TextComment 0x15cf680 <line:126:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x15cf6a0 <line:127:3> Text=" "
|   |   |-HTMLStartTagComment 0x15cf6c0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15cf700 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15cf740 <col:12, col:72> Text="los_err.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15cf760 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x15cf790 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x15cf7c0 <line:128:3> Text=" "
|   `-BlockCommandComment 0x15cf840 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x15cf8a0 <col:8, col:13>
|       `-TextComment 0x15cf870 <col:8, col:13> Text=" None."
|-FunctionDecl 0x159faf8 <line:158:1, line:160:39> line:158:15 LOS_ErrHandle 'UINT32 (CHAR *, UINT32, UINT32, UINT32, void *)' extern
| |-ParmVarDecl 0x159f7b8 <col:29, col:35> col:35 fileName 'CHAR *'
| |-ParmVarDecl 0x159f830 <col:45, col:52> col:52 lineNo 'UINT32':'unsigned int'
| |-ParmVarDecl 0x159f8a8 <line:159:29, col:36> col:36 errorNo 'UINT32':'unsigned int'
| |-ParmVarDecl 0x159f920 <col:45, col:52> col:52 paraLen 'UINT32':'unsigned int'
| |-ParmVarDecl 0x159f9a0 <main/los_compiler.h:327:23, main/los_error.h:160:35> col:35 para 'void *'
| `-FullComment 0x15d0680 <line:137:3, line:156:12>
|   |-ParagraphComment 0x15cf9f0 <line:137:3>
|   | `-TextComment 0x15cf9c0 <col:3> Text=" "
|   |-VerbatimLineComment 0x15cfa10 <col:4, col:20> Text=" los_err"
|   |-ParagraphComment 0x15cfa80 <line:138:3>
|   | `-TextComment 0x15cfa50 <col:3> Text=" "
|   |-BlockCommandComment 0x15cfaa0 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0x15cfb00 <col:10, col:34>
|   |   `-TextComment 0x15cfad0 <col:10, col:34> Text=" Error handling function."
|   |-ParagraphComment 0x15cfb50 <line:140:3>
|   | `-TextComment 0x15cfb20 <col:3> Text=" "
|   |-BlockCommandComment 0x15cfb70 <col:4, line:142:3> Name="par"
|   | `-ParagraphComment 0x15cfc20 <line:140:8, line:142:3>
|   |   |-TextComment 0x15cfba0 <line:140:8, col:20> Text=" Description:"
|   |   |-TextComment 0x15cfbc0 <line:141:3, col:77> Text=" This API is used to perform different operations according to error types."
|   |   `-TextComment 0x15cfbe0 <line:142:3> Text=" "
|   |-BlockCommandComment 0x15cfc40 <col:4, line:145:8> Name="attention"
|   | `-ParagraphComment 0x15cfe30 <line:143:3, line:145:8>
|   |   |-TextComment 0x15cfc70 <line:143:3> Text=" "
|   |   |-HTMLStartTagComment 0x15cfc90 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x15cfcd0 <line:144:3> Text=" "
|   |   |-HTMLStartTagComment 0x15cfd10 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15cfd50 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0x15cfd70 <col:12, col:16> Name="li"
|   |   |-TextComment 0x15cfda0 <line:145:3> Text=" "
|   |   `-HTMLEndTagComment 0x15cfdc0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x15cfe80 <line:147:3>
|   | `-TextComment 0x15cfe50 <col:3> Text=" "
|   |-ParamCommandComment 0x15cfea0 <col:4, line:148:3> [in] implicitly Param="fileName" ParamIndex=0
|   | `-ParagraphComment 0x15cff50 <line:147:20, line:148:3>
|   |   |-TextComment 0x15cff00 <line:147:20, col:65> Text="  [IN] Log file that stores error information."
|   |   `-TextComment 0x15cff20 <line:148:3> Text=" "
|   |-ParamCommandComment 0x15cff70 <col:4, line:149:3> [in] implicitly Param="lineNo" ParamIndex=1
|   | `-ParagraphComment 0x15d0020 <line:148:18, line:149:3>
|   |   |-TextComment 0x15cffd0 <line:148:18, col:98> Text="    [IN] Line number of the erroneous line which should not be OS_ERR_MAGIC_WORD."
|   |   `-TextComment 0x15cfff0 <line:149:3> Text=" "
|   |-ParamCommandComment 0x15d0040 <col:4, line:150:3> [in] implicitly Param="errorNo" ParamIndex=2
|   | `-ParagraphComment 0x15d00f0 <line:149:19, line:150:3>
|   |   |-TextComment 0x15d00a0 <line:149:19, col:37> Text="   [IN] Error code."
|   |   `-TextComment 0x15d00c0 <line:150:3> Text=" "
|   |-ParamCommandComment 0x15d0110 <col:4, line:151:3> [in] implicitly Param="paraLen" ParamIndex=3
|   | `-ParagraphComment 0x15d01c0 <line:150:19, line:151:3>
|   |   |-TextComment 0x15d0170 <line:150:19, col:62> Text="   [IN] Length of the input parameter pPara."
|   |   `-TextComment 0x15d0190 <line:151:3> Text=" "
|   |-ParamCommandComment 0x15d01e0 <col:4, col:50> [in] implicitly Param="para" ParamIndex=4
|   | `-ParagraphComment 0x15d0270 <col:16, col:50>
|   |   `-TextComment 0x15d0240 <col:16, col:50> Text="      [IN] User label of the error."
|   |-ParagraphComment 0x15d02c0 <line:153:3>
|   | `-TextComment 0x15d0290 <col:3> Text=" "
|   |-BlockCommandComment 0x15d02e0 <col:4, line:154:3> Name="retval"
|   | `-ParagraphComment 0x15d0360 <line:153:11, line:154:3>
|   |   |-TextComment 0x15d0310 <line:153:11, col:54> Text=" LOS_OK The error is successfully processed."
|   |   `-TextComment 0x15d0330 <line:154:3> Text=" "
|   |-BlockCommandComment 0x15d0380 <col:4, line:156:3> Name="par"
|   | `-ParagraphComment 0x15d0550 <line:154:8, line:156:3>
|   |   |-TextComment 0x15d03b0 <line:154:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x15d03d0 <line:155:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d03f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15d0430 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15d0470 <col:12, col:72> Text="los_err.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15d0490 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x15d04c0 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x15d04f0 <line:156:3> Text=" "
|   `-BlockCommandComment 0x15d0570 <col:4, col:12> Name="see"
|     `-ParagraphComment 0x15d05d0 <col:8, col:12>
|       `-TextComment 0x15d05a0 <col:8, col:12> Text=" None"
|-RecordDecl 0x15a7b00 <line:166:9, line:168:1> line:166:16 struct tagUserErrFunc definition
| |-FullComment 0x15d07f0 <line:163:3, line:164:37>
| | |-ParagraphComment 0x15d0720 <line:163:3>
| | | `-TextComment 0x15d06f0 <col:3> Text=" "
| | |-VerbatimLineComment 0x15d0740 <col:4, col:20> Text=" los_err"
| | `-ParagraphComment 0x15d07b0 <line:164:3, col:37>
| |   `-TextComment 0x15d0780 <col:3, col:37> Text=" Error handling function structure."
| `-FieldDecl 0x15a7bd0 <line:167:5, col:27> col:27 pfnHook 'LOS_ERRORHANDLE_FUNC':'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
|   `-FullComment 0x15d08c0 <col:41, col:75>
|     `-ParagraphComment 0x15d0890 <col:41, col:75>
|       `-TextComment 0x15d0860 <col:41, col:75> Text=" Hook function for error handling. "
|-TypedefDecl 0x15a7ca8 <line:166:1, line:168:3> col:3 UserErrFunc 'struct tagUserErrFunc':'struct tagUserErrFunc'
| |-ElaboratedType 0x15a7c50 'struct tagUserErrFunc' sugar
| | `-RecordType 0x15a7b80 'struct tagUserErrFunc'
| |   `-Record 0x15a7b00 'tagUserErrFunc'
| `-FullComment 0x15d0a30 <line:163:3, line:164:37>
|   |-ParagraphComment 0x15d0960 <line:163:3>
|   | `-TextComment 0x15d0930 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d0980 <col:4, col:20> Text=" los_err"
|   `-ParagraphComment 0x15d09f0 <line:164:3, col:37>
|     `-TextComment 0x15d09c0 <col:3, col:37> Text=" Error handling function structure."
|-EnumDecl 0x15a7d18 <line:171:1, line:207:1> line:171:6 LOS_MODULE_ID
| |-EnumConstantDecl 0x15a7e18 <line:172:5, col:32> col:5 LOS_MOD_SYS 'int'
| | `-ConstantExpr 0x15a7e00 <col:32> 'int'
| |   `-IntegerLiteral 0x15a7de0 <col:32> 'int' 0
| |-EnumConstantDecl 0x15a7ea0 <line:173:5, col:32> col:5 LOS_MOD_MEM 'int'
| | `-ConstantExpr 0x15a7e88 <col:32> 'int'
| |   `-IntegerLiteral 0x15a7e68 <col:32> 'int' 1
| |-EnumConstantDecl 0x15a7f28 <line:174:5, col:32> col:5 LOS_MOD_TSK 'int'
| | `-ConstantExpr 0x15a7f10 <col:32> 'int'
| |   `-IntegerLiteral 0x15a7ef0 <col:32> 'int' 2
| |-EnumConstantDecl 0x15a7fb0 <line:175:5, col:32> col:5 LOS_MOD_SWTMR 'int'
| | `-ConstantExpr 0x15a7f98 <col:32> 'int'
| |   `-IntegerLiteral 0x15a7f78 <col:32> 'int' 3
| |-EnumConstantDecl 0x15a8038 <line:176:5, col:32> col:5 LOS_MOD_TICK 'int'
| | `-ConstantExpr 0x15a8020 <col:32> 'int'
| |   `-IntegerLiteral 0x15a8000 <col:32> 'int' 4
| |-EnumConstantDecl 0x15a80c0 <line:177:5, col:32> col:5 LOS_MOD_MSG 'int'
| | `-ConstantExpr 0x15a80a8 <col:32> 'int'
| |   `-IntegerLiteral 0x15a8088 <col:32> 'int' 5
| |-EnumConstantDecl 0x15a8148 <line:178:5, col:32> col:5 LOS_MOD_QUE 'int'
| | `-ConstantExpr 0x15a8130 <col:32> 'int'
| |   `-IntegerLiteral 0x15a8110 <col:32> 'int' 6
| |-EnumConstantDecl 0x15a81d0 <line:179:5, col:32> col:5 LOS_MOD_SEM 'int'
| | `-ConstantExpr 0x15a81b8 <col:32> 'int'
| |   `-IntegerLiteral 0x15a8198 <col:32> 'int' 7
| |-EnumConstantDecl 0x15a8258 <line:180:5, col:32> col:5 LOS_MOD_MBOX 'int'
| | `-ConstantExpr 0x15a8240 <col:32> 'int'
| |   `-IntegerLiteral 0x15a8220 <col:32> 'int' 8
| |-EnumConstantDecl 0x15a82e0 <line:181:5, col:32> col:5 LOS_MOD_HWI 'int'
| | `-ConstantExpr 0x15a82c8 <col:32> 'int'
| |   `-IntegerLiteral 0x15a82a8 <col:32> 'int' 9
| |-EnumConstantDecl 0x15a8368 <line:182:5, col:32> col:5 LOS_MOD_HWWDG 'int'
| | `-ConstantExpr 0x15a8350 <col:32> 'int'
| |   `-IntegerLiteral 0x15a8330 <col:32> 'int' 10
| |-EnumConstantDecl 0x15a83f0 <line:183:5, col:32> col:5 LOS_MOD_CACHE 'int'
| | `-ConstantExpr 0x15a83d8 <col:32> 'int'
| |   `-IntegerLiteral 0x15a83b8 <col:32> 'int' 11
| |-EnumConstantDecl 0x15a8478 <line:184:5, col:32> col:5 LOS_MOD_HWTMR 'int'
| | `-ConstantExpr 0x15a8460 <col:32> 'int'
| |   `-IntegerLiteral 0x15a8440 <col:32> 'int' 12
| |-EnumConstantDecl 0x15a8500 <line:185:5, col:32> col:5 LOS_MOD_MMU 'int'
| | `-ConstantExpr 0x15a84e8 <col:32> 'int'
| |   `-IntegerLiteral 0x15a84c8 <col:32> 'int' 13
| |-EnumConstantDecl 0x15a8588 <line:187:5, col:32> col:5 LOS_MOD_LOG 'int'
| | `-ConstantExpr 0x15a8570 <col:32> 'int'
| |   `-IntegerLiteral 0x15a8550 <col:32> 'int' 14
| |-EnumConstantDecl 0x15a8610 <line:188:5, col:32> col:5 LOS_MOD_ERR 'int'
| | `-ConstantExpr 0x15a85f8 <col:32> 'int'
| |   `-IntegerLiteral 0x15a85d8 <col:32> 'int' 15
| |-EnumConstantDecl 0x15a8698 <line:190:5, col:32> col:5 LOS_MOD_EXC 'int'
| | `-ConstantExpr 0x15a8680 <col:32> 'int'
| |   `-IntegerLiteral 0x15a8660 <col:32> 'int' 16
| |-EnumConstantDecl 0x15a8720 <line:191:5, col:32> col:5 LOS_MOD_CSTK 'int'
| | `-ConstantExpr 0x15a8708 <col:32> 'int'
| |   `-IntegerLiteral 0x15a86e8 <col:32> 'int' 17
| |-EnumConstantDecl 0x15a87a8 <line:193:5, col:32> col:5 LOS_MOD_MPU 'int'
| | `-ConstantExpr 0x15a8790 <col:32> 'int'
| |   `-IntegerLiteral 0x15a8770 <col:32> 'int' 18
| |-EnumConstantDecl 0x15a8830 <line:194:5, col:32> col:5 LOS_MOD_NMHWI 'int'
| | `-ConstantExpr 0x15a8818 <col:32> 'int'
| |   `-IntegerLiteral 0x15a87f8 <col:32> 'int' 19
| |-EnumConstantDecl 0x15a88b8 <line:195:5, col:32> col:5 LOS_MOD_TRACE 'int'
| | `-ConstantExpr 0x15a88a0 <col:32> 'int'
| |   `-IntegerLiteral 0x15a8880 <col:32> 'int' 20
| |-EnumConstantDecl 0x15a8940 <line:196:5, col:32> col:5 LOS_MOD_IPC 'int'
| | `-ConstantExpr 0x15a8928 <col:32> 'int'
| |   `-IntegerLiteral 0x15a8908 <col:32> 'int' 24
| |-EnumConstantDecl 0x15a89c8 <line:197:5, col:32> col:5 LOS_MOD_TIMER 'int'
| | `-ConstantExpr 0x15a89b0 <col:32> 'int'
| |   `-IntegerLiteral 0x15a8990 <col:32> 'int' 26
| |-EnumConstantDecl 0x15a8a50 <line:198:5, col:32> col:5 LOS_MOD_EVENT 'int'
| | `-ConstantExpr 0x15a8a38 <col:32> 'int'
| |   `-IntegerLiteral 0x15a8a18 <col:32> 'int' 28
| |-EnumConstantDecl 0x15a9b60 <line:199:5, col:32> col:5 LOS_MOD_MUX 'int'
| | `-ConstantExpr 0x15a8ac0 <col:32> 'int'
| |   `-IntegerLiteral 0x15a8aa0 <col:32> 'int' 29
| |-EnumConstantDecl 0x15a9be8 <line:200:5, col:32> col:5 LOS_MOD_CPUP 'int'
| | `-ConstantExpr 0x15a9bd0 <col:32> 'int'
| |   `-IntegerLiteral 0x15a9bb0 <col:32> 'int' 30
| |-EnumConstantDecl 0x15a9c70 <line:201:5, col:32> col:5 LOS_MOD_HOOK 'int'
| | `-ConstantExpr 0x15a9c58 <col:32> 'int'
| |   `-IntegerLiteral 0x15a9c38 <col:32> 'int' 31
| |-EnumConstantDecl 0x15a9cf8 <line:202:5, col:32> col:5 LOS_MOD_PM 'int'
| | `-ConstantExpr 0x15a9ce0 <col:32> 'int'
| |   `-IntegerLiteral 0x15a9cc0 <col:32> 'int' 32
| |-EnumConstantDecl 0x15a9d80 <line:203:5, col:32> col:5 LOS_MOD_LMK 'int'
| | `-ConstantExpr 0x15a9d68 <col:32> 'int'
| |   `-IntegerLiteral 0x15a9d48 <col:32> 'int' 33
| |-EnumConstantDecl 0x15a9e08 <line:204:5, col:32> col:5 LOS_MOD_SHELL 'int'
| | `-ConstantExpr 0x15a9df0 <col:32> 'int'
| |   `-IntegerLiteral 0x15a9dd0 <col:32> 'int' 49
| |-EnumConstantDecl 0x15a9e90 <line:205:5, col:32> col:5 LOS_MOD_SIGNAL 'int'
| | `-ConstantExpr 0x15a9e78 <col:32> 'int'
| |   `-IntegerLiteral 0x15a9e58 <col:32> 'int' 50
| `-EnumConstantDecl 0x15a9ee0 <line:206:5> col:5 LOS_MOD_BUTT 'int'
|-FunctionDecl 0x15aa198 <main/los_tick.h:100:1, col:35> col:15 LOS_SysCycleGet 'UINT64 (void)' extern
| `-FullComment 0x15d1470 <line:82:3, line:99:3>
|   |-ParagraphComment 0x15d0ad0 <line:82:3, col:4>
|   | `-TextComment 0x15d0aa0 <col:3, col:4> Text="  "
|   |-VerbatimLineComment 0x15d0af0 <col:5, col:23> Text="  los_tick"
|   |-ParagraphComment 0x15d0b60 <line:83:3, col:4>
|   | `-TextComment 0x15d0b30 <col:3, col:4> Text="  "
|   |-BlockCommandComment 0x15d0b80 <col:5, col:45> Name="brief"
|   | `-ParagraphComment 0x15d0be0 <col:11, col:45>
|   |   `-TextComment 0x15d0bb0 <col:11, col:45> Text=": System timer cycles get function."
|   |-ParagraphComment 0x15d0c30 <line:85:3, col:4>
|   | `-TextComment 0x15d0c00 <col:3, col:4> Text="  "
|   |-BlockCommandComment 0x15d0c50 <col:5, line:86:48> Name="par"
|   | `-ParagraphComment 0x15d0cd0 <line:85:9, line:86:48>
|   |   |-TextComment 0x15d0c80 <line:85:9, col:21> Text=" Description:"
|   |   `-TextComment 0x15d0ca0 <line:86:3, col:48> Text="  This API is used to get system timer cycles."
|   |-ParagraphComment 0x15d0d30 <line:88:3>
|   | `-TextComment 0x15d0cf0 <col:3> Text=" "
|   |-BlockCommandComment 0x15d0d50 <col:4, line:89:26> Name="attention"
|   | `-ParagraphComment 0x15d0ef0 <line:88:14, line:89:26>
|   |   |-TextComment 0x15d0d80 <line:88:14> Text=":"
|   |   |-TextComment 0x15d0da0 <line:89:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d0dc0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15d0e00 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15d0e40 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0x15d0e60 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0x15d0e90 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0x15d0f40 <line:91:3>
|   | `-TextComment 0x15d0f10 <col:3> Text=" "
|   |-ParamCommandComment 0x15d0f60 <col:4, col:16> [in] implicitly Param=":"
|   | `-ParagraphComment 0x15d0ff0 <col:11, col:16>
|   |   `-TextComment 0x15d0fc0 <col:11, col:16> Text=" None."
|   |-ParagraphComment 0x15d1040 <line:93:3>
|   | `-TextComment 0x15d1010 <col:3> Text=" "
|   |-BlockCommandComment 0x15d1060 <col:4, col:34> Name="retval"
|   | `-ParagraphComment 0x15d10c0 <col:11, col:34>
|   |   `-TextComment 0x15d1090 <col:11, col:34> Text=": current system cycles."
|   |-ParagraphComment 0x15d1110 <line:95:3>
|   | `-TextComment 0x15d10e0 <col:3> Text=" "
|   |-BlockCommandComment 0x15d1130 <col:4, line:97:3> Name="par"
|   | `-ParagraphComment 0x15d1300 <line:95:8, line:97:3>
|   |   |-TextComment 0x15d1160 <line:95:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x15d1180 <line:96:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d11a0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15d11e0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15d1220 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15d1240 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x15d1270 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x15d12a0 <line:97:3> Text=" "
|   |-BlockCommandComment 0x15d1320 <col:4, col:13> Name="see"
|   | `-ParagraphComment 0x15d1380 <col:8, col:13>
|   |   `-TextComment 0x15d1350 <col:8, col:13> Text=" None."
|   `-ParagraphComment 0x15d13d0 <line:99:3>
|     `-TextComment 0x15d13a0 <col:3> Text=" "
|-VarDecl 0x15aa2a8 <line:112:1, col:18> col:18 g_ticksPerSec 'UINT32':'unsigned int' extern
| `-FullComment 0x15d15e0 <line:109:3, line:110:19>
|   |-ParagraphComment 0x15d1510 <line:109:3>
|   | `-TextComment 0x15d14e0 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d1530 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x15d15a0 <line:110:3, col:19>
|     `-TextComment 0x15d1570 <col:3, col:19> Text=" Ticks per second"
|-VarDecl 0x15aa348 <line:118:1, col:18> col:18 g_uwCyclePerSec 'UINT32':'unsigned int' extern
| `-FullComment 0x15d1750 <line:115:3, line:116:20>
|   |-ParagraphComment 0x15d1680 <line:115:3>
|   | `-TextComment 0x15d1650 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d16a0 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x15d1710 <line:116:3, col:20>
|     `-TextComment 0x15d16e0 <col:3, col:20> Text=" Cycles per Second"
|-VarDecl 0x15aa3e8 <line:124:1, col:18> col:18 g_cyclesPerTick 'UINT32':'unsigned int' extern
| `-FullComment 0x15d18c0 <line:121:3, line:122:18>
|   |-ParagraphComment 0x15d17f0 <line:121:3>
|   | `-TextComment 0x15d17c0 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d1810 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x15d1880 <line:122:3, col:18>
|     `-TextComment 0x15d1850 <col:3, col:18> Text=" Cycles per Tick"
|-VarDecl 0x15aa488 <line:130:1, col:18> col:18 used g_sysClock 'UINT32':'unsigned int' extern
| `-FullComment 0x15d1a30 <line:127:3, line:128:15>
|   |-ParagraphComment 0x15d1960 <line:127:3>
|   | `-TextComment 0x15d1930 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d1980 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x15d19f0 <line:128:3, col:15>
|     `-TextComment 0x15d19c0 <col:3, col:15> Text=" System Clock"
|-RecordDecl 0x15aa6c8 <line:244:9, line:252:1> line:244:16 struct TagSysTime definition
| |-FullComment 0x15d1ba0 <line:241:3, line:242:25>
| | |-ParagraphComment 0x15d1ad0 <line:241:3>
| | | `-TextComment 0x15d1aa0 <col:3> Text=" "
| | |-VerbatimLineComment 0x15d1af0 <col:4, col:21> Text=" los_tick"
| | `-ParagraphComment 0x15d1b60 <line:242:3, col:25>
| |   `-TextComment 0x15d1b30 <col:3, col:25> Text=" system time structure."
| |-FieldDecl 0x15aa780 <line:245:5, col:13> col:13 uwYear 'UINT16':'unsigned short'
| | `-FullComment 0x15d1c70 <col:28, col:61>
| |   `-ParagraphComment 0x15d1c40 <col:28, col:61>
| |     `-TextComment 0x15d1c10 <col:28, col:61> Text=" value 1970 ~ 2038 or 1970 ~ 2100 "
| |-FieldDecl 0x15aa808 <line:246:5, col:13> col:13 ucMonth 'UINT8':'unsigned char'
| | `-FullComment 0x15d1d60 <col:28, col:41>
| |   `-ParagraphComment 0x15d1d30 <col:28, col:41>
| |     `-TextComment 0x15d1ce0 <col:28, col:41> Text=" value 1 - 12 "
| |-FieldDecl 0x15aa898 <line:247:5, col:13> col:13 ucDay 'UINT8':'unsigned char'
| | `-FullComment 0x15d1e30 <col:28, col:41>
| |   `-ParagraphComment 0x15d1e00 <col:28, col:41>
| |     `-TextComment 0x15d1dd0 <col:28, col:41> Text=" value 1 - 31 "
| |-FieldDecl 0x15aa928 <line:248:5, col:13> col:13 ucHour 'UINT8':'unsigned char'
| | `-FullComment 0x15d1f00 <col:28, col:41>
| |   `-ParagraphComment 0x15d1ed0 <col:28, col:41>
| |     `-TextComment 0x15d1ea0 <col:28, col:41> Text=" value 0 - 23 "
| |-FieldDecl 0x15aa9b8 <line:249:5, col:13> col:13 ucMinute 'UINT8':'unsigned char'
| | `-FullComment 0x15d1fd0 <col:28, col:41>
| |   `-ParagraphComment 0x15d1fa0 <col:28, col:41>
| |     `-TextComment 0x15d1f70 <col:28, col:41> Text=" value 0 - 59 "
| |-FieldDecl 0x15aaa48 <line:250:5, col:13> col:13 ucSecond 'UINT8':'unsigned char'
| | `-FullComment 0x15d20a0 <col:28, col:41>
| |   `-ParagraphComment 0x15d2070 <col:28, col:41>
| |     `-TextComment 0x15d2040 <col:28, col:41> Text=" value 0 - 59 "
| `-FieldDecl 0x15aaad8 <line:251:5, col:13> col:13 ucWeek 'UINT8':'unsigned char'
|   `-FullComment 0x15d2170 <col:28, col:41>
|     `-ParagraphComment 0x15d2140 <col:28, col:41>
|       `-TextComment 0x15d2110 <col:28, col:41> Text=" value 0 - 6  "
|-TypedefDecl 0x15aee88 <line:244:1, line:252:3> col:3 SYS_TIME_S 'struct TagSysTime':'struct TagSysTime'
| |-ElaboratedType 0x15aee30 'struct TagSysTime' sugar
| | `-RecordType 0x15aa750 'struct TagSysTime'
| |   `-Record 0x15aa6c8 'TagSysTime'
| `-FullComment 0x15d22e0 <line:241:3, line:242:25>
|   |-ParagraphComment 0x15d2210 <line:241:3>
|   | `-TextComment 0x15d21e0 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d2230 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x15d22a0 <line:242:3, col:25>
|     `-TextComment 0x15d2270 <col:3, col:25> Text=" system time structure."
|-FunctionDecl 0x15aef98 <line:254:1, col:39> col:8 OsTickTimerReload 'UINT64 (UINT64)'
| `-ParmVarDecl 0x15aef08 <col:26, col:33> col:33 period 'UINT64':'unsigned long long'
|-FunctionDecl 0x15af0d8 <line:260:1, col:28> col:8 OsTickTimerInit 'UINT32 (void)'
|-FunctionDecl 0x15af278 <main/los_compiler.h:327:23, main/los_tick.h:262:48> col:6 OsTickSysTimerStartTimeSet 'void (UINT64)'
| `-ParmVarDecl 0x15af188 <col:33, col:40> col:40 currTime 'UINT64':'unsigned long long'
|-FunctionDecl 0x15af3e0 <line:282:1, col:36> col:15 LOS_TickCountGet 'UINT64 (void)' extern
| `-FullComment 0x15d2c60 <line:265:3, line:280:12>
|   |-ParagraphComment 0x15d2380 <line:265:3>
|   | `-TextComment 0x15d2350 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d23a0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x15d2410 <line:266:3>
|   | `-TextComment 0x15d23e0 <col:3> Text=" "
|   |-BlockCommandComment 0x15d2430 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0x15d2490 <col:10, col:37>
|   |   `-TextComment 0x15d2460 <col:10, col:37> Text=" Obtain the number of Ticks."
|   |-ParagraphComment 0x15d24e0 <line:268:3>
|   | `-TextComment 0x15d24b0 <col:3> Text=" "
|   |-BlockCommandComment 0x15d2500 <col:4, line:270:3> Name="par"
|   | `-ParagraphComment 0x15d25b0 <line:268:8, line:270:3>
|   |   |-TextComment 0x15d2530 <line:268:8, col:20> Text=" Description:"
|   |   |-TextComment 0x15d2550 <line:269:3, col:50> Text=" This API is used to obtain the number of Ticks."
|   |   `-TextComment 0x15d2570 <line:270:3> Text=" "
|   |-BlockCommandComment 0x15d25d0 <col:4, line:273:8> Name="attention"
|   | `-ParagraphComment 0x15d27a0 <line:271:3, line:273:8>
|   |   |-TextComment 0x15d2600 <line:271:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d2620 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x15d2660 <line:272:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d2680 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15d26c0 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0x15d26e0 <col:12, col:16> Name="li"
|   |   |-TextComment 0x15d2710 <line:273:3> Text=" "
|   |   `-HTMLEndTagComment 0x15d2730 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x15d27f0 <line:275:3>
|   | `-TextComment 0x15d27c0 <col:3> Text=" "
|   |-ParamCommandComment 0x15d2810 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0x15d2870 <<invalid sloc>>
|   |-ParagraphComment 0x15d28c0 <line:277:3>
|   | `-TextComment 0x15d2890 <col:3> Text=" "
|   |-BlockCommandComment 0x15d28e0 <col:4, line:278:3> Name="retval"
|   | `-ParagraphComment 0x15d2960 <line:277:11, line:278:3>
|   |   |-TextComment 0x15d2910 <line:277:11, col:38> Text=" UINT64 The number of Ticks."
|   |   `-TextComment 0x15d2930 <line:278:3> Text=" "
|   |-BlockCommandComment 0x15d2980 <col:4, line:280:3> Name="par"
|   | `-ParagraphComment 0x15d2b50 <line:278:8, line:280:3>
|   |   |-TextComment 0x15d29b0 <line:278:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x15d29d0 <line:279:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d29f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15d2a30 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15d2a70 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15d2a90 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x15d2ac0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x15d2af0 <line:280:3> Text=" "
|   `-BlockCommandComment 0x15d2b70 <col:4, col:12> Name="see"
|     `-ParagraphComment 0x15d2bd0 <col:8, col:12>
|       `-TextComment 0x15d2ba0 <col:8, col:12> Text=" None"
|-FunctionDecl 0x15af540 <line:302:1, col:39> col:15 LOS_CyclePerTickGet 'UINT32 (void)' extern
| `-FullComment 0x15d3600 <line:285:3, line:300:12>
|   |-ParagraphComment 0x15d2d00 <line:285:3>
|   | `-TextComment 0x15d2cd0 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d2d40 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x15d2db0 <line:286:3>
|   | `-TextComment 0x15d2d80 <col:3> Text=" "
|   |-BlockCommandComment 0x15d2dd0 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0x15d2e30 <col:10, col:52>
|   |   `-TextComment 0x15d2e00 <col:10, col:52> Text=" Obtain the number of cycles in one second."
|   |-ParagraphComment 0x15d2e80 <line:288:3>
|   | `-TextComment 0x15d2e50 <col:3> Text=" "
|   |-BlockCommandComment 0x15d2ea0 <col:4, line:290:3> Name="par"
|   | `-ParagraphComment 0x15d2f50 <line:288:8, line:290:3>
|   |   |-TextComment 0x15d2ed0 <line:288:8, col:20> Text=" Description:"
|   |   |-TextComment 0x15d2ef0 <line:289:3, col:65> Text=" This API is used to obtain the number of cycles in one second."
|   |   `-TextComment 0x15d2f10 <line:290:3> Text=" "
|   |-BlockCommandComment 0x15d2f70 <col:4, line:293:8> Name="attention"
|   | `-ParagraphComment 0x15d3140 <line:291:3, line:293:8>
|   |   |-TextComment 0x15d2fa0 <line:291:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d2fc0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x15d3000 <line:292:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d3020 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15d3060 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0x15d3080 <col:12, col:16> Name="li"
|   |   |-TextComment 0x15d30b0 <line:293:3> Text=" "
|   |   `-HTMLEndTagComment 0x15d30d0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x15d3190 <line:295:3>
|   | `-TextComment 0x15d3160 <col:3> Text=" "
|   |-ParamCommandComment 0x15d31b0 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0x15d3210 <<invalid sloc>>
|   |-ParagraphComment 0x15d3260 <line:297:3>
|   | `-TextComment 0x15d3230 <col:3> Text=" "
|   |-BlockCommandComment 0x15d3280 <col:4, line:298:3> Name="retval"
|   | `-ParagraphComment 0x15d3300 <line:297:11, line:298:3>
|   |   |-TextComment 0x15d32b0 <line:297:11, col:58> Text=" UINT32 Number of cycles obtained in one second."
|   |   `-TextComment 0x15d32d0 <line:298:3> Text=" "
|   |-BlockCommandComment 0x15d3320 <col:4, line:300:3> Name="par"
|   | `-ParagraphComment 0x15d34f0 <line:298:8, line:300:3>
|   |   |-TextComment 0x15d3350 <line:298:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x15d3370 <line:299:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d3390 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15d33d0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15d3410 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15d3430 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x15d3460 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x15d3490 <line:300:3> Text=" "
|   `-BlockCommandComment 0x15d3510 <col:4, col:12> Name="see"
|     `-ParagraphComment 0x15d3570 <col:8, col:12>
|       `-TextComment 0x15d3540 <col:8, col:12> Text=" None"
|-FunctionDecl 0x15af6d8 <line:323:1, col:39> col:15 LOS_Tick2MS 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x15af618 <col:27, col:34> col:34 ticks 'UINT32':'unsigned int'
| `-FullComment 0x15d4000 <line:305:3, line:321:19>
|   |-ParagraphComment 0x15d36a0 <line:305:3>
|   | `-TextComment 0x15d3670 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d36c0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x15d3730 <line:306:3>
|   | `-TextComment 0x15d3700 <col:3> Text=" "
|   |-BlockCommandComment 0x15d3750 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0x15d37b0 <col:10, col:40>
|   |   `-TextComment 0x15d3780 <col:10, col:40> Text=" Convert Ticks to milliseconds."
|   |-ParagraphComment 0x15d3800 <line:308:3>
|   | `-TextComment 0x15d37d0 <col:3> Text=" "
|   |-BlockCommandComment 0x15d3820 <col:4, line:310:3> Name="par"
|   | `-ParagraphComment 0x15d38d0 <line:308:8, line:310:3>
|   |   |-TextComment 0x15d3850 <line:308:8, col:20> Text=" Description:"
|   |   |-TextComment 0x15d3870 <line:309:3, col:53> Text=" This API is used to convert Ticks to milliseconds."
|   |   `-TextComment 0x15d3890 <line:310:3> Text=" "
|   |-BlockCommandComment 0x15d38f0 <col:4, line:313:8> Name="attention"
|   | `-ParagraphComment 0x15d3ac0 <line:311:3, line:313:8>
|   |   |-TextComment 0x15d3920 <line:311:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d3940 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x15d3980 <line:312:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d39a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15d39e0 <col:8, col:76> Text="The number of milliseconds obtained through the conversion is 32-bit."
|   |   |-HTMLEndTagComment 0x15d3a00 <col:77, col:81> Name="li"
|   |   |-TextComment 0x15d3a30 <line:313:3> Text=" "
|   |   `-HTMLEndTagComment 0x15d3a50 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x15d3b10 <line:315:3>
|   | `-TextComment 0x15d3ae0 <col:3> Text=" "
|   |-ParamCommandComment 0x15d3b30 <col:4, col:76> [in] implicitly Param="ticks" ParamIndex=0
|   | `-ParagraphComment 0x15d3bc0 <col:17, col:76>
|   |   `-TextComment 0x15d3b90 <col:17, col:76> Text="  [IN] Number of Ticks. The value range is (0,OS_SYS_CLOCK)."
|   |-ParagraphComment 0x15d3c10 <line:317:3>
|   | `-TextComment 0x15d3be0 <col:3> Text=" "
|   |-BlockCommandComment 0x15d3c30 <col:4, line:319:3> Name="retval"
|   | `-ParagraphComment 0x15d3ce0 <line:317:11, line:319:3>
|   |   |-TextComment 0x15d3c60 <line:317:11, col:109> Text=" UINT32 Number of milliseconds obtained through the conversion. Ticks are successfully converted to"
|   |   |-TextComment 0x15d3c80 <line:318:3, col:16> Text=" milliseconds."
|   |   `-TextComment 0x15d3ca0 <line:319:3> Text=" "
|   |-BlockCommandComment 0x15d3d00 <col:4, line:321:3> Name="par"
|   | `-ParagraphComment 0x15d3ef0 <line:319:8, line:321:3>
|   |   |-TextComment 0x15d3d50 <line:319:8, col:20> Text="  Dependency:"
|   |   |-TextComment 0x15d3d70 <line:320:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d3d90 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15d3dd0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15d3e10 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15d3e30 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x15d3e60 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x15d3e90 <line:321:3> Text=" "
|   `-BlockCommandComment 0x15d3f10 <col:4, col:19> Name="see"
|     `-ParagraphComment 0x15d3f70 <col:8, col:19>
|       `-TextComment 0x15d3f40 <col:8, col:19> Text=" LOS_MS2Tick"
|-FunctionDecl 0x15af848 <line:344:1, col:42> col:15 LOS_MS2Tick 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x15af7b8 <col:27, col:34> col:34 millisec 'UINT32':'unsigned int'
| `-FullComment 0x15d49d0 <line:326:3, line:342:19>
|   |-ParagraphComment 0x15d40a0 <line:326:3>
|   | `-TextComment 0x15d4070 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d40c0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x15d4130 <line:327:3>
|   | `-TextComment 0x15d4100 <col:3> Text=" "
|   |-BlockCommandComment 0x15d4150 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0x15d41b0 <col:10, col:40>
|   |   `-TextComment 0x15d4180 <col:10, col:40> Text=" Convert milliseconds to Ticks."
|   |-ParagraphComment 0x15d4200 <line:329:3>
|   | `-TextComment 0x15d41d0 <col:3> Text=" "
|   |-BlockCommandComment 0x15d4220 <col:4, line:331:3> Name="par"
|   | `-ParagraphComment 0x15d42d0 <line:329:8, line:331:3>
|   |   |-TextComment 0x15d4250 <line:329:8, col:20> Text=" Description:"
|   |   |-TextComment 0x15d4270 <line:330:3, col:53> Text=" This API is used to convert milliseconds to Ticks."
|   |   `-TextComment 0x15d4290 <line:331:3> Text=" "
|   |-BlockCommandComment 0x15d42f0 <col:4, line:335:8> Name="attention"
|   | `-ParagraphComment 0x15d44e0 <line:332:3, line:335:8>
|   |   |-TextComment 0x15d4320 <line:332:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d4340 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x15d4380 <line:333:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d43a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15d43e0 <col:8, col:116> Text="If the parameter passed in is equal to 0xFFFFFFFF, the retval is 0xFFFFFFFF. Pay attention to the value to be"
|   |   |-TextComment 0x15d4400 <line:334:3, col:45> Text=" converted because data possibly overflows."
|   |   |-HTMLEndTagComment 0x15d4420 <col:46, col:50> Name="li"
|   |   |-TextComment 0x15d4450 <line:335:3> Text=" "
|   |   `-HTMLEndTagComment 0x15d4470 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x15d4530 <line:337:3>
|   | `-TextComment 0x15d4500 <col:3> Text=" "
|   |-ParamCommandComment 0x15d4550 <col:4, col:49> [in] implicitly Param="millisec" ParamIndex=0
|   | `-ParagraphComment 0x15d45e0 <col:20, col:49>
|   |   `-TextComment 0x15d45b0 <col:20, col:49> Text="  [IN] Number of milliseconds."
|   |-ParagraphComment 0x15d4630 <line:339:3>
|   | `-TextComment 0x15d4600 <col:3> Text=" "
|   |-BlockCommandComment 0x15d4650 <col:4, line:340:3> Name="retval"
|   | `-ParagraphComment 0x15d46d0 <line:339:11, line:340:3>
|   |   |-TextComment 0x15d4680 <line:339:11, col:66> Text=" UINT32 Number of Ticks obtained through the conversion."
|   |   `-TextComment 0x15d46a0 <line:340:3> Text=" "
|   |-BlockCommandComment 0x15d46f0 <col:4, line:342:3> Name="par"
|   | `-ParagraphComment 0x15d48c0 <line:340:8, line:342:3>
|   |   |-TextComment 0x15d4720 <line:340:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x15d4740 <line:341:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d4760 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15d47a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15d47e0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15d4800 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x15d4830 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x15d4860 <line:342:3> Text=" "
|   `-BlockCommandComment 0x15d48e0 <col:4, col:19> Name="see"
|     `-ParagraphComment 0x15d4940 <col:8, col:19>
|       `-TextComment 0x15d4910 <col:8, col:19> Text=" LOS_Tick2MS"
|-FunctionDecl 0x15afb18 <line:362:1, col:96> col:15 LOS_TickTimerRegister 'UINT32 (const ArchTickTimer *, const HWI_PROC_FUNC)' extern
| |-ParmVarDecl 0x15af988 <col:37, col:58> col:58 timer 'const ArchTickTimer *'
| |-ParmVarDecl 0x15afa00 <col:65, col:85> col:85 tickHandler 'const HWI_PROC_FUNC':'void (*const)(void)'
| `-FullComment 0x15d52a0 <line:347:3, line:360:7>
|   |-ParagraphComment 0x15d4a70 <line:347:3>
|   | `-TextComment 0x15d4a40 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d4a90 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x15d4b00 <line:348:3>
|   | `-TextComment 0x15d4ad0 <col:3> Text=" "
|   |-BlockCommandComment 0x15d4b20 <col:4, col:47> Name="brief"
|   | `-ParagraphComment 0x15d4b80 <col:10, col:47>
|   |   `-TextComment 0x15d4b50 <col:10, col:47> Text=" Re-initializes the system tick timer."
|   |-ParagraphComment 0x15d4bd0 <line:350:3>
|   | `-TextComment 0x15d4ba0 <col:3> Text=" "
|   |-BlockCommandComment 0x15d4bf0 <col:4, line:352:3> Name="par"
|   | `-ParagraphComment 0x15d4ca0 <line:350:8, line:352:3>
|   |   |-TextComment 0x15d4c20 <line:350:8, col:20> Text=" Description:"
|   |   |-TextComment 0x15d4c40 <line:351:3, col:59> Text=" This API is used to re-initialize the system Tick timer."
|   |   `-TextComment 0x15d4c60 <line:352:3> Text=" "
|   |-BlockCommandComment 0x15d4cc0 <col:4, col:13> Name="attention"
|   | `-ParagraphComment 0x15d4cf0 <<invalid sloc>>
|   |-ParagraphComment 0x15d4d60 <line:354:3>
|   | `-TextComment 0x15d4d10 <col:3> Text=" "
|   |-ParamCommandComment 0x15d4d80 <col:4, line:355:3> [in] implicitly Param="timer" ParamIndex=0
|   | `-ParagraphComment 0x15d4e30 <line:354:16, line:355:3>
|   |   |-TextComment 0x15d4de0 <line:354:16, col:51> Text="        [IN] Specify the tick timer."
|   |   `-TextComment 0x15d4e00 <line:355:3> Text=" "
|   |-ParamCommandComment 0x15d4e50 <col:4, col:79> [in] implicitly Param="tickHandler" ParamIndex=1
|   | `-ParagraphComment 0x15d4ee0 <col:22, col:79>
|   |   `-TextComment 0x15d4eb0 <col:22, col:79> Text="  [IN] Tick Interrupts the execution of the hook function."
|   |-ParagraphComment 0x15d4f30 <line:357:3>
|   | `-TextComment 0x15d4f00 <col:3> Text=" "
|   |-BlockCommandComment 0x15d4f50 <col:4, line:358:3> Name="retval"
|   | `-ParagraphComment 0x15d4fd0 <line:357:11, line:358:3>
|   |   |-TextComment 0x15d4f80 <line:357:11, col:32> Text=" LOS_OK or Error code."
|   |   `-TextComment 0x15d4fa0 <line:358:3> Text=" "
|   |-BlockCommandComment 0x15d4ff0 <col:4, line:360:3> Name="par"
|   | `-ParagraphComment 0x15d51c0 <line:358:8, line:360:3>
|   |   |-TextComment 0x15d5020 <line:358:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x15d5040 <line:359:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d5060 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15d50a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15d50e0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15d5100 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x15d5130 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x15d5160 <line:360:3> Text=" "
|   `-BlockCommandComment 0x15d51e0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x15d5210 <<invalid sloc>>
|-FunctionDecl 0x15afc68 <line:381:1, col:43> col:13 LOS_UDelay 'void (UINT64)' extern
| `-ParmVarDecl 0x15afbd8 <col:24, col:31> col:31 microseconds 'UINT64':'unsigned long long'
|-FunctionDecl 0x15b0f90 <line:400:1, col:39> col:13 LOS_MDelay 'void (UINT32)' extern
| `-ParmVarDecl 0x15afd20 <col:24, col:31> col:31 millisec 'UINT32':'unsigned int'
|-FunctionDecl 0x15b10d0 <line:419:1, col:35> col:15 LOS_CurrNanosec 'UINT64 (void)' extern
|-FunctionDecl 0x15b1230 <line:440:1, col:31> col:13 OsTickHandler 'void (void)' extern
| `-FullComment 0x15d5c40 <line:422:3, line:438:13>
|   |-ParagraphComment 0x15d5340 <line:422:3>
|   | `-TextComment 0x15d5310 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d5360 <col:4, col:22> Text="  los_tick"
|   |-ParagraphComment 0x15d53d0 <line:423:3>
|   | `-TextComment 0x15d53a0 <col:3> Text=" "
|   |-BlockCommandComment 0x15d53f0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x15d5450 <col:10, col:41>
|   |   `-TextComment 0x15d5420 <col:10, col:41> Text=" Handle the system tick timeout."
|   |-ParagraphComment 0x15d54a0 <line:425:3>
|   | `-TextComment 0x15d5470 <col:3> Text=" "
|   |-BlockCommandComment 0x15d54c0 <col:4, line:426:78> Name="par"
|   | `-ParagraphComment 0x15d5540 <line:425:8, line:426:78>
|   |   |-TextComment 0x15d54f0 <line:425:8, col:20> Text=" Description:"
|   |   `-TextComment 0x15d5510 <line:426:3, col:78> Text=" This API is called when the system tick timeout and triggers the interrupt."
|   |-ParagraphComment 0x15d5590 <line:428:3>
|   | `-TextComment 0x15d5560 <col:3> Text=" "
|   |-BlockCommandComment 0x15d55b0 <col:4, line:431:8> Name="attention"
|   | `-ParagraphComment 0x15d5780 <line:429:3, line:431:8>
|   |   |-TextComment 0x15d55e0 <line:429:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d5600 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x15d5640 <line:430:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d5660 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15d56a0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x15d56c0 <col:13, col:17> Name="li"
|   |   |-TextComment 0x15d56f0 <line:431:3> Text=" "
|   |   `-HTMLEndTagComment 0x15d5710 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x15d57d0 <line:433:3>
|   | `-TextComment 0x15d57a0 <col:3> Text=" "
|   |-ParamCommandComment 0x15d57f0 <col:4, col:15> [in] implicitly Param="none."
|   | `-ParagraphComment 0x15d5850 <<invalid sloc>>
|   |-ParagraphComment 0x15d58a0 <line:435:3>
|   | `-TextComment 0x15d5870 <col:3> Text=" "
|   |-BlockCommandComment 0x15d58c0 <col:4, line:436:3> Name="retval"
|   | `-ParagraphComment 0x15d5940 <line:435:11, line:436:3>
|   |   |-TextComment 0x15d58f0 <line:435:11, col:16> Text=" None."
|   |   `-TextComment 0x15d5910 <line:436:3> Text=" "
|   |-BlockCommandComment 0x15d5960 <col:4, line:438:3> Name="par"
|   | `-ParagraphComment 0x15d5b30 <line:436:8, line:438:3>
|   |   |-TextComment 0x15d5990 <line:436:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x15d59b0 <line:437:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d59d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15d5a10 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15d5a50 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15d5a70 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x15d5aa0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x15d5ad0 <line:438:3> Text=" "
|   `-BlockCommandComment 0x15d5b50 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x15d5bb0 <col:8, col:13>
|       `-TextComment 0x15d5b80 <col:8, col:13> Text=" None."
|-RecordDecl 0x15b12f8 <line:446:9, line:449:1> line:446:16 struct TagCpuTick definition
| |-FullComment 0x15d5dc0 <line:443:3, line:444:33>
| | |-ParagraphComment 0x15d5ce0 <line:443:3>
| | | `-TextComment 0x15d5cb0 <col:3> Text=" "
| | |-VerbatimLineComment 0x15d5d00 <col:4, col:21> Text=" los_tick"
| | `-ParagraphComment 0x15d5d80 <line:444:3, col:33>
| |   `-TextComment 0x15d5d40 <col:3, col:33> Text=" Define the CPU Tick structure."
| |-FieldDecl 0x15b13b0 <line:447:5, col:12> col:12 cntHi 'UINT32':'unsigned int'
| `-FieldDecl 0x15b1410 <line:448:5, col:12> col:12 cntLo 'UINT32':'unsigned int'
|-TypedefDecl 0x15b14b8 <line:446:1, line:449:3> col:3 referenced CpuTick 'struct TagCpuTick':'struct TagCpuTick'
| |-ElaboratedType 0x15b1460 'struct TagCpuTick' sugar
| | `-RecordType 0x15b1380 'struct TagCpuTick'
| |   `-Record 0x15b12f8 'TagCpuTick'
| `-FullComment 0x15d5f30 <line:443:3, line:444:33>
|   |-ParagraphComment 0x15d5e60 <line:443:3>
|   | `-TextComment 0x15d5e30 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d5e80 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x15d5ef0 <line:444:3, col:33>
|     `-TextComment 0x15d5ec0 <col:3, col:33> Text=" Define the CPU Tick structure."
|-FunctionDecl 0x15b1908 <line:510:1, col:72> col:15 OsCpuTick2MS 'UINT32 (CpuTick *, UINT32 *, UINT32 *)' extern
| |-ParmVarDecl 0x15b16f8 <col:28, col:37> col:37 cpuTick 'CpuTick *'
| |-ParmVarDecl 0x15b1770 <col:46, col:54> col:54 msHi 'UINT32 *'
| |-ParmVarDecl 0x15b17e8 <col:60, col:68> col:68 msLo 'UINT32 *'
| `-FullComment 0x15d6b30 <line:490:3, line:508:13>
|   |-ParagraphComment 0x15d5fd0 <line:490:3>
|   | `-TextComment 0x15d5fa0 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d5ff0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x15d6060 <line:491:3>
|   | `-TextComment 0x15d6030 <col:3> Text=" "
|   |-BlockCommandComment 0x15d6080 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x15d60e0 <col:10, col:41>
|   |   `-TextComment 0x15d60b0 <col:10, col:41> Text=" Convert cycles to milliseconds."
|   |-ParagraphComment 0x15d6130 <line:493:3>
|   | `-TextComment 0x15d6100 <col:3> Text=" "
|   |-BlockCommandComment 0x15d6150 <col:4, line:495:3> Name="par"
|   | `-ParagraphComment 0x15d6200 <line:493:8, line:495:3>
|   |   |-TextComment 0x15d6180 <line:493:8, col:20> Text=" Description:"
|   |   |-TextComment 0x15d61a0 <line:494:3, col:54> Text=" This API is used to convert cycles to milliseconds."
|   |   `-TextComment 0x15d61c0 <line:495:3> Text=" "
|   |-BlockCommandComment 0x15d6220 <col:4, line:498:8> Name="attention"
|   | `-ParagraphComment 0x15d63f0 <line:496:3, line:498:8>
|   |   |-TextComment 0x15d6250 <line:496:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d6270 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x15d62b0 <line:497:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d62d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15d6310 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x15d6330 <col:13, col:17> Name="li"
|   |   |-TextComment 0x15d6360 <line:498:3> Text=" "
|   |   `-HTMLEndTagComment 0x15d6380 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x15d6440 <line:500:3>
|   | `-TextComment 0x15d6410 <col:3> Text=" "
|   |-ParamCommandComment 0x15d6460 <col:4, line:501:3> [in] implicitly Param="cpuTick" ParamIndex=0
|   | `-ParagraphComment 0x15d6510 <line:500:19, line:501:3>
|   |   |-TextComment 0x15d64c0 <line:500:19, col:47> Text="  [IN]  Number of CPU cycles."
|   |   `-TextComment 0x15d64e0 <line:501:3> Text=" "
|   |-ParamCommandComment 0x15d6530 <col:4, line:502:3> [in] implicitly Param="msHi" ParamIndex=1
|   | `-ParagraphComment 0x15d65e0 <line:501:16, line:502:3>
|   |   |-TextComment 0x15d6590 <line:501:16, col:70> Text="     [OUT] Upper 32 bits of the number of milliseconds."
|   |   `-TextComment 0x15d65b0 <line:502:3> Text=" "
|   |-ParamCommandComment 0x15d6600 <col:4, col:70> [in] implicitly Param="msLo" ParamIndex=2
|   | `-ParagraphComment 0x15d6690 <col:16, col:70>
|   |   `-TextComment 0x15d6660 <col:16, col:70> Text="     [OUT] Lower 32 bits of the number of milliseconds."
|   |-ParagraphComment 0x15d66e0 <line:504:3>
|   | `-TextComment 0x15d66b0 <col:3> Text=" "
|   |-BlockCommandComment 0x15d6700 <col:4, line:505:3> Name="retval"
|   | `-ParagraphComment 0x15d6780 <line:504:11, line:505:3>
|   |   |-TextComment 0x15d6730 <line:504:11, col:68> Text=" #LOS_ERRNO_SYS_PTR_NULL    0x02000011: Invalid parameter."
|   |   `-TextComment 0x15d6750 <line:505:3> Text=" "
|   |-BlockCommandComment 0x15d67a0 <col:4, line:506:3> Name="retval"
|   | `-ParagraphComment 0x15d6820 <line:505:11, line:506:3>
|   |   |-TextComment 0x15d67d0 <line:505:11, col:91> Text=" #LOS_OK                   0:  Cycles are successfully converted to microseconds."
|   |   `-TextComment 0x15d67f0 <line:506:3> Text=" "
|   |-BlockCommandComment 0x15d6840 <col:4, line:508:3> Name="par"
|   | `-ParagraphComment 0x15d6a10 <line:506:8, line:508:3>
|   |   |-TextComment 0x15d6870 <line:506:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x15d6890 <line:507:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d68b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15d68f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15d6930 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15d6950 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x15d6980 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x15d69b0 <line:508:3> Text=" "
|   `-BlockCommandComment 0x15d6a30 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x15d6a90 <col:8, col:13>
|       `-TextComment 0x15d6a60 <col:8, col:13> Text=" None."
|-FunctionDecl 0x15b1b88 <line:533:1, col:72> col:15 OsCpuTick2US 'UINT32 (CpuTick *, UINT32 *, UINT32 *)' extern
| |-ParmVarDecl 0x15b19f8 <col:28, col:37> col:37 cpuTick 'CpuTick *'
| |-ParmVarDecl 0x15b1a70 <col:46, col:54> col:54 usHi 'UINT32 *'
| |-ParmVarDecl 0x15b1ae8 <col:60, col:68> col:68 usLo 'UINT32 *'
| `-FullComment 0x15d7760 <line:513:3, line:531:13>
|   |-ParagraphComment 0x15d6bd0 <line:513:3>
|   | `-TextComment 0x15d6ba0 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d6bf0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x15d6c60 <line:514:3>
|   | `-TextComment 0x15d6c30 <col:3> Text=" "
|   |-BlockCommandComment 0x15d6c80 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x15d6ce0 <col:10, col:41>
|   |   `-TextComment 0x15d6cb0 <col:10, col:41> Text=" Convert cycles to microseconds."
|   |-ParagraphComment 0x15d6d30 <line:516:3>
|   | `-TextComment 0x15d6d00 <col:3> Text=" "
|   |-BlockCommandComment 0x15d6d80 <col:4, line:518:3> Name="par"
|   | `-ParagraphComment 0x15d6e30 <line:516:8, line:518:3>
|   |   |-TextComment 0x15d6db0 <line:516:8, col:20> Text=" Description:"
|   |   |-TextComment 0x15d6dd0 <line:517:3, col:54> Text=" This API is used to convert cycles to microseconds."
|   |   `-TextComment 0x15d6df0 <line:518:3> Text=" "
|   |-BlockCommandComment 0x15d6e50 <col:4, line:521:8> Name="attention"
|   | `-ParagraphComment 0x15d7020 <line:519:3, line:521:8>
|   |   |-TextComment 0x15d6e80 <line:519:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d6ea0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x15d6ee0 <line:520:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d6f00 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15d6f40 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x15d6f60 <col:13, col:17> Name="li"
|   |   |-TextComment 0x15d6f90 <line:521:3> Text=" "
|   |   `-HTMLEndTagComment 0x15d6fb0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x15d7070 <line:523:3>
|   | `-TextComment 0x15d7040 <col:3> Text=" "
|   |-ParamCommandComment 0x15d7090 <col:4, line:524:3> [in] implicitly Param="cpuTick" ParamIndex=0
|   | `-ParagraphComment 0x15d7140 <line:523:19, line:524:3>
|   |   |-TextComment 0x15d70f0 <line:523:19, col:47> Text="  [IN]  Number of CPU cycles."
|   |   `-TextComment 0x15d7110 <line:524:3> Text=" "
|   |-ParamCommandComment 0x15d7160 <col:4, line:525:3> [in] implicitly Param="usHi" ParamIndex=1
|   | `-ParagraphComment 0x15d7210 <line:524:16, line:525:3>
|   |   |-TextComment 0x15d71c0 <line:524:16, col:70> Text="     [OUT] Upper 32 bits of the number of microseconds."
|   |   `-TextComment 0x15d71e0 <line:525:3> Text=" "
|   |-ParamCommandComment 0x15d7230 <col:4, col:70> [in] implicitly Param="usLo" ParamIndex=2
|   | `-ParagraphComment 0x15d72c0 <col:16, col:70>
|   |   `-TextComment 0x15d7290 <col:16, col:70> Text="     [OUT] Lower 32 bits of the number of microseconds."
|   |-ParagraphComment 0x15d7310 <line:527:3>
|   | `-TextComment 0x15d72e0 <col:3> Text=" "
|   |-BlockCommandComment 0x15d7330 <col:4, line:528:3> Name="retval"
|   | `-ParagraphComment 0x15d73b0 <line:527:11, line:528:3>
|   |   |-TextComment 0x15d7360 <line:527:11, col:68> Text=" #LOS_ERRNO_SYS_PTR_NULL    0x02000011: Invalid parameter."
|   |   `-TextComment 0x15d7380 <line:528:3> Text=" "
|   |-BlockCommandComment 0x15d73d0 <col:4, line:529:3> Name="retval"
|   | `-ParagraphComment 0x15d7450 <line:528:11, line:529:3>
|   |   |-TextComment 0x15d7400 <line:528:11, col:90> Text=" #LOS_OK                   0: Cycles are successfully converted to microseconds."
|   |   `-TextComment 0x15d7420 <line:529:3> Text=" "
|   |-BlockCommandComment 0x15d7470 <col:4, line:531:3> Name="par"
|   | `-ParagraphComment 0x15d7640 <line:529:8, line:531:3>
|   |   |-TextComment 0x15d74a0 <line:529:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x15d74c0 <line:530:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d74e0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15d7520 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15d7560 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15d7580 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x15d75b0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x15d75e0 <line:531:3> Text=" "
|   `-BlockCommandComment 0x15d7660 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x15d76c0 <col:8, col:13>
|       `-TextComment 0x15d7690 <col:8, col:13> Text=" None."
|-FunctionDecl 0x15b1d08 <main/los_compiler.h:130:23, main/los_tick.h:556:1> line:553:22 OsCycle2MS 'UINT64 (UINT64)' static inline
| |-ParmVarDecl 0x15b1c78 <col:33, col:40> col:40 used cycle 'UINT64':'unsigned long long'
| |-CompoundStmt 0x15b3298 <line:554:1, line:556:1>
| | `-ReturnStmt 0x15b1f68 <line:555:5, col:66>
| |   `-CStyleCastExpr 0x15b1f40 <col:12, col:66> 'UINT64':'unsigned long long' <NoOp>
| |     `-ParenExpr 0x15b1f20 <col:20, col:66> 'unsigned long long'
| |       `-ParenExpr 0x15b1ed0 <col:21, col:65> 'unsigned long long'
| |         `-BinaryOperator 0x15b1eb0 <col:22, col:64> 'unsigned long long' '/'
| |           |-ImplicitCastExpr 0x15b1e80 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
| |           | `-DeclRefExpr 0x15b1db0 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0x15b1c78 'cycle' 'UINT64':'unsigned long long'
| |           `-ImplicitCastExpr 0x15b1e98 <col:30, col:64> 'unsigned long long' <IntegralCast>
| |             `-ParenExpr 0x15b1e60 <col:30, col:64> 'unsigned int'
| |               `-BinaryOperator 0x15b1e40 <col:31, line:461:32> 'unsigned int' '/'
| |                 |-ImplicitCastExpr 0x15b1e10 <line:555:31> 'UINT32':'unsigned int' <LValueToRValue>
| |                 | `-DeclRefExpr 0x15b1dd0 <col:31> 'UINT32':'unsigned int' lvalue Var 0x15aa488 'g_sysClock' 'UINT32':'unsigned int'
| |                 `-ImplicitCastExpr 0x15b1e28 <line:461:32> 'unsigned int' <IntegralCast>
| |                   `-IntegerLiteral 0x15b1df0 <col:32> 'int' 1000
| `-FullComment 0x15d8130 <line:536:3, line:551:13>
|   |-ParagraphComment 0x15d7800 <line:536:3>
|   | `-TextComment 0x15d77d0 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d7820 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x15d7890 <line:537:3>
|   | `-TextComment 0x15d7860 <col:3> Text=" "
|   |-BlockCommandComment 0x15d78b0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x15d7910 <col:10, col:41>
|   |   `-TextComment 0x15d78e0 <col:10, col:41> Text=" Convert cycles to milliseconds."
|   |-ParagraphComment 0x15d7960 <line:539:3>
|   | `-TextComment 0x15d7930 <col:3> Text=" "
|   |-BlockCommandComment 0x15d7980 <col:4, line:541:3> Name="par"
|   | `-ParagraphComment 0x15d7a30 <line:539:8, line:541:3>
|   |   |-TextComment 0x15d79b0 <line:539:8, col:20> Text=" Description:"
|   |   |-TextComment 0x15d79d0 <line:540:3, col:54> Text=" This API is used to convert cycles to milliseconds."
|   |   `-TextComment 0x15d79f0 <line:541:3> Text=" "
|   |-BlockCommandComment 0x15d7a50 <col:4, line:544:8> Name="attention"
|   | `-ParagraphComment 0x15d7c20 <line:542:3, line:544:8>
|   |   |-TextComment 0x15d7a80 <line:542:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d7aa0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x15d7ae0 <line:543:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d7b00 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15d7b40 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x15d7b60 <col:13, col:17> Name="li"
|   |   |-TextComment 0x15d7b90 <line:544:3> Text=" "
|   |   `-HTMLEndTagComment 0x15d7bb0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x15d7c70 <line:546:3>
|   | `-TextComment 0x15d7c40 <col:3> Text=" "
|   |-ParamCommandComment 0x15d7c90 <col:4, col:43> [in] implicitly Param="cycle" ParamIndex=0
|   | `-ParagraphComment 0x15d7d20 <col:17, col:43>
|   |   `-TextComment 0x15d7cf0 <col:17, col:43> Text="     [IN] Number of cycles."
|   |-ParagraphComment 0x15d7d90 <line:548:3>
|   | `-TextComment 0x15d7d40 <col:3> Text=" "
|   |-BlockCommandComment 0x15d7db0 <col:4, line:549:3> Name="retval"
|   | `-ParagraphComment 0x15d7e30 <line:548:11, line:549:3>
|   |   |-TextComment 0x15d7de0 <line:548:11, col:120> Text=" Number of milliseconds obtained through the conversion.    Cycles are successfully converted to milliseconds."
|   |   `-TextComment 0x15d7e00 <line:549:3> Text=" "
|   |-BlockCommandComment 0x15d7e50 <col:4, line:551:3> Name="par"
|   | `-ParagraphComment 0x15d8020 <line:549:8, line:551:3>
|   |   |-TextComment 0x15d7e80 <line:549:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x15d7ea0 <line:550:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d7ec0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15d7f00 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15d7f40 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15d7f60 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x15d7f90 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x15d7fc0 <line:551:3> Text=" "
|   `-BlockCommandComment 0x15d8040 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x15d80a0 <col:8, col:13>
|       `-TextComment 0x15d8070 <col:8, col:13> Text=" None."
|-FunctionDecl 0x15b3350 <main/los_compiler.h:130:23, main/los_tick.h:583:1> line:576:22 OsCycle2US 'UINT64 (UINT64)' static inline
| |-ParmVarDecl 0x15b32c0 <col:33, col:40> col:40 used cycle 'UINT64':'unsigned long long'
| |-CompoundStmt 0x15b3750 <line:577:1, line:583:1>
| | |-DeclStmt 0x15b3518 <line:578:5, col:51>
| | | `-VarDecl 0x15b3408 <col:5, line:467:32> line:578:12 used tmp 'UINT64':'unsigned long long' cinit
| | |   `-ImplicitCastExpr 0x15b3500 <col:18, line:467:32> 'UINT64':'unsigned long long' <IntegralCast>
| | |     `-BinaryOperator 0x15b34e0 <line:578:18, line:467:32> 'unsigned int' '/'
| | |       |-ImplicitCastExpr 0x15b34b0 <line:578:18> 'UINT32':'unsigned int' <LValueToRValue>
| | |       | `-DeclRefExpr 0x15b3470 <col:18> 'UINT32':'unsigned int' lvalue Var 0x15aa488 'g_sysClock' 'UINT32':'unsigned int'
| | |       `-ImplicitCastExpr 0x15b34c8 <line:467:32> 'unsigned int' <IntegralCast>
| | |         `-IntegerLiteral 0x15b3490 <col:32> 'int' 1000000
| | |-IfStmt 0x15b3620 <line:579:5, line:581:5>
| | | |-BinaryOperator 0x15b35a0 <line:579:9, col:16> 'int' '=='
| | | | |-ImplicitCastExpr 0x15b3570 <col:9> 'UINT64':'unsigned long long' <LValueToRValue>
| | | | | `-DeclRefExpr 0x15b3530 <col:9> 'UINT64':'unsigned long long' lvalue Var 0x15b3408 'tmp' 'UINT64':'unsigned long long'
| | | | `-ImplicitCastExpr 0x15b3588 <col:16> 'unsigned long long' <IntegralCast>
| | | |   `-IntegerLiteral 0x15b3550 <col:16> 'int' 0
| | | `-CompoundStmt 0x15b3608 <col:19, line:581:5>
| | |   `-ReturnStmt 0x15b35f8 <line:580:9, col:16>
| | |     `-ImplicitCastExpr 0x15b35e0 <col:16> 'UINT64':'unsigned long long' <IntegralCast>
| | |       `-IntegerLiteral 0x15b35c0 <col:16> 'int' 0
| | `-ReturnStmt 0x15b3740 <line:582:5, col:32>
| |   `-CStyleCastExpr 0x15b3718 <col:12, col:32> 'UINT64':'unsigned long long' <NoOp>
| |     `-ParenExpr 0x15b36f8 <col:20, col:32> 'unsigned long long'
| |       `-BinaryOperator 0x15b36a8 <col:21, col:29> 'unsigned long long' '/'
| |         |-ImplicitCastExpr 0x15b3678 <col:21> 'UINT64':'unsigned long long' <LValueToRValue>
| |         | `-DeclRefExpr 0x15b3638 <col:21> 'UINT64':'unsigned long long' lvalue ParmVar 0x15b32c0 'cycle' 'UINT64':'unsigned long long'
| |         `-ImplicitCastExpr 0x15b3690 <col:29> 'UINT64':'unsigned long long' <LValueToRValue>
| |           `-DeclRefExpr 0x15b3658 <col:29> 'UINT64':'unsigned long long' lvalue Var 0x15b3408 'tmp' 'UINT64':'unsigned long long'
| `-FullComment 0x15d8ae0 <line:559:3, line:574:13>
|   |-ParagraphComment 0x15d81d0 <line:559:3>
|   | `-TextComment 0x15d81a0 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d81f0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x15d8260 <line:560:3>
|   | `-TextComment 0x15d8230 <col:3> Text=" "
|   |-BlockCommandComment 0x15d8280 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x15d82e0 <col:10, col:41>
|   |   `-TextComment 0x15d82b0 <col:10, col:41> Text=" Convert cycles to microseconds."
|   |-ParagraphComment 0x15d8330 <line:562:3>
|   | `-TextComment 0x15d8300 <col:3> Text=" "
|   |-BlockCommandComment 0x15d8350 <col:4, line:564:3> Name="par"
|   | `-ParagraphComment 0x15d8400 <line:562:8, line:564:3>
|   |   |-TextComment 0x15d8380 <line:562:8, col:20> Text=" Description:"
|   |   |-TextComment 0x15d83a0 <line:563:3, col:54> Text=" This API is used to convert cycles to microseconds."
|   |   `-TextComment 0x15d83c0 <line:564:3> Text=" "
|   |-BlockCommandComment 0x15d8420 <col:4, line:567:8> Name="attention"
|   | `-ParagraphComment 0x15d85f0 <line:565:3, line:567:8>
|   |   |-TextComment 0x15d8450 <line:565:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d8470 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x15d84b0 <line:566:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d84d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x15d8510 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x15d8530 <col:13, col:17> Name="li"
|   |   |-TextComment 0x15d8560 <line:567:3> Text=" "
|   |   `-HTMLEndTagComment 0x15d8580 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x15d8640 <line:569:3>
|   | `-TextComment 0x15d8610 <col:3> Text=" "
|   |-ParamCommandComment 0x15d8660 <col:4, col:43> [in] implicitly Param="cycle" ParamIndex=0
|   | `-ParagraphComment 0x15d86f0 <col:17, col:43>
|   |   `-TextComment 0x15d86c0 <col:17, col:43> Text="     [IN] Number of cycles."
|   |-ParagraphComment 0x15d8740 <line:571:3>
|   | `-TextComment 0x15d8710 <col:3> Text=" "
|   |-BlockCommandComment 0x15d8760 <col:4, line:572:3> Name="retval"
|   | `-ParagraphComment 0x15d87e0 <line:571:11, line:572:3>
|   |   |-TextComment 0x15d8790 <line:571:11, col:117> Text=" Number of microseconds obtained through the conversion. Cycles are successfully converted to microseconds."
|   |   `-TextComment 0x15d87b0 <line:572:3> Text=" "
|   |-BlockCommandComment 0x15d8800 <col:4, line:574:3> Name="par"
|   | `-ParagraphComment 0x15d89d0 <line:572:8, line:574:3>
|   |   |-TextComment 0x15d8830 <line:572:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x15d8850 <line:573:3> Text=" "
|   |   |-HTMLStartTagComment 0x15d8870 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x15d88b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x15d88f0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x15d8910 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x15d8940 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x15d8970 <line:574:3> Text=" "
|   `-BlockCommandComment 0x15d89f0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x15d8a50 <col:8, col:13>
|       `-TextComment 0x15d8a20 <col:8, col:13> Text=" None."
|-RecordDecl 0x15b3778 <main/los_arch_interrupt.h:45:9, line:64:1> line:45:9 struct definition
| |-FieldDecl 0x15b3830 <line:46:5, col:12> col:12 pc 'UINT32':'unsigned int'
| |-FieldDecl 0x15b3890 <line:47:5, col:12> col:12 ps 'UINT32':'unsigned int'
| |-FieldDecl 0x15b3978 <line:48:5, col:19> col:12 regA 'UINT32 [16]'
| |-FieldDecl 0x15b39d8 <line:49:5, col:12> col:12 sar 'UINT32':'unsigned int'
| |-FieldDecl 0x15b3a38 <line:50:5, col:12> col:12 excCause 'UINT32':'unsigned int'
| |-FieldDecl 0x15b3a98 <line:51:5, col:12> col:12 excVaddr 'UINT32':'unsigned int'
| |-FieldDecl 0x15b3af8 <line:52:5, col:12> col:12 lbeg 'UINT32':'unsigned int'
| |-FieldDecl 0x15b3b58 <line:53:5, col:12> col:12 lend 'UINT32':'unsigned int'
| |-FieldDecl 0x15b3bb8 <line:54:5, col:12> col:12 lcount 'UINT32':'unsigned int'
| `-FieldDecl 0x15b3cd8 <line:63:5, col:17> col:12 res 'UINT32 [4]'
|-TypedefDecl 0x15b3d88 <line:45:1, line:64:3> col:3 referenced EXC_CONTEXT_S 'struct EXC_CONTEXT_S':'EXC_CONTEXT_S'
| `-ElaboratedType 0x15b3d30 'struct EXC_CONTEXT_S' sugar
|   `-RecordType 0x15b3800 'EXC_CONTEXT_S'
|     `-Record 0x15b3778 ''
|-VarDecl 0x15b3e08 <line:67:1, line:66:47> col:47 _init_start 'CHAR *' extern
|-TypedefDecl 0x15b3f78 <line:102:1, col:38> col:17 HWI_VECTOR_FUNC 'void (**)(void)'
| `-PointerType 0x15b3f20 'void (**)(void)'
|   `-PointerType 0x1593330 'void (*)(void)'
|     `-ParenType 0x15932d0 'void (void)' sugar
|       `-FunctionProtoType 0x15932a0 'void (void)' cdecl
|         `-BuiltinType 0x1512da0 'void'
|-VarDecl 0x15b3fe0 <line:108:1, col:15> col:15 g_intCount 'UINT32':'unsigned int' extern
|-FunctionDecl 0x15b82b0 <line:213:1, col:57> col:13 used OsSetVector 'void (UINT32, HWI_PROC_FUNC)' extern
| |-ParmVarDecl 0x15b4058 <col:25, col:32> col:32 num 'UINT32':'unsigned int'
| `-ParmVarDecl 0x15b40d0 <col:37, col:51> col:51 vector 'HWI_PROC_FUNC':'void (*)(void)'
|-FunctionDecl 0x15b83f8 <main/los_compiler.h:327:23, main/los_arch_interrupt.h:216:23> col:6 HalInterrupt 'void (void)'
|-FunctionDecl 0x15b8530 <main/los_compiler.h:327:23, main/los_arch_interrupt.h:217:31> col:6 HalHwiDefaultHandler 'void (void)'
|-FunctionDecl 0x15b8878 <main/los_compiler.h:327:23, main/los_arch_interrupt.h:218:81> col:6 HalExcHandleEntry 'void (UINTPTR, EXC_CONTEXT_S *, UINT32)'
| |-ParmVarDecl 0x15b85e0 <col:24, col:32> col:32 faultAddr 'UINTPTR':'unsigned int'
| |-ParmVarDecl 0x15b86d8 <col:43, col:58> col:58 excBufAddr 'EXC_CONTEXT_S *'
| `-ParmVarDecl 0x15b8750 <col:70, col:77> col:77 type 'UINT32':'unsigned int'
|-FunctionDecl 0x15b89c8 <main/los_compiler.h:327:23, main/los_arch_interrupt.h:219:21> col:6 HalHwiInit 'void (void)'
|-RecordDecl 0x15b8a98 <line:228:9, line:236:1> line:228:16 struct TagExcInfo definition
| |-FullComment 0x15d8d00 <line:222:3, line:227:1>
| | |-ParagraphComment 0x15d8b80 <line:222:3>
| | | `-TextComment 0x15d8b50 <col:3> Text=" "
| | |-VerbatimLineComment 0x15d8ba0 <col:4, col:20> Text=" los_exc"
| | |-ParagraphComment 0x15d8c10 <line:223:3, col:34>
| | | `-TextComment 0x15d8be0 <col:3, col:34> Text=" Exception information structure"
| | |-ParagraphComment 0x15d8c60 <line:225:3, col:98>
| | | `-TextComment 0x15d8c30 <col:3, col:98> Text=" Description: Exception information saved when an exception is triggered on the Xtensa platform."
| | `-ParagraphComment 0x15d8cb0 <line:227:1>
| |   `-TextComment 0x15d8c80 <col:1> Text=" "
| |-FieldDecl 0x15b8b50 <line:229:5, col:12> col:12 phase 'UINT16':'unsigned short'
| |-FieldDecl 0x15b8bb0 <line:230:5, col:12> col:12 type 'UINT16':'unsigned short'
| |-FieldDecl 0x15b8c10 <line:231:5, col:12> col:12 faultAddr 'UINT32':'unsigned int'
| |-FieldDecl 0x15b8c70 <line:232:5, col:12> col:12 thrdPid 'UINT32':'unsigned int'
| |-FieldDecl 0x15b8cd0 <line:233:5, col:12> col:12 nestCnt 'UINT16':'unsigned short'
| |-FieldDecl 0x15b8d30 <line:234:5, col:12> col:12 reserved 'UINT16':'unsigned short'
| `-FieldDecl 0x15b8d90 <line:235:5, col:20> col:20 context 'EXC_CONTEXT_S *'
|-TypedefDecl 0x15b8e38 <line:228:1, line:236:3> col:3 referenced ExcInfo 'struct TagExcInfo':'struct TagExcInfo'
| |-ElaboratedType 0x15b8de0 'struct TagExcInfo' sugar
| | `-RecordType 0x15b8b20 'struct TagExcInfo'
| |   `-Record 0x15b8a98 'TagExcInfo'
| `-FullComment 0x15d9f80 <line:222:3, line:227:1>
|   |-ParagraphComment 0x15d9e00 <line:222:3>
|   | `-TextComment 0x15d8d70 <col:3> Text=" "
|   |-VerbatimLineComment 0x15d9e20 <col:4, col:20> Text=" los_exc"
|   |-ParagraphComment 0x15d9e90 <line:223:3, col:34>
|   | `-TextComment 0x15d9e60 <col:3, col:34> Text=" Exception information structure"
|   |-ParagraphComment 0x15d9ee0 <line:225:3, col:98>
|   | `-TextComment 0x15d9eb0 <col:3, col:98> Text=" Description: Exception information saved when an exception is triggered on the Xtensa platform."
|   `-ParagraphComment 0x15d9f30 <line:227:1>
|     `-TextComment 0x15d9f00 <col:1> Text=" "
|-VarDecl 0x15b8eb8 <line:238:1, col:15> col:15 g_curNestCount 'UINT32':'unsigned int' extern
|-VarDecl 0x15b8f50 <line:239:1, col:16> col:16 g_excInfo 'ExcInfo':'struct TagExcInfo' extern
|-FunctionDecl 0x15b9050 <main/los_compiler.h:327:23, main/los_arch_timer.h:45:26> col:6 SysTick_Handler 'void (void)'
|-RecordDecl 0x15b90f0 <line:57:9, line:64:1> line:57:9 struct definition
| |-FieldDecl 0x15b91a0 <line:58:5, col:12> col:12 CTRL 'UINT32':'unsigned int'
| |-FieldDecl 0x15b9200 <line:59:5, col:12> col:12 VAL 'UINT64':'unsigned long long'
| |-FieldDecl 0x15b9260 <line:60:5, col:12> col:12 UPDATE 'UINT32':'unsigned int'
| |-FieldDecl 0x15bb070 <line:61:5, col:12> col:12 ALARM 'UINT64':'unsigned long long'
| |-FieldDecl 0x15bb0d0 <line:62:5, col:12> col:12 LOAD 'UINT64':'unsigned long long'
| `-FieldDecl 0x15bb130 <line:63:5, col:12> col:12 LOAD_TRI 'UINT32':'unsigned int'
|-TypedefDecl 0x15bb1d8 <line:57:1, line:64:3> col:3 Systick_t 'struct Systick_t':'Systick_t'
| `-ElaboratedType 0x15bb180 'struct Systick_t' sugar
|   `-RecordType 0x15b9170 'Systick_t'
|     `-Record 0x15b90f0 ''
|-FunctionDecl 0x15bb2e0 <main/los_compiler.h:158:22, main/los_arch_timer.h:71:1> line:66:22 used GetCcount 'UINT32 (void)' static inline
| `-CompoundStmt 0x15bb5a0 <line:67:1, line:71:1>
|   |-DeclStmt 0x15bb3f8 <line:68:5, col:19>
|   | `-VarDecl 0x15bb390 <col:5, col:12> col:12 used intSave 'UINT32':'unsigned int'
|   |-GCCAsmStmt 0x15bb4e8 <line:69:5, col:60>
|   | `-DeclRefExpr 0x15bb4c8 <col:50> 'UINT32':'unsigned int' lvalue Var 0x15bb390 'intSave' 'UINT32':'unsigned int'
|   `-ReturnStmt 0x15bb590 <line:70:5, col:12>
|     `-ImplicitCastExpr 0x15bb578 <col:12> 'UINT32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x15bb558 <col:12> 'UINT32':'unsigned int' lvalue Var 0x15bb390 'intSave' 'UINT32':'unsigned int'
|-FunctionDecl 0x15bb660 <main/los_compiler.h:158:22, main/los_arch_timer.h:76:1> line:73:20 used ResetCcount 'void (void)' static inline
| `-CompoundStmt 0x15bb858 <line:74:1, line:76:1>
|   `-GCCAsmStmt 0x15bb7e8 <line:75:5, col:59>
|     `-IntegerLiteral 0x15bb7c8 <col:57> 'int' 0
|-FunctionDecl 0x15bb908 <main/los_compiler.h:158:22, main/los_arch_timer.h:83:1> line:78:22 GetCcompare 'UINT32 (void)' static inline
| `-CompoundStmt 0x15bbba0 <line:79:1, line:83:1>
|   |-DeclStmt 0x15bba20 <line:80:5, col:19>
|   | `-VarDecl 0x15bb9b8 <col:5, col:12> col:12 used intSave 'UINT32':'unsigned int'
|   |-GCCAsmStmt 0x15bbae8 <line:81:5, col:63>
|   | `-DeclRefExpr 0x15bbac8 <col:53> 'UINT32':'unsigned int' lvalue Var 0x15bb9b8 'intSave' 'UINT32':'unsigned int'
|   `-ReturnStmt 0x15bbb90 <line:82:5, col:12>
|     `-ImplicitCastExpr 0x15bbb78 <col:12> 'UINT32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x15bbb58 <col:12> 'UINT32':'unsigned int' lvalue Var 0x15bb9b8 'intSave' 'UINT32':'unsigned int'
|-FunctionDecl 0x15bbc68 <main/los_compiler.h:158:22, main/los_arch_timer.h:88:1> line:85:20 used SetCcompare 'void (UINT32)' static inline
| |-ParmVarDecl 0x15bbbd8 <col:32, col:39> col:39 used newCompareVal 'UINT32':'unsigned int'
| `-CompoundStmt 0x15bbe68 <line:86:1, line:88:1>
|   `-GCCAsmStmt 0x15bbdd0 <line:87:5, col:75>
|     `-ImplicitCastExpr 0x15bbdb8 <col:61> 'UINT32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x15bbd98 <col:61> 'UINT32':'unsigned int' lvalue ParmVar 0x15bbbd8 'newCompareVal' 'UINT32':'unsigned int'
|-EnumDecl 0x15bbe80 <main/los_debug.h:74:9, line:80:1> line:74:9
| |-EnumConstantDecl 0x15bbf40 <line:75:5> col:5 EXC_REBOOT 'int'
| |-EnumConstantDecl 0x15bbf90 <line:76:5> col:5 EXC_ASSERT 'int'
| |-EnumConstantDecl 0x15bbfe0 <line:77:5> col:5 EXC_STACKOVERFLOW 'int'
| |-EnumConstantDecl 0x159c860 <line:78:5> col:5 EXC_INTERRUPT 'int'
| `-EnumConstantDecl 0x159c8b0 <line:79:5> col:5 EXC_TYPE_END 'int'
|-TypedefDecl 0x159c958 <line:74:1, line:80:3> col:3 referenced EXC_TYPE 'enum EXC_TYPE':'EXC_TYPE'
| `-ElaboratedType 0x159c900 'enum EXC_TYPE' sugar
|   `-EnumType 0x15bbf20 'EXC_TYPE'
|     `-Enum 0x15bbe80 ''
|-TypedefDecl 0x159cb90 <line:82:1, col:43> col:16 referenced ExcHookFn 'void (*)(EXC_TYPE)'
| `-PointerType 0x159cb30 'void (*)(EXC_TYPE)'
|   `-ParenType 0x159cad0 'void (EXC_TYPE)' sugar
|     `-FunctionProtoType 0x159caa0 'void (EXC_TYPE)' cdecl
|       |-BuiltinType 0x1512da0 'void'
|       `-TypedefType 0x159c9d0 'EXC_TYPE' sugar
|         |-Typedef 0x159c958 'EXC_TYPE'
|         `-ElaboratedType 0x159c900 'enum EXC_TYPE' sugar
|           `-EnumType 0x15bbf20 'EXC_TYPE'
|             `-Enum 0x15bbe80 ''
|-FunctionDecl 0x159cd18 <main/los_compiler.h:327:23, main/los_debug.h:84:43> col:6 OsExcHookRegister 'void (ExcHookFn)'
| `-ParmVarDecl 0x159cc20 <col:24, col:34> col:34 excHookFn 'ExcHookFn':'void (*)(EXC_TYPE)'
|-FunctionDecl 0x159ce60 <main/los_compiler.h:327:23, main/los_debug.h:86:34> col:6 OsDoExcHook 'void (EXC_TYPE)'
| `-ParmVarDecl 0x159cdd0 <col:18, col:27> col:27 excType 'EXC_TYPE':'EXC_TYPE'
|-EnumDecl 0x159cf08 <line:104:9, line:108:1> line:104:9
| |-EnumConstantDecl 0x159cfd0 <line:105:5> col:5 LOG_MODULE_KERNEL 'int'
| |-EnumConstantDecl 0x159d020 <line:106:5> col:5 LOG_MODULE_FS 'int'
| `-EnumConstantDecl 0x159d070 <line:107:5> col:5 LOS_MODULE_OTHERS 'int'
|-TypedefDecl 0x159d118 <line:104:1, line:108:3> col:3 LogModuleType 'enum LogModuleType':'LogModuleType'
| `-ElaboratedType 0x159d0c0 'enum LogModuleType' sugar
|   `-EnumType 0x159cfb0 'LogModuleType'
|     `-Enum 0x159cf08 ''
|-FunctionDecl 0x159d2d0 <line:132:14> col:14 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x159d370 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x159d3e0 <col:14> Implicit printf 1 2
|-FunctionDecl 0x159d448 prev 0x159d2d0 <col:1, col:41> col:14 printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x159d1c0 <col:21, col:33> col:33 fmt 'const CHAR *'
| `-FormatAttr 0x159d520 <col:14> Inherited printf 1 2
|-FunctionDecl 0x159d658 <line:133:1, col:41> col:14 OsLogLevelCheck 'INT32 (INT32)' extern
| `-ParmVarDecl 0x159d568 <col:30, col:36> col:36 level 'INT32':'int'
|-TypedefDecl 0x15c3668 <line:167:1, col:89> col:16 referenced BACK_TRACE_HOOK 'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
| `-PointerType 0x15c35f0 'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
|   `-ParenType 0x15c3590 'void (UINTPTR *, UINT32, UINT32, UINTPTR)' sugar
|     `-FunctionProtoType 0x15c3540 'void (UINTPTR *, UINT32, UINT32, UINTPTR)' cdecl
|       |-BuiltinType 0x1512da0 'void'
|       |-PointerType 0x1582760 'UINTPTR *'
|       | `-TypedefType 0x15826a0 'UINTPTR' sugar
|       |   |-Typedef 0x1578ff8 'UINTPTR'
|       |   `-BuiltinType 0x1512ee0 'unsigned int'
|       |-TypedefType 0x1579270 'UINT32' sugar
|       | |-Typedef 0x1578ba0 'UINT32'
|       | `-BuiltinType 0x1512ee0 'unsigned int'
|       |-TypedefType 0x1579270 'UINT32' sugar
|       | |-Typedef 0x1578ba0 'UINT32'
|       | `-BuiltinType 0x1512ee0 'unsigned int'
|       `-TypedefType 0x15826a0 'UINTPTR' sugar
|         |-Typedef 0x1578ff8 'UINTPTR'
|         `-BuiltinType 0x1512ee0 'unsigned int'
|-FunctionDecl 0x15c37e8 <line:168:1, col:52> col:13 OsBackTraceHookSet 'void (BACK_TRACE_HOOK)' extern
| `-ParmVarDecl 0x15c36f0 <col:32, col:48> col:48 hook 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
|-FunctionDecl 0x15c3ab0 <line:169:1, col:89> col:13 OsBackTraceHookCall 'void (UINTPTR *, UINT32, UINT32, UINTPTR)' extern
| |-ParmVarDecl 0x15c38a0 <col:33, col:42> col:42 LR 'UINTPTR *'
| |-ParmVarDecl 0x15c3918 <col:46, col:53> col:53 LRSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0x15c3990 <col:61, col:68> col:68 jumpCount 'UINT32':'unsigned int'
| `-ParmVarDecl 0x15c3a08 <col:79, col:87> col:87 SP 'UINTPTR':'unsigned int'
|-FunctionDecl 0x15c3c10 <main/los_compiler.h:158:22, main/los_timer.c:39:49> col:15 used SysTickStart 'UINT32 (HWI_PROC_FUNC)' static
| `-ParmVarDecl 0x15c3b80 <col:28, col:42> col:42 handler 'HWI_PROC_FUNC':'void (*)(void)'
|-FunctionDecl 0x15c3d58 <main/los_compiler.h:158:22, main/los_timer.c:40:52> col:15 used SysTickReload 'UINT64 (UINT64)' static
| `-ParmVarDecl 0x15c3cc8 <col:29, col:36> col:36 nextResponseTime 'UINT64':'unsigned long long'
|-FunctionDecl 0x15c3ea0 <main/los_compiler.h:158:22, main/los_timer.c:41:45> col:15 used SysTickCycleGet 'UINT64 (UINT32 *)' static
| `-ParmVarDecl 0x15c3e10 <col:31, col:39> col:39 period 'UINT32 *'
|-FunctionDecl 0x15c3fe0 <main/los_compiler.h:158:22, main/los_timer.c:42:29> col:13 used SysTickLock 'void (void)' static
|-FunctionDecl 0x15c4118 <main/los_compiler.h:158:22, main/los_timer.c:43:31> col:13 used SysTickUnlock 'void (void)' static
|-VarDecl 0x15c41c8 <main/los_compiler.h:158:22, main/los_timer.c:55:1> line:45:22 used g_archTickTimer 'ArchTickTimer':'ArchTickTimer' static cinit
| `-InitListExpr 0x15c5720 <col:40, line:55:1> 'ArchTickTimer':'ArchTickTimer'
|   |-ImplicitCastExpr 0x15c57a8 <line:46:13> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0x15c4230 <col:13> 'int' 0
|   |-IntegerLiteral 0x15c4290 <main/target_config.h:64:61> 'int' 6
|   |-ImplicitCastExpr 0x15c57c0 <line:58:61> 'UINT64':'unsigned long long' <IntegralCast>
|   | `-IntegerLiteral 0x15c42f0 <col:61> 'unsigned int' 4294967295
|   |-ImplicitCastExpr 0x15c5808 <main/los_timer.c:49:13> 'UINT32 (*)(HWI_PROC_FUNC)' <FunctionToPointerDecay>
|   | `-DeclRefExpr 0x15c4350 <col:13> 'UINT32 (HWI_PROC_FUNC)' Function 0x15c3c10 'SysTickStart' 'UINT32 (HWI_PROC_FUNC)'
|   |-ImplicitCastExpr 0x15c5848 <line:50:17> 'UINT64 (*)(UINT32 *)' <FunctionToPointerDecay>
|   | `-DeclRefExpr 0x15c43b0 <col:17> 'UINT64 (UINT32 *)' Function 0x15c3ea0 'SysTickCycleGet' 'UINT64 (UINT32 *)'
|   |-ImplicitCastExpr 0x15c5888 <line:51:15> 'UINT64 (*)(UINT64)' <FunctionToPointerDecay>
|   | `-DeclRefExpr 0x15c5420 <col:15> 'UINT64 (UINT64)' Function 0x15c3d58 'SysTickReload' 'UINT64 (UINT64)'
|   |-ImplicitCastExpr 0x15c58a0 <line:52:13> 'void (*)(void)' <FunctionToPointerDecay>
|   | `-DeclRefExpr 0x15c5480 <col:13> 'void (void)' Function 0x15c3fe0 'SysTickLock' 'void (void)'
|   |-ImplicitCastExpr 0x15c58b8 <line:53:15> 'void (*)(void)' <FunctionToPointerDecay>
|   | `-DeclRefExpr 0x15c54e0 <col:15> 'void (void)' Function 0x15c4118 'SysTickUnlock' 'void (void)'
|   `-ImplicitCastExpr 0x15c58d0 <main/los_compiler.h:341:23, col:32> 'HWI_PROC_FUNC':'void (*)(void)' <NullToPointer>
|     `-ParenExpr 0x15c55a0 <col:23, col:32> 'void *'
|       `-CStyleCastExpr 0x15c5578 <col:24, col:31> 'void *' <NullToPointer>
|         `-IntegerLiteral 0x15c5540 <col:31> 'int' 0
|-FunctionDecl 0x15c5988 prev 0x15c3c10 <line:158:22, main/los_timer.c:79:1> line:57:15 used SysTickStart 'UINT32 (HWI_PROC_FUNC)' static
| |-ParmVarDecl 0x15c58f8 <col:28, col:42> col:42 used handler 'HWI_PROC_FUNC':'void (*)(void)'
| `-CompoundStmt 0x15c60a8 <line:58:1, line:79:1>
|   |-DeclStmt 0x15c5ae0 <line:59:5, col:43>
|   | `-VarDecl 0x15c5a40 <col:5, col:28> col:20 used tick 'ArchTickTimer *' cinit
|   |   `-UnaryOperator 0x15c5ac8 <col:27, col:28> 'ArchTickTimer *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x15c5aa8 <col:28> 'ArchTickTimer':'ArchTickTimer' lvalue Var 0x15c41c8 'g_archTickTimer' 'ArchTickTimer':'ArchTickTimer'
|   |-BinaryOperator 0x15c5b98 <line:61:5, main/target_config.h:54:61> 'UINT32':'unsigned int' '='
|   | |-MemberExpr 0x15c5b30 <main/los_timer.c:61:5, col:11> 'UINT32':'unsigned int' lvalue ->freq 0x159e290
|   | | `-ImplicitCastExpr 0x15c5b18 <col:5> 'ArchTickTimer *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15c5af8 <col:5> 'ArchTickTimer *' lvalue Var 0x15c5a40 'tick' 'ArchTickTimer *'
|   | `-ImplicitCastExpr 0x15c5b80 <main/target_config.h:54:61> 'UINT32':'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x15c5b60 <col:61> 'int' 800000000
|   |-CallExpr 0x15c5cd0 <main/los_timer.c:67:5, col:38> 'void'
|   | |-ImplicitCastExpr 0x15c5cb8 <col:5> 'void (*)(UINT32, HWI_PROC_FUNC)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15c5bb8 <col:5> 'void (UINT32, HWI_PROC_FUNC)' Function 0x15b82b0 'OsSetVector' 'void (UINT32, HWI_PROC_FUNC)'
|   | |-ImplicitCastExpr 0x15c5d18 <col:17, col:23> 'UINT32':'unsigned int' <IntegralCast>
|   | | `-ImplicitCastExpr 0x15c5d00 <col:17, col:23> 'INT32':'int' <LValueToRValue>
|   | |   `-MemberExpr 0x15c5c10 <col:17, col:23> 'INT32':'int' lvalue ->irqNum 0x159e2f0
|   | |     `-ImplicitCastExpr 0x15c5bf8 <col:17> 'ArchTickTimer *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x15c5bd8 <col:17> 'ArchTickTimer *' lvalue Var 0x15c5a40 'tick' 'ArchTickTimer *'
|   | `-ImplicitCastExpr 0x15c5d30 <col:31> 'HWI_PROC_FUNC':'void (*)(void)' <LValueToRValue>
|   |   `-DeclRefExpr 0x15c5c40 <col:31> 'HWI_PROC_FUNC':'void (*)(void)' lvalue ParmVar 0x15c58f8 'handler' 'HWI_PROC_FUNC':'void (*)(void)'
|   |-CallExpr 0x15c5d80 <line:71:5, col:17> 'void'
|   | `-ImplicitCastExpr 0x15c5d68 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x15c5d48 <col:5> 'void (void)' Function 0x15bb660 'ResetCcount' 'void (void)'
|   |-CallExpr 0x15c5e50 <line:72:5, col:51> 'void'
|   | |-ImplicitCastExpr 0x15c5e38 <col:5> 'void (*)(UINT32)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15c5da0 <col:5> 'void (UINT32)' Function 0x15bbc68 'SetCcompare' 'void (UINT32)'
|   | `-IntegerLiteral 0x15c5dc0 <main/target_config.h:58:61> 'unsigned int' 4294967295
|   |-GCCAsmStmt 0x15c5ee8 <main/los_timer.c:75:9, col:67>
|   | `-IntegerLiteral 0x15c5ec8 <col:65> 'int' 0
|   |-CallExpr 0x15c6020 <line:77:5, col:27> 'UINT32':'unsigned int'
|   | |-ImplicitCastExpr 0x15c6008 <col:5> 'UINT32 (*)(HWI_HANDLE_T)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15c5f58 <col:5> 'UINT32 (HWI_HANDLE_T)' Function 0x1596dc8 'HwiUnmask' 'UINT32 (HWI_HANDLE_T)'
|   | `-ImplicitCastExpr 0x15c6060 <col:15, col:21> 'HWI_HANDLE_T':'unsigned int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x15c6048 <col:15, col:21> 'INT32':'int' <LValueToRValue>
|   |     `-MemberExpr 0x15c5fb0 <col:15, col:21> 'INT32':'int' lvalue ->irqNum 0x159e2f0
|   |       `-ImplicitCastExpr 0x15c5f98 <col:15> 'ArchTickTimer *' <LValueToRValue>
|   |         `-DeclRefExpr 0x15c5f78 <col:15> 'ArchTickTimer *' lvalue Var 0x15c5a40 'tick' 'ArchTickTimer *'
|   `-ReturnStmt 0x15c6098 <line:78:5, main/los_compiler.h:350:23>
|     `-IntegerLiteral 0x15c6078 <col:23> 'unsigned int' 0
|-FunctionDecl 0x15c6198 prev 0x15c3d58 <line:158:22, main/los_timer.c:92:1> line:81:15 used SysTickReload 'UINT64 (UINT64)' static
| |-ParmVarDecl 0x15c6108 <col:29, col:36> col:36 used nextResponseTime 'UINT64':'unsigned long long'
| `-CompoundStmt 0x15c6738 <line:82:1, line:92:1>
|   |-DeclStmt 0x15c62b8 <line:83:5, col:18>
|   | `-VarDecl 0x15c6250 <col:5, col:12> col:12 used timerL 'UINT32':'unsigned int'
|   |-IfStmt 0x15c64f0 <line:84:5, line:86:5>
|   | |-BinaryOperator 0x15c6370 <line:84:9, col:44> 'int' '>'
|   | | |-ImplicitCastExpr 0x15c6340 <col:9> 'UINT64':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15c62d0 <col:9> 'UINT64':'unsigned long long' lvalue ParmVar 0x15c6108 'nextResponseTime' 'UINT64':'unsigned long long'
|   | | `-ImplicitCastExpr 0x15c6358 <col:28, col:44> 'UINT64':'unsigned long long' <LValueToRValue>
|   | |   `-MemberExpr 0x15c6310 <col:28, col:44> 'UINT64':'unsigned long long' lvalue .periodMax 0x159e350
|   | |     `-DeclRefExpr 0x15c62f0 <col:28> 'ArchTickTimer':'ArchTickTimer' lvalue Var 0x15c41c8 'g_archTickTimer' 'ArchTickTimer':'ArchTickTimer'
|   | `-CompoundStmt 0x15c64d8 <col:55, line:86:5>
|   |   `-BinaryOperator 0x15c64b8 <line:85:9, col:44> 'UINT64':'unsigned long long' '='
|   |     |-DeclRefExpr 0x15c6430 <col:9> 'UINT64':'unsigned long long' lvalue ParmVar 0x15c6108 'nextResponseTime' 'UINT64':'unsigned long long'
|   |     `-ImplicitCastExpr 0x15c64a0 <col:28, col:44> 'UINT64':'unsigned long long' <LValueToRValue>
|   |       `-MemberExpr 0x15c6470 <col:28, col:44> 'UINT64':'unsigned long long' lvalue .periodMax 0x159e350
|   |         `-DeclRefExpr 0x15c6450 <col:28> 'ArchTickTimer':'ArchTickTimer' lvalue Var 0x15c41c8 'g_archTickTimer' 'ArchTickTimer':'ArchTickTimer'
|   |-BinaryOperator 0x15c65b0 <line:88:5, col:24> 'UINT32':'unsigned int' '='
|   | |-DeclRefExpr 0x15c6508 <col:5> 'UINT32':'unsigned int' lvalue Var 0x15c6250 'timerL' 'UINT32':'unsigned int'
|   | `-CallExpr 0x15c6590 <col:14, col:24> 'UINT32':'unsigned int'
|   |   `-ImplicitCastExpr 0x15c6578 <col:14> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x15c6528 <col:14> 'UINT32 (void)' Function 0x15bb2e0 'GetCcount' 'UINT32 (void)'
|   |-CompoundAssignOperator 0x15c6628 <line:89:5, col:15> 'UINT32':'unsigned int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-DeclRefExpr 0x15c65d0 <col:5> 'UINT32':'unsigned int' lvalue Var 0x15c6250 'timerL' 'UINT32':'unsigned int'
|   | `-ImplicitCastExpr 0x15c6610 <col:15> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x15c65f0 <col:15> 'UINT64':'unsigned long long' lvalue ParmVar 0x15c6108 'nextResponseTime' 'UINT64':'unsigned long long'
|   |-CallExpr 0x15c66b0 <line:90:5, col:23> 'void'
|   | |-ImplicitCastExpr 0x15c6698 <col:5> 'void (*)(UINT32)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15c6658 <col:5> 'void (UINT32)' Function 0x15bbc68 'SetCcompare' 'void (UINT32)'
|   | `-ImplicitCastExpr 0x15c66d8 <col:17> 'UINT32':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x15c6678 <col:17> 'UINT32':'unsigned int' lvalue Var 0x15c6250 'timerL' 'UINT32':'unsigned int'
|   `-ReturnStmt 0x15c6728 <line:91:5, col:12>
|     `-ImplicitCastExpr 0x15c6710 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x15c66f0 <col:12> 'UINT64':'unsigned long long' lvalue ParmVar 0x15c6108 'nextResponseTime' 'UINT64':'unsigned long long'
|-FunctionDecl 0x15c6818 prev 0x15c3ea0 <main/los_compiler.h:158:22, main/los_timer.c:114:1> line:94:15 used SysTickCycleGet 'UINT64 (UINT32 *)' static
| |-ParmVarDecl 0x15c6788 <col:31, col:39> col:39 used period 'UINT32 *'
| `-CompoundStmt 0x15c7258 <line:95:1, line:114:1>
|   |-DeclStmt 0x15c6938 <line:96:5, col:22>
|   | `-VarDecl 0x15c68d0 <col:5, col:12> col:12 used tickCycleH 'UINT32':'unsigned int'
|   |-DeclStmt 0x15c69c8 <line:97:5, col:22>
|   | `-VarDecl 0x15c6960 <col:5, col:12> col:12 used tickCycleL 'UINT32':'unsigned int'
|   |-DeclStmt 0x15c6a58 <line:98:5, col:16>
|   | `-VarDecl 0x15c69f0 <col:5, col:12> col:12 used temp 'UINT32':'unsigned int'
|   |-DeclStmt 0x15c6b20 <line:99:5, col:32>
|   | `-VarDecl 0x15c6a80 <col:5, col:31> col:19 used tickCycle 'UINT64':'unsigned long long' static cinit
|   |   `-ImplicitCastExpr 0x15c6b08 <col:31> 'UINT64':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x15c6ae8 <col:31> 'int' 0
|   |-CStyleCastExpr 0x15c6b80 <line:101:5, col:11> 'void' <ToVoid>
|   | `-ImplicitCastExpr 0x15c6b68 <col:11> 'UINT32 *' <LValueToRValue> part_of_explicit_cast
|   |   `-DeclRefExpr 0x15c6b38 <col:11> 'UINT32 *' lvalue ParmVar 0x15c6788 'period' 'UINT32 *'
|   |-DeclStmt 0x15c6c78 <line:102:5, col:35>
|   | `-VarDecl 0x15c6bb8 <col:5, col:34> col:12 used intSave 'UINT32':'unsigned int' cinit
|   |   `-CallExpr 0x15c6c58 <main/los_interrupt.h:92:21, main/los_timer.c:102:34> 'UINT32':'unsigned int'
|   |     `-ImplicitCastExpr 0x15c6c40 <main/los_interrupt.h:92:21> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x15c6c20 <col:21> 'UINT32 (void)' Function 0x1596c88 'ArchIntLock' 'UINT32 (void)'
|   |-BinaryOperator 0x15c6d58 <main/los_timer.c:103:5, col:24> 'UINT32':'unsigned int' '='
|   | |-DeclRefExpr 0x15c6c90 <col:5> 'UINT32':'unsigned int' lvalue Var 0x15c69f0 'temp' 'UINT32':'unsigned int'
|   | `-ImplicitCastExpr 0x15c6d40 <col:12, col:24> 'UINT32':'unsigned int' <IntegralCast>
|   |   `-BinaryOperator 0x15c6d20 <col:12, col:24> 'unsigned long long' '&'
|   |     |-ImplicitCastExpr 0x15c6cf0 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x15c6cb0 <col:12> 'UINT64':'unsigned long long' lvalue Var 0x15c6a80 'tickCycle' 'UINT64':'unsigned long long'
|   |     `-ImplicitCastExpr 0x15c6d08 <col:24> 'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x15c6cd0 <col:24> 'unsigned int' 4294967295
|   |-BinaryOperator 0x15c6e28 <line:104:5, main/los_timer.h:46:47> 'UINT32':'unsigned int' '='
|   | |-DeclRefExpr 0x15c6d78 <main/los_timer.c:104:5> 'UINT32':'unsigned int' lvalue Var 0x15c68d0 'tickCycleH' 'UINT32':'unsigned int'
|   | `-ImplicitCastExpr 0x15c6e10 <col:18, main/los_timer.h:46:47> 'UINT32':'unsigned int' <IntegralCast>
|   |   `-BinaryOperator 0x15c6df0 <main/los_timer.c:104:18, main/los_timer.h:46:47> 'UINT64':'unsigned long long' '>>'
|   |     |-ImplicitCastExpr 0x15c6dd8 <main/los_timer.c:104:18> 'UINT64':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x15c6d98 <col:18> 'UINT64':'unsigned long long' lvalue Var 0x15c6a80 'tickCycle' 'UINT64':'unsigned long long'
|   |     `-IntegerLiteral 0x15c6db8 <main/los_timer.h:46:47> 'int' 32
|   |-BinaryOperator 0x15c6ec0 <main/los_timer.c:105:5, col:28> 'UINT32':'unsigned int' '='
|   | |-DeclRefExpr 0x15c6e48 <col:5> 'UINT32':'unsigned int' lvalue Var 0x15c6960 'tickCycleL' 'UINT32':'unsigned int'
|   | `-CallExpr 0x15c6ea0 <col:18, col:28> 'UINT32':'unsigned int'
|   |   `-ImplicitCastExpr 0x15c6e88 <col:18> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x15c6e68 <col:18> 'UINT32 (void)' Function 0x15bb2e0 'GetCcount' 'UINT32 (void)'
|   |-IfStmt 0x15c6fc0 <line:106:5, line:108:5>
|   | |-BinaryOperator 0x15c6f50 <line:106:9, col:22> 'int' '<'
|   | | |-ImplicitCastExpr 0x15c6f20 <col:9> 'UINT32':'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x15c6ee0 <col:9> 'UINT32':'unsigned int' lvalue Var 0x15c6960 'tickCycleL' 'UINT32':'unsigned int'
|   | | `-ImplicitCastExpr 0x15c6f38 <col:22> 'UINT32':'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x15c6f00 <col:22> 'UINT32':'unsigned int' lvalue Var 0x15c69f0 'temp' 'UINT32':'unsigned int'
|   | `-CompoundStmt 0x15c6fa8 <col:28, line:108:5>
|   |   `-UnaryOperator 0x15c6f90 <line:107:9, col:19> 'UINT32':'unsigned int' postfix '++'
|   |     `-DeclRefExpr 0x15c6f70 <col:9> 'UINT32':'unsigned int' lvalue Var 0x15c68d0 'tickCycleH' 'UINT32':'unsigned int'
|   |-BinaryOperator 0x15c7158 <line:109:5, col:58> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0x15c6fd8 <col:5> 'UINT64':'unsigned long long' lvalue Var 0x15c6a80 'tickCycle' 'UINT64':'unsigned long long'
|   | `-BinaryOperator 0x15c7138 <col:17, col:58> 'unsigned long long' '|'
|   |   |-ParenExpr 0x15c70c8 <col:17, col:54> 'UINT64':'unsigned long long'
|   |   | `-BinaryOperator 0x15c70a8 <col:18, main/los_timer.h:46:47> 'UINT64':'unsigned long long' '<<'
|   |   |   |-ParenExpr 0x15c7068 <main/los_timer.c:109:18, col:37> 'UINT64':'unsigned long long'
|   |   |   | `-CStyleCastExpr 0x15c7040 <col:19, col:27> 'UINT64':'unsigned long long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x15c7028 <col:27> 'UINT32':'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |   |   |     `-DeclRefExpr 0x15c6ff8 <col:27> 'UINT32':'unsigned int' lvalue Var 0x15c68d0 'tickCycleH' 'UINT32':'unsigned int'
|   |   |   `-IntegerLiteral 0x15c7088 <main/los_timer.h:46:47> 'int' 32
|   |   `-ImplicitCastExpr 0x15c7120 <main/los_timer.c:109:58> 'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x15c7108 <col:58> 'UINT32':'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x15c70e8 <col:58> 'UINT32':'unsigned int' lvalue Var 0x15c6960 'tickCycleL' 'UINT32':'unsigned int'
|   |-CallExpr 0x15c71d0 <main/los_interrupt.h:96:24, main/los_timer.c:111:27> 'void'
|   | |-ImplicitCastExpr 0x15c71b8 <main/los_interrupt.h:96:24> 'void (*)(UINT32)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x15c7178 <col:24> 'void (UINT32)' Function 0x15970b8 'ArchIntRestore' 'void (UINT32)'
|   | `-ImplicitCastExpr 0x15c71f8 <main/los_timer.c:111:20> 'UINT32':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x15c7198 <col:20> 'UINT32':'unsigned int' lvalue Var 0x15c6bb8 'intSave' 'UINT32':'unsigned int'
|   `-ReturnStmt 0x15c7248 <line:113:5, col:12>
|     `-ImplicitCastExpr 0x15c7230 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x15c7210 <col:12> 'UINT64':'unsigned long long' lvalue Var 0x15c6a80 'tickCycle' 'UINT64':'unsigned long long'
|-FunctionDecl 0x15c7368 prev 0x15c3fe0 <main/los_compiler.h:158:22, main/los_timer.c:119:1> line:116:13 used SysTickLock 'void (void)' static
| `-CompoundStmt 0x15c74b8 <line:117:1, line:119:1>
|   `-CallExpr 0x15c7478 <line:118:5, col:28> 'UINT32':'unsigned int'
|     |-ImplicitCastExpr 0x15c7460 <col:5> 'UINT32 (*)(HWI_HANDLE_T)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x15c7408 <col:5> 'UINT32 (HWI_HANDLE_T)' Function 0x1596f10 'HwiMask' 'UINT32 (HWI_HANDLE_T)'
|     `-ImplicitCastExpr 0x15c74a0 <main/target_config.h:64:61> 'HWI_HANDLE_T':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x15c7440 <col:61> 'int' 6
|-FunctionDecl 0x15c7568 prev 0x15c4118 <main/los_compiler.h:158:22, main/los_timer.c:124:1> line:121:13 used SysTickUnlock 'void (void)' static
| `-CompoundStmt 0x15c76a0 <line:122:1, line:124:1>
|   `-CallExpr 0x15c7660 <line:123:5, col:30> 'UINT32':'unsigned int'
|     |-ImplicitCastExpr 0x15c7648 <col:5> 'UINT32 (*)(HWI_HANDLE_T)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x15c7608 <col:5> 'UINT32 (HWI_HANDLE_T)' Function 0x1596dc8 'HwiUnmask' 'UINT32 (HWI_HANDLE_T)'
|     `-ImplicitCastExpr 0x15c7688 <main/target_config.h:64:61> 'HWI_HANDLE_T':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x15c7628 <col:61> 'int' 6
|-FunctionDecl 0x15c7750 prev 0x159efa8 <main/los_timer.c:126:1, line:129:1> line:126:16 ArchSysTickTimerGet 'ArchTickTimer *(void)'
| `-CompoundStmt 0x15c7838 <line:127:1, line:129:1>
|   `-ReturnStmt 0x15c7828 <line:128:5, col:13>
|     `-UnaryOperator 0x15c7810 <col:12, col:13> 'ArchTickTimer *' prefix '&' cannot overflow
|       `-DeclRefExpr 0x15c77f0 <col:13> 'ArchTickTimer':'ArchTickTimer' lvalue Var 0x15c41c8 'g_archTickTimer' 'ArchTickTimer':'ArchTickTimer'
|-FunctionDecl 0x15c78e8 <main/los_compiler.h:327:23, main/los_timer.c:134:1> line:131:6 used Wfi 'void (void)'
| `-CompoundStmt 0x15c7aa8 <line:132:1, line:134:1>
|   `-GCCAsmStmt 0x15c7a48 <line:133:5, col:46>
|-FunctionDecl 0x15c7b58 <main/los_compiler.h:327:23, main/los_timer.c:139:1> line:136:6 used Dsb 'void (void)'
| `-CompoundStmt 0x15c7cd8 <line:137:1, line:139:1>
|   `-GCCAsmStmt 0x15c7c78 <line:138:5, col:44>
`-FunctionDecl 0x15c7d88 prev 0x159ed58 <line:141:1, line:147:1> line:141:8 ArchEnterSleep 'UINT32 (void)'
  `-CompoundStmt 0x15c7f08 <line:142:1, line:147:1>
    |-CallExpr 0x15c7e60 <line:143:5, col:9> 'void'
    | `-ImplicitCastExpr 0x15c7e48 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x15c7e28 <col:5> 'void (void)' Function 0x15c7b58 'Dsb' 'void (void)'
    |-CallExpr 0x15c7eb8 <line:144:5, col:9> 'void'
    | `-ImplicitCastExpr 0x15c7ea0 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x15c7e80 <col:5> 'void (void)' Function 0x15c78e8 'Wfi' 'void (void)'
    `-ReturnStmt 0x15c7ef8 <line:146:5, main/los_compiler.h:350:23>
      `-IntegerLiteral 0x15c7ed8 <col:23> 'unsigned int' 0

TranslationUnitDecl 0x553cd8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x554570 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x554270 '__int128'
|-TypedefDecl 0x5545e0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x554290 'unsigned __int128'
|-TypedefDecl 0x5548e8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5546c0 'struct __NSConstantString_tag'
|   `-Record 0x554638 '__NSConstantString_tag'
|-TypedefDecl 0x554980 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x554940 'char *'
|   `-BuiltinType 0x553d70 'char'
|-TypedefDecl 0x554c78 <<invalid sloc>> <invalid sloc> implicit referenced __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x554c20 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x554a60 'struct __va_list_tag'
|     `-Record 0x5549d8 '__va_list_tag'
|-TypedefDecl 0x5b5800 </usr/lib/llvm-10/lib/clang/10.0.0/include/stdarg.h:14:1, col:27> col:27 va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0x5b57d0 '__builtin_va_list' sugar
|   |-Typedef 0x554c78 '__builtin_va_list'
|   `-ConstantArrayType 0x554c20 'struct __va_list_tag [1]' 1 
|     `-RecordType 0x554a60 'struct __va_list_tag'
|       `-Record 0x5549d8 '__va_list_tag'
|-TypedefDecl 0x5b5868 <line:32:1, col:27> col:27 referenced __gnuc_va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0x5b57d0 '__builtin_va_list' sugar
|   |-Typedef 0x554c78 '__builtin_va_list'
|   `-ConstantArrayType 0x554c20 'struct __va_list_tag [1]' 1 
|     `-RecordType 0x554a60 'struct __va_list_tag'
|       `-Record 0x5549d8 '__va_list_tag'
|-TypedefDecl 0x5b58d8 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:46:1, col:23> col:23 referenced size_t 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5b5948 </usr/include/x86_64-linux-gnu/bits/types.h:31:1, col:23> col:23 referenced __u_char 'unsigned char'
| `-BuiltinType 0x553e30 'unsigned char'
|-TypedefDecl 0x5b59b8 <line:32:1, col:28> col:28 referenced __u_short 'unsigned short'
| `-BuiltinType 0x553e50 'unsigned short'
|-TypedefDecl 0x5b5a28 <line:33:1, col:22> col:22 referenced __u_int 'unsigned int'
| `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x5b5a98 <line:34:1, col:27> col:27 referenced __u_long 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5b5b08 <line:37:1, col:21> col:21 referenced __int8_t 'signed char'
| `-BuiltinType 0x553d90 'signed char'
|-TypedefDecl 0x5b5b78 <line:38:1, col:23> col:23 referenced __uint8_t 'unsigned char'
| `-BuiltinType 0x553e30 'unsigned char'
|-TypedefDecl 0x5b5be8 <line:39:1, col:26> col:26 referenced __int16_t 'short'
| `-BuiltinType 0x553db0 'short'
|-TypedefDecl 0x5b5c58 <line:40:1, col:28> col:28 referenced __uint16_t 'unsigned short'
| `-BuiltinType 0x553e50 'unsigned short'
|-TypedefDecl 0x5b5cc8 <line:41:1, col:20> col:20 referenced __int32_t 'int'
| `-BuiltinType 0x553dd0 'int'
|-TypedefDecl 0x5b5d38 <line:42:1, col:22> col:22 referenced __uint32_t 'unsigned int'
| `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x5b5da8 <line:44:1, col:25> col:25 referenced __int64_t 'long'
| `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5b5e18 <line:45:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5b5ea0 <line:52:1, col:18> col:18 __int_least8_t '__int8_t':'signed char'
| `-TypedefType 0x5b5e70 '__int8_t' sugar
|   |-Typedef 0x5b5b08 '__int8_t'
|   `-BuiltinType 0x553d90 'signed char'
|-TypedefDecl 0x5b5f30 <line:53:1, col:19> col:19 __uint_least8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x5b5f00 '__uint8_t' sugar
|   |-Typedef 0x5b5b78 '__uint8_t'
|   `-BuiltinType 0x553e30 'unsigned char'
|-TypedefDecl 0x5b5fc0 <line:54:1, col:19> col:19 __int_least16_t '__int16_t':'short'
| `-TypedefType 0x5b5f90 '__int16_t' sugar
|   |-Typedef 0x5b5be8 '__int16_t'
|   `-BuiltinType 0x553db0 'short'
|-TypedefDecl 0x5b6050 <line:55:1, col:20> col:20 __uint_least16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x5b6020 '__uint16_t' sugar
|   |-Typedef 0x5b5c58 '__uint16_t'
|   `-BuiltinType 0x553e50 'unsigned short'
|-TypedefDecl 0x5b60e0 <line:56:1, col:19> col:19 __int_least32_t '__int32_t':'int'
| `-TypedefType 0x5b60b0 '__int32_t' sugar
|   |-Typedef 0x5b5cc8 '__int32_t'
|   `-BuiltinType 0x553dd0 'int'
|-TypedefDecl 0x5b6170 <line:57:1, col:20> col:20 __uint_least32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x5b6140 '__uint32_t' sugar
|   |-Typedef 0x5b5d38 '__uint32_t'
|   `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x5b6200 <line:58:1, col:19> col:19 __int_least64_t '__int64_t':'long'
| `-TypedefType 0x5b61d0 '__int64_t' sugar
|   |-Typedef 0x5b5da8 '__int64_t'
|   `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5b6290 <line:59:1, col:20> col:20 __uint_least64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x5b6260 '__uint64_t' sugar
|   |-Typedef 0x5b5e18 '__uint64_t'
|   `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5b6300 <line:63:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5b6370 <line:64:1, col:27> col:27 referenced __u_quad_t 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5b63e0 <line:72:1, col:18> col:18 __intmax_t 'long'
| `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5b6450 <line:73:1, col:27> col:27 __uintmax_t 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5b64c0 <line:137:22, line:145:25> col:25 referenced __dev_t 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5b6530 <line:137:22, line:146:25> col:25 referenced __uid_t 'unsigned int'
| `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x5b65a0 <line:137:22, line:147:25> col:25 referenced __gid_t 'unsigned int'
| `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x5b6610 <line:137:22, line:148:25> col:25 referenced __ino_t 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5b6680 <line:137:22, line:149:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5b66f0 <line:137:22, line:150:26> col:26 referenced __mode_t 'unsigned int'
| `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x5b6760 <line:137:22, line:151:27> col:27 referenced __nlink_t 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5d8550 <line:137:22, line:152:25> col:25 referenced __off_t 'long'
| `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5d85c0 <line:137:22, line:153:27> col:27 referenced __off64_t 'long'
| `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5d8630 <line:137:22, line:154:25> col:25 referenced __pid_t 'int'
| `-BuiltinType 0x553dd0 'int'
|-RecordDecl 0x5d8688 </usr/include/x86_64-linux-gnu/bits/typesizes.h:72:24, col:47> col:24 struct definition
| `-FieldDecl 0x5d87d0 <col:33, col:44> col:37 __val 'int [2]'
|-TypedefDecl 0x5d8878 </usr/include/x86_64-linux-gnu/bits/types.h:137:22, line:155:26> col:26 referenced __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5d8820 'struct __fsid_t' sugar
|   `-RecordType 0x5d8710 '__fsid_t'
|     `-Record 0x5d8688 ''
|-TypedefDecl 0x5d8900 <line:137:22, line:156:27> col:27 referenced __clock_t 'long'
| `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5d8970 <line:137:22, line:157:26> col:26 __rlim_t 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5d89e0 <line:137:22, line:158:28> col:28 __rlim64_t 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5d8a50 <line:137:22, line:159:24> col:24 referenced __id_t 'unsigned int'
| `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x5d8ac0 <line:137:22, line:160:26> col:26 referenced __time_t 'long'
| `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5d8b30 <line:137:22, line:161:30> col:30 __useconds_t 'unsigned int'
| `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x5d8ba0 <line:137:22, line:162:31> col:31 referenced __suseconds_t 'long'
| `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5d8c10 <line:137:22, line:164:27> col:27 referenced __daddr_t 'int'
| `-BuiltinType 0x553dd0 'int'
|-TypedefDecl 0x5d8c80 <line:137:22, line:165:25> col:25 referenced __key_t 'int'
| `-BuiltinType 0x553dd0 'int'
|-TypedefDecl 0x5d8cf0 <line:137:22, line:168:29> col:29 referenced __clockid_t 'int'
| `-BuiltinType 0x553dd0 'int'
|-TypedefDecl 0x5d8d60 <line:137:22, line:171:27> col:27 referenced __timer_t 'void *'
| `-PointerType 0x5544f0 'void *'
|   `-BuiltinType 0x553d30 'void'
|-TypedefDecl 0x5d8dd0 <line:137:22, line:174:29> col:29 referenced __blksize_t 'long'
| `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5d8e40 <line:137:22, line:179:28> col:28 referenced __blkcnt_t 'long'
| `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5d8eb0 <line:137:22, line:180:30> col:30 __blkcnt64_t 'long'
| `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5d8f20 <line:137:22, line:183:30> col:30 referenced __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5d8f90 <line:137:22, line:184:32> col:32 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5d9000 <line:137:22, line:187:30> col:30 referenced __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5d9070 <line:137:22, line:188:32> col:32 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5d90e0 <line:137:22, line:191:28> col:28 __fsword_t 'long'
| `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5d9150 <line:137:22, line:193:27> col:27 referenced __ssize_t 'long'
| `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5d91c0 <line:137:22, line:196:33> col:33 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5d9230 <line:137:22, line:198:33> col:33 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x5d92c0 <line:202:1, col:19> col:19 referenced __loff_t '__off64_t':'long'
| `-TypedefType 0x5d9290 '__off64_t' sugar
|   |-Typedef 0x5d85c0 '__off64_t'
|   `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5d9330 <line:203:1, col:15> col:15 referenced __caddr_t 'char *'
| `-PointerType 0x554940 'char *'
|   `-BuiltinType 0x553d70 'char'
|-TypedefDecl 0x5d93a0 <line:137:22, line:206:25> col:25 __intptr_t 'long'
| `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5d9410 <line:137:22, line:209:23> col:23 __socklen_t 'unsigned int'
| `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x5d9480 <line:214:1, col:13> col:13 __sig_atomic_t 'int'
| `-BuiltinType 0x553dd0 'int'
|-RecordDecl 0x5de540 </usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:13:9, line:21:1> line:13:9 struct definition
| |-FieldDecl 0x5de5f8 <line:15:3, col:7> col:7 __count 'int'
| |-RecordDecl 0x5de648 <line:16:3, line:20:3> line:16:3 union definition
| | |-FieldDecl 0x5de708 <<built-in>:87:23, /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:18:19> col:19 __wch 'unsigned int'
| | `-FieldDecl 0x5de7e8 <line:19:5, col:18> col:10 __wchb 'char [4]'
| `-FieldDecl 0x5de898 <line:16:3, line:20:5> col:5 __value 'union (anonymous union at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)':'union __mbstate_t::(anonymous at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)'
|-TypedefDecl 0x5de948 <line:13:1, line:21:3> col:3 referenced __mbstate_t 'struct __mbstate_t':'__mbstate_t'
| `-ElaboratedType 0x5de8f0 'struct __mbstate_t' sugar
|   `-RecordType 0x5de5c0 '__mbstate_t'
|     `-Record 0x5de540 ''
|-RecordDecl 0x5de9b8 </usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h:10:9, line:14:1> line:10:16 struct _G_fpos_t definition
| |-FieldDecl 0x5dea90 <line:12:3, col:11> col:11 __pos '__off_t':'long'
| `-FieldDecl 0x5deb10 <line:13:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
|-TypedefDecl 0x5debb8 <line:10:1, line:14:3> col:3 referenced __fpos_t 'struct _G_fpos_t':'struct _G_fpos_t'
| `-ElaboratedType 0x5deb60 'struct _G_fpos_t' sugar
|   `-RecordType 0x5dea40 'struct _G_fpos_t'
|     `-Record 0x5de9b8 '_G_fpos_t'
|-RecordDecl 0x5dec28 </usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h:10:9, line:14:1> line:10:16 struct _G_fpos64_t definition
| |-FieldDecl 0x5dece0 <line:12:3, col:13> col:13 __pos '__off64_t':'long'
| `-FieldDecl 0x5ded40 <line:13:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
|-TypedefDecl 0x5dede8 <line:10:1, line:14:3> col:3 __fpos64_t 'struct _G_fpos64_t':'struct _G_fpos64_t'
| `-ElaboratedType 0x5ded90 'struct _G_fpos64_t' sugar
|   `-RecordType 0x5decb0 'struct _G_fpos64_t'
|     `-Record 0x5dec28 '_G_fpos64_t'
|-RecordDecl 0x5dee58 </usr/include/x86_64-linux-gnu/bits/types/__FILE.h:4:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0x5def50 <line:5:1, col:25> col:25 __FILE 'struct _IO_FILE':'struct _IO_FILE'
| `-ElaboratedType 0x5def00 'struct _IO_FILE' sugar
|   `-RecordType 0x5deee0 'struct _IO_FILE'
|     `-Record 0x5df368 '_IO_FILE'
|-RecordDecl 0x5defa8 prev 0x5dee58 </usr/include/x86_64-linux-gnu/bits/types/FILE.h:4:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0x5df048 <line:7:1, col:25> col:25 referenced FILE 'struct _IO_FILE':'struct _IO_FILE'
| `-ElaboratedType 0x5def00 'struct _IO_FILE' sugar
|   `-RecordType 0x5deee0 'struct _IO_FILE'
|     `-Record 0x5df368 '_IO_FILE'
|-RecordDecl 0x5df0a0 prev 0x5defa8 </usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h:35:1, col:8> col:8 struct _IO_FILE
|-RecordDecl 0x5df120 <line:36:1, col:8> col:8 struct _IO_marker
|-RecordDecl 0x5df1c0 <line:37:1, col:8> col:8 struct _IO_codecvt
|-RecordDecl 0x5df260 <line:38:1, col:8> col:8 struct _IO_wide_data
|-TypedefDecl 0x5df310 <line:43:1, col:14> col:14 referenced _IO_lock_t 'void'
| `-BuiltinType 0x553d30 'void'
|-RecordDecl 0x5df368 prev 0x5df0a0 <line:49:1, line:99:1> line:49:8 struct _IO_FILE definition
| |-FieldDecl 0x5df400 <line:51:3, col:7> col:7 _flags 'int'
| |-FieldDecl 0x5df468 <line:54:3, col:9> col:9 _IO_read_ptr 'char *'
| |-FieldDecl 0x5df4d0 <line:55:3, col:9> col:9 _IO_read_end 'char *'
| |-FieldDecl 0x5e25e0 <line:56:3, col:9> col:9 _IO_read_base 'char *'
| |-FieldDecl 0x5e2648 <line:57:3, col:9> col:9 _IO_write_base 'char *'
| |-FieldDecl 0x5e26b0 <line:58:3, col:9> col:9 _IO_write_ptr 'char *'
| |-FieldDecl 0x5e2718 <line:59:3, col:9> col:9 _IO_write_end 'char *'
| |-FieldDecl 0x5e2780 <line:60:3, col:9> col:9 _IO_buf_base 'char *'
| |-FieldDecl 0x5e27e8 <line:61:3, col:9> col:9 _IO_buf_end 'char *'
| |-FieldDecl 0x5e2850 <line:64:3, col:9> col:9 _IO_save_base 'char *'
| |-FieldDecl 0x5e28b8 <line:65:3, col:9> col:9 _IO_backup_base 'char *'
| |-FieldDecl 0x5e2920 <line:66:3, col:9> col:9 _IO_save_end 'char *'
| |-FieldDecl 0x5e2a20 <line:68:3, col:22> col:22 _markers 'struct _IO_marker *'
| |-FieldDecl 0x5e2af0 <line:70:3, col:20> col:20 _chain 'struct _IO_FILE *'
| |-FieldDecl 0x5e2b58 <line:72:3, col:7> col:7 _fileno 'int'
| |-FieldDecl 0x5e2bc0 <line:73:3, col:7> col:7 _flags2 'int'
| |-FieldDecl 0x5e2c20 <line:74:3, col:11> col:11 _old_offset '__off_t':'long'
| |-FieldDecl 0x5e2c88 <line:77:3, col:18> col:18 _cur_column 'unsigned short'
| |-FieldDecl 0x5e2cf0 <line:78:3, col:15> col:15 _vtable_offset 'signed char'
| |-FieldDecl 0x5e2dd8 <line:79:3, col:19> col:8 _shortbuf 'char [1]'
| |-FieldDecl 0x5e2e88 <line:81:3, col:15> col:15 _lock '_IO_lock_t *'
| |-FieldDecl 0x5e2ee8 <line:89:3, col:13> col:13 _offset '__off64_t':'long'
| |-FieldDecl 0x5e2ff0 <line:91:3, col:23> col:23 _codecvt 'struct _IO_codecvt *'
| |-FieldDecl 0x5e30f0 <line:92:3, col:25> col:25 _wide_data 'struct _IO_wide_data *'
| |-FieldDecl 0x5e3168 <line:93:3, col:20> col:20 _freeres_list 'struct _IO_FILE *'
| |-FieldDecl 0x5e31d0 <line:94:3, col:9> col:9 _freeres_buf 'void *'
| |-FieldDecl 0x5e3250 <line:95:3, col:10> col:10 __pad5 'size_t':'unsigned long'
| |-FieldDecl 0x5e32b8 <line:96:3, col:7> col:7 _mode 'int'
| `-FieldDecl 0x5e3508 <line:98:3, col:74> col:8 _unused2 'char [20]'
|-TypedefDecl 0x5e4ff0 prev 0x5b5800 </usr/include/stdio.h:52:1, col:24> col:24 referenced va_list '__gnuc_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0x5e3560 '__gnuc_va_list' sugar
|   |-Typedef 0x5b5868 '__gnuc_va_list'
|   `-TypedefType 0x5b57d0 '__builtin_va_list' sugar
|     |-Typedef 0x554c78 '__builtin_va_list'
|     `-ConstantArrayType 0x554c20 'struct __va_list_tag [1]' 1 
|       `-RecordType 0x554a60 'struct __va_list_tag'
|         `-Record 0x5549d8 '__va_list_tag'
|-TypedefDecl 0x5e5058 <line:63:1, col:17> col:17 off_t '__off_t':'long'
| `-TypedefType 0x5dea60 '__off_t' sugar
|   |-Typedef 0x5d8550 '__off_t'
|   `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5e50e0 <line:77:1, col:19> col:19 ssize_t '__ssize_t':'long'
| `-TypedefType 0x5e50b0 '__ssize_t' sugar
|   |-Typedef 0x5d9150 '__ssize_t'
|   `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x5e5170 <line:84:1, col:18> col:18 referenced fpos_t '__fpos_t':'struct _G_fpos_t'
| `-TypedefType 0x5e5140 '__fpos_t' sugar
|   |-Typedef 0x5debb8 '__fpos_t'
|   `-ElaboratedType 0x5deb60 'struct _G_fpos_t' sugar
|     `-RecordType 0x5dea40 'struct _G_fpos_t'
|       `-Record 0x5de9b8 '_G_fpos_t'
|-VarDecl 0x5e5228 <line:137:1, col:14> col:14 stdin 'FILE *' extern
|-VarDecl 0x5e52e8 <line:138:1, col:14> col:14 stdout 'FILE *' extern
|-VarDecl 0x5e5360 <line:139:1, col:14> col:14 stderr 'FILE *' extern
|-FunctionDecl 0x5e54b0 <line:146:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:146:12 remove 'int (const char *)' extern
| |-ParmVarDecl 0x5e53e0 <col:20, col:32> col:32 __filename 'const char *'
| `-NoThrowAttr 0x5e5558 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5e5720 </usr/include/stdio.h:148:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:148:12 rename 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x5e55c8 <col:20, col:32> col:32 __old 'const char *'
| |-ParmVarDecl 0x5e5648 <col:39, col:51> col:51 __new 'const char *'
| `-NoThrowAttr 0x5e57d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5e5ac0 </usr/include/stdio.h:152:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:152:12 renameat 'int (int, const char *, int, const char *)' extern
| |-ParmVarDecl 0x5e5840 <col:22, col:26> col:26 __oldfd 'int'
| |-ParmVarDecl 0x5e58c0 <col:35, col:47> col:47 __old 'const char *'
| |-ParmVarDecl 0x5e5940 <col:54, col:58> col:58 __newfd 'int'
| |-ParmVarDecl 0x5e59c0 <line:153:8, col:20> col:20 __new 'const char *'
| `-NoThrowAttr 0x5e5b80 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5e5cc8 </usr/include/stdio.h:173:1, col:27> col:14 tmpfile 'FILE *(void)' extern
|-FunctionDecl 0x5e5e50 <line:187:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:187:14 tmpnam 'char *(char *)' extern
| |-ParmVarDecl 0x5e5d80 <col:22, col:28> col:28 __s 'char *'
| `-NoThrowAttr 0x5e5ef8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5ea670 </usr/include/stdio.h:192:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:192:14 tmpnam_r 'char *(char *)' extern
| |-ParmVarDecl 0x5e5f68 <col:24, col:30> col:30 __s 'char *'
| `-NoThrowAttr 0x5ea718 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5ea8e0 </usr/include/stdio.h:204:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdio.h:204:14 tempnam 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x5ea788 <col:23, col:35> col:35 __dir 'const char *'
| |-ParmVarDecl 0x5ea808 <col:42, col:54> col:54 __pfx 'const char *'
| |-NoThrowAttr 0x5ea990 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0x5ea9e8 <line:208:47> malloc
|-FunctionDecl 0x5eab20 </usr/include/stdio.h:213:1, col:34> col:12 fclose 'int (FILE *)' extern
| `-ParmVarDecl 0x5eaa20 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x5eac70 <line:218:1, col:34> col:12 fflush 'int (FILE *)' extern
| `-ParmVarDecl 0x5eabd8 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x5eadc0 <line:227:1, col:43> col:12 fflush_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x5ead28 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0x5eb058 <line:246:14> col:14 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x5eb0f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x5eb160 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x5eb1d8 prev 0x5eb058 <col:1, line:247:37> line:246:14 fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x5eae80 <col:21, col:44> col:44 __filename 'const char *restrict'
| `-ParmVarDecl 0x5eaf00 <line:247:7, col:30> col:30 __modes 'const char *restrict'
|-FunctionDecl 0x5eb4b8 <line:252:1, line:254:34> line:252:14 freopen 'FILE *(const char *restrict, const char *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0x5eb2a0 <col:23, col:46> col:46 __filename 'const char *restrict'
| |-ParmVarDecl 0x5eb320 <line:253:9, col:32> col:32 __modes 'const char *restrict'
| `-ParmVarDecl 0x5eb398 <line:254:9, col:26> col:26 __stream 'FILE *restrict'
|-FunctionDecl 0x5ed798 <line:279:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:279:14 fdopen 'FILE *(int, const char *)' extern
| |-ParmVarDecl 0x5eb588 <col:22, col:26> col:26 __fd 'int'
| |-ParmVarDecl 0x5ed680 <col:32, col:44> col:44 __modes 'const char *'
| `-NoThrowAttr 0x5ed848 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5edad8 </usr/include/stdio.h:292:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:292:14 fmemopen 'FILE *(void *, size_t, const char *)' extern
| |-ParmVarDecl 0x5ed8b8 <col:24, col:30> col:30 __s 'void *'
| |-ParmVarDecl 0x5ed930 <col:35, col:42> col:42 __len 'size_t':'unsigned long'
| |-ParmVarDecl 0x5ed9b0 <col:49, col:61> col:61 __modes 'const char *'
| `-NoThrowAttr 0x5edb90 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5ede18 </usr/include/stdio.h:298:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:298:14 open_memstream 'FILE *(char **, size_t *)' extern
| |-ParmVarDecl 0x5edc30 <col:30, col:37> col:37 __bufloc 'char **'
| |-ParmVarDecl 0x5edd08 <col:47, col:55> col:55 __sizeloc 'size_t *'
| `-NoThrowAttr 0x5edec8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5ee0c8 </usr/include/stdio.h:304:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:304:13 setbuf 'void (FILE *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5edf30 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0x5edfb0 <col:48, col:65> col:65 __buf 'char *restrict'
| `-NoThrowAttr 0x5ee178 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5ee4a0 </usr/include/stdio.h:308:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:308:12 setvbuf 'int (FILE *restrict, char *restrict, int, size_t)' extern
| |-ParmVarDecl 0x5ee1e0 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0x5ee260 <col:48, col:65> col:65 __buf 'char *restrict'
| |-ParmVarDecl 0x5ee2e0 <line:309:7, col:11> col:11 __modes 'int'
| |-ParmVarDecl 0x5ee358 <col:20, col:27> col:27 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0x5ee560 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5ee828 </usr/include/stdio.h:314:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:314:13 setbuffer 'void (FILE *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0x5ee5c8 <col:24, col:41> col:41 __stream 'FILE *restrict'
| |-ParmVarDecl 0x5ee690 <col:51, col:68> col:68 __buf 'char *restrict'
| |-ParmVarDecl 0x5ee708 <line:315:10, col:17> col:17 __size 'size_t':'unsigned long'
| `-NoThrowAttr 0x5ee8e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5eea38 </usr/include/stdio.h:318:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:318:13 setlinebuf 'void (FILE *)' extern
| |-ParmVarDecl 0x5ee948 <col:25, col:31> col:31 __stream 'FILE *'
| `-NoThrowAttr 0x5eeae0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5eed30 </usr/include/stdio.h:326:12> col:12 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x5eedd0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x5eee38 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x5eeeb0 <col:12> Implicit printf 2 3
|-FunctionDecl 0x5eef18 prev 0x5eed30 <col:1, line:327:43> line:326:12 fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x5eeb48 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0x5eebc8 <line:327:7, col:30> col:30 __format 'const char *restrict'
| `-FormatAttr 0x5eeff8 <line:326:12> Inherited printf 2 3
|-FunctionDecl 0x5ef158 <line:332:12> col:12 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x5ef1f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x5ef268 <col:12> Implicit printf 1 2
|-FunctionDecl 0x5ef2d0 prev 0x5ef158 <col:1, col:56> col:12 used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x5ef048 <col:20, col:43> col:43 __format 'const char *restrict'
| `-FormatAttr 0x5ef3a8 <col:12> Inherited printf 1 2
|-FunctionDecl 0x5ef598 <line:334:12> col:12 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x5ef6a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x5ef708 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x5ef780 <col:12> Implicit printf 2 3
|-FunctionDecl 0x5ef7e8 prev 0x5ef598 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:56:49> /usr/include/stdio.h:334:12 sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x5ef3f8 <col:21, col:38> col:38 __s 'char *restrict'
| |-ParmVarDecl 0x5ef478 <line:335:7, col:30> col:30 __format 'const char *restrict'
| |-FormatAttr 0x5ef8f0 <line:334:12> Inherited printf 2 3
| `-NoThrowAttr 0x5ef898 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
|-FunctionDecl 0x5efc00 </usr/include/stdio.h:341:12> col:12 implicit vfprintf 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5efca0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x5efd08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x5efd70 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x5efdf0 <col:12> Implicit printf 2 0
|-FunctionDecl 0x5efe58 prev 0x5efc00 <col:1, line:342:28> line:341:12 vfprintf 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5ef938 <col:22, col:39> col:39 __s 'FILE *restrict'
| |-ParmVarDecl 0x5ef9b8 <col:44, col:67> col:67 __format 'const char *restrict'
| |-ParmVarDecl 0x5efa90 <line:342:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x5eff40 <line:341:12> Inherited printf 2 0
|-FunctionDecl 0x5f0120 <line:347:12> col:12 implicit vprintf 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5f01c0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x5f0228 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x5f02a0 <col:12> Implicit printf 1 0
|-FunctionDecl 0x5f0308 prev 0x5f0120 <col:1, col:74> col:12 vprintf 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5eff90 <col:21, col:44> col:44 __format 'const char *restrict'
| |-ParmVarDecl 0x5f0008 <col:54, col:69> col:69 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x5f03e8 <col:12> Inherited printf 1 0
|-FunctionDecl 0x5f0750 <line:349:12> col:12 implicit vsprintf 'int (char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5f07f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x5f0858 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x5f08c0 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x5f0940 <col:12> Implicit printf 2 0
|-FunctionDecl 0x5f09a8 prev 0x5f0750 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:56:49> /usr/include/stdio.h:349:12 vsprintf 'int (char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5f0438 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0x5f04b8 <col:44, col:67> col:67 __format 'const char *restrict'
| |-ParmVarDecl 0x5f0530 <line:350:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-FormatAttr 0x5f0ab8 <line:349:12> Inherited printf 2 0
| `-NoThrowAttr 0x5f0a60 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
|-FunctionDecl 0x5f0d98 </usr/include/stdio.h:354:12> col:12 implicit snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x5f0e38 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x5f0ea0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x5f0f08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x5f0f88 <col:12> Implicit printf 3 4
|-FunctionDecl 0x5f0ff0 prev 0x5f0d98 <col:1, line:356:62> line:354:12 snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x5f0b08 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0x5f0b80 <col:44, col:51> col:51 __maxlen 'size_t':'unsigned long'
| |-ParmVarDecl 0x5f0c00 <line:355:8, col:31> col:31 __format 'const char *restrict'
| |-NoThrowAttr 0x5f10a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
| `-FormatAttr 0x5f1100 </usr/include/stdio.h:356:32, col:60> printf 3 4
|-FunctionDecl 0x5f1460 <line:358:12> col:12 implicit vsnprintf 'int (char *, unsigned long, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5f1500 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x5f1568 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x5f15d0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x5f1638 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x5f16c0 <col:12> Implicit printf 3 0
|-FunctionDecl 0x5f1760 prev 0x5f1460 <col:1, line:360:62> line:358:12 vsnprintf 'int (char *, unsigned long, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5f1150 <col:23, col:40> col:40 __s 'char *restrict'
| |-ParmVarDecl 0x5f11c8 <col:45, col:52> col:52 __maxlen 'size_t':'unsigned long'
| |-ParmVarDecl 0x5f1248 <line:359:9, col:32> col:32 __format 'const char *restrict'
| |-ParmVarDecl 0x5f12c0 <col:42, col:57> col:57 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-NoThrowAttr 0x5f1820 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
| `-FormatAttr 0x5f1878 </usr/include/stdio.h:360:32, col:60> printf 3 0
|-FunctionDecl 0x5f1b40 <line:379:1, line:381:52> line:379:12 vdprintf 'int (int, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5f18c8 <col:22, col:26> col:26 __fd 'int'
| |-ParmVarDecl 0x5f1948 <col:32, col:55> col:55 __fmt 'const char *restrict'
| |-ParmVarDecl 0x5f19c0 <line:380:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x5f1bf8 <line:381:22, col:50> printf 2 0
|-FunctionDecl 0x5f1e68 <line:382:1, line:383:52> line:382:12 dprintf 'int (int, const char *restrict, ...)' extern
| |-ParmVarDecl 0x5f1c78 <col:21, col:25> col:25 __fd 'int'
| |-ParmVarDecl 0x5f1cf8 <col:31, col:54> col:54 __fmt 'const char *restrict'
| `-FormatAttr 0x5f1f18 <line:383:22, col:50> printf 2 3
|-FunctionDecl 0x5f20b0 <line:391:12> col:12 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x5f2150 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x5f21b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x5f2230 <col:12> Implicit scanf 2 3
|-FunctionDecl 0x5f2298 prev 0x5f20b0 <col:1, line:392:42> line:391:12 fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x5f1f90 <col:20, col:37> col:37 __stream 'FILE *restrict'
| |-ParmVarDecl 0x5f2010 <line:392:6, col:29> col:29 __format 'const char *restrict'
| `-FormatAttr 0x5f2378 <line:391:12> Inherited scanf 2 3
|-FunctionDecl 0x5f2460 <line:397:12> col:12 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x5f2500 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x5f2570 <col:12> Implicit scanf 1 2
|-FunctionDecl 0x5f25d8 prev 0x5f2460 <col:1, col:55> col:12 scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x5f23c8 <col:19, col:42> col:42 __format 'const char *restrict'
| `-FormatAttr 0x5f26b0 <col:12> Inherited scanf 1 2
|-FunctionDecl 0x5f3938 <line:399:12> col:12 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x5f39d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x5f3a40 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x5f3ab8 <col:12> Implicit scanf 2 3
|-FunctionDecl 0x5f3b20 prev 0x5f3938 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:399:12 sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x5f3790 <col:20, col:43> col:43 __s 'const char *restrict'
| |-ParmVarDecl 0x5f3810 <line:400:6, col:29> col:29 __format 'const char *restrict'
| |-FormatAttr 0x5f3c28 <line:399:12> Inherited scanf 2 3
| `-NoThrowAttr 0x5f3bd0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5f3e00 prev 0x5f2298 </usr/include/stdio.h:407:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/stdio.h:407:24 fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x5f3c70 <col:33, col:50> col:50 __stream 'FILE *restrict'
| |-ParmVarDecl 0x5f3cf0 <line:408:5, col:28> col:28 __format 'const char *restrict'
| |-FormatAttr 0x5f3f28 <line:391:12> Inherited scanf 2 3
| `-AsmLabelAttr 0x5f3ea0 <<scratch space>:14:1> "__isoc99_fscanf" IsLiteralLabel
|-FunctionDecl 0x5f4078 prev 0x5f25d8 </usr/include/stdio.h:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/stdio.h:410:24 scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x5f3f78 <col:32, col:55> col:55 __format 'const char *restrict'
| |-FormatAttr 0x5f4198 <line:397:12> Inherited scanf 1 2
| `-AsmLabelAttr 0x5f4118 <<scratch space>:16:1> "__isoc99_scanf" IsLiteralLabel
|-FunctionDecl 0x5f4338 prev 0x5f3b20 </usr/include/stdio.h:412:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:412:28 sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x5f41e8 <col:37, col:60> col:60 __s 'const char *restrict'
| |-ParmVarDecl 0x5f4268 <line:413:9, col:32> col:32 __format 'const char *restrict'
| |-FormatAttr 0x5f4488 <line:399:12> Inherited scanf 2 3
| |-AsmLabelAttr 0x5f43d8 <<scratch space>:18:1> "__isoc99_sscanf" IsLiteralLabel
| `-NoThrowAttr 0x5f4460 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5f5070 </usr/include/stdio.h:432:12> col:12 implicit vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5f5110 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x5f5178 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x5f51e0 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x5f5260 <col:12> Implicit scanf 2 0
|-FunctionDecl 0x5f52c8 prev 0x5f5070 <col:1, line:434:51> line:432:12 vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5f44d0 <col:21, col:38> col:38 __s 'FILE *restrict'
| |-ParmVarDecl 0x5f4550 <col:43, col:66> col:66 __format 'const char *restrict'
| |-ParmVarDecl 0x5f45c8 <line:433:7, col:22> col:22 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x5f5380 <line:434:22, col:49> scanf 2 0
|-FunctionDecl 0x5f55a8 <line:440:12> col:12 implicit vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5f5648 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x5f56b0 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x5f5728 <col:12> Implicit scanf 1 0
|-FunctionDecl 0x5f5790 prev 0x5f55a8 <col:1, line:441:51> line:440:12 vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5f5400 <col:20, col:43> col:43 __format 'const char *restrict'
| |-ParmVarDecl 0x5f5478 <col:53, col:68> col:68 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x5f5840 <line:441:22, col:49> scanf 1 0
|-FunctionDecl 0x5f5b70 <line:444:12> col:12 implicit vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5f5c10 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x5f5c78 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x5f5ce0 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x5f5d60 <col:12> Implicit scanf 2 0
|-FunctionDecl 0x5f5dc8 prev 0x5f5b70 <col:1, line:446:59> line:444:12 vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5f58c0 <col:21, col:44> col:44 __s 'const char *restrict'
| |-ParmVarDecl 0x5f5940 <line:445:7, col:30> col:30 __format 'const char *restrict'
| |-ParmVarDecl 0x5f59b8 <col:40, col:55> col:55 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-NoThrowAttr 0x5f5e80 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-FormatAttr 0x5f5ed8 </usr/include/stdio.h:446:30, col:57> scanf 2 0
|-FunctionDecl 0x5f6a78 prev 0x5f52c8 <line:451:1, line:455:51> line:451:24 vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5f5f20 <line:452:11, col:28> col:28 __s 'FILE *restrict'
| |-ParmVarDecl 0x5f5fa0 <line:453:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5f6910 <col:37, col:52> col:52 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0x5f6b18 <<scratch space>:21:1> "__isoc99_vfscanf" IsLiteralLabel
| `-FormatAttr 0x5f6ba8 </usr/include/stdio.h:455:22, col:49> scanf 2 0
|-FunctionDecl 0x5f6d90 prev 0x5f5790 <line:456:1, line:458:51> line:456:24 vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5f6bf8 <col:33, col:56> col:56 __format 'const char *restrict'
| |-ParmVarDecl 0x5f6c70 <line:457:5, col:20> col:20 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0x5f6e30 <<scratch space>:23:1> "__isoc99_vscanf" IsLiteralLabel
| `-FormatAttr 0x5f6eb8 </usr/include/stdio.h:458:22, col:49> scanf 1 0
|-FunctionDecl 0x5f7128 prev 0x5f5dc8 <line:459:1, line:463:51> line:459:28 vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x5f6f08 <line:460:8, col:31> col:31 __s 'const char *restrict'
| |-ParmVarDecl 0x5f6f88 <line:461:8, col:31> col:31 __format 'const char *restrict'
| |-ParmVarDecl 0x5f7000 <line:462:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0x5f71c8 <<scratch space>:25:1> "__isoc99_vsscanf" IsLiteralLabel
| |-NoThrowAttr 0x5f7258 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-FormatAttr 0x5f7280 </usr/include/stdio.h:463:22, col:49> scanf 2 0
|-FunctionDecl 0x5f7360 <line:485:1, col:33> col:12 fgetc 'int (FILE *)' extern
| `-ParmVarDecl 0x5f72c8 <col:19, col:25> col:25 __stream 'FILE *'
|-FunctionDecl 0x5f74b0 <line:486:1, col:32> col:12 getc 'int (FILE *)' extern
| `-ParmVarDecl 0x5f7418 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0x5f7620 <line:492:1, col:25> col:12 getchar 'int (void)' extern
|-FunctionDecl 0x5f7768 <line:499:1, col:41> col:12 getc_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x5f76d0 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x5f7cf0 <line:500:1, col:34> col:12 getchar_unlocked 'int (void)' extern
|-FunctionDecl 0x5f7e38 <line:510:1, col:42> col:12 fgetc_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x5f7da0 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0x5f8090 <line:521:1, col:42> col:12 fputc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x5f7ef8 <col:19, col:23> col:23 __c 'int'
| `-ParmVarDecl 0x5f7f70 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0x5f8270 <line:522:1, col:41> col:12 putc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x5f8158 <col:18, col:22> col:22 __c 'int'
| `-ParmVarDecl 0x5f81d0 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x5f8400 <line:528:1, col:28> col:12 putchar 'int (int)' extern
| `-ParmVarDecl 0x5f8338 <col:21, col:25> col:25 __c 'int'
|-FunctionDecl 0x5f85d8 <line:537:1, col:51> col:12 fputc_unlocked 'int (int, FILE *)' extern
| |-ParmVarDecl 0x5f84c0 <col:28, col:32> col:32 __c 'int'
| `-ParmVarDecl 0x5f8538 <col:37, col:43> col:43 __stream 'FILE *'
|-FunctionDecl 0x5f87b8 <line:545:1, col:50> col:12 putc_unlocked 'int (int, FILE *)' extern
| |-ParmVarDecl 0x5f86a0 <col:27, col:31> col:31 __c 'int'
| `-ParmVarDecl 0x5f8718 <col:36, col:42> col:42 __stream 'FILE *'
|-FunctionDecl 0x5f8918 <line:546:1, col:37> col:12 putchar_unlocked 'int (int)' extern
| `-ParmVarDecl 0x5f8880 <col:30, col:34> col:34 __c 'int'
|-FunctionDecl 0x5f8a68 <line:553:1, col:32> col:12 getw 'int (FILE *)' extern
| `-ParmVarDecl 0x5f89d0 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0x5f8c40 <line:556:1, col:41> col:12 putw 'int (int, FILE *)' extern
| |-ParmVarDecl 0x5f8b28 <col:18, col:22> col:22 __w 'int'
| `-ParmVarDecl 0x5f8ba0 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x5f8f40 <line:564:1, col:77> col:14 fgets 'char *(char *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0x5f8d18 <col:21, col:38> col:38 __s 'char *restrict'
| |-ParmVarDecl 0x5f8d98 <col:43, col:47> col:47 __n 'int'
| `-ParmVarDecl 0x5f8e10 <col:52, col:69> col:69 __stream 'FILE *restrict'
|-FunctionDecl 0x5f92c8 <line:603:1, line:605:55> line:603:18 __getdelim '__ssize_t (char **restrict, size_t *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0x5f9010 <col:30, col:48> col:48 __lineptr 'char **restrict'
| |-ParmVarDecl 0x5f9088 <line:604:30, col:49> col:49 __n 'size_t *restrict'
| |-ParmVarDecl 0x5f9108 <col:54, col:58> col:58 __delimiter 'int'
| `-ParmVarDecl 0x5f9180 <line:605:30, col:47> col:47 __stream 'FILE *restrict'
|-FunctionDecl 0x5f95b8 <line:606:1, line:608:53> line:606:18 getdelim '__ssize_t (char **restrict, size_t *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0x5f93a0 <col:28, col:46> col:46 __lineptr 'char **restrict'
| |-ParmVarDecl 0x5f9418 <line:607:28, col:47> col:47 __n 'size_t *restrict'
| |-ParmVarDecl 0x5f9498 <col:52, col:56> col:56 __delimiter 'int'
| `-ParmVarDecl 0x5f9510 <line:608:28, col:45> col:45 __stream 'FILE *restrict'
|-FunctionDecl 0x5f98a8 <line:616:1, line:618:52> line:616:18 getline '__ssize_t (char **restrict, size_t *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0x5f9690 <col:27, col:45> col:45 __lineptr 'char **restrict'
| |-ParmVarDecl 0x5f9708 <line:617:27, col:46> col:46 __n 'size_t *restrict'
| `-ParmVarDecl 0x5f9780 <line:618:27, col:44> col:44 __stream 'FILE *restrict'
|-FunctionDecl 0x5f9b10 <line:626:1, col:72> col:12 fputs 'int (const char *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0x5f9978 <col:19, col:42> col:42 __s 'const char *restrict'
| `-ParmVarDecl 0x5f99f0 <col:47, col:64> col:64 __stream 'FILE *restrict'
|-FunctionDecl 0x5f9d10 <line:632:1, col:33> col:12 puts 'int (const char *)' extern
| `-ParmVarDecl 0x5f9bd8 <col:18, col:30> col:30 __s 'const char *'
|-FunctionDecl 0x5f9ee8 <line:639:1, col:43> col:12 ungetc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x5f9dd0 <col:20, col:24> col:24 __c 'int'
| `-ParmVarDecl 0x5f9e48 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0x5fa2a8 <line:646:15> col:15 implicit fread 'unsigned long (void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x5fa348 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x5fa3b0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x5fa418 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0x5fa480 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x5fa508 prev 0x5fa2a8 <col:1, line:647:45> line:646:15 fread 'unsigned long (void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x5f9fb0 <col:22, col:39> col:39 __ptr 'void *restrict'
| |-ParmVarDecl 0x5fa028 <col:46, col:53> col:53 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x5fa0a0 <line:647:8, col:15> col:15 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x5fa118 <col:20, col:37> col:37 __stream 'FILE *restrict'
|-FunctionDecl 0x5fa908 <line:652:15> col:15 implicit fwrite 'unsigned long (const void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x5fa9a8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x5faa10 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x5faa78 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0x5faae0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x5fab68 prev 0x5fa908 <col:1, line:653:41> line:652:15 fwrite 'unsigned long (const void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x5fa610 <col:23, col:46> col:46 __ptr 'const void *restrict'
| |-ParmVarDecl 0x5fa688 <col:53, col:60> col:60 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x5fa700 <line:653:9, col:16> col:16 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x5fa778 <col:21, col:38> col:38 __s 'FILE *restrict'
|-FunctionDecl 0x5faeb8 <line:673:1, line:674:47> line:673:15 fread_unlocked 'size_t (void *restrict, size_t, size_t, FILE *restrict)' extern
| |-ParmVarDecl 0x5fac40 <col:31, col:48> col:48 __ptr 'void *restrict'
| |-ParmVarDecl 0x5fad20 <col:55, col:62> col:62 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x5fad98 <line:674:10, col:17> col:17 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x5fae10 <col:22, col:39> col:39 __stream 'FILE *restrict'
|-FunctionDecl 0x5fb1a0 <line:675:1, line:676:48> line:675:15 fwrite_unlocked 'size_t (const void *restrict, size_t, size_t, FILE *restrict)' extern
| |-ParmVarDecl 0x5faf90 <col:32, col:55> col:55 __ptr 'const void *restrict'
| |-ParmVarDecl 0x5fb008 <col:62, col:69> col:69 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x5fb080 <line:676:11, col:18> col:18 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x5fb0f8 <col:23, col:40> col:40 __stream 'FILE *restrict'
|-FunctionDecl 0x5fb4a0 <line:684:1, col:63> col:12 fseek 'int (FILE *, long, int)' extern
| |-ParmVarDecl 0x5fb270 <col:19, col:25> col:25 __stream 'FILE *'
| |-ParmVarDecl 0x5fb2f0 <col:35, col:44> col:44 __off 'long'
| `-ParmVarDecl 0x5fb370 <col:51, col:55> col:55 __whence 'int'
|-FunctionDecl 0x5fb660 <line:689:1, col:38> col:17 ftell 'long (FILE *)' extern
| `-ParmVarDecl 0x5fb568 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0x5fb7a8 <line:694:1, col:35> col:13 rewind 'void (FILE *)' extern
| `-ParmVarDecl 0x5fb718 <col:21, col:27> col:27 __stream 'FILE *'
|-FunctionDecl 0x5fba40 <line:707:1, col:63> col:12 fseeko 'int (FILE *, __off_t, int)' extern
| |-ParmVarDecl 0x5fb860 <col:20, col:26> col:26 __stream 'FILE *'
| |-ParmVarDecl 0x5fb8d8 <col:36, col:44> col:44 __off '__off_t':'long'
| `-ParmVarDecl 0x5fb958 <col:51, col:55> col:55 __whence 'int'
|-FunctionDecl 0x5fbbc8 <line:712:1, col:38> col:16 ftello '__off_t (FILE *)' extern
| `-ParmVarDecl 0x5fbb08 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0x5fcec0 <line:731:1, col:72> col:12 fgetpos 'int (FILE *restrict, fpos_t *restrict)' extern
| |-ParmVarDecl 0x5fbc80 <col:21, col:38> col:38 __stream 'FILE *restrict'
| `-ParmVarDecl 0x5fcda8 <col:48, col:67> col:67 __pos 'fpos_t *restrict'
|-FunctionDecl 0x5fd170 <line:736:1, col:56> col:12 fsetpos 'int (FILE *, const fpos_t *)' extern
| |-ParmVarDecl 0x5fcf80 <col:21, col:27> col:27 __stream 'FILE *'
| `-ParmVarDecl 0x5fd058 <col:37, col:51> col:51 __pos 'const fpos_t *'
|-FunctionDecl 0x5fd2c0 <line:757:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:757:13 clearerr 'void (FILE *)' extern
| |-ParmVarDecl 0x5fd230 <col:23, col:29> col:29 __stream 'FILE *'
| `-NoThrowAttr 0x5fd368 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5fd468 </usr/include/stdio.h:759:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:759:12 feof 'int (FILE *)' extern
| |-ParmVarDecl 0x5fd3d0 <col:18, col:24> col:24 __stream 'FILE *'
| `-NoThrowAttr 0x5fd510 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5fd610 </usr/include/stdio.h:761:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:761:12 ferror 'int (FILE *)' extern
| |-ParmVarDecl 0x5fd578 <col:20, col:26> col:26 __stream 'FILE *'
| `-NoThrowAttr 0x5fd6b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5fd7b0 </usr/include/stdio.h:765:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:765:13 clearerr_unlocked 'void (FILE *)' extern
| |-ParmVarDecl 0x5fd720 <col:32, col:38> col:38 __stream 'FILE *'
| `-NoThrowAttr 0x5fd858 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5fd958 </usr/include/stdio.h:766:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:766:12 feof_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0x5fd8c0 <col:27, col:33> col:33 __stream 'FILE *'
| `-NoThrowAttr 0x5fda00 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5fdb00 </usr/include/stdio.h:767:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:767:12 ferror_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0x5fda68 <col:29, col:35> col:35 __stream 'FILE *'
| `-NoThrowAttr 0x5fdba8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5fde90 </usr/include/stdio.h:775:1, col:36> col:13 perror 'void (const char *)' extern
| `-ParmVarDecl 0x5fdc18 <col:21, col:33> col:33 __s 'const char *'
|-VarDecl 0x5fdf50 </usr/include/x86_64-linux-gnu/bits/sys_errlist.h:26:1, col:12> col:12 sys_nerr 'int' extern
|-VarDecl 0x5fe040 <line:27:1, col:38> col:26 sys_errlist 'const char *const []' extern
|-FunctionDecl 0x5fe150 </usr/include/stdio.h:786:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:786:12 fileno 'int (FILE *)' extern
| |-ParmVarDecl 0x5fe0b8 <col:20, col:26> col:26 __stream 'FILE *'
| `-NoThrowAttr 0x5fe1f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5fe2f8 </usr/include/stdio.h:791:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:791:12 fileno_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0x5fe260 <col:29, col:35> col:35 __stream 'FILE *'
| `-NoThrowAttr 0x5fe3a0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5fe528 </usr/include/stdio.h:800:1, col:63> col:14 popen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x5fe410 <col:21, col:33> col:33 __command 'const char *'
| `-ParmVarDecl 0x5fe490 <col:44, col:56> col:56 __modes 'const char *'
|-FunctionDecl 0x5fe680 <line:806:1, col:34> col:12 pclose 'int (FILE *)' extern
| `-ParmVarDecl 0x5fe5e8 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x5fe7d8 <line:812:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:812:14 ctermid 'char *(char *)' extern
| |-ParmVarDecl 0x5fe740 <col:23, col:29> col:29 __s 'char *'
| `-NoThrowAttr 0x5fe880 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5fe978 </usr/include/stdio.h:840:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:840:13 flockfile 'void (FILE *)' extern
| |-ParmVarDecl 0x5fe8e8 <col:24, col:30> col:30 __stream 'FILE *'
| `-NoThrowAttr 0x5fea20 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5feb20 </usr/include/stdio.h:844:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:844:12 ftrylockfile 'int (FILE *)' extern
| |-ParmVarDecl 0x5fea88 <col:26, col:32> col:32 __stream 'FILE *'
| `-NoThrowAttr 0x5febc8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5fecc0 </usr/include/stdio.h:847:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:847:13 funlockfile 'void (FILE *)' extern
| |-ParmVarDecl 0x5fec30 <col:26, col:32> col:32 __stream 'FILE *'
| `-NoThrowAttr 0x5fed68 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x5ff400 </usr/include/stdio.h:858:1, col:27> col:12 __uflow 'int (FILE *)' extern
| `-ParmVarDecl 0x5fedd0 <col:21, col:26> col:27 'FILE *'
|-FunctionDecl 0x5ff650 <line:859:1, col:35> col:12 __overflow 'int (FILE *, int)' extern
| |-ParmVarDecl 0x5ff4b8 <col:24, col:29> col:30 'FILE *'
| `-ParmVarDecl 0x5ff538 <col:32> col:35 'int'
|-TypedefDecl 0x5ff9b0 <main/hals/driver/../../los_compiler.h:308:1, col:32> col:32 referenced UINT8 'unsigned char'
| `-BuiltinType 0x553e30 'unsigned char'
|-TypedefDecl 0x5ffa20 <line:309:1, col:32> col:32 referenced UINT16 'unsigned short'
| `-BuiltinType 0x553e50 'unsigned short'
|-TypedefDecl 0x5ffa90 <line:310:1, col:32> col:32 referenced UINT32 'unsigned int'
| `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x5ffb00 <line:311:1, col:32> col:32 INT8 'signed char'
| `-BuiltinType 0x553d90 'signed char'
|-TypedefDecl 0x5ffb70 <line:312:1, col:32> col:32 INT16 'short'
| `-BuiltinType 0x553db0 'short'
|-TypedefDecl 0x5ffbe0 <line:313:1, col:32> col:32 referenced INT32 'int'
| `-BuiltinType 0x553dd0 'int'
|-TypedefDecl 0x5ffc50 <line:314:1, col:32> col:32 FLOAT 'float'
| `-BuiltinType 0x553ed0 'float'
|-TypedefDecl 0x5ffcc0 <line:315:1, col:32> col:32 DOUBLE 'double'
| `-BuiltinType 0x553ef0 'double'
|-TypedefDecl 0x5ffd28 <line:316:1, col:32> col:32 referenced CHAR 'char'
| `-BuiltinType 0x553d70 'char'
|-TypedefDecl 0x5ffd98 <line:318:1, col:32> col:32 referenced BOOL 'unsigned int'
| `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x5ffe08 <line:319:1, col:32> col:32 referenced UINT64 'unsigned long long'
| `-BuiltinType 0x553eb0 'unsigned long long'
|-TypedefDecl 0x5ffe78 <line:320:1, col:32> col:32 referenced INT64 'long long'
| `-BuiltinType 0x553e10 'long long'
|-TypedefDecl 0x5ffee8 <line:321:1, col:32> col:32 referenced UINTPTR 'unsigned int'
| `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x5fff58 <line:322:1, col:32> col:32 INTPTR 'int'
| `-BuiltinType 0x553dd0 'int'
|-TypedefDecl 0x5fffe0 <line:324:1, col:24> col:24 Atomic 'volatile INT32':'volatile int'
| `-QualType 0x5fffb4 'volatile INT32' volatile
|   `-TypedefType 0x5fffb0 'INT32' sugar
|     |-Typedef 0x5ffbe0 'INT32'
|     `-BuiltinType 0x553dd0 'int'
|-TypedefDecl 0x600070 <line:325:1, col:24> col:24 Atomic64 'volatile INT64':'volatile long long'
| `-QualType 0x600044 'volatile INT64' volatile
|   `-TypedefType 0x600040 'INT64' sugar
|     |-Typedef 0x5ffe78 'INT64'
|     `-BuiltinType 0x553e10 'long long'
|-FunctionDecl 0x600318 <line:407:1, line:410:1> line:407:22 LOS_Align 'UINT32 (UINT32, UINT32)' static inline
| |-ParmVarDecl 0x600190 <col:32, col:39> col:39 used addr 'UINT32':'unsigned int'
| |-ParmVarDecl 0x600208 <col:45, col:52> col:52 used boundary 'UINT32':'unsigned int'
| |-CompoundStmt 0x609f68 <line:408:1, line:410:1>
| | `-ReturnStmt 0x609f58 <line:409:5, col:93>
| |   `-BinaryOperator 0x609f38 <col:12, col:93> 'unsigned int' '&'
| |     |-ParenExpr 0x609e50 <col:12, col:75> 'unsigned int'
| |     | `-BinaryOperator 0x609e30 <col:13, col:74> 'unsigned int' '+'
| |     |   |-ImplicitCastExpr 0x609e18 <col:13> 'UINT32':'unsigned int' <LValueToRValue>
| |     |   | `-DeclRefExpr 0x6003c8 <col:13> 'UINT32':'unsigned int' lvalue ParmVar 0x600190 'addr' 'UINT32':'unsigned int'
| |     |   `-ParenExpr 0x609df8 <col:20, col:74> 'unsigned int'
| |     |     `-ConditionalOperator 0x609dc8 <col:21, col:73> 'unsigned int'
| |     |       |-ParenExpr 0x609cc0 <col:21, col:52> 'int'
| |     |       | `-BinaryOperator 0x609ca0 <col:22, col:48> 'int' '>'
| |     |       |   |-ParenExpr 0x609c48 <col:22, col:44> 'unsigned int'
| |     |       |   | `-BinaryOperator 0x609c28 <col:23, col:43> 'unsigned int' '+'
| |     |       |   |   |-ImplicitCastExpr 0x609c10 <col:23> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |   | `-DeclRefExpr 0x609b40 <col:23> 'UINT32':'unsigned int' lvalue ParmVar 0x600190 'addr' 'UINT32':'unsigned int'
| |     |       |   |   `-ParenExpr 0x609bf0 <col:30, col:43> 'unsigned int'
| |     |       |   |     `-BinaryOperator 0x609bd0 <col:31, col:42> 'unsigned int' '-'
| |     |       |   |       |-ImplicitCastExpr 0x609ba0 <col:31> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |       | `-DeclRefExpr 0x609b60 <col:31> 'UINT32':'unsigned int' lvalue ParmVar 0x600208 'boundary' 'UINT32':'unsigned int'
| |     |       |   |       `-ImplicitCastExpr 0x609bb8 <col:42> 'unsigned int' <IntegralCast>
| |     |       |   |         `-IntegerLiteral 0x609b80 <col:42> 'int' 1
| |     |       |   `-ImplicitCastExpr 0x609c88 <col:48> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |     `-DeclRefExpr 0x609c68 <col:48> 'UINT32':'unsigned int' lvalue ParmVar 0x600190 'addr' 'UINT32':'unsigned int'
| |     |       |-ParenExpr 0x609d70 <col:56, col:69> 'unsigned int'
| |     |       | `-BinaryOperator 0x609d50 <col:57, col:68> 'unsigned int' '-'
| |     |       |   |-ImplicitCastExpr 0x609d20 <col:57> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   | `-DeclRefExpr 0x609ce0 <col:57> 'UINT32':'unsigned int' lvalue ParmVar 0x600208 'boundary' 'UINT32':'unsigned int'
| |     |       |   `-ImplicitCastExpr 0x609d38 <col:68> 'unsigned int' <IntegralCast>
| |     |       |     `-IntegerLiteral 0x609d00 <col:68> 'int' 1
| |     |       `-ImplicitCastExpr 0x609db0 <col:73> 'unsigned int' <IntegralCast>
| |     |         `-IntegerLiteral 0x609d90 <col:73> 'int' 0
| |     `-UnaryOperator 0x609f20 <col:79, col:93> 'unsigned int' prefix '~' cannot overflow
| |       `-ParenExpr 0x609f00 <col:80, col:93> 'unsigned int'
| |         `-BinaryOperator 0x609ee0 <col:81, col:92> 'unsigned int' '-'
| |           |-ImplicitCastExpr 0x609eb0 <col:81> 'UINT32':'unsigned int' <LValueToRValue>
| |           | `-DeclRefExpr 0x609e70 <col:81> 'UINT32':'unsigned int' lvalue ParmVar 0x600208 'boundary' 'UINT32':'unsigned int'
| |           `-ImplicitCastExpr 0x609ec8 <col:92> 'unsigned int' <IntegralCast>
| |             `-IntegerLiteral 0x609e90 <col:92> 'int' 1
| `-FullComment 0x7181d0 <line:388:3, line:405:7>
|   |-ParagraphComment 0x710a20 <line:388:3>
|   | `-TextComment 0x7109f0 <col:3> Text=" "
|   |-VerbatimLineComment 0x710a40 <col:4, col:21> Text=" los_base"
|   |-ParagraphComment 0x717880 <line:389:3>
|   | `-TextComment 0x710a80 <col:3> Text=" "
|   |-BlockCommandComment 0x7178a0 <col:4, col:70> Name="brief"
|   | `-ParagraphComment 0x717900 <col:10, col:70>
|   |   `-TextComment 0x7178d0 <col:10, col:70> Text=" Align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0x717950 <line:391:3>
|   | `-TextComment 0x717920 <col:3> Text=" "
|   |-BlockCommandComment 0x717970 <col:4, line:392:83> Name="par"
|   | `-ParagraphComment 0x7179f0 <line:391:8, line:392:83>
|   |   |-TextComment 0x7179a0 <line:391:8, col:20> Text=" Description:"
|   |   `-TextComment 0x7179c0 <line:392:3, col:83> Text=" This API is used to align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0x717a40 <line:394:3>
|   | `-TextComment 0x717a10 <col:3> Text=" "
|   |-BlockCommandComment 0x717a60 <col:4, line:397:8> Name="attention"
|   | `-ParagraphComment 0x717c30 <line:395:3, line:397:8>
|   |   |-TextComment 0x717a90 <line:395:3> Text=" "
|   |   |-HTMLStartTagComment 0x717ab0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x717af0 <line:396:3> Text=" "
|   |   |-HTMLStartTagComment 0x717b10 <col:4, col:7> Name="li"
|   |   |-TextComment 0x717b50 <col:8, col:50> Text="the value of boundary usually is 4,8,16,32."
|   |   |-HTMLEndTagComment 0x717b70 <col:51, col:55> Name="li"
|   |   |-TextComment 0x717ba0 <line:397:3> Text=" "
|   |   `-HTMLEndTagComment 0x717bc0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x717c80 <line:399:3>
|   | `-TextComment 0x717c50 <col:3> Text=" "
|   |-ParamCommandComment 0x717ca0 <col:4, line:400:3> [in] implicitly Param="addr" ParamIndex=0
|   | `-ParagraphComment 0x717d50 <line:399:15, line:400:3>
|   |   |-TextComment 0x717d00 <line:399:15, col:61> Text="     [IN]  The variable what you want to align."
|   |   `-TextComment 0x717d20 <line:400:3> Text=" "
|   |-ParamCommandComment 0x717d70 <col:4, col:63> [in] implicitly Param="boundary" ParamIndex=1
|   | `-ParagraphComment 0x717e00 <col:19, col:63>
|   |   `-TextComment 0x717dd0 <col:19, col:63> Text=" [IN]  The align size what you want to align."
|   |-ParagraphComment 0x717e50 <line:402:3>
|   | `-TextComment 0x717e20 <col:3> Text=" "
|   |-BlockCommandComment 0x717e70 <col:4, line:403:3> Name="retval"
|   | `-ParagraphComment 0x717ef0 <line:402:11, line:403:3>
|   |   |-TextComment 0x717ea0 <line:402:11, col:55> Text=" #UINT32 The variable what have been aligned."
|   |   `-TextComment 0x717ec0 <line:403:3> Text=" "
|   |-BlockCommandComment 0x717f10 <col:4, line:405:3> Name="par"
|   | `-ParagraphComment 0x7180e0 <line:403:8, line:405:3>
|   |   |-TextComment 0x717f40 <line:403:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x717f60 <line:404:3> Text=" "
|   |   |-HTMLStartTagComment 0x717f80 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x717fc0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x718000 <col:12, col:73> Text="los_base.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x718020 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x718050 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x718080 <line:405:3> Text=" "
|   `-BlockCommandComment 0x718100 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x718130 <<invalid sloc>>
|-FunctionDecl 0x60a058 <line:423:1, line:438:1> line:423:20 used maybe_release_fence 'void (int)' static inline
| |-ParmVarDecl 0x609f98 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0x60a610 <line:424:1, line:438:1>
|   `-SwitchStmt 0x60a138 <line:425:5, line:437:5>
|     |-ImplicitCastExpr 0x60a120 <line:425:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x60a100 <col:13> 'int' lvalue ParmVar 0x609f98 'model' 'int'
|     `-CompoundStmt 0x60a5c8 <col:20, line:437:5>
|       |-CaseStmt 0x60a190 <line:426:9, line:427:52>
|       | |-ConstantExpr 0x60a178 <<built-in>:14:26> 'int'
|       | | `-IntegerLiteral 0x60a158 <col:26> 'int' 3
|       | `-CallExpr 0x60a3a0 <main/hals/driver/../../los_compiler.h:427:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x60a388 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x60a320 <col:13> '<builtin fn type>' Function 0x60a1b8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x60a340 <<built-in>:14:26> 'int' 3
|       |-BreakStmt 0x60a3c8 <main/hals/driver/../../los_compiler.h:428:13>
|       |-CaseStmt 0x60a408 <line:429:9, line:430:52>
|       | |-ConstantExpr 0x60a3f0 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0x60a3d0 <col:26> 'int' 4
|       | `-CallExpr 0x60a488 <main/hals/driver/../../los_compiler.h:430:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x60a470 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x60a430 <col:13> '<builtin fn type>' Function 0x60a1b8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x60a450 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0x60a4b0 <main/hals/driver/../../los_compiler.h:431:13>
|       |-CaseStmt 0x60a4f0 <line:432:9, line:433:52>
|       | |-ConstantExpr 0x60a4d8 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0x60a4b8 <col:26> 'int' 5
|       | `-CallExpr 0x60a570 <main/hals/driver/../../los_compiler.h:433:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x60a558 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x60a518 <col:13> '<builtin fn type>' Function 0x60a1b8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x60a538 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0x60a598 <main/hals/driver/../../los_compiler.h:434:13>
|       `-DefaultStmt 0x60a5a8 <line:435:9, line:436:13>
|         `-BreakStmt 0x60a5a0 <col:13>
|-FunctionDecl 0x60a1b8 <line:427:13> col:13 implicit used __atomic_thread_fence 'void (int)' extern
| |-ParmVarDecl 0x60a258 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x60a2c8 <col:13> Implicit
|-FunctionDecl 0x60a6d0 <line:440:1, line:455:1> line:440:20 used maybe_acquire_fence 'void (int)' static inline
| |-ParmVarDecl 0x60a640 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0x60aaf8 <line:441:1, line:455:1>
|   `-SwitchStmt 0x60a7b0 <line:442:5, line:454:5>
|     |-ImplicitCastExpr 0x60a798 <line:442:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x60a778 <col:13> 'int' lvalue ParmVar 0x60a640 'model' 'int'
|     `-CompoundStmt 0x60aab0 <col:20, line:454:5>
|       |-CaseStmt 0x60a808 <line:443:9, line:444:52>
|       | |-ConstantExpr 0x60a7f0 <<built-in>:13:26> 'int'
|       | | `-IntegerLiteral 0x60a7d0 <col:26> 'int' 2
|       | `-CallExpr 0x60a888 <main/hals/driver/../../los_compiler.h:444:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x60a870 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x60a830 <col:13> '<builtin fn type>' Function 0x60a1b8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x60a850 <<built-in>:13:26> 'int' 2
|       |-BreakStmt 0x60a8b0 <main/hals/driver/../../los_compiler.h:445:13>
|       |-CaseStmt 0x60a8f0 <line:446:9, line:447:52>
|       | |-ConstantExpr 0x60a8d8 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0x60a8b8 <col:26> 'int' 4
|       | `-CallExpr 0x60a970 <main/hals/driver/../../los_compiler.h:447:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x60a958 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x60a918 <col:13> '<builtin fn type>' Function 0x60a1b8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x60a938 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0x60a998 <main/hals/driver/../../los_compiler.h:448:13>
|       |-CaseStmt 0x60a9d8 <line:449:9, line:450:52>
|       | |-ConstantExpr 0x60a9c0 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0x60a9a0 <col:26> 'int' 5
|       | `-CallExpr 0x60aa58 <main/hals/driver/../../los_compiler.h:450:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x60aa40 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x60aa00 <col:13> '<builtin fn type>' Function 0x60a1b8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x60aa20 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0x60aa80 <main/hals/driver/../../los_compiler.h:451:13>
|       `-DefaultStmt 0x60aa90 <line:452:9, line:453:13>
|         `-BreakStmt 0x60aa88 <col:13>
|-FunctionDecl 0x60d028 <line:458:1, line:472:1> line:458:21 used __libatomic_flag_for_address 'BOOL *(void *)' static inline
| |-ParmVarDecl 0x60ced8 <col:50, col:56> col:56 used addr 'void *'
| `-CompoundStmt 0x60e1b0 <line:459:1, line:472:1>
|   |-DeclStmt 0x60d780 <line:460:5, col:99>
|   | `-VarDecl 0x60d208 <col:5, col:98> col:17 used flag_table 'BOOL [16]' static cinit
|   |   `-InitListExpr 0x60d540 <col:51, col:98> 'BOOL [16]'
|   |     |-ImplicitCastExpr 0x60d600 <col:52> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x60d270 <col:52> 'int' 0
|   |     |-ImplicitCastExpr 0x60d618 <col:55> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x60d290 <col:55> 'int' 0
|   |     |-ImplicitCastExpr 0x60d630 <col:58> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x60d2b0 <col:58> 'int' 0
|   |     |-ImplicitCastExpr 0x60d648 <col:61> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x60d2d0 <col:61> 'int' 0
|   |     |-ImplicitCastExpr 0x60d660 <col:64> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x60d2f0 <col:64> 'int' 0
|   |     |-ImplicitCastExpr 0x60d678 <col:67> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x60d310 <col:67> 'int' 0
|   |     |-ImplicitCastExpr 0x60d690 <col:70> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x60d330 <col:70> 'int' 0
|   |     |-ImplicitCastExpr 0x60d6a8 <col:73> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x60d350 <col:73> 'int' 0
|   |     |-ImplicitCastExpr 0x60d6c0 <col:76> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x60d370 <col:76> 'int' 0
|   |     |-ImplicitCastExpr 0x60d6d8 <col:79> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x60d390 <col:79> 'int' 0
|   |     |-ImplicitCastExpr 0x60d6f0 <col:82> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x60d3b0 <col:82> 'int' 0
|   |     |-ImplicitCastExpr 0x60d708 <col:85> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x60d3d0 <col:85> 'int' 0
|   |     |-ImplicitCastExpr 0x60d720 <col:88> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x60d3f0 <col:88> 'int' 0
|   |     |-ImplicitCastExpr 0x60d738 <col:91> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x60d410 <col:91> 'int' 0
|   |     |-ImplicitCastExpr 0x60d750 <col:94> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x60d430 <col:94> 'int' 0
|   |     `-ImplicitCastExpr 0x60d768 <col:97> 'BOOL':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x60d450 <col:97> 'int' 0
|   |-DeclStmt 0x60d910 <line:461:5, col:41>
|   | `-VarDecl 0x60d7d0 <col:5, col:37> col:13 used p 'UINTPTR':'unsigned int' cinit
|   |   `-CStyleCastExpr 0x60d8e8 <col:17, col:37> 'UINTPTR':'unsigned int' <PointerToIntegral>
|   |     `-CStyleCastExpr 0x60d8b0 <col:26, col:37> 'UINTPTR *' <BitCast>
|   |       `-ImplicitCastExpr 0x60d898 <col:37> 'void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x60d838 <col:37> 'void *' lvalue ParmVar 0x60ced8 'addr' 'void *'
|   |-CompoundAssignOperator 0x60da98 <line:462:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x60d928 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x60d7d0 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x60da78 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0x60d9c0 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x60d9a0 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x60d988 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x60d948 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x60d7d0 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x60d968 <col:16> 'int' 2
|   |   `-ParenExpr 0x60da58 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x60da38 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x60da20 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x60d9e0 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0x60d7d0 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x60da00 <col:27> 'int' 4
|   |-CompoundAssignOperator 0x60dc38 <line:463:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x60dac8 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x60d7d0 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x60dc18 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0x60db60 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x60db40 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x60db28 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x60dae8 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x60d7d0 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x60db08 <col:16> 'int' 7
|   |   `-ParenExpr 0x60dbf8 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x60dbd8 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x60dbc0 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x60db80 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0x60d7d0 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x60dba0 <col:27> 'int' 5
|   |-CompoundAssignOperator 0x60ddd8 <line:464:5, col:30> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x60dc68 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x60d7d0 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x60ddb8 <col:10, col:30> 'unsigned int' '+'
|   |   |-ParenExpr 0x60dd00 <col:10, col:18> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x60dce0 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x60dcc8 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x60dc88 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x60d7d0 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x60dca8 <col:16> 'int' 17
|   |   `-ParenExpr 0x60dd98 <col:22, col:30> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x60dd78 <col:23, col:28> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x60dd60 <col:23> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x60dd20 <col:23> 'UINTPTR':'unsigned int' lvalue Var 0x60d7d0 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x60dd40 <col:28> 'int' 13
|   |-IfStmt 0x60dfb0 <line:466:5, line:468:5>
|   | |-BinaryOperator 0x60de78 <line:466:9, col:26> 'int' '>'
|   | | |-UnaryExprOrTypeTraitExpr 0x60de20 <col:9, col:22> 'unsigned long' sizeof 'void *'
|   | | `-ImplicitCastExpr 0x60de60 <col:26> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x60de40 <col:26> 'int' 4
|   | `-CompoundStmt 0x60df98 <col:29, line:468:5>
|   |   `-CompoundAssignOperator 0x60df68 <line:467:9, col:22> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0x60de98 <col:9> 'UINTPTR':'unsigned int' lvalue Var 0x60d7d0 'p' 'UINTPTR':'unsigned int'
|   |     `-ParenExpr 0x60df48 <col:14, col:22> 'UINTPTR':'unsigned int'
|   |       `-BinaryOperator 0x60df28 <col:15, col:20> 'UINTPTR':'unsigned int' '>>'
|   |         |-ImplicitCastExpr 0x60df10 <col:15> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x60ded0 <col:15> 'UINTPTR':'unsigned int' lvalue Var 0x60d7d0 'p' 'UINTPTR':'unsigned int'
|   |         `-IntegerLiteral 0x60def0 <col:20> 'int' 31
|   |-CompoundAssignOperator 0x60e0e0 <line:470:5, col:34> 'UINTPTR':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x60dfc8 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x60d7d0 'p' 'UINTPTR':'unsigned int'
|   | `-ImplicitCastExpr 0x60e0c8 <col:10, col:34> 'unsigned int' <IntegralCast>
|   |   `-ParenExpr 0x60e0a8 <col:10, col:34> 'int'
|   |     `-BinaryOperator 0x60e088 <line:457:29, line:470:33> 'int' '-'
|   |       |-ParenExpr 0x60e048 <line:457:29, col:36> 'int'
|   |       | `-BinaryOperator 0x60e028 <col:30, col:35> 'int' '<<'
|   |       |   |-IntegerLiteral 0x60dfe8 <col:30> 'int' 1
|   |       |   `-IntegerLiteral 0x60e008 <col:35> 'int' 4
|   |       `-IntegerLiteral 0x60e068 <line:470:33> 'int' 1
|   `-ReturnStmt 0x60e1a0 <line:471:5, col:25>
|     `-BinaryOperator 0x60e180 <col:12, col:25> 'BOOL *' '+'
|       |-ImplicitCastExpr 0x60e150 <col:12> 'BOOL *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x60e110 <col:12> 'BOOL [16]' lvalue Var 0x60d208 'flag_table' 'BOOL [16]'
|       `-ImplicitCastExpr 0x60e168 <col:25> 'UINTPTR':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x60e130 <col:25> 'UINTPTR':'unsigned int' lvalue Var 0x60d7d0 'p' 'UINTPTR':'unsigned int'
|-FunctionDecl 0x60e368 <line:474:1, line:482:1> line:474:20 used get_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0x60e218 <col:29, col:35> col:35 used addr 'void *'
| |-ParmVarDecl 0x60e298 <col:41, col:45> col:45 used model 'int'
| `-CompoundStmt 0x60ea20 <line:475:1, line:482:1>
|   |-DeclStmt 0x60e580 <line:476:5, col:57>
|   | `-VarDecl 0x60e428 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0x60e540 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0x60e528 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x60e490 <col:22> 'BOOL *(void *)' Function 0x60d028 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0x60e568 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x60e4b0 <col:52> 'void *' lvalue ParmVar 0x60e218 'addr' 'void *'
|   |-CallExpr 0x60e5f0 <line:478:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x60e5d8 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x60e598 <col:5> 'void (int)' Function 0x60a058 'maybe_release_fence' 'void (int)'
|   | `-ImplicitCastExpr 0x60e618 <col:26> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x60e5b8 <col:26> 'int' lvalue ParmVar 0x60e298 'model' 'int'
|   `-WhileStmt 0x60ea08 <line:479:5, line:481:5>
|     |-BinaryOperator 0x60e9c8 <line:479:12, col:66> 'int' '=='
|     | |-ImplicitCastExpr 0x60e9b0 <col:12, col:61> 'int' <IntegralCast>
|     | | `-CallExpr 0x60e930 <col:12, col:61> '_Bool'
|     | |   |-ImplicitCastExpr 0x60e918 <col:12> '_Bool (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|     | |   | `-DeclRefExpr 0x60e870 <col:12> '<builtin fn type>' Function 0x60e698 '__atomic_test_and_set' '_Bool (volatile void *, int)'
|     | |   |-ImplicitCastExpr 0x60e978 <col:35> 'volatile void *' <BitCast>
|     | |   | `-ImplicitCastExpr 0x60e960 <col:35> 'BOOL *' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x60e890 <col:35> 'BOOL *' lvalue Var 0x60e428 'lock_ptr' 'BOOL *'
|     | |   `-IntegerLiteral 0x60e8b0 <<built-in>:13:26> 'int' 2
|     | `-IntegerLiteral 0x60e990 <main/hals/driver/../../los_compiler.h:479:66> 'int' 1
|     `-CompoundStmt 0x60e9f0 <col:69, line:481:5>
|       `-NullStmt 0x60e9e8 <line:480:9>
|-FunctionDecl 0x60e698 <line:479:12> col:12 implicit used __atomic_test_and_set '_Bool (volatile void *, int)' extern
| |-ParmVarDecl 0x60e738 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0x60e7a0 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x60e818 <col:12> Implicit
|-FunctionDecl 0x60eb78 <line:484:1, line:490:1> line:484:20 used free_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0x60ea60 <col:30, col:36> col:36 used addr 'void *'
| |-ParmVarDecl 0x60eae0 <col:42, col:46> col:46 used model 'int'
| `-CompoundStmt 0x60f168 <line:485:1, line:490:1>
|   |-DeclStmt 0x60ed38 <line:486:5, col:57>
|   | `-VarDecl 0x60ec38 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0x60ecf8 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0x60ece0 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x60eca0 <col:22> 'BOOL *(void *)' Function 0x60d028 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0x60ed20 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x60ecc0 <col:52> 'void *' lvalue ParmVar 0x60ea60 'addr' 'void *'
|   |-CallExpr 0x60f070 <line:488:5, col:47> 'void'
|   | |-ImplicitCastExpr 0x60f058 <col:5> 'void (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x60efb0 <col:5> '<builtin fn type>' Function 0x60ed88 '__atomic_clear' 'void (volatile void *, int)'
|   | |-ImplicitCastExpr 0x60f0b8 <col:21> 'volatile void *' <BitCast>
|   | | `-ImplicitCastExpr 0x60f0a0 <col:21> 'BOOL *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x60efd0 <col:21> 'BOOL *' lvalue Var 0x60ec38 'lock_ptr' 'BOOL *'
|   | `-IntegerLiteral 0x60eff0 <<built-in>:14:26> 'int' 3
|   `-CallExpr 0x60f128 <main/hals/driver/../../los_compiler.h:489:5, col:31> 'void'
|     |-ImplicitCastExpr 0x60f110 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x60f0d0 <col:5> 'void (int)' Function 0x60a6d0 'maybe_acquire_fence' 'void (int)'
|     `-ImplicitCastExpr 0x60f150 <col:26> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x60f0f0 <col:26> 'int' lvalue ParmVar 0x60eae0 'model' 'int'
|-FunctionDecl 0x60ed88 <line:488:5> col:5 implicit used __atomic_clear 'void (volatile void *, int)' extern
| |-ParmVarDecl 0x60ee28 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0x60eee0 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x60ef58 <col:5> Implicit
|-FunctionDecl 0x60f388 <line:492:1, line:501:1> line:492:23 __atomic_load_8 'UINT64 (const volatile void *, int)' static inline
| |-ParmVarDecl 0x60f1f0 <col:39, col:60> col:60 used mem 'const volatile void *'
| |-ParmVarDecl 0x60f270 <col:65, col:69> col:69 used model 'int'
| `-CompoundStmt 0x60f938 <line:493:1, line:501:1>
|   |-DeclStmt 0x60f4b0 <line:494:5, col:15>
|   | `-VarDecl 0x60f448 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0x60f5c0 <line:496:5, col:29>
|   | `-VarDecl 0x60f4e0 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x60f598 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x60f580 <col:26> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x60f548 <col:26> 'const volatile void *' lvalue ParmVar 0x60f1f0 'mem' 'const volatile void *'
|   |-CallExpr 0x60f680 <line:497:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x60f668 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x60f5d8 <col:5> 'void (void *, int)' Function 0x60e368 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x60f6b0 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x60f5f8 <col:15> 'void *' lvalue Var 0x60f4e0 'memP' 'void *'
|   | `-ImplicitCastExpr 0x60f6c8 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x60f618 <col:21> 'int' lvalue ParmVar 0x60f270 'model' 'int'
|   |-BinaryOperator 0x60f7f8 <line:498:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0x60f6e0 <col:5> 'UINT64':'unsigned long long' lvalue Var 0x60f448 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0x60f7e0 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0x60f7c8 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0x60f7a0 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0x60f788 <col:22> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x60f758 <col:22> 'const volatile void *' lvalue ParmVar 0x60f1f0 'mem' 'const volatile void *'
|   |-CallExpr 0x60f890 <line:499:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x60f878 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x60f818 <col:5> 'void (void *, int)' Function 0x60eb78 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x60f8c0 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x60f838 <col:16> 'void *' lvalue Var 0x60f4e0 'memP' 'void *'
|   | `-ImplicitCastExpr 0x60f8d8 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x60f858 <col:22> 'int' lvalue ParmVar 0x60f270 'model' 'int'
|   `-ReturnStmt 0x60f928 <line:500:5, col:12>
|     `-ImplicitCastExpr 0x60f910 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x60f8f0 <col:12> 'UINT64':'unsigned long long' lvalue Var 0x60f448 'ret' 'UINT64':'unsigned long long'
|-FunctionDecl 0x60fba8 <line:503:1, line:509:1> line:503:20 __atomic_store_8 'void (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0x60f990 <col:37, col:52> col:52 used mem 'volatile void *'
| |-ParmVarDecl 0x60fa08 <col:57, col:64> col:64 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x60fa88 <col:69, col:73> col:73 used model 'int'
| `-CompoundStmt 0x611020 <line:504:1, line:509:1>
|   |-DeclStmt 0x60fd58 <line:505:5, col:29>
|   | `-VarDecl 0x60fc78 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x60fd30 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x60fd18 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x60fce0 <col:26> 'volatile void *' lvalue ParmVar 0x60f990 'mem' 'volatile void *'
|   |-CallExpr 0x60fde8 <line:506:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x60fdd0 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x60fd70 <col:5> 'void (void *, int)' Function 0x60e368 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x60fe18 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x60fd90 <col:15> 'void *' lvalue Var 0x60fc78 'memP' 'void *'
|   | `-ImplicitCastExpr 0x60fe30 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x60fdb0 <col:21> 'int' lvalue ParmVar 0x60fa88 'model' 'int'
|   |-BinaryOperator 0x610f28 <line:507:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0x60feb8 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0x60fe90 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0x60fe78 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x60fe48 <col:16> 'volatile void *' lvalue ParmVar 0x60f990 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0x610f10 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x610ef0 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0x60fa08 'val' 'UINT64':'unsigned long long'
|   `-CallExpr 0x610fc0 <line:508:5, col:27> 'void'
|     |-ImplicitCastExpr 0x610fa8 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x610f48 <col:5> 'void (void *, int)' Function 0x60eb78 'free_lock' 'void (void *, int)'
|     |-ImplicitCastExpr 0x610ff0 <col:16> 'void *' <LValueToRValue>
|     | `-DeclRefExpr 0x610f68 <col:16> 'void *' lvalue Var 0x60fc78 'memP' 'void *'
|     `-ImplicitCastExpr 0x611008 <col:22> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x610f88 <col:22> 'int' lvalue ParmVar 0x60fa88 'model' 'int'
|-FunctionDecl 0x611288 <line:511:1, line:521:1> line:511:22 __atomic_exchange_8 'UINT64 (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0x611068 <col:42, col:57> col:57 used mem 'volatile void *'
| |-ParmVarDecl 0x6110e0 <col:62, col:69> col:69 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x611160 <col:74, col:78> col:78 used model 'int'
| `-CompoundStmt 0x611898 <line:512:1, line:521:1>
|   |-DeclStmt 0x6113b8 <line:513:5, col:15>
|   | `-VarDecl 0x611350 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0x6114c8 <line:515:5, col:29>
|   | `-VarDecl 0x6113e8 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x6114a0 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x611488 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x611450 <col:26> 'volatile void *' lvalue ParmVar 0x611068 'mem' 'volatile void *'
|   |-CallExpr 0x611558 <line:516:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x611540 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x6114e0 <col:5> 'void (void *, int)' Function 0x60e368 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x611588 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x611500 <col:15> 'void *' lvalue Var 0x6113e8 'memP' 'void *'
|   | `-ImplicitCastExpr 0x6115a0 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x611520 <col:21> 'int' lvalue ParmVar 0x611160 'model' 'int'
|   |-BinaryOperator 0x611678 <line:517:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0x6115b8 <col:5> 'UINT64':'unsigned long long' lvalue Var 0x611350 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0x611660 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0x611648 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0x611620 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0x611608 <col:22> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x6115d8 <col:22> 'volatile void *' lvalue ParmVar 0x611068 'mem' 'volatile void *'
|   |-BinaryOperator 0x611758 <line:518:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0x611708 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0x6116e0 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0x6116c8 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x611698 <col:16> 'volatile void *' lvalue ParmVar 0x611068 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0x611740 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x611720 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0x6110e0 'val' 'UINT64':'unsigned long long'
|   |-CallExpr 0x6117f0 <line:519:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x6117d8 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x611778 <col:5> 'void (void *, int)' Function 0x60eb78 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x611820 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x611798 <col:16> 'void *' lvalue Var 0x6113e8 'memP' 'void *'
|   | `-ImplicitCastExpr 0x611838 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x6117b8 <col:22> 'int' lvalue ParmVar 0x611160 'model' 'int'
|   `-ReturnStmt 0x611888 <line:520:5, col:12>
|     `-ImplicitCastExpr 0x611870 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x611850 <col:12> 'UINT64':'unsigned long long' lvalue Var 0x611350 'ret' 'UINT64':'unsigned long long'
|-FunctionDecl 0x6119d8 <main/test/task_demo.h:45:1, col:23> col:8 used LosAppInit 'UINT32 (void)'
|-VarDecl 0x611ae8 <main/target_config.h:100:1, col:16> col:16 __heap_start 'UINTPTR':'unsigned int' extern
|-VarDecl 0x617c38 <main/los_config.h:419:1, col:15> col:15 m_aucSysMem0 'UINT8 *' extern
|-TypedefDecl 0x618158 <main/los_interrupt.h:44:1, col:16> col:16 referenced HWI_HANDLE_T 'UINT32':'unsigned int'
| `-TypedefType 0x600160 'UINT32' sugar
|   |-Typedef 0x5ffa90 'UINT32'
|   `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x6181e0 <line:46:1, col:16> col:16 referenced HWI_PRIOR_T 'UINT16':'unsigned short'
| `-TypedefType 0x6181b0 'UINT16' sugar
|   |-Typedef 0x5ffa20 'UINT16'
|   `-BuiltinType 0x553e50 'unsigned short'
|-TypedefDecl 0x618248 <line:48:1, col:16> col:16 referenced HWI_MODE_T 'UINT16':'unsigned short'
| `-TypedefType 0x6181b0 'UINT16' sugar
|   |-Typedef 0x5ffa20 'UINT16'
|   `-BuiltinType 0x553e50 'unsigned short'
|-TypedefDecl 0x6182b0 <line:50:1, col:16> col:16 HWI_ARG_T 'UINT32':'unsigned int'
| `-TypedefType 0x600160 'UINT32' sugar
|   |-Typedef 0x5ffa90 'UINT32'
|   `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x618468 <line:55:1, col:35> col:16 referenced HWI_PROC_FUNC 'void (*)(void)'
| `-PointerType 0x618410 'void (*)(void)'
|   `-ParenType 0x6183b0 'void (void)' sugar
|     `-FunctionProtoType 0x618380 'void (void)' cdecl
|       `-BuiltinType 0x553d30 'void'
|-RecordDecl 0x6184c0 <line:57:9, line:61:1> line:57:16 struct tagIrqParam definition
| |-FieldDecl 0x618578 <line:58:5, col:9> col:9 swIrq 'int'
| | `-FullComment 0x7182a0 <col:28, col:49>
| |   `-ParagraphComment 0x718270 <col:28, col:49>
| |     `-TextComment 0x718240 <col:28, col:49> Text=" The interrupt number "
| |-FieldDecl 0x618610 <main/hals/driver/../../los_compiler.h:327:23, main/los_interrupt.h:59:11> col:11 pDevId 'void *'
| | `-FullComment 0x718370 <col:28, col:85>
| |   `-ParagraphComment 0x718340 <col:28, col:85>
| |     `-TextComment 0x718310 <col:28, col:85> Text=" The pointer to the device ID that launches the interrupt "
| `-FieldDecl 0x6186e8 <line:60:5, col:17> col:17 pName 'const CHAR *'
|   `-FullComment 0x718440 <col:28, col:47>
|     `-ParagraphComment 0x718410 <col:28, col:47>
|       `-TextComment 0x7183e0 <col:28, col:47> Text=" The interrupt name "
|-TypedefDecl 0x6187c8 <line:57:1, line:61:3> col:3 referenced HwiIrqParam 'struct tagIrqParam':'struct tagIrqParam'
| `-ElaboratedType 0x618770 'struct tagIrqParam' sugar
|   `-RecordType 0x618540 'struct tagIrqParam'
|     `-Record 0x6184c0 'tagIrqParam'
|-RecordDecl 0x61f290 <line:63:9, line:70:1> line:63:9 struct definition
| |-FieldDecl 0x61f4f0 <line:64:5, col:45> col:14 referenced triggerIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0x61f5f0 <line:65:5, col:43> col:14 referenced clearIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0x61f6f0 <line:66:5, col:44> col:14 referenced enableIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0x61f7f0 <line:67:5, col:45> col:14 referenced disableIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0x61fa78 <line:68:5, col:65> col:14 referenced setIrqPriority 'UINT32 (*)(HWI_HANDLE_T, UINT8)'
| `-FieldDecl 0x61fbf8 <line:69:5, col:32> col:14 referenced getCurIrqNum 'UINT32 (*)(void)'
|-TypedefDecl 0x61fca8 <line:63:1, line:70:3> col:3 referenced HwiControllerOps 'struct HwiControllerOps':'HwiControllerOps'
| `-ElaboratedType 0x61fc50 'struct HwiControllerOps' sugar
|   `-RecordType 0x61f310 'HwiControllerOps'
|     `-Record 0x61f290 ''
|-VarDecl 0x61fd50 <line:72:1, col:25> col:25 used g_archHwiOps 'HwiControllerOps':'HwiControllerOps' extern
|-VarDecl 0x61fdc8 <line:75:1, col:15> col:15 __stack_chk_guard 'UINT32':'unsigned int' extern
|-FunctionDecl 0x61fec8 <line:77:1, col:34> col:13 __stack_chk_fail 'void (void)' extern
|-FunctionDecl 0x620000 <line:79:1, col:28> col:8 ArchIsIntActive 'UINT32 (void)'
|-FunctionDecl 0x620138 <line:91:1, col:24> col:8 ArchIntLock 'UINT32 (void)'
|-FunctionDecl 0x5da570 <line:93:1, col:37> col:8 HwiUnmask 'UINT32 (HWI_HANDLE_T)'
| `-ParmVarDecl 0x6201e8 <col:18, col:31> col:31 hwiNum 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x5da6b8 <line:94:1, col:35> col:8 HwiMask 'UINT32 (HWI_HANDLE_T)'
| `-ParmVarDecl 0x5da628 <col:16, col:29> col:29 hwiNum 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x5da868 <main/hals/driver/../../los_compiler.h:327:23, main/los_interrupt.h:95:35> col:6 ArchIntRestore 'void (UINT32)'
| `-ParmVarDecl 0x5da770 <col:21, col:28> col:28 intSave 'UINT32':'unsigned int'
|-FunctionDecl 0x5da9a8 <line:98:1, col:26> col:8 ArchIntUnLock 'UINT32 (void)'
|-FunctionDecl 0x5dac88 <line:127:1, col:64> col:8 ArchHwiDelete 'UINT32 (HWI_HANDLE_T, HwiIrqParam *)'
| |-ParmVarDecl 0x5daa88 <col:22, col:35> col:35 hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0x5dab78 <col:43, col:56> col:56 irqParam 'HwiIrqParam *'
| `-FullComment 0x7193e0 <line:104:3, line:125:13>
|   |-ParagraphComment 0x7184e0 <line:104:3>
|   | `-TextComment 0x7184b0 <col:3> Text=" "
|   |-VerbatimLineComment 0x718500 <col:4, col:27> Text="  los_interrupt"
|   |-ParagraphComment 0x718570 <line:105:3>
|   | `-TextComment 0x718540 <col:3> Text=" "
|   |-BlockCommandComment 0x718590 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0x7185f0 <col:10, col:36>
|   |   `-TextComment 0x7185c0 <col:10, col:36> Text=" Delete hardware interrupt."
|   |-ParagraphComment 0x718640 <line:107:3>
|   | `-TextComment 0x718610 <col:3> Text=" "
|   |-BlockCommandComment 0x718660 <col:4, line:108:49> Name="par"
|   | `-ParagraphComment 0x7186e0 <line:107:8, line:108:49>
|   |   |-TextComment 0x718690 <line:107:8, col:20> Text=" Description:"
|   |   `-TextComment 0x7186b0 <line:108:3, col:49> Text=" This API is used to delete hardware interrupt."
|   |-ParagraphComment 0x718730 <line:110:3>
|   | `-TextComment 0x718700 <col:3> Text=" "
|   |-BlockCommandComment 0x718750 <col:4, line:116:8> Name="attention"
|   | `-ParagraphComment 0x718d70 <line:111:3, line:116:8>
|   |   |-TextComment 0x718780 <line:111:3> Text=" "
|   |   |-HTMLStartTagComment 0x7187a0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x7187e0 <line:112:3> Text=" "
|   |   |-HTMLStartTagComment 0x718800 <col:4, col:7> Name="li"
|   |   |-TextComment 0x718840 <col:8, col:124> Text="The hardware interrupt module is usable only when the configuration item for hardware interrupt tailoring is enabled."
|   |   |-HTMLEndTagComment 0x718a40 <col:125, col:129> Name="li"
|   |   |-TextComment 0x718a70 <line:113:3> Text=" "
|   |   |-HTMLStartTagComment 0x718a90 <col:4, col:7> Name="li"
|   |   |-TextComment 0x718ad0 <col:8, col:144> Text="Hardware interrupt number value range: [OS_USER_HWI_MIN,OS_USER_HWI_MAX]. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   |-HTMLEndTagComment 0x718af0 <col:145, col:149> Name="li"
|   |   |-TextComment 0x718b20 <line:114:3> Text=" "
|   |   |-HTMLStartTagComment 0x718b40 <col:4, col:7> Name="li"
|   |   |-TextComment 0x718b80 <col:8, col:85> Text="OS_HWI_MAX_NUM specifies the maximum number of interrupts that can be created."
|   |   |-HTMLEndTagComment 0x718ba0 <col:86, col:90> Name="li"
|   |   |-TextComment 0x718bd0 <line:115:3> Text=" "
|   |   |-HTMLStartTagComment 0x718bf0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x718c30 <col:8, col:93> Text="Before executing an interrupt on a platform, refer to the chip manual of the platform."
|   |   |-HTMLEndTagComment 0x718c50 <col:94, col:98> Name="li"
|   |   |-TextComment 0x718c80 <line:116:3> Text=" "
|   |   `-HTMLEndTagComment 0x718ca0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x718dc0 <line:118:3>
|   | `-TextComment 0x718d90 <col:3> Text=" "
|   |-ParamCommandComment 0x718de0 <col:4, line:119:3> [in] implicitly Param="hwiNum" ParamIndex=0
|   | `-ParagraphComment 0x718e90 <line:118:18, line:119:3>
|   |   |-TextComment 0x718e40 <line:118:18, col:134> Text="   [IN] Type#HWI_HANDLE_T: hardware interrupt number. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   `-TextComment 0x718e60 <line:119:3> Text=" "
|   |-ParamCommandComment 0x718eb0 <col:4, line:121:3> [in] implicitly Param="irqParam" ParamIndex=1
|   | `-ParagraphComment 0x718f90 <line:119:20, line:121:3>
|   |   |-TextComment 0x718f10 <line:119:20, col:89> Text=" [IN] Type #HwiIrqParam *. ID of hardware interrupt which will base on"
|   |   |-TextComment 0x718f30 <line:120:3, col:85> Text="                                                when delete the hardware interrupt."
|   |   `-TextComment 0x718f50 <line:121:3> Text=" "
|   |-BlockCommandComment 0x718fb0 <col:4, line:122:3> Name="retval"
|   | `-ParagraphComment 0x719030 <line:121:11, line:122:3>
|   |   |-TextComment 0x718fe0 <line:121:11, col:87> Text=" #OS_ERRNO_HWI_NUM_INVALID              0x02000900: Invalid interrupt number."
|   |   `-TextComment 0x719000 <line:122:3> Text=" "
|   |-BlockCommandComment 0x719050 <col:4, line:123:3> Name="retval"
|   | `-ParagraphComment 0x7190d0 <line:122:11, line:123:3>
|   |   |-TextComment 0x719080 <line:122:11, col:99> Text=" #LOS_OK                                0         : The interrupt is successfully delete."
|   |   `-TextComment 0x7190a0 <line:123:3> Text=" "
|   |-BlockCommandComment 0x7190f0 <col:4, line:125:3> Name="par"
|   | `-ParagraphComment 0x7192c0 <line:123:8, line:125:3>
|   |   |-TextComment 0x719120 <line:123:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x719140 <line:124:3> Text=" "
|   |   |-HTMLStartTagComment 0x719160 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x7191a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x7191e0 <col:12, col:78> Text="los_interrupt.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x719200 <col:79, col:83> Name="li"
|   |   |-HTMLEndTagComment 0x719230 <col:84, col:88> Name="ul"
|   |   `-TextComment 0x719260 <line:125:3> Text=" "
|   `-BlockCommandComment 0x7192e0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x719340 <col:8, col:13>
|       `-TextComment 0x719310 <col:8, col:13> Text=" None."
|-FunctionDecl 0x5db118 <line:160:1, line:164:43> line:160:8 ArchHwiCreate 'UINT32 (HWI_HANDLE_T, HWI_PRIOR_T, HWI_MODE_T, HWI_PROC_FUNC, HwiIrqParam *)'
| |-ParmVarDecl 0x5dad78 <col:22, col:35> col:35 hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0x5dae10 <line:161:22, col:34> col:34 hwiPrio 'HWI_PRIOR_T':'unsigned short'
| |-ParmVarDecl 0x5daeb0 <line:162:22, col:33> col:33 mode 'HWI_MODE_T':'unsigned short'
| |-ParmVarDecl 0x5daf50 <line:163:22, col:36> col:36 handler 'HWI_PROC_FUNC':'void (*)(void)'
| |-ParmVarDecl 0x5dafc8 <line:164:22, col:35> col:35 irqParam 'HwiIrqParam *'
| `-FullComment 0x71b790 <line:130:3, line:158:13>
|   |-ParagraphComment 0x719480 <line:130:3>
|   | `-TextComment 0x719450 <col:3> Text=" "
|   |-VerbatimLineComment 0x7194a0 <col:4, col:27> Text="  los_interrupt"
|   |-ParagraphComment 0x719510 <line:131:3>
|   | `-TextComment 0x7194e0 <col:3> Text=" "
|   |-BlockCommandComment 0x719530 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0x719590 <col:10, col:38>
|   |   `-TextComment 0x719560 <col:10, col:38> Text=" Create a hardware interrupt."
|   |-ParagraphComment 0x7195e0 <line:133:3>
|   | `-TextComment 0x7195b0 <col:3> Text=" "
|   |-BlockCommandComment 0x719600 <col:4, line:134:106> Name="par"
|   | `-ParagraphComment 0x719680 <line:133:8, line:134:106>
|   |   |-TextComment 0x719630 <line:133:8, col:20> Text=" Description:"
|   |   `-TextComment 0x719650 <line:134:3, col:106> Text=" This API is used to configure a hardware interrupt and register a hardware interrupt handling function."
|   |-ParagraphComment 0x7196d0 <line:136:3>
|   | `-TextComment 0x7196a0 <col:3> Text=" "
|   |-BlockCommandComment 0x7196f0 <col:4, line:142:8> Name="attention"
|   | `-ParagraphComment 0x71ac80 <line:137:3, line:142:8>
|   |   |-TextComment 0x719720 <line:137:3> Text=" "
|   |   |-HTMLStartTagComment 0x719740 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x719780 <line:138:3> Text=" "
|   |   |-HTMLStartTagComment 0x7197a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x7197e0 <col:8, col:124> Text="The hardware interrupt module is usable only when the configuration item for hardware interrupt tailoring is enabled."
|   |   |-HTMLEndTagComment 0x719800 <col:125, col:129> Name="li"
|   |   |-TextComment 0x719830 <line:139:3> Text=" "
|   |   |-HTMLStartTagComment 0x719850 <col:4, col:7> Name="li"
|   |   |-TextComment 0x719890 <col:8, col:144> Text="Hardware interrupt number value range: [OS_USER_HWI_MIN,OS_USER_HWI_MAX]. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   |-HTMLEndTagComment 0x7198b0 <col:145, col:149> Name="li"
|   |   |-TextComment 0x7198e0 <line:140:3> Text=" "
|   |   |-HTMLStartTagComment 0x719900 <col:4, col:7> Name="li"
|   |   |-TextComment 0x719940 <col:8, col:85> Text="OS_HWI_MAX_NUM specifies the maximum number of interrupts that can be created."
|   |   |-HTMLEndTagComment 0x719960 <col:86, col:90> Name="li"
|   |   |-TextComment 0x719990 <line:141:3> Text=" "
|   |   |-HTMLStartTagComment 0x7199b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x7199f0 <col:8, col:93> Text="Before executing an interrupt on a platform, refer to the chip manual of the platform."
|   |   |-HTMLEndTagComment 0x719a10 <col:94, col:98> Name="li"
|   |   |-TextComment 0x71ab90 <line:142:3> Text=" "
|   |   `-HTMLEndTagComment 0x71abb0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x71acd0 <line:144:3>
|   | `-TextComment 0x71aca0 <col:3> Text=" "
|   |-ParamCommandComment 0x71acf0 <col:4, line:145:3> [in] implicitly Param="hwiNum" ParamIndex=0
|   | `-ParagraphComment 0x71ada0 <line:144:18, line:145:3>
|   |   |-TextComment 0x71ad50 <line:144:18, col:134> Text="   [IN] Type#HWI_HANDLE_T: hardware interrupt number. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   `-TextComment 0x71ad70 <line:145:3> Text=" "
|   |-ParamCommandComment 0x71adc0 <col:4, line:146:3> [in] implicitly Param="hwiPrio" ParamIndex=1
|   | `-ParagraphComment 0x71ae70 <line:145:19, line:146:3>
|   |   |-TextComment 0x71ae20 <line:145:19, col:106> Text="  [IN] Type#HWI_PRIOR_T: hardware interrupt priority. Ignore this parameter temporarily."
|   |   `-TextComment 0x71ae40 <line:146:3> Text=" "
|   |-ParamCommandComment 0x71ae90 <col:4, line:147:3> [in] implicitly Param="mode" ParamIndex=2
|   | `-ParagraphComment 0x71af40 <line:146:16, line:147:3>
|   |   |-TextComment 0x71aef0 <line:146:16, col:101> Text="     [IN] Type#HWI_MODE_T: hardware interrupt mode. Ignore this parameter temporarily."
|   |   `-TextComment 0x71af10 <line:147:3> Text=" "
|   |-ParamCommandComment 0x71af60 <col:4, line:148:3> [in] implicitly Param="handler" ParamIndex=3
|   | `-ParagraphComment 0x71b010 <line:147:19, line:148:3>
|   |   |-TextComment 0x71afc0 <line:147:19, col:107> Text="  [IN] Type#HWI_PROC_FUNC: interrupt handler used when a hardware interrupt is triggered."
|   |   `-TextComment 0x71afe0 <line:148:3> Text=" "
|   |-ParamCommandComment 0x71b030 <col:4, line:149:95> [in] implicitly Param="irqParam" ParamIndex=4
|   | `-ParagraphComment 0x71b0e0 <line:148:20, line:149:95>
|   |   |-TextComment 0x71b090 <line:148:20, col:75> Text=" [IN] Type#HwiIrqParam: input parameter of the interrupt"
|   |   `-TextComment 0x71b0b0 <line:149:3, col:95> Text="                                         handler used when a hardware interrupt is triggered."
|   |-ParagraphComment 0x71b130 <line:151:3>
|   | `-TextComment 0x71b100 <col:3> Text=" "
|   |-BlockCommandComment 0x71b150 <col:4, line:152:3> Name="retval"
|   | `-ParagraphComment 0x71b1d0 <line:151:11, line:152:3>
|   |   |-TextComment 0x71b180 <line:151:11, col:108> Text=" #OS_ERRNO_HWI_PROC_FUNC_NULL               0x02000901: Null hardware interrupt handling function."
|   |   `-TextComment 0x71b1a0 <line:152:3> Text=" "
|   |-BlockCommandComment 0x71b1f0 <col:4, line:153:3> Name="retval"
|   | `-ParagraphComment 0x71b270 <line:152:11, line:153:3>
|   |   |-TextComment 0x71b220 <line:152:11, col:91> Text=" #OS_ERRNO_HWI_NUM_INVALID                  0x02000900: Invalid interrupt number."
|   |   `-TextComment 0x71b240 <line:153:3> Text=" "
|   |-BlockCommandComment 0x71b290 <col:4, line:154:3> Name="retval"
|   | `-ParagraphComment 0x71b310 <line:153:11, line:154:3>
|   |   |-TextComment 0x71b2c0 <line:153:11, col:118> Text=" #OS_ERRNO_HWI_NO_MEMORY                    0x02000903: Insufficient memory for hardware interrupt creation."
|   |   `-TextComment 0x71b2e0 <line:154:3> Text=" "
|   |-BlockCommandComment 0x71b330 <col:4, line:155:3> Name="retval"
|   | `-ParagraphComment 0x71b3b0 <line:154:11, line:155:3>
|   |   |-TextComment 0x71b360 <line:154:11, col:127> Text=" #OS_ERRNO_HWI_ALREADY_CREATED              0x02000904: The interrupt handler being created has already been created."
|   |   `-TextComment 0x71b380 <line:155:3> Text=" "
|   |-BlockCommandComment 0x71b3d0 <col:4, line:156:3> Name="retval"
|   | `-ParagraphComment 0x71b450 <line:155:11, line:156:3>
|   |   |-TextComment 0x71b400 <line:155:11, col:104> Text=" #LOS_OK                                    0         : The interrupt is successfully created."
|   |   `-TextComment 0x71b420 <line:156:3> Text=" "
|   |-BlockCommandComment 0x71b470 <col:4, line:158:3> Name="par"
|   | `-ParagraphComment 0x71b640 <line:156:8, line:158:3>
|   |   |-TextComment 0x71b4a0 <line:156:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x71b4c0 <line:157:3> Text=" "
|   |   |-HTMLStartTagComment 0x71b4e0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x71b520 <col:8, col:11> Name="li"
|   |   |-TextComment 0x71b560 <col:12, col:78> Text="los_interrupt.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x71b580 <col:79, col:83> Name="li"
|   |   |-HTMLEndTagComment 0x71b5b0 <col:84, col:88> Name="ul"
|   |   `-TextComment 0x71b5e0 <line:158:3> Text=" "
|   `-BlockCommandComment 0x71b660 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x71b6c0 <col:8, col:13>
|       `-TextComment 0x71b690 <col:8, col:13> Text=" None."
|-FunctionDecl 0x5db280 <main/hals/driver/../../los_compiler.h:158:22, main/los_interrupt.h:172:1> line:166:22 ArchIntTrigger 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0x5db1f0 <col:37, col:50> col:50 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0x5dbb28 <line:167:1, line:172:1>
|   |-IfStmt 0x5dba38 <line:168:5, line:170:5>
|   | |-BinaryOperator 0x5db428 <line:168:9, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'int' '=='
|   | | |-ImplicitCastExpr 0x5db3f8 <main/los_interrupt.h:168:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0x5db348 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .triggerIrq 0x61f4f0
|   | | |   `-DeclRefExpr 0x5db328 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x61fd50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x5db410 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:16, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0x5db3d8 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x5db3b0 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x5db378 <col:24> 'int' 0
|   | `-CompoundStmt 0x5dba20 <main/los_interrupt.h:168:42, line:170:5>
|   |   `-ReturnStmt 0x5dba10 <line:169:9, main/hals/driver/../../los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x5db548 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x5db528 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x5db4e0 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x5db4c0 <col:33> 'int' 1
|   `-ReturnStmt 0x5dbb18 <main/los_interrupt.h:171:5, col:42>
|     `-CallExpr 0x5dbad8 <col:12, col:42> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0x5dbac0 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0x5dba70 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .triggerIrq 0x61f4f0
|       |   `-DeclRefExpr 0x5dba50 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x61fd50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0x5dbb00 <col:36> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5dbaa0 <col:36> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x5db1f0 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x5dbbe8 <main/hals/driver/../../los_compiler.h:158:22, main/los_interrupt.h:180:1> line:174:22 ArchIntEnable 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0x5dbb58 <col:36, col:49> col:49 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0x5dbf78 <line:175:1, line:180:1>
|   |-IfStmt 0x5dbe88 <line:176:5, line:178:5>
|   | |-BinaryOperator 0x5dbd90 <line:176:9, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'int' '=='
|   | | |-ImplicitCastExpr 0x5dbd60 <main/los_interrupt.h:176:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0x5dbcb0 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .enableIrq 0x61f6f0
|   | | |   `-DeclRefExpr 0x5dbc90 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x61fd50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x5dbd78 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:16, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0x5dbd40 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x5dbd18 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x5dbce0 <col:24> 'int' 0
|   | `-CompoundStmt 0x5dbe70 <main/los_interrupt.h:176:41, line:178:5>
|   |   `-ReturnStmt 0x5dbe60 <line:177:9, main/hals/driver/../../los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x5dbe38 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x5dbe18 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x5dbdd0 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x5dbdb0 <col:33> 'int' 1
|   `-ReturnStmt 0x5dbf68 <main/los_interrupt.h:179:5, col:41>
|     `-CallExpr 0x5dbf28 <col:12, col:41> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0x5dbf10 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0x5dbec0 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .enableIrq 0x61f6f0
|       |   `-DeclRefExpr 0x5dbea0 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x61fd50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0x5dbf50 <col:35> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5dbef0 <col:35> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x5dbb58 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x5dc038 <main/hals/driver/../../los_compiler.h:158:22, main/los_interrupt.h:188:1> line:182:22 ArchIntDisable 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0x5dbfa8 <col:37, col:50> col:50 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0x5dc3c8 <line:183:1, line:188:1>
|   |-IfStmt 0x5dc2d8 <line:184:5, line:186:5>
|   | |-BinaryOperator 0x5dc1e0 <line:184:9, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'int' '=='
|   | | |-ImplicitCastExpr 0x5dc1b0 <main/los_interrupt.h:184:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0x5dc100 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .disableIrq 0x61f7f0
|   | | |   `-DeclRefExpr 0x5dc0e0 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x61fd50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x5dc1c8 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:16, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0x5dc190 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x5dc168 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x5dc130 <col:24> 'int' 0
|   | `-CompoundStmt 0x5dc2c0 <main/los_interrupt.h:184:42, line:186:5>
|   |   `-ReturnStmt 0x5dc2b0 <line:185:9, main/hals/driver/../../los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x5dc288 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x5dc268 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x5dc220 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x5dc200 <col:33> 'int' 1
|   `-ReturnStmt 0x5dc3b8 <main/los_interrupt.h:187:5, col:42>
|     `-CallExpr 0x5dc378 <col:12, col:42> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0x5dc360 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0x5dc310 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .disableIrq 0x61f7f0
|       |   `-DeclRefExpr 0x5dc2f0 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x61fd50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0x5dc3a0 <col:36> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5dc340 <col:36> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x5dbfa8 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x5dc488 <main/hals/driver/../../los_compiler.h:158:22, main/los_interrupt.h:196:1> line:190:22 ArchIntClear 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0x5dc3f8 <col:35, col:48> col:48 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0x5dc818 <line:191:1, line:196:1>
|   |-IfStmt 0x5dc728 <line:192:5, line:194:5>
|   | |-BinaryOperator 0x5dc630 <line:192:9, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'int' '=='
|   | | |-ImplicitCastExpr 0x5dc600 <main/los_interrupt.h:192:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0x5dc550 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .clearIrq 0x61f5f0
|   | | |   `-DeclRefExpr 0x5dc530 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x61fd50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x5dc618 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:16, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0x5dc5e0 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x5dc5b8 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x5dc580 <col:24> 'int' 0
|   | `-CompoundStmt 0x5dc710 <main/los_interrupt.h:192:40, line:194:5>
|   |   `-ReturnStmt 0x5dc700 <line:193:9, main/hals/driver/../../los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x5dc6d8 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x5dc6b8 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x5dc670 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x5dc650 <col:33> 'int' 1
|   `-ReturnStmt 0x5dc808 <main/los_interrupt.h:195:5, col:40>
|     `-CallExpr 0x5dc7c8 <col:12, col:40> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0x5dc7b0 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0x5dc760 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .clearIrq 0x61f5f0
|       |   `-DeclRefExpr 0x5dc740 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x61fd50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0x5dc7f0 <col:34> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5dc790 <col:34> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x5dc3f8 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x5dca20 <main/hals/driver/../../los_compiler.h:158:22, main/los_interrupt.h:204:1> line:198:22 ArchIntSetPriority 'UINT32 (HWI_HANDLE_T, HWI_PRIOR_T)' static inline
| |-ParmVarDecl 0x5dc848 <col:41, col:54> col:54 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0x5dc8c0 <col:62, col:74> col:74 used priority 'HWI_PRIOR_T':'unsigned short'
| `-CompoundStmt 0x5dce10 <line:199:1, line:204:1>
|   |-IfStmt 0x5dccc8 <line:200:5, line:202:5>
|   | |-BinaryOperator 0x5dcbd0 <line:200:9, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'int' '=='
|   | | |-ImplicitCastExpr 0x5dcba0 <main/los_interrupt.h:200:9, col:22> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <LValueToRValue>
|   | | | `-MemberExpr 0x5dcaf0 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' lvalue .setIrqPriority 0x61fa78
|   | | |   `-DeclRefExpr 0x5dcad0 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x61fd50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x5dcbb8 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:16, col:25> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <BitCast>
|   | |   `-ParenExpr 0x5dcb80 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x5dcb58 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x5dcb20 <col:24> 'int' 0
|   | `-CompoundStmt 0x5dccb0 <main/los_interrupt.h:200:46, line:202:5>
|   |   `-ReturnStmt 0x5dcca0 <line:201:9, main/hals/driver/../../los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x5dcc78 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x5dcc58 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x5dcc10 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x5dcbf0 <col:33> 'int' 1
|   `-ReturnStmt 0x5dce00 <main/los_interrupt.h:203:5, col:56>
|     `-CallExpr 0x5dcd88 <col:12, col:56> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0x5dcd70 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <LValueToRValue>
|       | `-MemberExpr 0x5dcd00 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' lvalue .setIrqPriority 0x61fa78
|       |   `-DeclRefExpr 0x5dcce0 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x61fd50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       |-ImplicitCastExpr 0x5dcdb8 <col:40> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5dcd30 <col:40> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x5dc848 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|       `-ImplicitCastExpr 0x5dcde8 <col:48> 'UINT8':'unsigned char' <IntegralCast>
|         `-ImplicitCastExpr 0x5dcdd0 <col:48> 'HWI_PRIOR_T':'unsigned short' <LValueToRValue>
|           `-DeclRefExpr 0x5dcd50 <col:48> 'HWI_PRIOR_T':'unsigned short' lvalue ParmVar 0x5dc8c0 'priority' 'HWI_PRIOR_T':'unsigned short'
|-FunctionDecl 0x5dcec8 <main/hals/driver/../../los_compiler.h:158:22, main/los_interrupt.h:212:1> line:206:22 ArchIntCurIrqNum 'UINT32 (void)' static inline
| `-CompoundStmt 0x5dd210 <line:207:1, line:212:1>
|   |-IfStmt 0x5dd160 <line:208:5, line:210:5>
|   | |-BinaryOperator 0x5dd068 <line:208:9, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'int' '=='
|   | | |-ImplicitCastExpr 0x5dd038 <main/los_interrupt.h:208:9, col:22> 'UINT32 (*)(void)' <LValueToRValue>
|   | | | `-MemberExpr 0x5dcf88 <col:9, col:22> 'UINT32 (*)(void)' lvalue .getCurIrqNum 0x61fbf8
|   | | |   `-DeclRefExpr 0x5dcf68 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x61fd50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x5dd050 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:16, col:25> 'UINT32 (*)(void)' <BitCast>
|   | |   `-ParenExpr 0x5dd018 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x5dcff0 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x5dcfb8 <col:24> 'int' 0
|   | `-CompoundStmt 0x5dd148 <main/los_interrupt.h:208:44, line:210:5>
|   |   `-ReturnStmt 0x5dd138 <line:209:9, main/hals/driver/../../los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x5dd110 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x5dd0f0 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x5dd0a8 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x5dd088 <col:33> 'int' 1
|   `-ReturnStmt 0x5dd200 <main/los_interrupt.h:211:5, col:38>
|     `-CallExpr 0x5dd1e0 <col:12, col:38> 'UINT32':'unsigned int'
|       `-ImplicitCastExpr 0x5dd1c8 <col:12, col:25> 'UINT32 (*)(void)' <LValueToRValue>
|         `-MemberExpr 0x5dd198 <col:12, col:25> 'UINT32 (*)(void)' lvalue .getCurIrqNum 0x61fbf8
|           `-DeclRefExpr 0x5dd178 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x61fd50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|-FunctionDecl 0x5dd388 <main/hals/driver/../../los_compiler.h:158:22, main/los_interrupt.h:217:1> line:214:33 ArchIntOpsGet 'HwiControllerOps *(void)' static inline
| `-CompoundStmt 0x5dd498 <line:215:1, line:217:1>
|   `-ReturnStmt 0x5dd460 <line:216:5, col:13>
|     `-UnaryOperator 0x5dd448 <col:12, col:13> 'HwiControllerOps *' prefix '&' cannot overflow
|       `-DeclRefExpr 0x5dd428 <col:13> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x61fd50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|-FunctionDecl 0x5dd6e0 <main/hals/driver/../../los_compiler.h:327:23, main/los_context.h:68:71> col:7 ArchTskStackInit 'void *(UINT32, UINT32, void *)'
| |-ParmVarDecl 0x5dd4c0 <col:24, col:31> col:31 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x5dd538 <col:39, col:46> col:46 stackSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0x5dd5b8 <main/hals/driver/../../los_compiler.h:327:23, main/los_context.h:68:63> col:63 topStack 'void *'
| `-FullComment 0x71c410 <line:50:3, line:66:13>
|   |-ParagraphComment 0x71b830 <line:50:3>
|   | `-TextComment 0x71b800 <col:3> Text=" "
|   |-VerbatimLineComment 0x71b850 <col:4, col:25> Text="  los_context"
|   |-ParagraphComment 0x71b8c0 <line:51:3>
|   | `-TextComment 0x71b890 <col:3> Text=" "
|   |-BlockCommandComment 0x71b8e0 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0x71b940 <col:10, col:37>
|   |   `-TextComment 0x71b910 <col:10, col:37> Text=": Task stack initialization."
|   |-ParagraphComment 0x71b990 <line:53:3>
|   | `-TextComment 0x71b960 <col:3> Text=" "
|   |-BlockCommandComment 0x71b9b0 <col:4, line:54:49> Name="par"
|   | `-ParagraphComment 0x71ba30 <line:53:8, line:54:49>
|   |   |-TextComment 0x71b9e0 <line:53:8, col:20> Text=" Description:"
|   |   `-TextComment 0x71ba00 <line:54:3, col:49> Text=" This API is used to initialize the task stack."
|   |-ParagraphComment 0x71ba80 <line:56:3>
|   | `-TextComment 0x71ba50 <col:3> Text=" "
|   |-BlockCommandComment 0x71baa0 <col:4, line:57:26> Name="attention"
|   | `-ParagraphComment 0x71bd70 <line:56:14, line:57:26>
|   |   |-TextComment 0x71bad0 <line:56:14> Text=":"
|   |   |-TextComment 0x71baf0 <line:57:3> Text=" "
|   |   |-HTMLStartTagComment 0x71bb10 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x71bb50 <col:8, col:11> Name="li"
|   |   |-TextComment 0x71bcc0 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0x71bce0 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0x71bd10 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0x71bdc0 <line:59:3>
|   | `-TextComment 0x71bd90 <col:3> Text=" "
|   |-ParamCommandComment 0x71bde0 <col:4, line:60:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x71be90 <line:59:18, line:60:3>
|   |   |-TextComment 0x71be40 <line:59:18, col:47> Text="     [IN] Type#UINT32: TaskID."
|   |   `-TextComment 0x71be60 <line:60:3> Text=" "
|   |-ParamCommandComment 0x71beb0 <col:4, line:61:3> [in] implicitly Param="stackSize" ParamIndex=1
|   | `-ParagraphComment 0x71bf60 <line:60:21, line:61:3>
|   |   |-TextComment 0x71bf10 <line:60:21, col:64> Text="  [IN] Type#UINT32: Total size of the stack."
|   |   `-TextComment 0x71bf30 <line:61:3> Text=" "
|   |-ParamCommandComment 0x71bf80 <col:4, col:60> [in] implicitly Param="topStack" ParamIndex=2
|   | `-ParagraphComment 0x71c010 <col:20, col:60>
|   |   `-TextComment 0x71bfe0 <col:20, col:60> Text="   [IN] Type#VOID *: Top of task's stack."
|   |-ParagraphComment 0x71c060 <line:63:3>
|   | `-TextComment 0x71c030 <col:3> Text=" "
|   |-BlockCommandComment 0x71c080 <col:4, line:64:3> Name="retval"
|   | `-ParagraphComment 0x71c100 <line:63:11, line:64:3>
|   |   |-TextComment 0x71c0b0 <line:63:11, col:39> Text=": context Type#TaskContext *."
|   |   `-TextComment 0x71c0d0 <line:64:3> Text=" "
|   |-BlockCommandComment 0x71c120 <col:4, line:66:3> Name="par"
|   | `-ParagraphComment 0x71c2f0 <line:64:8, line:66:3>
|   |   |-TextComment 0x71c150 <line:64:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x71c170 <line:65:3> Text=" "
|   |   |-HTMLStartTagComment 0x71c190 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x71c1d0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x71c210 <col:12, col:76> Text="los_context.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x71c230 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0x71c260 <col:82, col:86> Name="ul"
|   |   `-TextComment 0x71c290 <line:66:3> Text=" "
|   `-BlockCommandComment 0x71c310 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x71c370 <col:8, col:13>
|       `-TextComment 0x71c340 <col:8, col:13> Text=" None."
|-FunctionDecl 0x5dd830 <main/hals/driver/../../los_compiler.h:327:23, main/los_context.h:69:34> col:6 HalIrqEndCheckNeedSched 'void (void)'
|-FunctionDecl 0x5dd968 <main/hals/driver/../../los_compiler.h:327:23, main/los_context.h:70:35> col:6 EnableExceptionInterface 'void (void)'
|-FunctionDecl 0x62a308 <main/hals/driver/../../los_compiler.h:327:23, main/los_context.h:71:31> col:6 HalTaskContextSwitch 'void (void)'
|-FunctionDecl 0x62a498 <main/hals/driver/../../los_compiler.h:146:23, main/los_context.h:89:54> col:38 ArchSysExit 'void (void) __attribute__((noreturn))'
| `-FullComment 0x71cd90 <line:73:3, line:87:13>
|   |-ParagraphComment 0x71c4b0 <line:73:3>
|   | `-TextComment 0x71c480 <col:3> Text=" "
|   |-VerbatimLineComment 0x71c4d0 <col:4, col:25> Text="  los_context"
|   |-ParagraphComment 0x71c540 <line:74:3>
|   | `-TextComment 0x71c510 <col:3> Text=" "
|   |-BlockCommandComment 0x71c560 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0x71c5c0 <col:10, col:32>
|   |   `-TextComment 0x71c590 <col:10, col:32> Text=": Function to sys exit."
|   |-ParagraphComment 0x71c610 <line:76:3>
|   | `-TextComment 0x71c5e0 <col:3> Text=" "
|   |-BlockCommandComment 0x71c630 <col:4, line:77:32> Name="par"
|   | `-ParagraphComment 0x71c6b0 <line:76:8, line:77:32>
|   |   |-TextComment 0x71c660 <line:76:8, col:20> Text=" Description:"
|   |   `-TextComment 0x71c680 <line:77:3, col:32> Text=" This API is used to sys exit."
|   |-ParagraphComment 0x71c700 <line:79:3>
|   | `-TextComment 0x71c6d0 <col:3> Text=" "
|   |-BlockCommandComment 0x71c720 <col:4, line:80:26> Name="attention"
|   | `-ParagraphComment 0x71c8c0 <line:79:14, line:80:26>
|   |   |-TextComment 0x71c750 <line:79:14> Text=":"
|   |   |-TextComment 0x71c770 <line:80:3> Text=" "
|   |   |-HTMLStartTagComment 0x71c790 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x71c7d0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x71c810 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0x71c830 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0x71c860 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0x71c910 <line:82:3>
|   | `-TextComment 0x71c8e0 <col:3> Text=" "
|   |-ParamCommandComment 0x71c930 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x71c990 <<invalid sloc>>
|   |-ParagraphComment 0x71c9e0 <line:84:3>
|   | `-TextComment 0x71c9b0 <col:3> Text=" "
|   |-BlockCommandComment 0x71ca00 <col:4, line:85:3> Name="retval"
|   | `-ParagraphComment 0x71ca80 <line:84:11, line:85:3>
|   |   |-TextComment 0x71ca30 <line:84:11, col:17> Text=": None."
|   |   `-TextComment 0x71ca50 <line:85:3> Text=" "
|   |-BlockCommandComment 0x71caa0 <col:4, line:87:3> Name="par"
|   | `-ParagraphComment 0x71cc70 <line:85:8, line:87:3>
|   |   |-TextComment 0x71cad0 <line:85:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x71caf0 <line:86:3> Text=" "
|   |   |-HTMLStartTagComment 0x71cb10 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x71cb50 <col:8, col:11> Name="li"
|   |   |-TextComment 0x71cb90 <col:12, col:76> Text="los_context.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x71cbb0 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0x71cbe0 <col:82, col:86> Name="ul"
|   |   `-TextComment 0x71cc10 <line:87:3> Text=" "
|   `-BlockCommandComment 0x71cc90 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x71cd00 <col:8, col:13>
|       `-TextComment 0x71ccd0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x62a600 <main/hals/driver/../../los_compiler.h:327:23, main/los_context.h:108:27> col:6 ArchTaskSchedule 'void (void)'
| `-FullComment 0x71d700 <line:92:3, line:106:13>
|   |-ParagraphComment 0x71ce30 <line:92:3>
|   | `-TextComment 0x71ce00 <col:3> Text=" "
|   |-VerbatimLineComment 0x71ce50 <col:4, col:25> Text="  los_context"
|   |-ParagraphComment 0x71cec0 <line:93:3>
|   | `-TextComment 0x71ce90 <col:3> Text=" "
|   |-BlockCommandComment 0x71cee0 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0x71cf40 <col:10, col:36>
|   |   `-TextComment 0x71cf10 <col:10, col:36> Text=": Task scheduling Function."
|   |-ParagraphComment 0x71cf90 <line:95:3>
|   | `-TextComment 0x71cf60 <col:3> Text=" "
|   |-BlockCommandComment 0x71cfb0 <col:4, line:96:39> Name="par"
|   | `-ParagraphComment 0x71d030 <line:95:8, line:96:39>
|   |   |-TextComment 0x71cfe0 <line:95:8, col:20> Text=" Description:"
|   |   `-TextComment 0x71d000 <line:96:3, col:39> Text=" This API is used to scheduling task."
|   |-ParagraphComment 0x71d080 <line:98:3>
|   | `-TextComment 0x71d050 <col:3> Text=" "
|   |-BlockCommandComment 0x71d0a0 <col:4, line:99:26> Name="attention"
|   | `-ParagraphComment 0x71d240 <line:98:14, line:99:26>
|   |   |-TextComment 0x71d0d0 <line:98:14> Text=":"
|   |   |-TextComment 0x71d0f0 <line:99:3> Text=" "
|   |   |-HTMLStartTagComment 0x71d110 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x71d150 <col:8, col:11> Name="li"
|   |   |-TextComment 0x71d190 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0x71d1b0 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0x71d1e0 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0x71d290 <line:101:3>
|   | `-TextComment 0x71d260 <col:3> Text=" "
|   |-ParamCommandComment 0x71d2b0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x71d310 <<invalid sloc>>
|   |-ParagraphComment 0x71d360 <line:103:3>
|   | `-TextComment 0x71d330 <col:3> Text=" "
|   |-BlockCommandComment 0x71d380 <col:4, line:104:3> Name="retval"
|   | `-ParagraphComment 0x71d400 <line:103:11, line:104:3>
|   |   |-TextComment 0x71d3b0 <line:103:11, col:17> Text=": None."
|   |   `-TextComment 0x71d3d0 <line:104:3> Text=" "
|   |-BlockCommandComment 0x71d420 <col:4, line:106:3> Name="par"
|   | `-ParagraphComment 0x71d5f0 <line:104:8, line:106:3>
|   |   |-TextComment 0x71d450 <line:104:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x71d470 <line:105:3> Text=" "
|   |   |-HTMLStartTagComment 0x71d490 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x71d4d0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x71d510 <col:12, col:76> Text="los_context.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x71d530 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0x71d560 <col:82, col:86> Name="ul"
|   |   `-TextComment 0x71d590 <line:106:3> Text=" "
|   `-BlockCommandComment 0x71d610 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x71d670 <col:8, col:13>
|       `-TextComment 0x71d640 <col:8, col:13> Text=" None."
|-FunctionDecl 0x62a738 <line:110:1, col:30> col:8 ArchStartSchedule 'UINT32 (void)'
|-FunctionDecl 0x62aab0 <main/hals/driver/../../los_compiler.h:327:23, main/los_context.h:111:97> col:7 ArchSignalContextInit 'void *(void *, void *, UINTPTR, UINT32)'
| |-ParmVarDecl 0x62a7f0 <main/hals/driver/../../los_compiler.h:327:23, main/los_context.h:111:35> col:35 stackPointer 'void *'
| |-ParmVarDecl 0x62a870 <main/hals/driver/../../los_compiler.h:327:23, main/los_context.h:111:55> col:55 stackTop 'void *'
| |-ParmVarDecl 0x62a8e8 <col:65, col:73> col:73 sigHandler 'UINTPTR':'unsigned int'
| `-ParmVarDecl 0x62a960 <col:85, col:92> col:92 param 'UINT32':'unsigned int'
|-RecordDecl 0x62abf8 <main/los_list.h:52:9, line:55:1> line:52:16 struct LOS_DL_LIST definition
| |-FullComment 0x71d870 <line:49:3, line:50:47>
| | |-ParagraphComment 0x71d7a0 <line:49:3>
| | | `-TextComment 0x71d770 <col:3> Text=" "
| | |-VerbatimLineComment 0x71d7c0 <col:4, col:21> Text=" los_list"
| | `-ParagraphComment 0x71d830 <line:50:3, col:47>
| |   `-TextComment 0x71d800 <col:3, col:47> Text=" Structure of a node in a doubly linked list."
| |-FieldDecl 0x62ad50 <line:53:5, col:25> col:25 referenced pstPrev 'struct LOS_DL_LIST *'
| | `-FullComment 0x71d940 <col:38, col:82>
| |   `-ParagraphComment 0x71d910 <col:38, col:82>
| |     `-TextComment 0x71d8e0 <col:38, col:82> Text=" Current node's pointer to the previous node "
| `-FieldDecl 0x62adf0 <line:54:5, col:25> col:25 referenced pstNext 'struct LOS_DL_LIST *'
|   `-FullComment 0x71da10 <col:38, col:78>
|     `-ParagraphComment 0x71d9e0 <col:38, col:78>
|       `-TextComment 0x71d9b0 <col:38, col:78> Text=" Current node's pointer to the next node "
|-TypedefDecl 0x62aec8 <line:52:1, line:55:3> col:3 referenced LOS_DL_LIST 'struct LOS_DL_LIST':'struct LOS_DL_LIST'
| |-ElaboratedType 0x62ae70 'struct LOS_DL_LIST' sugar
| | `-RecordType 0x62ac80 'struct LOS_DL_LIST'
| |   `-Record 0x62abf8 'LOS_DL_LIST'
| `-FullComment 0x71db80 <line:49:3, line:50:47>
|   |-ParagraphComment 0x71dab0 <line:49:3>
|   | `-TextComment 0x71da80 <col:3> Text=" "
|   |-VerbatimLineComment 0x71dad0 <col:4, col:21> Text=" los_list"
|   `-ParagraphComment 0x71db40 <line:50:3, col:47>
|     `-TextComment 0x71db10 <col:3, col:47> Text=" Structure of a node in a doubly linked list."
|-FunctionDecl 0x62b0a8 <main/hals/driver/../../los_compiler.h:130:23, main/los_list.h:79:1> line:75:43 used LOS_ListInit 'void (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0x62afb8 <col:56, col:69> col:69 used list 'LOS_DL_LIST *'
| |-CompoundStmt 0x638c28 <line:76:1, line:79:1>
| | |-BinaryOperator 0x62b1f0 <line:77:5, col:21> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x62b188 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x62adf0
| | | | `-ImplicitCastExpr 0x62b170 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x62b150 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x62afb8 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0x62b1d8 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| | |   `-DeclRefExpr 0x62b1b8 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0x62afb8 'list' 'LOS_DL_LIST *'
| | `-BinaryOperator 0x638ba8 <line:78:5, col:21> 'struct LOS_DL_LIST *' '='
| |   |-MemberExpr 0x62b248 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x62ad50
| |   | `-ImplicitCastExpr 0x62b230 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| |   |   `-DeclRefExpr 0x62b210 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x62afb8 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0x638b90 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0x638b70 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0x62afb8 'list' 'LOS_DL_LIST *'
| `-FullComment 0x71fd30 <line:58:3, line:73:7>
|   |-ParagraphComment 0x71dc20 <line:58:3>
|   | `-TextComment 0x71dbf0 <col:3> Text=" "
|   |-VerbatimLineComment 0x71dc40 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0x71dcb0 <line:59:3>
|   | `-TextComment 0x71dc80 <col:3> Text=" "
|   |-BlockCommandComment 0x71f500 <col:4, col:42> Name="brief"
|   | `-ParagraphComment 0x71f560 <col:10, col:42>
|   |   `-TextComment 0x71f530 <col:10, col:42> Text=" Initialize a doubly linked list."
|   |-ParagraphComment 0x71f5b0 <line:61:3>
|   | `-TextComment 0x71f580 <col:3> Text=" "
|   |-BlockCommandComment 0x71f5d0 <col:4, line:63:3> Name="par"
|   | `-ParagraphComment 0x71f680 <line:61:8, line:63:3>
|   |   |-TextComment 0x71f600 <line:61:8, col:20> Text=" Description:"
|   |   |-TextComment 0x71f620 <line:62:3, col:55> Text=" This API is used to initialize a doubly linked list."
|   |   `-TextComment 0x71f640 <line:63:3> Text=" "
|   |-BlockCommandComment 0x71f6a0 <col:4, line:66:8> Name="attention"
|   | `-ParagraphComment 0x71f870 <line:64:3, line:66:8>
|   |   |-TextComment 0x71f6d0 <line:64:3> Text=" "
|   |   |-HTMLStartTagComment 0x71f6f0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x71f730 <line:65:3> Text=" "
|   |   |-HTMLStartTagComment 0x71f750 <col:4, col:7> Name="li"
|   |   |-TextComment 0x71f790 <col:8, col:71> Text="The parameter passed in should be ensured to be a legal pointer."
|   |   |-HTMLEndTagComment 0x71f7b0 <col:72, col:76> Name="li"
|   |   |-TextComment 0x71f7e0 <line:66:3> Text=" "
|   |   `-HTMLEndTagComment 0x71f800 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x71f8c0 <line:68:3>
|   | `-TextComment 0x71f890 <col:3> Text=" "
|   |-ParamCommandComment 0x71f8e0 <col:4, col:52> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0x71f970 <col:15, col:52>
|   |   `-TextComment 0x71f940 <col:15, col:52> Text="    [IN] Node in a doubly linked list."
|   |-ParagraphComment 0x71f9c0 <line:70:3>
|   | `-TextComment 0x71f990 <col:3> Text=" "
|   |-BlockCommandComment 0x71f9e0 <col:4, line:71:3> Name="retval"
|   | `-ParagraphComment 0x71fa60 <line:70:11, line:71:3>
|   |   |-TextComment 0x71fa10 <line:70:11, col:16> Text=" None."
|   |   `-TextComment 0x71fa30 <line:71:3> Text=" "
|   |-BlockCommandComment 0x71fa80 <col:4, line:73:3> Name="par"
|   | `-ParagraphComment 0x71fc50 <line:71:8, line:73:3>
|   |   |-TextComment 0x71fab0 <line:71:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x71fad0 <line:72:3> Text=" "
|   |   |-HTMLStartTagComment 0x71faf0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x71fb30 <col:8, col:11> Name="li"
|   |   |-TextComment 0x71fb70 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x71fb90 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x71fbc0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x71fbf0 <line:73:3> Text=" "
|   `-BlockCommandComment 0x71fc70 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x71fca0 <<invalid sloc>>
|-FunctionDecl 0x638de8 <main/hals/driver/../../los_compiler.h:130:23, main/los_list.h:128:1> line:122:43 used LOS_ListAdd 'void (LOS_DL_LIST *, LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0x638c58 <col:55, col:68> col:68 used list 'LOS_DL_LIST *'
| |-ParmVarDecl 0x638cd0 <col:74, col:87> col:87 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0x639258 <line:123:1, line:128:1>
| | |-BinaryOperator 0x638f80 <line:124:5, col:27> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x638ed0 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x62adf0
| | | | `-ImplicitCastExpr 0x638eb8 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x638e98 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x638cd0 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0x638f68 <col:21, col:27> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0x638f38 <col:21, col:27> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x62adf0
| | |     `-ImplicitCastExpr 0x638f20 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0x638f00 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0x638c58 'list' 'LOS_DL_LIST *'
| | |-BinaryOperator 0x639040 <line:125:5, col:21> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x638fd8 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x62ad50
| | | | `-ImplicitCastExpr 0x638fc0 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x638fa0 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x638cd0 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0x639028 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| | |   `-DeclRefExpr 0x639008 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0x638c58 'list' 'LOS_DL_LIST *'
| | |-BinaryOperator 0x639148 <line:126:5, col:30> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x6390e0 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x62ad50
| | | | `-ImplicitCastExpr 0x6390c8 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0x639098 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x62adf0
| | | |     `-ImplicitCastExpr 0x639080 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0x639060 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x638c58 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0x639130 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |   `-DeclRefExpr 0x639110 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0x638cd0 'node' 'LOS_DL_LIST *'
| | `-BinaryOperator 0x639208 <line:127:5, col:21> 'struct LOS_DL_LIST *' '='
| |   |-MemberExpr 0x6391a0 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x62adf0
| |   | `-ImplicitCastExpr 0x639188 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| |   |   `-DeclRefExpr 0x639168 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x638c58 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0x6391f0 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0x6391d0 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0x638cd0 'node' 'LOS_DL_LIST *'
| `-FullComment 0x7207c0 <line:104:3, line:120:22>
|   |-ParagraphComment 0x71fdd0 <line:104:3>
|   | `-TextComment 0x71fda0 <col:3> Text=" "
|   |-VerbatimLineComment 0x71fdf0 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0x71fe60 <line:105:3>
|   | `-TextComment 0x71fe30 <col:3> Text=" "
|   |-BlockCommandComment 0x71fe80 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0x71fee0 <col:10, col:52>
|   |   `-TextComment 0x71feb0 <col:10, col:52> Text=" Insert a new node to a doubly linked list."
|   |-ParagraphComment 0x71ff30 <line:107:3>
|   | `-TextComment 0x71ff00 <col:3> Text=" "
|   |-BlockCommandComment 0x71ff50 <col:4, line:109:3> Name="par"
|   | `-ParagraphComment 0x720000 <line:107:8, line:109:3>
|   |   |-TextComment 0x71ff80 <line:107:8, col:20> Text=" Description:"
|   |   |-TextComment 0x71ffa0 <line:108:3, col:65> Text=" This API is used to insert a new node to a doubly linked list."
|   |   `-TextComment 0x71ffc0 <line:109:3> Text=" "
|   |-BlockCommandComment 0x720020 <col:4, line:112:8> Name="attention"
|   | `-ParagraphComment 0x7201f0 <line:110:3, line:112:8>
|   |   |-TextComment 0x720050 <line:110:3> Text=" "
|   |   |-HTMLStartTagComment 0x720070 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x7200b0 <line:111:3> Text=" "
|   |   |-HTMLStartTagComment 0x7200d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x720110 <col:8, col:71> Text="The parameters passed in should be ensured to be legal pointers."
|   |   |-HTMLEndTagComment 0x720130 <col:72, col:76> Name="li"
|   |   |-TextComment 0x720160 <line:112:3> Text=" "
|   |   `-HTMLEndTagComment 0x720180 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x720240 <line:114:3>
|   | `-TextComment 0x720210 <col:3> Text=" "
|   |-ParamCommandComment 0x720260 <col:4, line:115:3> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0x720310 <line:114:15, line:115:3>
|   |   |-TextComment 0x7202c0 <line:114:15, col:75> Text="    [IN]   Doubly linked list where the new node is inserted."
|   |   `-TextComment 0x7202e0 <line:115:3> Text=" "
|   |-ParamCommandComment 0x720330 <col:4, col:49> [in] implicitly Param="node" ParamIndex=1
|   | `-ParagraphComment 0x7203c0 <col:15, col:49>
|   |   `-TextComment 0x720390 <col:15, col:49> Text="    [IN]   New node to be inserted."
|   |-ParagraphComment 0x720410 <line:117:3>
|   | `-TextComment 0x7203e0 <col:3> Text=" "
|   |-BlockCommandComment 0x720430 <col:4, line:118:3> Name="retval"
|   | `-ParagraphComment 0x7204b0 <line:117:11, line:118:3>
|   |   |-TextComment 0x720460 <line:117:11, col:15> Text=" None"
|   |   `-TextComment 0x720480 <line:118:3> Text=" "
|   |-BlockCommandComment 0x7204d0 <col:4, line:120:3> Name="par"
|   | `-ParagraphComment 0x7206b0 <line:118:8, line:120:3>
|   |   |-TextComment 0x720510 <line:118:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x720530 <line:119:3> Text=" "
|   |   |-HTMLStartTagComment 0x720550 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x720590 <col:8, col:11> Name="li"
|   |   |-TextComment 0x7205d0 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x7205f0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x720620 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x720650 <line:120:3> Text=" "
|   `-BlockCommandComment 0x7206d0 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x720730 <col:8, col:22>
|       `-TextComment 0x720700 <col:8, col:22> Text=" LOS_ListDelete"
|-FunctionDecl 0x6393a8 <main/hals/driver/../../los_compiler.h:130:23, main/los_list.h:152:1> line:149:43 LOS_ListTailInsert 'void (LOS_DL_LIST *, LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0x639298 <col:62, col:75> col:75 used list 'LOS_DL_LIST *'
| |-ParmVarDecl 0x639310 <col:81, col:94> col:94 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0x6395f8 <line:150:1, line:152:1>
| | `-CallExpr 0x639570 <line:151:5, col:36> 'void'
| |   |-ImplicitCastExpr 0x639558 <col:5> 'void (*)(LOS_DL_LIST *, LOS_DL_LIST *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0x639458 <col:5> 'void (LOS_DL_LIST *, LOS_DL_LIST *)' Function 0x638de8 'LOS_ListAdd' 'void (LOS_DL_LIST *, LOS_DL_LIST *)'
| |   |-ImplicitCastExpr 0x6395a0 <col:17, col:23> 'struct LOS_DL_LIST *' <LValueToRValue>
| |   | `-MemberExpr 0x6394b0 <col:17, col:23> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x62ad50
| |   |   `-ImplicitCastExpr 0x639498 <col:17> 'LOS_DL_LIST *' <LValueToRValue>
| |   |     `-DeclRefExpr 0x639478 <col:17> 'LOS_DL_LIST *' lvalue ParmVar 0x639298 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0x6395b8 <col:32> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0x6394e0 <col:32> 'LOS_DL_LIST *' lvalue ParmVar 0x639310 'node' 'LOS_DL_LIST *'
| `-FullComment 0x721240 <line:131:3, line:147:40>
|   |-ParagraphComment 0x720860 <line:131:3>
|   | `-TextComment 0x720830 <col:3> Text=" "
|   |-VerbatimLineComment 0x720880 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0x7208f0 <line:132:3>
|   | `-TextComment 0x7208c0 <col:3> Text=" "
|   |-BlockCommandComment 0x720910 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0x720970 <col:10, col:60>
|   |   `-TextComment 0x720940 <col:10, col:60> Text=" Insert a node to the tail of a doubly linked list."
|   |-ParagraphComment 0x7209c0 <line:134:3>
|   | `-TextComment 0x720990 <col:3> Text=" "
|   |-BlockCommandComment 0x7209e0 <col:4, line:136:3> Name="par"
|   | `-ParagraphComment 0x720a90 <line:134:8, line:136:3>
|   |   |-TextComment 0x720a10 <line:134:8, col:20> Text=" Description:"
|   |   |-TextComment 0x720a30 <line:135:3, col:77> Text=" This API is used to insert a new node to the tail of a doubly linked list."
|   |   `-TextComment 0x720a50 <line:136:3> Text=" "
|   |-BlockCommandComment 0x720ab0 <col:4, line:139:8> Name="attention"
|   | `-ParagraphComment 0x720c80 <line:137:3, line:139:8>
|   |   |-TextComment 0x720ae0 <line:137:3> Text=" "
|   |   |-HTMLStartTagComment 0x720b00 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x720b40 <line:138:3> Text=" "
|   |   |-HTMLStartTagComment 0x720b60 <col:4, col:7> Name="li"
|   |   |-TextComment 0x720ba0 <col:8, col:71> Text="The parameters passed in should be ensured to be legal pointers."
|   |   |-HTMLEndTagComment 0x720bc0 <col:72, col:76> Name="li"
|   |   |-TextComment 0x720bf0 <line:139:3> Text=" "
|   |   `-HTMLEndTagComment 0x720c10 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x720cd0 <line:141:3>
|   | `-TextComment 0x720ca0 <col:3> Text=" "
|   |-ParamCommandComment 0x720cf0 <col:4, line:142:3> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0x720da0 <line:141:15, line:142:3>
|   |   |-TextComment 0x720d50 <line:141:15, col:74> Text="     [IN] Doubly linked list where the new node is inserted."
|   |   `-TextComment 0x720d70 <line:142:3> Text=" "
|   |-ParamCommandComment 0x720dc0 <col:4, col:48> [in] implicitly Param="node" ParamIndex=1
|   | `-ParagraphComment 0x720e50 <col:15, col:48>
|   |   `-TextComment 0x720e20 <col:15, col:48> Text="     [IN] New node to be inserted."
|   |-ParagraphComment 0x720ea0 <line:144:3>
|   | `-TextComment 0x720e70 <col:3> Text=" "
|   |-BlockCommandComment 0x720ec0 <col:4, line:145:3> Name="retval"
|   | `-ParagraphComment 0x720f40 <line:144:11, line:145:3>
|   |   |-TextComment 0x720ef0 <line:144:11, col:16> Text=" None."
|   |   `-TextComment 0x720f10 <line:145:3> Text=" "
|   |-BlockCommandComment 0x720f60 <col:4, line:147:3> Name="par"
|   | `-ParagraphComment 0x721130 <line:145:8, line:147:3>
|   |   |-TextComment 0x720f90 <line:145:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x720fb0 <line:146:3> Text=" "
|   |   |-HTMLStartTagComment 0x720fd0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x721010 <col:8, col:11> Name="li"
|   |   |-TextComment 0x721050 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x721070 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x7210a0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x7210d0 <line:147:3> Text=" "
|   `-BlockCommandComment 0x721150 <col:4, col:40> Name="see"
|     `-ParagraphComment 0x7211b0 <col:8, col:40>
|       `-TextComment 0x721180 <col:8, col:40> Text=" LOS_ListAdd | LOS_ListHeadInsert"
|-FunctionDecl 0x639730 <main/hals/driver/../../los_compiler.h:130:23, main/los_list.h:176:1> line:173:43 LOS_ListHeadInsert 'void (LOS_DL_LIST *, LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0x639620 <col:62, col:75> col:75 used list 'LOS_DL_LIST *'
| |-ParmVarDecl 0x639698 <col:81, col:94> col:94 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0x6398e8 <line:174:1, line:176:1>
| | `-CallExpr 0x639858 <line:175:5, col:27> 'void'
| |   |-ImplicitCastExpr 0x639840 <col:5> 'void (*)(LOS_DL_LIST *, LOS_DL_LIST *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0x6397e0 <col:5> 'void (LOS_DL_LIST *, LOS_DL_LIST *)' Function 0x638de8 'LOS_ListAdd' 'void (LOS_DL_LIST *, LOS_DL_LIST *)'
| |   |-ImplicitCastExpr 0x639888 <col:17> 'LOS_DL_LIST *' <LValueToRValue>
| |   | `-DeclRefExpr 0x639800 <col:17> 'LOS_DL_LIST *' lvalue ParmVar 0x639620 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0x6398a0 <col:23> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0x639820 <col:23> 'LOS_DL_LIST *' lvalue ParmVar 0x639698 'node' 'LOS_DL_LIST *'
| `-FullComment 0x721cd0 <line:155:3, line:171:40>
|   |-ParagraphComment 0x7212e0 <line:155:3>
|   | `-TextComment 0x7212b0 <col:3> Text=" "
|   |-VerbatimLineComment 0x721300 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0x721370 <line:156:3>
|   | `-TextComment 0x721340 <col:3> Text=" "
|   |-BlockCommandComment 0x721390 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0x7213f0 <col:10, col:60>
|   |   `-TextComment 0x7213c0 <col:10, col:60> Text=" Insert a node to the head of a doubly linked list."
|   |-ParagraphComment 0x721440 <line:158:3>
|   | `-TextComment 0x721410 <col:3> Text=" "
|   |-BlockCommandComment 0x721460 <col:4, line:160:3> Name="par"
|   | `-ParagraphComment 0x721520 <line:158:8, line:160:3>
|   |   |-TextComment 0x721490 <line:158:8, col:20> Text=" Description:"
|   |   |-TextComment 0x7214b0 <line:159:3, col:77> Text=" This API is used to insert a new node to the head of a doubly linked list."
|   |   `-TextComment 0x7214d0 <line:160:3> Text=" "
|   |-BlockCommandComment 0x721540 <col:4, line:163:8> Name="attention"
|   | `-ParagraphComment 0x721710 <line:161:3, line:163:8>
|   |   |-TextComment 0x721570 <line:161:3> Text=" "
|   |   |-HTMLStartTagComment 0x721590 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x7215d0 <line:162:3> Text=" "
|   |   |-HTMLStartTagComment 0x7215f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x721630 <col:8, col:71> Text="The parameters passed in should be ensured to be legal pointers."
|   |   |-HTMLEndTagComment 0x721650 <col:72, col:76> Name="li"
|   |   |-TextComment 0x721680 <line:163:3> Text=" "
|   |   `-HTMLEndTagComment 0x7216a0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x721760 <line:165:3>
|   | `-TextComment 0x721730 <col:3> Text=" "
|   |-ParamCommandComment 0x721780 <col:4, line:166:3> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0x721830 <line:165:15, line:166:3>
|   |   |-TextComment 0x7217e0 <line:165:15, col:74> Text="     [IN] Doubly linked list where the new node is inserted."
|   |   `-TextComment 0x721800 <line:166:3> Text=" "
|   |-ParamCommandComment 0x721850 <col:4, col:48> [in] implicitly Param="node" ParamIndex=1
|   | `-ParagraphComment 0x7218e0 <col:15, col:48>
|   |   `-TextComment 0x7218b0 <col:15, col:48> Text="     [IN] New node to be inserted."
|   |-ParagraphComment 0x721930 <line:168:3>
|   | `-TextComment 0x721900 <col:3> Text=" "
|   |-BlockCommandComment 0x721950 <col:4, line:169:3> Name="retval"
|   | `-ParagraphComment 0x7219d0 <line:168:11, line:169:3>
|   |   |-TextComment 0x721980 <line:168:11, col:16> Text=" None."
|   |   `-TextComment 0x7219a0 <line:169:3> Text=" "
|   |-BlockCommandComment 0x7219f0 <col:4, line:171:3> Name="par"
|   | `-ParagraphComment 0x721bc0 <line:169:8, line:171:3>
|   |   |-TextComment 0x721a20 <line:169:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x721a40 <line:170:3> Text=" "
|   |   |-HTMLStartTagComment 0x721a60 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x721aa0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x721ae0 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x721b00 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x721b30 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x721b60 <line:171:3> Text=" "
|   `-BlockCommandComment 0x721be0 <col:4, col:40> Name="see"
|     `-ParagraphComment 0x721c40 <col:8, col:40>
|       `-TextComment 0x721c10 <col:8, col:40> Text=" LOS_ListAdd | LOS_ListTailInsert"
|-FunctionDecl 0x6399a0 <main/hals/driver/../../los_compiler.h:130:23, main/los_list.h:204:1> line:198:43 used LOS_ListDelete 'void (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0x639910 <col:58, col:71> col:71 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0x639ff8 <line:199:1, line:204:1>
| | |-BinaryOperator 0x639b98 <line:200:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x639ac8 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x62ad50
| | | | `-ImplicitCastExpr 0x639ab0 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0x639a80 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x62adf0
| | | |     `-ImplicitCastExpr 0x639a68 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0x639a48 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x639910 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0x639b80 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0x639b30 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x62ad50
| | |     `-ImplicitCastExpr 0x639b18 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0x639af8 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0x639910 'node' 'LOS_DL_LIST *'
| | |-BinaryOperator 0x639ce8 <line:201:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x639c38 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x62adf0
| | | | `-ImplicitCastExpr 0x639c20 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0x639bf0 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x62ad50
| | | |     `-ImplicitCastExpr 0x639bd8 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0x639bb8 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x639910 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0x639cd0 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0x639ca0 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x62adf0
| | |     `-ImplicitCastExpr 0x639c88 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0x639c68 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0x639910 'node' 'LOS_DL_LIST *'
| | |-BinaryOperator 0x639e48 <line:202:5, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x639d40 <main/los_list.h:202:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x62adf0
| | | | `-ImplicitCastExpr 0x639d28 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x639d08 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x639910 'node' 'LOS_DL_LIST *'
| | | `-CStyleCastExpr 0x639e20 <col:21, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'LOS_DL_LIST *' <BitCast>
| | |   `-ParenExpr 0x639e00 <col:16, col:25> 'void *'
| | |     `-CStyleCastExpr 0x639da8 <col:17, col:24> 'void *' <NullToPointer>
| | |       `-IntegerLiteral 0x639d70 <col:24> 'int' 0
| | `-BinaryOperator 0x639fa8 <main/los_list.h:203:5, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'struct LOS_DL_LIST *' '='
| |   |-MemberExpr 0x639ea0 <main/los_list.h:203:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x62ad50
| |   | `-ImplicitCastExpr 0x639e88 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| |   |   `-DeclRefExpr 0x639e68 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x639910 'node' 'LOS_DL_LIST *'
| |   `-CStyleCastExpr 0x639f80 <col:21, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'LOS_DL_LIST *' <BitCast>
| |     `-ParenExpr 0x639f60 <col:16, col:25> 'void *'
| |       `-CStyleCastExpr 0x639f08 <col:17, col:24> 'void *' <NullToPointer>
| |         `-IntegerLiteral 0x639ed0 <col:24> 'int' 0
| `-FullComment 0x722810 <main/los_list.h:179:3, line:196:19>
|   |-ParagraphComment 0x721d70 <line:179:3>
|   | `-TextComment 0x721d40 <col:3> Text=" "
|   |-VerbatimLineComment 0x721d90 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0x721e00 <line:180:3>
|   | `-TextComment 0x721dd0 <col:3> Text=" "
|   |-BlockCommandComment 0x721e20 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0x721e80 <col:10, col:60>
|   |   `-TextComment 0x721e50 <col:10, col:60> Text=" Delete a specified node from a doubly linked list."
|   |-ParagraphComment 0x721ed0 <line:182:3>
|   | `-TextComment 0x721ea0 <col:3> Text=" "
|   |-BlockCommandComment 0x721ef0 <col:4, line:186:3> Name="par"
|   | `-ParagraphComment 0x722110 <line:182:8, line:186:3>
|   |   |-TextComment 0x721f20 <line:182:8, col:20> Text=" Description:"
|   |   |-TextComment 0x721f40 <line:183:3> Text=" "
|   |   |-HTMLStartTagComment 0x721f60 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x721fa0 <line:184:3> Text=" "
|   |   |-HTMLStartTagComment 0x721fc0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x722000 <col:8, col:77> Text="This API is used to delete a specified node from a doubly linked list."
|   |   |-HTMLEndTagComment 0x722020 <col:78, col:82> Name="li"
|   |   |-TextComment 0x722050 <line:185:3> Text=" "
|   |   |-HTMLEndTagComment 0x722070 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x7220a0 <line:186:3> Text=" "
|   |-BlockCommandComment 0x722130 <col:4, line:189:8> Name="attention"
|   | `-ParagraphComment 0x722300 <line:187:3, line:189:8>
|   |   |-TextComment 0x722160 <line:187:3> Text=" "
|   |   |-HTMLStartTagComment 0x722180 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x7221c0 <line:188:3> Text=" "
|   |   |-HTMLStartTagComment 0x7221e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x722220 <col:8, col:71> Text="The parameter passed in should be ensured to be a legal pointer."
|   |   |-HTMLEndTagComment 0x722240 <col:72, col:76> Name="li"
|   |   |-TextComment 0x722270 <line:189:3> Text=" "
|   |   `-HTMLEndTagComment 0x722290 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x722350 <line:191:3>
|   | `-TextComment 0x722320 <col:3> Text=" "
|   |-ParamCommandComment 0x722370 <col:4, col:42> [in] implicitly Param="node" ParamIndex=0
|   | `-ParagraphComment 0x722400 <col:15, col:42>
|   |   `-TextComment 0x7223d0 <col:15, col:42> Text="    [IN] Node to be deleted."
|   |-ParagraphComment 0x722450 <line:193:3>
|   | `-TextComment 0x722420 <col:3> Text=" "
|   |-BlockCommandComment 0x722470 <col:4, line:194:3> Name="retval"
|   | `-ParagraphComment 0x7224f0 <line:193:11, line:194:3>
|   |   |-TextComment 0x7224a0 <line:193:11, col:16> Text=" None."
|   |   `-TextComment 0x7224c0 <line:194:3> Text=" "
|   |-BlockCommandComment 0x722530 <col:4, line:196:3> Name="par"
|   | `-ParagraphComment 0x722700 <line:194:8, line:196:3>
|   |   |-TextComment 0x722560 <line:194:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x722580 <line:195:3> Text=" "
|   |   |-HTMLStartTagComment 0x7225a0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x7225e0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x722620 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x722640 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x722670 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x7226a0 <line:196:3> Text=" "
|   `-BlockCommandComment 0x722720 <col:4, col:19> Name="see"
|     `-ParagraphComment 0x722780 <col:8, col:19>
|       `-TextComment 0x722750 <col:8, col:19> Text=" LOS_ListAdd"
|-FunctionDecl 0x63a128 <main/hals/driver/../../los_compiler.h:130:23, main/los_list.h:230:1> line:227:43 used LOS_ListEmpty 'BOOL (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0x63a038 <col:57, col:70> col:70 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0x63a418 <line:228:1, line:230:1>
| | `-ReturnStmt 0x63a320 <line:229:5, col:40>
| |   `-CStyleCastExpr 0x63a2f8 <col:12, col:40> 'BOOL':'unsigned int' <IntegralCast>
| |     `-ParenExpr 0x63a2d8 <col:18, col:40> 'int'
| |       `-BinaryOperator 0x63a288 <col:19, col:36> 'int' '=='
| |         |-ImplicitCastExpr 0x63a258 <col:19, col:25> 'struct LOS_DL_LIST *' <LValueToRValue>
| |         | `-MemberExpr 0x63a208 <col:19, col:25> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x62adf0
| |         |   `-ImplicitCastExpr 0x63a1f0 <col:19> 'LOS_DL_LIST *' <LValueToRValue>
| |         |     `-DeclRefExpr 0x63a1d0 <col:19> 'LOS_DL_LIST *' lvalue ParmVar 0x63a038 'node' 'LOS_DL_LIST *'
| |         `-ImplicitCastExpr 0x63a270 <col:36> 'LOS_DL_LIST *' <LValueToRValue>
| |           `-DeclRefExpr 0x63a238 <col:36> 'LOS_DL_LIST *' lvalue ParmVar 0x63a038 'node' 'LOS_DL_LIST *'
| `-FullComment 0x7233a0 <line:207:3, line:225:7>
|   |-ParagraphComment 0x7228b0 <line:207:3>
|   | `-TextComment 0x722880 <col:3> Text=" "
|   |-VerbatimLineComment 0x7228d0 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0x722940 <line:208:3>
|   | `-TextComment 0x722910 <col:3> Text=" "
|   |-BlockCommandComment 0x722960 <col:4, col:67> Name="brief"
|   | `-ParagraphComment 0x7229c0 <col:10, col:67>
|   |   `-TextComment 0x722990 <col:10, col:67> Text=" Identify whether a specified doubly linked list is empty."
|   |-ParagraphComment 0x722a10 <line:210:3>
|   | `-TextComment 0x7229e0 <col:3> Text=" "
|   |-BlockCommandComment 0x722a30 <col:4, line:214:3> Name="par"
|   | `-ParagraphComment 0x722c50 <line:210:8, line:214:3>
|   |   |-TextComment 0x722a60 <line:210:8, col:20> Text=" Description:"
|   |   |-TextComment 0x722a80 <line:211:3> Text=" "
|   |   |-HTMLStartTagComment 0x722aa0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x722ae0 <line:212:3> Text=" "
|   |   |-HTMLStartTagComment 0x722b00 <col:4, col:7> Name="li"
|   |   |-TextComment 0x722b40 <col:8, col:72> Text="This API is used to return whether a doubly linked list is empty."
|   |   |-HTMLEndTagComment 0x722b60 <col:73, col:77> Name="li"
|   |   |-TextComment 0x722b90 <line:213:3> Text=" "
|   |   |-HTMLEndTagComment 0x722bb0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x722be0 <line:214:3> Text=" "
|   |-BlockCommandComment 0x722c70 <col:4, line:217:8> Name="attention"
|   | `-ParagraphComment 0x722e40 <line:215:3, line:217:8>
|   |   |-TextComment 0x722ca0 <line:215:3> Text=" "
|   |   |-HTMLStartTagComment 0x722cc0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x722d00 <line:216:3> Text=" "
|   |   |-HTMLStartTagComment 0x722d20 <col:4, col:7> Name="li"
|   |   |-TextComment 0x722d60 <col:8, col:71> Text="The parameter passed in should be ensured to be a legal pointer."
|   |   |-HTMLEndTagComment 0x722d80 <col:72, col:76> Name="li"
|   |   |-TextComment 0x722db0 <line:217:3> Text=" "
|   |   `-HTMLEndTagComment 0x722dd0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x722e90 <line:219:3>
|   | `-TextComment 0x722e60 <col:3> Text=" "
|   |-ParamCommandComment 0x722eb0 <col:4, col:40> [in] implicitly Param="list"
|   | `-ParagraphComment 0x722f40 <col:15, col:40>
|   |   `-TextComment 0x722f10 <col:15, col:40> Text="  [IN] Doubly linked node."
|   |-ParagraphComment 0x722f90 <line:221:3>
|   | `-TextComment 0x722f60 <col:3> Text=" "
|   |-BlockCommandComment 0x722fb0 <col:4, line:222:3> Name="retval"
|   | `-ParagraphComment 0x723030 <line:221:11, line:222:3>
|   |   |-TextComment 0x722fe0 <line:221:11, col:48> Text=" TRUE The doubly linked list is empty."
|   |   `-TextComment 0x723000 <line:222:3> Text=" "
|   |-BlockCommandComment 0x723050 <col:4, line:223:3> Name="retval"
|   | `-ParagraphComment 0x7230d0 <line:222:11, line:223:3>
|   |   |-TextComment 0x723080 <line:222:11, col:53> Text=" FALSE The doubly linked list is not empty."
|   |   `-TextComment 0x7230a0 <line:223:3> Text=" "
|   |-BlockCommandComment 0x7230f0 <col:4, line:225:3> Name="par"
|   | `-ParagraphComment 0x7232c0 <line:223:8, line:225:3>
|   |   |-TextComment 0x723120 <line:223:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x723140 <line:224:3> Text=" "
|   |   |-HTMLStartTagComment 0x723160 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x7231a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x7231e0 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x723200 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x723230 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x723260 <line:225:3> Text=" "
|   `-BlockCommandComment 0x7232e0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x723310 <<invalid sloc>>
|-FunctionDecl 0x63a4d0 <main/hals/driver/../../los_compiler.h:130:23, main/los_list.h:356:1> line:351:43 LOS_ListDelInit 'void (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0x63a440 <col:59, col:72> col:72 used list 'LOS_DL_LIST *'
| |-CompoundStmt 0x63e088 <line:352:1, line:356:1>
| | |-BinaryOperator 0x63a6a8 <line:353:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x63a5f8 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x62ad50
| | | | `-ImplicitCastExpr 0x63a5e0 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0x63a5b0 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x62adf0
| | | |     `-ImplicitCastExpr 0x63a598 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0x63a578 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x63a440 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0x63a690 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0x63a660 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x62ad50
| | |     `-ImplicitCastExpr 0x63a648 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0x63a628 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0x63a440 'list' 'LOS_DL_LIST *'
| | |-BinaryOperator 0x63a7f8 <line:354:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x63a748 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x62adf0
| | | | `-ImplicitCastExpr 0x63a730 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0x63a700 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x62ad50
| | | |     `-ImplicitCastExpr 0x63a6e8 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0x63a6c8 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x63a440 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0x63a7e0 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0x63a7b0 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x62adf0
| | |     `-ImplicitCastExpr 0x63a798 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0x63a778 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0x63a440 'list' 'LOS_DL_LIST *'
| | `-CallExpr 0x63a8d0 <line:355:5, col:22> 'void'
| |   |-ImplicitCastExpr 0x63a8b8 <col:5> 'void (*)(LOS_DL_LIST *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0x63a818 <col:5> 'void (LOS_DL_LIST *)' Function 0x62b0a8 'LOS_ListInit' 'void (LOS_DL_LIST *)'
| |   `-ImplicitCastExpr 0x63a8f8 <col:18> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0x63a838 <col:18> 'LOS_DL_LIST *' lvalue ParmVar 0x63a440 'list' 'LOS_DL_LIST *'
| `-FullComment 0x723d40 <line:334:3, line:349:7>
|   |-ParagraphComment 0x723440 <line:334:3>
|   | `-TextComment 0x723410 <col:3> Text=" "
|   |-VerbatimLineComment 0x723460 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0x7234d0 <line:335:3>
|   | `-TextComment 0x7234a0 <col:3> Text=" "
|   |-BlockCommandComment 0x7234f0 <col:4, col:49> Name="brief"
|   | `-ParagraphComment 0x723570 <col:10, col:49>
|   |   `-TextComment 0x723540 <col:10, col:49> Text=" Delete initialize a doubly linked list."
|   |-ParagraphComment 0x7235c0 <line:337:3>
|   | `-TextComment 0x723590 <col:3> Text=" "
|   |-BlockCommandComment 0x7235e0 <col:4, line:339:3> Name="par"
|   | `-ParagraphComment 0x723690 <line:337:8, line:339:3>
|   |   |-TextComment 0x723610 <line:337:8, col:20> Text=" Description:"
|   |   |-TextComment 0x723630 <line:338:3, col:62> Text=" This API is used to delete initialize a doubly linked list."
|   |   `-TextComment 0x723650 <line:339:3> Text=" "
|   |-BlockCommandComment 0x7236b0 <col:4, line:342:8> Name="attention"
|   | `-ParagraphComment 0x723880 <line:340:3, line:342:8>
|   |   |-TextComment 0x7236e0 <line:340:3> Text=" "
|   |   |-HTMLStartTagComment 0x723700 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x723740 <line:341:3> Text=" "
|   |   |-HTMLStartTagComment 0x723760 <col:4, col:7> Name="li"
|   |   |-TextComment 0x7237a0 <col:8, col:71> Text="The parameter passed in should be ensured to be s legal pointer."
|   |   |-HTMLEndTagComment 0x7237c0 <col:72, col:76> Name="li"
|   |   |-TextComment 0x7237f0 <line:342:3> Text=" "
|   |   `-HTMLEndTagComment 0x723810 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x7238d0 <line:344:3>
|   | `-TextComment 0x7238a0 <col:3> Text=" "
|   |-ParamCommandComment 0x7238f0 <col:4, col:42> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0x723980 <col:15, col:42>
|   |   `-TextComment 0x723950 <col:15, col:42> Text="    [IN] Doubly linked list."
|   |-ParagraphComment 0x7239d0 <line:346:3>
|   | `-TextComment 0x7239a0 <col:3> Text=" "
|   |-BlockCommandComment 0x7239f0 <col:4, line:347:3> Name="retval"
|   | `-ParagraphComment 0x723a70 <line:346:11, line:347:3>
|   |   |-TextComment 0x723a20 <line:346:11, col:16> Text=" None."
|   |   `-TextComment 0x723a40 <line:347:3> Text=" "
|   |-BlockCommandComment 0x723a90 <col:4, line:349:3> Name="par"
|   | `-ParagraphComment 0x723c60 <line:347:8, line:349:3>
|   |   |-TextComment 0x723ac0 <line:347:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x723ae0 <line:348:3> Text=" "
|   |   |-HTMLStartTagComment 0x723b00 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x723b40 <col:8, col:11> Name="li"
|   |   |-TextComment 0x723b80 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x723ba0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x723bd0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x723c00 <line:349:3> Text=" "
|   `-BlockCommandComment 0x723c80 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x723cb0 <<invalid sloc>>
|-RecordDecl 0x63e0b0 <main/los_event.h:171:9, line:175:1> line:171:16 struct tagEvent definition
| |-FullComment 0x723eb0 <line:168:3, line:169:26>
| | |-ParagraphComment 0x723de0 <line:168:3>
| | | `-TextComment 0x723db0 <col:3> Text=" "
| | |-VerbatimLineComment 0x723e00 <col:4, col:22> Text=" los_event"
| | `-ParagraphComment 0x723e70 <line:169:3, col:26>
| |   `-TextComment 0x723e40 <col:3, col:26> Text=" Event control structure"
| |-FieldDecl 0x63e160 <line:172:5, col:12> col:12 uwEventID 'UINT32':'unsigned int'
| | `-FullComment 0x723fa0 <col:34, line:173:90>
| |   `-ParagraphComment 0x723f70 <line:172:34, line:173:90>
| |     |-TextComment 0x723f20 <line:172:34, col:72> Text=" Event mask in the event control block,"
| |     `-TextComment 0x723f40 <line:173:1, col:90> Text="                                  indicating the event that has been logically processed. "
| `-FieldDecl 0x63e1e8 <line:174:5, col:17> col:17 stEventList 'LOS_DL_LIST':'struct LOS_DL_LIST'
|   `-FullComment 0x724070 <col:34, col:66>
|     `-ParagraphComment 0x724040 <col:34, col:66>
|       `-TextComment 0x724010 <col:34, col:66> Text=" Event control block linked list "
|-TypedefDecl 0x63e2c8 <line:171:1, line:175:3> col:3 referenced EVENT_CB_S 'struct tagEvent':'struct tagEvent'
| |-ElaboratedType 0x63e270 'struct tagEvent' sugar
| | `-RecordType 0x63e130 'struct tagEvent'
| |   `-Record 0x63e0b0 'tagEvent'
| `-FullComment 0x7241e0 <line:168:3, line:169:26>
|   |-ParagraphComment 0x724110 <line:168:3>
|   | `-TextComment 0x7240e0 <col:3> Text=" "
|   |-VerbatimLineComment 0x724130 <col:4, col:22> Text=" los_event"
|   `-ParagraphComment 0x7241a0 <line:169:3, col:26>
|     `-TextComment 0x724170 <col:3, col:26> Text=" Event control structure"
|-TypedefDecl 0x63e3a0 <line:171:1, line:175:16> col:16 referenced PEVENT_CB_S 'struct tagEvent *'
| |-PointerType 0x63e350 'struct tagEvent *'
| | `-ElaboratedType 0x63e270 'struct tagEvent' sugar
| |   `-RecordType 0x63e130 'struct tagEvent'
| |     `-Record 0x63e0b0 'tagEvent'
| `-FullComment 0x724350 <line:168:3, line:169:26>
|   |-ParagraphComment 0x724280 <line:168:3>
|   | `-TextComment 0x724250 <col:3> Text=" "
|   |-VerbatimLineComment 0x7242a0 <col:4, col:22> Text=" los_event"
|   `-ParagraphComment 0x724310 <line:169:3, col:26>
|     `-TextComment 0x7242e0 <col:3, col:26> Text=" Event control structure"
|-FunctionDecl 0x63e578 <line:195:1, col:48> col:15 LOS_EventInit 'UINT32 (PEVENT_CB_S)' extern
| |-ParmVarDecl 0x63e480 <col:29, col:41> col:41 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| `-FullComment 0x724db0 <line:177:3, line:193:22>
|   |-ParagraphComment 0x7243f0 <line:177:3>
|   | `-TextComment 0x7243c0 <col:3> Text=" "
|   |-VerbatimLineComment 0x724410 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0x724480 <line:178:3>
|   | `-TextComment 0x724450 <col:3> Text=" "
|   |-BlockCommandComment 0x7244a0 <col:4, col:44> Name="brief"
|   | `-ParagraphComment 0x724500 <col:10, col:44>
|   |   `-TextComment 0x7244d0 <col:10, col:44> Text=" Initialize an event control block."
|   |-ParagraphComment 0x724560 <line:180:3>
|   | `-TextComment 0x724520 <col:3> Text=" "
|   |-BlockCommandComment 0x724580 <col:4, line:182:3> Name="par"
|   | `-ParagraphComment 0x724630 <line:180:8, line:182:3>
|   |   |-TextComment 0x7245b0 <line:180:8, col:20> Text=" Description:"
|   |   |-TextComment 0x7245d0 <line:181:3, col:80> Text=" This API is used to initialize the event control block pointed to by eventCB."
|   |   `-TextComment 0x7245f0 <line:182:3> Text=" "
|   |-BlockCommandComment 0x724650 <col:4, line:185:8> Name="attention"
|   | `-ParagraphComment 0x724820 <line:183:3, line:185:8>
|   |   |-TextComment 0x724680 <line:183:3> Text=" "
|   |   |-HTMLStartTagComment 0x7246a0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x7246e0 <line:184:3> Text=" "
|   |   |-HTMLStartTagComment 0x724700 <col:4, col:7> Name="li"
|   |   |-TextComment 0x724740 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x724760 <col:13, col:17> Name="li"
|   |   |-TextComment 0x724790 <line:185:3> Text=" "
|   |   `-HTMLEndTagComment 0x7247b0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x724870 <line:187:3>
|   | `-TextComment 0x724840 <col:3> Text=" "
|   |-ParamCommandComment 0x724890 <col:4, col:80> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0x724920 <col:18, col:80>
|   |   `-TextComment 0x7248f0 <col:18, col:80> Text=" [IN/OUT] Pointer to the event control block to be initialized."
|   |-ParagraphComment 0x724970 <line:189:3>
|   | `-TextComment 0x724940 <col:3> Text=" "
|   |-BlockCommandComment 0x724990 <col:4, line:190:3> Name="retval"
|   | `-ParagraphComment 0x724a10 <line:189:11, line:190:3>
|   |   |-TextComment 0x7249c0 <line:189:11, col:51> Text=" #LOS_ERRNO_EVENT_PTR_NULL  Null pointer."
|   |   `-TextComment 0x7249e0 <line:190:3> Text=" "
|   |-BlockCommandComment 0x724a30 <col:4, line:191:3> Name="retval"
|   | `-ParagraphComment 0x724ab0 <line:190:11, line:191:3>
|   |   |-TextComment 0x724a60 <line:190:11, col:90> Text=" #LOS_OK                    The event control block is successfully initialized."
|   |   `-TextComment 0x724a80 <line:191:3> Text=" "
|   |-BlockCommandComment 0x724ad0 <col:4, line:193:3> Name="par"
|   | `-ParagraphComment 0x724ca0 <line:191:8, line:193:3>
|   |   |-TextComment 0x724b00 <line:191:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x724b20 <line:192:3> Text=" "
|   |   |-HTMLStartTagComment 0x724b40 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x724b80 <col:8, col:11> Name="li"
|   |   |-TextComment 0x724bc0 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x724be0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x724c10 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x724c40 <line:193:3> Text=" "
|   `-BlockCommandComment 0x724cc0 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x724d20 <col:8, col:22>
|       `-TextComment 0x724cf0 <col:8, col:22> Text=" LOS_EventClear"
|-FunctionDecl 0x63e898 <line:221:1, col:75> col:15 LOS_EventPoll 'UINT32 (UINT32 *, UINT32, UINT32)' extern
| |-ParmVarDecl 0x63e688 <col:29, col:37> col:37 eventID 'UINT32 *'
| |-ParmVarDecl 0x63e700 <col:46, col:53> col:53 eventMask 'UINT32':'unsigned int'
| |-ParmVarDecl 0x63e778 <col:64, col:71> col:71 mode 'UINT32':'unsigned int'
| `-FullComment 0x725af0 <line:198:3, line:219:38>
|   |-ParagraphComment 0x724e50 <line:198:3>
|   | `-TextComment 0x724e20 <col:3> Text=" "
|   |-VerbatimLineComment 0x724e70 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0x724ee0 <line:199:3>
|   | `-TextComment 0x724eb0 <col:3> Text=" "
|   |-BlockCommandComment 0x724f00 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0x724f60 <col:10, col:52>
|   |   `-TextComment 0x724f30 <col:10, col:52> Text=" Obtain an event specified by the event ID."
|   |-ParagraphComment 0x724fb0 <line:201:3>
|   | `-TextComment 0x724f80 <col:3> Text=" "
|   |-BlockCommandComment 0x724fd0 <col:4, line:204:3> Name="par"
|   | `-ParagraphComment 0x7250a0 <line:201:8, line:204:3>
|   |   |-TextComment 0x725000 <line:201:8, col:20> Text=" Description:"
|   |   |-TextComment 0x725020 <line:202:3, col:112> Text=" This API is used to check whether an event expected by the user occurs according to the event ID, event mask,"
|   |   |-TextComment 0x725040 <line:203:3, col:122> Text=" and event reading mode, and process the event based on the event reading mode. The event ID must point to valid memory."
|   |   `-TextComment 0x725060 <line:204:3> Text=" "
|   |-BlockCommandComment 0x7250c0 <col:4, line:208:8> Name="attention"
|   | `-ParagraphComment 0x725360 <line:205:3, line:208:8>
|   |   |-TextComment 0x7250f0 <line:205:3> Text=" "
|   |   |-HTMLStartTagComment 0x725110 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x725150 <line:206:3> Text=" "
|   |   |-HTMLStartTagComment 0x725170 <col:4, col:7> Name="li"
|   |   |-TextComment 0x7251b0 <col:8, col:68> Text="When the mode is LOS_WAITMODE_CLR, the eventID is passed-out."
|   |   |-HTMLEndTagComment 0x7251d0 <col:69, col:73> Name="li"
|   |   |-TextComment 0x725200 <line:207:3> Text=" "
|   |   |-HTMLStartTagComment 0x725220 <col:4, col:7> Name="li"
|   |   |-TextComment 0x725260 <col:8, col:42> Text="Otherwise the eventID is passed-in."
|   |   |-HTMLEndTagComment 0x725280 <col:43, col:47> Name="li"
|   |   |-TextComment 0x7252b0 <line:208:3> Text=" "
|   |   `-HTMLEndTagComment 0x7252d0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x7253b0 <line:210:3>
|   | `-TextComment 0x725380 <col:3> Text=" "
|   |-ParamCommandComment 0x7253d0 <col:4, line:211:3> [in] implicitly Param="eventID" ParamIndex=0
|   | `-ParagraphComment 0x725480 <line:210:18, line:211:3>
|   |   |-TextComment 0x725430 <line:210:18, col:77> Text="      [IN/OUT] Pointer to the ID of the event to be checked."
|   |   `-TextComment 0x725450 <line:211:3> Text=" "
|   |-ParamCommandComment 0x7254a0 <col:4, line:213:3> [in] implicitly Param="eventMask" ParamIndex=1
|   | `-ParagraphComment 0x7255a0 <line:211:20, line:213:3>
|   |   |-TextComment 0x725500 <line:211:20, col:112> Text="    [IN] Mask of the event expected to occur by the user, indicating the event obtained after"
|   |   |-TextComment 0x725520 <line:212:3, col:68> Text=" it is logically processed that matches the ID pointed to by mode."
|   |   `-TextComment 0x725560 <line:213:3> Text=" "
|   |-ParamCommandComment 0x7255c0 <col:4, col:118> [in] implicitly Param="mode" ParamIndex=2
|   | `-ParagraphComment 0x725650 <col:15, col:118>
|   |   `-TextComment 0x725620 <col:15, col:118> Text="         [IN] Event reading mode. The modes include LOS_WAITMODE_AND, LOS_WAITMODE_OR, LOS_WAITMODE_CLR."
|   |-ParagraphComment 0x7256a0 <line:215:3>
|   | `-TextComment 0x725670 <col:3> Text=" "
|   |-BlockCommandComment 0x7256c0 <col:4, line:216:3> Name="retval"
|   | `-ParagraphComment 0x725740 <line:215:11, line:216:3>
|   |   |-TextComment 0x7256f0 <line:215:11, col:71> Text=" 0             The event expected by the user does not occur."
|   |   `-TextComment 0x725710 <line:216:3> Text=" "
|   |-BlockCommandComment 0x725760 <col:4, line:217:3> Name="retval"
|   | `-ParagraphComment 0x7257e0 <line:216:11, line:217:3>
|   |   |-TextComment 0x725790 <line:216:11, col:63> Text=" #UINT32       The event expected by the user occurs."
|   |   `-TextComment 0x7257b0 <line:217:3> Text=" "
|   |-BlockCommandComment 0x725800 <col:4, line:219:3> Name="par"
|   | `-ParagraphComment 0x7259d0 <line:217:8, line:219:3>
|   |   |-TextComment 0x725830 <line:217:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x725850 <line:218:3> Text=" "
|   |   |-HTMLStartTagComment 0x725870 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x7258b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x7258f0 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x725910 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x725940 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x725970 <line:219:3> Text=" "
|   `-BlockCommandComment 0x7259f0 <col:4, col:38> Name="see"
|     `-ParagraphComment 0x725a50 <col:8, col:38>
|       `-TextComment 0x725a20 <col:8, col:38> Text=" LOS_EventRead | LOS_EventWrite"
|-FunctionDecl 0x63ec38 <line:255:1, col:95> col:15 LOS_EventRead 'UINT32 (PEVENT_CB_S, UINT32, UINT32, UINT32)' extern
| |-ParmVarDecl 0x63e988 <col:29, col:41> col:41 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0x63ea00 <col:50, col:57> col:57 eventMask 'UINT32':'unsigned int'
| |-ParmVarDecl 0x63ea78 <col:68, col:75> col:75 mode 'UINT32':'unsigned int'
| |-ParmVarDecl 0x63eaf0 <col:81, col:88> col:88 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x726cb0 <line:224:3, line:253:38>
|   |-ParagraphComment 0x725b90 <line:224:3>
|   | `-TextComment 0x725b60 <col:3> Text=" "
|   |-VerbatimLineComment 0x725bb0 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0x725c20 <line:225:3>
|   | `-TextComment 0x725bf0 <col:3> Text=" "
|   |-BlockCommandComment 0x725c40 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0x725ca0 <col:10, col:24>
|   |   `-TextComment 0x725c70 <col:10, col:24> Text=" Read an event."
|   |-ParagraphComment 0x725cf0 <line:227:3>
|   | `-TextComment 0x725cc0 <col:3> Text=" "
|   |-BlockCommandComment 0x725d10 <col:4, line:231:3> Name="par"
|   | `-ParagraphComment 0x725e40 <line:227:8, line:231:3>
|   |   |-TextComment 0x725d40 <line:227:8, col:20> Text=" Description:"
|   |   |-TextComment 0x725d60 <line:228:3, col:127> Text=" This API is used to block or schedule a task that reads an event of which the event control block, event mask, reading mode,"
|   |   |-TextComment 0x725d80 <line:229:3, col:41> Text=" and timeout information are specified."
|   |   |-TextComment 0x725da0 <line:230:3> Text=" "
|   |   |-HTMLEndTagComment 0x725dc0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x725df0 <line:231:3> Text=" "
|   |-BlockCommandComment 0x725e60 <col:4, line:235:8> Name="attention"
|   | `-ParagraphComment 0x726050 <line:232:3, line:235:8>
|   |   |-TextComment 0x725e90 <line:232:3> Text=" "
|   |   |-HTMLStartTagComment 0x725eb0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x725ef0 <line:233:3> Text=" "
|   |   |-HTMLStartTagComment 0x725f10 <col:4, col:7> Name="li"
|   |   |-TextComment 0x725f50 <col:8, col:119> Text="An error code and an event return value can be same. To differentiate the error code and return value, bit 25 of"
|   |   |-TextComment 0x725f70 <line:234:3, col:42> Text=" the event mask is forbidden to be used."
|   |   |-HTMLEndTagComment 0x725f90 <col:43, col:47> Name="li"
|   |   |-TextComment 0x725fc0 <line:235:3> Text=" "
|   |   `-HTMLEndTagComment 0x725fe0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x7260a0 <line:237:3>
|   | `-TextComment 0x726070 <col:3> Text=" "
|   |-ParamCommandComment 0x7260c0 <col:4, line:238:3> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0x726170 <line:237:18, line:238:3>
|   |   |-TextComment 0x726120 <line:237:18, col:124> Text="      [IN/OUT] Pointer to the event control block to be checked. This parameter must point to valid memory."
|   |   `-TextComment 0x726140 <line:238:3> Text=" "
|   |-ParamCommandComment 0x726190 <col:4, line:240:3> [in] implicitly Param="eventMask" ParamIndex=1
|   | `-ParagraphComment 0x726270 <line:238:20, line:240:3>
|   |   |-TextComment 0x7261f0 <line:238:20, col:116> Text="    [IN]     Mask of the event expected to occur by the user, indicating the event obtained after"
|   |   |-TextComment 0x726210 <line:239:3, col:100> Text="                              it is logically processed that matches the ID pointed to by eventID."
|   |   `-TextComment 0x726230 <line:240:3> Text=" "
|   |-ParamCommandComment 0x726290 <col:4, line:241:3> [in] implicitly Param="mode" ParamIndex=2
|   | `-ParagraphComment 0x726340 <line:240:15, line:241:3>
|   |   |-TextComment 0x7262f0 <line:240:15, col:51> Text="         [IN]     Event reading mode."
|   |   `-TextComment 0x726310 <line:241:3> Text=" "
|   |-ParamCommandComment 0x726360 <col:4, col:79> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0x7263f0 <col:18, col:79>
|   |   `-TextComment 0x7263c0 <col:18, col:79> Text="      [IN]     Timeout interval of event reading (unit: Tick)."
|   |-ParagraphComment 0x726440 <line:243:3>
|   | `-TextComment 0x726410 <col:3> Text=" "
|   |-BlockCommandComment 0x726460 <col:4, line:244:3> Name="retval"
|   | `-ParagraphComment 0x7264e0 <line:243:11, line:244:3>
|   |   |-TextComment 0x726490 <line:243:11, col:123> Text=" #LOS_ERRNO_EVENT_SETBIT_INVALID     Bit 25 of the event mask cannot be set because it is set to an error number."
|   |   `-TextComment 0x7264b0 <line:244:3> Text=" "
|   |-BlockCommandComment 0x726500 <col:4, line:245:3> Name="retval"
|   | `-ParagraphComment 0x7265a0 <line:244:11, line:245:3>
|   |   |-TextComment 0x726530 <line:244:11, col:93> Text=" #LOS_ERRNO_EVENT_EVENTMASK_INVALID  The passed-in event reading mode is incorrect."
|   |   `-TextComment 0x726570 <line:245:3> Text=" "
|   |-BlockCommandComment 0x7265c0 <col:4, line:246:3> Name="retval"
|   | `-ParagraphComment 0x726640 <line:245:11, line:246:3>
|   |   |-TextComment 0x7265f0 <line:245:11, col:91> Text=" #LOS_ERRNO_EVENT_READ_IN_INTERRUPT  The event is being read during an interrupt."
|   |   `-TextComment 0x726610 <line:246:3> Text=" "
|   |-BlockCommandComment 0x726660 <col:4, line:247:3> Name="retval"
|   | `-ParagraphComment 0x7266e0 <line:246:11, line:247:3>
|   |   |-TextComment 0x726690 <line:246:11, col:73> Text=" #LOS_ERRNO_EVENT_FLAGS_INVALID      The event mode is invalid."
|   |   `-TextComment 0x7266b0 <line:247:3> Text=" "
|   |-BlockCommandComment 0x726700 <col:4, line:248:3> Name="retval"
|   | `-ParagraphComment 0x726780 <line:247:11, line:248:3>
|   |   |-TextComment 0x726730 <line:247:11, col:80> Text=" #LOS_ERRNO_EVENT_READ_IN_LOCK       The event reading task is locked."
|   |   `-TextComment 0x726750 <line:248:3> Text=" "
|   |-BlockCommandComment 0x7267a0 <col:4, line:249:3> Name="retval"
|   | `-ParagraphComment 0x726820 <line:248:11, line:249:3>
|   |   |-TextComment 0x7267d0 <line:248:11, col:77> Text=" #LOS_ERRNO_EVENT_PTR_NULL           The passed-in pointer is null."
|   |   `-TextComment 0x7267f0 <line:249:3> Text=" "
|   |-BlockCommandComment 0x726840 <col:4, line:250:3> Name="retval"
|   | `-ParagraphComment 0x7268c0 <line:249:11, line:250:3>
|   |   |-TextComment 0x726870 <line:249:11, col:93> Text=" 0                                   The event expected by the user does not occur."
|   |   `-TextComment 0x726890 <line:250:3> Text=" "
|   |-BlockCommandComment 0x7268e0 <col:4, line:251:3> Name="retval"
|   | `-ParagraphComment 0x726960 <line:250:11, line:251:3>
|   |   |-TextComment 0x726910 <line:250:11, col:85> Text=" #UINT32                             The event expected by the user occurs."
|   |   `-TextComment 0x726930 <line:251:3> Text=" "
|   |-BlockCommandComment 0x726980 <col:4, line:253:3> Name="par"
|   | `-ParagraphComment 0x726b50 <line:251:8, line:253:3>
|   |   |-TextComment 0x7269b0 <line:251:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x7269d0 <line:252:3> Text=" "
|   |   |-HTMLStartTagComment 0x7269f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x726a30 <col:8, col:11> Name="li"
|   |   |-TextComment 0x726a70 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x726a90 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x726ac0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x726af0 <line:253:3> Text=" "
|   `-BlockCommandComment 0x726b70 <col:4, col:38> Name="see"
|     `-ParagraphComment 0x726bd0 <col:8, col:38>
|       `-TextComment 0x726ba0 <col:8, col:38> Text=" LOS_EventPoll | LOS_EventWrite"
|-FunctionDecl 0x63eec8 <line:282:1, col:64> col:15 LOS_EventWrite 'UINT32 (PEVENT_CB_S, UINT32)' extern
| |-ParmVarDecl 0x63ed38 <col:30, col:42> col:42 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0x63edb0 <col:51, col:58> col:58 events 'UINT32':'unsigned int'
| `-FullComment 0x727930 <line:258:3, line:280:37>
|   |-ParagraphComment 0x726d50 <line:258:3>
|   | `-TextComment 0x726d20 <col:3> Text=" "
|   |-VerbatimLineComment 0x726d70 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0x726de0 <line:259:3>
|   | `-TextComment 0x726db0 <col:3> Text=" "
|   |-BlockCommandComment 0x726e00 <col:4, col:25> Name="brief"
|   | `-ParagraphComment 0x726e60 <col:10, col:25>
|   |   `-TextComment 0x726e30 <col:10, col:25> Text=" Write an event."
|   |-ParagraphComment 0x726eb0 <line:261:3>
|   | `-TextComment 0x726e80 <col:3> Text=" "
|   |-BlockCommandComment 0x726ed0 <col:4, line:264:3> Name="par"
|   | `-ParagraphComment 0x726fa0 <line:261:8, line:264:3>
|   |   |-TextComment 0x726f00 <line:261:8, col:20> Text=" Description:"
|   |   |-TextComment 0x726f20 <line:262:3, col:103> Text=" This API is used to write an event specified by the passed-in event mask into an event control block"
|   |   |-TextComment 0x726f40 <line:263:3, col:25> Text=" pointed to by eventCB."
|   |   `-TextComment 0x726f60 <line:264:3> Text=" "
|   |-BlockCommandComment 0x726fc0 <col:4, line:268:8> Name="attention"
|   | `-ParagraphComment 0x7271b0 <line:265:3, line:268:8>
|   |   |-TextComment 0x726ff0 <line:265:3> Text=" "
|   |   |-HTMLStartTagComment 0x727010 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x727050 <line:266:3> Text=" "
|   |   |-HTMLStartTagComment 0x727070 <col:4, col:7> Name="li"
|   |   |-TextComment 0x7270b0 <col:8, col:109> Text="To determine whether the LOS_EventRead API returns an event or an error code, bit 25 of the event mask"
|   |   |-TextComment 0x7270d0 <line:267:3, col:27> Text=" is forbidden to be used."
|   |   |-HTMLEndTagComment 0x7270f0 <col:28, col:32> Name="li"
|   |   |-TextComment 0x727120 <line:268:3> Text=" "
|   |   `-HTMLEndTagComment 0x727140 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x727200 <line:270:3>
|   | `-TextComment 0x7271d0 <col:3> Text=" "
|   |-ParamCommandComment 0x727220 <col:4, line:272:3> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0x727300 <line:270:18, line:272:3>
|   |   |-TextComment 0x727280 <line:270:18, col:100> Text="  [IN/OUT] Pointer to the event control block into which an event is to be written."
|   |   |-TextComment 0x7272a0 <line:271:3, col:45> Text=" This parameter must point to valid memory."
|   |   `-TextComment 0x7272c0 <line:272:3> Text=" "
|   |-ParamCommandComment 0x727320 <col:4, col:49> [in] implicitly Param="events" ParamIndex=1
|   | `-ParagraphComment 0x7273b0 <col:17, col:49>
|   |   `-TextComment 0x727380 <col:17, col:49> Text="   [IN] Event mask to be written."
|   |-ParagraphComment 0x727400 <line:274:3>
|   | `-TextComment 0x7273d0 <col:3> Text=" "
|   |-BlockCommandComment 0x727420 <col:4, line:276:3> Name="retval"
|   | `-ParagraphComment 0x7274d0 <line:274:11, line:276:3>
|   |   |-TextComment 0x727450 <line:274:11, col:94> Text=" #LOS_ERRNO_EVENT_SETBIT_INVALID  Bit 25 of the event mask cannot be set to an event"
|   |   |-TextComment 0x727470 <line:275:3, col:38> Text=" because it is set to an error code."
|   |   `-TextComment 0x727490 <line:276:3> Text=" "
|   |-BlockCommandComment 0x7274f0 <col:4, line:277:3> Name="retval"
|   | `-ParagraphComment 0x727580 <line:276:11, line:277:3>
|   |   |-TextComment 0x727520 <line:276:11, col:57> Text=" #LOS_ERRNO_EVENT_PTR_NULL        Null pointer."
|   |   `-TextComment 0x727540 <line:277:3> Text=" "
|   |-BlockCommandComment 0x7275a0 <col:4, line:278:3> Name="retval"
|   | `-ParagraphComment 0x727620 <line:277:11, line:278:3>
|   |   |-TextComment 0x7275d0 <line:277:11, col:78> Text=" #LOS_OK                          The event is successfully written."
|   |   `-TextComment 0x7275f0 <line:278:3> Text=" "
|   |-BlockCommandComment 0x727640 <col:4, line:280:3> Name="par"
|   | `-ParagraphComment 0x727810 <line:278:8, line:280:3>
|   |   |-TextComment 0x727670 <line:278:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x727690 <line:279:3> Text=" "
|   |   |-HTMLStartTagComment 0x7276b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x7276f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x727730 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x727750 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x727780 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x7277b0 <line:280:3> Text=" "
|   `-BlockCommandComment 0x727830 <col:4, col:37> Name="see"
|     `-ParagraphComment 0x727890 <col:8, col:37>
|       `-TextComment 0x727860 <col:8, col:37> Text=" LOS_EventPoll | LOS_EventRead"
|-FunctionDecl 0x6403c0 <line:307:1, col:67> col:15 LOS_EventClear 'UINT32 (PEVENT_CB_S, UINT32)' extern
| |-ParmVarDecl 0x6402b0 <col:30, col:42> col:42 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0x640328 <col:51, col:58> col:58 eventMask 'UINT32':'unsigned int'
| `-FullComment 0x728610 <line:285:3, line:305:54>
|   |-ParagraphComment 0x7279d0 <line:285:3>
|   | `-TextComment 0x7279a0 <col:3> Text=" "
|   |-VerbatimLineComment 0x7279f0 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0x727a60 <line:286:3>
|   | `-TextComment 0x727a30 <col:3> Text=" "
|   |-BlockCommandComment 0x727a80 <col:4, col:66> Name="brief"
|   | `-ParagraphComment 0x727ae0 <col:10, col:66>
|   |   `-TextComment 0x727ab0 <col:10, col:66> Text=" Clear the event of the eventCB by a specified eventMask."
|   |-ParagraphComment 0x727b30 <line:288:3>
|   | `-TextComment 0x727b00 <col:3> Text=" "
|   |-BlockCommandComment 0x727b50 <col:4, line:293:3> Name="par"
|   | `-ParagraphComment 0x727da0 <line:288:8, line:293:3>
|   |   |-TextComment 0x727b80 <line:288:8, col:20> Text=" Description:"
|   |   |-TextComment 0x727ba0 <line:289:3> Text=" "
|   |   |-HTMLStartTagComment 0x727bc0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x727c00 <line:290:3> Text=" "
|   |   |-HTMLStartTagComment 0x727c20 <col:4, col:7> Name="li"
|   |   |-TextComment 0x727c60 <col:8, col:117> Text="This API is used to set the ID of an event that has a specified mask and of which the information is stored in"
|   |   |-TextComment 0x727c80 <line:291:3, col:89> Text=" an event control block pointed to by eventCB to 0. eventCB must point to valid memory."
|   |   |-HTMLEndTagComment 0x727ca0 <col:90, col:94> Name="li"
|   |   |-TextComment 0x727cd0 <line:292:3> Text=" "
|   |   |-HTMLEndTagComment 0x727cf0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x727d20 <line:293:3> Text=" "
|   |-BlockCommandComment 0x727dc0 <col:4, line:296:8> Name="attention"
|   | `-ParagraphComment 0x727f90 <line:294:3, line:296:8>
|   |   |-TextComment 0x727df0 <line:294:3> Text=" "
|   |   |-HTMLStartTagComment 0x727e10 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x727e50 <line:295:3> Text=" "
|   |   |-HTMLStartTagComment 0x727e70 <col:4, col:7> Name="li"
|   |   |-TextComment 0x727eb0 <col:8, col:69> Text="The value of events needs to be reversed when it is passed-in."
|   |   |-HTMLEndTagComment 0x727ed0 <col:70, col:74> Name="li"
|   |   |-TextComment 0x727f00 <line:296:3> Text=" "
|   |   `-HTMLEndTagComment 0x727f20 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x727fe0 <line:298:3>
|   | `-TextComment 0x727fb0 <col:3> Text=" "
|   |-ParamCommandComment 0x728000 <col:4, line:299:3> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0x7280b0 <line:298:18, line:299:3>
|   |   |-TextComment 0x728060 <line:298:18, col:80> Text="     [IN/OUT] Pointer to the event control block to be cleared."
|   |   `-TextComment 0x728080 <line:299:3> Text=" "
|   |-ParamCommandComment 0x7280d0 <col:4, col:63> [in] implicitly Param="eventMask" ParamIndex=1
|   | `-ParagraphComment 0x728160 <col:20, col:63>
|   |   `-TextComment 0x728130 <col:20, col:63> Text="   [IN]     Mask of the event to be cleared."
|   |-ParagraphComment 0x7281b0 <line:301:3>
|   | `-TextComment 0x728180 <col:3> Text=" "
|   |-BlockCommandComment 0x7281d0 <col:4, line:302:3> Name="retval"
|   | `-ParagraphComment 0x728250 <line:301:11, line:302:3>
|   |   |-TextComment 0x728200 <line:301:11, col:51> Text=" #LOS_ERRNO_EVENT_PTR_NULL  Null pointer."
|   |   `-TextComment 0x728220 <line:302:3> Text=" "
|   |-BlockCommandComment 0x728270 <col:4, line:303:3> Name="retval"
|   | `-ParagraphComment 0x7282f0 <line:302:11, line:303:3>
|   |   |-TextComment 0x7282a0 <line:302:11, col:72> Text=" #LOS_OK                    The event is successfully cleared."
|   |   `-TextComment 0x7282c0 <line:303:3> Text=" "
|   |-BlockCommandComment 0x728310 <col:4, line:305:3> Name="par"
|   | `-ParagraphComment 0x7284e0 <line:303:8, line:305:3>
|   |   |-TextComment 0x728340 <line:303:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x728360 <line:304:3> Text=" "
|   |   |-HTMLStartTagComment 0x728380 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x7283c0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x728400 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x728420 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x728450 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x728480 <line:305:3> Text=" "
|   `-BlockCommandComment 0x728500 <col:4, col:54> Name="see"
|     `-ParagraphComment 0x728560 <col:8, col:54>
|       `-TextComment 0x728530 <col:8, col:54> Text=" LOS_EventPoll | LOS_EventRead | LOS_EventWrite"
|-FunctionDecl 0x640538 <line:330:1, col:51> col:15 LOS_EventDestroy 'UINT32 (PEVENT_CB_S)' extern
| |-ParmVarDecl 0x6404a8 <col:32, col:44> col:44 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| `-FullComment 0x7291d0 <line:310:3, line:328:54>
|   |-ParagraphComment 0x7286b0 <line:310:3>
|   | `-TextComment 0x728680 <col:3> Text=" "
|   |-VerbatimLineComment 0x7286d0 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0x728740 <line:311:3>
|   | `-TextComment 0x728710 <col:3> Text=" "
|   |-BlockCommandComment 0x728760 <col:4, col:27> Name="brief"
|   | `-ParagraphComment 0x7287c0 <col:10, col:27>
|   |   `-TextComment 0x728790 <col:10, col:27> Text=" Destroy an event."
|   |-ParagraphComment 0x728810 <line:313:3>
|   | `-TextComment 0x7287e0 <col:3> Text=" "
|   |-BlockCommandComment 0x728830 <col:4, line:317:3> Name="par"
|   | `-ParagraphComment 0x728a50 <line:313:8, line:317:3>
|   |   |-TextComment 0x728860 <line:313:8, col:20> Text=" Description:"
|   |   |-TextComment 0x728880 <line:314:3> Text=" "
|   |   |-HTMLStartTagComment 0x7288a0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x7288e0 <line:315:3> Text=" "
|   |   |-HTMLStartTagComment 0x728900 <col:4, col:7> Name="li"
|   |   |-TextComment 0x728940 <col:8, col:44> Text="This API is used to Destroy an event."
|   |   |-HTMLEndTagComment 0x728960 <col:45, col:49> Name="li"
|   |   |-TextComment 0x728990 <line:316:3> Text=" "
|   |   |-HTMLEndTagComment 0x7289b0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x7289e0 <line:317:3> Text=" "
|   |-BlockCommandComment 0x728a70 <col:4, line:320:8> Name="attention"
|   | `-ParagraphComment 0x728c40 <line:318:3, line:320:8>
|   |   |-TextComment 0x728aa0 <line:318:3> Text=" "
|   |   |-HTMLStartTagComment 0x728ac0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x728b00 <line:319:3> Text=" "
|   |   |-HTMLStartTagComment 0x728b20 <col:4, col:7> Name="li"
|   |   |-TextComment 0x728b60 <col:8, col:48> Text="The specific event should be a valid one."
|   |   |-HTMLEndTagComment 0x728b80 <col:49, col:53> Name="li"
|   |   |-TextComment 0x728bb0 <line:320:3> Text=" "
|   |   `-HTMLEndTagComment 0x728bd0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x728c90 <line:322:3>
|   | `-TextComment 0x728c60 <col:3> Text=" "
|   |-ParamCommandComment 0x728cb0 <col:4, col:82> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0x728d40 <col:18, col:82>
|   |   `-TextComment 0x728d10 <col:18, col:82> Text="     [IN/OUT] Pointer to the event control block to be Destroyed."
|   |-ParagraphComment 0x728d90 <line:324:3>
|   | `-TextComment 0x728d60 <col:3> Text=" "
|   |-BlockCommandComment 0x728db0 <col:4, line:325:3> Name="retval"
|   | `-ParagraphComment 0x728e30 <line:324:11, line:325:3>
|   |   |-TextComment 0x728de0 <line:324:11, col:50> Text=" #LOS_ERRNO_EVENT_PTR_NULL Null pointer."
|   |   `-TextComment 0x728e00 <line:325:3> Text=" "
|   |-BlockCommandComment 0x728e50 <col:4, line:326:3> Name="retval"
|   | `-ParagraphComment 0x728ed0 <line:325:11, line:326:3>
|   |   |-TextComment 0x728e80 <line:325:11, col:71> Text=" #LOS_OK                   The event is successfully cleared."
|   |   `-TextComment 0x728ea0 <line:326:3> Text=" "
|   |-BlockCommandComment 0x728ef0 <col:4, line:328:3> Name="par"
|   | `-ParagraphComment 0x7290c0 <line:326:8, line:328:3>
|   |   |-TextComment 0x728f20 <line:326:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x728f40 <line:327:3> Text=" "
|   |   |-HTMLStartTagComment 0x728f60 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x728fa0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x728fe0 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x729000 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x729030 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x729060 <line:328:3> Text=" "
|   `-BlockCommandComment 0x7290e0 <col:4, col:54> Name="see"
|     `-ParagraphComment 0x729140 <col:8, col:54>
|       `-TextComment 0x729110 <col:8, col:54> Text=" LOS_EventPoll | LOS_EventRead | LOS_EventWrite"
|-FunctionDecl 0x640800 <line:332:1, col:97> col:15 OsEventReadOnce 'UINT32 (PEVENT_CB_S, UINT32, UINT32, UINT32)' extern
| |-ParmVarDecl 0x6405f0 <col:31, col:43> col:43 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0x640668 <col:52, col:59> col:59 eventMask 'UINT32':'unsigned int'
| |-ParmVarDecl 0x6406e0 <col:70, col:77> col:77 mode 'UINT32':'unsigned int'
| `-ParmVarDecl 0x640758 <col:83, col:90> col:90 timeOut 'UINT32':'unsigned int'
|-FunctionDecl 0x6409e0 <line:333:1, col:66> col:15 OsEventWriteOnce 'UINT32 (PEVENT_CB_S, UINT32)' extern
| |-ParmVarDecl 0x6408d0 <col:32, col:44> col:44 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| `-ParmVarDecl 0x640948 <col:53, col:60> col:60 events 'UINT32':'unsigned int'
|-TypedefDecl 0x641160 <main/los_error.h:130:1, line:134:51> line:130:16 referenced LOS_ERRORHANDLE_FUNC 'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
| |-PointerType 0x6410e0 'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
| | `-ParenType 0x641080 'void (CHAR *, UINT32, UINT32, UINT32, void *)' sugar
| |   `-FunctionProtoType 0x641030 'void (CHAR *, UINT32, UINT32, UINT32, void *)' cdecl
| |     |-BuiltinType 0x553d30 'void'
| |     |-PointerType 0x640cd0 'CHAR *'
| |     | `-TypedefType 0x618690 'CHAR' sugar
| |     |   |-Typedef 0x5ffd28 'CHAR'
| |     |   `-BuiltinType 0x553d70 'char'
| |     |-TypedefType 0x600160 'UINT32' sugar
| |     | |-Typedef 0x5ffa90 'UINT32'
| |     | `-BuiltinType 0x553e70 'unsigned int'
| |     |-TypedefType 0x600160 'UINT32' sugar
| |     | |-Typedef 0x5ffa90 'UINT32'
| |     | `-BuiltinType 0x553e70 'unsigned int'
| |     |-TypedefType 0x600160 'UINT32' sugar
| |     | |-Typedef 0x5ffa90 'UINT32'
| |     | `-BuiltinType 0x553e70 'unsigned int'
| |     `-PointerType 0x5544f0 'void *'
| |       `-BuiltinType 0x553d30 'void'
| `-FullComment 0x72b730 <line:109:3, line:128:13>
|   |-ParagraphComment 0x729270 <line:109:3>
|   | `-TextComment 0x729240 <col:3> Text=" "
|   |-VerbatimLineComment 0x729290 <col:4, col:20> Text=" los_err"
|   |-ParagraphComment 0x729300 <line:110:3>
|   | `-TextComment 0x7292d0 <col:3> Text=" "
|   |-BlockCommandComment 0x729320 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0x729380 <col:10, col:60>
|   |   `-TextComment 0x729350 <col:10, col:60> Text=" Define the pointer to the error handling function."
|   |-ParagraphComment 0x7293d0 <line:112:3>
|   | `-TextComment 0x7293a0 <col:3> Text=" "
|   |-BlockCommandComment 0x7293f0 <col:4, line:114:3> Name="par"
|   | `-ParagraphComment 0x7294a0 <line:112:8, line:114:3>
|   |   |-TextComment 0x729420 <line:112:8, col:20> Text=" Description:"
|   |   |-TextComment 0x729440 <line:113:3, col:73> Text=" This API is used to define the pointer to the error handling function."
|   |   `-TextComment 0x729460 <line:114:3> Text=" "
|   |-BlockCommandComment 0x7294c0 <col:4, line:117:8> Name="attention"
|   | `-ParagraphComment 0x72aee0 <line:115:3, line:117:8>
|   |   |-TextComment 0x7294f0 <line:115:3> Text=" "
|   |   |-HTMLStartTagComment 0x729510 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x729550 <line:116:3> Text=" "
|   |   |-HTMLStartTagComment 0x72adc0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x72ae00 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x72ae20 <col:13, col:17> Name="li"
|   |   |-TextComment 0x72ae50 <line:117:3> Text=" "
|   |   `-HTMLEndTagComment 0x72ae70 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x72af30 <line:119:3>
|   | `-TextComment 0x72af00 <col:3> Text=" "
|   |-ParamCommandComment 0x72af50 <col:4, line:120:3> [in] implicitly Param="fileName" ParamIndex=0
|   | `-ParagraphComment 0x72b000 <line:119:20, line:120:3>
|   |   |-TextComment 0x72afb0 <line:119:20, col:65> Text="  [IN] Log file that stores error information."
|   |   `-TextComment 0x72afd0 <line:120:3> Text=" "
|   |-ParamCommandComment 0x72b020 <col:4, line:121:3> [in] implicitly Param="lineNo" ParamIndex=1
|   | `-ParagraphComment 0x72b0d0 <line:120:18, line:121:3>
|   |   |-TextComment 0x72b080 <line:120:18, col:60> Text="    [IN] Line number of the erroneous line."
|   |   `-TextComment 0x72b0a0 <line:121:3> Text=" "
|   |-ParamCommandComment 0x72b0f0 <col:4, line:122:3> [in] implicitly Param="errorNo" ParamIndex=2
|   | `-ParagraphComment 0x72b1a0 <line:121:19, line:122:3>
|   |   |-TextComment 0x72b150 <line:121:19, col:37> Text="   [IN] Error code."
|   |   `-TextComment 0x72b170 <line:122:3> Text=" "
|   |-ParamCommandComment 0x72b1c0 <col:4, line:123:3> [in] implicitly Param="paraLen" ParamIndex=3
|   | `-ParagraphComment 0x72b270 <line:122:19, line:123:3>
|   |   |-TextComment 0x72b220 <line:122:19, col:62> Text="   [IN] Length of the input parameter pPara."
|   |   `-TextComment 0x72b240 <line:123:3> Text=" "
|   |-ParamCommandComment 0x72b290 <col:4, col:50> [in] implicitly Param="para" ParamIndex=4
|   | `-ParagraphComment 0x72b320 <col:16, col:50>
|   |   `-TextComment 0x72b2f0 <col:16, col:50> Text="      [IN] User label of the error."
|   |-ParagraphComment 0x72b370 <line:125:3>
|   | `-TextComment 0x72b340 <col:3> Text=" "
|   |-BlockCommandComment 0x72b390 <col:4, line:126:3> Name="retval"
|   | `-ParagraphComment 0x72b410 <line:125:11, line:126:3>
|   |   |-TextComment 0x72b3c0 <line:125:11, col:16> Text=" None."
|   |   `-TextComment 0x72b3e0 <line:126:3> Text=" "
|   |-BlockCommandComment 0x72b430 <col:4, line:128:3> Name="par"
|   | `-ParagraphComment 0x72b600 <line:126:8, line:128:3>
|   |   |-TextComment 0x72b460 <line:126:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x72b480 <line:127:3> Text=" "
|   |   |-HTMLStartTagComment 0x72b4a0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x72b4e0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x72b520 <col:12, col:72> Text="los_err.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x72b540 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x72b570 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x72b5a0 <line:128:3> Text=" "
|   `-BlockCommandComment 0x72b620 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x72b680 <col:8, col:13>
|       `-TextComment 0x72b650 <col:8, col:13> Text=" None."
|-FunctionDecl 0x649bb8 <line:158:1, line:160:39> line:158:15 LOS_ErrHandle 'UINT32 (CHAR *, UINT32, UINT32, UINT32, void *)' extern
| |-ParmVarDecl 0x6411f8 <col:29, col:35> col:35 fileName 'CHAR *'
| |-ParmVarDecl 0x6498f0 <col:45, col:52> col:52 lineNo 'UINT32':'unsigned int'
| |-ParmVarDecl 0x649968 <line:159:29, col:36> col:36 errorNo 'UINT32':'unsigned int'
| |-ParmVarDecl 0x6499e0 <col:45, col:52> col:52 paraLen 'UINT32':'unsigned int'
| |-ParmVarDecl 0x649a60 <main/hals/driver/../../los_compiler.h:327:23, main/los_error.h:160:35> col:35 para 'void *'
| `-FullComment 0x72c460 <line:137:3, line:156:12>
|   |-ParagraphComment 0x72b7d0 <line:137:3>
|   | `-TextComment 0x72b7a0 <col:3> Text=" "
|   |-VerbatimLineComment 0x72b7f0 <col:4, col:20> Text=" los_err"
|   |-ParagraphComment 0x72b860 <line:138:3>
|   | `-TextComment 0x72b830 <col:3> Text=" "
|   |-BlockCommandComment 0x72b880 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0x72b8e0 <col:10, col:34>
|   |   `-TextComment 0x72b8b0 <col:10, col:34> Text=" Error handling function."
|   |-ParagraphComment 0x72b930 <line:140:3>
|   | `-TextComment 0x72b900 <col:3> Text=" "
|   |-BlockCommandComment 0x72b950 <col:4, line:142:3> Name="par"
|   | `-ParagraphComment 0x72ba00 <line:140:8, line:142:3>
|   |   |-TextComment 0x72b980 <line:140:8, col:20> Text=" Description:"
|   |   |-TextComment 0x72b9a0 <line:141:3, col:77> Text=" This API is used to perform different operations according to error types."
|   |   `-TextComment 0x72b9c0 <line:142:3> Text=" "
|   |-BlockCommandComment 0x72ba20 <col:4, line:145:8> Name="attention"
|   | `-ParagraphComment 0x72bbf0 <line:143:3, line:145:8>
|   |   |-TextComment 0x72ba50 <line:143:3> Text=" "
|   |   |-HTMLStartTagComment 0x72ba70 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x72bab0 <line:144:3> Text=" "
|   |   |-HTMLStartTagComment 0x72bad0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x72bb10 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0x72bb30 <col:12, col:16> Name="li"
|   |   |-TextComment 0x72bb60 <line:145:3> Text=" "
|   |   `-HTMLEndTagComment 0x72bb80 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x72bc40 <line:147:3>
|   | `-TextComment 0x72bc10 <col:3> Text=" "
|   |-ParamCommandComment 0x72bc60 <col:4, line:148:3> [in] implicitly Param="fileName" ParamIndex=0
|   | `-ParagraphComment 0x72bd10 <line:147:20, line:148:3>
|   |   |-TextComment 0x72bcc0 <line:147:20, col:65> Text="  [IN] Log file that stores error information."
|   |   `-TextComment 0x72bce0 <line:148:3> Text=" "
|   |-ParamCommandComment 0x72bd30 <col:4, line:149:3> [in] implicitly Param="lineNo" ParamIndex=1
|   | `-ParagraphComment 0x72be00 <line:148:18, line:149:3>
|   |   |-TextComment 0x72bd90 <line:148:18, col:98> Text="    [IN] Line number of the erroneous line which should not be OS_ERR_MAGIC_WORD."
|   |   `-TextComment 0x72bdd0 <line:149:3> Text=" "
|   |-ParamCommandComment 0x72be20 <col:4, line:150:3> [in] implicitly Param="errorNo" ParamIndex=2
|   | `-ParagraphComment 0x72bed0 <line:149:19, line:150:3>
|   |   |-TextComment 0x72be80 <line:149:19, col:37> Text="   [IN] Error code."
|   |   `-TextComment 0x72bea0 <line:150:3> Text=" "
|   |-ParamCommandComment 0x72bef0 <col:4, line:151:3> [in] implicitly Param="paraLen" ParamIndex=3
|   | `-ParagraphComment 0x72bfa0 <line:150:19, line:151:3>
|   |   |-TextComment 0x72bf50 <line:150:19, col:62> Text="   [IN] Length of the input parameter pPara."
|   |   `-TextComment 0x72bf70 <line:151:3> Text=" "
|   |-ParamCommandComment 0x72bfc0 <col:4, col:50> [in] implicitly Param="para" ParamIndex=4
|   | `-ParagraphComment 0x72c050 <col:16, col:50>
|   |   `-TextComment 0x72c020 <col:16, col:50> Text="      [IN] User label of the error."
|   |-ParagraphComment 0x72c0a0 <line:153:3>
|   | `-TextComment 0x72c070 <col:3> Text=" "
|   |-BlockCommandComment 0x72c0c0 <col:4, line:154:3> Name="retval"
|   | `-ParagraphComment 0x72c140 <line:153:11, line:154:3>
|   |   |-TextComment 0x72c0f0 <line:153:11, col:54> Text=" LOS_OK The error is successfully processed."
|   |   `-TextComment 0x72c110 <line:154:3> Text=" "
|   |-BlockCommandComment 0x72c160 <col:4, line:156:3> Name="par"
|   | `-ParagraphComment 0x72c330 <line:154:8, line:156:3>
|   |   |-TextComment 0x72c190 <line:154:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x72c1b0 <line:155:3> Text=" "
|   |   |-HTMLStartTagComment 0x72c1d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x72c210 <col:8, col:11> Name="li"
|   |   |-TextComment 0x72c250 <col:12, col:72> Text="los_err.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x72c270 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x72c2a0 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x72c2d0 <line:156:3> Text=" "
|   `-BlockCommandComment 0x72c350 <col:4, col:12> Name="see"
|     `-ParagraphComment 0x72c3b0 <col:8, col:12>
|       `-TextComment 0x72c380 <col:8, col:12> Text=" None"
|-RecordDecl 0x649ca8 <line:166:9, line:168:1> line:166:16 struct tagUserErrFunc definition
| |-FullComment 0x72c5d0 <line:163:3, line:164:37>
| | |-ParagraphComment 0x72c500 <line:163:3>
| | | `-TextComment 0x72c4d0 <col:3> Text=" "
| | |-VerbatimLineComment 0x72c520 <col:4, col:20> Text=" los_err"
| | `-ParagraphComment 0x72c590 <line:164:3, col:37>
| |   `-TextComment 0x72c560 <col:3, col:37> Text=" Error handling function structure."
| `-FieldDecl 0x649d80 <line:167:5, col:27> col:27 pfnHook 'LOS_ERRORHANDLE_FUNC':'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
|   `-FullComment 0x72c6a0 <col:41, col:75>
|     `-ParagraphComment 0x72c670 <col:41, col:75>
|       `-TextComment 0x72c640 <col:41, col:75> Text=" Hook function for error handling. "
|-TypedefDecl 0x649e58 <line:166:1, line:168:3> col:3 UserErrFunc 'struct tagUserErrFunc':'struct tagUserErrFunc'
| |-ElaboratedType 0x649e00 'struct tagUserErrFunc' sugar
| | `-RecordType 0x649d30 'struct tagUserErrFunc'
| |   `-Record 0x649ca8 'tagUserErrFunc'
| `-FullComment 0x72c810 <line:163:3, line:164:37>
|   |-ParagraphComment 0x72c740 <line:163:3>
|   | `-TextComment 0x72c710 <col:3> Text=" "
|   |-VerbatimLineComment 0x72c760 <col:4, col:20> Text=" los_err"
|   `-ParagraphComment 0x72c7d0 <line:164:3, col:37>
|     `-TextComment 0x72c7a0 <col:3, col:37> Text=" Error handling function structure."
|-EnumDecl 0x649ec8 <line:171:1, line:207:1> line:171:6 LOS_MODULE_ID
| |-EnumConstantDecl 0x649fc8 <line:172:5, col:32> col:5 LOS_MOD_SYS 'int'
| | `-ConstantExpr 0x649fb0 <col:32> 'int'
| |   `-IntegerLiteral 0x649f90 <col:32> 'int' 0
| |-EnumConstantDecl 0x64a050 <line:173:5, col:32> col:5 LOS_MOD_MEM 'int'
| | `-ConstantExpr 0x64a038 <col:32> 'int'
| |   `-IntegerLiteral 0x64a018 <col:32> 'int' 1
| |-EnumConstantDecl 0x64a0d8 <line:174:5, col:32> col:5 LOS_MOD_TSK 'int'
| | `-ConstantExpr 0x64a0c0 <col:32> 'int'
| |   `-IntegerLiteral 0x64a0a0 <col:32> 'int' 2
| |-EnumConstantDecl 0x64a160 <line:175:5, col:32> col:5 LOS_MOD_SWTMR 'int'
| | `-ConstantExpr 0x64a148 <col:32> 'int'
| |   `-IntegerLiteral 0x64a128 <col:32> 'int' 3
| |-EnumConstantDecl 0x64a1e8 <line:176:5, col:32> col:5 LOS_MOD_TICK 'int'
| | `-ConstantExpr 0x64a1d0 <col:32> 'int'
| |   `-IntegerLiteral 0x64a1b0 <col:32> 'int' 4
| |-EnumConstantDecl 0x64a270 <line:177:5, col:32> col:5 LOS_MOD_MSG 'int'
| | `-ConstantExpr 0x64a258 <col:32> 'int'
| |   `-IntegerLiteral 0x64a238 <col:32> 'int' 5
| |-EnumConstantDecl 0x64a2f8 <line:178:5, col:32> col:5 LOS_MOD_QUE 'int'
| | `-ConstantExpr 0x64a2e0 <col:32> 'int'
| |   `-IntegerLiteral 0x64a2c0 <col:32> 'int' 6
| |-EnumConstantDecl 0x64a380 <line:179:5, col:32> col:5 LOS_MOD_SEM 'int'
| | `-ConstantExpr 0x64a368 <col:32> 'int'
| |   `-IntegerLiteral 0x64a348 <col:32> 'int' 7
| |-EnumConstantDecl 0x64a408 <line:180:5, col:32> col:5 LOS_MOD_MBOX 'int'
| | `-ConstantExpr 0x64a3f0 <col:32> 'int'
| |   `-IntegerLiteral 0x64a3d0 <col:32> 'int' 8
| |-EnumConstantDecl 0x64a490 <line:181:5, col:32> col:5 LOS_MOD_HWI 'int'
| | `-ConstantExpr 0x64a478 <col:32> 'int'
| |   `-IntegerLiteral 0x64a458 <col:32> 'int' 9
| |-EnumConstantDecl 0x64a518 <line:182:5, col:32> col:5 LOS_MOD_HWWDG 'int'
| | `-ConstantExpr 0x64a500 <col:32> 'int'
| |   `-IntegerLiteral 0x64a4e0 <col:32> 'int' 10
| |-EnumConstantDecl 0x64a5a0 <line:183:5, col:32> col:5 LOS_MOD_CACHE 'int'
| | `-ConstantExpr 0x64a588 <col:32> 'int'
| |   `-IntegerLiteral 0x64a568 <col:32> 'int' 11
| |-EnumConstantDecl 0x64a628 <line:184:5, col:32> col:5 LOS_MOD_HWTMR 'int'
| | `-ConstantExpr 0x64a610 <col:32> 'int'
| |   `-IntegerLiteral 0x64a5f0 <col:32> 'int' 12
| |-EnumConstantDecl 0x64a6b0 <line:185:5, col:32> col:5 LOS_MOD_MMU 'int'
| | `-ConstantExpr 0x64a698 <col:32> 'int'
| |   `-IntegerLiteral 0x64a678 <col:32> 'int' 13
| |-EnumConstantDecl 0x64a738 <line:187:5, col:32> col:5 LOS_MOD_LOG 'int'
| | `-ConstantExpr 0x64a720 <col:32> 'int'
| |   `-IntegerLiteral 0x64a700 <col:32> 'int' 14
| |-EnumConstantDecl 0x64a7c0 <line:188:5, col:32> col:5 LOS_MOD_ERR 'int'
| | `-ConstantExpr 0x64a7a8 <col:32> 'int'
| |   `-IntegerLiteral 0x64a788 <col:32> 'int' 15
| |-EnumConstantDecl 0x64a848 <line:190:5, col:32> col:5 LOS_MOD_EXC 'int'
| | `-ConstantExpr 0x64a830 <col:32> 'int'
| |   `-IntegerLiteral 0x64a810 <col:32> 'int' 16
| |-EnumConstantDecl 0x64a980 <line:191:5, col:32> col:5 LOS_MOD_CSTK 'int'
| | `-ConstantExpr 0x64a8b8 <col:32> 'int'
| |   `-IntegerLiteral 0x64a898 <col:32> 'int' 17
| |-EnumConstantDecl 0x64aa08 <line:193:5, col:32> col:5 LOS_MOD_MPU 'int'
| | `-ConstantExpr 0x64a9f0 <col:32> 'int'
| |   `-IntegerLiteral 0x64a9d0 <col:32> 'int' 18
| |-EnumConstantDecl 0x64aa90 <line:194:5, col:32> col:5 LOS_MOD_NMHWI 'int'
| | `-ConstantExpr 0x64aa78 <col:32> 'int'
| |   `-IntegerLiteral 0x64aa58 <col:32> 'int' 19
| |-EnumConstantDecl 0x64ab18 <line:195:5, col:32> col:5 LOS_MOD_TRACE 'int'
| | `-ConstantExpr 0x64ab00 <col:32> 'int'
| |   `-IntegerLiteral 0x64aae0 <col:32> 'int' 20
| |-EnumConstantDecl 0x64aba0 <line:196:5, col:32> col:5 LOS_MOD_IPC 'int'
| | `-ConstantExpr 0x64ab88 <col:32> 'int'
| |   `-IntegerLiteral 0x64ab68 <col:32> 'int' 24
| |-EnumConstantDecl 0x64ac28 <line:197:5, col:32> col:5 LOS_MOD_TIMER 'int'
| | `-ConstantExpr 0x64ac10 <col:32> 'int'
| |   `-IntegerLiteral 0x64abf0 <col:32> 'int' 26
| |-EnumConstantDecl 0x64acb0 <line:198:5, col:32> col:5 LOS_MOD_EVENT 'int'
| | `-ConstantExpr 0x64ac98 <col:32> 'int'
| |   `-IntegerLiteral 0x64ac78 <col:32> 'int' 28
| |-EnumConstantDecl 0x64ad38 <line:199:5, col:32> col:5 LOS_MOD_MUX 'int'
| | `-ConstantExpr 0x64ad20 <col:32> 'int'
| |   `-IntegerLiteral 0x64ad00 <col:32> 'int' 29
| |-EnumConstantDecl 0x64adc0 <line:200:5, col:32> col:5 LOS_MOD_CPUP 'int'
| | `-ConstantExpr 0x64ada8 <col:32> 'int'
| |   `-IntegerLiteral 0x64ad88 <col:32> 'int' 30
| |-EnumConstantDecl 0x64ae48 <line:201:5, col:32> col:5 LOS_MOD_HOOK 'int'
| | `-ConstantExpr 0x64ae30 <col:32> 'int'
| |   `-IntegerLiteral 0x64ae10 <col:32> 'int' 31
| |-EnumConstantDecl 0x64aed0 <line:202:5, col:32> col:5 LOS_MOD_PM 'int'
| | `-ConstantExpr 0x64aeb8 <col:32> 'int'
| |   `-IntegerLiteral 0x64ae98 <col:32> 'int' 32
| |-EnumConstantDecl 0x64af58 <line:203:5, col:32> col:5 LOS_MOD_LMK 'int'
| | `-ConstantExpr 0x64af40 <col:32> 'int'
| |   `-IntegerLiteral 0x64af20 <col:32> 'int' 33
| |-EnumConstantDecl 0x64afe0 <line:204:5, col:32> col:5 LOS_MOD_SHELL 'int'
| | `-ConstantExpr 0x64afc8 <col:32> 'int'
| |   `-IntegerLiteral 0x64afa8 <col:32> 'int' 49
| |-EnumConstantDecl 0x64b068 <line:205:5, col:32> col:5 LOS_MOD_SIGNAL 'int'
| | `-ConstantExpr 0x64b050 <col:32> 'int'
| |   `-IntegerLiteral 0x64b030 <col:32> 'int' 50
| `-EnumConstantDecl 0x64b0b8 <line:206:5> col:5 LOS_MOD_BUTT 'int'
|-RecordDecl 0x64b1c8 <main/los_timer.h:56:9, line:66:1> line:56:9 struct definition
| |-FieldDecl 0x64b280 <line:57:5, col:19> col:19 freq 'UINT32':'unsigned int'
| |-FieldDecl 0x64b2e0 <line:58:5, col:19> col:19 irqNum 'INT32':'int'
| |-FieldDecl 0x64b340 <line:59:5, col:19> col:19 periodMax 'UINT64':'unsigned long long'
| |-FieldDecl 0x64b530 <line:60:5, col:52> col:21 init 'UINT32 (*)(HWI_PROC_FUNC)'
| |-FieldDecl 0x64b720 <line:61:5, col:45> col:21 getCycle 'UINT64 (*)(UINT32 *)'
| |-FieldDecl 0x64b910 <line:62:5, col:40> col:21 reload 'UINT64 (*)(UINT64)'
| |-FieldDecl 0x5ba6c8 <main/hals/driver/../../los_compiler.h:327:23, main/los_timer.h:63:31> col:21 lock 'void (*)(void)'
| |-FieldDecl 0x5ba7c0 <main/hals/driver/../../los_compiler.h:327:23, main/los_timer.h:64:33> col:21 unlock 'void (*)(void)'
| `-FieldDecl 0x5ba820 <line:65:5, col:19> col:19 tickHandler 'HWI_PROC_FUNC':'void (*)(void)'
|-TypedefDecl 0x5ba8c8 <line:56:1, line:66:3> col:3 referenced ArchTickTimer 'struct ArchTickTimer':'ArchTickTimer'
| `-ElaboratedType 0x5ba870 'struct ArchTickTimer' sugar
|   `-RecordType 0x64b250 'ArchTickTimer'
|     `-Record 0x64b1c8 ''
|-FunctionDecl 0x5ba9d0 <line:68:1, col:27> col:8 ArchEnterSleep 'UINT32 (void)'
|-FunctionDecl 0x5bac18 <line:84:1, col:40> col:16 ArchSysTickTimerGet 'ArchTickTimer *(void)'
| `-FullComment 0x72cf70 <line:71:3, line:82:13>
|   |-ParagraphComment 0x72c8b0 <line:71:3>
|   | `-TextComment 0x72c880 <col:3> Text=" "
|   |-VerbatimLineComment 0x72c8d0 <col:4, col:22> Text=" los_timer"
|   |-ParagraphComment 0x72c940 <line:72:3>
|   | `-TextComment 0x72c910 <col:3> Text=" "
|   |-BlockCommandComment 0x72c960 <col:4, col:39> Name="brief"
|   | `-ParagraphComment 0x72c9c0 <col:10, col:39>
|   |   `-TextComment 0x72c990 <col:10, col:39> Text=" Get tick timer control block."
|   |-ParagraphComment 0x72ca10 <line:74:3>
|   | `-TextComment 0x72c9e0 <col:3> Text=" "
|   |-BlockCommandComment 0x72ca30 <col:4, line:75:52> Name="par"
|   | `-ParagraphComment 0x72cab0 <line:74:8, line:75:52>
|   |   |-TextComment 0x72ca60 <line:74:8, col:20> Text=" Description:"
|   |   `-TextComment 0x72ca80 <line:75:3, col:52> Text=" This API is used to get tick timer control block."
|   |-ParagraphComment 0x72cb00 <line:77:3>
|   | `-TextComment 0x72cad0 <col:3> Text=" "
|   |-ParamCommandComment 0x72cb20 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0x72cb80 <<invalid sloc>>
|   |-ParagraphComment 0x72cbd0 <line:79:3>
|   | `-TextComment 0x72cba0 <col:3> Text=" "
|   |-BlockCommandComment 0x72cbf0 <col:4, line:80:3> Name="retval"
|   | `-ParagraphComment 0x72cc70 <line:79:11, line:80:3>
|   |   |-TextComment 0x72cc20 <line:79:11, col:36> Text=" #tick timer control block"
|   |   `-TextComment 0x72cc40 <line:80:3> Text=" "
|   |-BlockCommandComment 0x72cc90 <col:4, line:82:3> Name="par"
|   | `-ParagraphComment 0x72ce70 <line:80:8, line:82:3>
|   |   |-TextComment 0x72ccc0 <line:80:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x72cce0 <line:81:3> Text=" "
|   |   |-HTMLStartTagComment 0x72cd00 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x72cd40 <col:8, col:11> Name="li"
|   |   |-TextComment 0x72cd80 <col:12, col:74> Text="los_timer.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x72cda0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x72cde0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x72ce10 <line:82:3> Text=" "
|   `-BlockCommandComment 0x72ce90 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x72cef0 <col:8, col:13>
|       `-TextComment 0x72cec0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x5bae68 <main/los_tick.h:100:1, col:35> col:15 LOS_SysCycleGet 'UINT64 (void)' extern
| `-FullComment 0x72d9a0 <line:82:3, line:99:3>
|   |-ParagraphComment 0x72d010 <line:82:3, col:4>
|   | `-TextComment 0x72cfe0 <col:3, col:4> Text="  "
|   |-VerbatimLineComment 0x72d030 <col:5, col:23> Text="  los_tick"
|   |-ParagraphComment 0x72d0a0 <line:83:3, col:4>
|   | `-TextComment 0x72d070 <col:3, col:4> Text="  "
|   |-BlockCommandComment 0x72d0c0 <col:5, col:45> Name="brief"
|   | `-ParagraphComment 0x72d120 <col:11, col:45>
|   |   `-TextComment 0x72d0f0 <col:11, col:45> Text=": System timer cycles get function."
|   |-ParagraphComment 0x72d170 <line:85:3, col:4>
|   | `-TextComment 0x72d140 <col:3, col:4> Text="  "
|   |-BlockCommandComment 0x72d190 <col:5, line:86:48> Name="par"
|   | `-ParagraphComment 0x72d210 <line:85:9, line:86:48>
|   |   |-TextComment 0x72d1c0 <line:85:9, col:21> Text=" Description:"
|   |   `-TextComment 0x72d1e0 <line:86:3, col:48> Text="  This API is used to get system timer cycles."
|   |-ParagraphComment 0x72d260 <line:88:3>
|   | `-TextComment 0x72d230 <col:3> Text=" "
|   |-BlockCommandComment 0x72d280 <col:4, line:89:26> Name="attention"
|   | `-ParagraphComment 0x72d420 <line:88:14, line:89:26>
|   |   |-TextComment 0x72d2b0 <line:88:14> Text=":"
|   |   |-TextComment 0x72d2d0 <line:89:3> Text=" "
|   |   |-HTMLStartTagComment 0x72d2f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x72d330 <col:8, col:11> Name="li"
|   |   |-TextComment 0x72d370 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0x72d390 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0x72d3c0 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0x72d470 <line:91:3>
|   | `-TextComment 0x72d440 <col:3> Text=" "
|   |-ParamCommandComment 0x72d490 <col:4, col:16> [in] implicitly Param=":"
|   | `-ParagraphComment 0x72d520 <col:11, col:16>
|   |   `-TextComment 0x72d4f0 <col:11, col:16> Text=" None."
|   |-ParagraphComment 0x72d570 <line:93:3>
|   | `-TextComment 0x72d540 <col:3> Text=" "
|   |-BlockCommandComment 0x72d590 <col:4, col:34> Name="retval"
|   | `-ParagraphComment 0x72d5f0 <col:11, col:34>
|   |   `-TextComment 0x72d5c0 <col:11, col:34> Text=": current system cycles."
|   |-ParagraphComment 0x72d640 <line:95:3>
|   | `-TextComment 0x72d610 <col:3> Text=" "
|   |-BlockCommandComment 0x72d660 <col:4, line:97:3> Name="par"
|   | `-ParagraphComment 0x72d830 <line:95:8, line:97:3>
|   |   |-TextComment 0x72d690 <line:95:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x72d6b0 <line:96:3> Text=" "
|   |   |-HTMLStartTagComment 0x72d6d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x72d710 <col:8, col:11> Name="li"
|   |   |-TextComment 0x72d750 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x72d770 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x72d7a0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x72d7d0 <line:97:3> Text=" "
|   |-BlockCommandComment 0x72d850 <col:4, col:13> Name="see"
|   | `-ParagraphComment 0x72d8b0 <col:8, col:13>
|   |   `-TextComment 0x72d880 <col:8, col:13> Text=" None."
|   `-ParagraphComment 0x72d900 <line:99:3>
|     `-TextComment 0x72d8d0 <col:3> Text=" "
|-VarDecl 0x5baf78 <line:112:1, col:18> col:18 g_ticksPerSec 'UINT32':'unsigned int' extern
| `-FullComment 0x72db10 <line:109:3, line:110:19>
|   |-ParagraphComment 0x72da40 <line:109:3>
|   | `-TextComment 0x72da10 <col:3> Text=" "
|   |-VerbatimLineComment 0x72da60 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x72dad0 <line:110:3, col:19>
|     `-TextComment 0x72daa0 <col:3, col:19> Text=" Ticks per second"
|-VarDecl 0x5bb018 <line:118:1, col:18> col:18 g_uwCyclePerSec 'UINT32':'unsigned int' extern
| `-FullComment 0x72dc80 <line:115:3, line:116:20>
|   |-ParagraphComment 0x72dbb0 <line:115:3>
|   | `-TextComment 0x72db80 <col:3> Text=" "
|   |-VerbatimLineComment 0x72dbd0 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x72dc40 <line:116:3, col:20>
|     `-TextComment 0x72dc10 <col:3, col:20> Text=" Cycles per Second"
|-VarDecl 0x5bb0b8 <line:124:1, col:18> col:18 g_cyclesPerTick 'UINT32':'unsigned int' extern
| `-FullComment 0x72de10 <line:121:3, line:122:18>
|   |-ParagraphComment 0x72dd20 <line:121:3>
|   | `-TextComment 0x72dcf0 <col:3> Text=" "
|   |-VerbatimLineComment 0x72dd40 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x72ddb0 <line:122:3, col:18>
|     `-TextComment 0x72dd80 <col:3, col:18> Text=" Cycles per Tick"
|-VarDecl 0x5bb158 <line:130:1, col:18> col:18 used g_sysClock 'UINT32':'unsigned int' extern
| `-FullComment 0x72df80 <line:127:3, line:128:15>
|   |-ParagraphComment 0x72deb0 <line:127:3>
|   | `-TextComment 0x72de80 <col:3> Text=" "
|   |-VerbatimLineComment 0x72ded0 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x72df40 <line:128:3, col:15>
|     `-TextComment 0x72df10 <col:3, col:15> Text=" System Clock"
|-RecordDecl 0x5bb398 <line:244:9, line:252:1> line:244:16 struct TagSysTime definition
| |-FullComment 0x72e0f0 <line:241:3, line:242:25>
| | |-ParagraphComment 0x72e020 <line:241:3>
| | | `-TextComment 0x72dff0 <col:3> Text=" "
| | |-VerbatimLineComment 0x72e040 <col:4, col:21> Text=" los_tick"
| | `-ParagraphComment 0x72e0b0 <line:242:3, col:25>
| |   `-TextComment 0x72e080 <col:3, col:25> Text=" system time structure."
| |-FieldDecl 0x5bb450 <line:245:5, col:13> col:13 uwYear 'UINT16':'unsigned short'
| | `-FullComment 0x72e1c0 <col:28, col:61>
| |   `-ParagraphComment 0x72e190 <col:28, col:61>
| |     `-TextComment 0x72e160 <col:28, col:61> Text=" value 1970 ~ 2038 or 1970 ~ 2100 "
| |-FieldDecl 0x5bb4d8 <line:246:5, col:13> col:13 ucMonth 'UINT8':'unsigned char'
| | `-FullComment 0x72e290 <col:28, col:41>
| |   `-ParagraphComment 0x72e260 <col:28, col:41>
| |     `-TextComment 0x72e230 <col:28, col:41> Text=" value 1 - 12 "
| |-FieldDecl 0x5bb568 <line:247:5, col:13> col:13 ucDay 'UINT8':'unsigned char'
| | `-FullComment 0x72e360 <col:28, col:41>
| |   `-ParagraphComment 0x72e330 <col:28, col:41>
| |     `-TextComment 0x72e300 <col:28, col:41> Text=" value 1 - 31 "
| |-FieldDecl 0x6575f0 <line:248:5, col:13> col:13 ucHour 'UINT8':'unsigned char'
| | `-FullComment 0x72e430 <col:28, col:41>
| |   `-ParagraphComment 0x72e400 <col:28, col:41>
| |     `-TextComment 0x72e3d0 <col:28, col:41> Text=" value 0 - 23 "
| |-FieldDecl 0x657678 <line:249:5, col:13> col:13 ucMinute 'UINT8':'unsigned char'
| | `-FullComment 0x72e500 <col:28, col:41>
| |   `-ParagraphComment 0x72e4d0 <col:28, col:41>
| |     `-TextComment 0x72e4a0 <col:28, col:41> Text=" value 0 - 59 "
| |-FieldDecl 0x657708 <line:250:5, col:13> col:13 ucSecond 'UINT8':'unsigned char'
| | `-FullComment 0x72e5d0 <col:28, col:41>
| |   `-ParagraphComment 0x72e5a0 <col:28, col:41>
| |     `-TextComment 0x72e570 <col:28, col:41> Text=" value 0 - 59 "
| `-FieldDecl 0x657798 <line:251:5, col:13> col:13 ucWeek 'UINT8':'unsigned char'
|   `-FullComment 0x72e6a0 <col:28, col:41>
|     `-ParagraphComment 0x72e670 <col:28, col:41>
|       `-TextComment 0x72e640 <col:28, col:41> Text=" value 0 - 6  "
|-TypedefDecl 0x657878 <line:244:1, line:252:3> col:3 SYS_TIME_S 'struct TagSysTime':'struct TagSysTime'
| |-ElaboratedType 0x657820 'struct TagSysTime' sugar
| | `-RecordType 0x5bb420 'struct TagSysTime'
| |   `-Record 0x5bb398 'TagSysTime'
| `-FullComment 0x72e810 <line:241:3, line:242:25>
|   |-ParagraphComment 0x72e740 <line:241:3>
|   | `-TextComment 0x72e710 <col:3> Text=" "
|   |-VerbatimLineComment 0x72e760 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x72e7d0 <line:242:3, col:25>
|     `-TextComment 0x72e7a0 <col:3, col:25> Text=" system time structure."
|-FunctionDecl 0x657988 <line:254:1, col:39> col:8 OsTickTimerReload 'UINT64 (UINT64)'
| `-ParmVarDecl 0x6578f8 <col:26, col:33> col:33 period 'UINT64':'unsigned long long'
|-FunctionDecl 0x657ac8 <line:260:1, col:28> col:8 OsTickTimerInit 'UINT32 (void)'
|-FunctionDecl 0x657c68 <main/hals/driver/../../los_compiler.h:327:23, main/los_tick.h:262:48> col:6 OsTickSysTimerStartTimeSet 'void (UINT64)'
| `-ParmVarDecl 0x657b78 <col:33, col:40> col:40 currTime 'UINT64':'unsigned long long'
|-FunctionDecl 0x657dd0 <line:282:1, col:36> col:15 LOS_TickCountGet 'UINT64 (void)' extern
| `-FullComment 0x72f1a0 <line:265:3, line:280:12>
|   |-ParagraphComment 0x72e8b0 <line:265:3>
|   | `-TextComment 0x72e880 <col:3> Text=" "
|   |-VerbatimLineComment 0x72e8d0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x72e940 <line:266:3>
|   | `-TextComment 0x72e910 <col:3> Text=" "
|   |-BlockCommandComment 0x72e960 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0x72e9c0 <col:10, col:37>
|   |   `-TextComment 0x72e990 <col:10, col:37> Text=" Obtain the number of Ticks."
|   |-ParagraphComment 0x72ea10 <line:268:3>
|   | `-TextComment 0x72e9e0 <col:3> Text=" "
|   |-BlockCommandComment 0x72ea30 <col:4, line:270:3> Name="par"
|   | `-ParagraphComment 0x72eae0 <line:268:8, line:270:3>
|   |   |-TextComment 0x72ea60 <line:268:8, col:20> Text=" Description:"
|   |   |-TextComment 0x72ea80 <line:269:3, col:50> Text=" This API is used to obtain the number of Ticks."
|   |   `-TextComment 0x72eaa0 <line:270:3> Text=" "
|   |-BlockCommandComment 0x72eb00 <col:4, line:273:8> Name="attention"
|   | `-ParagraphComment 0x72ecd0 <line:271:3, line:273:8>
|   |   |-TextComment 0x72eb30 <line:271:3> Text=" "
|   |   |-HTMLStartTagComment 0x72eb50 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x72eb90 <line:272:3> Text=" "
|   |   |-HTMLStartTagComment 0x72ebb0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x72ebf0 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0x72ec10 <col:12, col:16> Name="li"
|   |   |-TextComment 0x72ec40 <line:273:3> Text=" "
|   |   `-HTMLEndTagComment 0x72ec60 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x72ed20 <line:275:3>
|   | `-TextComment 0x72ecf0 <col:3> Text=" "
|   |-ParamCommandComment 0x72ed40 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0x72eda0 <<invalid sloc>>
|   |-ParagraphComment 0x72ee00 <line:277:3>
|   | `-TextComment 0x72edc0 <col:3> Text=" "
|   |-BlockCommandComment 0x72ee20 <col:4, line:278:3> Name="retval"
|   | `-ParagraphComment 0x72eea0 <line:277:11, line:278:3>
|   |   |-TextComment 0x72ee50 <line:277:11, col:38> Text=" UINT64 The number of Ticks."
|   |   `-TextComment 0x72ee70 <line:278:3> Text=" "
|   |-BlockCommandComment 0x72eec0 <col:4, line:280:3> Name="par"
|   | `-ParagraphComment 0x72f090 <line:278:8, line:280:3>
|   |   |-TextComment 0x72eef0 <line:278:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x72ef10 <line:279:3> Text=" "
|   |   |-HTMLStartTagComment 0x72ef30 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x72ef70 <col:8, col:11> Name="li"
|   |   |-TextComment 0x72efb0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x72efd0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x72f000 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x72f030 <line:280:3> Text=" "
|   `-BlockCommandComment 0x72f0b0 <col:4, col:12> Name="see"
|     `-ParagraphComment 0x72f110 <col:8, col:12>
|       `-TextComment 0x72f0e0 <col:8, col:12> Text=" None"
|-FunctionDecl 0x657f30 <line:302:1, col:39> col:15 LOS_CyclePerTickGet 'UINT32 (void)' extern
| `-FullComment 0x72fb20 <line:285:3, line:300:12>
|   |-ParagraphComment 0x72f240 <line:285:3>
|   | `-TextComment 0x72f210 <col:3> Text=" "
|   |-VerbatimLineComment 0x72f260 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x72f2d0 <line:286:3>
|   | `-TextComment 0x72f2a0 <col:3> Text=" "
|   |-BlockCommandComment 0x72f2f0 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0x72f350 <col:10, col:52>
|   |   `-TextComment 0x72f320 <col:10, col:52> Text=" Obtain the number of cycles in one second."
|   |-ParagraphComment 0x72f3a0 <line:288:3>
|   | `-TextComment 0x72f370 <col:3> Text=" "
|   |-BlockCommandComment 0x72f3c0 <col:4, line:290:3> Name="par"
|   | `-ParagraphComment 0x72f470 <line:288:8, line:290:3>
|   |   |-TextComment 0x72f3f0 <line:288:8, col:20> Text=" Description:"
|   |   |-TextComment 0x72f410 <line:289:3, col:65> Text=" This API is used to obtain the number of cycles in one second."
|   |   `-TextComment 0x72f430 <line:290:3> Text=" "
|   |-BlockCommandComment 0x72f490 <col:4, line:293:8> Name="attention"
|   | `-ParagraphComment 0x72f660 <line:291:3, line:293:8>
|   |   |-TextComment 0x72f4c0 <line:291:3> Text=" "
|   |   |-HTMLStartTagComment 0x72f4e0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x72f520 <line:292:3> Text=" "
|   |   |-HTMLStartTagComment 0x72f540 <col:4, col:7> Name="li"
|   |   |-TextComment 0x72f580 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0x72f5a0 <col:12, col:16> Name="li"
|   |   |-TextComment 0x72f5d0 <line:293:3> Text=" "
|   |   `-HTMLEndTagComment 0x72f5f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x72f6b0 <line:295:3>
|   | `-TextComment 0x72f680 <col:3> Text=" "
|   |-ParamCommandComment 0x72f6d0 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0x72f730 <<invalid sloc>>
|   |-ParagraphComment 0x72f780 <line:297:3>
|   | `-TextComment 0x72f750 <col:3> Text=" "
|   |-BlockCommandComment 0x72f7a0 <col:4, line:298:3> Name="retval"
|   | `-ParagraphComment 0x72f820 <line:297:11, line:298:3>
|   |   |-TextComment 0x72f7d0 <line:297:11, col:58> Text=" UINT32 Number of cycles obtained in one second."
|   |   `-TextComment 0x72f7f0 <line:298:3> Text=" "
|   |-BlockCommandComment 0x72f840 <col:4, line:300:3> Name="par"
|   | `-ParagraphComment 0x72fa10 <line:298:8, line:300:3>
|   |   |-TextComment 0x72f870 <line:298:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x72f890 <line:299:3> Text=" "
|   |   |-HTMLStartTagComment 0x72f8b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x72f8f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x72f930 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x72f950 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x72f980 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x72f9b0 <line:300:3> Text=" "
|   `-BlockCommandComment 0x72fa30 <col:4, col:12> Name="see"
|     `-ParagraphComment 0x72fa90 <col:8, col:12>
|       `-TextComment 0x72fa60 <col:8, col:12> Text=" None"
|-FunctionDecl 0x6580c8 <line:323:1, col:39> col:15 LOS_Tick2MS 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x658008 <col:27, col:34> col:34 ticks 'UINT32':'unsigned int'
| `-FullComment 0x730520 <line:305:3, line:321:19>
|   |-ParagraphComment 0x72fbc0 <line:305:3>
|   | `-TextComment 0x72fb90 <col:3> Text=" "
|   |-VerbatimLineComment 0x72fbe0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x72fc50 <line:306:3>
|   | `-TextComment 0x72fc20 <col:3> Text=" "
|   |-BlockCommandComment 0x72fc70 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0x72fcd0 <col:10, col:40>
|   |   `-TextComment 0x72fca0 <col:10, col:40> Text=" Convert Ticks to milliseconds."
|   |-ParagraphComment 0x72fd20 <line:308:3>
|   | `-TextComment 0x72fcf0 <col:3> Text=" "
|   |-BlockCommandComment 0x72fd40 <col:4, line:310:3> Name="par"
|   | `-ParagraphComment 0x72fe10 <line:308:8, line:310:3>
|   |   |-TextComment 0x72fd70 <line:308:8, col:20> Text=" Description:"
|   |   |-TextComment 0x72fd90 <line:309:3, col:53> Text=" This API is used to convert Ticks to milliseconds."
|   |   `-TextComment 0x72fdb0 <line:310:3> Text=" "
|   |-BlockCommandComment 0x72fe30 <col:4, line:313:8> Name="attention"
|   | `-ParagraphComment 0x730000 <line:311:3, line:313:8>
|   |   |-TextComment 0x72fe60 <line:311:3> Text=" "
|   |   |-HTMLStartTagComment 0x72fe80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x72fec0 <line:312:3> Text=" "
|   |   |-HTMLStartTagComment 0x72fee0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x72ff20 <col:8, col:76> Text="The number of milliseconds obtained through the conversion is 32-bit."
|   |   |-HTMLEndTagComment 0x72ff40 <col:77, col:81> Name="li"
|   |   |-TextComment 0x72ff70 <line:313:3> Text=" "
|   |   `-HTMLEndTagComment 0x72ff90 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x730050 <line:315:3>
|   | `-TextComment 0x730020 <col:3> Text=" "
|   |-ParamCommandComment 0x730070 <col:4, col:76> [in] implicitly Param="ticks" ParamIndex=0
|   | `-ParagraphComment 0x730100 <col:17, col:76>
|   |   `-TextComment 0x7300d0 <col:17, col:76> Text="  [IN] Number of Ticks. The value range is (0,OS_SYS_CLOCK)."
|   |-ParagraphComment 0x730150 <line:317:3>
|   | `-TextComment 0x730120 <col:3> Text=" "
|   |-BlockCommandComment 0x730170 <col:4, line:319:3> Name="retval"
|   | `-ParagraphComment 0x730220 <line:317:11, line:319:3>
|   |   |-TextComment 0x7301a0 <line:317:11, col:109> Text=" UINT32 Number of milliseconds obtained through the conversion. Ticks are successfully converted to"
|   |   |-TextComment 0x7301c0 <line:318:3, col:16> Text=" milliseconds."
|   |   `-TextComment 0x7301e0 <line:319:3> Text=" "
|   |-BlockCommandComment 0x730240 <col:4, line:321:3> Name="par"
|   | `-ParagraphComment 0x730410 <line:319:8, line:321:3>
|   |   |-TextComment 0x730270 <line:319:8, col:20> Text="  Dependency:"
|   |   |-TextComment 0x730290 <line:320:3> Text=" "
|   |   |-HTMLStartTagComment 0x7302b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x7302f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x730330 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x730350 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x730380 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x7303b0 <line:321:3> Text=" "
|   `-BlockCommandComment 0x730430 <col:4, col:19> Name="see"
|     `-ParagraphComment 0x730490 <col:8, col:19>
|       `-TextComment 0x730460 <col:8, col:19> Text=" LOS_MS2Tick"
|-FunctionDecl 0x658238 <line:344:1, col:42> col:15 LOS_MS2Tick 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x6581a8 <col:27, col:34> col:34 millisec 'UINT32':'unsigned int'
| `-FullComment 0x730f10 <line:326:3, line:342:19>
|   |-ParagraphComment 0x7305c0 <line:326:3>
|   | `-TextComment 0x730590 <col:3> Text=" "
|   |-VerbatimLineComment 0x7305e0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x730650 <line:327:3>
|   | `-TextComment 0x730620 <col:3> Text=" "
|   |-BlockCommandComment 0x730670 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0x7306d0 <col:10, col:40>
|   |   `-TextComment 0x7306a0 <col:10, col:40> Text=" Convert milliseconds to Ticks."
|   |-ParagraphComment 0x730720 <line:329:3>
|   | `-TextComment 0x7306f0 <col:3> Text=" "
|   |-BlockCommandComment 0x730740 <col:4, line:331:3> Name="par"
|   | `-ParagraphComment 0x7307f0 <line:329:8, line:331:3>
|   |   |-TextComment 0x730770 <line:329:8, col:20> Text=" Description:"
|   |   |-TextComment 0x730790 <line:330:3, col:53> Text=" This API is used to convert milliseconds to Ticks."
|   |   `-TextComment 0x7307b0 <line:331:3> Text=" "
|   |-BlockCommandComment 0x730810 <col:4, line:335:8> Name="attention"
|   | `-ParagraphComment 0x730a00 <line:332:3, line:335:8>
|   |   |-TextComment 0x730840 <line:332:3> Text=" "
|   |   |-HTMLStartTagComment 0x730860 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x7308a0 <line:333:3> Text=" "
|   |   |-HTMLStartTagComment 0x7308c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x730900 <col:8, col:116> Text="If the parameter passed in is equal to 0xFFFFFFFF, the retval is 0xFFFFFFFF. Pay attention to the value to be"
|   |   |-TextComment 0x730920 <line:334:3, col:45> Text=" converted because data possibly overflows."
|   |   |-HTMLEndTagComment 0x730940 <col:46, col:50> Name="li"
|   |   |-TextComment 0x730970 <line:335:3> Text=" "
|   |   `-HTMLEndTagComment 0x730990 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x730a50 <line:337:3>
|   | `-TextComment 0x730a20 <col:3> Text=" "
|   |-ParamCommandComment 0x730a70 <col:4, col:49> [in] implicitly Param="millisec" ParamIndex=0
|   | `-ParagraphComment 0x730b00 <col:20, col:49>
|   |   `-TextComment 0x730ad0 <col:20, col:49> Text="  [IN] Number of milliseconds."
|   |-ParagraphComment 0x730b50 <line:339:3>
|   | `-TextComment 0x730b20 <col:3> Text=" "
|   |-BlockCommandComment 0x730b70 <col:4, line:340:3> Name="retval"
|   | `-ParagraphComment 0x730bf0 <line:339:11, line:340:3>
|   |   |-TextComment 0x730ba0 <line:339:11, col:66> Text=" UINT32 Number of Ticks obtained through the conversion."
|   |   `-TextComment 0x730bc0 <line:340:3> Text=" "
|   |-BlockCommandComment 0x730c10 <col:4, line:342:3> Name="par"
|   | `-ParagraphComment 0x730de0 <line:340:8, line:342:3>
|   |   |-TextComment 0x730c40 <line:340:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x730c60 <line:341:3> Text=" "
|   |   |-HTMLStartTagComment 0x730c80 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x730cc0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x730d00 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x730d20 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x730d50 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x730d80 <line:342:3> Text=" "
|   `-BlockCommandComment 0x730e20 <col:4, col:19> Name="see"
|     `-ParagraphComment 0x730e80 <col:8, col:19>
|       `-TextComment 0x730e50 <col:8, col:19> Text=" LOS_Tick2MS"
|-FunctionDecl 0x658508 <line:362:1, col:96> col:15 LOS_TickTimerRegister 'UINT32 (const ArchTickTimer *, const HWI_PROC_FUNC)' extern
| |-ParmVarDecl 0x658378 <col:37, col:58> col:58 timer 'const ArchTickTimer *'
| |-ParmVarDecl 0x6583f0 <col:65, col:85> col:85 tickHandler 'const HWI_PROC_FUNC':'void (*const)(void)'
| `-FullComment 0x7317c0 <line:347:3, line:360:7>
|   |-ParagraphComment 0x730fb0 <line:347:3>
|   | `-TextComment 0x730f80 <col:3> Text=" "
|   |-VerbatimLineComment 0x730fd0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x731040 <line:348:3>
|   | `-TextComment 0x731010 <col:3> Text=" "
|   |-BlockCommandComment 0x731060 <col:4, col:47> Name="brief"
|   | `-ParagraphComment 0x7310c0 <col:10, col:47>
|   |   `-TextComment 0x731090 <col:10, col:47> Text=" Re-initializes the system tick timer."
|   |-ParagraphComment 0x731110 <line:350:3>
|   | `-TextComment 0x7310e0 <col:3> Text=" "
|   |-BlockCommandComment 0x731130 <col:4, line:352:3> Name="par"
|   | `-ParagraphComment 0x7311e0 <line:350:8, line:352:3>
|   |   |-TextComment 0x731160 <line:350:8, col:20> Text=" Description:"
|   |   |-TextComment 0x731180 <line:351:3, col:59> Text=" This API is used to re-initialize the system Tick timer."
|   |   `-TextComment 0x7311a0 <line:352:3> Text=" "
|   |-BlockCommandComment 0x731200 <col:4, col:13> Name="attention"
|   | `-ParagraphComment 0x731230 <<invalid sloc>>
|   |-ParagraphComment 0x731280 <line:354:3>
|   | `-TextComment 0x731250 <col:3> Text=" "
|   |-ParamCommandComment 0x7312a0 <col:4, line:355:3> [in] implicitly Param="timer" ParamIndex=0
|   | `-ParagraphComment 0x731350 <line:354:16, line:355:3>
|   |   |-TextComment 0x731300 <line:354:16, col:51> Text="        [IN] Specify the tick timer."
|   |   `-TextComment 0x731320 <line:355:3> Text=" "
|   |-ParamCommandComment 0x731370 <col:4, col:79> [in] implicitly Param="tickHandler" ParamIndex=1
|   | `-ParagraphComment 0x731400 <col:22, col:79>
|   |   `-TextComment 0x7313d0 <col:22, col:79> Text="  [IN] Tick Interrupts the execution of the hook function."
|   |-ParagraphComment 0x731450 <line:357:3>
|   | `-TextComment 0x731420 <col:3> Text=" "
|   |-BlockCommandComment 0x731470 <col:4, line:358:3> Name="retval"
|   | `-ParagraphComment 0x7314f0 <line:357:11, line:358:3>
|   |   |-TextComment 0x7314a0 <line:357:11, col:32> Text=" LOS_OK or Error code."
|   |   `-TextComment 0x7314c0 <line:358:3> Text=" "
|   |-BlockCommandComment 0x731510 <col:4, line:360:3> Name="par"
|   | `-ParagraphComment 0x7316e0 <line:358:8, line:360:3>
|   |   |-TextComment 0x731540 <line:358:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x731560 <line:359:3> Text=" "
|   |   |-HTMLStartTagComment 0x731580 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x7315c0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x731600 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x731620 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x731650 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x731680 <line:360:3> Text=" "
|   `-BlockCommandComment 0x731700 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x731730 <<invalid sloc>>
|-FunctionDecl 0x6588d0 <line:381:1, col:43> col:13 LOS_UDelay 'void (UINT64)' extern
| `-ParmVarDecl 0x658840 <col:24, col:31> col:31 microseconds 'UINT64':'unsigned long long'
|-FunctionDecl 0x658a18 <line:400:1, col:39> col:13 LOS_MDelay 'void (UINT32)' extern
| `-ParmVarDecl 0x658988 <col:24, col:31> col:31 millisec 'UINT32':'unsigned int'
|-FunctionDecl 0x658b58 <line:419:1, col:35> col:15 LOS_CurrNanosec 'UINT64 (void)' extern
|-FunctionDecl 0x658cc0 <line:440:1, col:31> col:13 OsTickHandler 'void (void)' extern
| `-FullComment 0x732160 <line:422:3, line:438:13>
|   |-ParagraphComment 0x731860 <line:422:3>
|   | `-TextComment 0x731830 <col:3> Text=" "
|   |-VerbatimLineComment 0x731880 <col:4, col:22> Text="  los_tick"
|   |-ParagraphComment 0x7318f0 <line:423:3>
|   | `-TextComment 0x7318c0 <col:3> Text=" "
|   |-BlockCommandComment 0x731910 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x731970 <col:10, col:41>
|   |   `-TextComment 0x731940 <col:10, col:41> Text=" Handle the system tick timeout."
|   |-ParagraphComment 0x7319c0 <line:425:3>
|   | `-TextComment 0x731990 <col:3> Text=" "
|   |-BlockCommandComment 0x7319e0 <col:4, line:426:78> Name="par"
|   | `-ParagraphComment 0x731a60 <line:425:8, line:426:78>
|   |   |-TextComment 0x731a10 <line:425:8, col:20> Text=" Description:"
|   |   `-TextComment 0x731a30 <line:426:3, col:78> Text=" This API is called when the system tick timeout and triggers the interrupt."
|   |-ParagraphComment 0x731ab0 <line:428:3>
|   | `-TextComment 0x731a80 <col:3> Text=" "
|   |-BlockCommandComment 0x731ad0 <col:4, line:431:8> Name="attention"
|   | `-ParagraphComment 0x731ca0 <line:429:3, line:431:8>
|   |   |-TextComment 0x731b00 <line:429:3> Text=" "
|   |   |-HTMLStartTagComment 0x731b20 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x731b60 <line:430:3> Text=" "
|   |   |-HTMLStartTagComment 0x731b80 <col:4, col:7> Name="li"
|   |   |-TextComment 0x731bc0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x731be0 <col:13, col:17> Name="li"
|   |   |-TextComment 0x731c10 <line:431:3> Text=" "
|   |   `-HTMLEndTagComment 0x731c30 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x731cf0 <line:433:3>
|   | `-TextComment 0x731cc0 <col:3> Text=" "
|   |-ParamCommandComment 0x731d10 <col:4, col:15> [in] implicitly Param="none."
|   | `-ParagraphComment 0x731d70 <<invalid sloc>>
|   |-ParagraphComment 0x731dc0 <line:435:3>
|   | `-TextComment 0x731d90 <col:3> Text=" "
|   |-BlockCommandComment 0x731de0 <col:4, line:436:3> Name="retval"
|   | `-ParagraphComment 0x731e60 <line:435:11, line:436:3>
|   |   |-TextComment 0x731e10 <line:435:11, col:16> Text=" None."
|   |   `-TextComment 0x731e30 <line:436:3> Text=" "
|   |-BlockCommandComment 0x731e80 <col:4, line:438:3> Name="par"
|   | `-ParagraphComment 0x732050 <line:436:8, line:438:3>
|   |   |-TextComment 0x731eb0 <line:436:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x731ed0 <line:437:3> Text=" "
|   |   |-HTMLStartTagComment 0x731ef0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x731f30 <col:8, col:11> Name="li"
|   |   |-TextComment 0x731f70 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x731f90 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x731fc0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x731ff0 <line:438:3> Text=" "
|   `-BlockCommandComment 0x732070 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x7320d0 <col:8, col:13>
|       `-TextComment 0x7320a0 <col:8, col:13> Text=" None."
|-RecordDecl 0x658d88 <line:446:9, line:449:1> line:446:16 struct TagCpuTick definition
| |-FullComment 0x7322d0 <line:443:3, line:444:33>
| | |-ParagraphComment 0x732200 <line:443:3>
| | | `-TextComment 0x7321d0 <col:3> Text=" "
| | |-VerbatimLineComment 0x732220 <col:4, col:21> Text=" los_tick"
| | `-ParagraphComment 0x732290 <line:444:3, col:33>
| |   `-TextComment 0x732260 <col:3, col:33> Text=" Define the CPU Tick structure."
| |-FieldDecl 0x658e40 <line:447:5, col:12> col:12 cntHi 'UINT32':'unsigned int'
| `-FieldDecl 0x658ea0 <line:448:5, col:12> col:12 cntLo 'UINT32':'unsigned int'
|-TypedefDecl 0x658f48 <line:446:1, line:449:3> col:3 referenced CpuTick 'struct TagCpuTick':'struct TagCpuTick'
| |-ElaboratedType 0x658ef0 'struct TagCpuTick' sugar
| | `-RecordType 0x658e10 'struct TagCpuTick'
| |   `-Record 0x658d88 'TagCpuTick'
| `-FullComment 0x732440 <line:443:3, line:444:33>
|   |-ParagraphComment 0x732370 <line:443:3>
|   | `-TextComment 0x732340 <col:3> Text=" "
|   |-VerbatimLineComment 0x732390 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x732400 <line:444:3, col:33>
|     `-TextComment 0x7323d0 <col:3, col:33> Text=" Define the CPU Tick structure."
|-FunctionDecl 0x659398 <line:510:1, col:72> col:15 OsCpuTick2MS 'UINT32 (CpuTick *, UINT32 *, UINT32 *)' extern
| |-ParmVarDecl 0x659188 <col:28, col:37> col:37 cpuTick 'CpuTick *'
| |-ParmVarDecl 0x659200 <col:46, col:54> col:54 msHi 'UINT32 *'
| |-ParmVarDecl 0x659278 <col:60, col:68> col:68 msLo 'UINT32 *'
| `-FullComment 0x733070 <line:490:3, line:508:13>
|   |-ParagraphComment 0x7324e0 <line:490:3>
|   | `-TextComment 0x7324b0 <col:3> Text=" "
|   |-VerbatimLineComment 0x732500 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x732570 <line:491:3>
|   | `-TextComment 0x732540 <col:3> Text=" "
|   |-BlockCommandComment 0x732590 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x7325f0 <col:10, col:41>
|   |   `-TextComment 0x7325c0 <col:10, col:41> Text=" Convert cycles to milliseconds."
|   |-ParagraphComment 0x732640 <line:493:3>
|   | `-TextComment 0x732610 <col:3> Text=" "
|   |-BlockCommandComment 0x732660 <col:4, line:495:3> Name="par"
|   | `-ParagraphComment 0x732710 <line:493:8, line:495:3>
|   |   |-TextComment 0x732690 <line:493:8, col:20> Text=" Description:"
|   |   |-TextComment 0x7326b0 <line:494:3, col:54> Text=" This API is used to convert cycles to milliseconds."
|   |   `-TextComment 0x7326d0 <line:495:3> Text=" "
|   |-BlockCommandComment 0x732730 <col:4, line:498:8> Name="attention"
|   | `-ParagraphComment 0x732900 <line:496:3, line:498:8>
|   |   |-TextComment 0x732760 <line:496:3> Text=" "
|   |   |-HTMLStartTagComment 0x732780 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x7327c0 <line:497:3> Text=" "
|   |   |-HTMLStartTagComment 0x7327e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x732820 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x732840 <col:13, col:17> Name="li"
|   |   |-TextComment 0x732870 <line:498:3> Text=" "
|   |   `-HTMLEndTagComment 0x732890 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x732950 <line:500:3>
|   | `-TextComment 0x732920 <col:3> Text=" "
|   |-ParamCommandComment 0x732970 <col:4, line:501:3> [in] implicitly Param="cpuTick" ParamIndex=0
|   | `-ParagraphComment 0x732a20 <line:500:19, line:501:3>
|   |   |-TextComment 0x7329d0 <line:500:19, col:47> Text="  [IN]  Number of CPU cycles."
|   |   `-TextComment 0x7329f0 <line:501:3> Text=" "
|   |-ParamCommandComment 0x732a40 <col:4, line:502:3> [in] implicitly Param="msHi" ParamIndex=1
|   | `-ParagraphComment 0x732af0 <line:501:16, line:502:3>
|   |   |-TextComment 0x732aa0 <line:501:16, col:70> Text="     [OUT] Upper 32 bits of the number of milliseconds."
|   |   `-TextComment 0x732ac0 <line:502:3> Text=" "
|   |-ParamCommandComment 0x732b10 <col:4, col:70> [in] implicitly Param="msLo" ParamIndex=2
|   | `-ParagraphComment 0x732ba0 <col:16, col:70>
|   |   `-TextComment 0x732b70 <col:16, col:70> Text="     [OUT] Lower 32 bits of the number of milliseconds."
|   |-ParagraphComment 0x732bf0 <line:504:3>
|   | `-TextComment 0x732bc0 <col:3> Text=" "
|   |-BlockCommandComment 0x732c10 <col:4, line:505:3> Name="retval"
|   | `-ParagraphComment 0x732c90 <line:504:11, line:505:3>
|   |   |-TextComment 0x732c40 <line:504:11, col:68> Text=" #LOS_ERRNO_SYS_PTR_NULL    0x02000011: Invalid parameter."
|   |   `-TextComment 0x732c60 <line:505:3> Text=" "
|   |-BlockCommandComment 0x732cb0 <col:4, line:506:3> Name="retval"
|   | `-ParagraphComment 0x732d30 <line:505:11, line:506:3>
|   |   |-TextComment 0x732ce0 <line:505:11, col:91> Text=" #LOS_OK                   0:  Cycles are successfully converted to microseconds."
|   |   `-TextComment 0x732d00 <line:506:3> Text=" "
|   |-BlockCommandComment 0x732d50 <col:4, line:508:3> Name="par"
|   | `-ParagraphComment 0x732f50 <line:506:8, line:508:3>
|   |   |-TextComment 0x732d80 <line:506:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x732da0 <line:507:3> Text=" "
|   |   |-HTMLStartTagComment 0x732dc0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x732e30 <col:8, col:11> Name="li"
|   |   |-TextComment 0x732e70 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x732e90 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x732ec0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x732ef0 <line:508:3> Text=" "
|   `-BlockCommandComment 0x732f70 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x732fd0 <col:8, col:13>
|       `-TextComment 0x732fa0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x659618 <line:533:1, col:72> col:15 OsCpuTick2US 'UINT32 (CpuTick *, UINT32 *, UINT32 *)' extern
| |-ParmVarDecl 0x659488 <col:28, col:37> col:37 cpuTick 'CpuTick *'
| |-ParmVarDecl 0x659500 <col:46, col:54> col:54 usHi 'UINT32 *'
| |-ParmVarDecl 0x659578 <col:60, col:68> col:68 usLo 'UINT32 *'
| `-FullComment 0x733c70 <line:513:3, line:531:13>
|   |-ParagraphComment 0x733110 <line:513:3>
|   | `-TextComment 0x7330e0 <col:3> Text=" "
|   |-VerbatimLineComment 0x733130 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x7331a0 <line:514:3>
|   | `-TextComment 0x733170 <col:3> Text=" "
|   |-BlockCommandComment 0x7331c0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x733220 <col:10, col:41>
|   |   `-TextComment 0x7331f0 <col:10, col:41> Text=" Convert cycles to microseconds."
|   |-ParagraphComment 0x733270 <line:516:3>
|   | `-TextComment 0x733240 <col:3> Text=" "
|   |-BlockCommandComment 0x733290 <col:4, line:518:3> Name="par"
|   | `-ParagraphComment 0x733340 <line:516:8, line:518:3>
|   |   |-TextComment 0x7332c0 <line:516:8, col:20> Text=" Description:"
|   |   |-TextComment 0x7332e0 <line:517:3, col:54> Text=" This API is used to convert cycles to microseconds."
|   |   `-TextComment 0x733300 <line:518:3> Text=" "
|   |-BlockCommandComment 0x733360 <col:4, line:521:8> Name="attention"
|   | `-ParagraphComment 0x733530 <line:519:3, line:521:8>
|   |   |-TextComment 0x733390 <line:519:3> Text=" "
|   |   |-HTMLStartTagComment 0x7333b0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x7333f0 <line:520:3> Text=" "
|   |   |-HTMLStartTagComment 0x733410 <col:4, col:7> Name="li"
|   |   |-TextComment 0x733450 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x733470 <col:13, col:17> Name="li"
|   |   |-TextComment 0x7334a0 <line:521:3> Text=" "
|   |   `-HTMLEndTagComment 0x7334c0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x733580 <line:523:3>
|   | `-TextComment 0x733550 <col:3> Text=" "
|   |-ParamCommandComment 0x7335a0 <col:4, line:524:3> [in] implicitly Param="cpuTick" ParamIndex=0
|   | `-ParagraphComment 0x733650 <line:523:19, line:524:3>
|   |   |-TextComment 0x733600 <line:523:19, col:47> Text="  [IN]  Number of CPU cycles."
|   |   `-TextComment 0x733620 <line:524:3> Text=" "
|   |-ParamCommandComment 0x733670 <col:4, line:525:3> [in] implicitly Param="usHi" ParamIndex=1
|   | `-ParagraphComment 0x733720 <line:524:16, line:525:3>
|   |   |-TextComment 0x7336d0 <line:524:16, col:70> Text="     [OUT] Upper 32 bits of the number of microseconds."
|   |   `-TextComment 0x7336f0 <line:525:3> Text=" "
|   |-ParamCommandComment 0x733740 <col:4, col:70> [in] implicitly Param="usLo" ParamIndex=2
|   | `-ParagraphComment 0x7337d0 <col:16, col:70>
|   |   `-TextComment 0x7337a0 <col:16, col:70> Text="     [OUT] Lower 32 bits of the number of microseconds."
|   |-ParagraphComment 0x733820 <line:527:3>
|   | `-TextComment 0x7337f0 <col:3> Text=" "
|   |-BlockCommandComment 0x733840 <col:4, line:528:3> Name="retval"
|   | `-ParagraphComment 0x7338c0 <line:527:11, line:528:3>
|   |   |-TextComment 0x733870 <line:527:11, col:68> Text=" #LOS_ERRNO_SYS_PTR_NULL    0x02000011: Invalid parameter."
|   |   `-TextComment 0x733890 <line:528:3> Text=" "
|   |-BlockCommandComment 0x7338e0 <col:4, line:529:3> Name="retval"
|   | `-ParagraphComment 0x733960 <line:528:11, line:529:3>
|   |   |-TextComment 0x733910 <line:528:11, col:90> Text=" #LOS_OK                   0: Cycles are successfully converted to microseconds."
|   |   `-TextComment 0x733930 <line:529:3> Text=" "
|   |-BlockCommandComment 0x733980 <col:4, line:531:3> Name="par"
|   | `-ParagraphComment 0x733b50 <line:529:8, line:531:3>
|   |   |-TextComment 0x7339b0 <line:529:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x7339d0 <line:530:3> Text=" "
|   |   |-HTMLStartTagComment 0x7339f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x733a30 <col:8, col:11> Name="li"
|   |   |-TextComment 0x733a70 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x733a90 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x733ac0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x733af0 <line:531:3> Text=" "
|   `-BlockCommandComment 0x733b70 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x733bd0 <col:8, col:13>
|       `-TextComment 0x733ba0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x659798 <main/hals/driver/../../los_compiler.h:130:23, main/los_tick.h:556:1> line:553:22 OsCycle2MS 'UINT64 (UINT64)' static inline
| |-ParmVarDecl 0x659708 <col:33, col:40> col:40 used cycle 'UINT64':'unsigned long long'
| |-CompoundStmt 0x65bd28 <line:554:1, line:556:1>
| | `-ReturnStmt 0x65bce8 <line:555:5, col:66>
| |   `-CStyleCastExpr 0x65bcc0 <col:12, col:66> 'UINT64':'unsigned long long' <NoOp>
| |     `-ParenExpr 0x65bca0 <col:20, col:66> 'unsigned long long'
| |       `-ParenExpr 0x65bc50 <col:21, col:65> 'unsigned long long'
| |         `-BinaryOperator 0x65bc30 <col:22, col:64> 'unsigned long long' '/'
| |           |-ImplicitCastExpr 0x65bc00 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
| |           | `-DeclRefExpr 0x65bb30 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0x659708 'cycle' 'UINT64':'unsigned long long'
| |           `-ImplicitCastExpr 0x65bc18 <col:30, col:64> 'unsigned long long' <IntegralCast>
| |             `-ParenExpr 0x65bbe0 <col:30, col:64> 'unsigned int'
| |               `-BinaryOperator 0x65bbc0 <col:31, line:461:32> 'unsigned int' '/'
| |                 |-ImplicitCastExpr 0x65bb90 <line:555:31> 'UINT32':'unsigned int' <LValueToRValue>
| |                 | `-DeclRefExpr 0x65bb50 <col:31> 'UINT32':'unsigned int' lvalue Var 0x5bb158 'g_sysClock' 'UINT32':'unsigned int'
| |                 `-ImplicitCastExpr 0x65bba8 <line:461:32> 'unsigned int' <IntegralCast>
| |                   `-IntegerLiteral 0x65bb70 <col:32> 'int' 1000
| `-FullComment 0x734620 <line:536:3, line:551:13>
|   |-ParagraphComment 0x733d10 <line:536:3>
|   | `-TextComment 0x733ce0 <col:3> Text=" "
|   |-VerbatimLineComment 0x733d30 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x733da0 <line:537:3>
|   | `-TextComment 0x733d70 <col:3> Text=" "
|   |-BlockCommandComment 0x733dc0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x733e20 <col:10, col:41>
|   |   `-TextComment 0x733df0 <col:10, col:41> Text=" Convert cycles to milliseconds."
|   |-ParagraphComment 0x733e70 <line:539:3>
|   | `-TextComment 0x733e40 <col:3> Text=" "
|   |-BlockCommandComment 0x733e90 <col:4, line:541:3> Name="par"
|   | `-ParagraphComment 0x733f40 <line:539:8, line:541:3>
|   |   |-TextComment 0x733ec0 <line:539:8, col:20> Text=" Description:"
|   |   |-TextComment 0x733ee0 <line:540:3, col:54> Text=" This API is used to convert cycles to milliseconds."
|   |   `-TextComment 0x733f00 <line:541:3> Text=" "
|   |-BlockCommandComment 0x733f60 <col:4, line:544:8> Name="attention"
|   | `-ParagraphComment 0x734130 <line:542:3, line:544:8>
|   |   |-TextComment 0x733f90 <line:542:3> Text=" "
|   |   |-HTMLStartTagComment 0x733fb0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x733ff0 <line:543:3> Text=" "
|   |   |-HTMLStartTagComment 0x734010 <col:4, col:7> Name="li"
|   |   |-TextComment 0x734050 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x734070 <col:13, col:17> Name="li"
|   |   |-TextComment 0x7340a0 <line:544:3> Text=" "
|   |   `-HTMLEndTagComment 0x7340c0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x734180 <line:546:3>
|   | `-TextComment 0x734150 <col:3> Text=" "
|   |-ParamCommandComment 0x7341a0 <col:4, col:43> [in] implicitly Param="cycle" ParamIndex=0
|   | `-ParagraphComment 0x734230 <col:17, col:43>
|   |   `-TextComment 0x734200 <col:17, col:43> Text="     [IN] Number of cycles."
|   |-ParagraphComment 0x734280 <line:548:3>
|   | `-TextComment 0x734250 <col:3> Text=" "
|   |-BlockCommandComment 0x7342a0 <col:4, line:549:3> Name="retval"
|   | `-ParagraphComment 0x734320 <line:548:11, line:549:3>
|   |   |-TextComment 0x7342d0 <line:548:11, col:120> Text=" Number of milliseconds obtained through the conversion.    Cycles are successfully converted to milliseconds."
|   |   `-TextComment 0x7342f0 <line:549:3> Text=" "
|   |-BlockCommandComment 0x734340 <col:4, line:551:3> Name="par"
|   | `-ParagraphComment 0x734510 <line:549:8, line:551:3>
|   |   |-TextComment 0x734370 <line:549:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x734390 <line:550:3> Text=" "
|   |   |-HTMLStartTagComment 0x7343b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x7343f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x734430 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x734450 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x734480 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x7344b0 <line:551:3> Text=" "
|   `-BlockCommandComment 0x734530 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x734590 <col:8, col:13>
|       `-TextComment 0x734560 <col:8, col:13> Text=" None."
|-FunctionDecl 0x65bde0 <main/hals/driver/../../los_compiler.h:130:23, main/los_tick.h:583:1> line:576:22 OsCycle2US 'UINT64 (UINT64)' static inline
| |-ParmVarDecl 0x65bd50 <col:33, col:40> col:40 used cycle 'UINT64':'unsigned long long'
| |-CompoundStmt 0x65c1e0 <line:577:1, line:583:1>
| | |-DeclStmt 0x65bfa8 <line:578:5, col:51>
| | | `-VarDecl 0x65be98 <col:5, line:467:32> line:578:12 used tmp 'UINT64':'unsigned long long' cinit
| | |   `-ImplicitCastExpr 0x65bf90 <col:18, line:467:32> 'UINT64':'unsigned long long' <IntegralCast>
| | |     `-BinaryOperator 0x65bf70 <line:578:18, line:467:32> 'unsigned int' '/'
| | |       |-ImplicitCastExpr 0x65bf40 <line:578:18> 'UINT32':'unsigned int' <LValueToRValue>
| | |       | `-DeclRefExpr 0x65bf00 <col:18> 'UINT32':'unsigned int' lvalue Var 0x5bb158 'g_sysClock' 'UINT32':'unsigned int'
| | |       `-ImplicitCastExpr 0x65bf58 <line:467:32> 'unsigned int' <IntegralCast>
| | |         `-IntegerLiteral 0x65bf20 <col:32> 'int' 1000000
| | |-IfStmt 0x65c0b0 <line:579:5, line:581:5>
| | | |-BinaryOperator 0x65c030 <line:579:9, col:16> 'int' '=='
| | | | |-ImplicitCastExpr 0x65c000 <col:9> 'UINT64':'unsigned long long' <LValueToRValue>
| | | | | `-DeclRefExpr 0x65bfc0 <col:9> 'UINT64':'unsigned long long' lvalue Var 0x65be98 'tmp' 'UINT64':'unsigned long long'
| | | | `-ImplicitCastExpr 0x65c018 <col:16> 'unsigned long long' <IntegralCast>
| | | |   `-IntegerLiteral 0x65bfe0 <col:16> 'int' 0
| | | `-CompoundStmt 0x65c098 <col:19, line:581:5>
| | |   `-ReturnStmt 0x65c088 <line:580:9, col:16>
| | |     `-ImplicitCastExpr 0x65c070 <col:16> 'UINT64':'unsigned long long' <IntegralCast>
| | |       `-IntegerLiteral 0x65c050 <col:16> 'int' 0
| | `-ReturnStmt 0x65c1d0 <line:582:5, col:32>
| |   `-CStyleCastExpr 0x65c1a8 <col:12, col:32> 'UINT64':'unsigned long long' <NoOp>
| |     `-ParenExpr 0x65c188 <col:20, col:32> 'unsigned long long'
| |       `-BinaryOperator 0x65c138 <col:21, col:29> 'unsigned long long' '/'
| |         |-ImplicitCastExpr 0x65c108 <col:21> 'UINT64':'unsigned long long' <LValueToRValue>
| |         | `-DeclRefExpr 0x65c0c8 <col:21> 'UINT64':'unsigned long long' lvalue ParmVar 0x65bd50 'cycle' 'UINT64':'unsigned long long'
| |         `-ImplicitCastExpr 0x65c120 <col:29> 'UINT64':'unsigned long long' <LValueToRValue>
| |           `-DeclRefExpr 0x65c0e8 <col:29> 'UINT64':'unsigned long long' lvalue Var 0x65be98 'tmp' 'UINT64':'unsigned long long'
| `-FullComment 0x734fe0 <line:559:3, line:574:13>
|   |-ParagraphComment 0x7346c0 <line:559:3>
|   | `-TextComment 0x734690 <col:3> Text=" "
|   |-VerbatimLineComment 0x7346e0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x734750 <line:560:3>
|   | `-TextComment 0x734720 <col:3> Text=" "
|   |-BlockCommandComment 0x734770 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x7347d0 <col:10, col:41>
|   |   `-TextComment 0x7347a0 <col:10, col:41> Text=" Convert cycles to microseconds."
|   |-ParagraphComment 0x734820 <line:562:3>
|   | `-TextComment 0x7347f0 <col:3> Text=" "
|   |-BlockCommandComment 0x734840 <col:4, line:564:3> Name="par"
|   | `-ParagraphComment 0x7348f0 <line:562:8, line:564:3>
|   |   |-TextComment 0x734870 <line:562:8, col:20> Text=" Description:"
|   |   |-TextComment 0x734890 <line:563:3, col:54> Text=" This API is used to convert cycles to microseconds."
|   |   `-TextComment 0x7348b0 <line:564:3> Text=" "
|   |-BlockCommandComment 0x734910 <col:4, line:567:8> Name="attention"
|   | `-ParagraphComment 0x734ae0 <line:565:3, line:567:8>
|   |   |-TextComment 0x734940 <line:565:3> Text=" "
|   |   |-HTMLStartTagComment 0x734960 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x7349a0 <line:566:3> Text=" "
|   |   |-HTMLStartTagComment 0x7349c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x734a00 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x734a20 <col:13, col:17> Name="li"
|   |   |-TextComment 0x734a50 <line:567:3> Text=" "
|   |   `-HTMLEndTagComment 0x734a70 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x734b30 <line:569:3>
|   | `-TextComment 0x734b00 <col:3> Text=" "
|   |-ParamCommandComment 0x734b50 <col:4, col:43> [in] implicitly Param="cycle" ParamIndex=0
|   | `-ParagraphComment 0x734be0 <col:17, col:43>
|   |   `-TextComment 0x734bb0 <col:17, col:43> Text="     [IN] Number of cycles."
|   |-ParagraphComment 0x734c30 <line:571:3>
|   | `-TextComment 0x734c00 <col:3> Text=" "
|   |-BlockCommandComment 0x734c50 <col:4, line:572:3> Name="retval"
|   | `-ParagraphComment 0x734cd0 <line:571:11, line:572:3>
|   |   |-TextComment 0x734c80 <line:571:11, col:117> Text=" Number of microseconds obtained through the conversion. Cycles are successfully converted to microseconds."
|   |   `-TextComment 0x734ca0 <line:572:3> Text=" "
|   |-BlockCommandComment 0x734cf0 <col:4, line:574:3> Name="par"
|   | `-ParagraphComment 0x734ed0 <line:572:8, line:574:3>
|   |   |-TextComment 0x734d20 <line:572:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x734d40 <line:573:3> Text=" "
|   |   |-HTMLStartTagComment 0x734d60 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x734da0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x734de0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x734e00 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x734e40 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x734e70 <line:574:3> Text=" "
|   `-BlockCommandComment 0x734ef0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x734f50 <col:8, col:13>
|       `-TextComment 0x734f20 <col:8, col:13> Text=" None."
|-EnumDecl 0x65c208 <main/los_sortlink.h:44:9, line:47:1> line:44:9
| |-EnumConstantDecl 0x65c308 <line:45:5, col:25> col:5 OS_SORT_LINK_TASK 'int'
| | `-ConstantExpr 0x65c2f0 <col:25> 'int'
| |   `-IntegerLiteral 0x65c2d0 <col:25> 'int' 1
| `-EnumConstantDecl 0x65c390 <line:46:5, col:26> col:5 OS_SORT_LINK_SWTMR 'int'
|   `-ConstantExpr 0x65c378 <col:26> 'int'
|     `-IntegerLiteral 0x65c358 <col:26> 'int' 2
|-TypedefDecl 0x65c438 <line:44:1, line:47:3> col:3 referenced SortLinkType 'enum SortLinkType':'SortLinkType'
| `-ElaboratedType 0x65c3e0 'enum SortLinkType' sugar
|   `-EnumType 0x65c2b0 'SortLinkType'
|     `-Enum 0x65c208 ''
|-RecordDecl 0x65c4a8 <line:49:9, line:52:1> line:49:9 struct definition
| |-FieldDecl 0x65c560 <line:50:5, col:17> col:17 referenced sortLinkNode 'LOS_DL_LIST':'struct LOS_DL_LIST'
| `-FieldDecl 0x65c5c0 <line:51:5, col:17> col:17 referenced responseTime 'UINT64':'unsigned long long'
|-TypedefDecl 0x65c6c8 <line:49:1, line:52:3> col:3 referenced SortLinkList 'struct SortLinkList':'SortLinkList'
| `-ElaboratedType 0x65c670 'struct SortLinkList' sugar
|   `-RecordType 0x65c530 'SortLinkList'
|     `-Record 0x65c4a8 ''
|-RecordDecl 0x65c738 <line:54:9, line:56:1> line:54:9 struct definition
| `-FieldDecl 0x65c7f0 <line:55:5, col:17> col:17 referenced sortLink 'LOS_DL_LIST':'struct LOS_DL_LIST'
|-TypedefDecl 0x65c898 <line:54:1, line:56:3> col:3 referenced SortLinkAttribute 'struct SortLinkAttribute':'SortLinkAttribute'
| `-ElaboratedType 0x65c840 'struct SortLinkAttribute' sugar
|   `-RecordType 0x65c7c0 'SortLinkAttribute'
|     `-Record 0x65c738 ''
|-VarDecl 0x65c940 <line:58:1, col:26> col:26 used g_taskSortLink 'SortLinkAttribute':'SortLinkAttribute' extern
|-VarDecl 0x65c9b8 <line:59:1, col:26> col:26 used g_swtmrSortLink 'SortLinkAttribute':'SortLinkAttribute' extern
|-FunctionDecl 0x65e218 <main/hals/driver/../../los_compiler.h:158:22, main/los_sortlink.h:73:1> line:67:22 OsSortLinkGetRemainTime 'UINT64 (UINT64, const SortLinkList *)' static inline
| |-ParmVarDecl 0x65ca30 <col:46, col:53> col:53 used currTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x65e100 <col:63, col:83> col:83 used targetSortList 'const SortLinkList *'
| `-CompoundStmt 0x65e520 <line:68:1, line:73:1>
|   |-IfStmt 0x65e400 <line:69:5, line:71:5>
|   | |-BinaryOperator 0x65e380 <line:69:9, col:37> 'int' '>='
|   | | |-ImplicitCastExpr 0x65e350 <col:9> 'UINT64':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x65e2c8 <col:9> 'UINT64':'unsigned long long' lvalue ParmVar 0x65ca30 'currTime' 'UINT64':'unsigned long long'
|   | | `-ImplicitCastExpr 0x65e368 <col:21, col:37> 'UINT64':'unsigned long long' <LValueToRValue>
|   | |   `-MemberExpr 0x65e320 <col:21, col:37> 'const UINT64':'const unsigned long long' lvalue ->responseTime 0x65c5c0
|   | |     `-ImplicitCastExpr 0x65e308 <col:21> 'const SortLinkList *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x65e2e8 <col:21> 'const SortLinkList *' lvalue ParmVar 0x65e100 'targetSortList' 'const SortLinkList *'
|   | `-CompoundStmt 0x65e3e8 <col:51, line:71:5>
|   |   `-ReturnStmt 0x65e3d8 <line:70:9, col:16>
|   |     `-ImplicitCastExpr 0x65e3c0 <col:16> 'UINT64':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x65e3a0 <col:16> 'int' 0
|   `-ReturnStmt 0x65e510 <line:72:5, col:52>
|     `-ParenExpr 0x65e4f0 <col:12, col:52> 'unsigned long long'
|       `-BinaryOperator 0x65e4d0 <col:13, col:44> 'unsigned long long' '-'
|         |-ImplicitCastExpr 0x65e4a0 <col:13, col:29> 'UINT64':'unsigned long long' <LValueToRValue>
|         | `-MemberExpr 0x65e450 <col:13, col:29> 'const UINT64':'const unsigned long long' lvalue ->responseTime 0x65c5c0
|         |   `-ImplicitCastExpr 0x65e438 <col:13> 'const SortLinkList *' <LValueToRValue>
|         |     `-DeclRefExpr 0x65e418 <col:13> 'const SortLinkList *' lvalue ParmVar 0x65e100 'targetSortList' 'const SortLinkList *'
|         `-ImplicitCastExpr 0x65e4b8 <col:44> 'UINT64':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x65e480 <col:44> 'UINT64':'unsigned long long' lvalue ParmVar 0x65ca30 'currTime' 'UINT64':'unsigned long long'
|-FunctionDecl 0x65e698 <main/hals/driver/../../los_compiler.h:158:22, main/los_sortlink.h:79:1> line:75:20 OsDeleteNodeSortLink 'void (SortLinkList *)' static inline
| |-ParmVarDecl 0x65e5a8 <col:41, col:55> col:55 used sortList 'SortLinkList *'
| `-CompoundStmt 0x65ea10 <line:76:1, line:79:1>
|   |-CallExpr 0x65e7f8 <line:77:5, col:43> 'void'
|   | |-ImplicitCastExpr 0x65e7e0 <col:5> 'void (*)(LOS_DL_LIST *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x65e740 <col:5> 'void (LOS_DL_LIST *)' Function 0x6399a0 'LOS_ListDelete' 'void (LOS_DL_LIST *)'
|   | `-UnaryOperator 0x65e7c8 <col:20, col:31> 'LOS_DL_LIST *' prefix '&' cannot overflow
|   |   `-MemberExpr 0x65e798 <col:21, col:31> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue ->sortLinkNode 0x65c560
|   |     `-ImplicitCastExpr 0x65e780 <col:21> 'SortLinkList *' <LValueToRValue>
|   |       `-DeclRefExpr 0x65e760 <col:21> 'SortLinkList *' lvalue ParmVar 0x65e5a8 'sortList' 'SortLinkList *'
|   `-ParenExpr 0x65e9f0 <line:62:45, col:98> 'UINT64':'unsigned long long'
|     `-BinaryOperator 0x65e9d0 <col:46, col:97> 'UINT64':'unsigned long long' '='
|       |-MemberExpr 0x65e8f0 <col:46, col:76> 'UINT64':'unsigned long long' lvalue ->responseTime 0x65c5c0
|       | `-ParenExpr 0x65e8d0 <col:46, col:73> 'SortLinkList *'
|       |   `-CStyleCastExpr 0x65e8a8 <col:47, col:72> 'SortLinkList *' <NoOp>
|       |     `-ImplicitCastExpr 0x65e890 <col:63, col:72> 'SortLinkList *' <LValueToRValue> part_of_explicit_cast
|       |       `-ParenExpr 0x65e870 <col:63, col:72> 'SortLinkList *' lvalue
|       |         `-DeclRefExpr 0x65e820 <line:78:24> 'SortLinkList *' lvalue ParmVar 0x65e5a8 'sortList' 'SortLinkList *'
|       `-ParenExpr 0x65e9b0 <line:62:91, col:97> 'UINT64':'unsigned long long'
|         `-ParenExpr 0x65e990 <line:61:35, col:46> 'UINT64':'unsigned long long'
|           `-CStyleCastExpr 0x65e968 <col:36, col:45> 'UINT64':'unsigned long long' <IntegralCast>
|             `-UnaryOperator 0x65e940 <col:44, col:45> 'int' prefix '-'
|               `-IntegerLiteral 0x65e920 <col:45> 'int' 1
|-FunctionDecl 0x65eca8 <main/hals/driver/../../los_compiler.h:158:22, main/los_sortlink.h:96:1> line:81:22 used GetSortLinkNextExpireTime 'UINT64 (SortLinkAttribute *, UINT64, UINT32)' static inline
| |-ParmVarDecl 0x65ea98 <col:48, col:67> col:67 used sortHeader 'SortLinkAttribute *'
| |-ParmVarDecl 0x65eb10 <col:79, col:86> col:86 used startTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x65eb88 <col:97, col:104> col:104 used tickPrecision 'UINT32':'unsigned int'
| `-CompoundStmt 0x65f988 <line:82:1, line:96:1>
|   |-DeclStmt 0x65ee58 <line:83:5, col:46>
|   | `-VarDecl 0x65ed70 <col:5, col:38> col:18 used head 'LOS_DL_LIST *' cinit
|   |   `-UnaryOperator 0x65ee40 <col:25, col:38> 'LOS_DL_LIST *' prefix '&' cannot overflow
|   |     `-MemberExpr 0x65ee10 <col:26, col:38> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue ->sortLink 0x65c7f0
|   |       `-ImplicitCastExpr 0x65edf8 <col:26> 'SortLinkAttribute *' <LValueToRValue>
|   |         `-DeclRefExpr 0x65edd8 <col:26> 'SortLinkAttribute *' lvalue ParmVar 0x65ea98 'sortHeader' 'SortLinkAttribute *'
|   |-DeclStmt 0x65ef68 <line:84:5, col:38>
|   | `-VarDecl 0x65ee80 <col:5, col:31> col:18 used list 'LOS_DL_LIST *' cinit
|   |   `-ImplicitCastExpr 0x65ef50 <col:25, col:31> 'struct LOS_DL_LIST *' <LValueToRValue>
|   |     `-MemberExpr 0x65ef20 <col:25, col:31> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x62adf0
|   |       `-ImplicitCastExpr 0x65ef08 <col:25> 'LOS_DL_LIST *' <LValueToRValue>
|   |         `-DeclRefExpr 0x65eee8 <col:25> 'LOS_DL_LIST *' lvalue Var 0x65ed70 'head' 'LOS_DL_LIST *'
|   |-IfStmt 0x65f2a8 <line:86:5, line:88:5>
|   | |-CallExpr 0x65f030 <line:86:9, col:27> 'BOOL':'unsigned int'
|   | | |-ImplicitCastExpr 0x65f018 <col:9> 'BOOL (*)(LOS_DL_LIST *)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x65ef80 <col:9> 'BOOL (LOS_DL_LIST *)' Function 0x63a128 'LOS_ListEmpty' 'BOOL (LOS_DL_LIST *)'
|   | | `-ImplicitCastExpr 0x65f058 <col:23> 'LOS_DL_LIST *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x65efa0 <col:23> 'LOS_DL_LIST *' lvalue Var 0x65ed70 'head' 'LOS_DL_LIST *'
|   | `-CompoundStmt 0x65f290 <col:30, line:88:5>
|   |   `-ReturnStmt 0x65f280 <line:87:9, col:42>
|   |     `-BinaryOperator 0x65f260 <line:65:33, line:87:42> 'unsigned long long' '-'
|   |       |-ParenExpr 0x65f0e0 <line:65:33, col:44> 'UINT64':'unsigned long long'
|   |       | `-CStyleCastExpr 0x65f0b8 <col:34, col:43> 'UINT64':'unsigned long long' <IntegralCast>
|   |       |   `-UnaryOperator 0x65f090 <col:42, col:43> 'int' prefix '-'
|   |       |     `-IntegerLiteral 0x65f070 <col:43> 'int' 1
|   |       `-ImplicitCastExpr 0x65f248 <line:87:42> 'unsigned long long' <IntegralCast>
|   |         `-ImplicitCastExpr 0x65f230 <col:42> 'UINT32':'unsigned int' <LValueToRValue>
|   |           `-DeclRefExpr 0x65f210 <col:42> 'UINT32':'unsigned int' lvalue ParmVar 0x65eb88 'tickPrecision' 'UINT32':'unsigned int'
|   |-DeclStmt 0x65f670 <line:90:5, col:83>
|   | `-VarDecl 0x65f2d0 <col:5, main/los_list.h:277:69> main/los_sortlink.h:90:19 used listSorted 'SortLinkList *' cinit
|   |   `-ParenExpr 0x65f5f8 <main/los_list.h:277:5, col:69> 'SortLinkList *'
|   |     `-CStyleCastExpr 0x65f5d0 <col:6, col:68> 'SortLinkList *' <BitCast>
|   |       `-CStyleCastExpr 0x65f598 <col:14, col:68> 'void *' <BitCast>
|   |         `-ParenExpr 0x65f578 <col:22, col:68> 'CHAR *'
|   |           `-BinaryOperator 0x65f520 <col:23, line:251:69> 'CHAR *' '-'
|   |             |-CStyleCastExpr 0x65f3c0 <line:277:23, col:36> 'CHAR *' <BitCast>
|   |             | `-ImplicitCastExpr 0x65f3a8 <col:31, col:36> 'LOS_DL_LIST *' <LValueToRValue> part_of_explicit_cast
|   |             |   `-ParenExpr 0x65f388 <col:31, col:36> 'LOS_DL_LIST *' lvalue
|   |             |     `-DeclRefExpr 0x65f338 <main/los_sortlink.h:90:50> 'LOS_DL_LIST *' lvalue Var 0x65ee80 'list' 'LOS_DL_LIST *'
|   |             `-ParenExpr 0x65f500 <main/los_list.h:251:38, col:69> 'UINT32':'unsigned int'
|   |               `-CStyleCastExpr 0x65f4d8 <col:39, col:68> 'UINT32':'unsigned int' <PointerToIntegral>
|   |                 `-UnaryOperator 0x65f4b0 <col:47, col:68> 'LOS_DL_LIST *' prefix '&' cannot overflow
|   |                   `-ParenExpr 0x65f490 <col:48, col:68> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue
|   |                     `-MemberExpr 0x65f460 <col:49, main/los_sortlink.h:90:70> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue ->sortLinkNode 0x65c560
|   |                       `-ParenExpr 0x65f440 <main/los_list.h:251:49, col:59> 'SortLinkList *'
|   |                         `-CStyleCastExpr 0x65f418 <col:50, col:58> 'SortLinkList *' <NullToPointer>
|   |                           `-IntegerLiteral 0x65f3e8 <col:58> 'int' 0
|   |-IfStmt 0x65f8e0 <main/los_sortlink.h:91:5, line:93:5>
|   | |-BinaryOperator 0x65f7d0 <line:91:9, col:63> 'int' '<='
|   | | |-ImplicitCastExpr 0x65f7b8 <col:9, col:21> 'UINT64':'unsigned long long' <LValueToRValue>
|   | | | `-MemberExpr 0x65f6c0 <col:9, col:21> 'UINT64':'unsigned long long' lvalue ->responseTime 0x65c5c0
|   | | |   `-ImplicitCastExpr 0x65f6a8 <col:9> 'SortLinkList *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x65f688 <col:9> 'SortLinkList *' lvalue Var 0x65f2d0 'listSorted' 'SortLinkList *'
|   | | `-ParenExpr 0x65f798 <col:37, col:63> 'unsigned long long'
|   | |   `-BinaryOperator 0x65f778 <col:38, col:50> 'unsigned long long' '+'
|   | |     |-ImplicitCastExpr 0x65f730 <col:38> 'UINT64':'unsigned long long' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x65f6f0 <col:38> 'UINT64':'unsigned long long' lvalue ParmVar 0x65eb10 'startTime' 'UINT64':'unsigned long long'
|   | |     `-ImplicitCastExpr 0x65f760 <col:50> 'unsigned long long' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x65f748 <col:50> 'UINT32':'unsigned int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x65f710 <col:50> 'UINT32':'unsigned int' lvalue ParmVar 0x65eb88 'tickPrecision' 'UINT32':'unsigned int'
|   | `-CompoundStmt 0x65f8c8 <col:66, line:93:5>
|   |   `-ReturnStmt 0x65f8b8 <line:92:9, col:42>
|   |     `-ParenExpr 0x65f898 <col:16, col:42> 'unsigned long long'
|   |       `-BinaryOperator 0x65f878 <col:17, col:29> 'unsigned long long' '+'
|   |         |-ImplicitCastExpr 0x65f830 <col:17> 'UINT64':'unsigned long long' <LValueToRValue>
|   |         | `-DeclRefExpr 0x65f7f0 <col:17> 'UINT64':'unsigned long long' lvalue ParmVar 0x65eb10 'startTime' 'UINT64':'unsigned long long'
|   |         `-ImplicitCastExpr 0x65f860 <col:29> 'unsigned long long' <IntegralCast>
|   |           `-ImplicitCastExpr 0x65f848 <col:29> 'UINT32':'unsigned int' <LValueToRValue>
|   |             `-DeclRefExpr 0x65f810 <col:29> 'UINT32':'unsigned int' lvalue ParmVar 0x65eb88 'tickPrecision' 'UINT32':'unsigned int'
|   `-ReturnStmt 0x65f978 <line:95:5, col:24>
|     `-ImplicitCastExpr 0x65f960 <col:12, col:24> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-MemberExpr 0x65f930 <col:12, col:24> 'UINT64':'unsigned long long' lvalue ->responseTime 0x65c5c0
|         `-ImplicitCastExpr 0x65f918 <col:12> 'SortLinkList *' <LValueToRValue>
|           `-DeclRefExpr 0x65f8f8 <col:12> 'SortLinkList *' lvalue Var 0x65f2d0 'listSorted' 'SortLinkList *'
|-FunctionDecl 0x65fb68 <main/hals/driver/../../los_compiler.h:158:22, main/los_sortlink.h:103:1> line:98:22 OsGetNextExpireTime 'UINT64 (UINT64, UINT32)' static inline
| |-ParmVarDecl 0x65f9d8 <col:42, col:49> col:49 used startTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x65fa50 <col:60, col:67> col:67 used tickPrecision 'UINT32':'unsigned int'
| `-CompoundStmt 0x660128 <line:99:1, line:103:1>
|   |-DeclStmt 0x65fe08 <line:100:5, col:97>
|   | `-VarDecl 0x65fc28 <col:5, col:96> col:12 used taskExpireTime 'UINT64':'unsigned long long' cinit
|   |   `-CallExpr 0x65fda0 <col:29, col:96> 'UINT64':'unsigned long long'
|   |     |-ImplicitCastExpr 0x65fd88 <col:29> 'UINT64 (*)(SortLinkAttribute *, UINT64, UINT32)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x65fc90 <col:29> 'UINT64 (SortLinkAttribute *, UINT64, UINT32)' Function 0x65eca8 'GetSortLinkNextExpireTime' 'UINT64 (SortLinkAttribute *, UINT64, UINT32)'
|   |     |-UnaryOperator 0x65fcd0 <col:55, col:56> 'SortLinkAttribute *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x65fcb0 <col:56> 'SortLinkAttribute':'SortLinkAttribute' lvalue Var 0x65c940 'g_taskSortLink' 'SortLinkAttribute':'SortLinkAttribute'
|   |     |-ImplicitCastExpr 0x65fdd8 <col:72> 'UINT64':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x65fce8 <col:72> 'UINT64':'unsigned long long' lvalue ParmVar 0x65f9d8 'startTime' 'UINT64':'unsigned long long'
|   |     `-ImplicitCastExpr 0x65fdf0 <col:83> 'UINT32':'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x65fd08 <col:83> 'UINT32':'unsigned int' lvalue ParmVar 0x65fa50 'tickPrecision' 'UINT32':'unsigned int'
|   |-DeclStmt 0x65ffb0 <line:101:5, col:99>
|   | `-VarDecl 0x65fe30 <col:5, col:98> col:12 used swtmrExpireTime 'UINT64':'unsigned long long' cinit
|   |   `-CallExpr 0x65ff48 <col:30, col:98> 'UINT64':'unsigned long long'
|   |     |-ImplicitCastExpr 0x65ff30 <col:30> 'UINT64 (*)(SortLinkAttribute *, UINT64, UINT32)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x65fe98 <col:30> 'UINT64 (SortLinkAttribute *, UINT64, UINT32)' Function 0x65eca8 'GetSortLinkNextExpireTime' 'UINT64 (SortLinkAttribute *, UINT64, UINT32)'
|   |     |-UnaryOperator 0x65fed8 <col:56, col:57> 'SortLinkAttribute *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x65feb8 <col:57> 'SortLinkAttribute':'SortLinkAttribute' lvalue Var 0x65c9b8 'g_swtmrSortLink' 'SortLinkAttribute':'SortLinkAttribute'
|   |     |-ImplicitCastExpr 0x65ff80 <col:74> 'UINT64':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x65fef0 <col:74> 'UINT64':'unsigned long long' lvalue ParmVar 0x65f9d8 'startTime' 'UINT64':'unsigned long long'
|   |     `-ImplicitCastExpr 0x65ff98 <col:85> 'UINT32':'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x65ff10 <col:85> 'UINT32':'unsigned int' lvalue ParmVar 0x65fa50 'tickPrecision' 'UINT32':'unsigned int'
|   `-ReturnStmt 0x660118 <line:102:5, col:66>
|     `-ConditionalOperator 0x6600e8 <col:12, col:66> 'unsigned long long'
|       |-ParenExpr 0x660058 <col:12, col:45> 'int'
|       | `-BinaryOperator 0x660038 <col:13, col:30> 'int' '<'
|       |   |-ImplicitCastExpr 0x660008 <col:13> 'UINT64':'unsigned long long' <LValueToRValue>
|       |   | `-DeclRefExpr 0x65ffc8 <col:13> 'UINT64':'unsigned long long' lvalue Var 0x65fc28 'taskExpireTime' 'UINT64':'unsigned long long'
|       |   `-ImplicitCastExpr 0x660020 <col:30> 'UINT64':'unsigned long long' <LValueToRValue>
|       |     `-DeclRefExpr 0x65ffe8 <col:30> 'UINT64':'unsigned long long' lvalue Var 0x65fe30 'swtmrExpireTime' 'UINT64':'unsigned long long'
|       |-ImplicitCastExpr 0x6600b8 <col:49> 'UINT64':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x660078 <col:49> 'UINT64':'unsigned long long' lvalue Var 0x65fc28 'taskExpireTime' 'UINT64':'unsigned long long'
|       `-ImplicitCastExpr 0x6600d0 <col:66> 'UINT64':'unsigned long long' <LValueToRValue>
|         `-DeclRefExpr 0x660098 <col:66> 'UINT64':'unsigned long long' lvalue Var 0x65fe30 'swtmrExpireTime' 'UINT64':'unsigned long long'
|-FunctionDecl 0x6602a8 <line:105:1, col:60> col:20 OsGetSortLinkAttribute 'SortLinkAttribute *(SortLinkType)'
| `-ParmVarDecl 0x660180 <col:43, col:56> col:56 type 'SortLinkType':'SortLinkType'
|-FunctionDecl 0x660458 <line:106:1, col:56> col:8 OsSortLinkInit 'UINT32 (SortLinkAttribute *)'
| `-ParmVarDecl 0x660360 <col:23, col:42> col:42 sortLinkHeader 'SortLinkAttribute *'
|-FunctionDecl 0x6607b8 <main/hals/driver/../../los_compiler.h:327:23, main/los_sortlink.h:107:94> col:6 OsAdd2SortLink 'void (SortLinkList *, UINT64, UINT32, SortLinkType)'
| |-ParmVarDecl 0x660510 <col:21, col:35> col:35 node 'SortLinkList *'
| |-ParmVarDecl 0x660588 <col:41, col:48> col:48 startTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x660600 <col:59, col:66> col:66 waitTicks 'UINT32':'unsigned int'
| `-ParmVarDecl 0x660678 <col:77, col:90> col:90 type 'SortLinkType':'SortLinkType'
|-FunctionDecl 0x660918 <main/hals/driver/../../los_compiler.h:327:23, main/los_sortlink.h:108:41> col:6 OsDeleteSortLink 'void (SortLinkList *)'
| `-ParmVarDecl 0x660888 <col:23, col:37> col:37 node 'SortLinkList *'
|-FunctionDecl 0x660ae0 <line:109:1, col:89> col:8 OsSortLinkGetTargetExpireTime 'UINT64 (UINT64, const SortLinkList *)'
| |-ParmVarDecl 0x6609d0 <col:38, col:45> col:45 currTime 'UINT64':'unsigned long long'
| `-ParmVarDecl 0x660a48 <col:55, col:75> col:75 targetSortList 'const SortLinkList *'
|-FunctionDecl 0x660ce8 <line:110:1, col:75> col:8 OsSortLinkGetNextExpireTime 'UINT64 (const SortLinkAttribute *)'
| `-ParmVarDecl 0x660bf8 <col:36, col:61> col:61 sortLinkHeader 'const SortLinkAttribute *'
|-TypedefDecl 0x664cb8 <main/los_task.h:448:1, col:43> col:17 referenced TSK_ENTRY_FUNC 'void *(*)(UINT32)'
| |-PointerType 0x664c50 'void *(*)(UINT32)'
| | `-ParenType 0x664bf0 'void *(UINT32)' sugar
| |   `-FunctionProtoType 0x664bc0 'void *(UINT32)' cdecl
| |     |-PointerType 0x5544f0 'void *'
| |     | `-BuiltinType 0x553d30 'void'
| |     `-TypedefType 0x600160 'UINT32' sugar
| |       |-Typedef 0x5ffa90 'UINT32'
| |       `-BuiltinType 0x553e70 'unsigned int'
| `-FullComment 0x7351a0 <line:444:3, line:447:1>
|   |-ParagraphComment 0x735080 <line:444:3>
|   | `-TextComment 0x735050 <col:3> Text=" "
|   |-VerbatimLineComment 0x7350a0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x735110 <line:445:3, col:46>
|   | `-TextComment 0x7350e0 <col:3, col:46> Text=" Define the type of the task entry function."
|   `-ParagraphComment 0x735160 <line:447:1>
|     `-TextComment 0x735130 <col:1> Text=" "
|-RecordDecl 0x664d38 <line:456:9, line:464:1> line:456:16 struct tagTskInitParam definition
| |-FullComment 0x735360 <line:451:3, line:454:70>
| | |-ParagraphComment 0x735240 <line:451:3>
| | | `-TextComment 0x735210 <col:3> Text=" "
| | |-VerbatimLineComment 0x735260 <col:4, col:21> Text=" los_task"
| | |-ParagraphComment 0x7352d0 <line:452:3, col:65>
| | | `-TextComment 0x7352a0 <col:3, col:65> Text=" Define the structure of the parameters used for task creation."
| | `-ParagraphComment 0x735320 <line:454:3, col:70>
| |   `-TextComment 0x7352f0 <col:3, col:70> Text=" Information of specified parameters passed in during task creation."
| |-FieldDecl 0x664e10 <line:457:5, col:26> col:26 pfnTaskEntry 'TSK_ENTRY_FUNC':'void *(*)(UINT32)'
| | `-FullComment 0x735430 <col:57, col:96>
| |   `-ParagraphComment 0x735400 <col:57, col:96>
| |     `-TextComment 0x7353d0 <col:57, col:96> Text=" Task entrance function                 "
| |-FieldDecl 0x664e98 <line:458:5, col:26> col:26 usTaskPrio 'UINT16':'unsigned short'
| | `-FullComment 0x735500 <col:57, col:96>
| |   `-ParagraphComment 0x7354d0 <col:57, col:96>
| |     `-TextComment 0x7354a0 <col:57, col:96> Text=" Task priority                          "
| |-FieldDecl 0x664f28 <line:459:5, col:26> col:26 uwArg 'UINT32':'unsigned int'
| | `-FullComment 0x7355d0 <col:57, col:96>
| |   `-ParagraphComment 0x7355a0 <col:57, col:96>
| |     `-TextComment 0x735570 <col:57, col:96> Text=" Task parameters                        "
| |-FieldDecl 0x664fb8 <line:460:5, col:26> col:26 stackAddr 'UINTPTR':'unsigned int'
| | `-FullComment 0x7356a0 <col:57, col:96>
| |   `-ParagraphComment 0x735670 <col:57, col:96>
| |     `-TextComment 0x735640 <col:57, col:96> Text=" Task satck memory                      "
| |-FieldDecl 0x665048 <line:461:5, col:26> col:26 uwStackSize 'UINT32':'unsigned int'
| | `-FullComment 0x735770 <col:57, col:96>
| |   `-ParagraphComment 0x735740 <col:57, col:96>
| |     `-TextComment 0x735710 <col:57, col:96> Text=" Task stack size                        "
| |-FieldDecl 0x6650d8 <line:462:5, col:27> col:27 pcName 'CHAR *'
| | `-FullComment 0x735840 <col:57, col:96>
| |   `-ParagraphComment 0x735810 <col:57, col:96>
| |     `-TextComment 0x7357e0 <col:57, col:96> Text=" Task name                              "
| `-FieldDecl 0x665168 <line:463:5, col:26> col:26 uwResved 'UINT32':'unsigned int'
|   `-FullComment 0x735910 <col:57, col:96>
|     `-ParagraphComment 0x7358e0 <col:57, col:96>
|       `-TextComment 0x7358b0 <col:57, col:96> Text=" Reserved                               "
|-TypedefDecl 0x665248 <line:456:1, line:464:3> col:3 referenced TSK_INIT_PARAM_S 'struct tagTskInitParam':'struct tagTskInitParam'
| |-ElaboratedType 0x6651f0 'struct tagTskInitParam' sugar
| | `-RecordType 0x664dc0 'struct tagTskInitParam'
| |   `-Record 0x664d38 'tagTskInitParam'
| `-FullComment 0x735ad0 <line:451:3, line:454:70>
|   |-ParagraphComment 0x7359b0 <line:451:3>
|   | `-TextComment 0x735980 <col:3> Text=" "
|   |-VerbatimLineComment 0x7359d0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x735a40 <line:452:3, col:65>
|   | `-TextComment 0x735a10 <col:3, col:65> Text=" Define the structure of the parameters used for task creation."
|   `-ParagraphComment 0x735a90 <line:454:3, col:70>
|     `-TextComment 0x735a60 <col:3, col:70> Text=" Information of specified parameters passed in during task creation."
|-RecordDecl 0x665340 <line:482:9, line:500:1> line:482:16 struct tagTskInfo definition
| |-FullComment 0x735c40 <line:479:3, line:480:30>
| | |-ParagraphComment 0x735b70 <line:479:3>
| | | `-TextComment 0x735b40 <col:3> Text=" "
| | |-VerbatimLineComment 0x735b90 <col:4, col:21> Text=" los_task"
| | `-ParagraphComment 0x735c00 <line:480:3, col:30>
| |   `-TextComment 0x735bd0 <col:3, col:30> Text=" Task information structure."
| |-FieldDecl 0x6654b8 <line:483:5, col:48> col:25 acName 'CHAR [32]'
| | `-FullComment 0x735d10 <col:57, col:88>
| |   `-ParagraphComment 0x735ce0 <col:57, col:88>
| |     `-TextComment 0x735cb0 <col:57, col:88> Text=" Task entrance function         "
| |-FieldDecl 0x665548 <line:484:5, col:25> col:25 uwTaskID 'UINT32':'unsigned int'
| | `-FullComment 0x735de0 <col:57, col:88>
| |   `-ParagraphComment 0x735db0 <col:57, col:88>
| |     `-TextComment 0x735d80 <col:57, col:88> Text=" Task ID                        "
| |-FieldDecl 0x6655d8 <line:485:5, col:25> col:25 usTaskStatus 'UINT16':'unsigned short'
| | `-FullComment 0x735eb0 <col:57, col:88>
| |   `-ParagraphComment 0x735e80 <col:57, col:88>
| |     `-TextComment 0x735e50 <col:57, col:88> Text=" Task status                    "
| |-FieldDecl 0x665668 <line:486:5, col:25> col:25 usTaskPrio 'UINT16':'unsigned short'
| | `-FullComment 0x735f80 <col:57, col:88>
| |   `-ParagraphComment 0x735f50 <col:57, col:88>
| |     `-TextComment 0x735f20 <col:57, col:88> Text=" Task priority                  "
| |-FieldDecl 0x665700 <main/hals/driver/../../los_compiler.h:327:23, main/los_task.h:487:26> col:26 pTaskSem 'void *'
| | `-FullComment 0x736050 <col:57, col:88>
| |   `-ParagraphComment 0x736020 <col:57, col:88>
| |     `-TextComment 0x735ff0 <col:57, col:88> Text=" Semaphore pointer              "
| |-FieldDecl 0x665790 <main/hals/driver/../../los_compiler.h:327:23, main/los_task.h:488:26> col:26 pTaskMux 'void *'
| | `-FullComment 0x736120 <col:57, col:88>
| |   `-ParagraphComment 0x7360f0 <col:57, col:88>
| |     `-TextComment 0x7360c0 <col:57, col:88> Text=" Mutex pointer                  "
| |-FieldDecl 0x667080 <line:489:5, col:25> col:25 uwSemID 'UINT32':'unsigned int'
| | `-FullComment 0x7361f0 <col:57, col:88>
| |   `-ParagraphComment 0x7361c0 <col:57, col:88>
| |     `-TextComment 0x736190 <col:57, col:88> Text=" Sem ID                         "
| |-FieldDecl 0x667108 <line:490:5, col:25> col:25 uwMuxID 'UINT32':'unsigned int'
| | `-FullComment 0x7362c0 <col:57, col:88>
| |   `-ParagraphComment 0x736290 <col:57, col:88>
| |     `-TextComment 0x736260 <col:57, col:88> Text=" Mux ID                         "
| |-FieldDecl 0x6671c0 <line:491:5, col:25> col:25 uwEvent 'EVENT_CB_S':'struct tagEvent'
| | `-FullComment 0x736390 <col:57, col:88>
| |   `-ParagraphComment 0x736360 <col:57, col:88>
| |     `-TextComment 0x736330 <col:57, col:88> Text=" Event                          "
| |-FieldDecl 0x667248 <line:492:5, col:25> col:25 uwEventMask 'UINT32':'unsigned int'
| | `-FullComment 0x736460 <col:57, col:88>
| |   `-ParagraphComment 0x736430 <col:57, col:88>
| |     `-TextComment 0x736400 <col:57, col:88> Text=" Event mask                     "
| |-FieldDecl 0x6672d8 <line:493:5, col:25> col:25 uwStackSize 'UINT32':'unsigned int'
| | `-FullComment 0x736530 <col:57, col:88>
| |   `-ParagraphComment 0x736500 <col:57, col:88>
| |     `-TextComment 0x7364d0 <col:57, col:88> Text=" Task stack size                "
| |-FieldDecl 0x667368 <line:494:5, col:25> col:25 uwTopOfStack 'UINT32':'unsigned int'
| | `-FullComment 0x736600 <col:57, col:88>
| |   `-ParagraphComment 0x7365d0 <col:57, col:88>
| |     `-TextComment 0x7365a0 <col:57, col:88> Text=" Task stack top                 "
| |-FieldDecl 0x6673f8 <line:495:5, col:25> col:25 uwBottomOfStack 'UINT32':'unsigned int'
| | `-FullComment 0x7366d0 <col:57, col:88>
| |   `-ParagraphComment 0x7366a0 <col:57, col:88>
| |     `-TextComment 0x736670 <col:57, col:88> Text=" Task stack bottom              "
| |-FieldDecl 0x667488 <line:496:5, col:25> col:25 uwSP 'UINT32':'unsigned int'
| | `-FullComment 0x7367a0 <col:57, col:88>
| |   `-ParagraphComment 0x736770 <col:57, col:88>
| |     `-TextComment 0x736740 <col:57, col:88> Text=" Task SP pointer                "
| |-FieldDecl 0x667518 <line:497:5, col:25> col:25 uwCurrUsed 'UINT32':'unsigned int'
| | `-FullComment 0x736870 <col:57, col:88>
| |   `-ParagraphComment 0x736840 <col:57, col:88>
| |     `-TextComment 0x736810 <col:57, col:88> Text=" Current task stack usage       "
| |-FieldDecl 0x6675a8 <line:498:5, col:25> col:25 uwPeakUsed 'UINT32':'unsigned int'
| | `-FullComment 0x736940 <col:57, col:88>
| |   `-ParagraphComment 0x736910 <col:57, col:88>
| |     `-TextComment 0x7368e0 <col:57, col:88> Text=" Task stack usage peak          "
| `-FieldDecl 0x667638 <line:499:5, col:25> col:25 bOvf 'BOOL':'unsigned int'
|   `-FullComment 0x736a10 <col:57, col:114>
|     `-ParagraphComment 0x7369e0 <col:57, col:114>
|       `-TextComment 0x7369b0 <col:57, col:114> Text=" Flag that indicates whether a task stack overflow occurs "
|-TypedefDecl 0x667718 <line:482:1, line:500:3> col:3 referenced TSK_INFO_S 'struct tagTskInfo':'struct tagTskInfo'
| |-ElaboratedType 0x6676c0 'struct tagTskInfo' sugar
| | `-RecordType 0x6653c0 'struct tagTskInfo'
| |   `-Record 0x665340 'tagTskInfo'
| `-FullComment 0x736b80 <line:479:3, line:480:30>
|   |-ParagraphComment 0x736ab0 <line:479:3>
|   | `-TextComment 0x736a80 <col:3> Text=" "
|   |-VerbatimLineComment 0x736ad0 <col:4, col:21> Text=" los_task"
|   `-ParagraphComment 0x736b40 <line:480:3, col:30>
|     `-TextComment 0x736b10 <col:3, col:30> Text=" Task information structure."
|-FunctionDecl 0x6678b0 <line:540:1, col:36> col:13 LOS_Msleep 'void (UINT32)' extern
| |-ParmVarDecl 0x667820 <col:24, col:31> col:31 mSecs 'UINT32':'unsigned int'
| `-FullComment 0x7387f0 <line:515:3, line:538:12>
|   |-ParagraphComment 0x736c20 <line:515:3>
|   | `-TextComment 0x736bf0 <col:3> Text=" "
|   |-VerbatimLineComment 0x736c40 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x736cb0 <line:516:3>
|   | `-TextComment 0x736c80 <col:3> Text=" "
|   |-BlockCommandComment 0x736cd0 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0x736d30 <col:10, col:33>
|   |   `-TextComment 0x736d00 <col:10, col:33> Text=" Sleep the current task."
|   |-ParagraphComment 0x736d80 <line:518:3>
|   | `-TextComment 0x736d50 <col:3> Text=" "
|   |-BlockCommandComment 0x736da0 <col:4, line:520:55> Name="par"
|   | `-ParagraphComment 0x737e80 <line:518:8, line:520:55>
|   |   |-TextComment 0x736dd0 <line:518:8, col:20> Text=" Description:"
|   |   |-TextComment 0x736df0 <line:519:3, col:96> Text=" This API is used to delay the execution of the current task. The task is able to be scheduled"
|   |   `-TextComment 0x736e10 <line:520:3, col:55> Text=" after it is delayed for a specified number of Ticks."
|   |-ParagraphComment 0x737ed0 <line:522:3>
|   | `-TextComment 0x737ea0 <col:3> Text=" "
|   |-BlockCommandComment 0x737ef0 <col:4, line:531:8> Name="attention"
|   | `-ParagraphComment 0x738300 <line:523:3, line:531:8>
|   |   |-TextComment 0x737f20 <line:523:3> Text=" "
|   |   |-HTMLStartTagComment 0x737f40 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x737f80 <line:524:3> Text=" "
|   |   |-HTMLStartTagComment 0x737fa0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x737fe0 <col:8, col:103> Text="The task fails to be delayed if it is being delayed during interrupt processing or it is locked."
|   |   |-HTMLEndTagComment 0x738000 <col:104, col:108> Name="li"
|   |   |-TextComment 0x738030 <line:525:3> Text=" "
|   |   |-HTMLStartTagComment 0x738050 <col:4, col:7> Name="li"
|   |   |-TextComment 0x738090 <col:8, col:63> Text="If 0 is passed in and the task scheduling is not locked,"
|   |   |-TextComment 0x7380b0 <line:526:3, col:85> Text=" execute the next task in the queue of tasks with the priority of the current task."
|   |   |-TextComment 0x7380d0 <line:527:3, col:71> Text=" If no ready task with the priority of the current task is available,"
|   |   |-TextComment 0x7380f0 <line:528:3, col:85> Text=" the task scheduling will not occur, and the current task continues to be executed."
|   |   |-HTMLEndTagComment 0x738110 <col:86, col:90> Name="li"
|   |   |-TextComment 0x738140 <line:529:3> Text=" "
|   |   |-HTMLStartTagComment 0x738160 <col:4, col:7> Name="li"
|   |   |-TextComment 0x7381a0 <col:8, col:80> Text="The parameter passed in can not be equal to LOS_WAIT_FOREVER(0xFFFFFFFF)."
|   |   |-TextComment 0x7381c0 <line:530:3, col:112> Text=" If that happens, the task will not sleep 0xFFFFFFFF milliseconds or sleep forever but sleep 0xFFFFFFFF Ticks."
|   |   |-HTMLEndTagComment 0x7381e0 <col:113, col:117> Name="li"
|   |   |-TextComment 0x738210 <line:531:3> Text=" "
|   |   `-HTMLEndTagComment 0x738230 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x738350 <line:533:3>
|   | `-TextComment 0x738320 <col:3> Text=" "
|   |-ParamCommandComment 0x738370 <col:4, col:77> [in] implicitly Param="mSecs" ParamIndex=0
|   | `-ParagraphComment 0x738400 <col:16, col:77>
|   |   `-TextComment 0x7383d0 <col:16, col:77> Text=" [IN] Type #UINT32 Number of MS for which the task is delayed."
|   |-ParagraphComment 0x738450 <line:535:3>
|   | `-TextComment 0x738420 <col:3> Text=" "
|   |-BlockCommandComment 0x738470 <col:4, line:536:3> Name="retval"
|   | `-ParagraphComment 0x7384f0 <line:535:11, line:536:3>
|   |   |-TextComment 0x7384a0 <line:535:11, col:15> Text=" None"
|   |   `-TextComment 0x7384c0 <line:536:3> Text=" "
|   |-BlockCommandComment 0x738510 <col:4, line:538:3> Name="par"
|   | `-ParagraphComment 0x7386e0 <line:536:8, line:538:3>
|   |   |-TextComment 0x738540 <line:536:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x738560 <line:537:3> Text=" "
|   |   |-HTMLStartTagComment 0x738580 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x7385c0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x738600 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x738620 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x738650 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x738680 <line:538:3> Text=" "
|   `-BlockCommandComment 0x738700 <col:4, col:12> Name="see"
|     `-ParagraphComment 0x738760 <col:8, col:12>
|       `-TextComment 0x738730 <col:8, col:12> Text=" None"
|-FunctionDecl 0x667a20 <line:562:1, col:29> col:15 used LOS_Start 'UINT32 (void)' extern
| `-FullComment 0x7391d0 <line:543:3, line:560:7>
|   |-ParagraphComment 0x738890 <line:543:3>
|   | `-TextComment 0x738860 <col:3> Text=" "
|   |-VerbatimLineComment 0x7388b0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x738920 <line:544:3>
|   | `-TextComment 0x7388f0 <col:3> Text=" "
|   |-BlockCommandComment 0x738940 <col:4, col:48> Name="brief"
|   | `-ParagraphComment 0x7389a0 <col:10, col:48>
|   |   `-TextComment 0x738970 <col:10, col:48> Text=" System kernel initialization function."
|   |-ParagraphComment 0x7389f0 <line:546:3>
|   | `-TextComment 0x7389c0 <col:3> Text=" "
|   |-BlockCommandComment 0x738a10 <col:4, line:547:37> Name="par"
|   | `-ParagraphComment 0x738a90 <line:546:8, line:547:37>
|   |   |-TextComment 0x738a40 <line:546:8, col:20> Text=" Description:"
|   |   `-TextComment 0x738a60 <line:547:3, col:37> Text=" This API is used to start liteOS ."
|   |-ParagraphComment 0x738ae0 <line:549:3>
|   | `-TextComment 0x738ab0 <col:3> Text=" "
|   |-BlockCommandComment 0x738b00 <col:4, line:552:8> Name="attention"
|   | `-ParagraphComment 0x738cd0 <line:550:3, line:552:8>
|   |   |-TextComment 0x738b30 <line:550:3> Text=" "
|   |   |-HTMLStartTagComment 0x738b50 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x738b90 <line:551:3> Text=" "
|   |   |-HTMLStartTagComment 0x738bb0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x738bf0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x738c10 <col:13, col:17> Name="li"
|   |   |-TextComment 0x738c40 <line:552:3> Text=" "
|   |   `-HTMLEndTagComment 0x738c60 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x738d20 <line:554:3>
|   | `-TextComment 0x738cf0 <col:3> Text=" "
|   |-ParamCommandComment 0x738d40 <col:4, col:16> [in] implicitly Param=":"
|   | `-ParagraphComment 0x738dd0 <col:11, col:16>
|   |   `-TextComment 0x738da0 <col:11, col:16> Text=" None."
|   |-ParagraphComment 0x738e20 <line:556:3>
|   | `-TextComment 0x738df0 <col:3> Text=" "
|   |-BlockCommandComment 0x738e40 <col:4, col:75> Name="retval"
|   | `-ParagraphComment 0x738ea0 <col:11, col:75>
|   |   `-TextComment 0x738e70 <col:11, col:75> Text=" #LOS_OK                                  0:LiteOS start success."
|   |-ParagraphComment 0x738ef0 <line:558:3>
|   | `-TextComment 0x738ec0 <col:3> Text=" "
|   |-BlockCommandComment 0x738f10 <col:4, line:560:3> Name="par"
|   | `-ParagraphComment 0x7390e0 <line:558:8, line:560:3>
|   |   |-TextComment 0x738f40 <line:558:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x738f60 <line:559:3> Text=" "
|   |   |-HTMLStartTagComment 0x738f80 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x738fc0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x739000 <col:12, col:75> Text="los_config.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x739020 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0x739050 <col:81, col:85> Name="ul"
|   |   `-TextComment 0x739080 <line:560:3> Text=" "
|   `-BlockCommandComment 0x739100 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x739130 <<invalid sloc>>
|-FunctionDecl 0x667b58 <line:563:1, col:37> col:22 LOS_Reboot 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x667d90 <line:564:1, col:52> col:22 LOS_Panic 'void (const CHAR *, ...) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x667c08 <col:32, col:44> col:44 fmt 'const CHAR *'
|-FunctionDecl 0x667f00 <line:586:1, col:34> col:15 used LOS_KernelInit 'UINT32 (void)' extern
| `-FullComment 0x739bb0 <line:567:3, line:584:7>
|   |-ParagraphComment 0x739270 <line:567:3>
|   | `-TextComment 0x739240 <col:3> Text=" "
|   |-VerbatimLineComment 0x739290 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x739300 <line:568:3>
|   | `-TextComment 0x7392d0 <col:3> Text=" "
|   |-BlockCommandComment 0x739320 <col:4, col:48> Name="brief"
|   | `-ParagraphComment 0x739380 <col:10, col:48>
|   |   `-TextComment 0x739350 <col:10, col:48> Text=" System kernel initialization function."
|   |-ParagraphComment 0x7393d0 <line:570:3>
|   | `-TextComment 0x7393a0 <col:3> Text=" "
|   |-BlockCommandComment 0x7393f0 <col:4, line:571:71> Name="par"
|   | `-ParagraphComment 0x739470 <line:570:8, line:571:71>
|   |   |-TextComment 0x739420 <line:570:8, col:20> Text=" Description:"
|   |   `-TextComment 0x739440 <line:571:3, col:71> Text=" This API is used to Initialize kernel ,configure all system modules."
|   |-ParagraphComment 0x7394c0 <line:573:3>
|   | `-TextComment 0x739490 <col:3> Text=" "
|   |-BlockCommandComment 0x7394e0 <col:4, line:576:8> Name="attention"
|   | `-ParagraphComment 0x7396b0 <line:574:3, line:576:8>
|   |   |-TextComment 0x739510 <line:574:3> Text=" "
|   |   |-HTMLStartTagComment 0x739530 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x739570 <line:575:3> Text=" "
|   |   |-HTMLStartTagComment 0x739590 <col:4, col:7> Name="li"
|   |   |-TextComment 0x7395d0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x7395f0 <col:13, col:17> Name="li"
|   |   |-TextComment 0x739620 <line:576:3> Text=" "
|   |   `-HTMLEndTagComment 0x739640 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x739700 <line:578:3>
|   | `-TextComment 0x7396d0 <col:3> Text=" "
|   |-ParamCommandComment 0x739720 <col:4, col:16> [in] implicitly Param=":"
|   | `-ParagraphComment 0x7397b0 <col:11, col:16>
|   |   `-TextComment 0x739780 <col:11, col:16> Text=" None."
|   |-ParagraphComment 0x739800 <line:580:3>
|   | `-TextComment 0x7397d0 <col:3> Text=" "
|   |-BlockCommandComment 0x739820 <col:4, col:91> Name="retval"
|   | `-ParagraphComment 0x739880 <col:11, col:91>
|   |   `-TextComment 0x739850 <col:11, col:91> Text=" #LOS_OK                                  0:System kernel initialization success."
|   |-ParagraphComment 0x7398d0 <line:582:3>
|   | `-TextComment 0x7398a0 <col:3> Text=" "
|   |-BlockCommandComment 0x7398f0 <col:4, line:584:3> Name="par"
|   | `-ParagraphComment 0x739ac0 <line:582:8, line:584:3>
|   |   |-TextComment 0x739920 <line:582:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x739940 <line:583:3> Text=" "
|   |   |-HTMLStartTagComment 0x739960 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x7399a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x7399e0 <col:12, col:75> Text="los_config.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x739a00 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0x739a30 <col:81, col:85> Name="ul"
|   |   `-TextComment 0x739a60 <line:584:3> Text=" "
|   `-BlockCommandComment 0x739ae0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x739b10 <<invalid sloc>>
|-FunctionDecl 0x668648 <line:633:1, col:81> col:15 LOS_TaskCreateOnly 'UINT32 (UINT32 *, TSK_INIT_PARAM_S *)' extern
| |-ParmVarDecl 0x667fd8 <col:34, col:42> col:42 taskID 'UINT32 *'
| |-ParmVarDecl 0x668538 <col:50, col:68> col:68 taskInitParam 'TSK_INIT_PARAM_S *'
| `-FullComment 0x73d140 <line:589:3, line:631:22>
|   |-ParagraphComment 0x739c50 <line:589:3>
|   | `-TextComment 0x739c20 <col:3> Text=" "
|   |-VerbatimLineComment 0x739c70 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x739ce0 <line:590:3>
|   | `-TextComment 0x739cb0 <col:3> Text=" "
|   |-BlockCommandComment 0x739d00 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0x739d60 <col:10, col:36>
|   |   `-TextComment 0x739d30 <col:10, col:36> Text=" Create a task and suspend."
|   |-ParagraphComment 0x739db0 <line:592:3>
|   | `-TextComment 0x739d80 <col:3> Text=" "
|   |-BlockCommandComment 0x739dd0 <col:4, line:594:13> Name="par"
|   | `-ParagraphComment 0x73ba90 <line:592:8, line:594:13>
|   |   |-TextComment 0x739e00 <line:592:8, col:20> Text=" Description:"
|   |   |-TextComment 0x739e20 <line:593:3, col:115> Text=" This API is used to create a task and suspend it. This task will not be added to the queue of ready tasks before"
|   |   `-TextComment 0x739e40 <line:594:3, col:13> Text=" resume it."
|   |-ParagraphComment 0x73bae0 <line:596:3>
|   | `-TextComment 0x73bab0 <col:3> Text=" "
|   |-BlockCommandComment 0x73bb00 <col:4, line:613:8> Name="attention"
|   | `-ParagraphComment 0x73c440 <line:597:3, line:613:8>
|   |   |-TextComment 0x73bb30 <line:597:3> Text=" "
|   |   |-HTMLStartTagComment 0x73bb50 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x73bb90 <line:598:3> Text=" "
|   |   |-HTMLStartTagComment 0x73bbb0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73bbf0 <col:8, col:119> Text="During task creation, the task control block and task stack of the task that is previously automatically deleted"
|   |   |-TextComment 0x73bc10 <line:599:3, col:19> Text=" are deallocated."
|   |   |-HTMLEndTagComment 0x73bc30 <col:20, col:24> Name="li"
|   |   |-TextComment 0x73bc60 <line:600:3> Text=" "
|   |   |-HTMLStartTagComment 0x73bc80 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73bcc0 <col:8, col:62> Text="The task name is a pointer and is not allocated memory."
|   |   |-HTMLEndTagComment 0x73bce0 <col:63, col:67> Name="li"
|   |   |-TextComment 0x73bd10 <line:601:3> Text=" "
|   |   |-HTMLStartTagComment 0x73bd30 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73bd70 <col:8, col:119> Text="If the size of the task stack of the task to be created is 0, configure #LOSCFG_BASE_CORE_TSK_DEFAULT_STACK_SIZE"
|   |   |-TextComment 0x73bd90 <line:602:3, col:117> Text=" to specify the default task stack size. The stack size should be a reasonable value, if the size is too large, may"
|   |   |-TextComment 0x73bdb0 <line:603:3, col:27> Text=" cause memory exhaustion."
|   |   |-HTMLEndTagComment 0x73bdd0 <col:28, col:32> Name="li"
|   |   |-TextComment 0x73be00 <line:604:3> Text=" "
|   |   |-HTMLStartTagComment 0x73be20 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73be60 <col:8, col:114> Text="The task stack size must be aligned on the boundary of 8 bytes. The size is determined by whether it is big"
|   |   |-TextComment 0x73be80 <line:605:3, col:39> Text=" enough to avoid task stack overflow."
|   |   |-HTMLEndTagComment 0x73bea0 <col:40, col:44> Name="li"
|   |   |-TextComment 0x73bed0 <line:606:3> Text=" "
|   |   |-HTMLStartTagComment 0x73bef0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73bf30 <col:8, col:59> Text="Less parameter value indicates higher task priority."
|   |   |-HTMLEndTagComment 0x73bf50 <col:60, col:64> Name="li"
|   |   |-TextComment 0x73bf80 <line:607:3> Text=" "
|   |   |-HTMLStartTagComment 0x73bfa0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73bfe0 <col:8, col:36> Text="The task name cannot be null."
|   |   |-HTMLEndTagComment 0x73c000 <col:37, col:41> Name="li"
|   |   |-TextComment 0x73c030 <line:608:3> Text=" "
|   |   |-HTMLStartTagComment 0x73c050 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73c090 <col:8, col:65> Text="The pointer to the task executing function cannot be null."
|   |   |-HTMLEndTagComment 0x73c0b0 <col:66, col:70> Name="li"
|   |   |-TextComment 0x73c0e0 <line:609:3> Text=" "
|   |   |-HTMLStartTagComment 0x73c100 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73c140 <col:8, col:114> Text="The two parameters of this interface is pointer, it should be a correct value, otherwise, the system may be"
|   |   |-TextComment 0x73c160 <line:610:3, col:12> Text=" abnormal."
|   |   |-HTMLEndTagComment 0x73c180 <col:13, col:17> Name="li"
|   |   |-TextComment 0x73c1b0 <line:611:3> Text=" "
|   |   |-HTMLStartTagComment 0x73c1d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73c210 <col:8, col:115> Text="If user mode is enabled, user should input user stack pointer and size, the size must fit the stack pointer,"
|   |   |-TextComment 0x73c230 <line:612:3, col:47> Text=" uwStackSize remain as the kernel stack size."
|   |   |-HTMLEndTagComment 0x73c250 <col:48, col:52> Name="li"
|   |   |-TextComment 0x73c280 <line:613:3> Text=" "
|   |   `-HTMLEndTagComment 0x73c2a0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x73c490 <line:615:3>
|   | `-TextComment 0x73c460 <col:3> Text=" "
|   |-ParamCommandComment 0x73c4b0 <col:4, line:616:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x73c560 <line:615:18, line:616:3>
|   |   |-TextComment 0x73c510 <line:615:18, col:55> Text="        [OUT] Type  #UINT32 * Task ID."
|   |   `-TextComment 0x73c530 <line:616:3> Text=" "
|   |-ParamCommandComment 0x73c580 <col:4, col:85> [in] implicitly Param="taskInitParam" ParamIndex=1
|   | `-ParagraphComment 0x73c610 <col:25, col:85>
|   |   `-TextComment 0x73c5e0 <col:25, col:85> Text=" [IN]  Type  #TSK_INIT_PARAM_S * Parameter for task creation."
|   |-ParagraphComment 0x73c660 <line:618:3>
|   | `-TextComment 0x73c630 <col:3> Text=" "
|   |-BlockCommandComment 0x73c680 <col:4, line:619:3> Name="retval"
|   | `-ParagraphComment 0x73c700 <line:618:11, line:619:3>
|   |   |-TextComment 0x73c6b0 <line:618:11, col:85> Text=" #LOS_ERRNO_TSK_ID_INVALID        Invalid Task ID, param puwTaskID is NULL."
|   |   `-TextComment 0x73c6d0 <line:619:3> Text=" "
|   |-BlockCommandComment 0x73c720 <col:4, line:620:3> Name="retval"
|   | `-ParagraphComment 0x73c7a0 <line:619:11, line:620:3>
|   |   |-TextComment 0x73c750 <line:619:11, col:71> Text=" #LOS_ERRNO_TSK_PTR_NULL          Param pstInitParam is NULL."
|   |   `-TextComment 0x73c770 <line:620:3> Text=" "
|   |-BlockCommandComment 0x73c7c0 <col:4, line:621:3> Name="retval"
|   | `-ParagraphComment 0x73c840 <line:620:11, line:621:3>
|   |   |-TextComment 0x73c7f0 <line:620:11, col:66> Text=" #LOS_ERRNO_TSK_NAME_EMPTY        The task name is NULL."
|   |   `-TextComment 0x73c810 <line:621:3> Text=" "
|   |-BlockCommandComment 0x73c860 <col:4, line:622:3> Name="retval"
|   | `-ParagraphComment 0x73c8e0 <line:621:11, line:622:3>
|   |   |-TextComment 0x73c890 <line:621:11, col:70> Text=" #LOS_ERRNO_TSK_ENTRY_NULL        The task entrance is NULL."
|   |   `-TextComment 0x73c8b0 <line:622:3> Text=" "
|   |-BlockCommandComment 0x73c900 <col:4, line:623:3> Name="retval"
|   | `-ParagraphComment 0x73c980 <line:622:11, line:623:3>
|   |   |-TextComment 0x73c930 <line:622:11, col:68> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR       Incorrect task priority."
|   |   `-TextComment 0x73c950 <line:623:3> Text=" "
|   |-BlockCommandComment 0x73c9a0 <col:4, line:624:3> Name="retval"
|   | `-ParagraphComment 0x73ca20 <line:623:11, line:624:3>
|   |   |-TextComment 0x73c9d0 <line:623:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_LARGE   The task stack size is too large."
|   |   `-TextComment 0x73c9f0 <line:624:3> Text=" "
|   |-BlockCommandComment 0x73ca40 <col:4, line:625:3> Name="retval"
|   | `-ParagraphComment 0x73cac0 <line:624:11, line:625:3>
|   |   |-TextComment 0x73ca70 <line:624:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_SMALL   The task stack size is too small."
|   |   `-TextComment 0x73ca90 <line:625:3> Text=" "
|   |-BlockCommandComment 0x73cae0 <col:4, line:626:3> Name="retval"
|   | `-ParagraphComment 0x73cb60 <line:625:11, line:626:3>
|   |   |-TextComment 0x73cb10 <line:625:11, col:84> Text=" #LOS_ERRNO_TSK_TCB_UNAVAILABLE   No free task control block is available."
|   |   `-TextComment 0x73cb30 <line:626:3> Text=" "
|   |-BlockCommandComment 0x73cb80 <col:4, line:627:3> Name="retval"
|   | `-ParagraphComment 0x73cc00 <line:626:11, line:627:3>
|   |   |-TextComment 0x73cbb0 <line:626:11, col:82> Text=" #LOS_ERRNO_TSK_NO_MEMORY         Insufficient memory for task creation."
|   |   `-TextComment 0x73cbd0 <line:627:3> Text=" "
|   |-BlockCommandComment 0x73cc20 <col:4, line:628:3> Name="retval"
|   | `-ParagraphComment 0x73cca0 <line:627:11, line:628:3>
|   |   |-TextComment 0x73cc50 <line:627:11, col:77> Text=" #LOS_OK                          The task is successfully created."
|   |   `-TextComment 0x73cc70 <line:628:3> Text=" "
|   |-BlockCommandComment 0x73ccc0 <col:4, line:631:3> Name="par"
|   | `-ParagraphComment 0x73cfe0 <line:628:8, line:631:3>
|   |   |-TextComment 0x73ccf0 <line:628:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x73cd10 <line:629:3> Text=" "
|   |   |-HTMLStartTagComment 0x73cd30 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x73cd70 <col:8, col:11> Name="li"
|   |   |-TextComment 0x73cdb0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x73cdd0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x73ce00 <col:79, col:83> Name="ul"
|   |   |-TextComment 0x73ce30 <line:630:3> Text=" "
|   |   |-HTMLStartTagComment 0x73ce50 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x73ce90 <col:8, col:11> Name="li"
|   |   |-TextComment 0x73ced0 <col:12, col:82> Text="los_config.h: the header file that contains system configuration items."
|   |   |-HTMLEndTagComment 0x73cef0 <col:83, col:87> Name="li"
|   |   |-HTMLEndTagComment 0x73cf20 <col:88, col:92> Name="ul"
|   |   `-TextComment 0x73cf50 <line:631:3> Text=" "
|   `-BlockCommandComment 0x73d000 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x73d060 <col:8, col:22>
|       `-TextComment 0x73d030 <col:8, col:22> Text=" LOS_TaskDelete"
|-FunctionDecl 0x668848 <line:680:1, col:77> col:15 LOS_TaskCreate 'UINT32 (UINT32 *, TSK_INIT_PARAM_S *)' extern
| |-ParmVarDecl 0x668738 <col:30, col:38> col:38 taskID 'UINT32 *'
| |-ParmVarDecl 0x6687b0 <col:46, col:64> col:64 taskInitParam 'TSK_INIT_PARAM_S *'
| `-FullComment 0x73ed10 <line:636:3, line:678:22>
|   |-ParagraphComment 0x73d1e0 <line:636:3>
|   | `-TextComment 0x73d1b0 <col:3> Text=" "
|   |-VerbatimLineComment 0x73d200 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x73d270 <line:637:3>
|   | `-TextComment 0x73d240 <col:3> Text=" "
|   |-BlockCommandComment 0x73d290 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0x73d2f0 <col:10, col:24>
|   |   `-TextComment 0x73d2c0 <col:10, col:24> Text=" Create a task."
|   |-ParagraphComment 0x73d340 <line:639:3>
|   | `-TextComment 0x73d310 <col:3> Text=" "
|   |-BlockCommandComment 0x73d360 <col:4, line:642:65> Name="par"
|   | `-ParagraphComment 0x73d430 <line:639:8, line:642:65>
|   |   |-TextComment 0x73d390 <line:639:8, col:20> Text=" Description:"
|   |   |-TextComment 0x73d3b0 <line:640:3, col:113> Text=" This API is used to create a task. If the priority of the task created after system initialized is higher than"
|   |   |-TextComment 0x73d3d0 <line:641:3, col:83> Text=" the current task and task scheduling is not locked, it is scheduled for running."
|   |   `-TextComment 0x73d3f0 <line:642:3, col:65> Text=" If not, the created task is added to the queue of ready tasks."
|   |-ParagraphComment 0x73d480 <line:644:3>
|   | `-TextComment 0x73d450 <col:3> Text=" "
|   |-BlockCommandComment 0x73d4a0 <col:4, line:660:8> Name="attention"
|   | `-ParagraphComment 0x73e010 <line:645:3, line:660:8>
|   |   |-TextComment 0x73d4d0 <line:645:3> Text=" "
|   |   |-HTMLStartTagComment 0x73d4f0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x73d530 <line:646:3> Text=" "
|   |   |-HTMLStartTagComment 0x73d550 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73d590 <col:8, col:111> Text="During task creation, the task control block and task stack of the task that is previously automatically"
|   |   |-TextComment 0x73d5b0 <line:647:3, col:27> Text=" deleted are deallocated."
|   |   |-HTMLEndTagComment 0x73d5d0 <col:28, col:32> Name="li"
|   |   |-TextComment 0x73d600 <line:648:3> Text=" "
|   |   |-HTMLStartTagComment 0x73d620 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73d660 <col:8, col:62> Text="The task name is a pointer and is not allocated memory."
|   |   |-HTMLEndTagComment 0x73d680 <col:63, col:67> Name="li"
|   |   |-TextComment 0x73d6b0 <line:649:3> Text=" "
|   |   |-HTMLStartTagComment 0x73d6d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73d710 <col:8, col:119> Text="If the size of the task stack of the task to be created is 0, configure #LOSCFG_BASE_CORE_TSK_DEFAULT_STACK_SIZE"
|   |   |-TextComment 0x73d730 <line:650:3, col:42> Text=" to specify the default task stack size."
|   |   |-HTMLEndTagComment 0x73d750 <col:43, col:47> Name="li"
|   |   |-TextComment 0x73d780 <line:651:3> Text=" "
|   |   |-HTMLStartTagComment 0x73d7a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73d7e0 <col:8, col:114> Text="The task stack size must be aligned on the boundary of 8 bytes. The size is determined by whether it is big"
|   |   |-TextComment 0x73d800 <line:652:3, col:39> Text=" enough to avoid task stack overflow."
|   |   |-HTMLEndTagComment 0x73d820 <col:40, col:44> Name="li"
|   |   |-TextComment 0x73d850 <line:653:3> Text=" "
|   |   |-HTMLStartTagComment 0x73d870 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73d8b0 <col:8, col:59> Text="Less parameter value indicates higher task priority."
|   |   |-HTMLEndTagComment 0x73d8d0 <col:60, col:64> Name="li"
|   |   |-TextComment 0x73d900 <line:654:3> Text=" "
|   |   |-HTMLStartTagComment 0x73d920 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73d960 <col:8, col:36> Text="The task name cannot be null."
|   |   |-HTMLEndTagComment 0x73d980 <col:37, col:41> Name="li"
|   |   |-TextComment 0x73d9b0 <line:655:3> Text=" "
|   |   |-HTMLStartTagComment 0x73d9d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73da10 <col:8, col:65> Text="The pointer to the task executing function cannot be null."
|   |   |-HTMLEndTagComment 0x73da30 <col:66, col:70> Name="li"
|   |   |-TextComment 0x73dcc0 <line:656:3> Text=" "
|   |   |-HTMLStartTagComment 0x73dce0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73dd20 <col:8, col:114> Text="The two parameters of this interface is pointer, it should be a correct value, otherwise, the system may be"
|   |   |-TextComment 0x73dd40 <line:657:3, col:12> Text=" abnormal."
|   |   |-HTMLEndTagComment 0x73dd60 <col:13, col:17> Name="li"
|   |   |-TextComment 0x73dd90 <line:658:3> Text=" "
|   |   |-HTMLStartTagComment 0x73ddb0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73ddf0 <col:8, col:115> Text="If user mode is enabled, user should input user stack pointer and size, the size must fit the stack pointer,"
|   |   |-TextComment 0x73de10 <line:659:3, col:47> Text=" uwStackSize remain as the kernel stack size."
|   |   |-HTMLEndTagComment 0x73de30 <col:48, col:52> Name="li"
|   |   |-TextComment 0x73de60 <line:660:3> Text=" "
|   |   `-HTMLEndTagComment 0x73de80 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x73e060 <line:662:3>
|   | `-TextComment 0x73e030 <col:3> Text=" "
|   |-ParamCommandComment 0x73e080 <col:4, line:663:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x73e130 <line:662:18, line:663:3>
|   |   |-TextComment 0x73e0e0 <line:662:18, col:55> Text="        [OUT] Type  #UINT32 * Task ID."
|   |   `-TextComment 0x73e100 <line:663:3> Text=" "
|   |-ParamCommandComment 0x73e150 <col:4, col:85> [in] implicitly Param="taskInitParam" ParamIndex=1
|   | `-ParagraphComment 0x73e1e0 <col:25, col:85>
|   |   `-TextComment 0x73e1b0 <col:25, col:85> Text=" [IN]  Type  #TSK_INIT_PARAM_S * Parameter for task creation."
|   |-ParagraphComment 0x73e230 <line:665:3>
|   | `-TextComment 0x73e200 <col:3> Text=" "
|   |-BlockCommandComment 0x73e250 <col:4, line:666:3> Name="retval"
|   | `-ParagraphComment 0x73e2d0 <line:665:11, line:666:3>
|   |   |-TextComment 0x73e280 <line:665:11, col:85> Text=" #LOS_ERRNO_TSK_ID_INVALID        Invalid Task ID, param puwTaskID is NULL."
|   |   `-TextComment 0x73e2a0 <line:666:3> Text=" "
|   |-BlockCommandComment 0x73e2f0 <col:4, line:667:3> Name="retval"
|   | `-ParagraphComment 0x73e370 <line:666:11, line:667:3>
|   |   |-TextComment 0x73e320 <line:666:11, col:71> Text=" #LOS_ERRNO_TSK_PTR_NULL          Param pstInitParam is NULL."
|   |   `-TextComment 0x73e340 <line:667:3> Text=" "
|   |-BlockCommandComment 0x73e390 <col:4, line:668:3> Name="retval"
|   | `-ParagraphComment 0x73e410 <line:667:11, line:668:3>
|   |   |-TextComment 0x73e3c0 <line:667:11, col:66> Text=" #LOS_ERRNO_TSK_NAME_EMPTY        The task name is NULL."
|   |   `-TextComment 0x73e3e0 <line:668:3> Text=" "
|   |-BlockCommandComment 0x73e430 <col:4, line:669:3> Name="retval"
|   | `-ParagraphComment 0x73e4b0 <line:668:11, line:669:3>
|   |   |-TextComment 0x73e460 <line:668:11, col:70> Text=" #LOS_ERRNO_TSK_ENTRY_NULL        The task entrance is NULL."
|   |   `-TextComment 0x73e480 <line:669:3> Text=" "
|   |-BlockCommandComment 0x73e4d0 <col:4, line:670:3> Name="retval"
|   | `-ParagraphComment 0x73e550 <line:669:11, line:670:3>
|   |   |-TextComment 0x73e500 <line:669:11, col:68> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR       Incorrect task priority."
|   |   `-TextComment 0x73e520 <line:670:3> Text=" "
|   |-BlockCommandComment 0x73e570 <col:4, line:671:3> Name="retval"
|   | `-ParagraphComment 0x73e5f0 <line:670:11, line:671:3>
|   |   |-TextComment 0x73e5a0 <line:670:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_LARGE   The task stack size is too large."
|   |   `-TextComment 0x73e5c0 <line:671:3> Text=" "
|   |-BlockCommandComment 0x73e610 <col:4, line:672:3> Name="retval"
|   | `-ParagraphComment 0x73e690 <line:671:11, line:672:3>
|   |   |-TextComment 0x73e640 <line:671:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_SMALL   The task stack size is too small."
|   |   `-TextComment 0x73e660 <line:672:3> Text=" "
|   |-BlockCommandComment 0x73e6b0 <col:4, line:673:3> Name="retval"
|   | `-ParagraphComment 0x73e730 <line:672:11, line:673:3>
|   |   |-TextComment 0x73e6e0 <line:672:11, col:84> Text=" #LOS_ERRNO_TSK_TCB_UNAVAILABLE   No free task control block is available."
|   |   `-TextComment 0x73e700 <line:673:3> Text=" "
|   |-BlockCommandComment 0x73e750 <col:4, line:674:3> Name="retval"
|   | `-ParagraphComment 0x73e7d0 <line:673:11, line:674:3>
|   |   |-TextComment 0x73e780 <line:673:11, col:82> Text=" #LOS_ERRNO_TSK_NO_MEMORY         Insufficient memory for task creation."
|   |   `-TextComment 0x73e7a0 <line:674:3> Text=" "
|   |-BlockCommandComment 0x73e7f0 <col:4, line:675:3> Name="retval"
|   | `-ParagraphComment 0x73e870 <line:674:11, line:675:3>
|   |   |-TextComment 0x73e820 <line:674:11, col:77> Text=" #LOS_OK                          The task is successfully created."
|   |   `-TextComment 0x73e840 <line:675:3> Text=" "
|   |-BlockCommandComment 0x73e890 <col:4, line:678:3> Name="par"
|   | `-ParagraphComment 0x73ebb0 <line:675:8, line:678:3>
|   |   |-TextComment 0x73e8c0 <line:675:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x73e8e0 <line:676:3> Text=" "
|   |   |-HTMLStartTagComment 0x73e900 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x73e940 <col:8, col:11> Name="li"
|   |   |-TextComment 0x73e980 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x73e9a0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x73e9d0 <col:79, col:83> Name="ul"
|   |   |-TextComment 0x73ea00 <line:677:3> Text=" "
|   |   |-HTMLStartTagComment 0x73ea20 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x73ea60 <col:8, col:11> Name="li"
|   |   |-TextComment 0x73eaa0 <col:12, col:82> Text="los_config.h: the header file that contains system configuration items."
|   |   |-HTMLEndTagComment 0x73eac0 <col:83, col:87> Name="li"
|   |   |-HTMLEndTagComment 0x73eaf0 <col:88, col:92> Name="ul"
|   |   `-TextComment 0x73eb20 <line:678:3> Text=" "
|   `-BlockCommandComment 0x73ebd0 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x73ec30 <col:8, col:22>
|       `-TextComment 0x73ec00 <col:8, col:22> Text=" LOS_TaskDelete"
|-FunctionDecl 0x6689c8 <line:706:1, col:43> col:15 LOS_TaskResume 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x668938 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0x73f9d0 <line:683:3, line:704:23>
|   |-ParagraphComment 0x73edb0 <line:683:3>
|   | `-TextComment 0x73ed80 <col:3> Text=" "
|   |-VerbatimLineComment 0x73edd0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x73ee40 <line:684:3>
|   | `-TextComment 0x73ee10 <col:3> Text=" "
|   |-BlockCommandComment 0x73ee60 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0x73eec0 <col:10, col:24>
|   |   `-TextComment 0x73ee90 <col:10, col:24> Text=" Resume a task."
|   |-ParagraphComment 0x73ef10 <line:686:3>
|   | `-TextComment 0x73eee0 <col:3> Text=" "
|   |-BlockCommandComment 0x73ef30 <col:4, line:687:47> Name="par"
|   | `-ParagraphComment 0x73efb0 <line:686:8, line:687:47>
|   |   |-TextComment 0x73ef60 <line:686:8, col:20> Text=" Description:"
|   |   `-TextComment 0x73ef80 <line:687:3, col:47> Text=" This API is used to resume a suspended task."
|   |-ParagraphComment 0x73f000 <line:689:3>
|   | `-TextComment 0x73efd0 <col:3> Text=" "
|   |-BlockCommandComment 0x73f020 <col:4, line:694:8> Name="attention"
|   | `-ParagraphComment 0x73f2e0 <line:690:3, line:694:8>
|   |   |-TextComment 0x73f050 <line:690:3> Text=" "
|   |   |-HTMLStartTagComment 0x73f070 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x73f0b0 <line:691:3> Text=" "
|   |   |-HTMLStartTagComment 0x73f0d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73f110 <col:8, col:104> Text="If the task is delayed or blocked, resume the task without adding it to the queue of ready tasks."
|   |   |-HTMLEndTagComment 0x73f130 <col:105, col:109> Name="li"
|   |   |-TextComment 0x73f160 <line:692:3> Text=" "
|   |   |-HTMLStartTagComment 0x73f180 <col:4, col:7> Name="li"
|   |   |-TextComment 0x73f1c0 <col:8, col:119> Text="If the priority of the task resumed after system initialized is higher than the current task and task scheduling"
|   |   |-TextComment 0x73f1e0 <line:693:3, col:46> Text=" is not locked, it is scheduled for running."
|   |   |-HTMLEndTagComment 0x73f200 <col:47, col:51> Name="li"
|   |   |-TextComment 0x73f230 <line:694:3> Text=" "
|   |   `-HTMLEndTagComment 0x73f250 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x73f330 <line:696:3>
|   | `-TextComment 0x73f300 <col:3> Text=" "
|   |-ParamCommandComment 0x73f350 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x73f3e0 <col:18, col:94>
|   |   `-TextComment 0x73f3b0 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0x73f430 <line:698:3>
|   | `-TextComment 0x73f400 <col:3> Text=" "
|   |-BlockCommandComment 0x73f450 <col:4, line:699:3> Name="retval"
|   | `-ParagraphComment 0x73f4d0 <line:698:11, line:699:3>
|   |   |-TextComment 0x73f480 <line:698:11, col:59> Text=" #LOS_ERRNO_TSK_ID_INVALID        Invalid Task ID"
|   |   `-TextComment 0x73f4a0 <line:699:3> Text=" "
|   |-BlockCommandComment 0x73f4f0 <col:4, line:700:3> Name="retval"
|   | `-ParagraphComment 0x73f570 <line:699:11, line:700:3>
|   |   |-TextComment 0x73f520 <line:699:11, col:68> Text=" #LOS_ERRNO_TSK_NOT_CREATED       The task is not created."
|   |   `-TextComment 0x73f540 <line:700:3> Text=" "
|   |-BlockCommandComment 0x73f590 <col:4, line:701:3> Name="retval"
|   | `-ParagraphComment 0x73f610 <line:700:11, line:701:3>
|   |   |-TextComment 0x73f5c0 <line:700:11, col:70> Text=" #LOS_ERRNO_TSK_NOT_SUSPENDED     The task is not suspended."
|   |   `-TextComment 0x73f5e0 <line:701:3> Text=" "
|   |-BlockCommandComment 0x73f630 <col:4, line:702:3> Name="retval"
|   | `-ParagraphComment 0x73f6b0 <line:701:11, line:702:3>
|   |   |-TextComment 0x73f660 <line:701:11, col:77> Text=" #LOS_OK                          The task is successfully resumed."
|   |   `-TextComment 0x73f680 <line:702:3> Text=" "
|   |-BlockCommandComment 0x73f6d0 <col:4, line:704:3> Name="par"
|   | `-ParagraphComment 0x73f8a0 <line:702:8, line:704:3>
|   |   |-TextComment 0x73f700 <line:702:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x73f720 <line:703:3> Text=" "
|   |   |-HTMLStartTagComment 0x73f740 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x73f780 <col:8, col:11> Name="li"
|   |   |-TextComment 0x73f7c0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x73f7e0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x73f810 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x73f840 <line:704:3> Text=" "
|   `-BlockCommandComment 0x73f8c0 <col:4, col:23> Name="see"
|     `-ParagraphComment 0x73f920 <col:8, col:23>
|       `-TextComment 0x73f8f0 <col:8, col:23> Text=" LOS_TaskSuspend"
|-FunctionDecl 0x668b38 <line:735:1, col:44> col:15 LOS_TaskSuspend 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x668aa8 <col:31, col:38> col:38 taskID 'UINT32':'unsigned int'
| `-FullComment 0x740ae0 <line:709:3, line:733:22>
|   |-ParagraphComment 0x73fa70 <line:709:3>
|   | `-TextComment 0x73fa40 <col:3> Text=" "
|   |-VerbatimLineComment 0x73fa90 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x73fb00 <line:710:3>
|   | `-TextComment 0x73fad0 <col:3> Text=" "
|   |-BlockCommandComment 0x73fb20 <col:4, col:25> Name="brief"
|   | `-ParagraphComment 0x73fb80 <col:10, col:25>
|   |   `-TextComment 0x73fb50 <col:10, col:25> Text=" Suspend a task."
|   |-ParagraphComment 0x73fbd0 <line:712:3>
|   | `-TextComment 0x73fba0 <col:3> Text=" "
|   |-BlockCommandComment 0x73fbf0 <col:4, line:713:108> Name="par"
|   | `-ParagraphComment 0x73fc70 <line:712:8, line:713:108>
|   |   |-TextComment 0x73fc20 <line:712:8, col:20> Text=" Description:"
|   |   `-TextComment 0x73fc40 <line:713:3, col:108> Text=" This API is used to suspend a specified task, and the task will be removed from the queue of ready tasks."
|   |-ParagraphComment 0x73ff10 <line:715:3>
|   | `-TextComment 0x73fc90 <col:3> Text=" "
|   |-BlockCommandComment 0x73ff30 <col:4, line:719:8> Name="attention"
|   | `-ParagraphComment 0x7401d0 <line:716:3, line:719:8>
|   |   |-TextComment 0x73ff60 <line:716:3> Text=" "
|   |   |-HTMLStartTagComment 0x73ff80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x73ffc0 <line:717:3> Text=" "
|   |   |-HTMLStartTagComment 0x73ffe0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x740020 <col:8, col:63> Text="The task that is running and locked cannot be suspended."
|   |   |-HTMLEndTagComment 0x740040 <col:64, col:68> Name="li"
|   |   |-TextComment 0x740070 <line:718:3> Text=" "
|   |   |-HTMLStartTagComment 0x740090 <col:4, col:7> Name="li"
|   |   |-TextComment 0x7400d0 <col:8, col:56> Text="The idle task and swtmr task cannot be suspended."
|   |   |-HTMLEndTagComment 0x7400f0 <col:57, col:61> Name="li"
|   |   |-TextComment 0x740120 <line:719:3> Text=" "
|   |   `-HTMLEndTagComment 0x740140 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x740220 <line:721:3>
|   | `-TextComment 0x7401f0 <col:3> Text=" "
|   |-ParamCommandComment 0x740240 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x7402d0 <col:18, col:94>
|   |   `-TextComment 0x7402a0 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0x740320 <line:723:3>
|   | `-TextComment 0x7402f0 <col:3> Text=" "
|   |-BlockCommandComment 0x740340 <col:4, line:724:3> Name="retval"
|   | `-ParagraphComment 0x7403c0 <line:723:11, line:724:3>
|   |   |-TextComment 0x740370 <line:723:11, col:110> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE                  Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0x740390 <line:724:3> Text=" "
|   |-BlockCommandComment 0x7403e0 <col:4, line:725:3> Name="retval"
|   | `-ParagraphComment 0x740460 <line:724:11, line:725:3>
|   |   |-TextComment 0x740410 <line:724:11, col:111> Text=" #LOS_ERRNO_TSK_SUSPEND_SWTMR_NOT_ALLOWED     Check the task ID and do not operate on the swtmr task."
|   |   `-TextComment 0x740430 <line:725:3> Text=" "
|   |-BlockCommandComment 0x740480 <col:4, line:726:3> Name="retval"
|   | `-ParagraphComment 0x740500 <line:725:11, line:726:3>
|   |   |-TextComment 0x7404b0 <line:725:11, col:71> Text=" #LOS_ERRNO_TSK_ID_INVALID                    Invalid Task ID"
|   |   `-TextComment 0x7404d0 <line:726:3> Text=" "
|   |-BlockCommandComment 0x740520 <col:4, line:727:3> Name="retval"
|   | `-ParagraphComment 0x7405a0 <line:726:11, line:727:3>
|   |   |-TextComment 0x740550 <line:726:11, col:80> Text=" #LOS_ERRNO_TSK_NOT_CREATED                   The task is not created."
|   |   `-TextComment 0x740570 <line:727:3> Text=" "
|   |-BlockCommandComment 0x7405c0 <col:4, line:728:3> Name="retval"
|   | `-ParagraphComment 0x740640 <line:727:11, line:728:3>
|   |   |-TextComment 0x7405f0 <line:727:11, col:86> Text=" #LOS_ERRNO_TSK_ALREADY_SUSPENDED             The task is already suspended."
|   |   `-TextComment 0x740610 <line:728:3> Text=" "
|   |-BlockCommandComment 0x740660 <col:4, line:730:3> Name="retval"
|   | `-ParagraphComment 0x740710 <line:728:11, line:730:3>
|   |   |-TextComment 0x740690 <line:728:11, col:116> Text=" #LOS_ERRNO_TSK_SUSPEND_LOCKED                The task being suspended is current task and task scheduling"
|   |   |-TextComment 0x7406b0 <line:729:3, col:66> Text="                                                      is locked."
|   |   `-TextComment 0x7406d0 <line:730:3> Text=" "
|   |-BlockCommandComment 0x740730 <col:4, line:731:3> Name="retval"
|   | `-ParagraphComment 0x7407b0 <line:730:11, line:731:3>
|   |   |-TextComment 0x740760 <line:730:11, col:91> Text=" #LOS_OK                                      The task is successfully suspended."
|   |   `-TextComment 0x740780 <line:731:3> Text=" "
|   |-BlockCommandComment 0x7407d0 <col:4, line:733:3> Name="par"
|   | `-ParagraphComment 0x7409a0 <line:731:8, line:733:3>
|   |   |-TextComment 0x740800 <line:731:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x740820 <line:732:3> Text=" "
|   |   |-HTMLStartTagComment 0x740840 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x740880 <col:8, col:11> Name="li"
|   |   |-TextComment 0x7408c0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x7408e0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x740910 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x740940 <line:733:3> Text=" "
|   `-BlockCommandComment 0x7409c0 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x740a20 <col:8, col:22>
|       `-TextComment 0x7409f0 <col:8, col:22> Text=" LOS_TaskResume"
|-FunctionDecl 0x668ca8 <line:763:1, col:43> col:15 LOS_TaskDelete 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x668c18 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0x741910 <line:738:3, line:761:43>
|   |-ParagraphComment 0x740b80 <line:738:3>
|   | `-TextComment 0x740b50 <col:3> Text=" "
|   |-VerbatimLineComment 0x740ba0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x740c10 <line:739:3>
|   | `-TextComment 0x740be0 <col:3> Text=" "
|   |-BlockCommandComment 0x740c30 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0x740c90 <col:10, col:24>
|   |   `-TextComment 0x740c60 <col:10, col:24> Text=" Delete a task."
|   |-ParagraphComment 0x740ce0 <line:741:3>
|   | `-TextComment 0x740cb0 <col:3> Text=" "
|   |-BlockCommandComment 0x740d00 <col:4, line:742:115> Name="par"
|   | `-ParagraphComment 0x740d80 <line:741:8, line:742:115>
|   |   |-TextComment 0x740d30 <line:741:8, col:20> Text=" Description:"
|   |   `-TextComment 0x740d50 <line:742:3, col:115> Text=" This API is used to delete a specified task and release the resources for its task stack and task control block."
|   |-ParagraphComment 0x740dd0 <line:744:3>
|   | `-TextComment 0x740da0 <col:3> Text=" "
|   |-BlockCommandComment 0x740df0 <col:4, line:750:8> Name="attention"
|   | `-ParagraphComment 0x741180 <line:745:3, line:750:8>
|   |   |-TextComment 0x740e20 <line:745:3> Text=" "
|   |   |-HTMLStartTagComment 0x740e40 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x740e80 <line:746:3> Text=" "
|   |   |-HTMLStartTagComment 0x740ea0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x740ee0 <col:8, col:54> Text="The idle task and swtmr task cannot be deleted."
|   |   |-HTMLEndTagComment 0x740f00 <col:55, col:59> Name="li"
|   |   |-TextComment 0x740f30 <line:747:3> Text=" "
|   |   |-HTMLStartTagComment 0x740f50 <col:4, col:7> Name="li"
|   |   |-TextComment 0x740f90 <col:8, col:59> Text="If delete current task maybe cause unexpected error."
|   |   |-HTMLEndTagComment 0x740fb0 <col:60, col:64> Name="li"
|   |   |-TextComment 0x740fe0 <line:748:3> Text=" "
|   |   |-HTMLStartTagComment 0x741000 <col:4, col:7> Name="li"
|   |   |-TextComment 0x741040 <col:8, col:110> Text="If a task get a mutex is deleted or automatically deleted before release this mutex, other tasks pended"
|   |   |-TextComment 0x741060 <line:749:3, col:39> Text=" this mutex maybe never be shchduled."
|   |   |-HTMLEndTagComment 0x741080 <col:40, col:44> Name="li"
|   |   |-TextComment 0x7410b0 <line:750:3> Text=" "
|   |   `-HTMLEndTagComment 0x7410d0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x7411d0 <line:752:3>
|   | `-TextComment 0x7411a0 <col:3> Text=" "
|   |-ParamCommandComment 0x7411f0 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x741280 <col:18, col:94>
|   |   `-TextComment 0x741250 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0x7412d0 <line:754:3>
|   | `-TextComment 0x7412a0 <col:3> Text=" "
|   |-BlockCommandComment 0x7412f0 <col:4, line:755:3> Name="retval"
|   | `-ParagraphComment 0x741370 <line:754:11, line:755:3>
|   |   |-TextComment 0x741320 <line:754:11, col:110> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE                  Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0x741340 <line:755:3> Text=" "
|   |-BlockCommandComment 0x741390 <col:4, line:756:3> Name="retval"
|   | `-ParagraphComment 0x741410 <line:755:11, line:756:3>
|   |   |-TextComment 0x7413c0 <line:755:11, col:111> Text=" #LOS_ERRNO_TSK_SUSPEND_SWTMR_NOT_ALLOWED     Check the task ID and do not operate on the swtmr task."
|   |   `-TextComment 0x7413e0 <line:756:3> Text=" "
|   |-BlockCommandComment 0x741430 <col:4, line:757:3> Name="retval"
|   | `-ParagraphComment 0x7414b0 <line:756:11, line:757:3>
|   |   |-TextComment 0x741460 <line:756:11, col:71> Text=" #LOS_ERRNO_TSK_ID_INVALID                    Invalid Task ID"
|   |   `-TextComment 0x741480 <line:757:3> Text=" "
|   |-BlockCommandComment 0x7414d0 <col:4, line:758:3> Name="retval"
|   | `-ParagraphComment 0x741550 <line:757:11, line:758:3>
|   |   |-TextComment 0x741500 <line:757:11, col:80> Text=" #LOS_ERRNO_TSK_NOT_CREATED                   The task is not created."
|   |   `-TextComment 0x741520 <line:758:3> Text=" "
|   |-BlockCommandComment 0x741570 <col:4, line:759:3> Name="retval"
|   | `-ParagraphComment 0x7415f0 <line:758:11, line:759:3>
|   |   |-TextComment 0x7415a0 <line:758:11, col:89> Text=" #LOS_OK                                      The task is successfully deleted."
|   |   `-TextComment 0x7415c0 <line:759:3> Text=" "
|   |-BlockCommandComment 0x741610 <col:4, line:761:3> Name="par"
|   | `-ParagraphComment 0x7417e0 <line:759:8, line:761:3>
|   |   |-TextComment 0x741640 <line:759:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x741660 <line:760:3> Text=" "
|   |   |-HTMLStartTagComment 0x741680 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x7416c0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x741700 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x741720 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x741750 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x741780 <line:761:3> Text=" "
|   `-BlockCommandComment 0x741800 <col:4, col:43> Name="see"
|     `-ParagraphComment 0x741860 <col:8, col:43>
|       `-TextComment 0x741830 <col:8, col:43> Text=" LOS_TaskCreate | LOS_TaskCreateOnly"
|-FunctionDecl 0x668e18 <line:794:1, col:40> col:15 LOS_TaskDelay 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x668d88 <col:29, col:36> col:36 tick 'UINT32':'unsigned int'
| `-FullComment 0x7427b0 <line:766:3, line:792:7>
|   |-ParagraphComment 0x7419b0 <line:766:3>
|   | `-TextComment 0x741980 <col:3> Text=" "
|   |-VerbatimLineComment 0x7419d0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x741a40 <line:767:3>
|   | `-TextComment 0x741a10 <col:3> Text=" "
|   |-BlockCommandComment 0x741a60 <col:4, col:23> Name="brief"
|   | `-ParagraphComment 0x741ac0 <col:10, col:23>
|   |   `-TextComment 0x741a90 <col:10, col:23> Text=" Delay a task."
|   |-ParagraphComment 0x741b10 <line:769:3>
|   | `-TextComment 0x741ae0 <col:3> Text=" "
|   |-BlockCommandComment 0x741b30 <col:4, line:771:35> Name="par"
|   | `-ParagraphComment 0x741be0 <line:769:8, line:771:35>
|   |   |-TextComment 0x741b60 <line:769:8, col:20> Text=" Description:"
|   |   |-TextComment 0x741b80 <line:770:3, col:116> Text=" This API is used to delay the execution of the current task. The task is able to be scheduled after it is delayed"
|   |   `-TextComment 0x741ba0 <line:771:3, col:35> Text=" for a specified number of Ticks."
|   |-ParagraphComment 0x741c30 <line:773:3>
|   | `-TextComment 0x741c00 <col:3> Text=" "
|   |-BlockCommandComment 0x741c50 <col:4, line:781:8> Name="attention"
|   | `-ParagraphComment 0x742050 <line:774:3, line:781:8>
|   |   |-TextComment 0x741c80 <line:774:3> Text=" "
|   |   |-HTMLStartTagComment 0x741ca0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x741ce0 <line:775:3> Text=" "
|   |   |-HTMLStartTagComment 0x741d00 <col:4, col:7> Name="li"
|   |   |-TextComment 0x741d40 <col:8, col:103> Text="The task fails to be delayed if it is being delayed during interrupt processing or it is locked."
|   |   |-HTMLEndTagComment 0x741d60 <col:104, col:108> Name="li"
|   |   |-TextComment 0x741d90 <line:776:3> Text=" "
|   |   |-HTMLStartTagComment 0x741db0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x741df0 <col:8, col:112> Text="If 0 is passed in and the task scheduling is not locked, execute the next task in the queue of tasks with"
|   |   |-TextComment 0x741e10 <line:777:3, col:41> Text=" the same priority of the current task."
|   |   |-TextComment 0x741e30 <line:778:3, col:115> Text=" If no ready task with the priority of the current task is available, the task scheduling will not occur, and the"
|   |   |-TextComment 0x741e50 <line:779:3, col:41> Text=" current task continues to be executed."
|   |   |-HTMLEndTagComment 0x741e70 <col:42, col:46> Name="li"
|   |   |-TextComment 0x741ea0 <line:780:3> Text=" "
|   |   |-HTMLStartTagComment 0x741ec0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x741f20 <col:8, col:68> Text="Using the interface before system initialized is not allowed."
|   |   |-HTMLEndTagComment 0x741f40 <col:69, col:73> Name="li"
|   |   |-TextComment 0x741f70 <line:781:3> Text=" "
|   |   `-HTMLEndTagComment 0x741f90 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x7420a0 <line:783:3>
|   | `-TextComment 0x742070 <col:3> Text=" "
|   |-ParamCommandComment 0x7420c0 <col:4, col:80> [in] implicitly Param="tick" ParamIndex=0
|   | `-ParagraphComment 0x742150 <col:16, col:80>
|   |   `-TextComment 0x742120 <col:16, col:80> Text=" [IN] Type #UINT32 Number of Ticks for which the task is delayed."
|   |-ParagraphComment 0x7421a0 <line:785:3>
|   | `-TextComment 0x742170 <col:3> Text=" "
|   |-BlockCommandComment 0x7421c0 <col:4, line:786:3> Name="retval"
|   | `-ParagraphComment 0x742240 <line:785:11, line:786:3>
|   |   |-TextComment 0x7421f0 <line:785:11, col:94> Text=" #LOS_ERRNO_TSK_DELAY_IN_INT              The task delay occurs during an interrupt."
|   |   `-TextComment 0x742210 <line:786:3> Text=" "
|   |-BlockCommandComment 0x742260 <col:4, line:787:3> Name="retval"
|   | `-ParagraphComment 0x7422e0 <line:786:11, line:787:3>
|   |   |-TextComment 0x742290 <line:786:11, col:109> Text=" #LOS_ERRNO_TSK_DELAY_IN_LOCK             The task delay occurs when the task scheduling is locked."
|   |   `-TextComment 0x7422b0 <line:787:3> Text=" "
|   |-BlockCommandComment 0x742300 <col:4, line:788:3> Name="retval"
|   | `-ParagraphComment 0x742380 <line:787:11, line:788:3>
|   |   |-TextComment 0x742330 <line:787:11, col:67> Text=" #LOS_ERRNO_TSK_ID_INVALID                Invalid Task ID"
|   |   `-TextComment 0x742350 <line:788:3> Text=" "
|   |-BlockCommandComment 0x7423a0 <col:4, line:789:3> Name="retval"
|   | `-ParagraphComment 0x742420 <line:788:11, line:789:3>
|   |   |-TextComment 0x7423d0 <line:788:11, col:112> Text=" #LOS_ERRNO_TSK_YIELD_NOT_ENOUGH_TASK     No tasks with the same priority is available for scheduling."
|   |   `-TextComment 0x7423f0 <line:789:3> Text=" "
|   |-BlockCommandComment 0x742440 <col:4, line:790:3> Name="retval"
|   | `-ParagraphComment 0x7424c0 <line:789:11, line:790:3>
|   |   |-TextComment 0x742470 <line:789:11, col:85> Text=" #LOS_OK                                  The task is successfully delayed."
|   |   `-TextComment 0x742490 <line:790:3> Text=" "
|   |-BlockCommandComment 0x7424e0 <col:4, line:792:3> Name="par"
|   | `-ParagraphComment 0x7426b0 <line:790:8, line:792:3>
|   |   |-TextComment 0x742510 <line:790:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x742530 <line:791:3> Text=" "
|   |   |-HTMLStartTagComment 0x742550 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x742590 <col:8, col:11> Name="li"
|   |   |-TextComment 0x7425d0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x7425f0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x742620 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x742650 <line:792:3> Text=" "
|   `-BlockCommandComment 0x7426d0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x742700 <<invalid sloc>>
|-FunctionDecl 0x668f80 <line:817:1, col:30> col:13 LOS_TaskLock 'void (void)' extern
| `-FullComment 0x743240 <line:797:3, line:815:22>
|   |-ParagraphComment 0x742850 <line:797:3>
|   | `-TextComment 0x742820 <col:3> Text=" "
|   |-VerbatimLineComment 0x742870 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x7428e0 <line:798:3>
|   | `-TextComment 0x7428b0 <col:3> Text=" "
|   |-BlockCommandComment 0x742900 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0x742960 <col:10, col:35>
|   |   `-TextComment 0x742930 <col:10, col:35> Text=" Lock the task scheduling."
|   |-ParagraphComment 0x7429b0 <line:800:3>
|   | `-TextComment 0x742980 <col:3> Text=" "
|   |-BlockCommandComment 0x7429d0 <col:4, line:801:112> Name="par"
|   | `-ParagraphComment 0x742a50 <line:800:8, line:801:112>
|   |   |-TextComment 0x742a00 <line:800:8, col:20> Text=" Description:"
|   |   `-TextComment 0x742a20 <line:801:3, col:112> Text=" This API is used to lock the task scheduling. Task switching will not occur if the task scheduling is locked."
|   |-ParagraphComment 0x742aa0 <line:803:3>
|   | `-TextComment 0x742a70 <col:3> Text=" "
|   |-BlockCommandComment 0x742ac0 <col:4, line:808:8> Name="attention"
|   | `-ParagraphComment 0x742d80 <line:804:3, line:808:8>
|   |   |-TextComment 0x742af0 <line:804:3> Text=" "
|   |   |-HTMLStartTagComment 0x742b10 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x742b50 <line:805:3> Text=" "
|   |   |-HTMLStartTagComment 0x742b70 <col:4, col:7> Name="li"
|   |   |-TextComment 0x742bb0 <col:8, col:113> Text="If the task scheduling is locked, but interrupts are not disabled, tasks are still able to be interrupted."
|   |   |-HTMLEndTagComment 0x742bd0 <col:114, col:118> Name="li"
|   |   |-TextComment 0x742c00 <line:806:3> Text=" "
|   |   |-HTMLStartTagComment 0x742c20 <col:4, col:7> Name="li"
|   |   |-TextComment 0x742c60 <col:8, col:117> Text="One is added to the number of task scheduling locks if this API is called. The number of locks is decreased by"
|   |   |-TextComment 0x742c80 <line:807:3, col:107> Text=" one if the task scheduling is unlocked. Therefore, this API should be used together with LOS_TaskUnlock."
|   |   |-HTMLEndTagComment 0x742ca0 <col:108, col:112> Name="li"
|   |   |-TextComment 0x742cd0 <line:808:3> Text=" "
|   |   `-HTMLEndTagComment 0x742cf0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x742dd0 <line:810:3>
|   | `-TextComment 0x742da0 <col:3> Text=" "
|   |-ParamCommandComment 0x742df0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x742e50 <<invalid sloc>>
|   |-ParagraphComment 0x742ea0 <line:812:3>
|   | `-TextComment 0x742e70 <col:3> Text=" "
|   |-BlockCommandComment 0x742ec0 <col:4, line:813:3> Name="retval"
|   | `-ParagraphComment 0x742f40 <line:812:11, line:813:3>
|   |   |-TextComment 0x742ef0 <line:812:11, col:16> Text=" None."
|   |   `-TextComment 0x742f10 <line:813:3> Text=" "
|   |-BlockCommandComment 0x742f60 <col:4, line:815:3> Name="par"
|   | `-ParagraphComment 0x743130 <line:813:8, line:815:3>
|   |   |-TextComment 0x742f90 <line:813:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x742fb0 <line:814:3> Text=" "
|   |   |-HTMLStartTagComment 0x742fd0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x743010 <col:8, col:11> Name="li"
|   |   |-TextComment 0x743050 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x743070 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x7430a0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x7430d0 <line:815:3> Text=" "
|   `-BlockCommandComment 0x743150 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x7431b0 <col:8, col:22>
|       `-TextComment 0x743180 <col:8, col:22> Text=" LOS_TaskUnlock"
|-FunctionDecl 0x6690e0 <line:840:1, col:32> col:13 LOS_TaskUnlock 'void (void)' extern
| `-FullComment 0x743c30 <line:820:3, line:838:20>
|   |-ParagraphComment 0x7432e0 <line:820:3>
|   | `-TextComment 0x7432b0 <col:3> Text=" "
|   |-VerbatimLineComment 0x743300 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x743370 <line:821:3>
|   | `-TextComment 0x743340 <col:3> Text=" "
|   |-BlockCommandComment 0x743390 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0x7433f0 <col:10, col:37>
|   |   `-TextComment 0x7433c0 <col:10, col:37> Text=" Unlock the task scheduling."
|   |-ParagraphComment 0x743440 <line:823:3>
|   | `-TextComment 0x743410 <col:3> Text=" "
|   |-BlockCommandComment 0x743460 <col:4, line:825:119> Name="par"
|   | `-ParagraphComment 0x743510 <line:823:8, line:825:119>
|   |   |-TextComment 0x743490 <line:823:8, col:20> Text=" Description:"
|   |   |-TextComment 0x7434b0 <line:824:3, col:114> Text=" This API is used to unlock the task scheduling. Calling this API will decrease the number of task locks by one."
|   |   `-TextComment 0x7434d0 <line:825:3, col:119> Text=" If a task is locked more than once, the task scheduling will be unlocked only when the number of locks becomes zero."
|   |-ParagraphComment 0x743560 <line:827:3>
|   | `-TextComment 0x743530 <col:3> Text=" "
|   |-BlockCommandComment 0x743580 <col:4, line:831:8> Name="attention"
|   | `-ParagraphComment 0x743770 <line:828:3, line:831:8>
|   |   |-TextComment 0x7435b0 <line:828:3> Text=" "
|   |   |-HTMLStartTagComment 0x7435d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x743610 <line:829:3> Text=" "
|   |   |-HTMLStartTagComment 0x743630 <col:4, col:7> Name="li"
|   |   |-TextComment 0x743670 <col:8, col:115> Text="The number of locks is decreased by one if this API is called. One is added to the number of task scheduling"
|   |   |-TextComment 0x743690 <line:830:3, col:105> Text=" locks if the task scheduling is locked. Therefore, this API should be used together with LOS_TaskLock."
|   |   |-HTMLEndTagComment 0x7436b0 <col:106, col:110> Name="li"
|   |   |-TextComment 0x7436e0 <line:831:3> Text=" "
|   |   `-HTMLEndTagComment 0x743700 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x7437c0 <line:833:3>
|   | `-TextComment 0x743790 <col:3> Text=" "
|   |-ParamCommandComment 0x7437e0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x743840 <<invalid sloc>>
|   |-ParagraphComment 0x743890 <line:835:3>
|   | `-TextComment 0x743860 <col:3> Text=" "
|   |-BlockCommandComment 0x7438b0 <col:4, line:836:3> Name="retval"
|   | `-ParagraphComment 0x743930 <line:835:11, line:836:3>
|   |   |-TextComment 0x7438e0 <line:835:11, col:16> Text=" None."
|   |   `-TextComment 0x743900 <line:836:3> Text=" "
|   |-BlockCommandComment 0x743950 <col:4, line:838:3> Name="par"
|   | `-ParagraphComment 0x743b20 <line:836:8, line:838:3>
|   |   |-TextComment 0x743980 <line:836:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x7439a0 <line:837:3> Text=" "
|   |   |-HTMLStartTagComment 0x7439c0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x743a00 <col:8, col:11> Name="li"
|   |   |-TextComment 0x743a40 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x743a60 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x743a90 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x743ac0 <line:838:3> Text=" "
|   `-BlockCommandComment 0x743b40 <col:4, col:20> Name="see"
|     `-ParagraphComment 0x743ba0 <col:8, col:20>
|       `-TextComment 0x743b70 <col:8, col:20> Text=" LOS_TaskLock"
|-FunctionDecl 0x669308 <line:870:1, col:60> col:15 LOS_TaskPriSet 'UINT32 (UINT32, UINT16)' extern
| |-ParmVarDecl 0x6691b8 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x669230 <col:45, col:52> col:52 taskPrio 'UINT16':'unsigned short'
| `-FullComment 0x744c20 <line:843:3, line:868:22>
|   |-ParagraphComment 0x743cd0 <line:843:3>
|   | `-TextComment 0x743ca0 <col:3> Text=" "
|   |-VerbatimLineComment 0x743cf0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x743d60 <line:844:3>
|   | `-TextComment 0x743d30 <col:3> Text=" "
|   |-BlockCommandComment 0x743d80 <col:4, col:30> Name="brief"
|   | `-ParagraphComment 0x743de0 <col:10, col:30>
|   |   `-TextComment 0x743db0 <col:10, col:30> Text=" Set a task priority."
|   |-ParagraphComment 0x743e30 <line:846:3>
|   | `-TextComment 0x743e00 <col:3> Text=" "
|   |-BlockCommandComment 0x743e50 <col:4, line:847:60> Name="par"
|   | `-ParagraphComment 0x743ed0 <line:846:8, line:847:60>
|   |   |-TextComment 0x743e80 <line:846:8, col:20> Text=" Description:"
|   |   `-TextComment 0x743ea0 <line:847:3, col:60> Text=" This API is used to set the priority of a specified task."
|   |-ParagraphComment 0x743f30 <line:849:3>
|   | `-TextComment 0x743ef0 <col:3> Text=" "
|   |-BlockCommandComment 0x743f50 <col:4, line:856:8> Name="attention"
|   | `-ParagraphComment 0x7443b0 <line:850:3, line:856:8>
|   |   |-TextComment 0x743f80 <line:850:3> Text=" "
|   |   |-HTMLStartTagComment 0x743fa0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x743fe0 <line:851:3> Text=" "
|   |   |-HTMLStartTagComment 0x744000 <col:4, col:7> Name="li"
|   |   |-TextComment 0x744040 <col:8, col:116> Text="If the set priority is higher than the priority of the current running task, task scheduling probably occurs."
|   |   |-TextComment 0x744060 <line:852:3> Text=" "
|   |   |-HTMLEndTagComment 0x744080 <col:4, col:8> Name="li"
|   |   |-TextComment 0x7440b0 <line:853:3> Text=" "
|   |   |-HTMLStartTagComment 0x7440d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x744110 <col:8, col:94> Text="Changing the priority of the current running task also probably causes task scheduling."
|   |   |-HTMLEndTagComment 0x744130 <col:95, col:99> Name="li"
|   |   |-TextComment 0x744160 <line:854:3> Text=" "
|   |   |-HTMLStartTagComment 0x744180 <col:4, col:7> Name="li"
|   |   |-TextComment 0x7441c0 <col:8, col:102> Text="Using the interface to change the priority of software timer task and idle task is not allowed."
|   |   |-HTMLEndTagComment 0x7441e0 <col:103, col:107> Name="li"
|   |   |-TextComment 0x744210 <line:855:3> Text=" "
|   |   |-HTMLStartTagComment 0x744230 <col:4, col:7> Name="li"
|   |   |-TextComment 0x744270 <col:8, col:59> Text="Using the interface in the interrupt is not allowed."
|   |   |-HTMLEndTagComment 0x744290 <col:60, col:64> Name="li"
|   |   |-TextComment 0x7442c0 <line:856:3> Text=" "
|   |   `-HTMLEndTagComment 0x7442e0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x744400 <line:858:3>
|   | `-TextComment 0x7443d0 <col:3> Text=" "
|   |-ParamCommandComment 0x744420 <col:4, line:859:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x7444d0 <line:858:18, line:859:3>
|   |   |-TextComment 0x744480 <line:858:18, col:96> Text="   [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |   `-TextComment 0x7444a0 <line:859:3> Text=" "
|   |-ParamCommandComment 0x7444f0 <col:4, col:52> [in] implicitly Param="taskPrio" ParamIndex=1
|   | `-ParagraphComment 0x744580 <col:20, col:52>
|   |   `-TextComment 0x744550 <col:20, col:52> Text=" [IN] Type #UINT16 Task priority."
|   |-ParagraphComment 0x7445d0 <line:861:3>
|   | `-TextComment 0x7445a0 <col:3> Text=" "
|   |-BlockCommandComment 0x7445f0 <col:4, line:862:3> Name="retval"
|   | `-ParagraphComment 0x744670 <line:861:11, line:862:3>
|   |   |-TextComment 0x744620 <line:861:11, col:95> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR    Incorrect task priority.Re-configure the task priority"
|   |   `-TextComment 0x744640 <line:862:3> Text=" "
|   |-BlockCommandComment 0x744690 <col:4, line:863:3> Name="retval"
|   | `-ParagraphComment 0x744710 <line:862:11, line:863:3>
|   |   |-TextComment 0x7446c0 <line:862:11, col:95> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE   Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0x7446e0 <line:863:3> Text=" "
|   |-BlockCommandComment 0x744730 <col:4, line:864:3> Name="retval"
|   | `-ParagraphComment 0x7447b0 <line:863:11, line:864:3>
|   |   |-TextComment 0x744760 <line:863:11, col:56> Text=" #LOS_ERRNO_TSK_ID_INVALID     Invalid Task ID"
|   |   `-TextComment 0x744780 <line:864:3> Text=" "
|   |-BlockCommandComment 0x7447d0 <col:4, line:865:3> Name="retval"
|   | `-ParagraphComment 0x744850 <line:864:11, line:865:3>
|   |   |-TextComment 0x744800 <line:864:11, col:65> Text=" #LOS_ERRNO_TSK_NOT_CREATED    The task is not created."
|   |   `-TextComment 0x744820 <line:865:3> Text=" "
|   |-BlockCommandComment 0x744870 <col:4, line:866:3> Name="retval"
|   | `-ParagraphComment 0x7448f0 <line:865:11, line:866:3>
|   |   |-TextComment 0x7448a0 <line:865:11, col:103> Text=" #LOS_OK                       The task priority is successfully set to a specified priority."
|   |   `-TextComment 0x7448c0 <line:866:3> Text=" "
|   |-BlockCommandComment 0x744910 <col:4, line:868:3> Name="par"
|   | `-ParagraphComment 0x744ae0 <line:866:8, line:868:3>
|   |   |-TextComment 0x744940 <line:866:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x744960 <line:867:3> Text=" "
|   |   |-HTMLStartTagComment 0x744980 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x7449c0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x744a00 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x744a20 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x744a50 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x744a80 <line:868:3> Text=" "
|   `-BlockCommandComment 0x744b00 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x744b60 <col:8, col:22>
|       `-TextComment 0x744b30 <col:8, col:22> Text=" LOS_TaskPriSet"
|-FunctionDecl 0x66a758 <line:898:1, col:48> col:15 LOS_CurTaskPriSet 'UINT32 (UINT16)' extern
| |-ParmVarDecl 0x6693f8 <col:33, col:40> col:40 taskPrio 'UINT16':'unsigned short'
| `-FullComment 0x745a60 <line:873:3, line:896:22>
|   |-ParagraphComment 0x744cc0 <line:873:3>
|   | `-TextComment 0x744c90 <col:3> Text=" "
|   |-VerbatimLineComment 0x744ce0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x744d50 <line:874:3>
|   | `-TextComment 0x744d20 <col:3> Text=" "
|   |-BlockCommandComment 0x744d70 <col:4, col:79> Name="brief"
|   | `-ParagraphComment 0x744dd0 <col:10, col:79>
|   |   `-TextComment 0x744da0 <col:10, col:79> Text=" Set the priority of the current running task to a specified priority."
|   |-ParagraphComment 0x744e20 <line:876:3>
|   | `-TextComment 0x744df0 <col:3> Text=" "
|   |-BlockCommandComment 0x744e40 <col:4, line:877:92> Name="par"
|   | `-ParagraphComment 0x744ec0 <line:876:8, line:877:92>
|   |   |-TextComment 0x744e70 <line:876:8, col:20> Text=" Description:"
|   |   `-TextComment 0x744e90 <line:877:3, col:92> Text=" This API is used to set the priority of the current running task to a specified priority."
|   |-ParagraphComment 0x744f10 <line:879:3>
|   | `-TextComment 0x744ee0 <col:3> Text=" "
|   |-BlockCommandComment 0x744f30 <col:4, line:884:8> Name="attention"
|   | `-ParagraphComment 0x7452a0 <line:880:3, line:884:8>
|   |   |-TextComment 0x744f60 <line:880:3> Text=" "
|   |   |-HTMLStartTagComment 0x744f80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x744fc0 <line:881:3> Text=" "
|   |   |-HTMLStartTagComment 0x744fe0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x745020 <col:8, col:89> Text="Changing the priority of the current running task probably causes task scheduling."
|   |   |-HTMLEndTagComment 0x745040 <col:90, col:94> Name="li"
|   |   |-TextComment 0x745070 <line:882:3> Text=" "
|   |   |-HTMLStartTagComment 0x745090 <col:4, col:7> Name="li"
|   |   |-TextComment 0x7450d0 <col:8, col:102> Text="Using the interface to change the priority of software timer task and idle task is not allowed."
|   |   |-HTMLEndTagComment 0x7450f0 <col:103, col:107> Name="li"
|   |   |-TextComment 0x745120 <line:883:3> Text=" "
|   |   |-HTMLStartTagComment 0x745140 <col:4, col:7> Name="li"
|   |   |-TextComment 0x745180 <col:8, col:59> Text="Using the interface in the interrupt is not allowed."
|   |   |-HTMLEndTagComment 0x7451a0 <col:60, col:64> Name="li"
|   |   |-TextComment 0x7451d0 <line:884:3> Text=" "
|   |   `-HTMLEndTagComment 0x7451f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x7452f0 <line:886:3>
|   | `-TextComment 0x7452c0 <col:3> Text=" "
|   |-ParamCommandComment 0x745310 <col:4, col:52> [in] implicitly Param="taskPrio" ParamIndex=0
|   | `-ParagraphComment 0x7453a0 <col:20, col:52>
|   |   `-TextComment 0x745370 <col:20, col:52> Text=" [IN] Type #UINT16 Task priority."
|   |-ParagraphComment 0x7453f0 <line:888:3>
|   | `-TextComment 0x7453c0 <col:3> Text=" "
|   |-BlockCommandComment 0x745410 <col:4, line:889:3> Name="retval"
|   | `-ParagraphComment 0x745490 <line:888:11, line:889:3>
|   |   |-TextComment 0x745440 <line:888:11, col:96> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR     Incorrect task priority.Re-configure the task priority"
|   |   `-TextComment 0x745460 <line:889:3> Text=" "
|   |-BlockCommandComment 0x7454b0 <col:4, line:890:3> Name="retval"
|   | `-ParagraphComment 0x745530 <line:889:11, line:890:3>
|   |   |-TextComment 0x7454e0 <line:889:11, col:96> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE    Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0x745500 <line:890:3> Text=" "
|   |-BlockCommandComment 0x745550 <col:4, line:891:3> Name="retval"
|   | `-ParagraphComment 0x7455d0 <line:890:11, line:891:3>
|   |   |-TextComment 0x745580 <line:890:11, col:57> Text=" #LOS_ERRNO_TSK_ID_INVALID      Invalid Task ID"
|   |   `-TextComment 0x7455a0 <line:891:3> Text=" "
|   |-BlockCommandComment 0x7455f0 <col:4, line:892:3> Name="retval"
|   | `-ParagraphComment 0x745670 <line:891:11, line:892:3>
|   |   |-TextComment 0x745620 <line:891:11, col:66> Text=" #LOS_ERRNO_TSK_NOT_CREATED     The task is not created."
|   |   `-TextComment 0x745640 <line:892:3> Text=" "
|   |-BlockCommandComment 0x745690 <col:4, line:894:3> Name="retval"
|   | `-ParagraphComment 0x745740 <line:892:11, line:894:3>
|   |   |-TextComment 0x7456c0 <line:892:11, col:117> Text=" #LOS_OK                        The priority of the current running task is successfully set to a specified"
|   |   |-TextComment 0x7456e0 <line:893:3, col:51> Text="                                        priority."
|   |   `-TextComment 0x745700 <line:894:3> Text=" "
|   |-BlockCommandComment 0x745760 <col:4, line:896:3> Name="par"
|   | `-ParagraphComment 0x745930 <line:894:8, line:896:3>
|   |   |-TextComment 0x745790 <line:894:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x7457b0 <line:895:3> Text=" "
|   |   |-HTMLStartTagComment 0x7457d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x745810 <col:8, col:11> Name="li"
|   |   |-TextComment 0x745850 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x745870 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x7458a0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x7458d0 <line:896:3> Text=" "
|   `-BlockCommandComment 0x745950 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x7459b0 <col:8, col:22>
|       `-TextComment 0x745980 <col:8, col:22> Text=" LOS_TaskPriGet"
|-FunctionDecl 0x66a8c0 <line:924:1, col:33> col:15 LOS_TaskYield 'UINT32 (void)' extern
| `-FullComment 0x7465c0 <line:901:3, line:922:7>
|   |-ParagraphComment 0x745b00 <line:901:3>
|   | `-TextComment 0x745ad0 <col:3> Text=" "
|   |-VerbatimLineComment 0x745b20 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x745b90 <line:902:3>
|   | `-TextComment 0x745b60 <col:3> Text=" "
|   |-BlockCommandComment 0x745bb0 <col:4, col:73> Name="brief"
|   | `-ParagraphComment 0x745c10 <col:10, col:73>
|   |   `-TextComment 0x745be0 <col:10, col:73> Text=" Change the scheduling sequence of tasks with the same priority."
|   |-ParagraphComment 0x745c60 <line:904:3>
|   | `-TextComment 0x745c30 <col:3> Text=" "
|   |-BlockCommandComment 0x745c80 <col:4, line:906:9> Name="par"
|   | `-ParagraphComment 0x745d30 <line:904:8, line:906:9>
|   |   |-TextComment 0x745cb0 <line:904:8, col:20> Text=" Description:"
|   |   |-TextComment 0x745cd0 <line:905:3, col:117> Text=" This API is used to move current task in a queue of tasks with the same priority to the tail of the queue of ready"
|   |   `-TextComment 0x745cf0 <line:906:3, col:9> Text=" tasks."
|   |-ParagraphComment 0x745d80 <line:908:3>
|   | `-TextComment 0x745d50 <col:3> Text=" "
|   |-BlockCommandComment 0x745da0 <col:4, line:912:8> Name="attention"
|   | `-ParagraphComment 0x745fb0 <line:909:3, line:912:8>
|   |   |-TextComment 0x745dd0 <line:909:3> Text=" "
|   |   |-HTMLStartTagComment 0x745df0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x745e30 <line:910:3> Text=" "
|   |   |-HTMLStartTagComment 0x745e50 <col:4, col:7> Name="li"
|   |   |-TextComment 0x745e90 <col:8, col:110> Text="At least two ready tasks need to be included in the queue of ready tasks with the same priority. If the"
|   |   |-TextComment 0x745eb0 <line:911:3, col:77> Text=" less than two ready tasks are included in the queue, an error is reported."
|   |   |-HTMLEndTagComment 0x745ed0 <col:78, col:82> Name="li"
|   |   |-TextComment 0x745f00 <line:912:3> Text=" "
|   |   `-HTMLEndTagComment 0x745f40 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x746000 <line:914:3>
|   | `-TextComment 0x745fd0 <col:3> Text=" "
|   |-ParamCommandComment 0x746020 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x746080 <<invalid sloc>>
|   |-ParagraphComment 0x7460d0 <line:916:3>
|   | `-TextComment 0x7460a0 <col:3> Text=" "
|   |-BlockCommandComment 0x7460f0 <col:4, line:917:3> Name="retval"
|   | `-ParagraphComment 0x746170 <line:916:11, line:917:3>
|   |   |-TextComment 0x746120 <line:916:11, col:71> Text=" #LOS_ERRNO_TSK_ID_INVALID                    Invalid Task ID"
|   |   `-TextComment 0x746140 <line:917:3> Text=" "
|   |-BlockCommandComment 0x746190 <col:4, line:918:3> Name="retval"
|   | `-ParagraphComment 0x746210 <line:917:11, line:918:3>
|   |   |-TextComment 0x7461c0 <line:917:11, col:116> Text=" #LOS_ERRNO_TSK_YIELD_NOT_ENOUGH_TASK         No tasks with the same priority is available for scheduling."
|   |   `-TextComment 0x7461e0 <line:918:3> Text=" "
|   |-BlockCommandComment 0x746230 <col:4, line:920:3> Name="retval"
|   | `-ParagraphComment 0x7462e0 <line:918:11, line:920:3>
|   |   |-TextComment 0x746260 <line:918:11, col:110> Text=" #LOS_OK                                      The scheduling sequence of tasks with same priority is"
|   |   |-TextComment 0x746280 <line:919:3, col:77> Text="                                                      successfully changed."
|   |   `-TextComment 0x7462a0 <line:920:3> Text=" "
|   |-BlockCommandComment 0x746300 <col:4, line:922:3> Name="par"
|   | `-ParagraphComment 0x7464d0 <line:920:8, line:922:3>
|   |   |-TextComment 0x746330 <line:920:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x746350 <line:921:3> Text=" "
|   |   |-HTMLStartTagComment 0x746370 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x7463b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x7463f0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x746410 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x746440 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x746470 <line:922:3> Text=" "
|   `-BlockCommandComment 0x7464f0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x746520 <<invalid sloc>>
|-FunctionDecl 0x66aa88 <line:943:1, col:43> col:15 LOS_TaskPriGet 'UINT16 (UINT32)' extern
| |-ParmVarDecl 0x66a998 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0x746ed0 <line:927:3, line:941:22>
|   |-ParagraphComment 0x746660 <line:927:3>
|   | `-TextComment 0x746630 <col:3> Text=" "
|   |-VerbatimLineComment 0x746680 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x7466f0 <line:928:3>
|   | `-TextComment 0x7466c0 <col:3> Text=" "
|   |-BlockCommandComment 0x746710 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0x746770 <col:10, col:33>
|   |   `-TextComment 0x746740 <col:10, col:33> Text=" Obtain a task priority."
|   |-ParagraphComment 0x7467c0 <line:930:3>
|   | `-TextComment 0x746790 <col:3> Text=" "
|   |-BlockCommandComment 0x7467e0 <col:4, line:931:63> Name="par"
|   | `-ParagraphComment 0x746860 <line:930:8, line:931:63>
|   |   |-TextComment 0x746810 <line:930:8, col:20> Text=" Description:"
|   |   `-TextComment 0x746830 <line:931:3, col:63> Text=" This API is used to obtain the priority of a specified task."
|   |-ParagraphComment 0x7468b0 <line:933:3>
|   | `-TextComment 0x746880 <col:3> Text=" "
|   |-BlockCommandComment 0x7468d0 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x746930 <col:14, col:19>
|   |   `-TextComment 0x746900 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x746980 <line:935:3>
|   | `-TextComment 0x746950 <col:3> Text=" "
|   |-ParamCommandComment 0x7469a0 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x746a30 <col:18, col:94>
|   |   `-TextComment 0x746a00 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0x746a80 <line:937:3>
|   | `-TextComment 0x746a50 <col:3> Text=" "
|   |-BlockCommandComment 0x746aa0 <col:4, line:938:3> Name="retval"
|   | `-ParagraphComment 0x746b20 <line:937:11, line:938:3>
|   |   |-TextComment 0x746ad0 <line:937:11, col:67> Text=" #OS_INVALID      The task priority fails to be obtained."
|   |   `-TextComment 0x746af0 <line:938:3> Text=" "
|   |-BlockCommandComment 0x746b40 <col:4, line:939:3> Name="retval"
|   | `-ParagraphComment 0x746bc0 <line:938:11, line:939:3>
|   |   |-TextComment 0x746b70 <line:938:11, col:46> Text=" #UINT16          The task priority."
|   |   `-TextComment 0x746b90 <line:939:3> Text=" "
|   |-BlockCommandComment 0x746be0 <col:4, line:941:3> Name="par"
|   | `-ParagraphComment 0x746db0 <line:939:8, line:941:3>
|   |   |-TextComment 0x746c10 <line:939:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x746c30 <line:940:3> Text=" "
|   |   |-HTMLStartTagComment 0x746c50 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x746c90 <col:8, col:11> Name="li"
|   |   |-TextComment 0x746cd0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x746cf0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x746d20 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x746d50 <line:941:3> Text=" "
|   `-BlockCommandComment 0x746dd0 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x746e30 <col:8, col:22>
|       `-TextComment 0x746e00 <col:8, col:22> Text=" LOS_TaskPriSet"
|-FunctionDecl 0x66abf0 <line:963:1, col:36> col:15 LOS_CurTaskIDGet 'UINT32 (void)' extern
| `-FullComment 0x747810 <line:946:3, line:961:7>
|   |-ParagraphComment 0x746f70 <line:946:3>
|   | `-TextComment 0x746f40 <col:3> Text=" "
|   |-VerbatimLineComment 0x746f90 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x747000 <line:947:3>
|   | `-TextComment 0x746fd0 <col:3> Text=" "
|   |-BlockCommandComment 0x747020 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x747080 <col:10, col:41>
|   |   `-TextComment 0x747050 <col:10, col:41> Text=" Obtain current running task ID."
|   |-ParagraphComment 0x7470d0 <line:949:3>
|   | `-TextComment 0x7470a0 <col:3> Text=" "
|   |-BlockCommandComment 0x7470f0 <col:4, line:950:61> Name="par"
|   | `-ParagraphComment 0x747170 <line:949:8, line:950:61>
|   |   |-TextComment 0x747120 <line:949:8, col:20> Text=" Description:"
|   |   `-TextComment 0x747140 <line:950:3, col:61> Text=" This API is used to obtain the ID of current running task."
|   |-ParagraphComment 0x7471c0 <line:952:3>
|   | `-TextComment 0x747190 <col:3> Text=" "
|   |-BlockCommandComment 0x7471e0 <col:4, line:955:8> Name="attention"
|   | `-ParagraphComment 0x7473b0 <line:953:3, line:955:8>
|   |   |-TextComment 0x747210 <line:953:3> Text=" "
|   |   |-HTMLStartTagComment 0x747230 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x747270 <line:954:3> Text=" "
|   |   |-HTMLStartTagComment 0x747290 <col:4, col:7> Name="li"
|   |   |-TextComment 0x7472d0 <col:8, col:70> Text=" This interface should not be called before system initialized."
|   |   |-HTMLEndTagComment 0x7472f0 <col:71, col:75> Name="li"
|   |   |-TextComment 0x747320 <line:955:3> Text=" "
|   |   `-HTMLEndTagComment 0x747340 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x747400 <line:957:3>
|   | `-TextComment 0x7473d0 <col:3> Text=" "
|   |-BlockCommandComment 0x747420 <col:4, line:958:3> Name="retval"
|   | `-ParagraphComment 0x7474a0 <line:957:11, line:958:3>
|   |   |-TextComment 0x747450 <line:957:11, col:56> Text=" #LOS_ERRNO_TSK_ID_INVALID    Invalid Task ID."
|   |   `-TextComment 0x747470 <line:958:3> Text=" "
|   |-BlockCommandComment 0x7474c0 <col:4, line:959:3> Name="retval"
|   | `-ParagraphComment 0x747540 <line:958:11, line:959:3>
|   |   |-TextComment 0x7474f0 <line:958:11, col:48> Text=" #UINT32                      Task ID."
|   |   `-TextComment 0x747510 <line:959:3> Text=" "
|   |-BlockCommandComment 0x747560 <col:4, line:961:3> Name="par"
|   | `-ParagraphComment 0x747730 <line:959:8, line:961:3>
|   |   |-TextComment 0x747590 <line:959:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x7475b0 <line:960:3> Text=" "
|   |   |-HTMLStartTagComment 0x7475d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x747610 <col:8, col:11> Name="li"
|   |   |-TextComment 0x747650 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x747670 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x7476a0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x7476d0 <line:961:3> Text=" "
|   `-BlockCommandComment 0x747750 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x747780 <<invalid sloc>>
|-FunctionDecl 0x66ad50 <line:981:1, col:37> col:15 LOS_NextTaskIDGet 'UINT32 (void)' extern
| `-FullComment 0x748010 <line:966:3, line:979:7>
|   |-ParagraphComment 0x7478b0 <line:966:3>
|   | `-TextComment 0x747880 <col:3> Text=" "
|   |-VerbatimLineComment 0x7478d0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x747940 <line:967:3>
|   | `-TextComment 0x747910 <col:3> Text=" "
|   |-BlockCommandComment 0x747960 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0x7479c0 <col:10, col:38>
|   |   `-TextComment 0x747990 <col:10, col:38> Text=" Obtain next running task ID."
|   |-ParagraphComment 0x747a10 <line:969:3>
|   | `-TextComment 0x7479e0 <col:3> Text=" "
|   |-BlockCommandComment 0x747a30 <col:4, line:970:58> Name="par"
|   | `-ParagraphComment 0x747ab0 <line:969:8, line:970:58>
|   |   |-TextComment 0x747a60 <line:969:8, col:20> Text=" Description:"
|   |   `-TextComment 0x747a80 <line:970:3, col:58> Text=" This API is used to obtain the ID of next running task."
|   |-ParagraphComment 0x747b00 <line:972:3>
|   | `-TextComment 0x747ad0 <col:3> Text=" "
|   |-BlockCommandComment 0x747b20 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x747b80 <col:14, col:19>
|   |   `-TextComment 0x747b50 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x747bd0 <line:975:3>
|   | `-TextComment 0x747ba0 <col:3> Text=" "
|   |-BlockCommandComment 0x747bf0 <col:4, line:976:3> Name="retval"
|   | `-ParagraphComment 0x747c70 <line:975:11, line:976:3>
|   |   |-TextComment 0x747c20 <line:975:11, col:56> Text=" #LOS_ERRNO_TSK_ID_INVALID    invalid Task ID."
|   |   `-TextComment 0x747c40 <line:976:3> Text=" "
|   |-BlockCommandComment 0x747c90 <col:4, line:977:3> Name="retval"
|   | `-ParagraphComment 0x747d10 <line:976:11, line:977:3>
|   |   |-TextComment 0x747cc0 <line:976:11, col:48> Text=" #UINT32                      task id."
|   |   `-TextComment 0x747ce0 <line:977:3> Text=" "
|   |-BlockCommandComment 0x747d30 <col:4, line:979:3> Name="par"
|   | `-ParagraphComment 0x747f00 <line:977:8, line:979:3>
|   |   |-TextComment 0x747d60 <line:977:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x747d80 <line:978:3> Text=" "
|   |   |-HTMLStartTagComment 0x747da0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x747de0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x747e20 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x747e40 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x747e70 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x747ea0 <line:979:3> Text=" "
|   `-BlockCommandComment 0x747f50 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x747f80 <<invalid sloc>>
|-FunctionDecl 0x66af08 <line:999:1, col:37> col:14 LOS_CurTaskNameGet 'CHAR *(void)' extern
| `-FullComment 0x7487e0 <line:984:3, line:997:7>
|   |-ParagraphComment 0x7480b0 <line:984:3>
|   | `-TextComment 0x748080 <col:3> Text=" "
|   |-VerbatimLineComment 0x7480d0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x748140 <line:985:3>
|   | `-TextComment 0x748110 <col:3> Text=" "
|   |-BlockCommandComment 0x748160 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0x7481c0 <col:10, col:38>
|   |   `-TextComment 0x748190 <col:10, col:38> Text=" Obtain next running task ID."
|   |-ParagraphComment 0x748210 <line:987:3>
|   | `-TextComment 0x7481e0 <col:3> Text=" "
|   |-BlockCommandComment 0x748230 <col:4, line:988:58> Name="par"
|   | `-ParagraphComment 0x7482b0 <line:987:8, line:988:58>
|   |   |-TextComment 0x748260 <line:987:8, col:20> Text=" Description:"
|   |   `-TextComment 0x748280 <line:988:3, col:58> Text=" This API is used to obtain the ID of next running task."
|   |-ParagraphComment 0x748300 <line:990:3>
|   | `-TextComment 0x7482d0 <col:3> Text=" "
|   |-BlockCommandComment 0x748320 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x748380 <col:14, col:19>
|   |   `-TextComment 0x748350 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x7483d0 <line:993:3>
|   | `-TextComment 0x7483a0 <col:3> Text=" "
|   |-BlockCommandComment 0x7483f0 <col:4, line:994:3> Name="retval"
|   | `-ParagraphComment 0x748470 <line:993:11, line:994:3>
|   |   |-TextComment 0x748420 <line:993:11, col:46> Text=" #NULL            invalid Task name."
|   |   `-TextComment 0x748440 <line:994:3> Text=" "
|   |-BlockCommandComment 0x748490 <col:4, line:995:3> Name="retval"
|   | `-ParagraphComment 0x748510 <line:994:11, line:995:3>
|   |   |-TextComment 0x7484c0 <line:994:11, col:38> Text=" #CHAR*           task name."
|   |   `-TextComment 0x7484e0 <line:995:3> Text=" "
|   |-BlockCommandComment 0x748530 <col:4, line:997:3> Name="par"
|   | `-ParagraphComment 0x748700 <line:995:8, line:997:3>
|   |   |-TextComment 0x748560 <line:995:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x748580 <line:996:3> Text=" "
|   |   |-HTMLStartTagComment 0x7485a0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x7485e0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x748620 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x748640 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x748670 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x7486a0 <line:997:3> Text=" "
|   `-BlockCommandComment 0x748720 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x748750 <<invalid sloc>>
|-FunctionDecl 0x66b1e8 <line:1025:1, col:66> col:15 LOS_TaskInfoGet 'UINT32 (UINT32, TSK_INFO_S *)' extern
| |-ParmVarDecl 0x66afe8 <col:31, col:38> col:38 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x66b0d8 <col:46, col:58> col:58 taskInfo 'TSK_INFO_S *'
| `-FullComment 0x749470 <line:1002:3, line:1023:7>
|   |-ParagraphComment 0x748880 <line:1002:3>
|   | `-TextComment 0x748850 <col:3> Text=" "
|   |-VerbatimLineComment 0x7488a0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x748910 <line:1003:3>
|   | `-TextComment 0x7488e0 <col:3> Text=" "
|   |-BlockCommandComment 0x748930 <col:4, col:46> Name="brief"
|   | `-ParagraphComment 0x748990 <col:10, col:46>
|   |   `-TextComment 0x748960 <col:10, col:46> Text=" Obtain a task information structure."
|   |-ParagraphComment 0x7489e0 <line:1005:3>
|   | `-TextComment 0x7489b0 <col:3> Text=" "
|   |-BlockCommandComment 0x748a00 <col:4, line:1006:59> Name="par"
|   | `-ParagraphComment 0x748a80 <line:1005:8, line:1006:59>
|   |   |-TextComment 0x748a30 <line:1005:8, col:20> Text=" Description:"
|   |   `-TextComment 0x748a50 <line:1006:3, col:59> Text=" This API is used to obtain a task information structure."
|   |-ParagraphComment 0x748ad0 <line:1008:3>
|   | `-TextComment 0x748aa0 <col:3> Text=" "
|   |-BlockCommandComment 0x748af0 <col:4, line:1012:8> Name="attention"
|   | `-ParagraphComment 0x748ce0 <line:1009:3, line:1012:8>
|   |   |-TextComment 0x748b20 <line:1009:3> Text=" "
|   |   |-HTMLStartTagComment 0x748b40 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x748b80 <line:1010:3> Text=" "
|   |   |-HTMLStartTagComment 0x748ba0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x748be0 <col:8, col:111> Text="One parameter of this interface is a pointer, it should be a correct value, otherwise, the system may be"
|   |   |-TextComment 0x748c00 <line:1011:3, col:12> Text=" abnormal."
|   |   |-HTMLEndTagComment 0x748c20 <col:13, col:17> Name="li"
|   |   |-TextComment 0x748c50 <line:1012:3> Text=" "
|   |   `-HTMLEndTagComment 0x748c70 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x748d30 <line:1014:3>
|   | `-TextComment 0x748d00 <col:3> Text=" "
|   |-ParamCommandComment 0x748d50 <col:4, line:1015:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x748e00 <line:1014:18, line:1015:3>
|   |   |-TextComment 0x748db0 <line:1014:18, col:99> Text="    [IN]  Type  #UINT32 Task ID. The task id value is obtained from task creation."
|   |   `-TextComment 0x748dd0 <line:1015:3> Text=" "
|   |-ParamCommandComment 0x748e20 <col:4, col:103> [in] implicitly Param="taskInfo" ParamIndex=1
|   | `-ParagraphComment 0x748eb0 <col:20, col:103>
|   |   `-TextComment 0x748e80 <col:20, col:103> Text="  [OUT] Type  #TSK_INFO_S* Pointer to the task information structure to be obtained."
|   |-ParagraphComment 0x748f00 <line:1017:3>
|   | `-TextComment 0x748ed0 <col:3> Text=" "
|   |-BlockCommandComment 0x748f20 <col:4, line:1018:3> Name="retval"
|   | `-ParagraphComment 0x748fa0 <line:1017:11, line:1018:3>
|   |   |-TextComment 0x748f50 <line:1017:11, col:57> Text=" #LOS_ERRNO_TSK_PTR_NULL        Null parameter."
|   |   `-TextComment 0x748f70 <line:1018:3> Text=" "
|   |-BlockCommandComment 0x748fc0 <col:4, line:1019:3> Name="retval"
|   | `-ParagraphComment 0x749040 <line:1018:11, line:1019:3>
|   |   |-TextComment 0x748ff0 <line:1018:11, col:58> Text=" #LOS_ERRNO_TSK_ID_INVALID      Invalid task ID."
|   |   `-TextComment 0x749010 <line:1019:3> Text=" "
|   |-BlockCommandComment 0x749060 <col:4, line:1020:3> Name="retval"
|   | `-ParagraphComment 0x7490e0 <line:1019:11, line:1020:3>
|   |   |-TextComment 0x749090 <line:1019:11, col:66> Text=" #LOS_ERRNO_TSK_NOT_CREATED     The task is not created."
|   |   `-TextComment 0x7490b0 <line:1020:3> Text=" "
|   |-BlockCommandComment 0x749100 <col:4, line:1021:3> Name="retval"
|   | `-ParagraphComment 0x749180 <line:1020:11, line:1021:3>
|   |   |-TextComment 0x749130 <line:1020:11, col:98> Text=" #LOS_OK                        The task information structure is successfully obtained."
|   |   `-TextComment 0x749150 <line:1021:3> Text=" "
|   |-BlockCommandComment 0x7491a0 <col:4, line:1023:3> Name="par"
|   | `-ParagraphComment 0x749370 <line:1021:8, line:1023:3>
|   |   |-TextComment 0x7491d0 <line:1021:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x7491f0 <line:1022:3> Text=" "
|   |   |-HTMLStartTagComment 0x749210 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x749250 <col:8, col:11> Name="li"
|   |   |-TextComment 0x749290 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x7492b0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x7492e0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x749310 <line:1023:3> Text=" "
|   `-BlockCommandComment 0x749390 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x7493c0 <<invalid sloc>>
|-FunctionDecl 0x66b468 <line:1047:1, col:66> col:15 LOS_TaskStatusGet 'UINT32 (UINT32, UINT32 *)' extern
| |-ParmVarDecl 0x66b2d8 <col:33, col:40> col:40 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x66b350 <col:48, col:56> col:56 taskStatus 'UINT32 *'
| `-FullComment 0x74a110 <line:1028:3, line:1045:7>
|   |-ParagraphComment 0x749510 <line:1028:3>
|   | `-TextComment 0x7494e0 <col:3> Text=" "
|   |-VerbatimLineComment 0x749530 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x7495a0 <line:1029:3>
|   | `-TextComment 0x749570 <col:3> Text=" "
|   |-BlockCommandComment 0x7495c0 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0x749620 <col:10, col:33>
|   |   `-TextComment 0x7495f0 <col:10, col:33> Text=" Obtain the task status."
|   |-ParagraphComment 0x749670 <line:1031:3>
|   | `-TextComment 0x749640 <col:3> Text=" "
|   |-BlockCommandComment 0x749690 <col:4, line:1032:46> Name="par"
|   | `-ParagraphComment 0x749710 <line:1031:8, line:1032:46>
|   |   |-TextComment 0x7496c0 <line:1031:8, col:20> Text=" Description:"
|   |   `-TextComment 0x7496e0 <line:1032:3, col:46> Text=" This API is used to obtain the task status."
|   |-ParagraphComment 0x749760 <line:1034:3>
|   | `-TextComment 0x749730 <col:3> Text=" "
|   |-BlockCommandComment 0x749780 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x7497e0 <col:14, col:19>
|   |   `-TextComment 0x7497b0 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x749830 <line:1036:3>
|   | `-TextComment 0x749800 <col:3> Text=" "
|   |-ParamCommandComment 0x749850 <col:4, line:1037:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x749900 <line:1036:18, line:1037:3>
|   |   |-TextComment 0x7498b0 <line:1036:18, col:55> Text="     [IN] Type  #TSK_HANDLE_T Task ID."
|   |   `-TextComment 0x7498d0 <line:1037:3> Text=" "
|   |-ParamCommandComment 0x749920 <col:4, col:84> [in] implicitly Param="taskStatus" ParamIndex=1
|   | `-ParagraphComment 0x7499b0 <col:22, col:84>
|   |   `-TextComment 0x749980 <col:22, col:84> Text=" [OUT] Type  #UINT32 Pointer to the task status to be obtained."
|   |-ParagraphComment 0x749a00 <line:1039:3>
|   | `-TextComment 0x7499d0 <col:3> Text=" "
|   |-BlockCommandComment 0x749a20 <col:4, line:1040:3> Name="retval"
|   | `-ParagraphComment 0x749aa0 <line:1039:11, line:1040:3>
|   |   |-TextComment 0x749a50 <line:1039:11, col:81> Text=" #LOS_ERRNO_TSK_PTR_NULL                    0x02000201: Null parameter."
|   |   `-TextComment 0x749a70 <line:1040:3> Text=" "
|   |-BlockCommandComment 0x749ac0 <col:4, line:1041:3> Name="retval"
|   | `-ParagraphComment 0x749b40 <line:1040:11, line:1041:3>
|   |   |-TextComment 0x749af0 <line:1040:11, col:82> Text=" #LOS_ERRNO_TSK_ID_INVALID                  0x02000207: Invalid task ID."
|   |   `-TextComment 0x749b10 <line:1041:3> Text=" "
|   |-BlockCommandComment 0x749b60 <col:4, line:1042:3> Name="retval"
|   | `-ParagraphComment 0x749be0 <line:1041:11, line:1042:3>
|   |   |-TextComment 0x749b90 <line:1041:11, col:90> Text=" #LOS_ERRNO_TSK_NOT_CREATED                 0x0200020a: The task is not created."
|   |   `-TextComment 0x749bb0 <line:1042:3> Text=" "
|   |-BlockCommandComment 0x749c00 <col:4, line:1043:3> Name="retval"
|   | `-ParagraphComment 0x749c80 <line:1042:11, line:1043:3>
|   |   |-TextComment 0x749c30 <line:1042:11, col:112> Text=" #LOS_OK                                   0: The task information structure is successfully obtained."
|   |   `-TextComment 0x749c50 <line:1043:3> Text=" "
|   |-BlockCommandComment 0x749ca0 <col:4, line:1045:3> Name="par"
|   | `-ParagraphComment 0x749e70 <line:1043:8, line:1045:3>
|   |   |-TextComment 0x749cd0 <line:1043:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x749cf0 <line:1044:3> Text=" "
|   |   |-HTMLStartTagComment 0x749d10 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x749d50 <col:8, col:11> Name="li"
|   |   |-TextComment 0x749d90 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x749db0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x749de0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x749e10 <line:1045:3> Text=" "
|   `-BlockCommandComment 0x749e90 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x749ec0 <<invalid sloc>>
|-FunctionDecl 0x66b5e0 <line:1068:1, col:39> col:15 LOS_TaskInfoMonitor 'UINT32 (void)' extern
| `-FullComment 0x74ab30 <line:1050:3, line:1066:27>
|   |-ParagraphComment 0x74a1b0 <line:1050:3>
|   | `-TextComment 0x74a180 <col:3> Text=" "
|   |-VerbatimLineComment 0x74a1d0 <col:4, col:24> Text=" los_monitor"
|   |-ParagraphComment 0x74a240 <line:1051:3>
|   | `-TextComment 0x74a210 <col:3> Text=" "
|   |-BlockCommandComment 0x74a260 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0x74a2c0 <col:10, col:32>
|   |   `-TextComment 0x74a290 <col:10, col:32> Text=" Obtain all tasks info."
|   |-ParagraphComment 0x74a310 <line:1053:3>
|   | `-TextComment 0x74a2e0 <col:3> Text=" "
|   |-BlockCommandComment 0x74a330 <col:4, line:1055:3> Name="par"
|   | `-ParagraphComment 0x74a3e0 <line:1053:8, line:1055:3>
|   |   |-TextComment 0x74a360 <line:1053:8, col:20> Text=" Description:"
|   |   |-TextComment 0x74a380 <line:1054:3, col:45> Text=" This API is used to obtain all tasks info."
|   |   `-TextComment 0x74a3a0 <line:1055:3> Text=" "
|   |-BlockCommandComment 0x74a400 <col:4, line:1058:8> Name="attention"
|   | `-ParagraphComment 0x74a5d0 <line:1056:3, line:1058:8>
|   |   |-TextComment 0x74a430 <line:1056:3> Text=" "
|   |   |-HTMLStartTagComment 0x74a450 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x74a490 <line:1057:3> Text=" "
|   |   |-HTMLStartTagComment 0x74a4b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x74a4f0 <col:8, col:102> Text="This API can be called only after the CPU usage is initialized. Otherwise, -1 will be returned."
|   |   |-HTMLEndTagComment 0x74a510 <col:103, col:107> Name="li"
|   |   |-TextComment 0x74a540 <line:1058:3> Text=" "
|   |   `-HTMLEndTagComment 0x74a560 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x74a620 <line:1060:3>
|   | `-TextComment 0x74a5f0 <col:3> Text=" "
|   |-ParamCommandComment 0x74a640 <col:4, col:15> [in] implicitly Param="None."
|   | `-ParagraphComment 0x74a6a0 <<invalid sloc>>
|   |-ParagraphComment 0x74a6f0 <line:1062:3>
|   | `-TextComment 0x74a6c0 <col:3> Text=" "
|   |-BlockCommandComment 0x74a710 <col:4, line:1063:3> Name="retval"
|   | `-ParagraphComment 0x74a790 <line:1062:11, line:1063:3>
|   |   |-TextComment 0x74a740 <line:1062:11, col:63> Text=" #OS_ERROR           -1:all tasks info obtain failed."
|   |   `-TextComment 0x74a760 <line:1063:3> Text=" "
|   |-BlockCommandComment 0x74a7b0 <col:4, line:1064:3> Name="retval"
|   | `-ParagraphComment 0x74a830 <line:1063:11, line:1064:3>
|   |   |-TextComment 0x74a7e0 <line:1063:11, col:74> Text=" #LOS_OK              0:all tasks info is successfully obtained."
|   |   `-TextComment 0x74a800 <line:1064:3> Text=" "
|   |-BlockCommandComment 0x74a850 <col:4, line:1066:3> Name="par"
|   | `-ParagraphComment 0x74aa20 <line:1064:8, line:1066:3>
|   |   |-TextComment 0x74a880 <line:1064:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x74a8a0 <line:1065:3> Text=" "
|   |   |-HTMLStartTagComment 0x74a8c0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x74a900 <col:8, col:11> Name="li"
|   |   |-TextComment 0x74a940 <col:12, col:76> Text="los_monitor.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x74a960 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0x74a990 <col:82, col:86> Name="ul"
|   |   `-TextComment 0x74a9c0 <line:1066:3> Text=" "
|   `-BlockCommandComment 0x74aa40 <col:4, col:27> Name="see"
|     `-ParagraphComment 0x74aaa0 <col:8, col:27>
|       `-TextComment 0x74aa70 <col:8, col:27> Text=" LOS_TaskInfoMonitor"
|-FunctionDecl 0x66ba18 <line:1089:1, col:73> col:15 LOS_TaskSwitchInfoGet 'UINT32 (UINT32, UINT32 *)' extern
| |-ParmVarDecl 0x66b6b8 <col:37, col:44> col:44 index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x66b980 <col:51, col:59> col:59 taskSwitchInfo 'UINT32 *'
| `-FullComment 0x74b500 <line:1071:3, line:1087:7>
|   |-ParagraphComment 0x74abd0 <line:1071:3>
|   | `-TextComment 0x74aba0 <col:3> Text=" "
|   |-VerbatimLineComment 0x74abf0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x74ac60 <line:1072:3>
|   | `-TextComment 0x74ac30 <col:3> Text=" "
|   |-BlockCommandComment 0x74ac80 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0x74ace0 <col:10, col:35>
|   |   `-TextComment 0x74acb0 <col:10, col:35> Text=" Obtain tasks switch info."
|   |-ParagraphComment 0x74ad30 <line:1074:3>
|   | `-TextComment 0x74ad00 <col:3> Text=" "
|   |-BlockCommandComment 0x74ad50 <col:4, line:1075:48> Name="par"
|   | `-ParagraphComment 0x74add0 <line:1074:8, line:1075:48>
|   |   |-TextComment 0x74ad80 <line:1074:8, col:20> Text=" Description:"
|   |   `-TextComment 0x74ada0 <line:1075:3, col:48> Text=" This API is used to obtain tasks switch info."
|   |-ParagraphComment 0x74ae20 <line:1077:3>
|   | `-TextComment 0x74adf0 <col:3> Text=" "
|   |-BlockCommandComment 0x74ae40 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x74aea0 <col:14, col:19>
|   |   `-TextComment 0x74ae70 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x74aef0 <line:1079:3>
|   | `-TextComment 0x74aec0 <col:3> Text=" "
|   |-ParamCommandComment 0x74af10 <col:4, line:1080:3> [in] implicitly Param="index" ParamIndex=0
|   | `-ParagraphComment 0x74afc0 <line:1079:17, line:1080:3>
|   |   |-TextComment 0x74af70 <line:1079:17, col:73> Text="            [IN]  Type  #UINT32  Switch info array index."
|   |   `-TextComment 0x74af90 <line:1080:3> Text=" "
|   |-ParamCommandComment 0x74afe0 <col:4, line:1081:50> [in] implicitly Param="taskSwitchInfo" ParamIndex=1
|   | `-ParagraphComment 0x74b090 <line:1080:26, line:1081:50>
|   |   |-TextComment 0x74b040 <line:1080:26, col:109> Text="   [OUT] Type  #UINT32* First 4 bytes is task id, and then is task name, name len is"
|   |   `-TextComment 0x74b060 <line:1081:3, col:50> Text="                                OS_TSK_NAME_LEN."
|   |-ParagraphComment 0x74b0e0 <line:1083:3>
|   | `-TextComment 0x74b0b0 <col:3> Text=" "
|   |-BlockCommandComment 0x74b100 <col:4, line:1084:3> Name="retval"
|   | `-ParagraphComment 0x74b180 <line:1083:11, line:1084:3>
|   |   |-TextComment 0x74b130 <line:1083:11, col:72> Text=" #LOS_ERRNO_TSK_PTR_NULL           0x02000201: Null parameter."
|   |   `-TextComment 0x74b150 <line:1084:3> Text=" "
|   |-BlockCommandComment 0x74b1a0 <col:4, line:1085:3> Name="retval"
|   | `-ParagraphComment 0x74b220 <line:1084:11, line:1085:3>
|   |   |-TextComment 0x74b1d0 <line:1084:11, col:101> Text=" #LOS_OK                           0: The task switch information is successfully obtained."
|   |   `-TextComment 0x74b1f0 <line:1085:3> Text=" "
|   |-BlockCommandComment 0x74b240 <col:4, line:1087:3> Name="par"
|   | `-ParagraphComment 0x74b410 <line:1085:8, line:1087:3>
|   |   |-TextComment 0x74b270 <line:1085:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x74b290 <line:1086:3> Text=" "
|   |   |-HTMLStartTagComment 0x74b2b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x74b2f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x74b330 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x74b350 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x74b380 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x74b3b0 <line:1087:3> Text=" "
|   `-BlockCommandComment 0x74b430 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x74b460 <<invalid sloc>>
|-FunctionDecl 0x66bbb8 <line:1108:1, col:35> col:13 LOS_TaskIsRunning 'BOOL (void)' extern
| `-FullComment 0x74bdb0 <line:1092:3, line:1106:7>
|   |-ParagraphComment 0x74b5a0 <line:1092:3>
|   | `-TextComment 0x74b570 <col:3> Text=" "
|   |-VerbatimLineComment 0x74b5c0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x74b630 <line:1093:3>
|   | `-TextComment 0x74b600 <col:3> Text=" "
|   |-BlockCommandComment 0x74b650 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0x74b6b0 <col:10, col:38>
|   |   `-TextComment 0x74b680 <col:10, col:38> Text=" Obtain tasks schduling info."
|   |-ParagraphComment 0x74b700 <line:1095:3>
|   | `-TextComment 0x74b6d0 <col:3> Text=" "
|   |-BlockCommandComment 0x74b720 <col:4, line:1096:48> Name="par"
|   | `-ParagraphComment 0x74b7a0 <line:1095:8, line:1096:48>
|   |   |-TextComment 0x74b750 <line:1095:8, col:20> Text=" Description:"
|   |   `-TextComment 0x74b770 <line:1096:3, col:48> Text=" This API is used to obtain task is scheduled."
|   |-ParagraphComment 0x74b7f0 <line:1098:3>
|   | `-TextComment 0x74b7c0 <col:3> Text=" "
|   |-BlockCommandComment 0x74b810 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x74b870 <col:14, col:19>
|   |   `-TextComment 0x74b840 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x74b8c0 <line:1100:3>
|   | `-TextComment 0x74b890 <col:3> Text=" "
|   |-ParamCommandComment 0x74b8e0 <col:4, col:15> [in] implicitly Param="None."
|   | `-ParagraphComment 0x74b940 <<invalid sloc>>
|   |-ParagraphComment 0x74b990 <line:1102:3>
|   | `-TextComment 0x74b960 <col:3> Text=" "
|   |-BlockCommandComment 0x74b9b0 <col:4, line:1103:3> Name="retval"
|   | `-ParagraphComment 0x74ba30 <line:1102:11, line:1103:3>
|   |   |-TextComment 0x74b9e0 <line:1102:11, col:44> Text=" #TRUE         Tasks is scheduled."
|   |   `-TextComment 0x74ba00 <line:1103:3> Text=" "
|   |-BlockCommandComment 0x74ba50 <col:4, line:1104:3> Name="retval"
|   | `-ParagraphComment 0x74bad0 <line:1103:11, line:1104:3>
|   |   |-TextComment 0x74ba80 <line:1103:11, col:50> Text=" #FALSE        Tasks not scheduling yet."
|   |   `-TextComment 0x74baa0 <line:1104:3> Text=" "
|   |-BlockCommandComment 0x74baf0 <col:4, line:1106:3> Name="par"
|   | `-ParagraphComment 0x74bcc0 <line:1104:8, line:1106:3>
|   |   |-TextComment 0x74bb20 <line:1104:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x74bb40 <line:1105:3> Text=" "
|   |   |-HTMLStartTagComment 0x74bb60 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x74bba0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x74bbe0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x74bc00 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x74bc30 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x74bc60 <line:1106:3> Text=" "
|   `-BlockCommandComment 0x74bce0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x74bd10 <<invalid sloc>>
|-FunctionDecl 0x66bd20 <line:1126:1, col:37> col:16 LOS_NewTaskIDGet 'UINT32 (void)' extern
| `-FullComment 0x74c5a0 <line:1111:3, line:1124:7>
|   |-ParagraphComment 0x74be50 <line:1111:3>
|   | `-TextComment 0x74be20 <col:3> Text=" "
|   |-VerbatimLineComment 0x74be70 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x74bee0 <line:1112:3>
|   | `-TextComment 0x74beb0 <col:3> Text=" "
|   |-BlockCommandComment 0x74bf00 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0x74bf60 <col:10, col:37>
|   |   `-TextComment 0x74bf30 <col:10, col:37> Text=" Obtain current new task ID."
|   |-ParagraphComment 0x74bfb0 <line:1114:3>
|   | `-TextComment 0x74bf80 <col:3> Text=" "
|   |-BlockCommandComment 0x74bfd0 <col:4, line:1115:49> Name="par"
|   | `-ParagraphComment 0x74c050 <line:1114:8, line:1115:49>
|   |   |-TextComment 0x74c000 <line:1114:8, col:20> Text=" Description:"
|   |   `-TextComment 0x74c020 <line:1115:3, col:49> Text=" This API is used to obtain the ID of new task."
|   |-ParagraphComment 0x74c0c0 <line:1117:3>
|   | `-TextComment 0x74c090 <col:3> Text=" "
|   |-BlockCommandComment 0x74c0e0 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x74c140 <col:14, col:19>
|   |   `-TextComment 0x74c110 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x74c190 <line:1120:3>
|   | `-TextComment 0x74c160 <col:3> Text=" "
|   |-BlockCommandComment 0x74c1b0 <col:4, line:1121:3> Name="retval"
|   | `-ParagraphComment 0x74c230 <line:1120:11, line:1121:3>
|   |   |-TextComment 0x74c1e0 <line:1120:11, col:68> Text=" #LOS_ERRNO_TSK_ID_INVALID    0x02000207: invalid Task ID."
|   |   `-TextComment 0x74c200 <line:1121:3> Text=" "
|   |-BlockCommandComment 0x74c250 <col:4, line:1122:3> Name="retval"
|   | `-ParagraphComment 0x74c2d0 <line:1121:11, line:1122:3>
|   |   |-TextComment 0x74c280 <line:1121:11, col:21> Text=" # Task ID."
|   |   `-TextComment 0x74c2a0 <line:1122:3> Text=" "
|   |-BlockCommandComment 0x74c2f0 <col:4, line:1124:3> Name="par"
|   | `-ParagraphComment 0x74c4c0 <line:1122:8, line:1124:3>
|   |   |-TextComment 0x74c320 <line:1122:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x74c340 <line:1123:3> Text=" "
|   |   |-HTMLStartTagComment 0x74c360 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x74c3a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x74c3e0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x74c400 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x74c430 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x74c460 <line:1124:3> Text=" "
|   `-BlockCommandComment 0x74c4e0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x74c510 <<invalid sloc>>
|-FunctionDecl 0x66bee8 <line:1144:1, col:43> col:14 LOS_TaskNameGet 'CHAR *(UINT32)' extern
| |-ParmVarDecl 0x66bdf8 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0x74ce80 <line:1128:4, line:1142:8>
|   |-ParagraphComment 0x74c640 <line:1128:4>
|   | `-TextComment 0x74c610 <col:4> Text=" "
|   |-VerbatimLineComment 0x74c660 <col:5, col:23> Text="  los_task"
|   |-ParagraphComment 0x74c6d0 <line:1129:4>
|   | `-TextComment 0x74c6a0 <col:4> Text=" "
|   |-BlockCommandComment 0x74c6f0 <col:5, col:32> Name="brief"
|   | `-ParagraphComment 0x74c750 <col:11, col:32>
|   |   `-TextComment 0x74c720 <col:11, col:32> Text=" Obtain the task name."
|   |-ParagraphComment 0x74c7a0 <line:1131:4>
|   | `-TextComment 0x74c770 <col:4> Text=" "
|   |-BlockCommandComment 0x74c7c0 <col:5, line:1132:45> Name="par"
|   | `-ParagraphComment 0x74c840 <line:1131:9, line:1132:45>
|   |   |-TextComment 0x74c7f0 <line:1131:9, col:21> Text=" Description:"
|   |   `-TextComment 0x74c810 <line:1132:4, col:45> Text=" This API is used to obtain the task name."
|   |-ParagraphComment 0x74c890 <line:1134:4>
|   | `-TextComment 0x74c860 <col:4> Text=" "
|   |-BlockCommandComment 0x74c8b0 <col:5, col:20> Name="attention"
|   | `-ParagraphComment 0x74c910 <col:15, col:20>
|   |   `-TextComment 0x74c8e0 <col:15, col:20> Text=" None."
|   |-ParagraphComment 0x74c960 <line:1136:4>
|   | `-TextComment 0x74c930 <col:4> Text=" "
|   |-ParamCommandComment 0x74c980 <col:5, col:44> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x74ca10 <col:19, col:44>
|   |   `-TextComment 0x74c9e0 <col:19, col:44> Text="            [IN]  Task ID."
|   |-ParagraphComment 0x74ca60 <line:1138:4>
|   | `-TextComment 0x74ca30 <col:4> Text=" "
|   |-BlockCommandComment 0x74ca80 <col:5, line:1139:4> Name="retval"
|   | `-ParagraphComment 0x74cb00 <line:1138:12, line:1139:4>
|   |   |-TextComment 0x74cab0 <line:1138:12, col:37> Text=" #NULL: invalid Task name."
|   |   `-TextComment 0x74cad0 <line:1139:4> Text=" "
|   |-BlockCommandComment 0x74cb20 <col:5, line:1140:4> Name="retval"
|   | `-ParagraphComment 0x74cba0 <line:1139:12, line:1140:4>
|   |   |-TextComment 0x74cb50 <line:1139:12, col:24> Text=" # Task name."
|   |   `-TextComment 0x74cb70 <line:1140:4> Text=" "
|   |-BlockCommandComment 0x74cbc0 <col:5, line:1142:4> Name="par"
|   | `-ParagraphComment 0x74cd90 <line:1140:9, line:1142:4>
|   |   |-TextComment 0x74cbf0 <line:1140:9, col:20> Text=" Dependency:"
|   |   |-TextComment 0x74cc10 <line:1141:4> Text=" "
|   |   |-HTMLStartTagComment 0x74cc30 <col:5, col:8> Name="ul"
|   |   |-HTMLStartTagComment 0x74cc70 <col:9, col:12> Name="li"
|   |   |-TextComment 0x74ccb0 <col:13, col:74> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x74ccd0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x74cd00 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x74cd30 <line:1142:4> Text=" "
|   `-BlockCommandComment 0x74cdb0 <col:5, col:8> Name="see"
|     `-ParagraphComment 0x74cde0 <<invalid sloc>>
|-FunctionDecl 0x66c0e8 <line:1164:1, col:58> col:15 LOS_TaskJoin 'UINT32 (UINT32, UINTPTR *)' extern
| |-ParmVarDecl 0x66bfa0 <col:28, col:35> col:35 taskID 'UINT32':'unsigned int'
| `-ParmVarDecl 0x66c018 <col:43, col:52> col:52 retval 'UINTPTR *'
|-FunctionDecl 0x66c238 <line:1183:1, col:43> col:15 LOS_TaskDetach 'UINT32 (UINT32)' extern
| `-ParmVarDecl 0x66c1a8 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
|-RecordDecl 0x670680 <line:1465:9, line:1494:1> line:1465:9 struct definition
| |-FullComment 0x74cff0 <line:1462:3, line:1463:43>
| | |-ParagraphComment 0x74cf20 <line:1462:3>
| | | `-TextComment 0x74cef0 <col:3> Text=" "
| | |-VerbatimLineComment 0x74cf40 <col:4, col:21> Text=" los_task"
| | `-ParagraphComment 0x74cfb0 <line:1463:3, col:43>
| |   `-TextComment 0x74cf80 <col:3, col:43> Text=" Define the task control block structure."
| |-FieldDecl 0x670738 <main/hals/driver/../../los_compiler.h:327:23, main/los_task.h:1466:34> col:34 stackPointer 'void *'
| | `-FullComment 0x74d0c0 <col:63, col:82>
| |   `-ParagraphComment 0x74d090 <col:63, col:82>
| |     `-TextComment 0x74d060 <col:63, col:82> Text=" Task stack pointer "
| |-FieldDecl 0x6707c8 <line:1467:5, col:33> col:33 taskStatus 'UINT16':'unsigned short'
| |-FieldDecl 0x670828 <line:1468:5, col:33> col:33 priority 'UINT16':'unsigned short'
| |-FieldDecl 0x670888 <line:1469:5, col:33> col:33 timeSlice 'INT32':'int'
| |-FieldDecl 0x6708e8 <line:1470:5, col:33> col:33 waitTimes 'UINT32':'unsigned int'
| |-FieldDecl 0x670948 <line:1471:5, col:33> col:33 sortList 'SortLinkList':'SortLinkList'
| |-FieldDecl 0x6709a8 <line:1472:5, col:33> col:33 startTime 'UINT64':'unsigned long long'
| |-FieldDecl 0x670a08 <line:1473:5, col:33> col:33 stackSize 'UINT32':'unsigned int'
| | `-FullComment 0x74d190 <col:63, col:79>
| |   `-ParagraphComment 0x74d160 <col:63, col:79>
| |     `-TextComment 0x74d130 <col:63, col:79> Text=" Task stack size "
| |-FieldDecl 0x670a98 <line:1474:5, col:33> col:33 topOfStack 'UINT32':'unsigned int'
| | `-FullComment 0x74d260 <col:63, col:78>
| |   `-ParagraphComment 0x74d230 <col:63, col:78>
| |     `-TextComment 0x74d200 <col:63, col:78> Text=" Task stack top "
| |-FieldDecl 0x670b28 <line:1475:5, col:33> col:33 taskID 'UINT32':'unsigned int'
| | `-FullComment 0x74d330 <col:63, col:71>
| |   `-ParagraphComment 0x74d300 <col:63, col:71>
| |     `-TextComment 0x74d2d0 <col:63, col:71> Text=" Task ID "
| |-FieldDecl 0x670bb8 <line:1476:5, col:33> col:33 taskEntry 'TSK_ENTRY_FUNC':'void *(*)(UINT32)'
| | `-FullComment 0x74d400 <col:63, col:86>
| |   `-ParagraphComment 0x74d3d0 <col:63, col:86>
| |     `-TextComment 0x74d3a0 <col:63, col:86> Text=" Task entrance function "
| |-FieldDecl 0x670c50 <main/hals/driver/../../los_compiler.h:327:23, main/los_task.h:1477:34> col:34 taskSem 'void *'
| | `-FullComment 0x74d4d0 <col:63, col:83>
| |   `-ParagraphComment 0x74d4a0 <col:63, col:83>
| |     `-TextComment 0x74d470 <col:63, col:83> Text=" Task-held semaphore "
| |-FieldDecl 0x670ce0 <main/hals/driver/../../los_compiler.h:327:23, main/los_task.h:1478:34> col:34 taskMux 'void *'
| | `-FullComment 0x74d5a0 <col:63, col:79>
| |   `-ParagraphComment 0x74d570 <col:63, col:79>
| |     `-TextComment 0x74d540 <col:63, col:79> Text=" Task-held mutex "
| |-FieldDecl 0x670d68 <line:1479:5, col:33> col:33 arg 'UINT32':'unsigned int'
| | `-FullComment 0x74d670 <col:63, col:73>
| |   `-ParagraphComment 0x74d640 <col:63, col:73>
| |     `-TextComment 0x74d610 <col:63, col:73> Text=" Parameter "
| |-FieldDecl 0x670df8 <line:1480:5, col:34> col:34 taskName 'CHAR *'
| | `-FullComment 0x74d740 <col:63, col:73>
| |   `-ParagraphComment 0x74d710 <col:63, col:73>
| |     `-TextComment 0x74d6e0 <col:63, col:73> Text=" Task name "
| |-FieldDecl 0x670e88 <line:1481:5, col:33> col:33 pendList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| |-FieldDecl 0x670ee8 <line:1482:5, col:33> col:33 timerList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| |-FieldDecl 0x670f48 <line:1483:5, col:33> col:33 joinList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| |-FieldDecl 0x670fa8 <line:1484:5, col:33> col:33 joinRetval 'UINTPTR':'unsigned int'
| | `-FullComment 0x74d810 <col:63, col:190>
| |   `-ParagraphComment 0x74d7e0 <col:63, col:190>
| |     `-TextComment 0x74d7b0 <col:63, col:190> Text=" Return value of the end of the task, If the task does not exit by itself, the ID of the task that killed the task is recorded. "
| |-FieldDecl 0x671038 <line:1485:5, col:33> col:33 event 'EVENT_CB_S':'struct tagEvent'
| |-FieldDecl 0x671098 <line:1486:5, col:33> col:33 eventMask 'UINT32':'unsigned int'
| | `-FullComment 0x74d8e0 <col:63, col:74>
| |   `-ParagraphComment 0x74d8b0 <col:63, col:74>
| |     `-TextComment 0x74d880 <col:63, col:74> Text=" Event mask "
| |-FieldDecl 0x671128 <line:1487:5, col:33> col:33 eventMode 'UINT32':'unsigned int'
| | `-FullComment 0x74d9b0 <col:63, col:74>
| |   `-ParagraphComment 0x74d980 <col:63, col:74>
| |     `-TextComment 0x74d950 <col:63, col:74> Text=" Event mode "
| |-FieldDecl 0x6711c0 <main/hals/driver/../../los_compiler.h:327:23, main/los_task.h:1488:34> col:34 msg 'void *'
| | `-FullComment 0x74da80 <col:63, col:90>
| |   `-ParagraphComment 0x74da50 <col:63, col:90>
| |     `-TextComment 0x74da20 <col:63, col:90> Text=" Memory allocated to queues "
| `-FieldDecl 0x671248 <line:1489:5, col:33> col:33 errorNo 'INT32':'int'
|-TypedefDecl 0x671328 <line:1465:1, line:1494:3> col:3 referenced LosTaskCB 'struct LosTaskCB':'LosTaskCB'
| |-ElaboratedType 0x6712d0 'struct LosTaskCB' sugar
| | `-RecordType 0x670700 'LosTaskCB'
| |   `-Record 0x670680 ''
| `-FullComment 0x74dbf0 <line:1462:3, line:1463:43>
|   |-ParagraphComment 0x74db20 <line:1462:3>
|   | `-TextComment 0x74daf0 <col:3> Text=" "
|   |-VerbatimLineComment 0x74db40 <col:4, col:21> Text=" los_task"
|   `-ParagraphComment 0x74dbb0 <line:1463:3, col:43>
|     `-TextComment 0x74db80 <col:3, col:43> Text=" Define the task control block structure."
|-RecordDecl 0x671398 <line:1496:9, line:1499:1> line:1496:9 struct definition
| |-FieldDecl 0x6714c8 <line:1497:5, col:18> col:18 referenced runTask 'LosTaskCB *'
| `-FieldDecl 0x671528 <line:1498:5, col:18> col:18 newTask 'LosTaskCB *'
|-TypedefDecl 0x6715d8 <line:1496:1, line:1499:3> col:3 referenced LosTask 'struct LosTask':'LosTask'
| `-ElaboratedType 0x671580 'struct LosTask' sugar
|   `-RecordType 0x671420 'LosTask'
|     `-Record 0x671398 ''
|-RecordDecl 0x672a20 <line:1501:9, line:1505:1> line:1501:9 struct definition
| |-FieldDecl 0x672ad0 <line:1502:5, col:18> col:18 sortLink 'LOS_DL_LIST *'
| |-FieldDecl 0x672b30 <line:1503:5, col:17> col:17 cursor 'UINT16':'unsigned short'
| `-FieldDecl 0x672b90 <line:1504:5, col:17> col:17 reserved 'UINT16':'unsigned short'
|-TypedefDecl 0x672c38 <line:1501:1, line:1505:3> col:3 TaskSortLinkAttr 'struct TaskSortLinkAttr':'TaskSortLinkAttr'
| `-ElaboratedType 0x672be0 'struct TaskSortLinkAttr' sugar
|   `-RecordType 0x672aa0 'TaskSortLinkAttr'
|     `-Record 0x672a20 ''
|-RecordDecl 0x672cd0 <line:1511:9, line:1515:1> line:1511:16 struct TaskTimeSlice definition
| |-FullComment 0x74dd60 <line:1508:3, line:1509:24>
| | |-ParagraphComment 0x74dc90 <line:1508:3>
| | | `-TextComment 0x74dc60 <col:3> Text=" "
| | |-VerbatimLineComment 0x74dcb0 <col:4, col:21> Text=" los_task"
| | `-ParagraphComment 0x74dd20 <line:1509:3, col:24>
| |   `-TextComment 0x74dcf0 <col:3, col:24> Text=" Time slice structure."
| |-FieldDecl 0x672d80 <line:1512:5, col:30> col:30 task 'LosTaskCB *'
| | `-FullComment 0x74de30 <col:63, col:84>
| |   `-ParagraphComment 0x74de00 <col:63, col:84>
| |     `-TextComment 0x74ddd0 <col:63, col:84> Text=" Current running task "
| |-FieldDecl 0x672e08 <line:1513:5, col:29> col:29 time 'UINT16':'unsigned short'
| | `-FullComment 0x74df00 <col:63, col:85>
| |   `-ParagraphComment 0x74ded0 <col:63, col:85>
| |     `-TextComment 0x74dea0 <col:63, col:85> Text=" Expiration time point "
| `-FieldDecl 0x672e98 <line:1514:5, col:29> col:29 tout 'UINT16':'unsigned short'
|   `-FullComment 0x74dfd0 <col:63, col:83>
|     `-ParagraphComment 0x74dfa0 <col:63, col:83>
|       `-TextComment 0x74df70 <col:63, col:83> Text=" Expiration duration "
|-TypedefDecl 0x672f78 <line:1511:1, line:1515:3> col:3 OsTaskRobin 'struct TaskTimeSlice':'struct TaskTimeSlice'
| |-ElaboratedType 0x672f20 'struct TaskTimeSlice' sugar
| | `-RecordType 0x672d50 'struct TaskTimeSlice'
| |   `-Record 0x672cd0 'TaskTimeSlice'
| `-FullComment 0x74e960 <line:1508:3, line:1509:24>
|   |-ParagraphComment 0x74e070 <line:1508:3>
|   | `-TextComment 0x74e040 <col:3> Text=" "
|   |-VerbatimLineComment 0x74e8b0 <col:4, col:21> Text=" los_task"
|   `-ParagraphComment 0x74e920 <line:1509:3, col:24>
|     `-TextComment 0x74e8f0 <col:3, col:24> Text=" Time slice structure."
|-RecordDecl 0x672fe8 <line:1517:9, line:1520:1> line:1517:9 struct definition
| |-FieldDecl 0x6730d8 <line:1518:5, col:20> col:11 maxCnt 'UINT8':'unsigned char'
| | `-ConstantExpr 0x6730c0 <col:20> 'int'
| |   `-IntegerLiteral 0x673090 <col:20> 'int' 7
| `-FieldDecl 0x673170 <line:1519:5, col:20> col:11 isFull 'UINT8':'unsigned char'
|   `-ConstantExpr 0x673158 <col:20> 'int'
|     `-IntegerLiteral 0x673128 <col:20> 'int' 1
|-TypedefDecl 0x673218 <line:1517:1, line:1520:3> col:3 referenced TaskCountInfo 'struct TaskCountInfo':'TaskCountInfo'
| `-ElaboratedType 0x6731c0 'struct TaskCountInfo' sugar
|   `-RecordType 0x673070 'TaskCountInfo'
|     `-Record 0x672fe8 ''
|-RecordDecl 0x6732b0 <line:1527:9, line:1532:1> line:1527:9 struct definition
| |-FullComment 0x74eb20 <line:1523:3, line:1526:1>
| | |-ParagraphComment 0x74ea00 <line:1523:3>
| | | `-TextComment 0x74e9d0 <col:3> Text=" "
| | |-VerbatimLineComment 0x74ea20 <col:4, col:21> Text=" los_task"
| | |-ParagraphComment 0x74ea90 <line:1524:3, col:37>
| | | `-TextComment 0x74ea60 <col:3, col:37> Text=" Task switch information structure."
| | `-ParagraphComment 0x74eae0 <line:1526:1>
| |   `-TextComment 0x74eab0 <col:1> Text=" "
| |-FieldDecl 0x673360 <line:1528:5, col:11> col:11 idx 'UINT8':'unsigned char'
| |-FieldDecl 0x6733e0 <line:1529:5, col:19> col:19 cntInfo 'TaskCountInfo':'TaskCountInfo'
| |-FieldDecl 0x673508 <line:1530:5, col:41> col:12 pid 'UINT16 [10]'
| `-FieldDecl 0x673678 <line:1531:5, col:60> col:12 name 'CHAR [10][32]'
|-TypedefDecl 0x673728 <line:1527:1, line:1532:3> col:3 TaskSwitchInfo 'struct TaskSwitchInfo':'TaskSwitchInfo'
| |-ElaboratedType 0x6736d0 'struct TaskSwitchInfo' sugar
| | `-RecordType 0x673330 'TaskSwitchInfo'
| |   `-Record 0x6732b0 ''
| `-FullComment 0x74ece0 <line:1523:3, line:1526:1>
|   |-ParagraphComment 0x74ebc0 <line:1523:3>
|   | `-TextComment 0x74eb90 <col:3> Text=" "
|   |-VerbatimLineComment 0x74ebe0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x74ec50 <line:1524:3, col:37>
|   | `-TextComment 0x74ec20 <col:3, col:37> Text=" Task switch information structure."
|   `-ParagraphComment 0x74eca0 <line:1526:1>
|     `-TextComment 0x74ec70 <col:1> Text=" "
|-VarDecl 0x6737d0 <line:1538:1, col:29> col:29 used g_losTask 'LosTask':'LosTask' extern
|-VarDecl 0x673878 <line:1545:1, col:29> col:29 g_losTaskLock 'UINT16':'unsigned short' extern
| `-FullComment 0x74eea0 <line:1541:3, line:1544:1>
|   |-ParagraphComment 0x74ed80 <line:1541:3>
|   | `-TextComment 0x74ed50 <col:3> Text=" "
|   |-VerbatimLineComment 0x74eda0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x74ee10 <line:1542:3, col:18>
|   | `-TextComment 0x74ede0 <col:3, col:18> Text=" Task lock flag."
|   `-ParagraphComment 0x74ee60 <line:1544:1>
|     `-TextComment 0x74ee30 <col:1> Text=" "
|-VarDecl 0x673918 <line:1558:1, col:29> col:29 g_taskMaxNum 'UINT32':'unsigned int' extern
| `-FullComment 0x74f060 <line:1554:3, line:1557:1>
|   |-ParagraphComment 0x74ef40 <line:1554:3>
|   | `-TextComment 0x74ef10 <col:3> Text=" "
|   |-VerbatimLineComment 0x74ef60 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x74efd0 <line:1555:3, col:27>
|   | `-TextComment 0x74efa0 <col:3, col:27> Text=" Maximum number of tasks."
|   `-ParagraphComment 0x74f020 <line:1557:1>
|     `-TextComment 0x74eff0 <col:1> Text=" "
|-VarDecl 0x6739b8 <line:1565:1, col:29> col:29 g_idleTaskID 'UINT32':'unsigned int' extern
| `-FullComment 0x74f220 <line:1561:3, line:1564:1>
|   |-ParagraphComment 0x74f100 <line:1561:3>
|   | `-TextComment 0x74f0d0 <col:3> Text=" "
|   |-VerbatimLineComment 0x74f120 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x74f190 <line:1562:3, col:16>
|   | `-TextComment 0x74f160 <col:3, col:16> Text=" Idle task ID."
|   `-ParagraphComment 0x74f1e0 <line:1564:1>
|     `-TextComment 0x74f1b0 <col:1> Text=" "
|-VarDecl 0x675c38 <line:1572:1, col:29> col:29 g_swtmrTaskID 'UINT32':'unsigned int' extern
| `-FullComment 0x74f3e0 <line:1568:3, line:1571:1>
|   |-ParagraphComment 0x74f2c0 <line:1568:3>
|   | `-TextComment 0x74f290 <col:3> Text=" "
|   |-VerbatimLineComment 0x74f2e0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x74f350 <line:1569:3, col:26>
|   | `-TextComment 0x74f320 <col:3, col:26> Text=" Software timer task ID."
|   `-ParagraphComment 0x74f3a0 <line:1571:1>
|     `-TextComment 0x74f370 <col:1> Text=" "
|-VarDecl 0x675cd8 <line:1579:1, col:30> col:30 g_taskCBArray 'LosTaskCB *' extern
| `-FullComment 0x74f5a0 <line:1575:3, line:1578:1>
|   |-ParagraphComment 0x74f480 <line:1575:3>
|   | `-TextComment 0x74f450 <col:3> Text=" "
|   |-VerbatimLineComment 0x74f4a0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x74f510 <line:1576:3, col:30>
|   | `-TextComment 0x74f4e0 <col:3, col:30> Text=" Starting address of a task."
|   `-ParagraphComment 0x74f560 <line:1578:1>
|     `-TextComment 0x74f530 <col:1> Text=" "
|-VarDecl 0x675d78 <line:1586:1, col:29> col:29 g_losFreeTask 'LOS_DL_LIST':'struct LOS_DL_LIST' extern
| `-FullComment 0x74f760 <line:1582:3, line:1585:1>
|   |-ParagraphComment 0x74f640 <line:1582:3>
|   | `-TextComment 0x74f610 <col:3> Text=" "
|   |-VerbatimLineComment 0x74f660 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x74f6d0 <line:1583:3, col:25>
|   | `-TextComment 0x74f6a0 <col:3, col:25> Text=" Free task linked list."
|   `-ParagraphComment 0x74f720 <line:1585:1>
|     `-TextComment 0x74f6f0 <col:1> Text=" "
|-VarDecl 0x675e18 <line:1593:1, col:29> col:29 g_taskRecycleList 'LOS_DL_LIST':'struct LOS_DL_LIST' extern
| `-FullComment 0x74f920 <line:1589:3, line:1592:1>
|   |-ParagraphComment 0x74f800 <line:1589:3>
|   | `-TextComment 0x74f7d0 <col:3> Text=" "
|   |-VerbatimLineComment 0x74f820 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x74f890 <line:1590:3, col:73>
|   | `-TextComment 0x74f860 <col:3, col:73> Text=" Circular linked list that stores tasks that are deleted automatically."
|   `-ParagraphComment 0x74f8e0 <line:1592:1>
|     `-TextComment 0x74f8b0 <col:1> Text=" "
|-FunctionDecl 0x675f40 <line:1614:1, col:30> col:15 OsTaskInit 'UINT32 (void)' extern
| `-FullComment 0x750290 <line:1596:3, line:1612:7>
|   |-ParagraphComment 0x74f9c0 <line:1596:3>
|   | `-TextComment 0x74f990 <col:3> Text=" "
|   |-VerbatimLineComment 0x74f9e0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x74fa50 <line:1597:3>
|   | `-TextComment 0x74fa20 <col:3> Text=" "
|   |-BlockCommandComment 0x74fa70 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0x74fad0 <col:10, col:32>
|   |   `-TextComment 0x74faa0 <col:10, col:32> Text=" Initialization a task."
|   |-ParagraphComment 0x74fb20 <line:1599:3>
|   | `-TextComment 0x74faf0 <col:3> Text=" "
|   |-BlockCommandComment 0x74fb40 <col:4, line:1600:45> Name="par"
|   | `-ParagraphComment 0x74fbc0 <line:1599:8, line:1600:45>
|   |   |-TextComment 0x74fb70 <line:1599:8, col:20> Text=" Description:"
|   |   `-TextComment 0x74fb90 <line:1600:3, col:45> Text=" This API is used to initialization a task."
|   |-ParagraphComment 0x74fc10 <line:1602:3>
|   | `-TextComment 0x74fbe0 <col:3> Text=" "
|   |-BlockCommandComment 0x74fc30 <col:4, line:1605:8> Name="attention"
|   | `-ParagraphComment 0x74fe00 <line:1603:3, line:1605:8>
|   |   |-TextComment 0x74fc60 <line:1603:3> Text=" "
|   |   |-HTMLStartTagComment 0x74fc80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x74fcc0 <line:1604:3> Text=" "
|   |   |-HTMLStartTagComment 0x74fce0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x74fd20 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x74fd40 <col:13, col:17> Name="li"
|   |   |-TextComment 0x74fd70 <line:1605:3> Text=" "
|   |   `-HTMLEndTagComment 0x74fd90 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x74fe50 <line:1607:3>
|   | `-TextComment 0x74fe20 <col:3> Text=" "
|   |-ParamCommandComment 0x74fe70 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x74fed0 <<invalid sloc>>
|   |-ParagraphComment 0x74ff20 <line:1609:3>
|   | `-TextComment 0x74fef0 <col:3> Text=" "
|   |-BlockCommandComment 0x74ff40 <col:4, line:1610:3> Name="retval"
|   | `-ParagraphComment 0x74ffc0 <line:1609:11, line:1610:3>
|   |   |-TextComment 0x74ff70 <line:1609:11, col:44> Text="  UINT32    Initialization result."
|   |   `-TextComment 0x74ff90 <line:1610:3> Text=" "
|   |-BlockCommandComment 0x74ffe0 <col:4, line:1612:3> Name="par"
|   | `-ParagraphComment 0x7501b0 <line:1610:8, line:1612:3>
|   |   |-TextComment 0x750010 <line:1610:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x750030 <line:1611:3> Text=" "
|   |   |-HTMLStartTagComment 0x750050 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x750090 <col:8, col:11> Name="li"
|   |   |-TextComment 0x7500d0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x7500f0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x750120 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x750150 <line:1612:3> Text=" "
|   `-BlockCommandComment 0x7501d0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x750200 <<invalid sloc>>
|-FunctionDecl 0x6760a0 <line:1635:1, col:36> col:15 OsIdleTaskCreate 'UINT32 (void)' extern
| `-FullComment 0x750c10 <line:1617:3, line:1633:7>
|   |-ParagraphComment 0x750330 <line:1617:3>
|   | `-TextComment 0x750300 <col:3> Text=" "
|   |-VerbatimLineComment 0x750350 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x7503c0 <line:1618:3>
|   | `-TextComment 0x750390 <col:3> Text=" "
|   |-BlockCommandComment 0x7503e0 <col:4, col:27> Name="brief"
|   | `-ParagraphComment 0x750440 <col:10, col:27>
|   |   `-TextComment 0x750410 <col:10, col:27> Text=" Create idle task."
|   |-ParagraphComment 0x750490 <line:1620:3>
|   | `-TextComment 0x750460 <col:3> Text=" "
|   |-BlockCommandComment 0x7504b0 <col:4, line:1621:40> Name="par"
|   | `-ParagraphComment 0x750530 <line:1620:8, line:1621:40>
|   |   |-TextComment 0x7504e0 <line:1620:8, col:20> Text=" Description:"
|   |   `-TextComment 0x750500 <line:1621:3, col:40> Text=" This API is used to create idle task."
|   |-ParagraphComment 0x750580 <line:1623:3>
|   | `-TextComment 0x750550 <col:3> Text=" "
|   |-BlockCommandComment 0x7505a0 <col:4, line:1626:8> Name="attention"
|   | `-ParagraphComment 0x750770 <line:1624:3, line:1626:8>
|   |   |-TextComment 0x7505d0 <line:1624:3> Text=" "
|   |   |-HTMLStartTagComment 0x7505f0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x750630 <line:1625:3> Text=" "
|   |   |-HTMLStartTagComment 0x750650 <col:4, col:7> Name="li"
|   |   |-TextComment 0x750690 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x7506b0 <col:13, col:17> Name="li"
|   |   |-TextComment 0x7506e0 <line:1626:3> Text=" "
|   |   `-HTMLEndTagComment 0x750700 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x7507c0 <line:1628:3>
|   | `-TextComment 0x750790 <col:3> Text=" "
|   |-ParamCommandComment 0x7507e0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x750840 <<invalid sloc>>
|   |-ParagraphComment 0x750890 <line:1630:3>
|   | `-TextComment 0x750860 <col:3> Text=" "
|   |-BlockCommandComment 0x7508c0 <col:4, line:1631:3> Name="retval"
|   | `-ParagraphComment 0x750940 <line:1630:11, line:1631:3>
|   |   |-TextComment 0x7508f0 <line:1630:11, col:35> Text="  UINT32   Create result."
|   |   `-TextComment 0x750910 <line:1631:3> Text=" "
|   |-BlockCommandComment 0x750960 <col:4, line:1633:3> Name="par"
|   | `-ParagraphComment 0x750b30 <line:1631:8, line:1633:3>
|   |   |-TextComment 0x750990 <line:1631:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x7509b0 <line:1632:3> Text=" "
|   |   |-HTMLStartTagComment 0x7509d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x750a10 <col:8, col:11> Name="li"
|   |   |-TextComment 0x750a50 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x750a70 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x750aa0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x750ad0 <line:1633:3> Text=" "
|   `-BlockCommandComment 0x750b50 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x750b80 <<invalid sloc>>
|-FunctionDecl 0x676200 <line:1656:1, col:35> col:13 OsTaskSwitchCheck 'void (void)' extern
| `-FullComment 0x751580 <line:1638:3, line:1654:7>
|   |-ParagraphComment 0x750cb0 <line:1638:3>
|   | `-TextComment 0x750c80 <col:3> Text=" "
|   |-VerbatimLineComment 0x750cd0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x750d40 <line:1639:3>
|   | `-TextComment 0x750d10 <col:3> Text=" "
|   |-BlockCommandComment 0x750d60 <col:4, col:28> Name="brief"
|   | `-ParagraphComment 0x750dc0 <col:10, col:28>
|   |   `-TextComment 0x750d90 <col:10, col:28> Text=" Check task switch."
|   |-ParagraphComment 0x750e10 <line:1641:3>
|   | `-TextComment 0x750de0 <col:3> Text=" "
|   |-BlockCommandComment 0x750e30 <col:4, line:1642:41> Name="par"
|   | `-ParagraphComment 0x750eb0 <line:1641:8, line:1642:41>
|   |   |-TextComment 0x750e60 <line:1641:8, col:20> Text=" Description:"
|   |   `-TextComment 0x750e80 <line:1642:3, col:41> Text=" This API is used to check task switch."
|   |-ParagraphComment 0x750f00 <line:1644:3>
|   | `-TextComment 0x750ed0 <col:3> Text=" "
|   |-BlockCommandComment 0x750f20 <col:4, line:1647:8> Name="attention"
|   | `-ParagraphComment 0x7510f0 <line:1645:3, line:1647:8>
|   |   |-TextComment 0x750f50 <line:1645:3> Text=" "
|   |   |-HTMLStartTagComment 0x750f70 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x750fb0 <line:1646:3> Text=" "
|   |   |-HTMLStartTagComment 0x750fd0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x751010 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x751030 <col:13, col:17> Name="li"
|   |   |-TextComment 0x751060 <line:1647:3> Text=" "
|   |   `-HTMLEndTagComment 0x751080 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x751140 <line:1649:3>
|   | `-TextComment 0x751110 <col:3> Text=" "
|   |-ParamCommandComment 0x751160 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x7511c0 <<invalid sloc>>
|   |-ParagraphComment 0x751210 <line:1651:3>
|   | `-TextComment 0x7511e0 <col:3> Text=" "
|   |-BlockCommandComment 0x751230 <col:4, line:1652:3> Name="retval"
|   | `-ParagraphComment 0x7512b0 <line:1651:11, line:1652:3>
|   |   |-TextComment 0x751260 <line:1651:11, col:17> Text="  None."
|   |   `-TextComment 0x751280 <line:1652:3> Text=" "
|   |-BlockCommandComment 0x7512d0 <col:4, line:1654:3> Name="par"
|   | `-ParagraphComment 0x7514a0 <line:1652:8, line:1654:3>
|   |   |-TextComment 0x751300 <line:1652:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x751320 <line:1653:3> Text=" "
|   |   |-HTMLStartTagComment 0x751340 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x751380 <col:8, col:11> Name="li"
|   |   |-TextComment 0x7513c0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x7513e0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x751410 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x751440 <line:1654:3> Text=" "
|   `-BlockCommandComment 0x7514c0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x7514f0 <<invalid sloc>>
|-FunctionDecl 0x676360 <line:1677:1, col:31> col:13 OsTaskMonInit 'void (void)' extern
| `-FullComment 0x751ef0 <line:1659:3, line:1675:7>
|   |-ParagraphComment 0x751620 <line:1659:3>
|   | `-TextComment 0x7515f0 <col:3> Text=" "
|   |-VerbatimLineComment 0x751640 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x7516b0 <line:1660:3>
|   | `-TextComment 0x751680 <col:3> Text=" "
|   |-BlockCommandComment 0x7516d0 <col:4, col:22> Name="brief"
|   | `-ParagraphComment 0x751730 <col:10, col:22>
|   |   `-TextComment 0x751700 <col:10, col:22> Text=" TaskMonInit."
|   |-ParagraphComment 0x751780 <line:1662:3>
|   | `-TextComment 0x751750 <col:3> Text=" "
|   |-BlockCommandComment 0x7517a0 <col:4, line:1663:35> Name="par"
|   | `-ParagraphComment 0x751820 <line:1662:8, line:1663:35>
|   |   |-TextComment 0x7517d0 <line:1662:8, col:20> Text=" Description:"
|   |   `-TextComment 0x7517f0 <line:1663:3, col:35> Text=" This API is used to taskMonInit."
|   |-ParagraphComment 0x751870 <line:1665:3>
|   | `-TextComment 0x751840 <col:3> Text=" "
|   |-BlockCommandComment 0x751890 <col:4, line:1668:8> Name="attention"
|   | `-ParagraphComment 0x751a60 <line:1666:3, line:1668:8>
|   |   |-TextComment 0x7518c0 <line:1666:3> Text=" "
|   |   |-HTMLStartTagComment 0x7518e0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x751920 <line:1667:3> Text=" "
|   |   |-HTMLStartTagComment 0x751940 <col:4, col:7> Name="li"
|   |   |-TextComment 0x751980 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x7519a0 <col:13, col:17> Name="li"
|   |   |-TextComment 0x7519d0 <line:1668:3> Text=" "
|   |   `-HTMLEndTagComment 0x7519f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x751ab0 <line:1670:3>
|   | `-TextComment 0x751a80 <col:3> Text=" "
|   |-ParamCommandComment 0x751ad0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x751b30 <<invalid sloc>>
|   |-ParagraphComment 0x751b80 <line:1672:3>
|   | `-TextComment 0x751b50 <col:3> Text=" "
|   |-BlockCommandComment 0x751ba0 <col:4, line:1673:3> Name="retval"
|   | `-ParagraphComment 0x751c20 <line:1672:11, line:1673:3>
|   |   |-TextComment 0x751bd0 <line:1672:11, col:17> Text="  None."
|   |   `-TextComment 0x751bf0 <line:1673:3> Text=" "
|   |-BlockCommandComment 0x751c40 <col:4, line:1675:3> Name="par"
|   | `-ParagraphComment 0x751e10 <line:1673:8, line:1675:3>
|   |   |-TextComment 0x751c70 <line:1673:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x751c90 <line:1674:3> Text=" "
|   |   |-HTMLStartTagComment 0x751cb0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x751cf0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x751d30 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x751d50 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x751d80 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x751db0 <line:1675:3> Text=" "
|   `-BlockCommandComment 0x751e30 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x751e60 <<invalid sloc>>
|-FunctionDecl 0x6764c8 <line:1698:1, col:38> col:13 OsTaskEntry 'void (UINT32)' extern
| |-ParmVarDecl 0x676438 <col:25, col:32> col:32 taskID 'UINT32':'unsigned int'
| `-FullComment 0x752890 <line:1680:3, line:1696:7>
|   |-ParagraphComment 0x751f90 <line:1680:3>
|   | `-TextComment 0x751f60 <col:3> Text=" "
|   |-VerbatimLineComment 0x751fb0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x752020 <line:1681:3>
|   | `-TextComment 0x751ff0 <col:3> Text=" "
|   |-BlockCommandComment 0x752040 <col:4, col:21> Name="brief"
|   | `-ParagraphComment 0x7520a0 <col:10, col:21>
|   |   `-TextComment 0x752070 <col:10, col:21> Text=" Task entry."
|   |-ParagraphComment 0x7520f0 <line:1683:3>
|   | `-TextComment 0x7520c0 <col:3> Text=" "
|   |-BlockCommandComment 0x752110 <col:4, line:1684:34> Name="par"
|   | `-ParagraphComment 0x752190 <line:1683:8, line:1684:34>
|   |   |-TextComment 0x752140 <line:1683:8, col:20> Text=" Description:"
|   |   `-TextComment 0x752160 <line:1684:3, col:34> Text=" This API is used to task entry."
|   |-ParagraphComment 0x7521e0 <line:1686:3>
|   | `-TextComment 0x7521b0 <col:3> Text=" "
|   |-BlockCommandComment 0x752200 <col:4, line:1689:8> Name="attention"
|   | `-ParagraphComment 0x7523d0 <line:1687:3, line:1689:8>
|   |   |-TextComment 0x752230 <line:1687:3> Text=" "
|   |   |-HTMLStartTagComment 0x752250 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x752290 <line:1688:3> Text=" "
|   |   |-HTMLStartTagComment 0x7522b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x7522f0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x752310 <col:13, col:17> Name="li"
|   |   |-TextComment 0x752340 <line:1689:3> Text=" "
|   |   `-HTMLEndTagComment 0x752360 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x752420 <line:1691:3>
|   | `-TextComment 0x7523f0 <col:3> Text=" "
|   |-ParamCommandComment 0x752440 <col:4, col:47> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x7524d0 <col:18, col:47>
|   |   `-TextComment 0x7524a0 <col:18, col:47> Text="  [IN] Type #UINT32   task id."
|   |-ParagraphComment 0x752520 <line:1693:3>
|   | `-TextComment 0x7524f0 <col:3> Text=" "
|   |-BlockCommandComment 0x752540 <col:4, line:1694:3> Name="retval"
|   | `-ParagraphComment 0x7525c0 <line:1693:11, line:1694:3>
|   |   |-TextComment 0x752570 <line:1693:11, col:17> Text="  None."
|   |   `-TextComment 0x752590 <line:1694:3> Text=" "
|   |-BlockCommandComment 0x7525e0 <col:4, line:1696:3> Name="par"
|   | `-ParagraphComment 0x7527b0 <line:1694:8, line:1696:3>
|   |   |-TextComment 0x752610 <line:1694:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x752630 <line:1695:3> Text=" "
|   |   |-HTMLStartTagComment 0x752650 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x752690 <col:8, col:11> Name="li"
|   |   |-TextComment 0x7526d0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x7526f0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x752720 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x752750 <line:1696:3> Text=" "
|   `-BlockCommandComment 0x7527d0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x752800 <<invalid sloc>>
|-FunctionDecl 0x676638 <line:1719:1, col:47> col:15 OsGetTaskWaterLine 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x6765a8 <col:34, col:41> col:41 taskID 'UINT32':'unsigned int'
| `-FullComment 0x753270 <line:1701:3, line:1717:13>
|   |-ParagraphComment 0x752940 <line:1701:3>
|   | `-TextComment 0x752910 <col:3> Text=" "
|   |-VerbatimLineComment 0x752960 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x7529d0 <line:1702:3>
|   | `-TextComment 0x7529a0 <col:3> Text=" "
|   |-BlockCommandComment 0x7529f0 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0x752a50 <col:10, col:34>
|   |   `-TextComment 0x752a20 <col:10, col:34> Text=" Get the task water line."
|   |-ParagraphComment 0x752aa0 <line:1704:3>
|   | `-TextComment 0x752a70 <col:3> Text=" "
|   |-BlockCommandComment 0x752ac0 <col:4, line:1705:47> Name="par"
|   | `-ParagraphComment 0x752b40 <line:1704:8, line:1705:47>
|   |   |-TextComment 0x752af0 <line:1704:8, col:20> Text=" Description:"
|   |   `-TextComment 0x752b10 <line:1705:3, col:47> Text=" This API is used to get the task water line."
|   |-ParagraphComment 0x752b90 <line:1707:3>
|   | `-TextComment 0x752b60 <col:3> Text=" "
|   |-BlockCommandComment 0x752bb0 <col:4, line:1710:8> Name="attention"
|   | `-ParagraphComment 0x752d80 <line:1708:3, line:1710:8>
|   |   |-TextComment 0x752be0 <line:1708:3> Text=" "
|   |   |-HTMLStartTagComment 0x752c00 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x752c40 <line:1709:3> Text=" "
|   |   |-HTMLStartTagComment 0x752c60 <col:4, col:7> Name="li"
|   |   |-TextComment 0x752ca0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x752cc0 <col:13, col:17> Name="li"
|   |   |-TextComment 0x752cf0 <line:1710:3> Text=" "
|   |   `-HTMLEndTagComment 0x752d10 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x752dd0 <line:1712:3>
|   | `-TextComment 0x752da0 <col:3> Text=" "
|   |-ParamCommandComment 0x752df0 <col:4, col:44> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x752e80 <col:18, col:44>
|   |   `-TextComment 0x752e50 <col:18, col:44> Text=" [IN] Type #UINT32 task id."
|   |-ParagraphComment 0x752ed0 <line:1714:3>
|   | `-TextComment 0x752ea0 <col:3> Text=" "
|   |-BlockCommandComment 0x752ef0 <col:4, line:1715:3> Name="retval"
|   | `-ParagraphComment 0x752f70 <line:1714:11, line:1715:3>
|   |   |-TextComment 0x752f20 <line:1714:11, col:36> Text="  UINT32  Task water line."
|   |   `-TextComment 0x752f40 <line:1715:3> Text=" "
|   |-BlockCommandComment 0x752f90 <col:4, line:1717:3> Name="par"
|   | `-ParagraphComment 0x753160 <line:1715:8, line:1717:3>
|   |   |-TextComment 0x752fc0 <line:1715:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x752fe0 <line:1716:3> Text=" "
|   |   |-HTMLStartTagComment 0x753000 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x753040 <col:8, col:11> Name="li"
|   |   |-TextComment 0x753080 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x7530a0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x7530d0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x753100 <line:1717:3> Text=" "
|   `-BlockCommandComment 0x753180 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x7531e0 <col:8, col:13>
|       `-TextComment 0x7531b0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x676808 <line:1740:1, col:51> col:15 OsConvertTskStatus 'UINT8 *(UINT16)' extern
| |-ParmVarDecl 0x676718 <col:34, col:41> col:41 taskStatus 'UINT16':'unsigned short'
| `-FullComment 0x753c40 <line:1722:3, line:1738:13>
|   |-ParagraphComment 0x753310 <line:1722:3>
|   | `-TextComment 0x7532e0 <col:3> Text=" "
|   |-VerbatimLineComment 0x753330 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x7533a0 <line:1723:3>
|   | `-TextComment 0x753370 <col:3> Text=" "
|   |-BlockCommandComment 0x7533c0 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0x753420 <col:10, col:40>
|   |   `-TextComment 0x7533f0 <col:10, col:40> Text=" Convert task status to string."
|   |-ParagraphComment 0x753470 <line:1725:3>
|   | `-TextComment 0x753440 <col:3> Text=" "
|   |-BlockCommandComment 0x753490 <col:4, line:1726:53> Name="par"
|   | `-ParagraphComment 0x753510 <line:1725:8, line:1726:53>
|   |   |-TextComment 0x7534c0 <line:1725:8, col:20> Text=" Description:"
|   |   `-TextComment 0x7534e0 <line:1726:3, col:53> Text=" This API is used to convert task status to string."
|   |-ParagraphComment 0x753560 <line:1728:3>
|   | `-TextComment 0x753530 <col:3> Text=" "
|   |-BlockCommandComment 0x753580 <col:4, line:1731:8> Name="attention"
|   | `-ParagraphComment 0x753750 <line:1729:3, line:1731:8>
|   |   |-TextComment 0x7535b0 <line:1729:3> Text=" "
|   |   |-HTMLStartTagComment 0x7535d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x753610 <line:1730:3> Text=" "
|   |   |-HTMLStartTagComment 0x753630 <col:4, col:7> Name="li"
|   |   |-TextComment 0x753670 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x753690 <col:13, col:17> Name="li"
|   |   |-TextComment 0x7536c0 <line:1731:3> Text=" "
|   |   `-HTMLEndTagComment 0x7536e0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x7537a0 <line:1733:3>
|   | `-TextComment 0x753770 <col:3> Text=" "
|   |-ParamCommandComment 0x7537c0 <col:4, col:52> [in] implicitly Param="taskStatus" ParamIndex=0
|   | `-ParagraphComment 0x753850 <col:22, col:52>
|   |   `-TextComment 0x753820 <col:22, col:52> Text=" [IN] Type #UINT16 task status."
|   |-ParagraphComment 0x7538a0 <line:1735:3>
|   | `-TextComment 0x753870 <col:3> Text=" "
|   |-BlockCommandComment 0x7538c0 <col:4, line:1736:3> Name="retval"
|   | `-ParagraphComment 0x753940 <line:1735:11, line:1736:3>
|   |   |-TextComment 0x7538f0 <line:1735:11, col:28> Text="  UINT8 *  String."
|   |   `-TextComment 0x753910 <line:1736:3> Text=" "
|   |-BlockCommandComment 0x753960 <col:4, line:1738:3> Name="par"
|   | `-ParagraphComment 0x753b30 <line:1736:8, line:1738:3>
|   |   |-TextComment 0x753990 <line:1736:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x7539b0 <line:1737:3> Text=" "
|   |   |-HTMLStartTagComment 0x7539d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x753a10 <col:8, col:11> Name="li"
|   |   |-TextComment 0x753a50 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x753a70 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x753aa0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x753ad0 <line:1738:3> Text=" "
|   `-BlockCommandComment 0x753b50 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x753bb0 <col:8, col:13>
|       `-TextComment 0x753b80 <col:8, col:13> Text=" None."
|-FunctionDecl 0x676970 <line:1761:1, col:35> col:15 OsGetAllTskInfo 'UINT32 (void)' extern
| `-FullComment 0x7545e0 <line:1743:3, line:1759:13>
|   |-ParagraphComment 0x753ce0 <line:1743:3>
|   | `-TextComment 0x753cb0 <col:3> Text=" "
|   |-VerbatimLineComment 0x753d00 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x753d70 <line:1744:3>
|   | `-TextComment 0x753d40 <col:3> Text=" "
|   |-BlockCommandComment 0x753d90 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0x753df0 <col:10, col:35>
|   |   `-TextComment 0x753dc0 <col:10, col:35> Text=" Get all task information."
|   |-ParagraphComment 0x753e40 <line:1746:3>
|   | `-TextComment 0x753e10 <col:3> Text=" "
|   |-BlockCommandComment 0x753e60 <col:4, line:1747:48> Name="par"
|   | `-ParagraphComment 0x753ee0 <line:1746:8, line:1747:48>
|   |   |-TextComment 0x753e90 <line:1746:8, col:20> Text=" Description:"
|   |   `-TextComment 0x753eb0 <line:1747:3, col:48> Text=" This API is used to get all task information."
|   |-ParagraphComment 0x753f30 <line:1749:3>
|   | `-TextComment 0x753f00 <col:3> Text=" "
|   |-BlockCommandComment 0x753f50 <col:4, line:1752:8> Name="attention"
|   | `-ParagraphComment 0x754120 <line:1750:3, line:1752:8>
|   |   |-TextComment 0x753f80 <line:1750:3> Text=" "
|   |   |-HTMLStartTagComment 0x753fa0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x753fe0 <line:1751:3> Text=" "
|   |   |-HTMLStartTagComment 0x754000 <col:4, col:7> Name="li"
|   |   |-TextComment 0x754040 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x754060 <col:13, col:17> Name="li"
|   |   |-TextComment 0x754090 <line:1752:3> Text=" "
|   |   `-HTMLEndTagComment 0x7540b0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x754170 <line:1754:3>
|   | `-TextComment 0x754140 <col:3> Text=" "
|   |-ParamCommandComment 0x754190 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x7541f0 <<invalid sloc>>
|   |-ParagraphComment 0x754240 <line:1756:3>
|   | `-TextComment 0x754210 <col:3> Text=" "
|   |-BlockCommandComment 0x754260 <col:4, line:1757:3> Name="retval"
|   | `-ParagraphComment 0x7542e0 <line:1756:11, line:1757:3>
|   |   |-TextComment 0x754290 <line:1756:11, col:41> Text="  UINT32  All task information."
|   |   `-TextComment 0x7542b0 <line:1757:3> Text=" "
|   |-BlockCommandComment 0x754300 <col:4, line:1759:3> Name="par"
|   | `-ParagraphComment 0x7544d0 <line:1757:8, line:1759:3>
|   |   |-TextComment 0x754330 <line:1757:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x754350 <line:1758:3> Text=" "
|   |   |-HTMLStartTagComment 0x754370 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x7543b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x7543f0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x754410 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x754440 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x754470 <line:1759:3> Text=" "
|   `-BlockCommandComment 0x7544f0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x754550 <col:8, col:13>
|       `-TextComment 0x754520 <col:8, col:13> Text=" None."
|-FunctionDecl 0x676c90 <line:1763:1, col:83> col:14 OsTskUserStackInit 'void *(void *, void *, UINT32)' extern
| |-ParmVarDecl 0x676a28 <main/hals/driver/../../los_compiler.h:327:23, main/los_task.h:1763:39> col:39 stackPtr 'void *'
| |-ParmVarDecl 0x676aa8 <main/hals/driver/../../los_compiler.h:327:23, main/los_task.h:1763:55> col:55 userSP 'void *'
| `-ParmVarDecl 0x676b20 <col:63, col:70> col:70 userStackSize 'UINT32':'unsigned int'
|-FunctionDecl 0x676eb8 <line:1765:1, col:53> col:15 OsPmEnterHandlerSet 'UINT32 (void (*)(void))' extern
| `-ParmVarDecl 0x676df0 <main/hals/driver/../../los_compiler.h:327:23, main/los_task.h:1765:52> col:42 func 'void (*)(void)'
|-FunctionDecl 0x677058 <main/hals/driver/../../los_compiler.h:158:22, main/los_task.h:1770:1> line:1767:26 OsCurrTaskGet 'LosTaskCB *(void)' static inline
| `-CompoundStmt 0x677170 <line:1768:1, line:1770:1>
|   `-ReturnStmt 0x677160 <line:1769:5, col:22>
|     `-ImplicitCastExpr 0x677148 <col:12, col:22> 'LosTaskCB *' <LValueToRValue>
|       `-MemberExpr 0x677118 <col:12, col:22> 'LosTaskCB *' lvalue .runTask 0x6714c8
|         `-DeclRefExpr 0x6770f8 <col:12> 'LosTask':'LosTask' lvalue Var 0x6737d0 'g_losTask' 'LosTask':'LosTask'
|-FunctionDecl 0x677220 <line:1772:1, col:36> col:13 LOS_TaskResRecycle 'void (void)' extern
|-FunctionDecl 0x677358 <main/hals/driver/../../los_compiler.h:327:23, main/hals/driver/hal_watchdog.h:66:20> col:6 WdtEnable 'void (void)'
|-FunctionDecl 0x677490 <main/hals/driver/../../los_compiler.h:327:23, main/hals/driver/hal_watchdog.h:67:21> col:6 used WdtDisable 'void (void)'
|-FunctionDecl 0x6775c8 <main/hals/driver/../../los_compiler.h:327:23, main/hals/driver/hal_watchdog.h:68:18> col:6 WdtFeed 'void (void)'
|-FunctionDecl 0x6778e0 </usr/include/string.h:43:14> col:14 implicit memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x677980 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x6779e8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x677a50 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x677ad0 prev 0x6778e0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:43:14 memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x677680 <col:22, col:39> col:39 __dest 'void *restrict'
| |-ParmVarDecl 0x677700 <col:47, col:70> col:70 __src 'const void *restrict'
| |-ParmVarDecl 0x677778 <line:44:8, col:15> col:15 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x677b88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x677be0 <line:293:44, /usr/include/string.h:44:44> 1 2
|-FunctionDecl 0x67f070 <line:47:14> col:14 implicit memmove 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x67f110 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x67f178 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x67f1e0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x67f260 prev 0x67f070 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:47:14 memmove 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x67ee50 <col:23, col:29> col:29 __dest 'void *'
| |-ParmVarDecl 0x67eed0 <col:37, col:49> col:49 __src 'const void *'
| |-ParmVarDecl 0x67ef48 <col:56, col:63> col:63 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x67f318 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x67f370 <line:293:44, /usr/include/string.h:48:30> 1 2
|-FunctionDecl 0x67f6c0 <line:54:14> col:14 implicit memccpy 'void *(void *, const void *, int, unsigned long)' extern
| |-ParmVarDecl 0x67f760 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x67f7c8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x67f830 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x67f898 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x67f920 prev 0x67f6c0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:54:14 memccpy 'void *(void *, const void *, int, unsigned long)' extern
| |-ParmVarDecl 0x67f3c0 <col:23, col:40> col:40 __dest 'void *restrict'
| |-ParmVarDecl 0x67f440 <col:48, col:71> col:71 __src 'const void *restrict'
| |-ParmVarDecl 0x67f4c0 <line:55:9, col:13> col:13 __c 'int'
| |-ParmVarDecl 0x67f538 <col:18, col:25> col:25 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x67f9e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x67fa38 <line:293:44, /usr/include/string.h:56:30> 1 2
|-FunctionDecl 0x67fcd0 <line:61:14> col:14 implicit memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x67fd70 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x67fe40 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x67fea8 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x67ff28 prev 0x67fcd0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:61:14 memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x67fa90 <col:22, col:28> col:28 __s 'void *'
| |-ParmVarDecl 0x67fb10 <col:33, col:37> col:37 __c 'int'
| |-ParmVarDecl 0x67fb88 <col:42, col:49> col:49 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x67ffe0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x680038 <line:293:44, /usr/include/string.h:61:75> 1
|-FunctionDecl 0x6802f0 <line:64:12> col:12 implicit memcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x680390 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x6803f8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x680460 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x6804e0 prev 0x6802f0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:64:12 memcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x680090 <col:20, col:32> col:32 __s1 'const void *'
| |-ParmVarDecl 0x680110 <col:38, col:50> col:50 __s2 'const void *'
| |-ParmVarDecl 0x680188 <col:56, col:63> col:63 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x680598 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x6805f0 <line:226:45>
| `-NonNullAttr 0x680618 <line:293:44, /usr/include/string.h:65:49> 1 2
|-FunctionDecl 0x6808b0 <line:91:14> col:14 implicit memchr 'void *(const void *, int, unsigned long)' extern
| |-ParmVarDecl 0x680950 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x6809b8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x680a20 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x680aa0 prev 0x6808b0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:91:14 memchr 'void *(const void *, int, unsigned long)' extern
| |-ParmVarDecl 0x680670 <col:22, col:34> col:34 __s 'const void *'
| |-ParmVarDecl 0x6806f0 <col:39, col:43> col:43 __c 'int'
| |-ParmVarDecl 0x680768 <col:48, col:55> col:55 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x680b58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x680bb0 <line:226:45>
| `-NonNullAttr 0x680bd8 <line:293:44, /usr/include/string.h:92:47> 1
|-FunctionDecl 0x682e50 <line:122:14> col:14 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x682ef0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x682f58 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x682fd0 prev 0x682e50 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:122:14 strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x680c30 <col:22, col:39> col:39 __dest 'char *restrict'
| |-ParmVarDecl 0x680cb0 <col:47, col:70> col:70 __src 'const char *restrict'
| |-NoThrowAttr 0x683080 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6830d8 <line:293:44, /usr/include/string.h:123:30> 1 2
|-FunctionDecl 0x683390 <line:125:14> col:14 implicit strncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x683430 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x683498 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x683500 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x683580 prev 0x683390 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:125:14 strncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x683130 <col:23, col:40> col:40 __dest 'char *restrict'
| |-ParmVarDecl 0x6831b0 <line:126:9, col:32> col:32 __src 'const char *restrict'
| |-ParmVarDecl 0x683228 <col:39, col:46> col:46 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x683638 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x683690 <line:293:44, /usr/include/string.h:127:30> 1 2
|-FunctionDecl 0x683840 <line:130:14> col:14 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x6838e0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x683948 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x6839c0 prev 0x683840 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:130:14 strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x6836e0 <col:22, col:39> col:39 __dest 'char *restrict'
| |-ParmVarDecl 0x683760 <col:47, col:70> col:70 __src 'const char *restrict'
| |-NoThrowAttr 0x683a70 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x683ac8 <line:293:44, /usr/include/string.h:131:30> 1 2
|-FunctionDecl 0x683d00 <line:133:14> col:14 implicit strncat 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x683da0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x683e60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x683ec8 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x683f48 prev 0x683d00 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:133:14 strncat 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x683b20 <col:23, col:40> col:40 __dest 'char *restrict'
| |-ParmVarDecl 0x683ba0 <col:48, col:71> col:71 __src 'const char *restrict'
| |-ParmVarDecl 0x683c18 <line:134:9, col:16> col:16 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x684000 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x684058 <line:293:44, /usr/include/string.h:134:45> 1 2
|-FunctionDecl 0x684210 <line:137:12> col:12 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x6842b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x684318 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x684390 prev 0x684210 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:137:12 strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x6840b0 <col:20, col:32> col:32 __s1 'const char *'
| |-ParmVarDecl 0x684130 <col:38, col:50> col:50 __s2 'const char *'
| |-NoThrowAttr 0x684440 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x684498 <line:226:45>
| `-NonNullAttr 0x6844c0 <line:293:44, /usr/include/string.h:138:49> 1 2
|-FunctionDecl 0x684770 <line:140:12> col:12 implicit strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x684810 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x684878 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x6848e0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x684960 prev 0x684770 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:140:12 strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x684510 <col:21, col:33> col:33 __s1 'const char *'
| |-ParmVarDecl 0x684590 <col:39, col:51> col:51 __s2 'const char *'
| |-ParmVarDecl 0x684608 <col:57, col:64> col:64 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x684a18 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x684a70 <line:226:45>
| `-NonNullAttr 0x684a98 <line:293:44, /usr/include/string.h:141:49> 1 2
|-FunctionDecl 0x684c50 <line:144:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:144:12 strcoll 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x684af0 <col:21, col:33> col:33 __s1 'const char *'
| |-ParmVarDecl 0x684b70 <col:39, col:51> col:51 __s2 'const char *'
| |-NoThrowAttr 0x684d00 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x684d58 <line:226:45>
| `-NonNullAttr 0x684d80 <line:293:44, /usr/include/string.h:145:49> 1 2
|-FunctionDecl 0x685028 <line:147:15> col:15 implicit strxfrm 'unsigned long (char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x6850c8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x685130 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x685198 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x685218 prev 0x685028 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:147:15 strxfrm 'unsigned long (char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x684dd0 <col:24, col:41> col:41 __dest 'char *restrict'
| |-ParmVarDecl 0x684e70 <line:148:10, col:33> col:33 __src 'const char *restrict'
| |-ParmVarDecl 0x684ee8 <col:40, col:47> col:47 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x6852d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x685328 <line:293:44, /usr/include/string.h:149:27> 2
|-RecordDecl 0x685368 </usr/include/x86_64-linux-gnu/bits/types/__locale_t.h:28:1, line:40:1> line:28:8 struct __locale_struct definition
| |-RecordDecl 0x685410 parent 0x553cd8 <line:31:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x685640 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x6856d0 <line:34:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x685738 <line:35:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x6857a0 <line:36:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x685890 <line:39:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x685990 <line:42:1, col:33> col:33 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x685940 'struct __locale_struct *'
|   `-ElaboratedType 0x6858e0 'struct __locale_struct' sugar
|     `-RecordType 0x6853f0 'struct __locale_struct'
|       `-Record 0x685368 '__locale_struct'
|-TypedefDecl 0x685a20 </usr/include/x86_64-linux-gnu/bits/types/locale_t.h:24:1, col:20> col:20 referenced locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x6859f0 '__locale_t' sugar
|   |-Typedef 0x685990 '__locale_t'
|   `-PointerType 0x685940 'struct __locale_struct *'
|     `-ElaboratedType 0x6858e0 'struct __locale_struct' sugar
|       `-RecordType 0x6853f0 'struct __locale_struct'
|         `-Record 0x685368 '__locale_struct'
|-FunctionDecl 0x685d40 </usr/include/string.h:156:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:156:12 strcoll_l 'int (const char *, const char *, locale_t)' extern
| |-ParmVarDecl 0x685a90 <col:23, col:35> col:35 __s1 'const char *'
| |-ParmVarDecl 0x685b10 <col:41, col:53> col:53 __s2 'const char *'
| |-ParmVarDecl 0x685bb0 <col:59, col:68> col:68 __l 'locale_t':'struct __locale_struct *'
| |-NoThrowAttr 0x685df8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x686e90 <line:226:45>
| `-NonNullAttr 0x686eb8 <line:293:44, /usr/include/string.h:157:52> 1 2 3
|-FunctionDecl 0x687208 <line:160:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:160:15 strxfrm_l 'size_t (char *, const char *, size_t, locale_t)' extern
| |-ParmVarDecl 0x686f18 <col:26, col:32> col:32 __dest 'char *'
| |-ParmVarDecl 0x686f98 <col:40, col:52> col:52 __src 'const char *'
| |-ParmVarDecl 0x687010 <col:59, col:66> col:66 __n 'size_t':'unsigned long'
| |-ParmVarDecl 0x687088 <line:161:5, col:14> col:14 __l 'locale_t':'struct __locale_struct *'
| |-NoThrowAttr 0x6872c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x687320 <line:293:44, /usr/include/string.h:161:43> 2 4
|-FunctionDecl 0x687460 <line:167:14> col:14 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x687500 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x687570 prev 0x687460 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:167:14 strdup 'char *(const char *)' extern
| |-ParmVarDecl 0x687370 <col:22, col:34> col:34 __s 'const char *'
| |-NoThrowAttr 0x687618 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-RestrictAttr 0x687670 <line:208:47> malloc
| `-NonNullAttr 0x687698 <line:293:44, /usr/include/string.h:168:48> 1
|-FunctionDecl 0x6878a0 <line:175:14> col:14 implicit strndup 'char *(const char *, unsigned long)' extern
| |-ParmVarDecl 0x687940 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x6879a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x687a20 prev 0x6878a0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:175:14 strndup 'char *(const char *, unsigned long)' extern
| |-ParmVarDecl 0x6876f0 <col:23, col:35> col:35 __string 'const char *'
| |-ParmVarDecl 0x687768 <col:45, col:52> col:52 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x687ad0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-RestrictAttr 0x687b28 <line:208:47> malloc
| `-NonNullAttr 0x687b50 <line:293:44, /usr/include/string.h:176:48> 1
|-FunctionDecl 0x687d20 <line:226:14> col:14 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x687dc0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x687e28 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x687eb0 prev 0x687d20 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:226:14 strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x687ba0 <col:22, col:34> col:34 __s 'const char *'
| |-ParmVarDecl 0x687c20 <col:39, col:43> col:43 __c 'int'
| |-NoThrowAttr 0x687f60 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x687fb8 <line:226:45>
| `-NonNullAttr 0x687fe0 <line:293:44, /usr/include/string.h:227:46> 1
|-FunctionDecl 0x688170 <line:253:14> col:14 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x688210 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x688278 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x6882f0 prev 0x688170 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:253:14 strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x688030 <col:23, col:35> col:35 __s 'const char *'
| |-ParmVarDecl 0x6880b0 <col:40, col:44> col:44 __c 'int'
| |-NoThrowAttr 0x6883a0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x6883f8 <line:226:45>
| `-NonNullAttr 0x688420 <line:293:44, /usr/include/string.h:254:46> 1
|-FunctionDecl 0x688648 <line:273:15> col:15 implicit strcspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0x6886e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x688750 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x6887c8 prev 0x688648 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:273:15 strcspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0x688470 <col:24, col:36> col:36 __s 'const char *'
| |-ParmVarDecl 0x6884f0 <col:41, col:53> col:53 __reject 'const char *'
| |-NoThrowAttr 0x688878 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x6888d0 <line:226:45>
| `-NonNullAttr 0x6888f8 <line:293:44, /usr/include/string.h:274:49> 1 2
|-FunctionDecl 0x688aa8 <line:277:15> col:15 implicit strspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0x688b48 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x688bb0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x688c28 prev 0x688aa8 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:277:15 strspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0x688950 <col:23, col:35> col:35 __s 'const char *'
| |-ParmVarDecl 0x6889d0 <col:40, col:52> col:52 __accept 'const char *'
| |-NoThrowAttr 0x688cd8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x688d30 <line:226:45>
| `-NonNullAttr 0x688d58 <line:293:44, /usr/include/string.h:278:49> 1 2
|-FunctionDecl 0x688f28 <line:303:14> col:14 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x688fc8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x689030 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x6890a8 prev 0x688f28 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:303:14 strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x688db0 <col:23, col:35> col:35 __s 'const char *'
| |-ParmVarDecl 0x688e30 <col:40, col:52> col:52 __accept 'const char *'
| |-NoThrowAttr 0x689158 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x6891b0 <line:226:45>
| `-NonNullAttr 0x6891d8 <line:293:44, /usr/include/string.h:304:49> 1 2
|-FunctionDecl 0x689390 <line:330:14> col:14 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x689430 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x689498 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x689510 prev 0x689390 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:330:14 strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x689230 <col:22, col:34> col:34 __haystack 'const char *'
| |-ParmVarDecl 0x6892b0 <col:46, col:58> col:58 __needle 'const char *'
| |-NoThrowAttr 0x6895c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x689618 <line:226:45>
| `-NonNullAttr 0x689640 <line:293:44, /usr/include/string.h:331:49> 1 2
|-FunctionDecl 0x6897d0 <line:336:14> col:14 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x689870 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x6898d8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x689950 prev 0x6897d0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:336:14 strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x689690 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0x689710 <col:44, col:67> col:67 __delim 'const char *restrict'
| |-NoThrowAttr 0x689a00 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x689a58 <line:293:44, /usr/include/string.h:337:27> 2
|-FunctionDecl 0x689d20 <line:341:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:341:14 __strtok_r 'char *(char *restrict, const char *restrict, char **restrict)' extern
| |-ParmVarDecl 0x689ab0 <col:26, col:43> col:43 __s 'char *restrict'
| |-ParmVarDecl 0x689b30 <line:342:5, col:28> col:28 __delim 'const char *restrict'
| |-ParmVarDecl 0x689bb0 <line:343:5, col:23> col:23 __save_ptr 'char **restrict'
| |-NoThrowAttr 0x689dd8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x689e30 <line:293:44, /usr/include/string.h:344:30> 2 3
|-FunctionDecl 0x68a0a8 <line:346:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:346:14 strtok_r 'char *(char *restrict, const char *restrict, char **restrict)' extern
| |-ParmVarDecl 0x689ec0 <col:24, col:41> col:41 __s 'char *restrict'
| |-ParmVarDecl 0x689f40 <col:46, col:69> col:69 __delim 'const char *restrict'
| |-ParmVarDecl 0x689fc0 <line:347:10, col:28> col:28 __save_ptr 'char **restrict'
| |-NoThrowAttr 0x68a160 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x68a1b8 <line:293:44, /usr/include/string.h:348:30> 2 3
|-FunctionDecl 0x68a328 <line:385:15> col:15 implicit strlen 'unsigned long (const char *)' extern
| `-ParmVarDecl 0x68a3c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x68a438 prev 0x68a328 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:385:15 strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x68a210 <col:23, col:35> col:35 __s 'const char *'
| |-NoThrowAttr 0x68a4e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x68a538 <line:226:45>
| `-NonNullAttr 0x68a560 <line:293:44, /usr/include/string.h:386:46> 1
|-FunctionDecl 0x68a758 <line:391:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:391:15 strnlen 'size_t (const char *, size_t)' extern
| |-ParmVarDecl 0x68a5b0 <col:24, col:36> col:36 __string 'const char *'
| |-ParmVarDecl 0x68a628 <col:46, col:53> col:53 __maxlen 'size_t':'unsigned long'
| |-NoThrowAttr 0x68a808 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x68a860 <line:226:45>
| `-NonNullAttr 0x68a888 <line:293:44, /usr/include/string.h:392:46> 1
|-FunctionDecl 0x68a9b0 <line:397:14> col:14 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x68aa50 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x68aac0 prev 0x68a9b0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/string.h:397:14 strerror 'char *(int)' extern
| |-ParmVarDecl 0x68a8e0 <col:24, col:28> col:28 __errnum 'int'
| `-NoThrowAttr 0x68ab68 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x68bee0 </usr/include/string.h:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:410:28 strerror_r 'int (int, char *, size_t)' extern
| |-ParmVarDecl 0x68abd8 <line:411:8, col:12> col:12 __errnum 'int'
| |-ParmVarDecl 0x68ac58 <col:22, col:28> col:28 __buf 'char *'
| |-ParmVarDecl 0x68acd0 <col:35, col:42> col:42 __buflen 'size_t':'unsigned long'
| |-AsmLabelAttr 0x68bf80 <<scratch space>:39:1> "__xpg_strerror_r" IsLiteralLabel
| |-NoThrowAttr 0x68c010 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x68c038 <line:293:44, /usr/include/string.h:412:38> 2
|-FunctionDecl 0x68c220 <line:428:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/string.h:428:14 strerror_l 'char *(int, locale_t)' extern
| |-ParmVarDecl 0x68c090 <col:26, col:30> col:30 __errnum 'int'
| |-ParmVarDecl 0x68c108 <col:40, col:49> col:49 __l 'locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x68c2d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x68c520 </usr/include/strings.h:34:12> col:12 implicit bcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x68c5c0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x68c628 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x68c690 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x68c710 prev 0x68c520 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:34:12 bcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x68c340 <col:18, col:30> col:30 __s1 'const void *'
| |-ParmVarDecl 0x68c3c0 <col:36, col:48> col:48 __s2 'const void *'
| |-ParmVarDecl 0x68c438 <col:54, col:61> col:61 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x68c7c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x68c820 <line:226:45>
| `-NonNullAttr 0x68c848 <line:293:44, /usr/include/strings.h:35:49> 1 2
|-FunctionDecl 0x68caf8 <line:38:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:38:13 bcopy 'void (const void *, void *, size_t)' extern
| |-ParmVarDecl 0x68c8a0 <col:20, col:32> col:32 __src 'const void *'
| |-ParmVarDecl 0x68c920 <col:39, col:45> col:45 __dest 'void *'
| |-ParmVarDecl 0x68c998 <col:53, col:60> col:60 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x68cbb0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x68cc08 <line:293:44, /usr/include/strings.h:39:27> 1 2
|-FunctionDecl 0x68ce08 <line:42:13> col:13 implicit bzero 'void (void *, unsigned long)' extern
| |-ParmVarDecl 0x68f1d0 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x68f238 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x68f2b0 prev 0x68ce08 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:42:13 bzero 'void (void *, unsigned long)' extern
| |-ParmVarDecl 0x68cc60 <col:20, col:26> col:26 __s 'void *'
| |-ParmVarDecl 0x68ccd8 <col:31, col:38> col:38 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x68f360 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x68f3b8 <line:293:44, /usr/include/strings.h:42:64> 1
|-FunctionDecl 0x68f550 <line:68:14> col:14 implicit index 'char *(const char *, int)' extern
| |-ParmVarDecl 0x68f5f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x68f658 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x68f6d0 prev 0x68f550 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:68:14 index 'char *(const char *, int)' extern
| |-ParmVarDecl 0x68f410 <col:21, col:33> col:33 __s 'const char *'
| |-ParmVarDecl 0x68f490 <col:38, col:42> col:42 __c 'int'
| |-NoThrowAttr 0x68f780 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x68f7d8 <line:226:45>
| `-NonNullAttr 0x68f800 <line:293:44, /usr/include/strings.h:69:46> 1
|-FunctionDecl 0x68f990 <line:96:14> col:14 implicit rindex 'char *(const char *, int)' extern
| |-ParmVarDecl 0x68fa30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x68fa98 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x68fb10 prev 0x68f990 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:96:14 rindex 'char *(const char *, int)' extern
| |-ParmVarDecl 0x68f850 <col:22, col:34> col:34 __s 'const char *'
| |-ParmVarDecl 0x68f8d0 <col:39, col:43> col:43 __c 'int'
| |-NoThrowAttr 0x68fbc0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x68fc18 <line:226:45>
| `-NonNullAttr 0x68fc40 <line:293:44, /usr/include/strings.h:97:46> 1
|-FunctionDecl 0x68fd28 <line:104:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:233:56> /usr/include/strings.h:104:12 ffs 'int (int)' extern
| |-ParmVarDecl 0x68fc90 <col:17, col:21> col:21 __i 'int'
| |-NoThrowAttr 0x68fdd0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x68fe28 <line:233:46>
|-FunctionDecl 0x68ff30 </usr/include/strings.h:110:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:233:56> /usr/include/strings.h:110:12 ffsl 'int (long)' extern
| |-ParmVarDecl 0x68fe68 <col:18, col:27> col:27 __l 'long'
| |-NoThrowAttr 0x68ffd8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x690030 <line:233:46>
|-FunctionDecl 0x6901e0 </usr/include/strings.h:111:15, /usr/include/x86_64-linux-gnu/sys/cdefs.h:233:56> /usr/include/strings.h:111:26 ffsll 'int (long long)' extern
| |-ParmVarDecl 0x690070 <col:33, col:47> col:47 __ll 'long long'
| |-NoThrowAttr 0x690288 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x6902e0 <line:233:46>
|-FunctionDecl 0x690480 </usr/include/strings.h:116:12> col:12 implicit strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x690520 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x690588 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x690600 prev 0x690480 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:116:12 strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x690320 <col:24, col:36> col:36 __s1 'const char *'
| |-ParmVarDecl 0x6903a0 <col:42, col:54> col:54 __s2 'const char *'
| |-NoThrowAttr 0x6906b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x690708 <line:226:45>
| `-NonNullAttr 0x690730 <line:293:44, /usr/include/strings.h:117:49> 1 2
|-FunctionDecl 0x690960 <line:120:12> col:12 implicit strncasecmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x690a00 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x690a68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x690ad0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x690b50 prev 0x690960 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:120:12 strncasecmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x690780 <col:25, col:37> col:37 __s1 'const char *'
| |-ParmVarDecl 0x690800 <col:43, col:55> col:55 __s2 'const char *'
| |-ParmVarDecl 0x690878 <col:61, col:68> col:68 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x690c08 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x690c60 <line:226:45>
| `-NonNullAttr 0x690c88 <line:293:44, /usr/include/strings.h:121:49> 1 2
|-FunctionDecl 0x690ee0 <line:128:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:128:12 strcasecmp_l 'int (const char *, const char *, locale_t)' extern
| |-ParmVarDecl 0x690ce0 <col:26, col:38> col:38 __s1 'const char *'
| |-ParmVarDecl 0x690d60 <col:44, col:56> col:56 __s2 'const char *'
| |-ParmVarDecl 0x690dd8 <col:62, col:71> col:71 __loc 'locale_t':'struct __locale_struct *'
| |-NoThrowAttr 0x690f98 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x690ff0 <line:226:45>
| `-NonNullAttr 0x691018 <line:293:44, /usr/include/strings.h:129:52> 1 2 3
|-FunctionDecl 0x6913b0 <line:133:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:133:12 strncasecmp_l 'int (const char *, const char *, size_t, locale_t)' extern
| |-ParmVarDecl 0x691078 <col:27, col:39> col:39 __s1 'const char *'
| |-ParmVarDecl 0x6910f8 <col:45, col:57> col:57 __s2 'const char *'
| |-ParmVarDecl 0x691170 <line:134:6, col:13> col:13 __n 'size_t':'unsigned long'
| |-ParmVarDecl 0x691200 <col:18, col:27> col:27 __loc 'locale_t':'struct __locale_struct *'
| |-NoThrowAttr 0x691470 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x6914c8 <line:226:45>
| `-NonNullAttr 0x6914f0 <line:293:44, /usr/include/strings.h:135:52> 1 2 4
|-FunctionDecl 0x691678 </usr/include/string.h:436:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:436:13 explicit_bzero 'void (void *, size_t)' extern
| |-ParmVarDecl 0x691548 <col:29, col:35> col:35 __s 'void *'
| |-ParmVarDecl 0x6915c0 <col:40, col:47> col:47 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x691728 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x691780 <line:293:44, /usr/include/string.h:436:73> 1
|-FunctionDecl 0x6919b0 <line:440:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:440:14 strsep 'char *(char **restrict, const char *restrict)' extern
| |-ParmVarDecl 0x6917d0 <col:22, col:40> col:40 __stringp 'char **restrict'
| |-ParmVarDecl 0x691850 <line:441:8, col:31> col:31 __delim 'const char *restrict'
| |-NoThrowAttr 0x691a60 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x691ab8 <line:293:44, /usr/include/string.h:442:30> 1 2
|-FunctionDecl 0x691ba8 <line:447:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/string.h:447:14 strsignal 'char *(int)' extern
| |-ParmVarDecl 0x691b10 <col:25, col:29> col:29 __sig 'int'
| `-NoThrowAttr 0x691c50 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x691e20 </usr/include/string.h:450:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:450:14 __stpcpy 'char *(char *restrict, const char *restrict)' extern
| |-ParmVarDecl 0x691cc0 <col:24, col:41> col:41 __dest 'char *restrict'
| |-ParmVarDecl 0x691d40 <col:49, col:72> col:72 __src 'const char *restrict'
| |-NoThrowAttr 0x691ed0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x691f28 <line:293:44, /usr/include/string.h:451:30> 1 2
|-FunctionDecl 0x6920e0 <line:452:14> col:14 implicit stpcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x692180 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x692200 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x692278 prev 0x6920e0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:452:14 stpcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x691f80 <col:22, col:39> col:39 __dest 'char *restrict'
| |-ParmVarDecl 0x692000 <col:47, col:70> col:70 __src 'const char *restrict'
| |-NoThrowAttr 0x692328 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x692380 <line:293:44, /usr/include/string.h:453:30> 1 2
|-FunctionDecl 0x6925b0 <line:457:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:457:14 __stpncpy 'char *(char *restrict, const char *restrict, size_t)' extern
| |-ParmVarDecl 0x6923d0 <col:25, col:42> col:42 __dest 'char *restrict'
| |-ParmVarDecl 0x692450 <line:458:4, col:27> col:27 __src 'const char *restrict'
| |-ParmVarDecl 0x6924c8 <col:34, col:41> col:41 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x692668 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6926c0 <line:293:44, /usr/include/string.h:459:30> 1 2
|-FunctionDecl 0x6928f0 <line:460:14> col:14 implicit stpncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x692990 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x6929f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x692a60 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x692ae0 prev 0x6928f0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:460:14 stpncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x692710 <col:23, col:40> col:40 __dest 'char *restrict'
| |-ParmVarDecl 0x692790 <line:461:9, col:32> col:32 __src 'const char *restrict'
| |-ParmVarDecl 0x692808 <col:39, col:46> col:46 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x692b98 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x692bf0 <line:293:44, /usr/include/string.h:462:30> 1 2
|-TypedefDecl 0x692c40 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:74:1, col:24> col:24 referenced wchar_t 'int'
| `-BuiltinType 0x553dd0 'int'
|-EnumDecl 0x692c98 </usr/include/x86_64-linux-gnu/bits/waitflags.h:52:9, line:57:1> line:52:9
| |-EnumConstantDecl 0x692d60 <line:54:3> col:3 P_ALL 'int'
| |-EnumConstantDecl 0x692db0 <line:55:3> col:3 P_PID 'int'
| `-EnumConstantDecl 0x692e00 <line:56:3> col:3 P_PGID 'int'
|-TypedefDecl 0x692ea8 <line:52:1, line:57:3> col:3 idtype_t 'enum idtype_t':'idtype_t'
| `-ElaboratedType 0x692e50 'enum idtype_t' sugar
|   `-EnumType 0x692d40 'idtype_t'
|     `-Enum 0x692c98 ''
|-TypedefDecl 0x692f30 </usr/include/x86_64-linux-gnu/bits/floatn-common.h:214:1, col:15> col:15 _Float32 'float'
| `-BuiltinType 0x553ed0 'float'
|-TypedefDecl 0x692fa0 <line:251:1, col:16> col:16 _Float64 'double'
| `-BuiltinType 0x553ef0 'double'
|-TypedefDecl 0x693010 <line:268:1, col:16> col:16 _Float32x 'double'
| `-BuiltinType 0x553ef0 'double'
|-TypedefDecl 0x693080 <line:285:1, col:21> col:21 _Float64x 'long double'
| `-BuiltinType 0x553f10 'long double'
|-RecordDecl 0x6930d8 </usr/include/stdlib.h:58:9, line:62:3> line:58:9 struct definition
| |-FieldDecl 0x693198 <line:60:5, col:9> col:9 quot 'int'
| `-FieldDecl 0x6222c0 <line:61:5, col:9> col:9 rem 'int'
|-TypedefDecl 0x622368 <line:58:1, line:62:5> col:5 referenced div_t 'struct div_t':'div_t'
| `-ElaboratedType 0x622310 'struct div_t' sugar
|   `-RecordType 0x693160 'div_t'
|     `-Record 0x6930d8 ''
|-RecordDecl 0x6223d8 <line:66:9, line:70:3> line:66:9 struct definition
| |-FieldDecl 0x622498 <line:68:5, col:14> col:14 quot 'long'
| `-FieldDecl 0x622500 <line:69:5, col:14> col:14 rem 'long'
|-TypedefDecl 0x6225a8 <line:66:1, line:70:5> col:5 referenced ldiv_t 'struct ldiv_t':'ldiv_t'
| `-ElaboratedType 0x622550 'struct ldiv_t' sugar
|   `-RecordType 0x622460 'ldiv_t'
|     `-Record 0x6223d8 ''
|-RecordDecl 0x622618 <line:76:23, line:80:3> line:76:23 struct definition
| |-FieldDecl 0x6226d8 <line:78:5, col:19> col:19 quot 'long long'
| `-FieldDecl 0x622740 <line:79:5, col:19> col:19 rem 'long long'
|-TypedefDecl 0x6227e8 <line:76:15, line:80:5> col:5 referenced lldiv_t 'struct lldiv_t':'lldiv_t'
| `-ElaboratedType 0x622790 'struct lldiv_t' sugar
|   `-RecordType 0x6226a0 'lldiv_t'
|     `-Record 0x622618 ''
|-FunctionDecl 0x622948 <line:97:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:97:15 __ctype_get_mb_cur_max 'size_t (void)' extern
| `-NoThrowAttr 0x6229e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x622b40 </usr/include/stdlib.h:101:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:101:15 atof 'double (const char *)' extern
| |-ParmVarDecl 0x622a58 <col:21, col:33> col:33 __nptr 'const char *'
| |-NoThrowAttr 0x622be8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x622c40 <line:226:45>
| `-NonNullAttr 0x622c68 <line:293:44, /usr/include/stdlib.h:102:46> 1
|-FunctionDecl 0x622d78 <line:104:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:104:12 atoi 'int (const char *)' extern
| |-ParmVarDecl 0x622cc0 <col:18, col:30> col:30 __nptr 'const char *'
| |-NoThrowAttr 0x622e20 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x622e78 <line:226:45>
| `-NonNullAttr 0x622ea0 <line:293:44, /usr/include/stdlib.h:105:46> 1
|-FunctionDecl 0x622fe0 <line:107:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:107:17 atol 'long (const char *)' extern
| |-ParmVarDecl 0x622ef0 <col:23, col:35> col:35 __nptr 'const char *'
| |-NoThrowAttr 0x623088 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x6230e0 <line:226:45>
| `-NonNullAttr 0x623108 <line:293:44, /usr/include/stdlib.h:108:46> 1
|-FunctionDecl 0x623ae0 <line:112:15, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:112:36 atoll 'long long (const char *)' extern
| |-ParmVarDecl 0x623160 <col:43, col:55> col:55 __nptr 'const char *'
| |-NoThrowAttr 0x623b88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x623be0 <line:226:45>
| `-NonNullAttr 0x623c08 <line:293:44, /usr/include/stdlib.h:113:46> 1
|-FunctionDecl 0x623e20 <line:117:15> col:15 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x623ec0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x623f28 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x623fa0 prev 0x623e20 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:117:15 strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x623c60 <col:23, col:46> col:46 __nptr 'const char *restrict'
| |-ParmVarDecl 0x623ce0 <line:118:9, col:27> col:27 __endptr 'char **restrict'
| |-NoThrowAttr 0x624050 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6240a8 <line:293:44, /usr/include/stdlib.h:119:27> 1
|-FunctionDecl 0x6242c0 <line:123:14> col:14 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x624360 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x6243c8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x624440 prev 0x6242c0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:123:14 strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x624100 <col:22, col:45> col:45 __nptr 'const char *restrict'
| |-ParmVarDecl 0x624180 <line:124:8, col:26> col:26 __endptr 'char **restrict'
| |-NoThrowAttr 0x6244f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x624548 <line:293:44, /usr/include/stdlib.h:124:57> 1
|-FunctionDecl 0x624760 <line:126:20> col:20 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x624800 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x624868 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x6248e0 prev 0x624760 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:126:20 strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x6245a0 <col:29, col:52> col:52 __nptr 'const char *restrict'
| |-ParmVarDecl 0x624620 <line:127:8, col:26> col:26 __endptr 'char **restrict'
| |-NoThrowAttr 0x624990 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6249e8 <line:293:44, /usr/include/stdlib.h:128:27> 1
|-FunctionDecl 0x624cc0 <line:176:17> col:17 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x624d60 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x624dc8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x624e30 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x624eb0 prev 0x624cc0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:176:17 strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x624a40 <col:25, col:48> col:48 __nptr 'const char *restrict'
| |-ParmVarDecl 0x624af0 <line:177:4, col:22> col:22 __endptr 'char **restrict'
| |-ParmVarDecl 0x624b70 <col:32, col:36> col:36 __base 'int'
| |-NoThrowAttr 0x624f68 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x624fc0 <line:293:44, /usr/include/stdlib.h:178:27> 1
|-FunctionDecl 0x625260 <line:180:26> col:26 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x625300 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x625368 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x6253d0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x625450 prev 0x625260 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:180:26 strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x625010 <col:35, col:58> col:58 __nptr 'const char *restrict'
| |-ParmVarDecl 0x625090 <line:181:7, col:25> col:25 __endptr 'char **restrict'
| |-ParmVarDecl 0x625110 <col:35, col:39> col:39 __base 'int'
| |-NoThrowAttr 0x625508 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x625560 <line:293:44, /usr/include/stdlib.h:182:27> 1
|-FunctionDecl 0x625800 <line:187:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:187:22 strtoq 'long long (const char *restrict, char **restrict, int)' extern
| |-ParmVarDecl 0x6255b0 <col:30, col:53> col:53 __nptr 'const char *restrict'
| |-ParmVarDecl 0x625630 <line:188:9, col:27> col:27 __endptr 'char **restrict'
| |-ParmVarDecl 0x6256b0 <col:37, col:41> col:41 __base 'int'
| |-NoThrowAttr 0x6258b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x625910 <line:293:44, /usr/include/stdlib.h:189:27> 1
|-FunctionDecl 0x625bc0 <line:192:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:192:31 strtouq 'unsigned long long (const char *restrict, char **restrict, int)' extern
| |-ParmVarDecl 0x625960 <col:40, col:63> col:63 __nptr 'const char *restrict'
| |-ParmVarDecl 0x6259e0 <line:193:12, col:30> col:30 __endptr 'char **restrict'
| |-ParmVarDecl 0x625a60 <col:40, col:44> col:44 __base 'int'
| |-NoThrowAttr 0x625c78 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x625cd0 <line:293:44, /usr/include/stdlib.h:194:27> 1
|-FunctionDecl 0x625ee8 <line:200:22> col:22 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x625f88 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x625ff0 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x626058 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x6260d8 prev 0x625ee8 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:200:22 strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x625d20 <col:31, col:54> col:54 __nptr 'const char *restrict'
| |-ParmVarDecl 0x625da0 <line:201:10, col:28> col:28 __endptr 'char **restrict'
| |-ParmVarDecl 0x625e20 <col:38, col:42> col:42 __base 'int'
| |-NoThrowAttr 0x626190 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6261e8 <line:293:44, /usr/include/stdlib.h:202:27> 1
|-FunctionDecl 0x626408 <line:205:31> col:31 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x6264a8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x626510 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x626578 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x6265f8 prev 0x626408 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:205:31 strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x626240 <col:41, col:64> col:64 __nptr 'const char *restrict'
| |-ParmVarDecl 0x6262c0 <line:206:6, col:24> col:24 __endptr 'char **restrict'
| |-ParmVarDecl 0x626340 <col:34, col:38> col:38 __base 'int'
| |-NoThrowAttr 0x6266b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x626708 <line:293:44, /usr/include/stdlib.h:207:27> 1
|-FunctionDecl 0x626830 <line:385:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:385:14 l64a 'char *(long)' extern
| |-ParmVarDecl 0x626760 <col:20, col:29> col:29 __n 'long'
| `-NoThrowAttr 0x6268d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x626a00 </usr/include/stdlib.h:388:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:388:17 a64l 'long (const char *)' extern
| |-ParmVarDecl 0x626948 <col:23, col:35> col:35 __s 'const char *'
| |-NoThrowAttr 0x626aa8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x626b10 <line:226:45>
| `-NonNullAttr 0x626b38 <line:293:44, /usr/include/stdlib.h:389:46> 1
|-TypedefDecl 0x626bb0 </usr/include/x86_64-linux-gnu/sys/types.h:33:1, col:18> col:18 u_char '__u_char':'unsigned char'
| `-TypedefType 0x626b80 '__u_char' sugar
|   |-Typedef 0x5b5948 '__u_char'
|   `-BuiltinType 0x553e30 'unsigned char'
|-TypedefDecl 0x626c40 <line:34:1, col:19> col:19 u_short '__u_short':'unsigned short'
| `-TypedefType 0x626c10 '__u_short' sugar
|   |-Typedef 0x5b59b8 '__u_short'
|   `-BuiltinType 0x553e50 'unsigned short'
|-TypedefDecl 0x626cd0 <line:35:1, col:17> col:17 u_int '__u_int':'unsigned int'
| `-TypedefType 0x626ca0 '__u_int' sugar
|   |-Typedef 0x5b5a28 '__u_int'
|   `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x626d60 <line:36:1, col:18> col:18 u_long '__u_long':'unsigned long'
| `-TypedefType 0x626d30 '__u_long' sugar
|   |-Typedef 0x5b5a98 '__u_long'
|   `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x626df0 <line:37:1, col:18> col:18 quad_t '__quad_t':'long'
| `-TypedefType 0x626dc0 '__quad_t' sugar
|   |-Typedef 0x5b6300 '__quad_t'
|   `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x626e80 <line:38:1, col:20> col:20 u_quad_t '__u_quad_t':'unsigned long'
| `-TypedefType 0x626e50 '__u_quad_t' sugar
|   |-Typedef 0x5b6370 '__u_quad_t'
|   `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x626f10 <line:39:1, col:18> col:18 fsid_t '__fsid_t':'__fsid_t'
| `-TypedefType 0x626ee0 '__fsid_t' sugar
|   |-Typedef 0x5d8878 '__fsid_t'
|   `-ElaboratedType 0x5d8820 'struct __fsid_t' sugar
|     `-RecordType 0x5d8710 '__fsid_t'
|       `-Record 0x5d8688 ''
|-TypedefDecl 0x626fa0 <line:42:1, col:18> col:18 loff_t '__loff_t':'long'
| `-TypedefType 0x626f70 '__loff_t' sugar
|   |-Typedef 0x5d92c0 '__loff_t'
|   `-TypedefType 0x5d9290 '__off64_t' sugar
|     |-Typedef 0x5d85c0 '__off64_t'
|     `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x627030 <line:47:1, col:17> col:17 ino_t '__ino_t':'unsigned long'
| `-TypedefType 0x627000 '__ino_t' sugar
|   |-Typedef 0x5b6610 '__ino_t'
|   `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x6270c0 <line:59:1, col:17> col:17 dev_t '__dev_t':'unsigned long'
| `-TypedefType 0x627090 '__dev_t' sugar
|   |-Typedef 0x5b64c0 '__dev_t'
|   `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x627150 <line:64:1, col:17> col:17 gid_t '__gid_t':'unsigned int'
| `-TypedefType 0x627120 '__gid_t' sugar
|   |-Typedef 0x5b65a0 '__gid_t'
|   `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x6271e0 <line:69:1, col:18> col:18 mode_t '__mode_t':'unsigned int'
| `-TypedefType 0x6271b0 '__mode_t' sugar
|   |-Typedef 0x5b66f0 '__mode_t'
|   `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x627270 <line:74:1, col:19> col:19 nlink_t '__nlink_t':'unsigned long'
| `-TypedefType 0x627240 '__nlink_t' sugar
|   |-Typedef 0x5b6760 '__nlink_t'
|   `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x627300 <line:79:1, col:17> col:17 uid_t '__uid_t':'unsigned int'
| `-TypedefType 0x6272d0 '__uid_t' sugar
|   |-Typedef 0x5b6530 '__uid_t'
|   `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x627390 <line:97:1, col:17> col:17 pid_t '__pid_t':'int'
| `-TypedefType 0x627360 '__pid_t' sugar
|   |-Typedef 0x5d8630 '__pid_t'
|   `-BuiltinType 0x553dd0 'int'
|-TypedefDecl 0x627420 <line:103:1, col:16> col:16 id_t '__id_t':'unsigned int'
| `-TypedefType 0x6273f0 '__id_t' sugar
|   |-Typedef 0x5d8a50 '__id_t'
|   `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x6274b0 <line:114:1, col:19> col:19 daddr_t '__daddr_t':'int'
| `-TypedefType 0x627480 '__daddr_t' sugar
|   |-Typedef 0x5d8c10 '__daddr_t'
|   `-BuiltinType 0x553dd0 'int'
|-TypedefDecl 0x627540 <line:115:1, col:19> col:19 caddr_t '__caddr_t':'char *'
| `-TypedefType 0x627510 '__caddr_t' sugar
|   |-Typedef 0x5d9330 '__caddr_t'
|   `-PointerType 0x554940 'char *'
|     `-BuiltinType 0x553d70 'char'
|-TypedefDecl 0x6275d0 <line:121:1, col:17> col:17 key_t '__key_t':'int'
| `-TypedefType 0x6275a0 '__key_t' sugar
|   |-Typedef 0x5d8c80 '__key_t'
|   `-BuiltinType 0x553dd0 'int'
|-TypedefDecl 0x627660 </usr/include/x86_64-linux-gnu/bits/types/clock_t.h:7:1, col:19> col:19 clock_t '__clock_t':'long'
| `-TypedefType 0x627630 '__clock_t' sugar
|   |-Typedef 0x5d8900 '__clock_t'
|   `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x6276f0 </usr/include/x86_64-linux-gnu/bits/types/clockid_t.h:7:1, col:21> col:21 clockid_t '__clockid_t':'int'
| `-TypedefType 0x6276c0 '__clockid_t' sugar
|   |-Typedef 0x5d8cf0 '__clockid_t'
|   `-BuiltinType 0x553dd0 'int'
|-TypedefDecl 0x627780 </usr/include/x86_64-linux-gnu/bits/types/time_t.h:7:1, col:18> col:18 time_t '__time_t':'long'
| `-TypedefType 0x627750 '__time_t' sugar
|   |-Typedef 0x5d8ac0 '__time_t'
|   `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x627810 </usr/include/x86_64-linux-gnu/bits/types/timer_t.h:7:1, col:19> col:19 timer_t '__timer_t':'void *'
| `-TypedefType 0x6277e0 '__timer_t' sugar
|   |-Typedef 0x5d8d60 '__timer_t'
|   `-PointerType 0x5544f0 'void *'
|     `-BuiltinType 0x553d30 'void'
|-TypedefDecl 0x627880 </usr/include/x86_64-linux-gnu/sys/types.h:148:1, col:27> col:27 ulong 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x6278f0 <line:149:1, col:28> col:28 ushort 'unsigned short'
| `-BuiltinType 0x553e50 'unsigned short'
|-TypedefDecl 0x627960 <line:150:1, col:22> col:22 uint 'unsigned int'
| `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x6279c8 </usr/include/x86_64-linux-gnu/bits/stdint-intn.h:24:1, col:18> col:18 int8_t '__int8_t':'signed char'
| `-TypedefType 0x5b5e70 '__int8_t' sugar
|   |-Typedef 0x5b5b08 '__int8_t'
|   `-BuiltinType 0x553d90 'signed char'
|-TypedefDecl 0x627a30 <line:25:1, col:19> col:19 int16_t '__int16_t':'short'
| `-TypedefType 0x5b5f90 '__int16_t' sugar
|   |-Typedef 0x5b5be8 '__int16_t'
|   `-BuiltinType 0x553db0 'short'
|-TypedefDecl 0x627a98 <line:26:1, col:19> col:19 referenced int32_t '__int32_t':'int'
| `-TypedefType 0x5b60b0 '__int32_t' sugar
|   |-Typedef 0x5b5cc8 '__int32_t'
|   `-BuiltinType 0x553dd0 'int'
|-TypedefDecl 0x6b5220 <line:27:1, col:19> col:19 int64_t '__int64_t':'long'
| `-TypedefType 0x5b61d0 '__int64_t' sugar
|   |-Typedef 0x5b5da8 '__int64_t'
|   `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x6b5288 </usr/include/x86_64-linux-gnu/sys/types.h:158:1, col:19> col:19 u_int8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x5b5f00 '__uint8_t' sugar
|   |-Typedef 0x5b5b78 '__uint8_t'
|   `-BuiltinType 0x553e30 'unsigned char'
|-TypedefDecl 0x6b52f0 <line:159:1, col:20> col:20 u_int16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x5b6020 '__uint16_t' sugar
|   |-Typedef 0x5b5c58 '__uint16_t'
|   `-BuiltinType 0x553e50 'unsigned short'
|-TypedefDecl 0x6b5358 <line:160:1, col:20> col:20 u_int32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x5b6140 '__uint32_t' sugar
|   |-Typedef 0x5b5d38 '__uint32_t'
|   `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x6b53c0 <line:161:1, col:20> col:20 u_int64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x5b6260 '__uint64_t' sugar
|   |-Typedef 0x5b5e18 '__uint64_t'
|   `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x6b5440 <line:164:1, col:13> col:13 register_t 'long'
| |-BuiltinType 0x553df0 'long'
| `-ModeAttr 0x6b54a8 <col:40, col:58> __word__
|-FunctionDecl 0x6b5608 </usr/include/x86_64-linux-gnu/bits/byteswap.h:33:1, line:41:1> line:34:1 __bswap_16 '__uint16_t (__uint16_t)' static inline
| |-ParmVarDecl 0x6b5518 <col:13, col:24> col:24 used __bsx '__uint16_t':'unsigned short'
| `-CompoundStmt 0x6b59d8 <line:35:1, line:41:1>
|   `-ReturnStmt 0x6b59c8 <line:39:3, line:31:60>
|     `-ParenExpr 0x6b59a8 <col:3, col:60> '__uint16_t':'unsigned short'
|       `-CStyleCastExpr 0x6b5980 <col:4, col:59> '__uint16_t':'unsigned short' <IntegralCast>
|         `-ParenExpr 0x6b5960 <col:17, col:59> 'int'
|           `-BinaryOperator 0x6b5910 <col:18, col:58> 'int' '|'
|             |-ParenExpr 0x6b57c0 <col:18, col:36> 'int'
|             | `-BinaryOperator 0x6b57a0 <col:19, col:32> 'int' '&'
|             |   |-ParenExpr 0x6b5760 <col:19, col:28> 'int'
|             |   | `-BinaryOperator 0x6b5740 <col:20, col:27> 'int' '>>'
|             |   |   |-ImplicitCastExpr 0x6b5728 <col:20, col:22> 'int' <IntegralCast>
|             |   |   | `-ImplicitCastExpr 0x6b5710 <col:20, col:22> '__uint16_t':'unsigned short' <LValueToRValue>
|             |   |   |   `-ParenExpr 0x6b56d0 <col:20, col:22> '__uint16_t':'unsigned short' lvalue
|             |   |   |     `-DeclRefExpr 0x6b56b0 <line:39:31> '__uint16_t':'unsigned short' lvalue ParmVar 0x6b5518 '__bsx' '__uint16_t':'unsigned short'
|             |   |   `-IntegerLiteral 0x6b56f0 <line:31:27> 'int' 8
|             |   `-IntegerLiteral 0x6b5780 <col:32> 'int' 255
|             `-ParenExpr 0x6b58f0 <col:40, col:58> 'int'
|               `-BinaryOperator 0x6b58d0 <col:41, col:57> 'int' '<<'
|                 |-ParenExpr 0x6b5890 <col:41, col:52> 'int'
|                 | `-BinaryOperator 0x6b5870 <col:42, col:48> 'int' '&'
|                 |   |-ImplicitCastExpr 0x6b5858 <col:42, col:44> 'int' <IntegralCast>
|                 |   | `-ImplicitCastExpr 0x6b5840 <col:42, col:44> '__uint16_t':'unsigned short' <LValueToRValue>
|                 |   |   `-ParenExpr 0x6b5800 <col:42, col:44> '__uint16_t':'unsigned short' lvalue
|                 |   |     `-DeclRefExpr 0x6b57e0 <line:39:31> '__uint16_t':'unsigned short' lvalue ParmVar 0x6b5518 '__bsx' '__uint16_t':'unsigned short'
|                 |   `-IntegerLiteral 0x6b5820 <line:31:48> 'int' 255
|                 `-IntegerLiteral 0x6b58b0 <col:57> 'int' 8
|-FunctionDecl 0x6b5ac8 <line:48:1, line:56:1> line:49:1 __bswap_32 '__uint32_t (__uint32_t)' static inline
| |-ParmVarDecl 0x6b5a00 <col:13, col:24> col:24 used __bsx '__uint32_t':'unsigned int'
| `-CompoundStmt 0x6b6060 <line:50:1, line:56:1>
|   `-ReturnStmt 0x6b6050 <line:54:3, line:46:62>
|     `-ParenExpr 0x6b6030 <line:45:3, line:46:62> 'unsigned int'
|       `-BinaryOperator 0x6b6010 <line:45:4, line:46:61> 'unsigned int' '|'
|         |-BinaryOperator 0x6b5ed8 <line:45:4, line:46:31> 'unsigned int' '|'
|         | |-BinaryOperator 0x6b5da0 <line:45:4, col:59> 'unsigned int' '|'
|         | | |-ParenExpr 0x6b5c68 <col:4, col:30> 'unsigned int'
|         | | | `-BinaryOperator 0x6b5c48 <col:5, col:28> 'unsigned int' '>>'
|         | | |   |-ParenExpr 0x6b5c08 <col:5, col:23> 'unsigned int'
|         | | |   | `-BinaryOperator 0x6b5be8 <col:6, col:12> 'unsigned int' '&'
|         | | |   |   |-ImplicitCastExpr 0x6b5bd0 <col:6, col:8> '__uint32_t':'unsigned int' <LValueToRValue>
|         | | |   |   | `-ParenExpr 0x6b5b90 <col:6, col:8> '__uint32_t':'unsigned int' lvalue
|         | | |   |   |   `-DeclRefExpr 0x6b5b70 <line:54:31> '__uint32_t':'unsigned int' lvalue ParmVar 0x6b5a00 '__bsx' '__uint32_t':'unsigned int'
|         | | |   |   `-IntegerLiteral 0x6b5bb0 <line:45:12> 'unsigned int' 4278190080
|         | | |   `-IntegerLiteral 0x6b5c28 <col:28> 'int' 24
|         | | `-ParenExpr 0x6b5d80 <col:34, col:59> 'unsigned int'
|         | |   `-BinaryOperator 0x6b5d60 <col:35, col:58> 'unsigned int' '>>'
|         | |     |-ParenExpr 0x6b5d20 <col:35, col:53> 'unsigned int'
|         | |     | `-BinaryOperator 0x6b5d00 <col:36, col:42> 'unsigned int' '&'
|         | |     |   |-ImplicitCastExpr 0x6b5ce8 <col:36, col:38> '__uint32_t':'unsigned int' <LValueToRValue>
|         | |     |   | `-ParenExpr 0x6b5ca8 <col:36, col:38> '__uint32_t':'unsigned int' lvalue
|         | |     |   |   `-DeclRefExpr 0x6b5c88 <line:54:31> '__uint32_t':'unsigned int' lvalue ParmVar 0x6b5a00 '__bsx' '__uint32_t':'unsigned int'
|         | |     |   `-IntegerLiteral 0x6b5cc8 <line:45:42> 'unsigned int' 16711680
|         | |     `-IntegerLiteral 0x6b5d40 <col:58> 'int' 8
|         | `-ParenExpr 0x6b5eb8 <line:46:6, col:31> 'unsigned int'
|         |   `-BinaryOperator 0x6b5e98 <col:7, col:30> 'unsigned int' '<<'
|         |     |-ParenExpr 0x6b5e58 <col:7, col:25> 'unsigned int'
|         |     | `-BinaryOperator 0x6b5e38 <col:8, col:14> 'unsigned int' '&'
|         |     |   |-ImplicitCastExpr 0x6b5e20 <col:8, col:10> '__uint32_t':'unsigned int' <LValueToRValue>
|         |     |   | `-ParenExpr 0x6b5de0 <col:8, col:10> '__uint32_t':'unsigned int' lvalue
|         |     |   |   `-DeclRefExpr 0x6b5dc0 <line:54:31> '__uint32_t':'unsigned int' lvalue ParmVar 0x6b5a00 '__bsx' '__uint32_t':'unsigned int'
|         |     |   `-IntegerLiteral 0x6b5e00 <line:46:14> 'unsigned int' 65280
|         |     `-IntegerLiteral 0x6b5e78 <col:30> 'int' 8
|         `-ParenExpr 0x6b5ff0 <col:35, col:61> 'unsigned int'
|           `-BinaryOperator 0x6b5fd0 <col:36, col:59> 'unsigned int' '<<'
|             |-ParenExpr 0x6b5f90 <col:36, col:54> 'unsigned int'
|             | `-BinaryOperator 0x6b5f70 <col:37, col:43> 'unsigned int' '&'
|             |   |-ImplicitCastExpr 0x6b5f58 <col:37, col:39> '__uint32_t':'unsigned int' <LValueToRValue>
|             |   | `-ParenExpr 0x6b5f18 <col:37, col:39> '__uint32_t':'unsigned int' lvalue
|             |   |   `-DeclRefExpr 0x6b5ef8 <line:54:31> '__uint32_t':'unsigned int' lvalue ParmVar 0x6b5a00 '__bsx' '__uint32_t':'unsigned int'
|             |   `-IntegerLiteral 0x6b5f38 <line:46:43> 'unsigned int' 255
|             `-IntegerLiteral 0x6b5fb0 <col:59> 'int' 24
|-FunctionDecl 0x6b6178 <line:69:15, line:77:1> line:70:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x6b6088 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x6bd3b8 <line:71:1, line:77:1>
|   `-ReturnStmt 0x6bd3a8 <line:75:3, line:67:43>
|     `-ImplicitCastExpr 0x6bd390 <line:60:3, line:67:43> '__uint64_t':'unsigned long' <IntegralCast>
|       `-ParenExpr 0x6bd370 <line:60:3, line:67:43> 'unsigned long long'
|         `-BinaryOperator 0x6bd350 <line:60:4, line:67:42> 'unsigned long long' '|'
|           |-BinaryOperator 0x6bd200 <line:60:4, line:66:42> 'unsigned long long' '|'
|           | |-BinaryOperator 0x6bd0b0 <line:60:4, line:65:42> 'unsigned long long' '|'
|           | | |-BinaryOperator 0x6bcf60 <line:60:4, line:64:41> 'unsigned long long' '|'
|           | | | |-BinaryOperator 0x6bce10 <line:60:4, line:63:41> 'unsigned long long' '|'
|           | | | | |-BinaryOperator 0x6bccc0 <line:60:4, line:62:42> 'unsigned long long' '|'
|           | | | | | |-BinaryOperator 0x6bcb70 <line:60:4, line:61:42> 'unsigned long long' '|'
|           | | | | | | |-ParenExpr 0x6bca20 <line:60:4, col:40> 'unsigned long long'
|           | | | | | | | `-BinaryOperator 0x6bca00 <col:5, col:38> 'unsigned long long' '>>'
|           | | | | | | |   |-ParenExpr 0x6bc9c0 <col:5, col:33> 'unsigned long long'
|           | | | | | | |   | `-BinaryOperator 0x6bc9a0 <col:6, col:12> 'unsigned long long' '&'
|           | | | | | | |   |   |-ImplicitCastExpr 0x6bc988 <col:6, col:8> 'unsigned long long' <IntegralCast>
|           | | | | | | |   |   | `-ImplicitCastExpr 0x6bc970 <col:6, col:8> '__uint64_t':'unsigned long' <LValueToRValue>
|           | | | | | | |   |   |   `-ParenExpr 0x6bc930 <col:6, col:8> '__uint64_t':'unsigned long' lvalue
|           | | | | | | |   |   |     `-DeclRefExpr 0x6bc910 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x6b6088 '__bsx' '__uint64_t':'unsigned long'
|           | | | | | | |   |   `-IntegerLiteral 0x6bc950 <line:60:12> 'unsigned long long' 18374686479671623680
|           | | | | | | |   `-IntegerLiteral 0x6bc9e0 <col:38> 'int' 56
|           | | | | | | `-ParenExpr 0x6bcb50 <line:61:6, col:42> 'unsigned long long'
|           | | | | | |   `-BinaryOperator 0x6bcb30 <col:7, col:40> 'unsigned long long' '>>'
|           | | | | | |     |-ParenExpr 0x6bcaf0 <col:7, col:35> 'unsigned long long'
|           | | | | | |     | `-BinaryOperator 0x6bcad0 <col:8, col:14> 'unsigned long long' '&'
|           | | | | | |     |   |-ImplicitCastExpr 0x6bcab8 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           | | | | | |     |   | `-ImplicitCastExpr 0x6bcaa0 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           | | | | | |     |   |   `-ParenExpr 0x6bca60 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           | | | | | |     |   |     `-DeclRefExpr 0x6bca40 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x6b6088 '__bsx' '__uint64_t':'unsigned long'
|           | | | | | |     |   `-IntegerLiteral 0x6bca80 <line:61:14> 'unsigned long long' 71776119061217280
|           | | | | | |     `-IntegerLiteral 0x6bcb10 <col:40> 'int' 40
|           | | | | | `-ParenExpr 0x6bcca0 <line:62:6, col:42> 'unsigned long long'
|           | | | | |   `-BinaryOperator 0x6bcc80 <col:7, col:40> 'unsigned long long' '>>'
|           | | | | |     |-ParenExpr 0x6bcc40 <col:7, col:35> 'unsigned long long'
|           | | | | |     | `-BinaryOperator 0x6bcc20 <col:8, col:14> 'unsigned long long' '&'
|           | | | | |     |   |-ImplicitCastExpr 0x6bcc08 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           | | | | |     |   | `-ImplicitCastExpr 0x6bcbf0 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           | | | | |     |   |   `-ParenExpr 0x6bcbb0 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           | | | | |     |   |     `-DeclRefExpr 0x6bcb90 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x6b6088 '__bsx' '__uint64_t':'unsigned long'
|           | | | | |     |   `-IntegerLiteral 0x6bcbd0 <line:62:14> 'unsigned long long' 280375465082880
|           | | | | |     `-IntegerLiteral 0x6bcc60 <col:40> 'int' 24
|           | | | | `-ParenExpr 0x6bcdf0 <line:63:6, col:41> 'unsigned long long'
|           | | | |   `-BinaryOperator 0x6bcdd0 <col:7, col:40> 'unsigned long long' '>>'
|           | | | |     |-ParenExpr 0x6bcd90 <col:7, col:35> 'unsigned long long'
|           | | | |     | `-BinaryOperator 0x6bcd70 <col:8, col:14> 'unsigned long long' '&'
|           | | | |     |   |-ImplicitCastExpr 0x6bcd58 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           | | | |     |   | `-ImplicitCastExpr 0x6bcd40 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           | | | |     |   |   `-ParenExpr 0x6bcd00 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           | | | |     |   |     `-DeclRefExpr 0x6bcce0 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x6b6088 '__bsx' '__uint64_t':'unsigned long'
|           | | | |     |   `-IntegerLiteral 0x6bcd20 <line:63:14> 'unsigned long long' 1095216660480
|           | | | |     `-IntegerLiteral 0x6bcdb0 <col:40> 'int' 8
|           | | | `-ParenExpr 0x6bcf40 <line:64:6, col:41> 'unsigned long long'
|           | | |   `-BinaryOperator 0x6bcf20 <col:7, col:40> 'unsigned long long' '<<'
|           | | |     |-ParenExpr 0x6bcee0 <col:7, col:35> 'unsigned long long'
|           | | |     | `-BinaryOperator 0x6bcec0 <col:8, col:14> 'unsigned long long' '&'
|           | | |     |   |-ImplicitCastExpr 0x6bcea8 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           | | |     |   | `-ImplicitCastExpr 0x6bce90 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           | | |     |   |   `-ParenExpr 0x6bce50 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           | | |     |   |     `-DeclRefExpr 0x6bce30 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x6b6088 '__bsx' '__uint64_t':'unsigned long'
|           | | |     |   `-IntegerLiteral 0x6bce70 <line:64:14> 'unsigned long long' 4278190080
|           | | |     `-IntegerLiteral 0x6bcf00 <col:40> 'int' 8
|           | | `-ParenExpr 0x6bd090 <line:65:6, col:42> 'unsigned long long'
|           | |   `-BinaryOperator 0x6bd070 <col:7, col:40> 'unsigned long long' '<<'
|           | |     |-ParenExpr 0x6bd030 <col:7, col:35> 'unsigned long long'
|           | |     | `-BinaryOperator 0x6bd010 <col:8, col:14> 'unsigned long long' '&'
|           | |     |   |-ImplicitCastExpr 0x6bcff8 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           | |     |   | `-ImplicitCastExpr 0x6bcfe0 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           | |     |   |   `-ParenExpr 0x6bcfa0 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           | |     |   |     `-DeclRefExpr 0x6bcf80 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x6b6088 '__bsx' '__uint64_t':'unsigned long'
|           | |     |   `-IntegerLiteral 0x6bcfc0 <line:65:14> 'unsigned long long' 16711680
|           | |     `-IntegerLiteral 0x6bd050 <col:40> 'int' 24
|           | `-ParenExpr 0x6bd1e0 <line:66:6, col:42> 'unsigned long long'
|           |   `-BinaryOperator 0x6bd1c0 <col:7, col:40> 'unsigned long long' '<<'
|           |     |-ParenExpr 0x6bd180 <col:7, col:35> 'unsigned long long'
|           |     | `-BinaryOperator 0x6bd160 <col:8, col:14> 'unsigned long long' '&'
|           |     |   |-ImplicitCastExpr 0x6bd148 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           |     |   | `-ImplicitCastExpr 0x6bd130 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           |     |   |   `-ParenExpr 0x6bd0f0 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           |     |   |     `-DeclRefExpr 0x6bd0d0 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x6b6088 '__bsx' '__uint64_t':'unsigned long'
|           |     |   `-IntegerLiteral 0x6bd110 <line:66:14> 'unsigned long long' 65280
|           |     `-IntegerLiteral 0x6bd1a0 <col:40> 'int' 40
|           `-ParenExpr 0x6bd330 <line:67:6, col:42> 'unsigned long long'
|             `-BinaryOperator 0x6bd310 <col:7, col:40> 'unsigned long long' '<<'
|               |-ParenExpr 0x6bd2d0 <col:7, col:35> 'unsigned long long'
|               | `-BinaryOperator 0x6bd2b0 <col:8, col:14> 'unsigned long long' '&'
|               |   |-ImplicitCastExpr 0x6bd298 <col:8, col:10> 'unsigned long long' <IntegralCast>
|               |   | `-ImplicitCastExpr 0x6bd280 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|               |   |   `-ParenExpr 0x6bd240 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|               |   |     `-DeclRefExpr 0x6bd220 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x6b6088 '__bsx' '__uint64_t':'unsigned long'
|               |   `-IntegerLiteral 0x6bd260 <line:67:14> 'unsigned long long' 255
|               `-IntegerLiteral 0x6bd2f0 <col:40> 'int' 56
|-FunctionDecl 0x6bd470 </usr/include/x86_64-linux-gnu/bits/uintn-identity.h:32:1, line:36:1> line:33:1 __uint16_identity '__uint16_t (__uint16_t)' static inline
| |-ParmVarDecl 0x6bd3e0 <col:20, col:31> col:31 used __x '__uint16_t':'unsigned short'
| `-CompoundStmt 0x6bd560 <line:34:1, line:36:1>
|   `-ReturnStmt 0x6bd550 <line:35:3, col:10>
|     `-ImplicitCastExpr 0x6bd538 <col:10> '__uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x6bd518 <col:10> '__uint16_t':'unsigned short' lvalue ParmVar 0x6bd3e0 '__x' '__uint16_t':'unsigned short'
|-FunctionDecl 0x6bd618 <line:38:1, line:42:1> line:39:1 __uint32_identity '__uint32_t (__uint32_t)' static inline
| |-ParmVarDecl 0x6bd588 <col:20, col:31> col:31 used __x '__uint32_t':'unsigned int'
| `-CompoundStmt 0x6bd708 <line:40:1, line:42:1>
|   `-ReturnStmt 0x6bd6f8 <line:41:3, col:10>
|     `-ImplicitCastExpr 0x6bd6e0 <col:10> '__uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x6bd6c0 <col:10> '__uint32_t':'unsigned int' lvalue ParmVar 0x6bd588 '__x' '__uint32_t':'unsigned int'
|-FunctionDecl 0x6bd7c0 <line:44:1, line:48:1> line:45:1 __uint64_identity '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x6bd730 <col:20, col:31> col:31 used __x '__uint64_t':'unsigned long'
| `-CompoundStmt 0x6bd8b0 <line:46:1, line:48:1>
|   `-ReturnStmt 0x6bd8a0 <line:47:3, col:10>
|     `-ImplicitCastExpr 0x6bd888 <col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x6bd868 <col:10> '__uint64_t':'unsigned long' lvalue ParmVar 0x6bd730 '__x' '__uint64_t':'unsigned long'
|-RecordDecl 0x6c4e20 </usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h:5:9, line:8:1> line:5:9 struct definition
| `-FieldDecl 0x6c5060 <line:7:3, col:41> col:21 __val 'unsigned long [16]'
|-TypedefDecl 0x6c5108 <line:5:1, line:8:3> col:3 referenced __sigset_t 'struct __sigset_t':'__sigset_t'
| `-ElaboratedType 0x6c50b0 'struct __sigset_t' sugar
|   `-RecordType 0x6c4ea0 '__sigset_t'
|     `-Record 0x6c4e20 ''
|-TypedefDecl 0x6c51b0 </usr/include/x86_64-linux-gnu/bits/types/sigset_t.h:7:1, col:20> col:20 sigset_t '__sigset_t':'__sigset_t'
| `-TypedefType 0x6c5180 '__sigset_t' sugar
|   |-Typedef 0x6c5108 '__sigset_t'
|   `-ElaboratedType 0x6c50b0 'struct __sigset_t' sugar
|     `-RecordType 0x6c4ea0 '__sigset_t'
|       `-Record 0x6c4e20 ''
|-RecordDecl 0x6c5208 </usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h:8:1, line:12:1> line:8:8 struct timeval definition
| |-FieldDecl 0x6c52c0 <line:10:3, col:12> col:12 tv_sec '__time_t':'long'
| `-FieldDecl 0x6c5340 <line:11:3, col:17> col:17 tv_usec '__suseconds_t':'long'
|-RecordDecl 0x6c5390 </usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h:10:1, line:26:1> line:10:8 struct timespec definition
| |-FieldDecl 0x6c5440 <line:12:3, col:12> col:12 tv_sec '__time_t':'long'
| `-FieldDecl 0x6c54c0 <line:16:3, col:21> col:21 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x6c5520 </usr/include/x86_64-linux-gnu/sys/select.h:43:1, col:23> col:23 suseconds_t '__suseconds_t':'long'
| `-TypedefType 0x6c5310 '__suseconds_t' sugar
|   |-Typedef 0x5d8ba0 '__suseconds_t'
|   `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x6c5590 <line:49:1, col:18> col:18 referenced __fd_mask 'long'
| `-BuiltinType 0x553df0 'long'
|-RecordDecl 0x6c55e8 <line:59:9, line:70:3> line:59:9 struct definition
| `-FieldDecl 0x6c5878 <line:67:5, col:50> col:15 __fds_bits '__fd_mask [16]'
|-TypedefDecl 0x6c5928 <line:59:1, line:70:5> col:5 referenced fd_set 'struct fd_set':'fd_set'
| `-ElaboratedType 0x6c58d0 'struct fd_set' sugar
|   `-RecordType 0x6c5670 'fd_set'
|     `-Record 0x6c55e8 ''
|-TypedefDecl 0x6c59a8 <line:77:1, col:19> col:19 fd_mask '__fd_mask':'long'
| `-TypedefType 0x6c5690 '__fd_mask' sugar
|   |-Typedef 0x6c5590 '__fd_mask'
|   `-BuiltinType 0x553df0 'long'
|-FunctionDecl 0x6c8ba0 <line:101:1, line:104:42> line:101:12 select 'int (int, fd_set *restrict, fd_set *restrict, fd_set *restrict, struct timeval *restrict)' extern
| |-ParmVarDecl 0x6c5a18 <col:20, col:24> col:24 __nfds 'int'
| |-ParmVarDecl 0x6c5b08 <col:32, col:51> col:51 __readfds 'fd_set *restrict'
| |-ParmVarDecl 0x6c5b80 <line:102:6, col:25> col:25 __writefds 'fd_set *restrict'
| |-ParmVarDecl 0x6c5bf8 <line:103:6, col:25> col:25 __exceptfds 'fd_set *restrict'
| `-ParmVarDecl 0x6c5d10 <line:104:6, col:33> col:33 __timeout 'struct timeval *restrict'
|-FunctionDecl 0x6c9150 <line:113:1, line:117:45> line:113:12 pselect 'int (int, fd_set *restrict, fd_set *restrict, fd_set *restrict, const struct timespec *restrict, const __sigset_t *restrict)' extern
| |-ParmVarDecl 0x6c8c80 <col:21, col:25> col:25 __nfds 'int'
| |-ParmVarDecl 0x6c8cf8 <col:33, col:52> col:52 __readfds 'fd_set *restrict'
| |-ParmVarDecl 0x6c8d70 <line:114:7, col:26> col:26 __writefds 'fd_set *restrict'
| |-ParmVarDecl 0x6c8de8 <line:115:7, col:26> col:26 __exceptfds 'fd_set *restrict'
| |-ParmVarDecl 0x6c8f00 <line:116:7, col:41> col:41 __timeout 'const struct timespec *restrict'
| `-ParmVarDecl 0x6c8fd8 <line:117:7, col:36> col:36 __sigmask 'const __sigset_t *restrict'
|-TypedefDecl 0x6c9250 </usr/include/x86_64-linux-gnu/sys/types.h:185:1, col:21> col:21 blksize_t '__blksize_t':'long'
| `-TypedefType 0x6c9220 '__blksize_t' sugar
|   |-Typedef 0x5d8dd0 '__blksize_t'
|   `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x6c92e0 <line:192:1, col:20> col:20 blkcnt_t '__blkcnt_t':'long'
| `-TypedefType 0x6c92b0 '__blkcnt_t' sugar
|   |-Typedef 0x5d8e40 '__blkcnt_t'
|   `-BuiltinType 0x553df0 'long'
|-TypedefDecl 0x6c9370 <line:196:1, col:22> col:22 fsblkcnt_t '__fsblkcnt_t':'unsigned long'
| `-TypedefType 0x6c9340 '__fsblkcnt_t' sugar
|   |-Typedef 0x5d8f20 '__fsblkcnt_t'
|   `-BuiltinType 0x553e90 'unsigned long'
|-TypedefDecl 0x6c9400 <line:200:1, col:22> col:22 fsfilcnt_t '__fsfilcnt_t':'unsigned long'
| `-TypedefType 0x6c93d0 '__fsfilcnt_t' sugar
|   |-Typedef 0x5d9000 '__fsfilcnt_t'
|   `-BuiltinType 0x553e90 'unsigned long'
|-RecordDecl 0x6c9458 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:49:9, line:53:1> line:49:16 struct __pthread_internal_list definition
| |-FieldDecl 0x6c95b0 <line:51:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x6c9628 <line:52:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x6c96d8 <line:49:1, line:53:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x6c9680 'struct __pthread_internal_list' sugar
|   `-RecordType 0x6c94e0 'struct __pthread_internal_list'
|     `-Record 0x6c9458 '__pthread_internal_list'
|-RecordDecl 0x6c9748 <line:55:9, line:58:1> line:55:16 struct __pthread_internal_slist definition
| `-FieldDecl 0x6c98a0 <line:57:3, col:36> col:36 __next 'struct __pthread_internal_slist *'
|-TypedefDecl 0x6c9948 <line:55:1, line:58:3> col:3 __pthread_slist_t 'struct __pthread_internal_slist':'struct __pthread_internal_slist'
| `-ElaboratedType 0x6c98f0 'struct __pthread_internal_slist' sugar
|   `-RecordType 0x6c97d0 'struct __pthread_internal_slist'
|     `-Record 0x6c9748 '__pthread_internal_slist'
|-RecordDecl 0x6c99b8 </usr/include/x86_64-linux-gnu/bits/struct_mutex.h:22:1, line:53:1> line:22:8 struct __pthread_mutex_s definition
| |-FieldDecl 0x6c9a78 <line:24:3, col:7> col:7 __lock 'int'
| |-FieldDecl 0x6c9ae0 <line:25:3, col:16> col:16 __count 'unsigned int'
| |-FieldDecl 0x6ceaf0 <line:26:3, col:7> col:7 __owner 'int'
| |-FieldDecl 0x6ceb58 <line:28:3, col:16> col:16 __nusers 'unsigned int'
| |-FieldDecl 0x6cebc0 <line:32:3, col:7> col:7 __kind 'int'
| |-FieldDecl 0x6cec28 <line:34:3, col:9> col:9 __spins 'short'
| |-FieldDecl 0x6cec90 <line:35:3, col:9> col:9 __elision 'short'
| `-FieldDecl 0x6ced10 <line:36:3, col:20> col:20 __list '__pthread_list_t':'struct __pthread_internal_list'
|-RecordDecl 0x6ced60 </usr/include/x86_64-linux-gnu/bits/struct_rwlock.h:23:1, line:55:1> line:23:8 struct __pthread_rwlock_arch_t definition
| |-FieldDecl 0x6cee18 <line:25:3, col:16> col:16 __readers 'unsigned int'
| |-FieldDecl 0x6cee80 <line:26:3, col:16> col:16 __writers 'unsigned int'
| |-FieldDecl 0x6ceee8 <line:27:3, col:16> col:16 __wrphase_futex 'unsigned int'
| |-FieldDecl 0x6cef50 <line:28:3, col:16> col:16 __writers_futex 'unsigned int'
| |-FieldDecl 0x6cefb8 <line:29:3, col:16> col:16 __pad3 'unsigned int'
| |-FieldDecl 0x6cf020 <line:30:3, col:16> col:16 __pad4 'unsigned int'
| |-FieldDecl 0x6cf088 <line:32:3, col:7> col:7 __cur_writer 'int'
| |-FieldDecl 0x6cf0f0 <line:33:3, col:7> col:7 __shared 'int'
| |-FieldDecl 0x6cf158 <line:34:3, col:15> col:15 __rwelision 'signed char'
| |-FieldDecl 0x6cf240 <line:39:3, col:25> col:17 __pad1 'unsigned char [7]'
| |-FieldDecl 0x6cf2a8 <line:42:3, col:21> col:21 __pad2 'unsigned long'
| `-FieldDecl 0x6cf310 <line:45:3, col:16> col:16 __flags 'unsigned int'
|-RecordDecl 0x6cf360 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:92:1, line:117:1> line:92:8 struct __pthread_cond_s definition
| |-RecordDecl 0x6cf400 <line:94:17, line:102:3> line:94:17 union definition
| | |-FieldDecl 0x6cf4b8 <line:96:19, col:42> col:42 __wseq 'unsigned long long'
| | |-RecordDecl 0x6cf508 <line:97:5, line:101:5> line:97:5 struct definition
| | | |-FieldDecl 0x6cf5c8 <line:99:7, col:20> col:20 __low 'unsigned int'
| | | `-FieldDecl 0x6cf630 <line:100:7, col:20> col:20 __high 'unsigned int'
| | `-FieldDecl 0x6cf6d8 <line:97:5, line:101:7> col:7 __wseq32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)'
| |-FieldDecl 0x6cf788 <line:94:17> col:17 implicit 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:94:17)'
| |-IndirectFieldDecl 0x6cf7e8 <line:96:42> col:42 implicit __wseq 'unsigned long long'
| | |-Field 0x6cf788 '' 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:94:17)'
| | `-Field 0x6cf4b8 '__wseq' 'unsigned long long'
| |-IndirectFieldDecl 0x6cf840 <line:101:7> col:7 implicit __wseq32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)'
| | |-Field 0x6cf788 '' 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:94:17)'
| | `-Field 0x6cf6d8 '__wseq32' 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)'
| |-RecordDecl 0x6cf888 <line:103:17, line:111:3> line:103:17 union definition
| | |-FieldDecl 0x6cf948 <line:105:19, col:42> col:42 __g1_start 'unsigned long long'
| | |-RecordDecl 0x6cf998 <line:106:5, line:110:5> line:106:5 struct definition
| | | |-FieldDecl 0x6cfa58 <line:108:7, col:20> col:20 __low 'unsigned int'
| | | `-FieldDecl 0x6d1c80 <line:109:7, col:20> col:20 __high 'unsigned int'
| | `-FieldDecl 0x6d1d28 <line:106:5, line:110:7> col:7 __g1_start32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)'
| |-FieldDecl 0x6d1dd8 <line:103:17> col:17 implicit 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:103:17)'
| |-IndirectFieldDecl 0x6d1e38 <line:105:42> col:42 implicit __g1_start 'unsigned long long'
| | |-Field 0x6d1dd8 '' 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:103:17)'
| | `-Field 0x6cf948 '__g1_start' 'unsigned long long'
| |-IndirectFieldDecl 0x6d1e90 <line:110:7> col:7 implicit __g1_start32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)'
| | |-Field 0x6d1dd8 '' 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:103:17)'
| | `-Field 0x6d1d28 '__g1_start32' 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)'
| |-FieldDecl 0x6d1f70 <line:112:3, col:26> col:16 __g_refs 'unsigned int [2]'
| |-FieldDecl 0x6d2020 <line:113:3, col:26> col:16 __g_size 'unsigned int [2]'
| |-FieldDecl 0x6d2088 <line:114:3, col:16> col:16 __g1_orig_size 'unsigned int'
| |-FieldDecl 0x6d20f0 <line:115:3, col:16> col:16 __wrefs 'unsigned int'
| `-FieldDecl 0x6d21a0 <line:116:3, col:29> col:16 __g_signals 'unsigned int [2]'
|-TypedefDecl 0x6d22b8 </usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:27:1, col:27> col:27 pthread_t 'unsigned long'
| `-BuiltinType 0x553e90 'unsigned long'
|-RecordDecl 0x6d2310 <line:32:9, line:36:1> line:32:9 union definition
| |-FieldDecl 0x6d2408 <line:34:3, col:43> col:8 __size 'char [4]'
| `-FieldDecl 0x6d2470 <line:35:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x6d2518 <line:32:1, line:36:3> col:3 pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x6d24c0 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x6d2390 'pthread_mutexattr_t'
|     `-Record 0x6d2310 ''
|-RecordDecl 0x6d2588 <line:41:9, line:45:1> line:41:9 union definition
| |-FieldDecl 0x6d2688 <line:43:3, col:42> col:8 __size 'char [4]'
| `-FieldDecl 0x6d26f0 <line:44:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x6d2798 <line:41:1, line:45:3> col:3 pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x6d2740 'union pthread_condattr_t' sugar
|   `-RecordType 0x6d2610 'pthread_condattr_t'
|     `-Record 0x6d2588 ''
|-TypedefDecl 0x6d2820 <line:49:1, col:22> col:22 pthread_key_t 'unsigned int'
| `-BuiltinType 0x553e70 'unsigned int'
|-TypedefDecl 0x6d2890 <line:53:1, col:30> col:30 pthread_once_t 'int'
| `-BuiltinType 0x553dd0 'int'
|-RecordDecl 0x6d28e8 <line:56:1, line:60:1> line:56:7 union pthread_attr_t definition
| |-FieldDecl 0x6d2a28 <line:58:3, col:38> col:8 __size 'char [56]'
| `-FieldDecl 0x6d2a90 <line:59:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x6d2b30 <line:62:1, col:30> col:30 pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x6d2ae0 'union pthread_attr_t' sugar
|   `-RecordType 0x6d2970 'union pthread_attr_t'
|     `-Record 0x6d28e8 'pthread_attr_t'
|-RecordDecl 0x6d2b88 <line:67:9, line:72:1> line:67:9 union definition
| |-FieldDecl 0x6d3190 <line:69:3, col:28> col:28 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x6d3278 <line:70:3, col:39> col:8 __size 'char [40]'
| `-FieldDecl 0x6d32e0 <line:71:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x6d3468 <line:67:1, line:72:3> col:3 pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x6d3410 'union pthread_mutex_t' sugar
|   `-RecordType 0x6d2c10 'pthread_mutex_t'
|     `-Record 0x6d2b88 ''
|-RecordDecl 0x6d34d8 <line:75:9, line:80:1> line:75:9 union definition
| |-FieldDecl 0x6d35d0 <line:77:3, col:27> col:27 __data 'struct __pthread_cond_s':'struct __pthread_cond_s'
| |-FieldDecl 0x6d36b8 <line:78:3, col:38> col:8 __size 'char [48]'
| `-FieldDecl 0x6d3720 <line:79:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x6d38f8 <line:75:1, line:80:3> col:3 pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x6d38a0 'union pthread_cond_t' sugar
|   `-RecordType 0x6d3560 'pthread_cond_t'
|     `-Record 0x6d34d8 ''
|-RecordDecl 0x6d3968 <line:86:9, line:91:1> line:86:9 union definition
| |-FieldDecl 0x6d3a60 <line:88:3, col:34> col:34 __data 'struct __pthread_rwlock_arch_t':'struct __pthread_rwlock_arch_t'
| |-FieldDecl 0x6d3b08 <line:89:3, col:40> col:8 __size 'char [56]'
| `-FieldDecl 0x6d3b70 <line:90:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x6d3cc8 <line:86:1, line:91:3> col:3 pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x6d3c70 'union pthread_rwlock_t' sugar
|   `-RecordType 0x6d39f0 'pthread_rwlock_t'
|     `-Record 0x6d3968 ''
|-RecordDecl 0x6d3d38 <line:93:9, line:97:1> line:93:9 union definition
| |-FieldDecl 0x6d3e78 <line:95:3, col:44> col:8 __size 'char [8]'
| `-FieldDecl 0x6d3ee0 <line:96:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x6d3f88 <line:93:1, line:97:3> col:3 pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x6d3f30 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x6d3dc0 'pthread_rwlockattr_t'
|     `-Record 0x6d3d38 ''
|-TypedefDecl 0x6d4010 <line:103:1, col:22> col:22 pthread_spinlock_t 'volatile int'
| `-QualType 0x553dd4 'volatile int' volatile
|   `-BuiltinType 0x553dd0 'int'
|-RecordDecl 0x6d4068 <line:108:9, line:112:1> line:108:9 union definition
| |-FieldDecl 0x6d4db0 <line:110:3, col:41> col:8 __size 'char [32]'
| `-FieldDecl 0x6d4e18 <line:111:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x6d4ec8 <line:108:1, line:112:3> col:3 pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x6d4e70 'union pthread_barrier_t' sugar
|   `-RecordType 0x6d40f0 'pthread_barrier_t'
|     `-Record 0x6d4068 ''
|-RecordDecl 0x6d4f38 <line:114:9, line:118:1> line:114:9 union definition
| |-FieldDecl 0x6d5038 <line:116:3, col:45> col:8 __size 'char [4]'
| `-FieldDecl 0x6d50a0 <line:117:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x6d5148 <line:114:1, line:118:3> col:3 pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x6d50f0 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x6d4fc0 'pthread_barrierattr_t'
|     `-Record 0x6d4f38 ''
|-FunctionDecl 0x6d5280 </usr/include/stdlib.h:401:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:401:17 random 'long (void)' extern
| `-NoThrowAttr 0x6d5320 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6d5420 </usr/include/stdlib.h:404:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:404:13 srandom 'void (unsigned int)' extern
| |-ParmVarDecl 0x6d5390 <col:22, col:35> col:35 __seed 'unsigned int'
| `-NoThrowAttr 0x6d54c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6d5780 </usr/include/stdlib.h:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:410:14 initstate 'char *(unsigned int, char *, size_t)' extern
| |-ParmVarDecl 0x6d5538 <col:25, col:38> col:38 __seed 'unsigned int'
| |-ParmVarDecl 0x6d55b8 <col:46, col:52> col:52 __statebuf 'char *'
| |-ParmVarDecl 0x6d5630 <line:411:4, col:11> col:11 __statelen 'size_t':'unsigned long'
| |-NoThrowAttr 0x6d5838 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6d5890 <line:293:44, /usr/include/stdlib.h:411:44> 2
|-FunctionDecl 0x6d5998 <line:415:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:415:14 setstate 'char *(char *)' extern
| |-ParmVarDecl 0x6d58e0 <col:24, col:30> col:30 __statebuf 'char *'
| |-NoThrowAttr 0x6d5a40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6d5a98 <line:293:44, /usr/include/stdlib.h:415:63> 1
|-RecordDecl 0x6d5ad8 <line:423:1, line:432:3> line:423:8 struct random_data definition
| |-FieldDecl 0x6d5c08 <line:425:5, col:14> col:14 fptr 'int32_t *'
| |-FieldDecl 0x6d5c68 <line:426:5, col:14> col:14 rptr 'int32_t *'
| |-FieldDecl 0x6d5cc8 <line:427:5, col:14> col:14 state 'int32_t *'
| |-FieldDecl 0x6d5d30 <line:428:5, col:9> col:9 rand_type 'int'
| |-FieldDecl 0x6d5dc0 <line:429:5, col:9> col:9 rand_deg 'int'
| |-FieldDecl 0x6d5e28 <line:430:5, col:9> col:9 rand_sep 'int'
| `-FieldDecl 0x6d5e88 <line:431:5, col:14> col:14 end_ptr 'int32_t *'
|-FunctionDecl 0x6d6160 <line:434:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:434:12 random_r 'int (struct random_data *restrict, int32_t *restrict)' extern
| |-ParmVarDecl 0x6d5f90 <col:22, col:53> col:53 __buf 'struct random_data *restrict'
| |-ParmVarDecl 0x6d6008 <line:435:8, col:28> col:28 __result 'int32_t *restrict'
| |-NoThrowAttr 0x6d6210 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6d6268 <line:293:44, /usr/include/stdlib.h:435:62> 1 2
|-FunctionDecl 0x6d6490 <line:437:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:437:12 srandom_r 'int (unsigned int, struct random_data *)' extern
| |-ParmVarDecl 0x6d62c0 <col:23, col:36> col:36 __seed 'unsigned int'
| |-ParmVarDecl 0x6d6350 <col:44, col:64> col:64 __buf 'struct random_data *'
| |-NoThrowAttr 0x6d6540 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6d6598 <line:293:44, /usr/include/stdlib.h:438:27> 2
|-FunctionDecl 0x6d6900 <line:440:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:440:12 initstate_r 'int (unsigned int, char *restrict, size_t, struct random_data *restrict)' extern
| |-ParmVarDecl 0x6d65f0 <col:25, col:38> col:38 __seed 'unsigned int'
| |-ParmVarDecl 0x6d6670 <col:46, col:63> col:63 __statebuf 'char *restrict'
| |-ParmVarDecl 0x6d66e8 <line:441:4, col:11> col:11 __statelen 'size_t':'unsigned long'
| |-ParmVarDecl 0x6d6778 <line:442:4, col:35> col:35 __buf 'struct random_data *restrict'
| |-NoThrowAttr 0x6d69c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6d6a18 <line:293:44, /usr/include/stdlib.h:443:30> 2 4
|-FunctionDecl 0x6d6c60 <line:445:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:445:12 setstate_r 'int (char *restrict, struct random_data *restrict)' extern
| |-ParmVarDecl 0x6d6a70 <col:24, col:41> col:41 __statebuf 'char *restrict'
| |-ParmVarDecl 0x6d6b00 <line:446:10, col:41> col:41 __buf 'struct random_data *restrict'
| |-NoThrowAttr 0x6d6d10 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6d6d68 <line:293:44, /usr/include/stdlib.h:447:30> 1 2
|-FunctionDecl 0x6d6e60 <line:453:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:453:12 rand 'int (void)' extern
| `-NoThrowAttr 0x6d6f00 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6d7000 </usr/include/stdlib.h:455:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:455:13 srand 'void (unsigned int)' extern
| |-ParmVarDecl 0x6d6f70 <col:20, col:33> col:33 __seed 'unsigned int'
| `-NoThrowAttr 0x6d70a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6d71e0 </usr/include/stdlib.h:459:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:459:12 rand_r 'int (unsigned int *)' extern
| |-ParmVarDecl 0x6d7118 <col:20, col:34> col:34 __seed 'unsigned int *'
| `-NoThrowAttr 0x6d7288 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6d73b0 </usr/include/stdlib.h:467:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:467:15 drand48 'double (void)' extern
| `-NoThrowAttr 0x6d7450 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6d76c0 </usr/include/stdlib.h:468:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:468:15 erand48 'double (unsigned short *)' extern
| |-ParmVarDecl 0x6d75a0 <col:24, col:52> col:43 __xsubi 'unsigned short *':'unsigned short *'
| |-NoThrowAttr 0x6d7768 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6d77c0 <line:293:44, /usr/include/stdlib.h:468:76> 1
|-FunctionDecl 0x6d7898 <line:471:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:471:17 lrand48 'long (void)' extern
| `-NoThrowAttr 0x6d7938 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6d7b10 </usr/include/stdlib.h:472:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:472:17 nrand48 'long (unsigned short *)' extern
| |-ParmVarDecl 0x6d79f0 <col:26, col:54> col:45 __xsubi 'unsigned short *':'unsigned short *'
| |-NoThrowAttr 0x6d7bb8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6d7c10 <line:293:44, /usr/include/stdlib.h:473:27> 1
|-FunctionDecl 0x6d7ce8 <line:476:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:476:17 mrand48 'long (void)' extern
| `-NoThrowAttr 0x6d7d88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6d8f38 </usr/include/stdlib.h:477:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:477:17 jrand48 'long (unsigned short *)' extern
| |-ParmVarDecl 0x6d8e80 <col:26, col:54> col:45 __xsubi 'unsigned short *':'unsigned short *'
| |-NoThrowAttr 0x6d8fe0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6d9038 <line:293:44, /usr/include/stdlib.h:478:27> 1
|-FunctionDecl 0x6d9158 <line:481:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:481:13 srand48 'void (long)' extern
| |-ParmVarDecl 0x6d9090 <col:22, col:31> col:31 __seedval 'long'
| `-NoThrowAttr 0x6d9200 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6d93d0 </usr/include/stdlib.h:482:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:482:28 seed48 'unsigned short *(unsigned short *)' extern
| |-ParmVarDecl 0x6d92b8 <col:36, col:66> col:55 __seed16v 'unsigned short *':'unsigned short *'
| |-NoThrowAttr 0x6d9478 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6d94d0 <line:293:44, /usr/include/stdlib.h:483:27> 1
|-FunctionDecl 0x6d96e8 <line:484:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:484:13 lcong48 'void (unsigned short *)' extern
| |-ParmVarDecl 0x6d95d0 <col:22, col:50> col:41 __param 'unsigned short *':'unsigned short *'
| |-NoThrowAttr 0x6d9790 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6d97e8 <line:293:44, /usr/include/stdlib.h:484:74> 1
|-RecordDecl 0x6d9828 <line:490:1, line:498:3> line:490:8 struct drand48_data definition
| |-FieldDecl 0x6d9930 <line:492:5, col:29> col:24 __x 'unsigned short [3]'
| |-FieldDecl 0x6d99e0 <line:493:5, col:33> col:24 __old_x 'unsigned short [3]'
| |-FieldDecl 0x6d9a48 <line:494:5, col:24> col:24 __c 'unsigned short'
| |-FieldDecl 0x6d9ab0 <line:495:5, col:24> col:24 __init 'unsigned short'
| `-FieldDecl 0x6d9b18 <line:496:19, col:42> col:42 __a 'unsigned long long'
|-FunctionDecl 0x6d9e70 <line:501:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:501:12 drand48_r 'int (struct drand48_data *restrict, double *restrict)' extern
| |-ParmVarDecl 0x6d9c20 <col:23, col:55> col:55 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0x6d9cd0 <line:502:9, col:28> col:28 __result 'double *restrict'
| |-NoThrowAttr 0x6d9f20 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6d9f78 <line:293:44, /usr/include/stdlib.h:502:62> 1 2
|-FunctionDecl 0x6da290 <line:503:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:503:12 erand48_r 'int (unsigned short *, struct drand48_data *restrict, double *restrict)' extern
| |-ParmVarDecl 0x6da018 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| |-ParmVarDecl 0x6da0a8 <line:504:9, col:41> col:41 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0x6da128 <line:505:9, col:28> col:28 __result 'double *restrict'
| |-NoThrowAttr 0x6da348 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6da3a0 <line:293:44, /usr/include/stdlib.h:505:62> 1 2
|-FunctionDecl 0x6da610 <line:508:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:508:12 lrand48_r 'int (struct drand48_data *restrict, long *restrict)' extern
| |-ParmVarDecl 0x6da400 <col:23, col:55> col:55 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0x6da4b0 <line:509:9, col:30> col:30 __result 'long *restrict'
| |-NoThrowAttr 0x6da6c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6da718 <line:293:44, /usr/include/stdlib.h:510:30> 1 2
|-FunctionDecl 0x6daa30 <line:511:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:511:12 nrand48_r 'int (unsigned short *, struct drand48_data *restrict, long *restrict)' extern
| |-ParmVarDecl 0x6da7b8 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| |-ParmVarDecl 0x6da848 <line:512:9, col:41> col:41 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0x6da8c8 <line:513:9, col:30> col:30 __result 'long *restrict'
| |-NoThrowAttr 0x6daae8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6dab40 <line:293:44, /usr/include/stdlib.h:514:30> 1 2
|-FunctionDecl 0x6dad00 <line:517:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:517:12 mrand48_r 'int (struct drand48_data *restrict, long *restrict)' extern
| |-ParmVarDecl 0x6daba0 <col:23, col:55> col:55 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0x6dac20 <line:518:9, col:30> col:30 __result 'long *restrict'
| |-NoThrowAttr 0x6dadb0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6dae40 <line:293:44, /usr/include/stdlib.h:519:30> 1 2
|-FunctionDecl 0x6db0d0 <line:520:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:520:12 jrand48_r 'int (unsigned short *, struct drand48_data *restrict, long *restrict)' extern
| |-ParmVarDecl 0x6daed8 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| |-ParmVarDecl 0x6daf68 <line:521:9, col:41> col:41 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0x6dafe8 <line:522:9, col:30> col:30 __result 'long *restrict'
| |-NoThrowAttr 0x6db188 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6db1e0 <line:293:44, /usr/include/stdlib.h:523:30> 1 2
|-FunctionDecl 0x6db400 <line:526:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:526:12 srand48_r 'int (long, struct drand48_data *)' extern
| |-ParmVarDecl 0x6db230 <col:23, col:32> col:32 __seedval 'long'
| |-ParmVarDecl 0x6db2c0 <col:43, col:64> col:64 __buffer 'struct drand48_data *'
| |-NoThrowAttr 0x6db4b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6db508 <line:293:44, /usr/include/stdlib.h:527:27> 2
|-FunctionDecl 0x6db790 <line:529:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:529:12 seed48_r 'int (unsigned short *, struct drand48_data *)' extern
| |-ParmVarDecl 0x6db5a8 <col:22, col:52> col:41 __seed16v 'unsigned short *':'unsigned short *'
| |-ParmVarDecl 0x6db638 <line:530:8, col:29> col:29 __buffer 'struct drand48_data *'
| |-NoThrowAttr 0x6db840 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6db898 <line:293:44, /usr/include/stdlib.h:530:63> 1 2
|-FunctionDecl 0x6dbae0 <line:532:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:532:12 lcong48_r 'int (unsigned short *, struct drand48_data *)' extern
| |-ParmVarDecl 0x6db938 <col:23, col:51> col:42 __param 'unsigned short *':'unsigned short *'
| |-ParmVarDecl 0x6db9c8 <line:533:9, col:30> col:30 __buffer 'struct drand48_data *'
| |-NoThrowAttr 0x6dbb90 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6dbbe8 <line:293:44, /usr/include/stdlib.h:534:30> 1 2
|-FunctionDecl 0x6dbd30 <line:539:14> col:14 implicit malloc 'void *(unsigned long)' extern
| `-ParmVarDecl 0x6dbe20 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x6dbe90 prev 0x6dbd30 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdlib.h:539:14 malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x6dbc38 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0x6dbf38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0x6dbf90 <line:208:47> malloc
|-FunctionDecl 0x6dc160 </usr/include/stdlib.h:542:14> col:14 implicit calloc 'void *(unsigned long, unsigned long)' extern
| |-ParmVarDecl 0x6dc200 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0x6dc268 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x6dc2e0 prev 0x6dc160 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdlib.h:542:14 calloc 'void *(unsigned long, unsigned long)' extern
| |-ParmVarDecl 0x6dbfc8 <col:22, col:29> col:29 __nmemb 'size_t':'unsigned long'
| |-ParmVarDecl 0x6dc040 <col:38, col:45> col:45 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0x6dc390 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0x6dc3e8 <line:208:47> malloc
|-FunctionDecl 0x6dc5c0 </usr/include/stdlib.h:550:14> col:14 implicit realloc 'void *(void *, unsigned long)' extern
| |-ParmVarDecl 0x6dc660 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x6dc6c8 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x6dc740 prev 0x6dc5c0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:302:43> /usr/include/stdlib.h:550:14 realloc 'void *(void *, unsigned long)' extern
| |-ParmVarDecl 0x6dc428 <col:23, col:29> col:29 __ptr 'void *'
| |-ParmVarDecl 0x6dc4a0 <col:36, col:43> col:43 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0x6dc7f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-WarnUnusedResultAttr 0x6dc848 <line:302:20> warn_unused_result ""
|-FunctionDecl 0x6dcab0 </usr/include/stdlib.h:559:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:302:43> /usr/include/stdlib.h:559:14 reallocarray 'void *(void *, size_t, size_t)' extern
| |-ParmVarDecl 0x6dc890 <col:28, col:34> col:34 __ptr 'void *'
| |-ParmVarDecl 0x6dc908 <col:41, col:48> col:48 __nmemb 'size_t':'unsigned long'
| |-ParmVarDecl 0x6dc980 <col:57, col:64> col:64 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0x6dcb68 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-WarnUnusedResultAttr 0x6dcbc0 <line:302:20> warn_unused_result ""
|-FunctionDecl 0x6dccc8 </usr/include/stdlib.h:565:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:565:13 free 'void (void *)' extern
| |-ParmVarDecl 0x6dcc08 <col:19, col:25> col:25 __ptr 'void *'
| `-NoThrowAttr 0x6dcd70 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6de6e8 </usr/include/alloca.h:32:14> col:14 implicit alloca 'void *(unsigned long)' extern
| `-ParmVarDecl 0x6de788 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x6de7f8 prev 0x6de6e8 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/alloca.h:32:14 alloca 'void *(unsigned long)' extern
| |-ParmVarDecl 0x6de650 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| `-NoThrowAttr 0x6de8a0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6de9a0 </usr/include/stdlib.h:574:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdlib.h:574:14 valloc 'void *(size_t)' extern
| |-ParmVarDecl 0x6de908 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0x6dea48 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0x6deaa0 <line:208:47> malloc
|-FunctionDecl 0x6ded50 </usr/include/stdlib.h:580:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:580:12 posix_memalign 'int (void **, size_t, size_t)' extern
| |-ParmVarDecl 0x6deb10 <col:28, col:35> col:35 __memptr 'void **'
| |-ParmVarDecl 0x6deb88 <col:45, col:52> col:52 __alignment 'size_t':'unsigned long'
| |-ParmVarDecl 0x6dec00 <col:65, col:72> col:72 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0x6dee08 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6dee60 <line:293:44, /usr/include/stdlib.h:581:27> 1
|-FunctionDecl 0x6defc0 <line:586:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdlib.h:586:14 aligned_alloc 'void *(size_t, size_t)' extern
| |-ParmVarDecl 0x6deea8 <col:29, col:36> col:36 __alignment 'size_t':'unsigned long'
| |-ParmVarDecl 0x6def20 <col:49, col:56> col:56 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0x6df070 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0x6df0c8 <line:208:47> malloc
|-FunctionDecl 0x6df188 </usr/include/stdlib.h:591:13> col:13 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x6df228 prev 0x6df188 <col:1, col:63> col:13 abort 'void (void) __attribute__((noreturn))' extern
| `-NoThrowAttr 0x6df2c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6df4e0 </usr/include/stdlib.h:595:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:595:12 atexit 'int (void (*)(void))' extern
| |-ParmVarDecl 0x6df3c8 <col:20, col:40> col:27 __func 'void (*)(void)'
| |-NoThrowAttr 0x6df588 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6df5e0 <line:293:44, /usr/include/stdlib.h:595:64> 1
|-FunctionDecl 0x6df7b0 <line:603:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:603:12 at_quick_exit 'int (void (*)(void))' extern
| |-ParmVarDecl 0x6df6f8 <col:27, col:47> col:34 __func 'void (*)(void)'
| |-NoThrowAttr 0x6df858 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6df8b0 <line:293:44, /usr/include/stdlib.h:603:71> 1
|-FunctionDecl 0x6dfcb0 <line:610:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:610:12 on_exit 'int (void (*)(int, void *), void *)' extern
| |-ParmVarDecl 0x6dfaf8 <col:21, col:62> col:28 __func 'void (*)(int, void *)'
| |-ParmVarDecl 0x6dfb78 <col:65, col:71> col:71 __arg 'void *'
| |-NoThrowAttr 0x6dfd60 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6dfdb8 <line:293:44, /usr/include/stdlib.h:611:27> 1
|-FunctionDecl 0x6dfed8 <line:617:13> col:13 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x6dff78 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x6dffe8 prev 0x6dfed8 <col:1, col:70> col:13 exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x6dfe10 <col:19, col:23> col:23 __status 'int'
| `-NoThrowAttr 0x6e0090 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6e0190 </usr/include/stdlib.h:623:1, col:76> col:13 quick_exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x6e0100 <col:25, col:29> col:29 __status 'int'
| `-NoThrowAttr 0x6e0238 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6e0338 </usr/include/stdlib.h:629:13> col:13 implicit _Exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x6e03d8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x6e0448 prev 0x6e0338 <col:1, col:71> col:13 _Exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x6e02a8 <col:20, col:24> col:24 __status 'int'
| `-NoThrowAttr 0x6e04f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6e16a0 </usr/include/stdlib.h:634:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:634:14 getenv 'char *(const char *)' extern
| |-ParmVarDecl 0x6e0560 <col:22, col:34> col:34 __name 'const char *'
| |-NoThrowAttr 0x6e1748 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6e17a0 <line:293:44, /usr/include/stdlib.h:634:63> 1
|-FunctionDecl 0x6e18e0 <line:647:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:647:12 putenv 'int (char *)' extern
| |-ParmVarDecl 0x6e17f0 <col:20, col:26> col:26 __string 'char *'
| |-NoThrowAttr 0x6e1988 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6e19e0 <line:293:44, /usr/include/stdlib.h:647:57> 1
|-FunctionDecl 0x6e1c40 <line:653:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:653:12 setenv 'int (const char *, const char *, int)' extern
| |-ParmVarDecl 0x6e1a30 <col:20, col:32> col:32 __name 'const char *'
| |-ParmVarDecl 0x6e1ab0 <col:40, col:52> col:52 __value 'const char *'
| |-ParmVarDecl 0x6e1b30 <col:61, col:65> col:65 __replace 'int'
| |-NoThrowAttr 0x6e1cf8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6e1d50 <line:293:44, /usr/include/stdlib.h:654:27> 2
|-FunctionDecl 0x6e1e58 <line:657:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:657:12 unsetenv 'int (const char *)' extern
| |-ParmVarDecl 0x6e1da0 <col:22, col:34> col:34 __name 'const char *'
| |-NoThrowAttr 0x6e1f00 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6e1f58 <line:293:44, /usr/include/stdlib.h:657:63> 1
|-FunctionDecl 0x6e2038 <line:664:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:664:12 clearenv 'int (void)' extern
| `-NoThrowAttr 0x6e20d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6e2200 </usr/include/stdlib.h:675:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:675:14 mktemp 'char *(char *)' extern
| |-ParmVarDecl 0x6e2148 <col:22, col:28> col:28 __template 'char *'
| |-NoThrowAttr 0x6e22a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6e2300 <line:293:44, /usr/include/stdlib.h:675:61> 1
|-FunctionDecl 0x6e2408 <line:688:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:688:12 mkstemp 'int (char *)' extern
| |-ParmVarDecl 0x6e2350 <col:21, col:27> col:27 __template 'char *'
| `-NonNullAttr 0x6e24b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:688:52> 1
|-FunctionDecl 0x6e26e8 <line:710:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:710:12 mkstemps 'int (char *, int)' extern
| |-ParmVarDecl 0x6e2530 <col:22, col:28> col:28 __template 'char *'
| |-ParmVarDecl 0x6e25b0 <col:40, col:44> col:44 __suffixlen 'int'
| `-NonNullAttr 0x6e2798 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:710:70> 1
|-FunctionDecl 0x6e28d8 <line:731:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:731:14 mkdtemp 'char *(char *)' extern
| |-ParmVarDecl 0x6e2820 <col:23, col:29> col:29 __template 'char *'
| |-NoThrowAttr 0x6e2980 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6e29d8 <line:293:44, /usr/include/stdlib.h:731:62> 1
|-FunctionDecl 0x6e2ac8 <line:784:1, col:41> col:12 system 'int (const char *)' extern
| `-ParmVarDecl 0x6e2a30 <col:20, col:32> col:32 __command 'const char *'
|-FunctionDecl 0x6e2d20 <line:800:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:800:14 realpath 'char *(const char *restrict, char *restrict)' extern
| |-ParmVarDecl 0x6e2b88 <col:24, col:47> col:47 __name 'const char *restrict'
| |-ParmVarDecl 0x6e2c08 <line:801:10, col:27> col:27 __resolved 'char *restrict'
| `-NoThrowAttr 0x6e2dd0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-TypedefDecl 0x6e3040 </usr/include/stdlib.h:808:1, col:57> col:15 referenced __compar_fn_t 'int (*)(const void *, const void *)'
| `-PointerType 0x6e2fd0 'int (*)(const void *, const void *)'
|   `-ParenType 0x6e2f70 'int (const void *, const void *)' sugar
|     `-FunctionProtoType 0x6e2f30 'int (const void *, const void *)' cdecl
|       |-BuiltinType 0x553dd0 'int'
|       |-PointerType 0x5fa5d0 'const void *'
|       | `-QualType 0x553d31 'const void' const
|       |   `-BuiltinType 0x553d30 'void'
|       `-PointerType 0x5fa5d0 'const void *'
|         `-QualType 0x553d31 'const void' const
|           `-BuiltinType 0x553d30 'void'
|-FunctionDecl 0x6e3480 <line:820:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:820:14 bsearch 'void *(const void *, const void *, size_t, size_t, __compar_fn_t)' extern
| |-ParmVarDecl 0x6e30b0 <col:23, col:35> col:35 __key 'const void *'
| |-ParmVarDecl 0x6e3130 <col:42, col:54> col:54 __base 'const void *'
| |-ParmVarDecl 0x6e31a8 <line:821:9, col:16> col:16 __nmemb 'size_t':'unsigned long'
| |-ParmVarDecl 0x6e3220 <col:25, col:32> col:32 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x6e32c0 <col:40, col:54> col:54 __compar '__compar_fn_t':'int (*)(const void *, const void *)'
| `-NonNullAttr 0x6e3548 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:822:25> 1 2 5
|-FunctionDecl 0x6e3938 <line:830:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:830:13 qsort 'void (void *, size_t, size_t, __compar_fn_t)' extern
| |-ParmVarDecl 0x6e35d8 <col:20, col:26> col:26 __base 'void *'
| |-ParmVarDecl 0x6e36c0 <col:34, col:41> col:41 __nmemb 'size_t':'unsigned long'
| |-ParmVarDecl 0x6e3738 <col:50, col:57> col:57 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x6e37b0 <line:831:6, col:20> col:20 __compar '__compar_fn_t':'int (*)(const void *, const void *)'
| `-NonNullAttr 0x6e39f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:831:46> 1 4
|-FunctionDecl 0x6e3b18 <line:840:12> col:12 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x6e3bb8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x6e3c28 <col:12> Implicit
| `-ConstAttr 0x6e3c80 <col:12> Implicit
|-FunctionDecl 0x6e3ca8 prev 0x6e3b18 <col:1, col:60> col:12 abs 'int (int)' extern
| |-ParmVarDecl 0x6e3a80 <col:17, col:21> col:21 __x 'int'
| |-NoThrowAttr 0x6e3d50 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x6e3da8 </usr/include/stdlib.h:840:50>
|-FunctionDecl 0x6e3eb0 <line:841:17> col:17 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x6e3f50 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x6e3fc0 <col:17> Implicit
| `-ConstAttr 0x6e4018 <col:17> Implicit
|-FunctionDecl 0x6e4040 prev 0x6e3eb0 <col:1, col:71> col:17 labs 'long (long)' extern
| |-ParmVarDecl 0x6e3de8 <col:23, col:32> col:32 __x 'long'
| |-NoThrowAttr 0x6e40e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x6e4140 </usr/include/stdlib.h:841:61>
|-FunctionDecl 0x6e4250 <line:844:36> col:36 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x6e42f0 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x6e4360 <col:36> Implicit
| `-ConstAttr 0x6e43b8 <col:36> Implicit
|-FunctionDecl 0x6e43e0 prev 0x6e4250 <col:15, line:845:40> line:844:36 llabs 'long long (long long)' extern
| |-ParmVarDecl 0x6e4180 <col:43, col:57> col:57 __x 'long long'
| |-NoThrowAttr 0x6e4488 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x6e44e0 </usr/include/stdlib.h:845:30>
|-FunctionDecl 0x68af00 <line:852:1, line:853:40> line:852:14 div 'div_t (int, int)' extern
| |-ParmVarDecl 0x6e4548 <col:19, col:23> col:23 __numer 'int'
| |-ParmVarDecl 0x6e45c8 <col:32, col:36> col:36 __denom 'int'
| |-NoThrowAttr 0x68afb0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x68b008 </usr/include/stdlib.h:853:30>
|-FunctionDecl 0x68b1f8 <line:854:1, line:855:40> line:854:15 ldiv 'ldiv_t (long, long)' extern
| |-ParmVarDecl 0x68b068 <col:21, col:30> col:30 __numer 'long'
| |-ParmVarDecl 0x68b0e8 <col:39, col:48> col:48 __denom 'long'
| |-NoThrowAttr 0x68b2a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x68b300 </usr/include/stdlib.h:855:30>
|-FunctionDecl 0x68b4f8 <line:858:15, line:860:40> line:858:30 lldiv 'lldiv_t (long long, long long)' extern
| |-ParmVarDecl 0x68b368 <col:37, col:51> col:51 __numer 'long long'
| |-ParmVarDecl 0x68b3e8 <line:859:9, col:23> col:23 __denom 'long long'
| |-NoThrowAttr 0x68b5a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x68b600 </usr/include/stdlib.h:860:30>
|-FunctionDecl 0x68b950 <line:872:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:872:14 ecvt 'char *(double, int, int *restrict, int *restrict)' extern
| |-ParmVarDecl 0x68b640 <col:20, col:27> col:27 __value 'double'
| |-ParmVarDecl 0x68b6c0 <col:36, col:40> col:40 __ndigit 'int'
| |-ParmVarDecl 0x68b740 <col:50, col:66> col:66 __decpt 'int *restrict'
| |-ParmVarDecl 0x68b7c0 <line:873:6, col:22> col:22 __sign 'int *restrict'
| |-NoThrowAttr 0x68ba10 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x68ba68 <line:293:44, /usr/include/stdlib.h:873:54> 3 4
|-FunctionDecl 0x68bd30 <line:878:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:878:14 fcvt 'char *(double, int, int *restrict, int *restrict)' extern
| |-ParmVarDecl 0x68bac0 <col:20, col:27> col:27 __value 'double'
| |-ParmVarDecl 0x68bb40 <col:36, col:40> col:40 __ndigit 'int'
| |-ParmVarDecl 0x68bbc0 <col:50, col:66> col:66 __decpt 'int *restrict'
| |-ParmVarDecl 0x68bc40 <line:879:6, col:22> col:22 __sign 'int *restrict'
| |-NoThrowAttr 0x68bdf0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x68be48 <line:293:44, /usr/include/stdlib.h:879:54> 3 4
|-FunctionDecl 0x6e7900 <line:884:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:884:14 gcvt 'char *(double, int, char *)' extern
| |-ParmVarDecl 0x6e76f0 <col:20, col:27> col:27 __value 'double'
| |-ParmVarDecl 0x6e7770 <col:36, col:40> col:40 __ndigit 'int'
| |-ParmVarDecl 0x6e77f0 <col:50, col:56> col:56 __buf 'char *'
| |-NoThrowAttr 0x6e79b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6e7a10 <line:293:44, /usr/include/stdlib.h:885:27> 3
|-FunctionDecl 0x6e7d70 <line:890:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:890:14 qecvt 'char *(long double, int, int *restrict, int *restrict)' extern
| |-ParmVarDecl 0x6e7a60 <col:21, col:33> col:33 __value 'long double'
| |-ParmVarDecl 0x6e7ae0 <col:42, col:46> col:46 __ndigit 'int'
| |-ParmVarDecl 0x6e7b60 <line:891:7, col:23> col:23 __decpt 'int *restrict'
| |-ParmVarDecl 0x6e7be0 <col:32, col:48> col:48 __sign 'int *restrict'
| |-NoThrowAttr 0x6e7e30 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6e7e88 <line:293:44, /usr/include/stdlib.h:892:30> 3 4
|-FunctionDecl 0x6e8150 <line:893:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:893:14 qfcvt 'char *(long double, int, int *restrict, int *restrict)' extern
| |-ParmVarDecl 0x6e7ee0 <col:21, col:33> col:33 __value 'long double'
| |-ParmVarDecl 0x6e7f60 <col:42, col:46> col:46 __ndigit 'int'
| |-ParmVarDecl 0x6e7fe0 <line:894:7, col:23> col:23 __decpt 'int *restrict'
| |-ParmVarDecl 0x6e8060 <col:32, col:48> col:48 __sign 'int *restrict'
| |-NoThrowAttr 0x6e8210 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6e8268 <line:293:44, /usr/include/stdlib.h:895:30> 3 4
|-FunctionDecl 0x6e84d0 <line:896:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:896:14 qgcvt 'char *(long double, int, char *)' extern
| |-ParmVarDecl 0x6e82c0 <col:21, col:33> col:33 __value 'long double'
| |-ParmVarDecl 0x6e8340 <col:42, col:46> col:46 __ndigit 'int'
| |-ParmVarDecl 0x6e83c0 <col:56, col:62> col:62 __buf 'char *'
| |-NoThrowAttr 0x6e8588 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6e85e0 <line:293:44, /usr/include/stdlib.h:897:27> 3
|-FunctionDecl 0x6e8ad0 <line:902:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:902:12 ecvt_r 'int (double, int, int *restrict, int *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0x6e8630 <col:20, col:27> col:27 __value 'double'
| |-ParmVarDecl 0x6e8700 <col:36, col:40> col:40 __ndigit 'int'
| |-ParmVarDecl 0x6e8780 <col:50, col:66> col:66 __decpt 'int *restrict'
| |-ParmVarDecl 0x6e8800 <line:903:6, col:22> col:22 __sign 'int *restrict'
| |-ParmVarDecl 0x6e8880 <col:30, col:47> col:47 __buf 'char *restrict'
| |-ParmVarDecl 0x6e88f8 <line:904:6, col:13> col:13 __len 'size_t':'unsigned long'
| |-NoThrowAttr 0x6e8ba0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6e8bf8 <line:293:44, /usr/include/stdlib.h:904:47> 3 4 5
|-FunctionDecl 0x6e8ff0 <line:905:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:905:12 fcvt_r 'int (double, int, int *restrict, int *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0x6e8c58 <col:20, col:27> col:27 __value 'double'
| |-ParmVarDecl 0x6e8cd8 <col:36, col:40> col:40 __ndigit 'int'
| |-ParmVarDecl 0x6e8d58 <col:50, col:66> col:66 __decpt 'int *restrict'
| |-ParmVarDecl 0x6e8dd8 <line:906:6, col:22> col:22 __sign 'int *restrict'
| |-ParmVarDecl 0x6e8e58 <col:30, col:47> col:47 __buf 'char *restrict'
| |-ParmVarDecl 0x6e8ed0 <line:907:6, col:13> col:13 __len 'size_t':'unsigned long'
| |-NoThrowAttr 0x6e90c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6e9118 <line:293:44, /usr/include/stdlib.h:907:47> 3 4 5
|-FunctionDecl 0x6e95d0 <line:909:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:909:12 qecvt_r 'int (long double, int, int *restrict, int *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0x6e9178 <col:21, col:33> col:33 __value 'long double'
| |-ParmVarDecl 0x6e91f8 <col:42, col:46> col:46 __ndigit 'int'
| |-ParmVarDecl 0x6e9278 <line:910:7, col:23> col:23 __decpt 'int *restrict'
| |-ParmVarDecl 0x6e92f8 <col:32, col:48> col:48 __sign 'int *restrict'
| |-ParmVarDecl 0x6e9378 <line:911:7, col:24> col:24 __buf 'char *restrict'
| |-ParmVarDecl 0x6e93f0 <col:31, col:38> col:38 __len 'size_t':'unsigned long'
| |-NoThrowAttr 0x6e96a0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6e9710 <line:293:44, /usr/include/stdlib.h:912:33> 3 4 5
|-FunctionDecl 0x6e9b00 <line:913:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:913:12 qfcvt_r 'int (long double, int, int *restrict, int *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0x6e9768 <col:21, col:33> col:33 __value 'long double'
| |-ParmVarDecl 0x6e97e8 <col:42, col:46> col:46 __ndigit 'int'
| |-ParmVarDecl 0x6e9868 <line:914:7, col:23> col:23 __decpt 'int *restrict'
| |-ParmVarDecl 0x6e98e8 <col:32, col:48> col:48 __sign 'int *restrict'
| |-ParmVarDecl 0x6e9968 <line:915:7, col:24> col:24 __buf 'char *restrict'
| |-ParmVarDecl 0x6e99e0 <col:31, col:38> col:38 __len 'size_t':'unsigned long'
| |-NoThrowAttr 0x6e9bd0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6e9c28 <line:293:44, /usr/include/stdlib.h:916:33> 3 4 5
|-FunctionDecl 0x6e9e20 <line:922:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:922:12 mblen 'int (const char *, size_t)' extern
| |-ParmVarDecl 0x6e9c88 <col:19, col:31> col:31 __s 'const char *'
| |-ParmVarDecl 0x6e9d00 <col:36, col:43> col:43 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0x6e9ed0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6ea1b0 </usr/include/stdlib.h:925:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:925:12 mbtowc 'int (wchar_t *restrict, const char *restrict, size_t)' extern
| |-ParmVarDecl 0x6e9f88 <col:20, col:40> col:40 __pwc 'wchar_t *restrict'
| |-ParmVarDecl 0x6ea008 <line:926:6, col:29> col:29 __s 'const char *restrict'
| |-ParmVarDecl 0x6ea080 <col:34, col:41> col:41 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0x6ea268 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6ea430 </usr/include/stdlib.h:929:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:929:12 wctomb 'int (char *, wchar_t)' extern
| |-ParmVarDecl 0x6ea2d8 <col:20, col:26> col:26 __s 'char *'
| |-ParmVarDecl 0x6ea350 <col:31, col:39> col:39 __wchar 'wchar_t':'int'
| `-NoThrowAttr 0x6ea4e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6ea798 </usr/include/stdlib.h:933:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:933:15 mbstowcs 'size_t (wchar_t *restrict, const char *restrict, size_t)' extern
| |-ParmVarDecl 0x6ea548 <col:25, col:46> col:46 __pwcs 'wchar_t *restrict'
| |-ParmVarDecl 0x6ea5c8 <line:934:4, col:27> col:27 __s 'const char *restrict'
| |-ParmVarDecl 0x6ea640 <col:32, col:39> col:39 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0x6ea850 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6eab08 </usr/include/stdlib.h:936:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:936:15 wcstombs 'size_t (char *restrict, const wchar_t *restrict, size_t)' extern
| |-ParmVarDecl 0x6ea8c0 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x6ea968 <line:937:4, col:30> col:30 __pwcs 'const wchar_t *restrict'
| |-ParmVarDecl 0x6ea9e0 <col:38, col:45> col:45 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0x6eabc0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x6eace8 </usr/include/stdlib.h:946:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:946:12 rpmatch 'int (const char *)' extern
| |-ParmVarDecl 0x6eac30 <col:21, col:33> col:33 __response 'const char *'
| |-NoThrowAttr 0x6ead90 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6eade8 <line:293:44, /usr/include/stdlib.h:946:66> 1
|-FunctionDecl 0x6eb100 <line:957:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:957:12 getsubopt 'int (char **restrict, char *const *restrict, char **restrict)' extern
| |-ParmVarDecl 0x6eae40 <col:23, col:41> col:41 __optionp 'char **restrict'
| |-ParmVarDecl 0x6eaef0 <line:958:9, col:33> col:33 __tokens 'char *const *restrict'
| |-ParmVarDecl 0x6eaf70 <line:959:9, col:27> col:27 __valuep 'char **restrict'
| |-NoThrowAttr 0x6eb1b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6eb210 <line:293:44, /usr/include/stdlib.h:960:33> 1 2 3
|-FunctionDecl 0x6eb490 <line:1003:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:1003:12 getloadavg 'int (double *, int)' extern
| |-ParmVarDecl 0x6eb2d0 <col:24, col:41> col:31 __loadavg 'double *':'double *'
| |-ParmVarDecl 0x6eb350 <col:44, col:48> col:48 __nelem 'int'
| |-NoThrowAttr 0x6eb540 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x6eb598 <line:293:44, /usr/include/stdlib.h:1004:27> 1
|-TypedefDecl 0x6eb5f0 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:35:1, col:26> col:26 ptrdiff_t 'long'
| `-BuiltinType 0x553df0 'long'
|-RecordDecl 0x6eb648 </usr/lib/llvm-10/lib/clang/10.0.0/include/__stddef_max_align_t.h:19:9, line:24:1> line:19:9 struct definition
| |-FieldDecl 0x6ecb48 <line:20:3, col:13> col:13 __clang_max_align_nonce1 'long long'
| | `-AlignedAttr 0x6ecbb0 <line:21:22, col:56> aligned
| |   `-ConstantExpr 0x6ecb98 <col:34, col:55> 'unsigned long'
| |     `-UnaryExprOrTypeTraitExpr 0x6ecb10 <col:34, col:55> 'unsigned long' __alignof 'long long'
| `-FieldDecl 0x6ecc60 <line:22:3, col:15> col:15 __clang_max_align_nonce2 'long double'
|   `-AlignedAttr 0x6eccc8 <line:23:22, col:58> aligned
|     `-ConstantExpr 0x6eccb0 <col:34, col:57> 'unsigned long'
|       `-UnaryExprOrTypeTraitExpr 0x6ecc28 <col:34, col:57> 'unsigned long' __alignof 'long double'
|-TypedefDecl 0x6ecd88 <line:19:1, line:24:3> col:3 max_align_t 'struct max_align_t':'max_align_t'
| `-ElaboratedType 0x6ecd30 'struct max_align_t' sugar
|   `-RecordType 0x6eb6d0 'max_align_t'
|     `-Record 0x6eb648 ''
|-FunctionDecl 0x6ecec0 </usr/include/errno.h:37:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:233:56> /usr/include/errno.h:37:13 __errno_location 'int *(void)' extern
| |-NoThrowAttr 0x6ecf60 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x6ecfb8 <line:233:46>
|-TypedefDecl 0x6ecff8 <main/securec.h:66:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x553dd0 'int'
|-FunctionDecl 0x6ed368 <line:112:21, line:131:81> col:25 used memset_s 'errno_t (void *, size_t, int, size_t)' extern
| |-ParmVarDecl 0x6ed0b8 <col:34, col:40> col:40 dest 'void *'
| |-ParmVarDecl 0x6ed130 <col:46, col:53> col:53 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x6ed1b0 <col:62, col:66> col:66 c 'int'
| |-ParmVarDecl 0x6ed228 <col:69, col:76> col:76 count 'size_t':'unsigned long'
| `-FullComment 0x757380 <line:124:6, line:129:63>
|   |-ParagraphComment 0x754720 <line:124:6, line:125:6>
|   | |-TextComment 0x754650 <line:124:6> Text=" "
|   | |-InlineCommandComment 0x7546a0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x7546c0 <col:19, col:168> Text=":The memset_s function copies the value of c (converted to an unsigned char) into each of the first count characters of the object pointed to by dest."
|   | `-TextComment 0x7546e0 <line:125:6> Text=" "
|   |-ParamCommandComment 0x754740 <col:7, line:126:6> [in] implicitly Param="dest" ParamIndex=0
|   | `-ParagraphComment 0x7547f0 <line:125:18, line:126:6>
|   |   |-TextComment 0x7547a0 <line:125:18, col:40> Text=" - destination  address"
|   |   `-TextComment 0x7547c0 <line:126:6> Text=" "
|   |-ParamCommandComment 0x754810 <col:7, line:127:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x757110 <line:126:21, line:127:6>
|   |   |-TextComment 0x754870 <line:126:21, col:62> Text=" -The maximum length of destination buffer"
|   |   `-TextComment 0x754890 <line:127:6> Text=" "
|   |-ParamCommandComment 0x757130 <col:7, line:128:6> [in] implicitly Param="c" ParamIndex=2
|   | `-ParagraphComment 0x7571e0 <line:127:15, line:128:6>
|   |   |-TextComment 0x757190 <line:127:15, col:39> Text=" - the value to be copied"
|   |   `-TextComment 0x7571b0 <line:128:6> Text=" "
|   |-ParamCommandComment 0x757200 <col:7, line:129:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0x7572b0 <line:128:19, line:129:6>
|   |   |-TextComment 0x757260 <line:128:19, col:58> Text=" -copies first count characters of  dest"
|   |   `-TextComment 0x757280 <line:129:6> Text=" "
|   `-BlockCommandComment 0x7572d0 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x757330 <col:14, col:63>
|       `-TextComment 0x757300 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x6ed718 <line:112:21, line:145:98> col:25 wmemcpy_s 'errno_t (wchar_t *, size_t, const wchar_t *, size_t)' extern
| |-ParmVarDecl 0x6ed468 <col:35, col:44> col:44 dest 'wchar_t *'
| |-ParmVarDecl 0x6ed4e0 <col:50, col:57> col:57 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x6ed558 <col:66, col:81> col:81 src 'const wchar_t *'
| `-ParmVarDecl 0x6ed5d0 <col:86, col:93> col:93 count 'size_t':'unsigned long'
|-FunctionDecl 0x708250 <line:112:21, line:155:92> col:25 memmove_s 'errno_t (void *, size_t, const void *, size_t)' extern
| |-ParmVarDecl 0x6ed820 <col:35, col:41> col:41 dest 'void *'
| |-ParmVarDecl 0x6ed898 <col:47, col:54> col:54 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x6ed918 <col:63, col:75> col:75 src 'const void *'
| |-ParmVarDecl 0x6ed990 <col:80, col:87> col:87 count 'size_t':'unsigned long'
| `-FullComment 0x7578a0 <line:148:6, line:153:63>
|   |-ParagraphComment 0x757490 <line:148:6, line:149:6>
|   | |-TextComment 0x7573f0 <line:148:6> Text=" "
|   | |-InlineCommandComment 0x757410 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x757430 <col:19, col:131> Text=":The memmove_s function copies n characters from the object pointed to by src into the object pointed to by dest."
|   | `-TextComment 0x757450 <line:149:6> Text=" "
|   |-ParamCommandComment 0x7574b0 <col:7, line:150:6> [in] implicitly Param="dest" ParamIndex=0
|   | `-ParagraphComment 0x757560 <line:149:18, line:150:6>
|   |   |-TextComment 0x757510 <line:149:18, col:40> Text=" - destination  address"
|   |   `-TextComment 0x757530 <line:150:6> Text=" "
|   |-ParamCommandComment 0x757580 <col:7, line:151:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x757630 <line:150:21, line:151:6>
|   |   |-TextComment 0x7575e0 <line:150:21, col:62> Text=" -The maximum length of destination buffer"
|   |   `-TextComment 0x757600 <line:151:6> Text=" "
|   |-ParamCommandComment 0x757650 <col:7, line:152:6> [in] implicitly Param="src" ParamIndex=2
|   | `-ParagraphComment 0x757700 <line:151:17, line:152:6>
|   |   |-TextComment 0x7576b0 <line:151:17, col:33> Text=" -source  address"
|   |   `-TextComment 0x7576d0 <line:152:6> Text=" "
|   |-ParamCommandComment 0x757720 <col:7, line:153:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0x7577d0 <line:152:19, line:153:6>
|   |   |-TextComment 0x757780 <line:152:19, col:62> Text=" -copies count wide characters from the  src"
|   |   `-TextComment 0x7577a0 <line:153:6> Text=" "
|   `-BlockCommandComment 0x7577f0 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x757850 <col:14, col:63>
|       `-TextComment 0x757820 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x708558 <line:112:21, line:165:99> col:25 wmemmove_s 'errno_t (wchar_t *, size_t, const wchar_t *, size_t)' extern
| |-ParmVarDecl 0x708348 <col:36, col:45> col:45 dest 'wchar_t *'
| |-ParmVarDecl 0x7083c0 <col:51, col:58> col:58 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x708438 <col:67, col:82> col:82 src 'const wchar_t *'
| |-ParmVarDecl 0x7084b0 <col:87, col:94> col:94 count 'size_t':'unsigned long'
| `-FullComment 0x757dc0 <line:158:6, line:163:63>
|   |-ParagraphComment 0x7579b0 <line:158:6, line:159:6>
|   | |-TextComment 0x757910 <line:158:6> Text=" "
|   | |-InlineCommandComment 0x757930 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x757950 <col:19, col:148> Text=":The wmemmove_s function copies n successive wide characters from the object pointed to by src into the object pointed to by dest."
|   | `-TextComment 0x757970 <line:159:6> Text=" "
|   |-ParamCommandComment 0x7579d0 <col:7, line:160:6> [in] implicitly Param="dest" ParamIndex=0
|   | `-ParagraphComment 0x757a80 <line:159:18, line:160:6>
|   |   |-TextComment 0x757a30 <line:159:18, col:40> Text=" - destination  address"
|   |   `-TextComment 0x757a50 <line:160:6> Text=" "
|   |-ParamCommandComment 0x757aa0 <col:7, line:161:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x757b50 <line:160:21, line:161:6>
|   |   |-TextComment 0x757b00 <line:160:21, col:62> Text=" -The maximum length of destination buffer"
|   |   `-TextComment 0x757b20 <line:161:6> Text=" "
|   |-ParamCommandComment 0x757b70 <col:7, line:162:6> [in] implicitly Param="src" ParamIndex=2
|   | `-ParagraphComment 0x757c20 <line:161:17, line:162:6>
|   |   |-TextComment 0x757bd0 <line:161:17, col:33> Text=" -source  address"
|   |   `-TextComment 0x757bf0 <line:162:6> Text=" "
|   |-ParamCommandComment 0x757c40 <col:7, line:163:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0x757cf0 <line:162:19, line:163:6>
|   |   |-TextComment 0x757ca0 <line:162:19, col:62> Text=" -copies count wide characters from the  src"
|   |   `-TextComment 0x757cc0 <line:163:6> Text=" "
|   `-BlockCommandComment 0x757d10 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x757d70 <col:14, col:63>
|       `-TextComment 0x757d40 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x708868 <line:112:21, line:174:89> col:25 wcscpy_s 'errno_t (wchar_t *, size_t, const wchar_t *)' extern
| |-ParmVarDecl 0x708658 <col:34, col:43> col:43 strDest 'wchar_t *'
| |-ParmVarDecl 0x7086d0 <col:52, col:59> col:59 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x708748 <col:68, col:83> col:83 strSrc 'const wchar_t *'
| `-FullComment 0x758210 <line:168:6, line:172:63>
|   |-ParagraphComment 0x757ed0 <line:168:6, line:169:6>
|   | |-TextComment 0x757e30 <line:168:6> Text=" "
|   | |-InlineCommandComment 0x757e50 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x757e70 <col:19, col:168> Text=":The wcscpy_s function copies the wide string pointed to by strSrc (including theterminating null wide character) into the array pointed to by strDest"
|   | `-TextComment 0x757e90 <line:169:6> Text=" "
|   |-ParamCommandComment 0x757ef0 <col:7, line:170:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x757fa0 <line:169:21, line:170:6>
|   |   |-TextComment 0x757f50 <line:169:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0x757f70 <line:170:6> Text=" "
|   |-ParamCommandComment 0x757fc0 <col:7, line:171:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x758070 <line:170:21, line:171:6>
|   |   |-TextComment 0x758020 <line:170:21, col:62> Text=" -The maximum length of destination buffer"
|   |   `-TextComment 0x758040 <line:171:6> Text=" "
|   |-ParamCommandComment 0x758090 <col:7, line:172:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0x758140 <line:171:20, line:172:6>
|   |   |-TextComment 0x7580f0 <line:171:20, col:36> Text=" -source  address"
|   |   `-TextComment 0x758110 <line:172:6> Text=" "
|   `-BlockCommandComment 0x758160 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x7581c0 <col:14, col:63>
|       `-TextComment 0x758190 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x708b68 <line:112:21, line:185:104> col:25 wcsncpy_s 'errno_t (wchar_t *, size_t, const wchar_t *, size_t)' extern
| |-ParmVarDecl 0x708958 <col:35, col:44> col:44 strDest 'wchar_t *'
| |-ParmVarDecl 0x7089d0 <col:53, col:60> col:60 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x708a48 <col:69, col:84> col:84 strSrc 'const wchar_t *'
| |-ParmVarDecl 0x708ac0 <col:92, col:99> col:99 count 'size_t':'unsigned long'
| `-FullComment 0x758760 <line:177:6, line:183:63>
|   |-ParagraphComment 0x758350 <line:177:6, line:179:6>
|   | |-TextComment 0x758280 <line:177:6> Text=" "
|   | |-InlineCommandComment 0x7582a0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x7582c0 <col:19, col:143> Text=":The wcsncpy_s function copies not more than n successive wide characters (not including the terminating null wide character)"
|   | |-TextComment 0x7582e0 <line:178:6, col:98> Text="                       from the array pointed to by strSrc to the array pointed to by strDest"
|   | `-TextComment 0x758300 <line:179:6> Text=" "
|   |-ParamCommandComment 0x758370 <col:7, line:180:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x758420 <line:179:21, line:180:6>
|   |   |-TextComment 0x7583d0 <line:179:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0x7583f0 <line:180:6> Text=" "
|   |-ParamCommandComment 0x758440 <col:7, line:181:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x7584f0 <line:180:21, line:181:6>
|   |   |-TextComment 0x7584a0 <line:180:21, col:104> Text=" -The maximum length of destination buffer(including the terminating wide character)"
|   |   `-TextComment 0x7584c0 <line:181:6> Text=" "
|   |-ParamCommandComment 0x758510 <col:7, line:182:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0x7585c0 <line:181:20, line:182:6>
|   |   |-TextComment 0x758570 <line:181:20, col:36> Text=" -source  address"
|   |   `-TextComment 0x758590 <line:182:6> Text=" "
|   |-ParamCommandComment 0x7585e0 <col:7, line:183:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0x758690 <line:182:19, line:183:6>
|   |   |-TextComment 0x758640 <line:182:19, col:62> Text=" -copies count wide characters from the  src"
|   |   `-TextComment 0x758660 <line:183:6> Text=" "
|   `-BlockCommandComment 0x7586b0 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x758710 <col:14, col:63>
|       `-TextComment 0x7586e0 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x708df8 <line:112:21, line:195:89> col:25 wcscat_s 'errno_t (wchar_t *, size_t, const wchar_t *)' extern
| |-ParmVarDecl 0x708c68 <col:34, col:43> col:43 strDest 'wchar_t *'
| |-ParmVarDecl 0x708ce0 <col:52, col:59> col:59 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x708d58 <col:68, col:83> col:83 strSrc 'const wchar_t *'
| `-FullComment 0x758be0 <line:188:6, line:193:63>
|   |-ParagraphComment 0x7588a0 <line:188:6, line:190:6>
|   | |-TextComment 0x7587d0 <line:188:6> Text=" "
|   | |-InlineCommandComment 0x7587f0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x758810 <col:19, col:143> Text=":The wcscat_s function appends a copy of the wide string pointed to by strSrc (including the terminating null wide character)"
|   | |-TextComment 0x758830 <line:189:6, col:77> Text="                     to the end of the wide string pointed to by strDest"
|   | `-TextComment 0x758850 <line:190:6> Text=" "
|   |-ParamCommandComment 0x7588c0 <col:7, line:191:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x758970 <line:190:21, line:191:6>
|   |   |-TextComment 0x758920 <line:190:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0x758940 <line:191:6> Text=" "
|   |-ParamCommandComment 0x758990 <col:7, line:192:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x758a40 <line:191:21, line:192:6>
|   |   |-TextComment 0x7589f0 <line:191:21, col:104> Text=" -The maximum length of destination buffer(including the terminating wide character)"
|   |   `-TextComment 0x758a10 <line:192:6> Text=" "
|   |-ParamCommandComment 0x758a60 <col:7, line:193:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0x758b10 <line:192:20, line:193:6>
|   |   |-TextComment 0x758ac0 <line:192:20, col:36> Text=" -source  address"
|   |   `-TextComment 0x758ae0 <line:193:6> Text=" "
|   `-BlockCommandComment 0x758b30 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x758b90 <col:14, col:63>
|       `-TextComment 0x758b60 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x7090f8 <line:112:21, line:206:104> col:25 wcsncat_s 'errno_t (wchar_t *, size_t, const wchar_t *, size_t)' extern
| |-ParmVarDecl 0x708ee8 <col:35, col:44> col:44 strDest 'wchar_t *'
| |-ParmVarDecl 0x708f60 <col:53, col:60> col:60 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x708fd8 <col:69, col:84> col:84 strSrc 'const wchar_t *'
| |-ParmVarDecl 0x709050 <col:92, col:99> col:99 count 'size_t':'unsigned long'
| `-FullComment 0x75a160 <line:198:6, line:204:63>
|   |-ParagraphComment 0x758d20 <line:198:6, line:200:6>
|   | |-TextComment 0x758c50 <line:198:6> Text=" "
|   | |-InlineCommandComment 0x758c70 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x758c90 <col:19, col:144> Text=":The wcsncat_s function appends not more than n successive wide characters (not including the terminating null wide character)"
|   | |-TextComment 0x758cb0 <line:199:6, col:116> Text="                       from the array pointed to by strSrc to the end of the wide string pointed to by strDest."
|   | `-TextComment 0x758cd0 <line:200:6> Text=" "
|   |-ParamCommandComment 0x758d40 <col:7, line:201:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x758df0 <line:200:21, line:201:6>
|   |   |-TextComment 0x758da0 <line:200:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0x758dc0 <line:201:6> Text=" "
|   |-ParamCommandComment 0x758e10 <col:7, line:202:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x758ec0 <line:201:21, line:202:6>
|   |   |-TextComment 0x758e70 <line:201:21, col:104> Text=" -The maximum length of destination buffer(including the terminating wide character)"
|   |   `-TextComment 0x758e90 <line:202:6> Text=" "
|   |-ParamCommandComment 0x758ee0 <col:7, line:203:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0x758f90 <line:202:20, line:203:6>
|   |   |-TextComment 0x758f40 <line:202:20, col:36> Text=" -source  address"
|   |   `-TextComment 0x758f60 <line:203:6> Text=" "
|   |-ParamCommandComment 0x758fb0 <col:7, line:204:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0x759060 <line:203:19, line:204:6>
|   |   |-TextComment 0x759010 <line:203:19, col:62> Text=" -copies count wide characters from the  src"
|   |   `-TextComment 0x759030 <line:204:6> Text=" "
|   `-BlockCommandComment 0x759080 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x7590e0 <col:14, col:63>
|       `-TextComment 0x7590b0 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x709548 <line:112:21, line:216:86> col:23 strtok_s 'char *(char *, const char *, char **)' extern
| |-ParmVarDecl 0x7093a0 <col:32, col:38> col:38 strToken 'char *'
| |-ParmVarDecl 0x709420 <col:48, col:60> col:60 strDelimit 'const char *'
| |-ParmVarDecl 0x7094a0 <col:72, col:79> col:79 context 'char **'
| `-FullComment 0x75a5e0 <line:209:6, line:214:149>
|   |-ParagraphComment 0x75a2a0 <line:209:6, line:211:6>
|   | |-TextComment 0x75a1d0 <line:209:6> Text=" "
|   | |-InlineCommandComment 0x75a1f0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75a210 <col:19, col:172> Text=": The  strtok_s  function parses a string into a sequence of tokens,On the first call to strtok_s the string to be parsed should be specified in strToken."
|   | |-TextComment 0x75a230 <line:210:6, col:110> Text="                       In each subsequent call that should parse the same string, strToken should be NULL"
|   | `-TextComment 0x75a250 <line:211:6> Text=" "
|   |-ParamCommandComment 0x75a2c0 <col:7, line:212:6> [in] implicitly Param="strToken" ParamIndex=0
|   | `-ParagraphComment 0x75a370 <line:211:22, line:212:6>
|   |   |-TextComment 0x75a320 <line:211:22, col:50> Text=" - the string to be delimited"
|   |   `-TextComment 0x75a340 <line:212:6> Text=" "
|   |-ParamCommandComment 0x75a390 <col:7, line:213:6> [in] implicitly Param="strDelimit" ParamIndex=1
|   | `-ParagraphComment 0x75a440 <line:212:24, line:213:6>
|   |   |-TextComment 0x75a3f0 <line:212:24, col:99> Text=" -specifies a set of characters that delimit the tokens in the parsed string"
|   |   `-TextComment 0x75a410 <line:213:6> Text=" "
|   |-ParamCommandComment 0x75a460 <col:7, line:214:6> [in] implicitly Param="context" ParamIndex=2
|   | `-ParagraphComment 0x75a510 <line:213:21, line:214:6>
|   |   |-TextComment 0x75a4c0 <line:213:21, col:100> Text=" -is a pointer to a char * variable that is used internally by strtok_s function"
|   |   `-TextComment 0x75a4e0 <line:214:6> Text=" "
|   `-BlockCommandComment 0x75a530 <col:7, col:149> Name="return"
|     `-ParagraphComment 0x75a590 <col:14, col:149>
|       `-TextComment 0x75a560 <col:14, col:149> Text=":returns a pointer to the first character of a token, or a null pointer if there is no token or there is a runtime-constraint violation."
|-FunctionDecl 0x7098b8 <line:112:21, line:225:98> col:26 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)' extern
| |-ParmVarDecl 0x709638 <col:35, col:44> col:44 strToken 'wchar_t *'
| |-ParmVarDecl 0x7096b0 <col:54, col:69> col:69 strDelimit 'const wchar_t *'
| |-ParmVarDecl 0x709790 <col:81, col:91> col:91 context 'wchar_t **'
| `-FullComment 0x75aa30 <line:219:6, line:223:149>
|   |-ParagraphComment 0x75a6f0 <line:219:6, line:220:6>
|   | |-TextComment 0x75a650 <line:219:6> Text=" "
|   | |-InlineCommandComment 0x75a670 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75a690 <col:19, col:106> Text=": The  wcstok_s  function  is  the  wide-character  equivalent  of the strtok_s function"
|   | `-TextComment 0x75a6b0 <line:220:6> Text=" "
|   |-ParamCommandComment 0x75a710 <col:7, line:221:6> [in] implicitly Param="strToken" ParamIndex=0
|   | `-ParagraphComment 0x75a7c0 <line:220:22, line:221:6>
|   |   |-TextComment 0x75a770 <line:220:22, col:50> Text=" - the string to be delimited"
|   |   `-TextComment 0x75a790 <line:221:6> Text=" "
|   |-ParamCommandComment 0x75a7e0 <col:7, line:222:6> [in] implicitly Param="strDelimit" ParamIndex=1
|   | `-ParagraphComment 0x75a890 <line:221:24, line:222:6>
|   |   |-TextComment 0x75a840 <line:221:24, col:99> Text=" -specifies a set of characters that delimit the tokens in the parsed string"
|   |   `-TextComment 0x75a860 <line:222:6> Text=" "
|   |-ParamCommandComment 0x75a8b0 <col:7, line:223:6> [in] implicitly Param="context" ParamIndex=2
|   | `-ParagraphComment 0x75a960 <line:222:21, line:223:6>
|   |   |-TextComment 0x75a910 <line:222:21, col:100> Text=" -is a pointer to a char * variable that is used internally by strtok_s function"
|   |   `-TextComment 0x75a930 <line:223:6> Text=" "
|   `-BlockCommandComment 0x75a980 <col:7, col:149> Name="return"
|     `-ParagraphComment 0x75a9e0 <col:14, col:149>
|       `-TextComment 0x75a9b0 <col:14, col:149> Text=":returns a pointer to the first character of a token, or a null pointer if there is no token or there is a runtime-constraint violation."
|-FunctionDecl 0x709b98 <line:112:21, line:234:85> col:21 sprintf_s 'int (char *, size_t, const char *, ...)' extern
| |-ParmVarDecl 0x7099b0 <col:31, col:37> col:37 strDest 'char *'
| |-ParmVarDecl 0x709a28 <col:46, col:53> col:53 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x709aa8 <col:62, col:74> col:74 format 'const char *'
| `-FullComment 0x75af20 <line:228:6, line:232:135>
|   |-ParagraphComment 0x75ab40 <line:228:6, line:229:6>
|   | |-TextComment 0x75aaa0 <line:228:6> Text=" "
|   | |-InlineCommandComment 0x75aac0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75aae0 <col:19, col:160> Text=": The sprintf_s function is equivalent to the sprintf function except for the parameter destMax and the explicit runtime-constraints violation"
|   | `-TextComment 0x75ab00 <line:229:6> Text=" "
|   |-ParamCommandComment 0x75ab60 <col:7, line:230:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x75ac10 <line:229:21, line:230:6>
|   |   |-TextComment 0x75abc0 <line:229:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0x75abe0 <line:230:6> Text=" "
|   |-ParamCommandComment 0x75ac30 <col:7, line:231:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x75ad30 <line:230:21, line:231:6>
|   |   |-TextComment 0x75ac90 <line:230:21, col:102> Text=" - The maximum length of destination buffer(including the terminating null byte ('"
|   |   |-TextComment 0x75acb0 <col:103> Text="\"
|   |   |-TextComment 0x75acd0 <col:104, col:107> Text="0'))"
|   |   `-TextComment 0x75acf0 <line:231:6> Text=" "
|   |-ParamCommandComment 0x75ad50 <col:7, line:232:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0x75ae00 <line:231:20, line:232:6>
|   |   |-TextComment 0x75adb0 <line:231:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75add0 <line:232:6> Text=" "
|   `-BlockCommandComment 0x75ae20 <col:7, col:135> Name="return"
|     `-ParagraphComment 0x75aed0 <col:14, col:135>
|       |-TextComment 0x75ae50 <col:14, col:97> Text=":success the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0x75ae70 <col:98> Text="\"
|       `-TextComment 0x75ae90 <col:99, col:135> Text="0')), If an error occurred return -1."
|-FunctionDecl 0x709eb8 <line:112:21, line:243:92> col:21 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...)' extern
| |-ParmVarDecl 0x709c88 <col:32, col:41> col:41 strDest 'wchar_t *'
| |-ParmVarDecl 0x709d00 <col:50, col:57> col:57 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x709d78 <col:66, col:81> col:81 format 'const wchar_t *'
| `-FullComment 0x75b370 <line:237:6, line:241:137>
|   |-ParagraphComment 0x75b030 <line:237:6, line:238:6>
|   | |-TextComment 0x75af90 <line:237:6> Text=" "
|   | |-InlineCommandComment 0x75afb0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75afd0 <col:19, col:109> Text=": The  swprintf_s  function  is  the  wide-character  equivalent  of the sprintf_s function"
|   | `-TextComment 0x75aff0 <line:238:6> Text=" "
|   |-ParamCommandComment 0x75b050 <col:7, line:239:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x75b100 <line:238:21, line:239:6>
|   |   |-TextComment 0x75b0b0 <line:238:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0x75b0d0 <line:239:6> Text=" "
|   |-ParamCommandComment 0x75b120 <col:7, line:240:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x75b1d0 <line:239:21, line:240:6>
|   |   |-TextComment 0x75b180 <line:239:21, col:96> Text=" - The maximum length of destination buffer(including the terminating null )"
|   |   `-TextComment 0x75b1a0 <line:240:6> Text=" "
|   |-ParamCommandComment 0x75b1f0 <col:7, line:241:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0x75b2a0 <line:240:20, line:241:6>
|   |   |-TextComment 0x75b250 <line:240:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75b270 <line:241:6> Text=" "
|   `-BlockCommandComment 0x75b2c0 <col:7, col:137> Name="return"
|     `-ParagraphComment 0x75b320 <col:14, col:137>
|       `-TextComment 0x75b2f0 <col:14, col:137> Text=":success the number of characters printed(not including the terminating null wide characte), If an error occurred return -1."
|-FunctionDecl 0x70a270 <line:112:21, line:254:47> line:253:21 vsprintf_s 'int (char *, size_t, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x709fb0 <col:32, col:38> col:38 strDest 'char *'
| |-ParmVarDecl 0x70a028 <col:47, col:54> col:54 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x70a0a8 <col:63, col:75> col:75 format 'const char *'
| |-ParmVarDecl 0x70a170 <line:254:32, col:40> col:40 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x75b8e0 <line:246:6, line:251:134>
|   |-ParagraphComment 0x75b480 <line:246:6, line:247:6>
|   | |-TextComment 0x75b3e0 <line:246:6> Text=" "
|   | |-InlineCommandComment 0x75b400 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75b420 <col:19, col:162> Text=": The vsprintf_s function is equivalent to the vsprintf function except for the parameter destMax and the explicit runtime-constraints violation"
|   | `-TextComment 0x75b440 <line:247:6> Text=" "
|   |-ParamCommandComment 0x75b4a0 <col:7, line:248:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x75b550 <line:247:21, line:248:6>
|   |   |-TextComment 0x75b500 <line:247:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0x75b520 <line:248:6> Text=" "
|   |-ParamCommandComment 0x75b570 <col:7, line:249:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x75b620 <line:248:21, line:249:6>
|   |   |-TextComment 0x75b5d0 <line:248:21, col:109> Text=" - The maximum length of destination buffer(including the terminating null wide characte)"
|   |   `-TextComment 0x75b5f0 <line:249:6> Text=" "
|   |-ParamCommandComment 0x75b640 <col:7, line:250:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0x75b6f0 <line:249:20, line:250:6>
|   |   |-TextComment 0x75b6a0 <line:249:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75b6c0 <line:250:6> Text=" "
|   |-ParamCommandComment 0x75b710 <col:7, line:251:6> [in] implicitly Param="arglist" ParamIndex=3
|   | `-ParagraphComment 0x75b7c0 <line:250:21, line:251:6>
|   |   |-TextComment 0x75b770 <line:250:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x75b790 <line:251:6> Text=" "
|   `-BlockCommandComment 0x75b7e0 <col:7, col:134> Name="return"
|     `-ParagraphComment 0x75b890 <col:14, col:134>
|       |-TextComment 0x75b810 <col:14, col:96> Text=":return the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0x75b830 <col:97> Text="\"
|       `-TextComment 0x75b850 <col:98, col:134> Text="0')), If an error occurred return -1."
|-FunctionDecl 0x70a7a0 <line:112:21, line:264:105> col:21 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x70a4f0 <col:33, col:42> col:42 strDest 'wchar_t *'
| |-ParmVarDecl 0x70a568 <col:51, col:58> col:58 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x70a5e0 <col:67, col:82> col:82 format 'const wchar_t *'
| |-ParmVarDecl 0x70a658 <col:90, col:98> col:98 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x75be00 <line:257:6, line:262:136>
|   |-ParagraphComment 0x75b9f0 <line:257:6, line:258:6>
|   | |-TextComment 0x75b950 <line:257:6> Text=" "
|   | |-InlineCommandComment 0x75b970 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75b990 <col:19, col:111> Text=": The  vswprintf_s  function  is  the  wide-character  equivalent  of the vsprintf_s function"
|   | `-TextComment 0x75b9b0 <line:258:6> Text=" "
|   |-ParamCommandComment 0x75ba10 <col:7, line:259:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x75bac0 <line:258:21, line:259:6>
|   |   |-TextComment 0x75ba70 <line:258:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0x75ba90 <line:259:6> Text=" "
|   |-ParamCommandComment 0x75bae0 <col:7, line:260:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x75bb90 <line:259:21, line:260:6>
|   |   |-TextComment 0x75bb40 <line:259:21, col:96> Text=" - The maximum length of destination buffer(including the terminating null )"
|   |   `-TextComment 0x75bb60 <line:260:6> Text=" "
|   |-ParamCommandComment 0x75bbb0 <col:7, line:261:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0x75bc60 <line:260:20, line:261:6>
|   |   |-TextComment 0x75bc10 <line:260:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75bc30 <line:261:6> Text=" "
|   |-ParamCommandComment 0x75bc80 <col:7, line:262:6> [in] implicitly Param="arglist" ParamIndex=3
|   | `-ParagraphComment 0x75bd30 <line:261:21, line:262:6>
|   |   |-TextComment 0x75bce0 <line:261:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x75bd00 <line:262:6> Text=" "
|   `-BlockCommandComment 0x75bd50 <col:7, col:136> Name="return"
|     `-ParagraphComment 0x75bdb0 <col:14, col:136>
|       `-TextComment 0x75bd80 <col:14, col:136> Text=":return the number of characters printed(not including the terminating null wide characte), If an error occurred return -1."
|-FunctionDecl 0x70abe0 <line:112:21, line:276:48> line:275:21 vsnprintf_s 'int (char *, size_t, size_t, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x70a8a0 <col:33, col:39> col:39 strDest 'char *'
| |-ParmVarDecl 0x70a918 <col:48, col:55> col:55 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x70a990 <col:64, col:71> col:71 count 'size_t':'unsigned long'
| |-ParmVarDecl 0x70aa10 <col:78, col:90> col:90 format 'const char *'
| |-ParmVarDecl 0x70aa88 <line:276:33, col:41> col:41 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x75c510 <line:267:6, line:273:194>
|   |-ParagraphComment 0x75bf10 <line:267:6, line:268:6>
|   | |-TextComment 0x75be70 <line:267:6> Text=" "
|   | |-InlineCommandComment 0x75be90 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75beb0 <col:19, col:170> Text=": The vsnprintf_s function is equivalent to the vsnprintf function except for the parameter destMax/count and the explicit runtime-constraints violation"
|   | `-TextComment 0x75bed0 <line:268:6> Text=" "
|   |-ParamCommandComment 0x75bf30 <col:7, line:269:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x75bfe0 <line:268:21, line:269:6>
|   |   |-TextComment 0x75bf90 <line:268:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0x75bfb0 <line:269:6> Text=" "
|   |-ParamCommandComment 0x75c000 <col:7, line:270:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x75c100 <line:269:21, line:270:6>
|   |   |-TextComment 0x75c060 <line:269:21, col:103> Text=" - The maximum length of destination buffer(including the terminating null  byte ('"
|   |   |-TextComment 0x75c080 <col:104> Text="\"
|   |   |-TextComment 0x75c0a0 <col:105, col:108> Text="0'))"
|   |   `-TextComment 0x75c0c0 <line:270:6> Text=" "
|   |-ParamCommandComment 0x75c140 <col:7, line:271:6> [in] implicitly Param="count" ParamIndex=2
|   | `-ParagraphComment 0x75c240 <line:270:19, line:271:6>
|   |   |-TextComment 0x75c1a0 <line:270:19, col:110> Text=" - do not write more than count bytes to strDest(not including the terminating null  byte ('"
|   |   |-TextComment 0x75c1c0 <col:111> Text="\"
|   |   |-TextComment 0x75c1e0 <col:112, col:115> Text="0'))"
|   |   `-TextComment 0x75c200 <line:271:6> Text=" "
|   |-ParamCommandComment 0x75c260 <col:7, line:272:6> [in] implicitly Param="format" ParamIndex=3
|   | `-ParagraphComment 0x75c310 <line:271:20, line:272:6>
|   |   |-TextComment 0x75c2c0 <line:271:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75c2e0 <line:272:6> Text=" "
|   |-ParamCommandComment 0x75c330 <col:7, line:273:6> [in] implicitly Param="arglist" ParamIndex=4
|   | `-ParagraphComment 0x75c3e0 <line:272:21, line:273:6>
|   |   |-TextComment 0x75c390 <line:272:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x75c3b0 <line:273:6> Text=" "
|   `-BlockCommandComment 0x75c400 <col:7, col:194> Name="return"
|     `-ParagraphComment 0x75c4b0 <col:14, col:194>
|       |-TextComment 0x75c430 <col:14, col:96> Text=":return the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0x75c450 <col:97> Text="\"
|       `-TextComment 0x75c470 <col:98, col:194> Text="0')), If an error occurred return -1.Pay special attention to returning -1 when truncation occurs"
|-FunctionDecl 0x70afb8 <line:112:21, line:287:35> line:286:21 snprintf_s 'int (char *, size_t, size_t, const char *, ...)' extern
| |-ParmVarDecl 0x70acf0 <col:32, col:38> col:38 strDest 'char *'
| |-ParmVarDecl 0x70ad68 <col:47, col:54> col:54 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x70ade0 <col:63, col:70> col:70 count 'size_t':'unsigned long'
| |-ParmVarDecl 0x70ae60 <col:77, col:89> col:89 format 'const char *'
| `-FullComment 0x75cb20 <line:279:6, line:284:194>
|   |-ParagraphComment 0x75c620 <line:279:6, line:280:6>
|   | |-TextComment 0x75c580 <line:279:6> Text=" "
|   | |-InlineCommandComment 0x75c5a0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75c5c0 <col:19, col:168> Text=": The snprintf_s function is equivalent to the snprintf function except for the parameter destMax/count and the explicit runtime-constraints violation"
|   | `-TextComment 0x75c5e0 <line:280:6> Text=" "
|   |-ParamCommandComment 0x75c640 <col:7, line:281:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x75c6f0 <line:280:21, line:281:6>
|   |   |-TextComment 0x75c6a0 <line:280:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0x75c6c0 <line:281:6> Text=" "
|   |-ParamCommandComment 0x75c710 <col:7, line:282:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x75c810 <line:281:21, line:282:6>
|   |   |-TextComment 0x75c770 <line:281:21, col:103> Text=" - The maximum length of destination buffer(including the terminating null  byte ('"
|   |   |-TextComment 0x75c790 <col:104> Text="\"
|   |   |-TextComment 0x75c7b0 <col:105, col:108> Text="0'))"
|   |   `-TextComment 0x75c7d0 <line:282:6> Text=" "
|   |-ParamCommandComment 0x75c830 <col:7, line:283:6> [in] implicitly Param="count" ParamIndex=2
|   | `-ParagraphComment 0x75c930 <line:282:19, line:283:6>
|   |   |-TextComment 0x75c890 <line:282:19, col:110> Text=" - do not write more than count bytes to strDest(not including the terminating null  byte ('"
|   |   |-TextComment 0x75c8b0 <col:111> Text="\"
|   |   |-TextComment 0x75c8d0 <col:112, col:115> Text="0'))"
|   |   `-TextComment 0x75c8f0 <line:283:6> Text=" "
|   |-ParamCommandComment 0x75c950 <col:7, line:284:6> [in] implicitly Param="format" ParamIndex=3
|   | `-ParagraphComment 0x75ca00 <line:283:20, line:284:6>
|   |   |-TextComment 0x75c9b0 <line:283:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75c9d0 <line:284:6> Text=" "
|   `-BlockCommandComment 0x75ca20 <col:7, col:194> Name="return"
|     `-ParagraphComment 0x75cad0 <col:14, col:194>
|       |-TextComment 0x75ca50 <col:14, col:96> Text=":return the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0x75ca70 <col:97> Text="\"
|       `-TextComment 0x75ca90 <col:98, col:194> Text="0')), If an error occurred return -1.Pay special attention to returning -1 when truncation occurs"
|-FunctionDecl 0x70b2e0 <line:112:21, line:299:51> line:298:21 vsnprintf_truncated_s 'int (char *, size_t, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x70b0c0 <col:43, col:49> col:49 strDest 'char *'
| |-ParmVarDecl 0x70b138 <col:58, col:65> col:65 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x70b1b8 <col:74, col:86> col:86 format 'const char *'
| |-ParmVarDecl 0x70b230 <line:299:36, col:44> col:44 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x75d0e0 <line:291:6, line:296:203>
|   |-ParagraphComment 0x75cc30 <line:291:6, line:292:6>
|   | |-TextComment 0x75cb90 <line:291:6> Text=" "
|   | |-InlineCommandComment 0x75cbb0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75cbd0 <col:19, col:141> Text=": The vsnprintf_truncated_s function is equivalent to the vsnprintf_s function except  no count parameter  and return value"
|   | `-TextComment 0x75cbf0 <line:292:6> Text=" "
|   |-ParamCommandComment 0x75cc50 <col:7, line:293:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x75cd00 <line:292:21, line:293:6>
|   |   |-TextComment 0x75ccb0 <line:292:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0x75ccd0 <line:293:6> Text=" "
|   |-ParamCommandComment 0x75cd20 <col:7, line:294:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x75ce20 <line:293:21, line:294:6>
|   |   |-TextComment 0x75cd80 <line:293:21, col:103> Text=" - The maximum length of destination buffer(including the terminating null  byte ('"
|   |   |-TextComment 0x75cda0 <col:104> Text="\"
|   |   |-TextComment 0x75cdc0 <col:105, col:108> Text="0'))"
|   |   `-TextComment 0x75cde0 <line:294:6> Text=" "
|   |-ParamCommandComment 0x75ce40 <col:7, line:295:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0x75cef0 <line:294:20, line:295:6>
|   |   |-TextComment 0x75cea0 <line:294:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75cec0 <line:295:6> Text=" "
|   |-ParamCommandComment 0x75cf10 <col:7, line:296:6> [in] implicitly Param="arglist" ParamIndex=3
|   | `-ParagraphComment 0x75cfc0 <line:295:21, line:296:6>
|   |   |-TextComment 0x75cf70 <line:295:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x75cf90 <line:296:6> Text=" "
|   `-BlockCommandComment 0x75cfe0 <col:7, col:203> Name="return"
|     `-ParagraphComment 0x75d090 <col:14, col:203>
|       |-TextComment 0x75d010 <col:14, col:96> Text=":return the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0x75d030 <col:97> Text="\"
|       `-TextComment 0x75d050 <col:98, col:203> Text="0')), If an error occurred return -1.Pay special attention to returning destMax - 1 when truncation occurs"
|-FunctionDecl 0x70b6a8 <line:112:21, line:308:96> col:21 snprintf_truncated_s 'int (char *, size_t, const char *, ...)' extern
| |-ParmVarDecl 0x70b3e0 <col:42, col:48> col:48 strDest 'char *'
| |-ParmVarDecl 0x70b458 <col:57, col:64> col:64 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x70b600 <col:73, col:85> col:85 format 'const char *'
| `-FullComment 0x75d5d0 <line:302:6, line:306:203>
|   |-ParagraphComment 0x75d1f0 <line:302:6, line:303:6>
|   | |-TextComment 0x75d150 <line:302:6> Text=" "
|   | |-InlineCommandComment 0x75d170 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75d190 <col:19, col:139> Text=": The snprintf_truncated_s function is equivalent to the snprintf_2 function except  no count parameter  and return value"
|   | `-TextComment 0x75d1b0 <line:303:6> Text=" "
|   |-ParamCommandComment 0x75d210 <col:7, line:304:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x75d2c0 <line:303:21, line:304:6>
|   |   |-TextComment 0x75d270 <line:303:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0x75d290 <line:304:6> Text=" "
|   |-ParamCommandComment 0x75d2e0 <col:7, line:305:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x75d3e0 <line:304:21, line:305:6>
|   |   |-TextComment 0x75d340 <line:304:21, col:103> Text=" - The maximum length of destination buffer(including the terminating null  byte ('"
|   |   |-TextComment 0x75d360 <col:104> Text="\"
|   |   |-TextComment 0x75d380 <col:105, col:108> Text="0'))"
|   |   `-TextComment 0x75d3a0 <line:305:6> Text=" "
|   |-ParamCommandComment 0x75d400 <col:7, line:306:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0x75d4b0 <line:305:20, line:306:6>
|   |   |-TextComment 0x75d460 <line:305:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75d480 <line:306:6> Text=" "
|   `-BlockCommandComment 0x75d4d0 <col:7, col:203> Name="return"
|     `-ParagraphComment 0x75d580 <col:14, col:203>
|       |-TextComment 0x75d500 <col:14, col:96> Text=":return the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0x75d520 <col:97> Text="\"
|       `-TextComment 0x75d540 <col:98, col:203> Text="0')), If an error occurred return -1.Pay special attention to returning destMax - 1 when truncation occurs"
|-FunctionDecl 0x70b838 <line:112:21, line:315:52> col:21 scanf_s 'int (const char *, ...)' extern
| |-ParmVarDecl 0x70b7a0 <col:29, col:41> col:41 format 'const char *'
| `-FullComment 0x75d870 <line:311:6, line:313:89>
|   |-ParagraphComment 0x75d6e0 <line:311:6, line:312:6>
|   | |-TextComment 0x75d640 <line:311:6> Text=" "
|   | |-InlineCommandComment 0x75d660 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75d680 <col:19, col:133> Text=": The scanf_s function is equivalent to fscanf_s with the argument stdin interposed before the arguments to scanf_s"
|   | `-TextComment 0x75d6a0 <line:312:6> Text=" "
|   |-ParamCommandComment 0x75d700 <col:7, line:313:6> [in] implicitly Param="format" ParamIndex=0
|   | `-ParagraphComment 0x75d7b0 <line:312:20, line:313:6>
|   |   |-TextComment 0x75d760 <line:312:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75d780 <line:313:6> Text=" "
|   `-BlockCommandComment 0x75d7d0 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x75d830 <col:14, col:89>
|       `-TextComment 0x75d800 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x70ba28 <line:112:21, line:322:56> col:21 wscanf_s 'int (const wchar_t *, ...)' extern
| |-ParmVarDecl 0x70b918 <col:30, col:45> col:45 format 'const wchar_t *'
| `-FullComment 0x75db10 <line:318:6, line:320:89>
|   |-ParagraphComment 0x75d980 <line:318:6, line:319:6>
|   | |-TextComment 0x75d8e0 <line:318:6> Text=" "
|   | |-InlineCommandComment 0x75d900 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75d920 <col:19, col:105> Text=": The  wscanf_s  function  is  the  wide-character  equivalent  of the scanf_s function"
|   | `-TextComment 0x75d940 <line:319:6> Text=" "
|   |-ParamCommandComment 0x75d9a0 <col:7, line:320:6> [in] implicitly Param="format" ParamIndex=0
|   | `-ParagraphComment 0x75da50 <line:319:20, line:320:6>
|   |   |-TextComment 0x75da00 <line:319:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75da20 <line:320:6> Text=" "
|   `-BlockCommandComment 0x75da70 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x75dad0 <col:14, col:89>
|       `-TextComment 0x75daa0 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x70bc60 <line:112:21, line:330:65> col:21 vscanf_s 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x70bb10 <col:30, col:42> col:42 format 'const char *'
| |-ParmVarDecl 0x70bb88 <col:50, col:58> col:58 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x75de80 <line:325:6, line:328:89>
|   |-ParagraphComment 0x75dc20 <line:325:6, line:326:6>
|   | |-TextComment 0x75db80 <line:325:6> Text=" "
|   | |-InlineCommandComment 0x75dba0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75dbc0 <col:19, col:119> Text=": The vscanf_s function is equivalent to scanf_s, with the variable argument list replaced by arglist"
|   | `-TextComment 0x75dbe0 <line:326:6> Text=" "
|   |-ParamCommandComment 0x75dc40 <col:7, line:327:6> [in] implicitly Param="format" ParamIndex=0
|   | `-ParagraphComment 0x75dcf0 <line:326:20, line:327:6>
|   |   |-TextComment 0x75dca0 <line:326:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75dcc0 <line:327:6> Text=" "
|   |-ParamCommandComment 0x75dd10 <col:7, line:328:6> [in] implicitly Param="arglist" ParamIndex=1
|   | `-ParagraphComment 0x75ddc0 <line:327:21, line:328:6>
|   |   |-TextComment 0x75dd70 <line:327:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x75dd90 <line:328:6> Text=" "
|   `-BlockCommandComment 0x75dde0 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x75de40 <col:14, col:89>
|       `-TextComment 0x75de10 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x70bee0 <line:112:21, line:338:69> col:21 vwscanf_s 'int (const wchar_t *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x70bd48 <col:31, col:46> col:46 format 'const wchar_t *'
| |-ParmVarDecl 0x70bdc0 <col:54, col:62> col:62 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x75e210 <line:333:6, line:336:89>
|   |-ParagraphComment 0x75df90 <line:333:6, line:334:6>
|   | |-TextComment 0x75def0 <line:333:6> Text=" "
|   | |-InlineCommandComment 0x75df10 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75df30 <col:19, col:107> Text=": The  vwscanf_s  function  is  the  wide-character  equivalent  of the vscanf_s function"
|   | `-TextComment 0x75df50 <line:334:6> Text=" "
|   |-ParamCommandComment 0x75dfb0 <col:7, line:335:6> [in] implicitly Param="format" ParamIndex=0
|   | `-ParagraphComment 0x75e060 <line:334:20, line:335:6>
|   |   |-TextComment 0x75e010 <line:334:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75e030 <line:335:6> Text=" "
|   |-ParamCommandComment 0x75e080 <col:7, line:336:6> [in] implicitly Param="arglist" ParamIndex=1
|   | `-ParagraphComment 0x75e150 <line:335:21, line:336:6>
|   |   |-TextComment 0x75e0e0 <line:335:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x75e100 <line:336:6> Text=" "
|   `-BlockCommandComment 0x75e170 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x75e1d0 <col:14, col:89>
|       `-TextComment 0x75e1a0 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x70c0e8 <line:112:21, line:346:67> col:21 fscanf_s 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x70bfc8 <col:30, col:36> col:36 stream 'FILE *'
| |-ParmVarDecl 0x70c048 <col:44, col:56> col:56 format 'const char *'
| `-FullComment 0x75e580 <line:341:6, line:344:89>
|   |-ParagraphComment 0x75e320 <line:341:6, line:342:6>
|   | |-TextComment 0x75e280 <line:341:6> Text=" "
|   | |-InlineCommandComment 0x75e2a0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75e2c0 <col:19, col:195> Text=": The fscanf_s function is equivalent to fscanf except that the c, s, and [ conversion specifiers apply to a pair of arguments (unless assignment suppression is indicated by a*)"
|   | `-TextComment 0x75e2e0 <line:342:6> Text=" "
|   |-ParamCommandComment 0x75e340 <col:7, line:343:6> [in] implicitly Param="stream" ParamIndex=0
|   | `-ParagraphComment 0x75e3f0 <line:342:20, line:343:6>
|   |   |-TextComment 0x75e3a0 <line:342:20, col:39> Text=" - stdio file stream"
|   |   `-TextComment 0x75e3c0 <line:343:6> Text=" "
|   |-ParamCommandComment 0x75e410 <col:7, line:344:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0x75e4c0 <line:343:20, line:344:6>
|   |   |-TextComment 0x75e470 <line:343:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75e490 <line:344:6> Text=" "
|   `-BlockCommandComment 0x75e4e0 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x75e540 <col:14, col:89>
|       `-TextComment 0x75e510 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x70c378 <line:112:21, line:354:71> col:21 fwscanf_s 'int (FILE *, const wchar_t *, ...)' extern
| |-ParmVarDecl 0x70c1d8 <col:31, col:37> col:37 stream 'FILE *'
| |-ParmVarDecl 0x70c250 <col:45, col:60> col:60 format 'const wchar_t *'
| `-FullComment 0x75e8f0 <line:349:6, line:352:89>
|   |-ParagraphComment 0x75e690 <line:349:6, line:350:6>
|   | |-TextComment 0x75e5f0 <line:349:6> Text=" "
|   | |-InlineCommandComment 0x75e610 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75e630 <col:19, col:107> Text=": The  fwscanf_s  function  is  the  wide-character  equivalent  of the fscanf_s function"
|   | `-TextComment 0x75e650 <line:350:6> Text=" "
|   |-ParamCommandComment 0x75e6b0 <col:7, line:351:6> [in] implicitly Param="stream" ParamIndex=0
|   | `-ParagraphComment 0x75e760 <line:350:20, line:351:6>
|   |   |-TextComment 0x75e710 <line:350:20, col:39> Text=" - stdio file stream"
|   |   `-TextComment 0x75e730 <line:351:6> Text=" "
|   |-ParamCommandComment 0x75e780 <col:7, line:352:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0x75e830 <line:351:20, line:352:6>
|   |   |-TextComment 0x75e7e0 <line:351:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75e800 <line:352:6> Text=" "
|   `-BlockCommandComment 0x75e850 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x75e8b0 <col:14, col:89>
|       `-TextComment 0x75e880 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x70c850 <line:112:21, line:363:80> col:21 vfscanf_s 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x70c468 <col:31, col:37> col:37 stream 'FILE *'
| |-ParmVarDecl 0x70c4e8 <col:45, col:57> col:57 format 'const char *'
| |-ParmVarDecl 0x70c560 <col:65, col:73> col:73 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x75ed40 <line:357:6, line:361:89>
|   |-ParagraphComment 0x75ea00 <line:357:6, line:358:6>
|   | |-TextComment 0x75e960 <line:357:6> Text=" "
|   | |-InlineCommandComment 0x75e980 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75e9a0 <col:19, col:121> Text=": The vfscanf_s function is equivalent to fscanf_s, with the variable argument list replaced by arglist"
|   | `-TextComment 0x75e9c0 <line:358:6> Text=" "
|   |-ParamCommandComment 0x75ea20 <col:7, line:359:6> [in] implicitly Param="stream" ParamIndex=0
|   | `-ParagraphComment 0x75ead0 <line:358:20, line:359:6>
|   |   |-TextComment 0x75ea80 <line:358:20, col:39> Text=" - stdio file stream"
|   |   `-TextComment 0x75eaa0 <line:359:6> Text=" "
|   |-ParamCommandComment 0x75eaf0 <col:7, line:360:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0x75eba0 <line:359:20, line:360:6>
|   |   |-TextComment 0x75eb50 <line:359:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75eb70 <line:360:6> Text=" "
|   |-ParamCommandComment 0x75ebc0 <col:7, line:361:6> [in] implicitly Param="arglist" ParamIndex=2
|   | `-ParagraphComment 0x75ec70 <line:360:21, line:361:6>
|   |   |-TextComment 0x75ec20 <line:360:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x75ec40 <line:361:6> Text=" "
|   `-BlockCommandComment 0x75ec90 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x75ecf0 <col:14, col:89>
|       `-TextComment 0x75ecc0 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x70cb60 <line:112:21, line:372:84> col:21 vfwscanf_s 'int (FILE *, const wchar_t *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x70c948 <col:32, col:38> col:38 stream 'FILE *'
| |-ParmVarDecl 0x70c9c0 <col:46, col:61> col:61 format 'const wchar_t *'
| |-ParmVarDecl 0x70ca38 <col:69, col:77> col:77 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x75f190 <line:366:6, line:370:89>
|   |-ParagraphComment 0x75ee50 <line:366:6, line:367:6>
|   | |-TextComment 0x75edb0 <line:366:6> Text=" "
|   | |-InlineCommandComment 0x75edd0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75edf0 <col:19, col:109> Text=": The  vfwscanf_s  function  is  the  wide-character  equivalent  of the vfscanf_s function"
|   | `-TextComment 0x75ee10 <line:367:6> Text=" "
|   |-ParamCommandComment 0x75ee70 <col:7, line:368:6> [in] implicitly Param="stream" ParamIndex=0
|   | `-ParagraphComment 0x75ef20 <line:367:20, line:368:6>
|   |   |-TextComment 0x75eed0 <line:367:20, col:39> Text=" - stdio file stream"
|   |   `-TextComment 0x75eef0 <line:368:6> Text=" "
|   |-ParamCommandComment 0x75ef40 <col:7, line:369:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0x75eff0 <line:368:20, line:369:6>
|   |   |-TextComment 0x75efa0 <line:368:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75efc0 <line:369:6> Text=" "
|   |-ParamCommandComment 0x75f010 <col:7, line:370:6> [in] implicitly Param="arglist" ParamIndex=2
|   | `-ParagraphComment 0x75f0c0 <line:369:21, line:370:6>
|   |   |-TextComment 0x75f070 <line:369:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x75f090 <line:370:6> Text=" "
|   `-BlockCommandComment 0x75f0e0 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x75f140 <col:14, col:89>
|       `-TextComment 0x75f110 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x70cd80 <line:112:21, line:380:73> col:21 sscanf_s 'int (const char *, const char *, ...)' extern
| |-ParmVarDecl 0x70cc60 <col:30, col:42> col:42 buffer 'const char *'
| |-ParmVarDecl 0x70cce0 <col:50, col:62> col:62 format 'const char *'
| `-FullComment 0x75f500 <line:375:6, line:378:89>
|   |-ParagraphComment 0x75f2a0 <line:375:6, line:376:6>
|   | |-TextComment 0x75f200 <line:375:6> Text=" "
|   | |-InlineCommandComment 0x75f220 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75f240 <col:19, col:173> Text=": The sscanf_s function is equivalent to fscanf_s, except that input is obtained from a string (specified by the argument buffer) rather than from a stream"
|   | `-TextComment 0x75f260 <line:376:6> Text=" "
|   |-ParamCommandComment 0x75f2c0 <col:7, line:377:6> [in] implicitly Param="buffer" ParamIndex=0
|   | `-ParagraphComment 0x75f370 <line:376:20, line:377:6>
|   |   |-TextComment 0x75f320 <line:376:20, col:50> Text=" -  read character from  buffer"
|   |   `-TextComment 0x75f340 <line:377:6> Text=" "
|   |-ParamCommandComment 0x75f390 <col:7, line:378:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0x75f440 <line:377:20, line:378:6>
|   |   |-TextComment 0x75f3f0 <line:377:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75f410 <line:378:6> Text=" "
|   `-BlockCommandComment 0x75f460 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x75f4c0 <col:14, col:89>
|       `-TextComment 0x75f490 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x70d008 <line:112:21, line:388:80> col:21 swscanf_s 'int (const wchar_t *, const wchar_t *, ...)' extern
| |-ParmVarDecl 0x70ce68 <col:31, col:46> col:46 buffer 'const wchar_t *'
| |-ParmVarDecl 0x70cee0 <col:54, col:69> col:69 format 'const wchar_t *'
| `-FullComment 0x75f870 <line:383:6, line:386:89>
|   |-ParagraphComment 0x75f610 <line:383:6, line:384:6>
|   | |-TextComment 0x75f570 <line:383:6> Text=" "
|   | |-InlineCommandComment 0x75f590 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75f5b0 <col:19, col:107> Text=": The  swscanf_s  function  is  the  wide-character  equivalent  of the sscanf_s function"
|   | `-TextComment 0x75f5d0 <line:384:6> Text=" "
|   |-ParamCommandComment 0x75f630 <col:7, line:385:6> [in] implicitly Param="buffer" ParamIndex=0
|   | `-ParagraphComment 0x75f6e0 <line:384:20, line:385:6>
|   |   |-TextComment 0x75f690 <line:384:20, col:50> Text=" -  read character from  buffer"
|   |   `-TextComment 0x75f6b0 <line:385:6> Text=" "
|   |-ParamCommandComment 0x75f700 <col:7, line:386:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0x75f7b0 <line:385:20, line:386:6>
|   |   |-TextComment 0x75f760 <line:385:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75f780 <line:386:6> Text=" "
|   `-BlockCommandComment 0x75f7d0 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x75f830 <col:14, col:89>
|       `-TextComment 0x75f800 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x70d2e0 <line:112:21, line:397:86> col:21 vsscanf_s 'int (const char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x70d100 <col:31, col:43> col:43 buffer 'const char *'
| |-ParmVarDecl 0x70d180 <col:51, col:63> col:63 format 'const char *'
| |-ParmVarDecl 0x70d1f8 <col:71, col:79> col:79 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x75fcc0 <line:391:6, line:395:89>
|   |-ParagraphComment 0x75f980 <line:391:6, line:392:6>
|   | |-TextComment 0x75f8e0 <line:391:6> Text=" "
|   | |-InlineCommandComment 0x75f900 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75f920 <col:19, col:121> Text=": The vsscanf_s function is equivalent to sscanf_s, with the variable argument list replaced by arglist"
|   | `-TextComment 0x75f940 <line:392:6> Text=" "
|   |-ParamCommandComment 0x75f9a0 <col:7, line:393:6> [in] implicitly Param="buffer" ParamIndex=0
|   | `-ParagraphComment 0x75fa50 <line:392:20, line:393:6>
|   |   |-TextComment 0x75fa00 <line:392:20, col:50> Text=" -  read character from  buffer"
|   |   `-TextComment 0x75fa20 <line:393:6> Text=" "
|   |-ParamCommandComment 0x75fa70 <col:7, line:394:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0x75fb20 <line:393:20, line:394:6>
|   |   |-TextComment 0x75fad0 <line:393:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75faf0 <line:394:6> Text=" "
|   |-ParamCommandComment 0x75fb40 <col:7, line:395:6> [in] implicitly Param="arglist" ParamIndex=2
|   | `-ParagraphComment 0x75fbf0 <line:394:21, line:395:6>
|   |   |-TextComment 0x75fba0 <line:394:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x75fbc0 <line:395:6> Text=" "
|   `-BlockCommandComment 0x75fc10 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x75fc70 <col:14, col:89>
|       `-TextComment 0x75fc40 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x70d5f0 <line:112:21, line:406:93> col:21 vswscanf_s 'int (const wchar_t *, const wchar_t *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x70d3d8 <col:32, col:47> col:47 buffer 'const wchar_t *'
| |-ParmVarDecl 0x70d450 <col:55, col:70> col:70 format 'const wchar_t *'
| |-ParmVarDecl 0x70d4c8 <col:78, col:86> col:86 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x760110 <line:400:6, line:404:89>
|   |-ParagraphComment 0x75fdd0 <line:400:6, line:401:6>
|   | |-TextComment 0x75fd30 <line:400:6> Text=" "
|   | |-InlineCommandComment 0x75fd50 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x75fd70 <col:19, col:109> Text=": The  vswscanf_s  function  is  the  wide-character  equivalent  of the vsscanf_s function"
|   | `-TextComment 0x75fd90 <line:401:6> Text=" "
|   |-ParamCommandComment 0x75fdf0 <col:7, line:402:6> [in] implicitly Param="buffer" ParamIndex=0
|   | `-ParagraphComment 0x75fea0 <line:401:20, line:402:6>
|   |   |-TextComment 0x75fe50 <line:401:20, col:50> Text=" -  read character from  buffer"
|   |   `-TextComment 0x75fe70 <line:402:6> Text=" "
|   |-ParamCommandComment 0x75fec0 <col:7, line:403:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0x75ff70 <line:402:20, line:403:6>
|   |   |-TextComment 0x75ff20 <line:402:20, col:35> Text=" - format string"
|   |   `-TextComment 0x75ff40 <line:403:6> Text=" "
|   |-ParamCommandComment 0x75ff90 <col:7, line:404:6> [in] implicitly Param="arglist" ParamIndex=2
|   | `-ParagraphComment 0x760040 <line:403:21, line:404:6>
|   |   |-TextComment 0x75fff0 <line:403:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x760010 <line:404:6> Text=" "
|   `-BlockCommandComment 0x760060 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x7600c0 <col:14, col:89>
|       `-TextComment 0x760090 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x70da10 <line:112:21, line:414:58> col:23 gets_s 'char *(char *, size_t)' extern
| |-ParmVarDecl 0x70d6f0 <col:30, col:36> col:36 buffer 'char *'
| |-ParmVarDecl 0x70d768 <col:44, col:51> col:51 destMax 'size_t':'unsigned long'
| `-FullComment 0x7604a0 <line:409:6, line:412:100>
|   |-ParagraphComment 0x760240 <line:409:6, line:410:6>
|   | |-TextComment 0x7601a0 <line:409:6> Text=" "
|   | |-InlineCommandComment 0x7601c0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x7601e0 <col:19, col:185> Text=":The gets_s function reads at most one less than the number of characters specified by destMax from the stream pointed to by stdin, into the array pointed to by buffer"
|   | `-TextComment 0x760200 <line:410:6> Text=" "
|   |-ParamCommandComment 0x760260 <col:7, line:411:6> [in] implicitly Param="buffer" ParamIndex=0
|   | `-ParagraphComment 0x760310 <line:410:20, line:411:6>
|   |   |-TextComment 0x7602c0 <line:410:20, col:42> Text=" - destination  address"
|   |   `-TextComment 0x7602e0 <line:411:6> Text=" "
|   |-ParamCommandComment 0x760330 <col:7, line:412:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x7603e0 <line:411:21, line:412:6>
|   |   |-TextComment 0x760390 <line:411:21, col:104> Text=" -The maximum length of destination buffer(including the terminating null character)"
|   |   `-TextComment 0x7603b0 <line:412:6> Text=" "
|   `-BlockCommandComment 0x760400 <col:7, col:100> Name="return"
|     `-ParagraphComment 0x760460 <col:14, col:100>
|       `-TextComment 0x760430 <col:14, col:100> Text="  buffer if there was no runtime-constraint violation,If an error occurred return NULL."
|-FunctionDecl 0x70dd18 <line:112:21, line:425:91> col:25 memcpy_s 'errno_t (void *, size_t, const void *, size_t)' extern
| |-ParmVarDecl 0x70db00 <col:34, col:40> col:40 dest 'void *'
| |-ParmVarDecl 0x70db78 <col:46, col:53> col:53 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x70dbf8 <col:62, col:74> col:74 src 'const void *'
| |-ParmVarDecl 0x70dc70 <col:79, col:86> col:86 count 'size_t':'unsigned long'
| `-FullComment 0x7609c0 <line:418:6, line:423:63>
|   |-ParagraphComment 0x7605b0 <line:418:6, line:419:6>
|   | |-TextComment 0x760510 <line:418:6> Text=" "
|   | |-InlineCommandComment 0x760530 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x760550 <col:19, col:130> Text=":The memcpy_s function copies n characters from the object pointed to by src into the object pointed to by dest."
|   | `-TextComment 0x760570 <line:419:6> Text=" "
|   |-ParamCommandComment 0x7605d0 <col:7, line:420:6> [in] implicitly Param="dest" ParamIndex=0
|   | `-ParagraphComment 0x760680 <line:419:18, line:420:6>
|   |   |-TextComment 0x760630 <line:419:18, col:40> Text=" - destination  address"
|   |   `-TextComment 0x760650 <line:420:6> Text=" "
|   |-ParamCommandComment 0x7606a0 <col:7, line:421:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x760750 <line:420:21, line:421:6>
|   |   |-TextComment 0x760700 <line:420:21, col:62> Text=" -The maximum length of destination buffer"
|   |   `-TextComment 0x760720 <line:421:6> Text=" "
|   |-ParamCommandComment 0x760770 <col:7, line:422:6> [in] implicitly Param="src" ParamIndex=2
|   | `-ParagraphComment 0x760820 <line:421:17, line:422:6>
|   |   |-TextComment 0x7607d0 <line:421:17, col:33> Text=" -source  address"
|   |   `-TextComment 0x7607f0 <line:422:6> Text=" "
|   |-ParamCommandComment 0x760840 <col:7, line:423:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0x7608f0 <line:422:19, line:423:6>
|   |   |-TextComment 0x7608a0 <line:422:19, col:58> Text=" -copies count  characters from the  src"
|   |   `-TextComment 0x7608c0 <line:423:6> Text=" "
|   `-BlockCommandComment 0x760910 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x760970 <col:14, col:63>
|       `-TextComment 0x760940 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x70e038 <line:112:21, line:434:83> col:25 strcpy_s 'errno_t (char *, size_t, const char *)' extern
| |-ParmVarDecl 0x70de20 <col:34, col:40> col:40 strDest 'char *'
| |-ParmVarDecl 0x70de98 <col:49, col:56> col:56 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x70df18 <col:65, col:77> col:77 strSrc 'const char *'
| `-FullComment 0x760e10 <line:428:6, line:432:63>
|   |-ParagraphComment 0x760ad0 <line:428:6, line:429:6>
|   | |-TextComment 0x760a30 <line:428:6> Text=" "
|   | |-InlineCommandComment 0x760a50 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x760a70 <col:19, col:159> Text=":The strcpy_s function copies the string pointed to by strSrc (including the terminating null character) into the array pointed to by strDest"
|   | `-TextComment 0x760a90 <line:429:6> Text=" "
|   |-ParamCommandComment 0x760af0 <col:7, line:430:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x760ba0 <line:429:21, line:430:6>
|   |   |-TextComment 0x760b50 <line:429:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0x760b70 <line:430:6> Text=" "
|   |-ParamCommandComment 0x760bc0 <col:7, line:431:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x760c70 <line:430:21, line:431:6>
|   |   |-TextComment 0x760c20 <line:430:21, col:104> Text=" -The maximum length of destination buffer(including the terminating null character)"
|   |   `-TextComment 0x760c40 <line:431:6> Text=" "
|   |-ParamCommandComment 0x760c90 <col:7, line:432:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0x760d40 <line:431:20, line:432:6>
|   |   |-TextComment 0x760cf0 <line:431:20, col:36> Text=" -source  address"
|   |   `-TextComment 0x760d10 <line:432:6> Text=" "
|   `-BlockCommandComment 0x760d60 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x760dc0 <col:14, col:63>
|       `-TextComment 0x760d90 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x70e3e8 <line:112:21, line:445:98> col:25 strncpy_s 'errno_t (char *, size_t, const char *, size_t)' extern
| |-ParmVarDecl 0x70e130 <col:35, col:41> col:41 strDest 'char *'
| |-ParmVarDecl 0x70e1a8 <col:50, col:57> col:57 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x70e228 <col:66, col:78> col:78 strSrc 'const char *'
| |-ParmVarDecl 0x70e2a0 <col:86, col:93> col:93 count 'size_t':'unsigned long'
| `-FullComment 0x761360 <line:437:6, line:443:63>
|   |-ParagraphComment 0x760f50 <line:437:6, line:439:6>
|   | |-TextComment 0x760e80 <line:437:6> Text=" "
|   | |-InlineCommandComment 0x760ea0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x760ec0 <col:19, col:133> Text=":The strncpy_s function copies not more than n successive characters (not including the terminating null character)"
|   | |-TextComment 0x760ee0 <line:438:6, col:96> Text="                     from the array pointed to by strSrc to the array pointed to by strDest"
|   | `-TextComment 0x760f00 <line:439:6> Text=" "
|   |-ParamCommandComment 0x760f70 <col:7, line:440:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x761020 <line:439:21, line:440:6>
|   |   |-TextComment 0x760fd0 <line:439:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0x760ff0 <line:440:6> Text=" "
|   |-ParamCommandComment 0x761040 <col:7, line:441:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x7610f0 <line:440:21, line:441:6>
|   |   |-TextComment 0x7610a0 <line:440:21, col:104> Text=" -The maximum length of destination buffer(including the terminating null character)"
|   |   `-TextComment 0x7610c0 <line:441:6> Text=" "
|   |-ParamCommandComment 0x761110 <col:7, line:442:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0x7611c0 <line:441:20, line:442:6>
|   |   |-TextComment 0x761170 <line:441:20, col:36> Text=" -source  address"
|   |   `-TextComment 0x761190 <line:442:6> Text=" "
|   |-ParamCommandComment 0x7611e0 <col:7, line:443:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0x761290 <line:442:19, line:443:6>
|   |   |-TextComment 0x761240 <line:442:19, col:58> Text=" -copies count  characters from the  src"
|   |   `-TextComment 0x761260 <line:443:6> Text=" "
|   `-BlockCommandComment 0x7612b0 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x761310 <col:14, col:63>
|       `-TextComment 0x7612e0 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x70e688 <line:112:21, line:455:83> col:25 strcat_s 'errno_t (char *, size_t, const char *)' extern
| |-ParmVarDecl 0x70e4f0 <col:34, col:40> col:40 strDest 'char *'
| |-ParmVarDecl 0x70e568 <col:49, col:56> col:56 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x70e5e8 <col:65, col:77> col:77 strSrc 'const char *'
| `-FullComment 0x7617e0 <line:448:6, line:453:63>
|   |-ParagraphComment 0x7614a0 <line:448:6, line:450:6>
|   | |-TextComment 0x7613d0 <line:448:6> Text=" "
|   | |-InlineCommandComment 0x7613f0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x761410 <col:19, col:135> Text=":The strcat_s function appends a copy of the  string pointed to by strSrc (including the terminating null  character)"
|   | |-TextComment 0x761430 <line:449:6, col:73> Text="                     to the end of the  string pointed to by strDest"
|   | `-TextComment 0x761450 <line:450:6> Text=" "
|   |-ParamCommandComment 0x7614c0 <col:7, line:451:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x761570 <line:450:21, line:451:6>
|   |   |-TextComment 0x761520 <line:450:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0x761540 <line:451:6> Text=" "
|   |-ParamCommandComment 0x761590 <col:7, line:452:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x761640 <line:451:21, line:452:6>
|   |   |-TextComment 0x7615f0 <line:451:21, col:109> Text=" -The maximum length of destination buffer(including the terminating null wide character)"
|   |   `-TextComment 0x761610 <line:452:6> Text=" "
|   |-ParamCommandComment 0x761660 <col:7, line:453:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0x761710 <line:452:20, line:453:6>
|   |   |-TextComment 0x7616c0 <line:452:20, col:36> Text=" -source  address"
|   |   `-TextComment 0x7616e0 <line:453:6> Text=" "
|   `-BlockCommandComment 0x761730 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x761790 <col:14, col:63>
|       `-TextComment 0x761760 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x70eaf0 <line:112:21, line:466:98> col:25 strncat_s 'errno_t (char *, size_t, const char *, size_t)' extern
| |-ParmVarDecl 0x70e780 <col:35, col:41> col:41 strDest 'char *'
| |-ParmVarDecl 0x70e7f8 <col:50, col:57> col:57 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x70e878 <col:66, col:78> col:78 strSrc 'const char *'
| |-ParmVarDecl 0x70e8f0 <col:86, col:93> col:93 count 'size_t':'unsigned long'
| `-FullComment 0x761d30 <line:458:6, line:464:63>
|   |-ParagraphComment 0x761920 <line:458:6, line:460:6>
|   | |-TextComment 0x761850 <line:458:6> Text=" "
|   | |-InlineCommandComment 0x761870 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x761890 <col:19, col:136> Text=":The strncat_s function appends not more than n successive  characters (not including the terminating null  character)"
|   | |-TextComment 0x7618b0 <line:459:6, col:112> Text="                       from the array pointed to by strSrc to the end of the  string pointed to by strDest."
|   | `-TextComment 0x7618d0 <line:460:6> Text=" "
|   |-ParamCommandComment 0x761940 <col:7, line:461:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x7619f0 <line:460:21, line:461:6>
|   |   |-TextComment 0x7619a0 <line:460:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0x7619c0 <line:461:6> Text=" "
|   |-ParamCommandComment 0x761a10 <col:7, line:462:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x761ac0 <line:461:21, line:462:6>
|   |   |-TextComment 0x761a70 <line:461:21, col:104> Text=" -The maximum length of destination buffer(including the terminating null character)"
|   |   `-TextComment 0x761a90 <line:462:6> Text=" "
|   |-ParamCommandComment 0x761ae0 <col:7, line:463:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0x761b90 <line:462:20, line:463:6>
|   |   |-TextComment 0x761b40 <line:462:20, col:36> Text=" -source  address"
|   |   `-TextComment 0x761b60 <line:463:6> Text=" "
|   |-ParamCommandComment 0x761bb0 <col:7, line:464:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0x761c60 <line:463:19, line:464:6>
|   |   |-TextComment 0x761c10 <line:463:19, col:58> Text=" -copies count  characters from the  src"
|   |   `-TextComment 0x761c30 <line:464:6> Text=" "
|   `-BlockCommandComment 0x761c80 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x761ce0 <col:14, col:63>
|       `-TextComment 0x761cb0 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x70ede0 <line:469:5, col:97> col:20 strncpy_error 'errno_t (char *, size_t, const char *, size_t)' extern
| |-ParmVarDecl 0x70ebc8 <col:34, col:40> col:40 strDest 'char *'
| |-ParmVarDecl 0x70ec40 <col:49, col:56> col:56 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x70ecc0 <col:65, col:77> col:77 strSrc 'const char *'
| `-ParmVarDecl 0x70ed38 <col:85, col:92> col:92 count 'size_t':'unsigned long'
|-FunctionDecl 0x70f050 <line:470:5, col:82> col:20 strcpy_error 'errno_t (char *, size_t, const char *)' extern
| |-ParmVarDecl 0x70eeb8 <col:33, col:39> col:39 strDest 'char *'
| |-ParmVarDecl 0x70ef30 <col:48, col:55> col:55 destMax 'size_t':'unsigned long'
| `-ParmVarDecl 0x70efb0 <col:64, col:76> col:76 strSrc 'const char *'
|-FunctionDecl 0x70f338 <line:476:5, col:82> col:20 memset_sOptAsm 'errno_t (void *, size_t, int, size_t)' extern
| |-ParmVarDecl 0x70f120 <col:35, col:41> col:41 dest 'void *'
| |-ParmVarDecl 0x70f198 <col:47, col:54> col:54 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x70f218 <col:63, col:67> col:67 c 'int'
| `-ParmVarDecl 0x70f290 <col:70, col:77> col:77 count 'size_t':'unsigned long'
|-FunctionDecl 0x70f628 <line:477:5, col:81> col:20 memset_sOptTc 'errno_t (void *, size_t, int, size_t)' extern
| |-ParmVarDecl 0x70f410 <col:34, col:40> col:40 dest 'void *'
| |-ParmVarDecl 0x70f488 <col:46, col:53> col:53 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x70f508 <col:62, col:66> col:66 c 'int'
| `-ParmVarDecl 0x70f580 <col:69, col:76> col:76 count 'size_t':'unsigned long'
|-FunctionDecl 0x70f918 <line:478:5, col:92> col:20 memcpy_sOptAsm 'errno_t (void *, size_t, const void *, size_t)' extern
| |-ParmVarDecl 0x70f700 <col:35, col:41> col:41 dest 'void *'
| |-ParmVarDecl 0x70f778 <col:47, col:54> col:54 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x70f7f8 <col:63, col:75> col:75 src 'const void *'
| `-ParmVarDecl 0x70f870 <col:80, col:87> col:87 count 'size_t':'unsigned long'
|-FunctionDecl 0x70fc60 <line:479:5, col:91> col:20 memcpy_sOptTc 'errno_t (void *, size_t, const void *, size_t)' extern
| |-ParmVarDecl 0x70f9f0 <col:34, col:40> col:40 dest 'void *'
| |-ParmVarDecl 0x70fac0 <col:46, col:53> col:53 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x70fb40 <col:62, col:74> col:74 src 'const void *'
| `-ParmVarDecl 0x70fbb8 <col:79, col:86> col:86 count 'size_t':'unsigned long'
|-FunctionDecl 0x70fdb8 <main/fs/fs_init.h:41:1, col:25> col:6 used FileSystemInit 'void (void)'
|-FunctionDecl 0x70fef0 <main/hals/driver/../../los_compiler.h:327:23, main/main.c:44:1> line:41:6 used BssClean 'void (void)'
| `-CompoundStmt 0x70ffd0 <line:42:1, line:44:1>
`-FunctionDecl 0x7100a8 <line:46:1, line:72:1> line:46:7 main 'INT32 (void)'
  `-CompoundStmt 0x710948 <line:47:1, line:72:1>
    |-DeclStmt 0x7101c0 <line:48:5, col:15>
    | `-VarDecl 0x710158 <col:5, col:12> col:12 used ret 'UINT32':'unsigned int'
    |-CallExpr 0x710210 <line:50:5, col:14> 'void'
    | `-ImplicitCastExpr 0x7101f8 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x7101d8 <col:5> 'void (void)' Function 0x70fef0 'BssClean' 'void (void)'
    |-CallExpr 0x710268 <line:51:5, col:16> 'void'
    | `-ImplicitCastExpr 0x710250 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x710230 <col:5> 'void (void)' Function 0x677490 'WdtDisable' 'void (void)'
    |-BinaryOperator 0x7103f0 <line:58:5, col:26> 'UINT32':'unsigned int' '='
    | |-DeclRefExpr 0x710348 <col:5> 'UINT32':'unsigned int' lvalue Var 0x710158 'ret' 'UINT32':'unsigned int'
    | `-CallExpr 0x7103d0 <col:11, col:26> 'UINT32':'unsigned int'
    |   `-ImplicitCastExpr 0x7103b8 <col:11> 'UINT32 (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x710368 <col:11> 'UINT32 (void)' Function 0x667f00 'LOS_KernelInit' 'UINT32 (void)'
    |-IfStmt 0x7105f0 <line:59:5, line:61:5>
    | |-BinaryOperator 0x710468 <line:59:9, main/hals/driver/../../los_compiler.h:350:23> 'int' '!='
    | | |-ImplicitCastExpr 0x710450 <main/main.c:59:9> 'UINT32':'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x710410 <col:9> 'UINT32':'unsigned int' lvalue Var 0x710158 'ret' 'UINT32':'unsigned int'
    | | `-IntegerLiteral 0x710430 <main/hals/driver/../../los_compiler.h:350:23> 'unsigned int' 0
    | `-CompoundStmt 0x7105d8 <main/main.c:59:24, line:61:5>
    |   `-CallExpr 0x710560 <line:60:9, col:63> 'int'
    |     |-ImplicitCastExpr 0x710548 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x710488 <col:9> 'int (const char *, ...)' Function 0x5ef2d0 'printf' 'int (const char *, ...)'
    |     |-ImplicitCastExpr 0x7105a8 <col:16> 'const char *' <NoOp>
    |     | `-ImplicitCastExpr 0x710590 <col:16> 'char *' <ArrayToPointerDecay>
    |     |   `-StringLiteral 0x7104a8 <col:16> 'char [40]' lvalue "Liteos kernel init failed! ERROR: 0x%x\n"
    |     `-ImplicitCastExpr 0x7105c0 <col:60> 'UINT32':'unsigned int' <LValueToRValue>
    |       `-DeclRefExpr 0x7104e8 <col:60> 'UINT32':'unsigned int' lvalue Var 0x710158 'ret' 'UINT32':'unsigned int'
    |-CallExpr 0x710640 <line:62:5, col:20> 'void'
    | `-ImplicitCastExpr 0x710628 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x710608 <col:5> 'void (void)' Function 0x70fdb8 'FileSystemInit' 'void (void)'
    |-BinaryOperator 0x7106d8 <line:64:5, col:22> 'UINT32':'unsigned int' '='
    | |-DeclRefExpr 0x710660 <col:5> 'UINT32':'unsigned int' lvalue Var 0x710158 'ret' 'UINT32':'unsigned int'
    | `-CallExpr 0x7106b8 <col:11, col:22> 'UINT32':'unsigned int'
    |   `-ImplicitCastExpr 0x7106a0 <col:11> 'UINT32 (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x710680 <col:11> 'UINT32 (void)' Function 0x6119d8 'LosAppInit' 'UINT32 (void)'
    |-IfStmt 0x7108a8 <line:65:5, line:67:5>
    | |-BinaryOperator 0x710750 <line:65:9, main/hals/driver/../../los_compiler.h:350:23> 'int' '!='
    | | |-ImplicitCastExpr 0x710738 <main/main.c:65:9> 'UINT32':'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x7106f8 <col:9> 'UINT32':'unsigned int' lvalue Var 0x710158 'ret' 'UINT32':'unsigned int'
    | | `-IntegerLiteral 0x710718 <main/hals/driver/../../los_compiler.h:350:23> 'unsigned int' 0
    | `-CompoundStmt 0x710890 <main/main.c:65:24, line:67:5>
    |   `-CallExpr 0x710818 <line:66:9, col:55> 'int'
    |     |-ImplicitCastExpr 0x710800 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x710770 <col:9> 'int (const char *, ...)' Function 0x5ef2d0 'printf' 'int (const char *, ...)'
    |     |-ImplicitCastExpr 0x710860 <col:16> 'const char *' <NoOp>
    |     | `-ImplicitCastExpr 0x710848 <col:16> 'char *' <ArrayToPointerDecay>
    |     |   `-StringLiteral 0x710790 <col:16> 'char [32]' lvalue "LosAppInit failed! ERROR: 0x%x\n"
    |     `-ImplicitCastExpr 0x710878 <col:52> 'UINT32':'unsigned int' <LValueToRValue>
    |       `-DeclRefExpr 0x7107c8 <col:52> 'UINT32':'unsigned int' lvalue Var 0x710158 'ret' 'UINT32':'unsigned int'
    |-CallExpr 0x7108f8 <line:69:5, col:15> 'UINT32':'unsigned int'
    | `-ImplicitCastExpr 0x7108e0 <col:5> 'UINT32 (*)(void)' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x7108c0 <col:5> 'UINT32 (void)' Function 0x667a20 'LOS_Start' 'UINT32 (void)'
    `-ReturnStmt 0x710938 <line:71:5, col:12>
      `-IntegerLiteral 0x710918 <col:12> 'int' 0

TranslationUnitDecl 0x1e1bd48 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1e1c5e0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1e1c2e0 '__int128'
|-TypedefDecl 0x1e1c650 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1e1c300 'unsigned __int128'
|-TypedefDecl 0x1e1c958 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1e1c730 'struct __NSConstantString_tag'
|   `-Record 0x1e1c6a8 '__NSConstantString_tag'
|-TypedefDecl 0x1e1c9f0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1e1c9b0 'char *'
|   `-BuiltinType 0x1e1bde0 'char'
|-TypedefDecl 0x1e1cce8 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x1e1cc90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x1e1cad0 'struct __va_list_tag'
|     `-Record 0x1e1ca48 '__va_list_tag'
|-TypedefDecl 0x1e7f970 <main/los_compiler.h:308:1, col:32> col:32 UINT8 'unsigned char'
| `-BuiltinType 0x1e1bea0 'unsigned char'
|-TypedefDecl 0x1e7f9e0 <line:309:1, col:32> col:32 UINT16 'unsigned short'
| `-BuiltinType 0x1e1bec0 'unsigned short'
|-TypedefDecl 0x1e7fa50 <line:310:1, col:32> col:32 referenced UINT32 'unsigned int'
| `-BuiltinType 0x1e1bee0 'unsigned int'
|-TypedefDecl 0x1e7fac0 <line:311:1, col:32> col:32 INT8 'signed char'
| `-BuiltinType 0x1e1be00 'signed char'
|-TypedefDecl 0x1e7fb30 <line:312:1, col:32> col:32 INT16 'short'
| `-BuiltinType 0x1e1be20 'short'
|-TypedefDecl 0x1e7fba0 <line:313:1, col:32> col:32 referenced INT32 'int'
| `-BuiltinType 0x1e1be40 'int'
|-TypedefDecl 0x1e7fc10 <line:314:1, col:32> col:32 FLOAT 'float'
| `-BuiltinType 0x1e1bf40 'float'
|-TypedefDecl 0x1e7fc80 <line:315:1, col:32> col:32 DOUBLE 'double'
| `-BuiltinType 0x1e1bf60 'double'
|-TypedefDecl 0x1e7fce8 <line:316:1, col:32> col:32 referenced CHAR 'char'
| `-BuiltinType 0x1e1bde0 'char'
|-TypedefDecl 0x1e7fd58 <line:318:1, col:32> col:32 referenced BOOL 'unsigned int'
| `-BuiltinType 0x1e1bee0 'unsigned int'
|-TypedefDecl 0x1e7fdc8 <line:319:1, col:32> col:32 referenced UINT64 'unsigned long long'
| `-BuiltinType 0x1e1bf20 'unsigned long long'
|-TypedefDecl 0x1e7fe38 <line:320:1, col:32> col:32 referenced INT64 'long long'
| `-BuiltinType 0x1e1be80 'long long'
|-TypedefDecl 0x1e7fea8 <line:321:1, col:32> col:32 referenced UINTPTR 'unsigned int'
| `-BuiltinType 0x1e1bee0 'unsigned int'
|-TypedefDecl 0x1e7ff18 <line:322:1, col:32> col:32 INTPTR 'int'
| `-BuiltinType 0x1e1be40 'int'
|-TypedefDecl 0x1e7ffa0 <line:324:1, col:24> col:24 Atomic 'volatile INT32':'volatile int'
| `-QualType 0x1e7ff74 'volatile INT32' volatile
|   `-TypedefType 0x1e7ff70 'INT32' sugar
|     |-Typedef 0x1e7fba0 'INT32'
|     `-BuiltinType 0x1e1be40 'int'
|-TypedefDecl 0x1e80030 <line:325:1, col:24> col:24 Atomic64 'volatile INT64':'volatile long long'
| `-QualType 0x1e80004 'volatile INT64' volatile
|   `-TypedefType 0x1e80000 'INT64' sugar
|     |-Typedef 0x1e7fe38 'INT64'
|     `-BuiltinType 0x1e1be80 'long long'
|-FunctionDecl 0x1e802d8 <line:407:1, line:410:1> line:407:22 LOS_Align 'UINT32 (UINT32, UINT32)' static inline
| |-ParmVarDecl 0x1e80150 <col:32, col:39> col:39 used addr 'UINT32':'unsigned int'
| |-ParmVarDecl 0x1e801c8 <col:45, col:52> col:52 used boundary 'UINT32':'unsigned int'
| |-CompoundStmt 0x1e8aea0 <line:408:1, line:410:1>
| | `-ReturnStmt 0x1e8ae90 <line:409:5, col:93>
| |   `-BinaryOperator 0x1e8ae70 <col:12, col:93> 'unsigned int' '&'
| |     |-ParenExpr 0x1e8ad88 <col:12, col:75> 'unsigned int'
| |     | `-BinaryOperator 0x1e8ad68 <col:13, col:74> 'unsigned int' '+'
| |     |   |-ImplicitCastExpr 0x1e8ad50 <col:13> 'UINT32':'unsigned int' <LValueToRValue>
| |     |   | `-DeclRefExpr 0x1e803d0 <col:13> 'UINT32':'unsigned int' lvalue ParmVar 0x1e80150 'addr' 'UINT32':'unsigned int'
| |     |   `-ParenExpr 0x1e8ad30 <col:20, col:74> 'unsigned int'
| |     |     `-ConditionalOperator 0x1e8ad00 <col:21, col:73> 'unsigned int'
| |     |       |-ParenExpr 0x1e80570 <col:21, col:52> 'int'
| |     |       | `-BinaryOperator 0x1e80550 <col:22, col:48> 'int' '>'
| |     |       |   |-ParenExpr 0x1e804f8 <col:22, col:44> 'unsigned int'
| |     |       |   | `-BinaryOperator 0x1e804d8 <col:23, col:43> 'unsigned int' '+'
| |     |       |   |   |-ImplicitCastExpr 0x1e804c0 <col:23> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |   | `-DeclRefExpr 0x1e803f0 <col:23> 'UINT32':'unsigned int' lvalue ParmVar 0x1e80150 'addr' 'UINT32':'unsigned int'
| |     |       |   |   `-ParenExpr 0x1e804a0 <col:30, col:43> 'unsigned int'
| |     |       |   |     `-BinaryOperator 0x1e80480 <col:31, col:42> 'unsigned int' '-'
| |     |       |   |       |-ImplicitCastExpr 0x1e80450 <col:31> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |       | `-DeclRefExpr 0x1e80410 <col:31> 'UINT32':'unsigned int' lvalue ParmVar 0x1e801c8 'boundary' 'UINT32':'unsigned int'
| |     |       |   |       `-ImplicitCastExpr 0x1e80468 <col:42> 'unsigned int' <IntegralCast>
| |     |       |   |         `-IntegerLiteral 0x1e80430 <col:42> 'int' 1
| |     |       |   `-ImplicitCastExpr 0x1e80538 <col:48> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |     `-DeclRefExpr 0x1e80518 <col:48> 'UINT32':'unsigned int' lvalue ParmVar 0x1e80150 'addr' 'UINT32':'unsigned int'
| |     |       |-ParenExpr 0x1e80620 <col:56, col:69> 'unsigned int'
| |     |       | `-BinaryOperator 0x1e80600 <col:57, col:68> 'unsigned int' '-'
| |     |       |   |-ImplicitCastExpr 0x1e805d0 <col:57> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   | `-DeclRefExpr 0x1e80590 <col:57> 'UINT32':'unsigned int' lvalue ParmVar 0x1e801c8 'boundary' 'UINT32':'unsigned int'
| |     |       |   `-ImplicitCastExpr 0x1e805e8 <col:68> 'unsigned int' <IntegralCast>
| |     |       |     `-IntegerLiteral 0x1e805b0 <col:68> 'int' 1
| |     |       `-ImplicitCastExpr 0x1e80660 <col:73> 'unsigned int' <IntegralCast>
| |     |         `-IntegerLiteral 0x1e80640 <col:73> 'int' 0
| |     `-UnaryOperator 0x1e8ae58 <col:79, col:93> 'unsigned int' prefix '~' cannot overflow
| |       `-ParenExpr 0x1e8ae38 <col:80, col:93> 'unsigned int'
| |         `-BinaryOperator 0x1e8ae18 <col:81, col:92> 'unsigned int' '-'
| |           |-ImplicitCastExpr 0x1e8ade8 <col:81> 'UINT32':'unsigned int' <LValueToRValue>
| |           | `-DeclRefExpr 0x1e8ada8 <col:81> 'UINT32':'unsigned int' lvalue ParmVar 0x1e801c8 'boundary' 'UINT32':'unsigned int'
| |           `-ImplicitCastExpr 0x1e8ae00 <col:92> 'unsigned int' <IntegralCast>
| |             `-IntegerLiteral 0x1e8adc8 <col:92> 'int' 1
| `-FullComment 0x1e998c0 <line:388:3, line:405:7>
|   |-ParagraphComment 0x1e96880 <line:388:3>
|   | `-TextComment 0x1e96850 <col:3> Text=" "
|   |-VerbatimLineComment 0x1e968a0 <col:4, col:21> Text=" los_base"
|   |-ParagraphComment 0x1e98f70 <line:389:3>
|   | `-TextComment 0x1e98f40 <col:3> Text=" "
|   |-BlockCommandComment 0x1e98f90 <col:4, col:70> Name="brief"
|   | `-ParagraphComment 0x1e98ff0 <col:10, col:70>
|   |   `-TextComment 0x1e98fc0 <col:10, col:70> Text=" Align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0x1e99040 <line:391:3>
|   | `-TextComment 0x1e99010 <col:3> Text=" "
|   |-BlockCommandComment 0x1e99060 <col:4, line:392:83> Name="par"
|   | `-ParagraphComment 0x1e990e0 <line:391:8, line:392:83>
|   |   |-TextComment 0x1e99090 <line:391:8, col:20> Text=" Description:"
|   |   `-TextComment 0x1e990b0 <line:392:3, col:83> Text=" This API is used to align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0x1e99130 <line:394:3>
|   | `-TextComment 0x1e99100 <col:3> Text=" "
|   |-BlockCommandComment 0x1e99150 <col:4, line:397:8> Name="attention"
|   | `-ParagraphComment 0x1e99320 <line:395:3, line:397:8>
|   |   |-TextComment 0x1e99180 <line:395:3> Text=" "
|   |   |-HTMLStartTagComment 0x1e991a0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1e991e0 <line:396:3> Text=" "
|   |   |-HTMLStartTagComment 0x1e99200 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1e99240 <col:8, col:50> Text="the value of boundary usually is 4,8,16,32."
|   |   |-HTMLEndTagComment 0x1e99260 <col:51, col:55> Name="li"
|   |   |-TextComment 0x1e99290 <line:397:3> Text=" "
|   |   `-HTMLEndTagComment 0x1e992b0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1e99370 <line:399:3>
|   | `-TextComment 0x1e99340 <col:3> Text=" "
|   |-ParamCommandComment 0x1e99390 <col:4, line:400:3> [in] implicitly Param="addr" ParamIndex=0
|   | `-ParagraphComment 0x1e99440 <line:399:15, line:400:3>
|   |   |-TextComment 0x1e993f0 <line:399:15, col:61> Text="     [IN]  The variable what you want to align."
|   |   `-TextComment 0x1e99410 <line:400:3> Text=" "
|   |-ParamCommandComment 0x1e99460 <col:4, col:63> [in] implicitly Param="boundary" ParamIndex=1
|   | `-ParagraphComment 0x1e994f0 <col:19, col:63>
|   |   `-TextComment 0x1e994c0 <col:19, col:63> Text=" [IN]  The align size what you want to align."
|   |-ParagraphComment 0x1e99540 <line:402:3>
|   | `-TextComment 0x1e99510 <col:3> Text=" "
|   |-BlockCommandComment 0x1e99560 <col:4, line:403:3> Name="retval"
|   | `-ParagraphComment 0x1e995e0 <line:402:11, line:403:3>
|   |   |-TextComment 0x1e99590 <line:402:11, col:55> Text=" #UINT32 The variable what have been aligned."
|   |   `-TextComment 0x1e995b0 <line:403:3> Text=" "
|   |-BlockCommandComment 0x1e99600 <col:4, line:405:3> Name="par"
|   | `-ParagraphComment 0x1e997d0 <line:403:8, line:405:3>
|   |   |-TextComment 0x1e99630 <line:403:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1e99650 <line:404:3> Text=" "
|   |   |-HTMLStartTagComment 0x1e99670 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1e996b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x1e996f0 <col:12, col:73> Text="los_base.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1e99710 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x1e99740 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x1e99770 <line:405:3> Text=" "
|   `-BlockCommandComment 0x1e997f0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x1e99820 <<invalid sloc>>
|-FunctionDecl 0x1e8af98 <line:423:1, line:438:1> line:423:20 used maybe_release_fence 'void (int)' static inline
| |-ParmVarDecl 0x1e8aed0 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0x1e8b550 <line:424:1, line:438:1>
|   `-SwitchStmt 0x1e8b078 <line:425:5, line:437:5>
|     |-ImplicitCastExpr 0x1e8b060 <line:425:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x1e8b040 <col:13> 'int' lvalue ParmVar 0x1e8aed0 'model' 'int'
|     `-CompoundStmt 0x1e8b508 <col:20, line:437:5>
|       |-CaseStmt 0x1e8b0d0 <line:426:9, line:427:52>
|       | |-ConstantExpr 0x1e8b0b8 <<built-in>:14:26> 'int'
|       | | `-IntegerLiteral 0x1e8b098 <col:26> 'int' 3
|       | `-CallExpr 0x1e8b2e0 <main/los_compiler.h:427:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x1e8b2c8 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x1e8b260 <col:13> '<builtin fn type>' Function 0x1e8b0f8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x1e8b280 <<built-in>:14:26> 'int' 3
|       |-BreakStmt 0x1e8b308 <main/los_compiler.h:428:13>
|       |-CaseStmt 0x1e8b348 <line:429:9, line:430:52>
|       | |-ConstantExpr 0x1e8b330 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0x1e8b310 <col:26> 'int' 4
|       | `-CallExpr 0x1e8b3c8 <main/los_compiler.h:430:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x1e8b3b0 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x1e8b370 <col:13> '<builtin fn type>' Function 0x1e8b0f8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x1e8b390 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0x1e8b3f0 <main/los_compiler.h:431:13>
|       |-CaseStmt 0x1e8b430 <line:432:9, line:433:52>
|       | |-ConstantExpr 0x1e8b418 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0x1e8b3f8 <col:26> 'int' 5
|       | `-CallExpr 0x1e8b4b0 <main/los_compiler.h:433:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x1e8b498 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x1e8b458 <col:13> '<builtin fn type>' Function 0x1e8b0f8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x1e8b478 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0x1e8b4d8 <main/los_compiler.h:434:13>
|       `-DefaultStmt 0x1e8b4e8 <line:435:9, line:436:13>
|         `-BreakStmt 0x1e8b4e0 <col:13>
|-FunctionDecl 0x1e8b0f8 <line:427:13> col:13 implicit used __atomic_thread_fence 'void (int)' extern
| |-ParmVarDecl 0x1e8b198 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1e8b208 <col:13> Implicit
|-FunctionDecl 0x1e8b610 <line:440:1, line:455:1> line:440:20 used maybe_acquire_fence 'void (int)' static inline
| |-ParmVarDecl 0x1e8b580 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0x1e8ba38 <line:441:1, line:455:1>
|   `-SwitchStmt 0x1e8b6f0 <line:442:5, line:454:5>
|     |-ImplicitCastExpr 0x1e8b6d8 <line:442:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x1e8b6b8 <col:13> 'int' lvalue ParmVar 0x1e8b580 'model' 'int'
|     `-CompoundStmt 0x1e8b9f0 <col:20, line:454:5>
|       |-CaseStmt 0x1e8b748 <line:443:9, line:444:52>
|       | |-ConstantExpr 0x1e8b730 <<built-in>:13:26> 'int'
|       | | `-IntegerLiteral 0x1e8b710 <col:26> 'int' 2
|       | `-CallExpr 0x1e8b7c8 <main/los_compiler.h:444:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x1e8b7b0 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x1e8b770 <col:13> '<builtin fn type>' Function 0x1e8b0f8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x1e8b790 <<built-in>:13:26> 'int' 2
|       |-BreakStmt 0x1e8b7f0 <main/los_compiler.h:445:13>
|       |-CaseStmt 0x1e8b830 <line:446:9, line:447:52>
|       | |-ConstantExpr 0x1e8b818 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0x1e8b7f8 <col:26> 'int' 4
|       | `-CallExpr 0x1e8b8b0 <main/los_compiler.h:447:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x1e8b898 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x1e8b858 <col:13> '<builtin fn type>' Function 0x1e8b0f8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x1e8b878 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0x1e8b8d8 <main/los_compiler.h:448:13>
|       |-CaseStmt 0x1e8b918 <line:449:9, line:450:52>
|       | |-ConstantExpr 0x1e8b900 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0x1e8b8e0 <col:26> 'int' 5
|       | `-CallExpr 0x1e8b998 <main/los_compiler.h:450:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x1e8b980 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x1e8b940 <col:13> '<builtin fn type>' Function 0x1e8b0f8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x1e8b960 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0x1e8b9c0 <main/los_compiler.h:451:13>
|       `-DefaultStmt 0x1e8b9d0 <line:452:9, line:453:13>
|         `-BreakStmt 0x1e8b9c8 <col:13>
|-FunctionDecl 0x1e8bbd8 <line:458:1, line:472:1> line:458:21 used __libatomic_flag_for_address 'BOOL *(void *)' static inline
| |-ParmVarDecl 0x1e8ba88 <col:50, col:56> col:56 used addr 'void *'
| `-CompoundStmt 0x1e8e328 <line:459:1, line:472:1>
|   |-DeclStmt 0x1e8c820 <line:460:5, col:99>
|   | `-VarDecl 0x1e8c2a8 <col:5, col:98> col:17 used flag_table 'BOOL [16]' static cinit
|   |   `-InitListExpr 0x1e8c5e0 <col:51, col:98> 'BOOL [16]'
|   |     |-ImplicitCastExpr 0x1e8c6a0 <col:52> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1e8c310 <col:52> 'int' 0
|   |     |-ImplicitCastExpr 0x1e8c6b8 <col:55> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1e8c330 <col:55> 'int' 0
|   |     |-ImplicitCastExpr 0x1e8c6d0 <col:58> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1e8c350 <col:58> 'int' 0
|   |     |-ImplicitCastExpr 0x1e8c6e8 <col:61> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1e8c370 <col:61> 'int' 0
|   |     |-ImplicitCastExpr 0x1e8c700 <col:64> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1e8c390 <col:64> 'int' 0
|   |     |-ImplicitCastExpr 0x1e8c718 <col:67> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1e8c3b0 <col:67> 'int' 0
|   |     |-ImplicitCastExpr 0x1e8c730 <col:70> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1e8c3d0 <col:70> 'int' 0
|   |     |-ImplicitCastExpr 0x1e8c748 <col:73> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1e8c3f0 <col:73> 'int' 0
|   |     |-ImplicitCastExpr 0x1e8c760 <col:76> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1e8c410 <col:76> 'int' 0
|   |     |-ImplicitCastExpr 0x1e8c778 <col:79> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1e8c430 <col:79> 'int' 0
|   |     |-ImplicitCastExpr 0x1e8c790 <col:82> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1e8c450 <col:82> 'int' 0
|   |     |-ImplicitCastExpr 0x1e8c7a8 <col:85> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1e8c470 <col:85> 'int' 0
|   |     |-ImplicitCastExpr 0x1e8c7c0 <col:88> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1e8c490 <col:88> 'int' 0
|   |     |-ImplicitCastExpr 0x1e8c7d8 <col:91> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1e8c4b0 <col:91> 'int' 0
|   |     |-ImplicitCastExpr 0x1e8c7f0 <col:94> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x1e8c4d0 <col:94> 'int' 0
|   |     `-ImplicitCastExpr 0x1e8c808 <col:97> 'BOOL':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x1e8c4f0 <col:97> 'int' 0
|   |-DeclStmt 0x1e8c9b0 <line:461:5, col:41>
|   | `-VarDecl 0x1e8c870 <col:5, col:37> col:13 used p 'UINTPTR':'unsigned int' cinit
|   |   `-CStyleCastExpr 0x1e8c988 <col:17, col:37> 'UINTPTR':'unsigned int' <PointerToIntegral>
|   |     `-CStyleCastExpr 0x1e8c950 <col:26, col:37> 'UINTPTR *' <BitCast>
|   |       `-ImplicitCastExpr 0x1e8c938 <col:37> 'void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x1e8c8d8 <col:37> 'void *' lvalue ParmVar 0x1e8ba88 'addr' 'void *'
|   |-CompoundAssignOperator 0x1e8cb38 <line:462:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x1e8c9c8 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x1e8c870 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x1e8cb18 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0x1e8ca60 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x1e8ca40 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x1e8ca28 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1e8c9e8 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x1e8c870 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x1e8ca08 <col:16> 'int' 2
|   |   `-ParenExpr 0x1e8caf8 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x1e8cad8 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x1e8cac0 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1e8ca80 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0x1e8c870 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x1e8caa0 <col:27> 'int' 4
|   |-CompoundAssignOperator 0x1e8ccd8 <line:463:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x1e8cb68 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x1e8c870 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x1e8ccb8 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0x1e8cc00 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x1e8cbe0 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x1e8cbc8 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1e8cb88 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x1e8c870 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x1e8cba8 <col:16> 'int' 7
|   |   `-ParenExpr 0x1e8cc98 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x1e8cc78 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x1e8cc60 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1e8cc20 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0x1e8c870 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x1e8cc40 <col:27> 'int' 5
|   |-CompoundAssignOperator 0x1e8ce78 <line:464:5, col:30> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x1e8cd08 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x1e8c870 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x1e8ce58 <col:10, col:30> 'unsigned int' '+'
|   |   |-ParenExpr 0x1e8cda0 <col:10, col:18> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x1e8cd80 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x1e8cd68 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1e8cd28 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x1e8c870 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x1e8cd48 <col:16> 'int' 17
|   |   `-ParenExpr 0x1e8ce38 <col:22, col:30> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x1e8ce18 <col:23, col:28> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x1e8ce00 <col:23> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1e8cdc0 <col:23> 'UINTPTR':'unsigned int' lvalue Var 0x1e8c870 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x1e8cde0 <col:28> 'int' 13
|   |-IfStmt 0x1e8d038 <line:466:5, line:468:5>
|   | |-BinaryOperator 0x1e8cf18 <line:466:9, col:26> 'int' '>'
|   | | |-UnaryExprOrTypeTraitExpr 0x1e8cec0 <col:9, col:22> 'unsigned long' sizeof 'void *'
|   | | `-ImplicitCastExpr 0x1e8cf00 <col:26> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1e8cee0 <col:26> 'int' 4
|   | `-CompoundStmt 0x1e8d020 <col:29, line:468:5>
|   |   `-CompoundAssignOperator 0x1e8cff0 <line:467:9, col:22> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0x1e8cf38 <col:9> 'UINTPTR':'unsigned int' lvalue Var 0x1e8c870 'p' 'UINTPTR':'unsigned int'
|   |     `-ParenExpr 0x1e8cfd0 <col:14, col:22> 'UINTPTR':'unsigned int'
|   |       `-BinaryOperator 0x1e8cfb0 <col:15, col:20> 'UINTPTR':'unsigned int' '>>'
|   |         |-ImplicitCastExpr 0x1e8cf98 <col:15> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1e8cf58 <col:15> 'UINTPTR':'unsigned int' lvalue Var 0x1e8c870 'p' 'UINTPTR':'unsigned int'
|   |         `-IntegerLiteral 0x1e8cf78 <col:20> 'int' 31
|   |-CompoundAssignOperator 0x1e8d168 <line:470:5, col:34> 'UINTPTR':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x1e8d050 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x1e8c870 'p' 'UINTPTR':'unsigned int'
|   | `-ImplicitCastExpr 0x1e8d150 <col:10, col:34> 'unsigned int' <IntegralCast>
|   |   `-ParenExpr 0x1e8d130 <col:10, col:34> 'int'
|   |     `-BinaryOperator 0x1e8d110 <line:457:29, line:470:33> 'int' '-'
|   |       |-ParenExpr 0x1e8d0d0 <line:457:29, col:36> 'int'
|   |       | `-BinaryOperator 0x1e8d0b0 <col:30, col:35> 'int' '<<'
|   |       |   |-IntegerLiteral 0x1e8d070 <col:30> 'int' 1
|   |       |   `-IntegerLiteral 0x1e8d090 <col:35> 'int' 4
|   |       `-IntegerLiteral 0x1e8d0f0 <line:470:33> 'int' 1
|   `-ReturnStmt 0x1e8e318 <line:471:5, col:25>
|     `-BinaryOperator 0x1e8e2f8 <col:12, col:25> 'BOOL *' '+'
|       |-ImplicitCastExpr 0x1e8d1d8 <col:12> 'BOOL *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x1e8d198 <col:12> 'BOOL [16]' lvalue Var 0x1e8c2a8 'flag_table' 'BOOL [16]'
|       `-ImplicitCastExpr 0x1e8e2e0 <col:25> 'UINTPTR':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x1e8d1b8 <col:25> 'UINTPTR':'unsigned int' lvalue Var 0x1e8c870 'p' 'UINTPTR':'unsigned int'
|-FunctionDecl 0x1e8e4e8 <line:474:1, line:482:1> line:474:20 used get_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0x1e8e390 <col:29, col:35> col:35 used addr 'void *'
| |-ParmVarDecl 0x1e8e410 <col:41, col:45> col:45 used model 'int'
| `-CompoundStmt 0x1e8eba0 <line:475:1, line:482:1>
|   |-DeclStmt 0x1e8e700 <line:476:5, col:57>
|   | `-VarDecl 0x1e8e5a8 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0x1e8e6c0 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0x1e8e6a8 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1e8e610 <col:22> 'BOOL *(void *)' Function 0x1e8bbd8 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0x1e8e6e8 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e8e630 <col:52> 'void *' lvalue ParmVar 0x1e8e390 'addr' 'void *'
|   |-CallExpr 0x1e8e770 <line:478:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x1e8e758 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e8e718 <col:5> 'void (int)' Function 0x1e8af98 'maybe_release_fence' 'void (int)'
|   | `-ImplicitCastExpr 0x1e8e798 <col:26> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1e8e738 <col:26> 'int' lvalue ParmVar 0x1e8e410 'model' 'int'
|   `-WhileStmt 0x1e8eb88 <line:479:5, line:481:5>
|     |-BinaryOperator 0x1e8eb48 <line:479:12, col:66> 'int' '=='
|     | |-ImplicitCastExpr 0x1e8eb30 <col:12, col:61> 'int' <IntegralCast>
|     | | `-CallExpr 0x1e8eab0 <col:12, col:61> '_Bool'
|     | |   |-ImplicitCastExpr 0x1e8ea98 <col:12> '_Bool (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|     | |   | `-DeclRefExpr 0x1e8e9f0 <col:12> '<builtin fn type>' Function 0x1e8e818 '__atomic_test_and_set' '_Bool (volatile void *, int)'
|     | |   |-ImplicitCastExpr 0x1e8eaf8 <col:35> 'volatile void *' <BitCast>
|     | |   | `-ImplicitCastExpr 0x1e8eae0 <col:35> 'BOOL *' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x1e8ea10 <col:35> 'BOOL *' lvalue Var 0x1e8e5a8 'lock_ptr' 'BOOL *'
|     | |   `-IntegerLiteral 0x1e8ea30 <<built-in>:13:26> 'int' 2
|     | `-IntegerLiteral 0x1e8eb10 <main/los_compiler.h:479:66> 'int' 1
|     `-CompoundStmt 0x1e8eb70 <col:69, line:481:5>
|       `-NullStmt 0x1e8eb68 <line:480:9>
|-FunctionDecl 0x1e8e818 <line:479:12> col:12 implicit used __atomic_test_and_set '_Bool (volatile void *, int)' extern
| |-ParmVarDecl 0x1e8e8b8 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0x1e8e920 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1e8e998 <col:12> Implicit
|-FunctionDecl 0x1e8ecf8 <line:484:1, line:490:1> line:484:20 used free_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0x1e8ebe0 <col:30, col:36> col:36 used addr 'void *'
| |-ParmVarDecl 0x1e8ec60 <col:42, col:46> col:46 used model 'int'
| `-CompoundStmt 0x1e8f298 <line:485:1, line:490:1>
|   |-DeclStmt 0x1e8eeb8 <line:486:5, col:57>
|   | `-VarDecl 0x1e8edb8 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0x1e8ee78 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0x1e8ee60 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1e8ee20 <col:22> 'BOOL *(void *)' Function 0x1e8bbd8 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0x1e8eea0 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e8ee40 <col:52> 'void *' lvalue ParmVar 0x1e8ebe0 'addr' 'void *'
|   |-CallExpr 0x1e8f1a0 <line:488:5, col:47> 'void'
|   | |-ImplicitCastExpr 0x1e8f188 <col:5> 'void (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1e8f0e0 <col:5> '<builtin fn type>' Function 0x1e8ef08 '__atomic_clear' 'void (volatile void *, int)'
|   | |-ImplicitCastExpr 0x1e8f1e8 <col:21> 'volatile void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1e8f1d0 <col:21> 'BOOL *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e8f100 <col:21> 'BOOL *' lvalue Var 0x1e8edb8 'lock_ptr' 'BOOL *'
|   | `-IntegerLiteral 0x1e8f120 <<built-in>:14:26> 'int' 3
|   `-CallExpr 0x1e8f258 <main/los_compiler.h:489:5, col:31> 'void'
|     |-ImplicitCastExpr 0x1e8f240 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1e8f200 <col:5> 'void (int)' Function 0x1e8b610 'maybe_acquire_fence' 'void (int)'
|     `-ImplicitCastExpr 0x1e8f280 <col:26> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1e8f220 <col:26> 'int' lvalue ParmVar 0x1e8ec60 'model' 'int'
|-FunctionDecl 0x1e8ef08 <line:488:5> col:5 implicit used __atomic_clear 'void (volatile void *, int)' extern
| |-ParmVarDecl 0x1e8efa8 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0x1e8f010 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1e8f088 <col:5> Implicit
|-FunctionDecl 0x1e90528 <line:492:1, line:501:1> line:492:23 __atomic_load_8 'UINT64 (const volatile void *, int)' static inline
| |-ParmVarDecl 0x1e90390 <col:39, col:60> col:60 used mem 'const volatile void *'
| |-ParmVarDecl 0x1e90410 <col:65, col:69> col:69 used model 'int'
| `-CompoundStmt 0x1e90ad8 <line:493:1, line:501:1>
|   |-DeclStmt 0x1e90650 <line:494:5, col:15>
|   | `-VarDecl 0x1e905e8 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0x1e90760 <line:496:5, col:29>
|   | `-VarDecl 0x1e90680 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x1e90738 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x1e90720 <col:26> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1e906e8 <col:26> 'const volatile void *' lvalue ParmVar 0x1e90390 'mem' 'const volatile void *'
|   |-CallExpr 0x1e90820 <line:497:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x1e90808 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e90778 <col:5> 'void (void *, int)' Function 0x1e8e4e8 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x1e90850 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1e90798 <col:15> 'void *' lvalue Var 0x1e90680 'memP' 'void *'
|   | `-ImplicitCastExpr 0x1e90868 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1e907b8 <col:21> 'int' lvalue ParmVar 0x1e90410 'model' 'int'
|   |-BinaryOperator 0x1e90998 <line:498:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0x1e90880 <col:5> 'UINT64':'unsigned long long' lvalue Var 0x1e905e8 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0x1e90980 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0x1e90968 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0x1e90940 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0x1e90928 <col:22> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x1e908f8 <col:22> 'const volatile void *' lvalue ParmVar 0x1e90390 'mem' 'const volatile void *'
|   |-CallExpr 0x1e90a30 <line:499:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1e90a18 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e909b8 <col:5> 'void (void *, int)' Function 0x1e8ecf8 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x1e90a60 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1e909d8 <col:16> 'void *' lvalue Var 0x1e90680 'memP' 'void *'
|   | `-ImplicitCastExpr 0x1e90a78 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1e909f8 <col:22> 'int' lvalue ParmVar 0x1e90410 'model' 'int'
|   `-ReturnStmt 0x1e90ac8 <line:500:5, col:12>
|     `-ImplicitCastExpr 0x1e90ab0 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x1e90a90 <col:12> 'UINT64':'unsigned long long' lvalue Var 0x1e905e8 'ret' 'UINT64':'unsigned long long'
|-FunctionDecl 0x1e90d48 <line:503:1, line:509:1> line:503:20 __atomic_store_8 'void (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0x1e90b30 <col:37, col:52> col:52 used mem 'volatile void *'
| |-ParmVarDecl 0x1e90ba8 <col:57, col:64> col:64 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x1e90c28 <col:69, col:73> col:73 used model 'int'
| `-CompoundStmt 0x1e911a0 <line:504:1, line:509:1>
|   |-DeclStmt 0x1e90ef8 <line:505:5, col:29>
|   | `-VarDecl 0x1e90e18 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x1e90ed0 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x1e90eb8 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1e90e80 <col:26> 'volatile void *' lvalue ParmVar 0x1e90b30 'mem' 'volatile void *'
|   |-CallExpr 0x1e90f88 <line:506:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x1e90f70 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e90f10 <col:5> 'void (void *, int)' Function 0x1e8e4e8 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x1e90fb8 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1e90f30 <col:15> 'void *' lvalue Var 0x1e90e18 'memP' 'void *'
|   | `-ImplicitCastExpr 0x1e90fd0 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1e90f50 <col:21> 'int' lvalue ParmVar 0x1e90c28 'model' 'int'
|   |-BinaryOperator 0x1e910a8 <line:507:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0x1e91058 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0x1e91030 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0x1e91018 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x1e90fe8 <col:16> 'volatile void *' lvalue ParmVar 0x1e90b30 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0x1e91090 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1e91070 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0x1e90ba8 'val' 'UINT64':'unsigned long long'
|   `-CallExpr 0x1e91140 <line:508:5, col:27> 'void'
|     |-ImplicitCastExpr 0x1e91128 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1e910c8 <col:5> 'void (void *, int)' Function 0x1e8ecf8 'free_lock' 'void (void *, int)'
|     |-ImplicitCastExpr 0x1e91170 <col:16> 'void *' <LValueToRValue>
|     | `-DeclRefExpr 0x1e910e8 <col:16> 'void *' lvalue Var 0x1e90e18 'memP' 'void *'
|     `-ImplicitCastExpr 0x1e91188 <col:22> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1e91108 <col:22> 'int' lvalue ParmVar 0x1e90c28 'model' 'int'
|-FunctionDecl 0x1e91418 <line:511:1, line:521:1> line:511:22 __atomic_exchange_8 'UINT64 (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0x1e911e8 <col:42, col:57> col:57 used mem 'volatile void *'
| |-ParmVarDecl 0x1e91260 <col:62, col:69> col:69 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x1e912e0 <col:74, col:78> col:78 used model 'int'
| `-CompoundStmt 0x1e91c08 <line:512:1, line:521:1>
|   |-DeclStmt 0x1e91548 <line:513:5, col:15>
|   | `-VarDecl 0x1e914e0 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0x1e91658 <line:515:5, col:29>
|   | `-VarDecl 0x1e91578 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x1e91630 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x1e91618 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1e915e0 <col:26> 'volatile void *' lvalue ParmVar 0x1e911e8 'mem' 'volatile void *'
|   |-CallExpr 0x1e916e8 <line:516:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x1e916d0 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e91670 <col:5> 'void (void *, int)' Function 0x1e8e4e8 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x1e91718 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1e91690 <col:15> 'void *' lvalue Var 0x1e91578 'memP' 'void *'
|   | `-ImplicitCastExpr 0x1e91730 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1e916b0 <col:21> 'int' lvalue ParmVar 0x1e912e0 'model' 'int'
|   |-BinaryOperator 0x1e91808 <line:517:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0x1e91748 <col:5> 'UINT64':'unsigned long long' lvalue Var 0x1e914e0 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0x1e917f0 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0x1e917d8 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0x1e917b0 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0x1e91798 <col:22> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x1e91768 <col:22> 'volatile void *' lvalue ParmVar 0x1e911e8 'mem' 'volatile void *'
|   |-BinaryOperator 0x1e918e8 <line:518:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0x1e91898 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0x1e91870 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0x1e91858 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x1e91828 <col:16> 'volatile void *' lvalue ParmVar 0x1e911e8 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0x1e918d0 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1e918b0 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0x1e91260 'val' 'UINT64':'unsigned long long'
|   |-CallExpr 0x1e91980 <line:519:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1e91968 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e91908 <col:5> 'void (void *, int)' Function 0x1e8ecf8 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x1e919b0 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1e91928 <col:16> 'void *' lvalue Var 0x1e91578 'memP' 'void *'
|   | `-ImplicitCastExpr 0x1e919c8 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1e91948 <col:22> 'int' lvalue ParmVar 0x1e912e0 'model' 'int'
|   `-ReturnStmt 0x1e91a18 <line:520:5, col:12>
|     `-ImplicitCastExpr 0x1e91a00 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x1e919e0 <col:12> 'UINT64':'unsigned long long' lvalue Var 0x1e914e0 'ret' 'UINT64':'unsigned long long'
|-TypedefDecl 0x1e92100 <main/los_error.h:130:1, line:134:51> line:130:16 referenced LOS_ERRORHANDLE_FUNC 'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
| |-PointerType 0x1e92080 'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
| | `-ParenType 0x1e92020 'void (CHAR *, UINT32, UINT32, UINT32, void *)' sugar
| |   `-FunctionProtoType 0x1e91fd0 'void (CHAR *, UINT32, UINT32, UINT32, void *)' cdecl
| |     |-BuiltinType 0x1e1bda0 'void'
| |     |-PointerType 0x1e91c70 'CHAR *'
| |     | `-TypedefType 0x1e91c50 'CHAR' sugar
| |     |   |-Typedef 0x1e7fce8 'CHAR'
| |     |   `-BuiltinType 0x1e1bde0 'char'
| |     |-TypedefType 0x1e80120 'UINT32' sugar
| |     | |-Typedef 0x1e7fa50 'UINT32'
| |     | `-BuiltinType 0x1e1bee0 'unsigned int'
| |     |-TypedefType 0x1e80120 'UINT32' sugar
| |     | |-Typedef 0x1e7fa50 'UINT32'
| |     | `-BuiltinType 0x1e1bee0 'unsigned int'
| |     |-TypedefType 0x1e80120 'UINT32' sugar
| |     | |-Typedef 0x1e7fa50 'UINT32'
| |     | `-BuiltinType 0x1e1bee0 'unsigned int'
| |     `-PointerType 0x1e1c560 'void *'
| |       `-BuiltinType 0x1e1bda0 'void'
| `-FullComment 0x1e9c2e0 <line:109:3, line:128:13>
|   |-ParagraphComment 0x1e99960 <line:109:3>
|   | `-TextComment 0x1e99930 <col:3> Text=" "
|   |-VerbatimLineComment 0x1e99980 <col:4, col:20> Text=" los_err"
|   |-ParagraphComment 0x1e999f0 <line:110:3>
|   | `-TextComment 0x1e999c0 <col:3> Text=" "
|   |-BlockCommandComment 0x1e99a10 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0x1e99a70 <col:10, col:60>
|   |   `-TextComment 0x1e99a40 <col:10, col:60> Text=" Define the pointer to the error handling function."
|   |-ParagraphComment 0x1e99ac0 <line:112:3>
|   | `-TextComment 0x1e99a90 <col:3> Text=" "
|   |-BlockCommandComment 0x1e99ae0 <col:4, line:114:3> Name="par"
|   | `-ParagraphComment 0x1e99b90 <line:112:8, line:114:3>
|   |   |-TextComment 0x1e99b10 <line:112:8, col:20> Text=" Description:"
|   |   |-TextComment 0x1e99b30 <line:113:3, col:73> Text=" This API is used to define the pointer to the error handling function."
|   |   `-TextComment 0x1e99b50 <line:114:3> Text=" "
|   |-BlockCommandComment 0x1e99bb0 <col:4, line:117:8> Name="attention"
|   | `-ParagraphComment 0x1e99d80 <line:115:3, line:117:8>
|   |   |-TextComment 0x1e99be0 <line:115:3> Text=" "
|   |   |-HTMLStartTagComment 0x1e99c00 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1e99c40 <line:116:3> Text=" "
|   |   |-HTMLStartTagComment 0x1e99c60 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1e99ca0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x1e99cc0 <col:13, col:17> Name="li"
|   |   |-TextComment 0x1e99cf0 <line:117:3> Text=" "
|   |   `-HTMLEndTagComment 0x1e99d10 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1e99dd0 <line:119:3>
|   | `-TextComment 0x1e99da0 <col:3> Text=" "
|   |-ParamCommandComment 0x1e99df0 <col:4, line:120:3> [in] implicitly Param="fileName" ParamIndex=0
|   | `-ParagraphComment 0x1e99ea0 <line:119:20, line:120:3>
|   |   |-TextComment 0x1e99e50 <line:119:20, col:65> Text="  [IN] Log file that stores error information."
|   |   `-TextComment 0x1e99e70 <line:120:3> Text=" "
|   |-ParamCommandComment 0x1e99ec0 <col:4, line:121:3> [in] implicitly Param="lineNo" ParamIndex=1
|   | `-ParagraphComment 0x1e9bc80 <line:120:18, line:121:3>
|   |   |-TextComment 0x1e99f20 <line:120:18, col:60> Text="    [IN] Line number of the erroneous line."
|   |   `-TextComment 0x1e9bc50 <line:121:3> Text=" "
|   |-ParamCommandComment 0x1e9bca0 <col:4, line:122:3> [in] implicitly Param="errorNo" ParamIndex=2
|   | `-ParagraphComment 0x1e9bd50 <line:121:19, line:122:3>
|   |   |-TextComment 0x1e9bd00 <line:121:19, col:37> Text="   [IN] Error code."
|   |   `-TextComment 0x1e9bd20 <line:122:3> Text=" "
|   |-ParamCommandComment 0x1e9bd70 <col:4, line:123:3> [in] implicitly Param="paraLen" ParamIndex=3
|   | `-ParagraphComment 0x1e9be20 <line:122:19, line:123:3>
|   |   |-TextComment 0x1e9bdd0 <line:122:19, col:62> Text="   [IN] Length of the input parameter pPara."
|   |   `-TextComment 0x1e9bdf0 <line:123:3> Text=" "
|   |-ParamCommandComment 0x1e9be40 <col:4, col:50> [in] implicitly Param="para" ParamIndex=4
|   | `-ParagraphComment 0x1e9bed0 <col:16, col:50>
|   |   `-TextComment 0x1e9bea0 <col:16, col:50> Text="      [IN] User label of the error."
|   |-ParagraphComment 0x1e9bf20 <line:125:3>
|   | `-TextComment 0x1e9bef0 <col:3> Text=" "
|   |-BlockCommandComment 0x1e9bf40 <col:4, line:126:3> Name="retval"
|   | `-ParagraphComment 0x1e9bfc0 <line:125:11, line:126:3>
|   |   |-TextComment 0x1e9bf70 <line:125:11, col:16> Text=" None."
|   |   `-TextComment 0x1e9bf90 <line:126:3> Text=" "
|   |-BlockCommandComment 0x1e9bfe0 <col:4, line:128:3> Name="par"
|   | `-ParagraphComment 0x1e9c1b0 <line:126:8, line:128:3>
|   |   |-TextComment 0x1e9c010 <line:126:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1e9c030 <line:127:3> Text=" "
|   |   |-HTMLStartTagComment 0x1e9c050 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1e9c090 <col:8, col:11> Name="li"
|   |   |-TextComment 0x1e9c0d0 <col:12, col:72> Text="los_err.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1e9c0f0 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x1e9c120 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x1e9c150 <line:128:3> Text=" "
|   `-BlockCommandComment 0x1e9c1d0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x1e9c230 <col:8, col:13>
|       `-TextComment 0x1e9c200 <col:8, col:13> Text=" None."
|-FunctionDecl 0x1e94a28 <line:158:1, line:160:39> line:158:15 LOS_ErrHandle 'UINT32 (CHAR *, UINT32, UINT32, UINT32, void *)' extern
| |-ParmVarDecl 0x1e92198 <col:29, col:35> col:35 fileName 'CHAR *'
| |-ParmVarDecl 0x1e92210 <col:45, col:52> col:52 lineNo 'UINT32':'unsigned int'
| |-ParmVarDecl 0x1e92288 <line:159:29, col:36> col:36 errorNo 'UINT32':'unsigned int'
| |-ParmVarDecl 0x1e94850 <col:45, col:52> col:52 paraLen 'UINT32':'unsigned int'
| |-ParmVarDecl 0x1e948d0 <main/los_compiler.h:327:23, main/los_error.h:160:35> col:35 para 'void *'
| `-FullComment 0x1e9d000 <line:137:3, line:156:12>
|   |-ParagraphComment 0x1e9c380 <line:137:3>
|   | `-TextComment 0x1e9c350 <col:3> Text=" "
|   |-VerbatimLineComment 0x1e9c3a0 <col:4, col:20> Text=" los_err"
|   |-ParagraphComment 0x1e9c410 <line:138:3>
|   | `-TextComment 0x1e9c3e0 <col:3> Text=" "
|   |-BlockCommandComment 0x1e9c430 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0x1e9c490 <col:10, col:34>
|   |   `-TextComment 0x1e9c460 <col:10, col:34> Text=" Error handling function."
|   |-ParagraphComment 0x1e9c4e0 <line:140:3>
|   | `-TextComment 0x1e9c4b0 <col:3> Text=" "
|   |-BlockCommandComment 0x1e9c500 <col:4, line:142:3> Name="par"
|   | `-ParagraphComment 0x1e9c5b0 <line:140:8, line:142:3>
|   |   |-TextComment 0x1e9c530 <line:140:8, col:20> Text=" Description:"
|   |   |-TextComment 0x1e9c550 <line:141:3, col:77> Text=" This API is used to perform different operations according to error types."
|   |   `-TextComment 0x1e9c570 <line:142:3> Text=" "
|   |-BlockCommandComment 0x1e9c5d0 <col:4, line:145:8> Name="attention"
|   | `-ParagraphComment 0x1e9c7a0 <line:143:3, line:145:8>
|   |   |-TextComment 0x1e9c600 <line:143:3> Text=" "
|   |   |-HTMLStartTagComment 0x1e9c620 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1e9c660 <line:144:3> Text=" "
|   |   |-HTMLStartTagComment 0x1e9c680 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1e9c6c0 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0x1e9c6e0 <col:12, col:16> Name="li"
|   |   |-TextComment 0x1e9c710 <line:145:3> Text=" "
|   |   `-HTMLEndTagComment 0x1e9c730 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1e9c7f0 <line:147:3>
|   | `-TextComment 0x1e9c7c0 <col:3> Text=" "
|   |-ParamCommandComment 0x1e9c810 <col:4, line:148:3> [in] implicitly Param="fileName" ParamIndex=0
|   | `-ParagraphComment 0x1e9c8c0 <line:147:20, line:148:3>
|   |   |-TextComment 0x1e9c870 <line:147:20, col:65> Text="  [IN] Log file that stores error information."
|   |   `-TextComment 0x1e9c890 <line:148:3> Text=" "
|   |-ParamCommandComment 0x1e9c8e0 <col:4, line:149:3> [in] implicitly Param="lineNo" ParamIndex=1
|   | `-ParagraphComment 0x1e9c990 <line:148:18, line:149:3>
|   |   |-TextComment 0x1e9c940 <line:148:18, col:98> Text="    [IN] Line number of the erroneous line which should not be OS_ERR_MAGIC_WORD."
|   |   `-TextComment 0x1e9c960 <line:149:3> Text=" "
|   |-ParamCommandComment 0x1e9c9b0 <col:4, line:150:3> [in] implicitly Param="errorNo" ParamIndex=2
|   | `-ParagraphComment 0x1e9ca60 <line:149:19, line:150:3>
|   |   |-TextComment 0x1e9ca10 <line:149:19, col:37> Text="   [IN] Error code."
|   |   `-TextComment 0x1e9ca30 <line:150:3> Text=" "
|   |-ParamCommandComment 0x1e9ca80 <col:4, line:151:3> [in] implicitly Param="paraLen" ParamIndex=3
|   | `-ParagraphComment 0x1e9cb30 <line:150:19, line:151:3>
|   |   |-TextComment 0x1e9cae0 <line:150:19, col:62> Text="   [IN] Length of the input parameter pPara."
|   |   `-TextComment 0x1e9cb00 <line:151:3> Text=" "
|   |-ParamCommandComment 0x1e9cb50 <col:4, col:50> [in] implicitly Param="para" ParamIndex=4
|   | `-ParagraphComment 0x1e9cbe0 <col:16, col:50>
|   |   `-TextComment 0x1e9cbb0 <col:16, col:50> Text="      [IN] User label of the error."
|   |-ParagraphComment 0x1e9cc30 <line:153:3>
|   | `-TextComment 0x1e9cc00 <col:3> Text=" "
|   |-BlockCommandComment 0x1e9cc60 <col:4, line:154:3> Name="retval"
|   | `-ParagraphComment 0x1e9cce0 <line:153:11, line:154:3>
|   |   |-TextComment 0x1e9cc90 <line:153:11, col:54> Text=" LOS_OK The error is successfully processed."
|   |   `-TextComment 0x1e9ccb0 <line:154:3> Text=" "
|   |-BlockCommandComment 0x1e9cd00 <col:4, line:156:3> Name="par"
|   | `-ParagraphComment 0x1e9ced0 <line:154:8, line:156:3>
|   |   |-TextComment 0x1e9cd30 <line:154:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1e9cd50 <line:155:3> Text=" "
|   |   |-HTMLStartTagComment 0x1e9cd70 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1e9cdb0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x1e9cdf0 <col:12, col:72> Text="los_err.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1e9ce10 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x1e9ce40 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x1e9ce70 <line:156:3> Text=" "
|   `-BlockCommandComment 0x1e9cef0 <col:4, col:12> Name="see"
|     `-ParagraphComment 0x1e9cf50 <col:8, col:12>
|       `-TextComment 0x1e9cf20 <col:8, col:12> Text=" None"
|-RecordDecl 0x1e94b18 <line:166:9, line:168:1> line:166:16 struct tagUserErrFunc definition
| |-FullComment 0x1e9d170 <line:163:3, line:164:37>
| | |-ParagraphComment 0x1e9d0a0 <line:163:3>
| | | `-TextComment 0x1e9d070 <col:3> Text=" "
| | |-VerbatimLineComment 0x1e9d0c0 <col:4, col:20> Text=" los_err"
| | `-ParagraphComment 0x1e9d130 <line:164:3, col:37>
| |   `-TextComment 0x1e9d100 <col:3, col:37> Text=" Error handling function structure."
| `-FieldDecl 0x1e94bf0 <line:167:5, col:27> col:27 referenced pfnHook 'LOS_ERRORHANDLE_FUNC':'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
|   `-FullComment 0x1e9d240 <col:41, col:75>
|     `-ParagraphComment 0x1e9d210 <col:41, col:75>
|       `-TextComment 0x1e9d1e0 <col:41, col:75> Text=" Hook function for error handling. "
|-TypedefDecl 0x1e94cc8 <line:166:1, line:168:3> col:3 referenced UserErrFunc 'struct tagUserErrFunc':'struct tagUserErrFunc'
| |-ElaboratedType 0x1e94c70 'struct tagUserErrFunc' sugar
| | `-RecordType 0x1e94ba0 'struct tagUserErrFunc'
| |   `-Record 0x1e94b18 'tagUserErrFunc'
| `-FullComment 0x1e9d3b0 <line:163:3, line:164:37>
|   |-ParagraphComment 0x1e9d2e0 <line:163:3>
|   | `-TextComment 0x1e9d2b0 <col:3> Text=" "
|   |-VerbatimLineComment 0x1e9d300 <col:4, col:20> Text=" los_err"
|   `-ParagraphComment 0x1e9d370 <line:164:3, col:37>
|     `-TextComment 0x1e9d340 <col:3, col:37> Text=" Error handling function structure."
|-EnumDecl 0x1e94d38 <line:171:1, line:207:1> line:171:6 LOS_MODULE_ID
| |-EnumConstantDecl 0x1e94e38 <line:172:5, col:32> col:5 LOS_MOD_SYS 'int'
| | `-ConstantExpr 0x1e94e20 <col:32> 'int'
| |   `-IntegerLiteral 0x1e94e00 <col:32> 'int' 0
| |-EnumConstantDecl 0x1e94ec0 <line:173:5, col:32> col:5 LOS_MOD_MEM 'int'
| | `-ConstantExpr 0x1e94ea8 <col:32> 'int'
| |   `-IntegerLiteral 0x1e94e88 <col:32> 'int' 1
| |-EnumConstantDecl 0x1e94f48 <line:174:5, col:32> col:5 LOS_MOD_TSK 'int'
| | `-ConstantExpr 0x1e94f30 <col:32> 'int'
| |   `-IntegerLiteral 0x1e94f10 <col:32> 'int' 2
| |-EnumConstantDecl 0x1e94fd0 <line:175:5, col:32> col:5 LOS_MOD_SWTMR 'int'
| | `-ConstantExpr 0x1e94fb8 <col:32> 'int'
| |   `-IntegerLiteral 0x1e94f98 <col:32> 'int' 3
| |-EnumConstantDecl 0x1e95058 <line:176:5, col:32> col:5 LOS_MOD_TICK 'int'
| | `-ConstantExpr 0x1e95040 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95020 <col:32> 'int' 4
| |-EnumConstantDecl 0x1e950e0 <line:177:5, col:32> col:5 LOS_MOD_MSG 'int'
| | `-ConstantExpr 0x1e950c8 <col:32> 'int'
| |   `-IntegerLiteral 0x1e950a8 <col:32> 'int' 5
| |-EnumConstantDecl 0x1e95168 <line:178:5, col:32> col:5 LOS_MOD_QUE 'int'
| | `-ConstantExpr 0x1e95150 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95130 <col:32> 'int' 6
| |-EnumConstantDecl 0x1e951f0 <line:179:5, col:32> col:5 LOS_MOD_SEM 'int'
| | `-ConstantExpr 0x1e951d8 <col:32> 'int'
| |   `-IntegerLiteral 0x1e951b8 <col:32> 'int' 7
| |-EnumConstantDecl 0x1e95278 <line:180:5, col:32> col:5 LOS_MOD_MBOX 'int'
| | `-ConstantExpr 0x1e95260 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95240 <col:32> 'int' 8
| |-EnumConstantDecl 0x1e95300 <line:181:5, col:32> col:5 LOS_MOD_HWI 'int'
| | `-ConstantExpr 0x1e952e8 <col:32> 'int'
| |   `-IntegerLiteral 0x1e952c8 <col:32> 'int' 9
| |-EnumConstantDecl 0x1e95388 <line:182:5, col:32> col:5 LOS_MOD_HWWDG 'int'
| | `-ConstantExpr 0x1e95370 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95350 <col:32> 'int' 10
| |-EnumConstantDecl 0x1e95410 <line:183:5, col:32> col:5 LOS_MOD_CACHE 'int'
| | `-ConstantExpr 0x1e953f8 <col:32> 'int'
| |   `-IntegerLiteral 0x1e953d8 <col:32> 'int' 11
| |-EnumConstantDecl 0x1e95498 <line:184:5, col:32> col:5 LOS_MOD_HWTMR 'int'
| | `-ConstantExpr 0x1e95480 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95460 <col:32> 'int' 12
| |-EnumConstantDecl 0x1e95520 <line:185:5, col:32> col:5 LOS_MOD_MMU 'int'
| | `-ConstantExpr 0x1e95508 <col:32> 'int'
| |   `-IntegerLiteral 0x1e954e8 <col:32> 'int' 13
| |-EnumConstantDecl 0x1e955a8 <line:187:5, col:32> col:5 LOS_MOD_LOG 'int'
| | `-ConstantExpr 0x1e95590 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95570 <col:32> 'int' 14
| |-EnumConstantDecl 0x1e95630 <line:188:5, col:32> col:5 LOS_MOD_ERR 'int'
| | `-ConstantExpr 0x1e95618 <col:32> 'int'
| |   `-IntegerLiteral 0x1e955f8 <col:32> 'int' 15
| |-EnumConstantDecl 0x1e956b8 <line:190:5, col:32> col:5 LOS_MOD_EXC 'int'
| | `-ConstantExpr 0x1e956a0 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95680 <col:32> 'int' 16
| |-EnumConstantDecl 0x1e95740 <line:191:5, col:32> col:5 LOS_MOD_CSTK 'int'
| | `-ConstantExpr 0x1e95728 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95708 <col:32> 'int' 17
| |-EnumConstantDecl 0x1e957c8 <line:193:5, col:32> col:5 LOS_MOD_MPU 'int'
| | `-ConstantExpr 0x1e957b0 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95790 <col:32> 'int' 18
| |-EnumConstantDecl 0x1e958e0 <line:194:5, col:32> col:5 LOS_MOD_NMHWI 'int'
| | `-ConstantExpr 0x1e95838 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95818 <col:32> 'int' 19
| |-EnumConstantDecl 0x1e95968 <line:195:5, col:32> col:5 LOS_MOD_TRACE 'int'
| | `-ConstantExpr 0x1e95950 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95930 <col:32> 'int' 20
| |-EnumConstantDecl 0x1e959f0 <line:196:5, col:32> col:5 LOS_MOD_IPC 'int'
| | `-ConstantExpr 0x1e959d8 <col:32> 'int'
| |   `-IntegerLiteral 0x1e959b8 <col:32> 'int' 24
| |-EnumConstantDecl 0x1e95a78 <line:197:5, col:32> col:5 LOS_MOD_TIMER 'int'
| | `-ConstantExpr 0x1e95a60 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95a40 <col:32> 'int' 26
| |-EnumConstantDecl 0x1e95b00 <line:198:5, col:32> col:5 LOS_MOD_EVENT 'int'
| | `-ConstantExpr 0x1e95ae8 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95ac8 <col:32> 'int' 28
| |-EnumConstantDecl 0x1e95b88 <line:199:5, col:32> col:5 LOS_MOD_MUX 'int'
| | `-ConstantExpr 0x1e95b70 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95b50 <col:32> 'int' 29
| |-EnumConstantDecl 0x1e95c10 <line:200:5, col:32> col:5 LOS_MOD_CPUP 'int'
| | `-ConstantExpr 0x1e95bf8 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95bd8 <col:32> 'int' 30
| |-EnumConstantDecl 0x1e95c98 <line:201:5, col:32> col:5 LOS_MOD_HOOK 'int'
| | `-ConstantExpr 0x1e95c80 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95c60 <col:32> 'int' 31
| |-EnumConstantDecl 0x1e95d20 <line:202:5, col:32> col:5 LOS_MOD_PM 'int'
| | `-ConstantExpr 0x1e95d08 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95ce8 <col:32> 'int' 32
| |-EnumConstantDecl 0x1e95da8 <line:203:5, col:32> col:5 LOS_MOD_LMK 'int'
| | `-ConstantExpr 0x1e95d90 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95d70 <col:32> 'int' 33
| |-EnumConstantDecl 0x1e95e30 <line:204:5, col:32> col:5 LOS_MOD_SHELL 'int'
| | `-ConstantExpr 0x1e95e18 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95df8 <col:32> 'int' 49
| |-EnumConstantDecl 0x1e95eb8 <line:205:5, col:32> col:5 LOS_MOD_SIGNAL 'int'
| | `-ConstantExpr 0x1e95ea0 <col:32> 'int'
| |   `-IntegerLiteral 0x1e95e80 <col:32> 'int' 50
| `-EnumConstantDecl 0x1e95f08 <line:206:5> col:5 LOS_MOD_BUTT 'int'
|-VarDecl 0x1e96050 <main/los_error.c:35:17, col:34> col:34 used g_userErrFunc 'UserErrFunc':'struct tagUserErrFunc'
`-FunctionDecl 0x1e96390 prev 0x1e94a28 <line:49:23, line:60:1> line:49:30 LOS_ErrHandle 'UINT32 (CHAR *, UINT32, UINT32, UINT32, void *)'
  |-ParmVarDecl 0x1e960f8 <col:44, col:51> col:51 used fileName 'CHAR *'
  |-ParmVarDecl 0x1e96170 <line:50:44, col:51> col:51 used lineNo 'UINT32':'unsigned int'
  |-ParmVarDecl 0x1e961e8 <line:51:44, col:51> col:51 used errorNo 'UINT32':'unsigned int'
  |-ParmVarDecl 0x1e96260 <line:52:44, col:51> col:51 used paraLen 'UINT32':'unsigned int'
  |-ParmVarDecl 0x1e962e0 <main/los_compiler.h:327:23, main/los_error.c:53:51> col:51 used para 'void *'
  |-CompoundStmt 0x1e967f0 <line:54:1, line:60:1>
  | |-IfStmt 0x1e967a8 <line:55:5, line:57:5>
  | | |-BinaryOperator 0x1e96558 <line:55:9, main/los_compiler.h:341:32> 'int' '!='
  | | | |-ImplicitCastExpr 0x1e96528 <main/los_error.c:55:9, col:23> 'LOS_ERRORHANDLE_FUNC':'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)' <LValueToRValue>
  | | | | `-MemberExpr 0x1e96478 <col:9, col:23> 'LOS_ERRORHANDLE_FUNC':'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)' lvalue .pfnHook 0x1e94bf0
  | | | |   `-DeclRefExpr 0x1e96458 <col:9> 'UserErrFunc':'struct tagUserErrFunc' lvalue Var 0x1e96050 'g_userErrFunc' 'UserErrFunc':'struct tagUserErrFunc'
  | | | `-ImplicitCastExpr 0x1e96540 <main/los_compiler.h:341:23, col:32> 'LOS_ERRORHANDLE_FUNC':'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)' <BitCast>
  | | |   `-ParenExpr 0x1e96508 <col:23, col:32> 'void *'
  | | |     `-CStyleCastExpr 0x1e964e0 <col:24, col:31> 'void *' <NullToPointer>
  | | |       `-IntegerLiteral 0x1e964a8 <col:31> 'int' 0
  | | `-CompoundStmt 0x1e96790 <main/los_error.c:55:40, line:57:5>
  | |   `-CallExpr 0x1e966d0 <line:56:9, col:71> 'void'
  | |     |-ImplicitCastExpr 0x1e966b8 <col:9, col:23> 'LOS_ERRORHANDLE_FUNC':'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)' <LValueToRValue>
  | |     | `-MemberExpr 0x1e965e8 <col:9, col:23> 'LOS_ERRORHANDLE_FUNC':'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)' lvalue .pfnHook 0x1e94bf0
  | |     |   `-DeclRefExpr 0x1e965c8 <col:9> 'UserErrFunc':'struct tagUserErrFunc' lvalue Var 0x1e96050 'g_userErrFunc' 'UserErrFunc':'struct tagUserErrFunc'
  | |     |-ImplicitCastExpr 0x1e96718 <col:31> 'CHAR *' <LValueToRValue>
  | |     | `-DeclRefExpr 0x1e96618 <col:31> 'CHAR *' lvalue ParmVar 0x1e960f8 'fileName' 'CHAR *'
  | |     |-ImplicitCastExpr 0x1e96730 <col:41> 'UINT32':'unsigned int' <LValueToRValue>
  | |     | `-DeclRefExpr 0x1e96638 <col:41> 'UINT32':'unsigned int' lvalue ParmVar 0x1e96170 'lineNo' 'UINT32':'unsigned int'
  | |     |-ImplicitCastExpr 0x1e96748 <col:49> 'UINT32':'unsigned int' <LValueToRValue>
  | |     | `-DeclRefExpr 0x1e96658 <col:49> 'UINT32':'unsigned int' lvalue ParmVar 0x1e961e8 'errorNo' 'UINT32':'unsigned int'
  | |     |-ImplicitCastExpr 0x1e96760 <col:58> 'UINT32':'unsigned int' <LValueToRValue>
  | |     | `-DeclRefExpr 0x1e96678 <col:58> 'UINT32':'unsigned int' lvalue ParmVar 0x1e96260 'paraLen' 'UINT32':'unsigned int'
  | |     `-ImplicitCastExpr 0x1e96778 <col:67> 'void *' <LValueToRValue>
  | |       `-DeclRefExpr 0x1e96698 <col:67> 'void *' lvalue ParmVar 0x1e962e0 'para' 'void *'
  | `-ReturnStmt 0x1e967e0 <line:59:5, main/los_compiler.h:350:23>
  |   `-IntegerLiteral 0x1e967c0 <col:23> 'unsigned int' 0
  `-FullComment 0x1e9d630 <main/los_error.c:37:4, line:48:76>
    `-ParagraphComment 0x1e9d600 <line:37:4, line:48:76>
      |-TextComment 0x1e9d420 <line:37:4, col:78> Text="***************************************************************************"
      |-TextComment 0x1e9d440 <line:38:1, col:27> Text="Function    : LOS_ErrHandle"
      |-TextComment 0x1e9d460 <line:39:1, col:26> Text="Description : Error handle"
      |-TextComment 0x1e9d480 <line:40:1, col:36> Text="Input       : fileName  -- file name"
      |-TextComment 0x1e9d4a0 <line:41:1, col:44> Text="              lineNo    -- error line number"
      |-TextComment 0x1e9d4c0 <line:42:1, col:52> Text="              errorNo   -- user defined error number"
      |-TextComment 0x1e9d4e0 <line:43:1, col:42> Text="              paraLen   -- length of pPara"
      |-TextComment 0x1e9d500 <line:44:1, col:52> Text="              para      -- user description of error"
      |-TextComment 0x1e9d520 <line:45:1, col:18> Text="Output      : None"
      |-TextComment 0x1e9d540 <line:46:1, col:27> Text="Return      : LOS_OK always"
      |-TextComment 0x1e9d560 <line:47:1, col:18> Text="Other       : None"
      `-TextComment 0x1e9d580 <line:48:2, col:76> Text="***************************************************************************"

TranslationUnitDecl 0x883a08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x8842a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x883fa0 '__int128'
|-TypedefDecl 0x884310 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x883fc0 'unsigned __int128'
|-TypedefDecl 0x884618 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x8843f0 'struct __NSConstantString_tag'
|   `-Record 0x884368 '__NSConstantString_tag'
|-TypedefDecl 0x8846b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x884670 'char *'
|   `-BuiltinType 0x883aa0 'char'
|-TypedefDecl 0x8849a8 <<invalid sloc>> <invalid sloc> implicit referenced __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x884950 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x884790 'struct __va_list_tag'
|     `-Record 0x884708 '__va_list_tag'
|-TypedefDecl 0x8fb278 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:46:1, col:23> col:23 referenced size_t 'unsigned long'
| `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x8fb300 </usr/lib/llvm-10/lib/clang/10.0.0/include/stdarg.h:14:1, col:27> col:27 va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0x8fb2d0 '__builtin_va_list' sugar
|   |-Typedef 0x8849a8 '__builtin_va_list'
|   `-ConstantArrayType 0x884950 'struct __va_list_tag [1]' 1 
|     `-RecordType 0x884790 'struct __va_list_tag'
|       `-Record 0x884708 '__va_list_tag'
|-TypedefDecl 0x8fb368 <line:32:1, col:27> col:27 referenced __gnuc_va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0x8fb2d0 '__builtin_va_list' sugar
|   |-Typedef 0x8849a8 '__builtin_va_list'
|   `-ConstantArrayType 0x884950 'struct __va_list_tag [1]' 1 
|     `-RecordType 0x884790 'struct __va_list_tag'
|       `-Record 0x884708 '__va_list_tag'
|-TypedefDecl 0x8fb3d8 </usr/include/x86_64-linux-gnu/bits/types.h:31:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x883b60 'unsigned char'
|-TypedefDecl 0x8fb448 <line:32:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x883b80 'unsigned short'
|-TypedefDecl 0x8fb4b8 <line:33:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x883ba0 'unsigned int'
|-TypedefDecl 0x8fb528 <line:34:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x8fb598 <line:37:1, col:21> col:21 referenced __int8_t 'signed char'
| `-BuiltinType 0x883ac0 'signed char'
|-TypedefDecl 0x8fb608 <line:38:1, col:23> col:23 referenced __uint8_t 'unsigned char'
| `-BuiltinType 0x883b60 'unsigned char'
|-TypedefDecl 0x8fb678 <line:39:1, col:26> col:26 referenced __int16_t 'short'
| `-BuiltinType 0x883ae0 'short'
|-TypedefDecl 0x8fb6e8 <line:40:1, col:28> col:28 referenced __uint16_t 'unsigned short'
| `-BuiltinType 0x883b80 'unsigned short'
|-TypedefDecl 0x8fb758 <line:41:1, col:20> col:20 referenced __int32_t 'int'
| `-BuiltinType 0x883b00 'int'
|-TypedefDecl 0x8fb7c8 <line:42:1, col:22> col:22 referenced __uint32_t 'unsigned int'
| `-BuiltinType 0x883ba0 'unsigned int'
|-TypedefDecl 0x8fb838 <line:44:1, col:25> col:25 referenced __int64_t 'long'
| `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x8fb8a8 <line:45:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x8fb930 <line:52:1, col:18> col:18 __int_least8_t '__int8_t':'signed char'
| `-TypedefType 0x8fb900 '__int8_t' sugar
|   |-Typedef 0x8fb598 '__int8_t'
|   `-BuiltinType 0x883ac0 'signed char'
|-TypedefDecl 0x8fb9c0 <line:53:1, col:19> col:19 __uint_least8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x8fb990 '__uint8_t' sugar
|   |-Typedef 0x8fb608 '__uint8_t'
|   `-BuiltinType 0x883b60 'unsigned char'
|-TypedefDecl 0x8fba50 <line:54:1, col:19> col:19 __int_least16_t '__int16_t':'short'
| `-TypedefType 0x8fba20 '__int16_t' sugar
|   |-Typedef 0x8fb678 '__int16_t'
|   `-BuiltinType 0x883ae0 'short'
|-TypedefDecl 0x8fbae0 <line:55:1, col:20> col:20 __uint_least16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x8fbab0 '__uint16_t' sugar
|   |-Typedef 0x8fb6e8 '__uint16_t'
|   `-BuiltinType 0x883b80 'unsigned short'
|-TypedefDecl 0x8fbb70 <line:56:1, col:19> col:19 __int_least32_t '__int32_t':'int'
| `-TypedefType 0x8fbb40 '__int32_t' sugar
|   |-Typedef 0x8fb758 '__int32_t'
|   `-BuiltinType 0x883b00 'int'
|-TypedefDecl 0x8fbc00 <line:57:1, col:20> col:20 __uint_least32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x8fbbd0 '__uint32_t' sugar
|   |-Typedef 0x8fb7c8 '__uint32_t'
|   `-BuiltinType 0x883ba0 'unsigned int'
|-TypedefDecl 0x8fbc90 <line:58:1, col:19> col:19 __int_least64_t '__int64_t':'long'
| `-TypedefType 0x8fbc60 '__int64_t' sugar
|   |-Typedef 0x8fb838 '__int64_t'
|   `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x8fbd20 <line:59:1, col:20> col:20 __uint_least64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x8fbcf0 '__uint64_t' sugar
|   |-Typedef 0x8fb8a8 '__uint64_t'
|   `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x8fbd90 <line:63:1, col:18> col:18 __quad_t 'long'
| `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x8fbe00 <line:64:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x8fbe70 <line:72:1, col:18> col:18 __intmax_t 'long'
| `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x8fbee0 <line:73:1, col:27> col:27 __uintmax_t 'unsigned long'
| `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x8fbf50 <line:137:22, line:145:25> col:25 __dev_t 'unsigned long'
| `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x8fbfc0 <line:137:22, line:146:25> col:25 __uid_t 'unsigned int'
| `-BuiltinType 0x883ba0 'unsigned int'
|-TypedefDecl 0x8fc030 <line:137:22, line:147:25> col:25 __gid_t 'unsigned int'
| `-BuiltinType 0x883ba0 'unsigned int'
|-TypedefDecl 0x8fc0a0 <line:137:22, line:148:25> col:25 __ino_t 'unsigned long'
| `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x8fc110 <line:137:22, line:149:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x8fc180 <line:137:22, line:150:26> col:26 __mode_t 'unsigned int'
| `-BuiltinType 0x883ba0 'unsigned int'
|-TypedefDecl 0x8fc1f0 <line:137:22, line:151:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x907c40 <line:137:22, line:152:25> col:25 referenced __off_t 'long'
| `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x907cb0 <line:137:22, line:153:27> col:27 referenced __off64_t 'long'
| `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x907d20 <line:137:22, line:154:25> col:25 __pid_t 'int'
| `-BuiltinType 0x883b00 'int'
|-RecordDecl 0x907d78 </usr/include/x86_64-linux-gnu/bits/typesizes.h:72:24, col:47> col:24 struct definition
| `-FieldDecl 0x907ec0 <col:33, col:44> col:37 __val 'int [2]'
|-TypedefDecl 0x907f68 </usr/include/x86_64-linux-gnu/bits/types.h:137:22, line:155:26> col:26 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x907f10 'struct __fsid_t' sugar
|   `-RecordType 0x907e00 '__fsid_t'
|     `-Record 0x907d78 ''
|-TypedefDecl 0x907ff0 <line:137:22, line:156:27> col:27 __clock_t 'long'
| `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x908060 <line:137:22, line:157:26> col:26 __rlim_t 'unsigned long'
| `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x9080d0 <line:137:22, line:158:28> col:28 __rlim64_t 'unsigned long'
| `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x908140 <line:137:22, line:159:24> col:24 __id_t 'unsigned int'
| `-BuiltinType 0x883ba0 'unsigned int'
|-TypedefDecl 0x9081b0 <line:137:22, line:160:26> col:26 __time_t 'long'
| `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x908220 <line:137:22, line:161:30> col:30 __useconds_t 'unsigned int'
| `-BuiltinType 0x883ba0 'unsigned int'
|-TypedefDecl 0x908290 <line:137:22, line:162:31> col:31 __suseconds_t 'long'
| `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x908300 <line:137:22, line:164:27> col:27 __daddr_t 'int'
| `-BuiltinType 0x883b00 'int'
|-TypedefDecl 0x908370 <line:137:22, line:165:25> col:25 __key_t 'int'
| `-BuiltinType 0x883b00 'int'
|-TypedefDecl 0x9083e0 <line:137:22, line:168:29> col:29 __clockid_t 'int'
| `-BuiltinType 0x883b00 'int'
|-TypedefDecl 0x908450 <line:137:22, line:171:27> col:27 __timer_t 'void *'
| `-PointerType 0x884220 'void *'
|   `-BuiltinType 0x883a60 'void'
|-TypedefDecl 0x9084c0 <line:137:22, line:174:29> col:29 __blksize_t 'long'
| `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x908530 <line:137:22, line:179:28> col:28 __blkcnt_t 'long'
| `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x9085a0 <line:137:22, line:180:30> col:30 __blkcnt64_t 'long'
| `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x908610 <line:137:22, line:183:30> col:30 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x908680 <line:137:22, line:184:32> col:32 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x9086f0 <line:137:22, line:187:30> col:30 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x908760 <line:137:22, line:188:32> col:32 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x9087d0 <line:137:22, line:191:28> col:28 __fsword_t 'long'
| `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x908840 <line:137:22, line:193:27> col:27 referenced __ssize_t 'long'
| `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x9088b0 <line:137:22, line:196:33> col:33 __syscall_slong_t 'long'
| `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x908920 <line:137:22, line:198:33> col:33 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x883bc0 'unsigned long'
|-TypedefDecl 0x9089b0 <line:202:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x908980 '__off64_t' sugar
|   |-Typedef 0x907cb0 '__off64_t'
|   `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x908a20 <line:203:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x884670 'char *'
|   `-BuiltinType 0x883aa0 'char'
|-TypedefDecl 0x908a90 <line:137:22, line:206:25> col:25 __intptr_t 'long'
| `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x908b00 <line:137:22, line:209:23> col:23 __socklen_t 'unsigned int'
| `-BuiltinType 0x883ba0 'unsigned int'
|-TypedefDecl 0x908b70 <line:214:1, col:13> col:13 __sig_atomic_t 'int'
| `-BuiltinType 0x883b00 'int'
|-RecordDecl 0x90dc30 </usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:13:9, line:21:1> line:13:9 struct definition
| |-FieldDecl 0x90dce8 <line:15:3, col:7> col:7 __count 'int'
| |-RecordDecl 0x90dd38 <line:16:3, line:20:3> line:16:3 union definition
| | |-FieldDecl 0x90ddf8 <<built-in>:87:23, /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:18:19> col:19 __wch 'unsigned int'
| | `-FieldDecl 0x90ded8 <line:19:5, col:18> col:10 __wchb 'char [4]'
| `-FieldDecl 0x90df88 <line:16:3, line:20:5> col:5 __value 'union (anonymous union at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)':'union __mbstate_t::(anonymous at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)'
|-TypedefDecl 0x90e038 <line:13:1, line:21:3> col:3 referenced __mbstate_t 'struct __mbstate_t':'__mbstate_t'
| `-ElaboratedType 0x90dfe0 'struct __mbstate_t' sugar
|   `-RecordType 0x90dcb0 '__mbstate_t'
|     `-Record 0x90dc30 ''
|-RecordDecl 0x90e0a8 </usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h:10:9, line:14:1> line:10:16 struct _G_fpos_t definition
| |-FieldDecl 0x90e180 <line:12:3, col:11> col:11 __pos '__off_t':'long'
| `-FieldDecl 0x90e200 <line:13:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
|-TypedefDecl 0x90e2a8 <line:10:1, line:14:3> col:3 referenced __fpos_t 'struct _G_fpos_t':'struct _G_fpos_t'
| `-ElaboratedType 0x90e250 'struct _G_fpos_t' sugar
|   `-RecordType 0x90e130 'struct _G_fpos_t'
|     `-Record 0x90e0a8 '_G_fpos_t'
|-RecordDecl 0x90e318 </usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h:10:9, line:14:1> line:10:16 struct _G_fpos64_t definition
| |-FieldDecl 0x90e3d0 <line:12:3, col:13> col:13 __pos '__off64_t':'long'
| `-FieldDecl 0x90e430 <line:13:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
|-TypedefDecl 0x90e4d8 <line:10:1, line:14:3> col:3 __fpos64_t 'struct _G_fpos64_t':'struct _G_fpos64_t'
| `-ElaboratedType 0x90e480 'struct _G_fpos64_t' sugar
|   `-RecordType 0x90e3a0 'struct _G_fpos64_t'
|     `-Record 0x90e318 '_G_fpos64_t'
|-RecordDecl 0x90e548 </usr/include/x86_64-linux-gnu/bits/types/__FILE.h:4:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0x90e640 <line:5:1, col:25> col:25 __FILE 'struct _IO_FILE':'struct _IO_FILE'
| `-ElaboratedType 0x90e5f0 'struct _IO_FILE' sugar
|   `-RecordType 0x90e5d0 'struct _IO_FILE'
|     `-Record 0x90ea58 '_IO_FILE'
|-RecordDecl 0x90e698 prev 0x90e548 </usr/include/x86_64-linux-gnu/bits/types/FILE.h:4:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0x90e738 <line:7:1, col:25> col:25 referenced FILE 'struct _IO_FILE':'struct _IO_FILE'
| `-ElaboratedType 0x90e5f0 'struct _IO_FILE' sugar
|   `-RecordType 0x90e5d0 'struct _IO_FILE'
|     `-Record 0x90ea58 '_IO_FILE'
|-RecordDecl 0x90e790 prev 0x90e698 </usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h:35:1, col:8> col:8 struct _IO_FILE
|-RecordDecl 0x90e810 <line:36:1, col:8> col:8 struct _IO_marker
|-RecordDecl 0x90e8b0 <line:37:1, col:8> col:8 struct _IO_codecvt
|-RecordDecl 0x90e950 <line:38:1, col:8> col:8 struct _IO_wide_data
|-TypedefDecl 0x90ea00 <line:43:1, col:14> col:14 referenced _IO_lock_t 'void'
| `-BuiltinType 0x883a60 'void'
|-RecordDecl 0x90ea58 prev 0x90e790 <line:49:1, line:99:1> line:49:8 struct _IO_FILE definition
| |-FieldDecl 0x90eaf0 <line:51:3, col:7> col:7 _flags 'int'
| |-FieldDecl 0x90eb58 <line:54:3, col:9> col:9 _IO_read_ptr 'char *'
| |-FieldDecl 0x90ebc0 <line:55:3, col:9> col:9 _IO_read_end 'char *'
| |-FieldDecl 0x911cd0 <line:56:3, col:9> col:9 _IO_read_base 'char *'
| |-FieldDecl 0x911d38 <line:57:3, col:9> col:9 _IO_write_base 'char *'
| |-FieldDecl 0x911da0 <line:58:3, col:9> col:9 _IO_write_ptr 'char *'
| |-FieldDecl 0x911e08 <line:59:3, col:9> col:9 _IO_write_end 'char *'
| |-FieldDecl 0x911e70 <line:60:3, col:9> col:9 _IO_buf_base 'char *'
| |-FieldDecl 0x911ed8 <line:61:3, col:9> col:9 _IO_buf_end 'char *'
| |-FieldDecl 0x911f40 <line:64:3, col:9> col:9 _IO_save_base 'char *'
| |-FieldDecl 0x911fa8 <line:65:3, col:9> col:9 _IO_backup_base 'char *'
| |-FieldDecl 0x912010 <line:66:3, col:9> col:9 _IO_save_end 'char *'
| |-FieldDecl 0x912110 <line:68:3, col:22> col:22 _markers 'struct _IO_marker *'
| |-FieldDecl 0x9121e0 <line:70:3, col:20> col:20 _chain 'struct _IO_FILE *'
| |-FieldDecl 0x912248 <line:72:3, col:7> col:7 _fileno 'int'
| |-FieldDecl 0x9122b0 <line:73:3, col:7> col:7 _flags2 'int'
| |-FieldDecl 0x912310 <line:74:3, col:11> col:11 _old_offset '__off_t':'long'
| |-FieldDecl 0x912378 <line:77:3, col:18> col:18 _cur_column 'unsigned short'
| |-FieldDecl 0x9123e0 <line:78:3, col:15> col:15 _vtable_offset 'signed char'
| |-FieldDecl 0x9124c8 <line:79:3, col:19> col:8 _shortbuf 'char [1]'
| |-FieldDecl 0x912578 <line:81:3, col:15> col:15 _lock '_IO_lock_t *'
| |-FieldDecl 0x9125d8 <line:89:3, col:13> col:13 _offset '__off64_t':'long'
| |-FieldDecl 0x9126e0 <line:91:3, col:23> col:23 _codecvt 'struct _IO_codecvt *'
| |-FieldDecl 0x9127e0 <line:92:3, col:25> col:25 _wide_data 'struct _IO_wide_data *'
| |-FieldDecl 0x912858 <line:93:3, col:20> col:20 _freeres_list 'struct _IO_FILE *'
| |-FieldDecl 0x9128c0 <line:94:3, col:9> col:9 _freeres_buf 'void *'
| |-FieldDecl 0x912940 <line:95:3, col:10> col:10 __pad5 'size_t':'unsigned long'
| |-FieldDecl 0x9129a8 <line:96:3, col:7> col:7 _mode 'int'
| `-FieldDecl 0x912bf8 <line:98:3, col:74> col:8 _unused2 'char [20]'
|-TypedefDecl 0x9146e0 prev 0x8fb300 </usr/include/stdio.h:52:1, col:24> col:24 va_list '__gnuc_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0x912c50 '__gnuc_va_list' sugar
|   |-Typedef 0x8fb368 '__gnuc_va_list'
|   `-TypedefType 0x8fb2d0 '__builtin_va_list' sugar
|     |-Typedef 0x8849a8 '__builtin_va_list'
|     `-ConstantArrayType 0x884950 'struct __va_list_tag [1]' 1 
|       `-RecordType 0x884790 'struct __va_list_tag'
|         `-Record 0x884708 '__va_list_tag'
|-TypedefDecl 0x914748 <line:63:1, col:17> col:17 off_t '__off_t':'long'
| `-TypedefType 0x90e150 '__off_t' sugar
|   |-Typedef 0x907c40 '__off_t'
|   `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x9147d0 <line:77:1, col:19> col:19 ssize_t '__ssize_t':'long'
| `-TypedefType 0x9147a0 '__ssize_t' sugar
|   |-Typedef 0x908840 '__ssize_t'
|   `-BuiltinType 0x883b20 'long'
|-TypedefDecl 0x914860 <line:84:1, col:18> col:18 referenced fpos_t '__fpos_t':'struct _G_fpos_t'
| `-TypedefType 0x914830 '__fpos_t' sugar
|   |-Typedef 0x90e2a8 '__fpos_t'
|   `-ElaboratedType 0x90e250 'struct _G_fpos_t' sugar
|     `-RecordType 0x90e130 'struct _G_fpos_t'
|       `-Record 0x90e0a8 '_G_fpos_t'
|-VarDecl 0x914918 <line:137:1, col:14> col:14 stdin 'FILE *' extern
|-VarDecl 0x9149d8 <line:138:1, col:14> col:14 used stdout 'FILE *' extern
|-VarDecl 0x914a50 <line:139:1, col:14> col:14 stderr 'FILE *' extern
|-FunctionDecl 0x914ba0 <line:146:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:146:12 remove 'int (const char *)' extern
| |-ParmVarDecl 0x914ad0 <col:20, col:32> col:32 __filename 'const char *'
| `-NoThrowAttr 0x914c48 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x914e10 </usr/include/stdio.h:148:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:148:12 rename 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x914cb8 <col:20, col:32> col:32 __old 'const char *'
| |-ParmVarDecl 0x914d38 <col:39, col:51> col:51 __new 'const char *'
| `-NoThrowAttr 0x914ec0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x9151b0 </usr/include/stdio.h:152:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:152:12 renameat 'int (int, const char *, int, const char *)' extern
| |-ParmVarDecl 0x914f30 <col:22, col:26> col:26 __oldfd 'int'
| |-ParmVarDecl 0x914fb0 <col:35, col:47> col:47 __old 'const char *'
| |-ParmVarDecl 0x915030 <col:54, col:58> col:58 __newfd 'int'
| |-ParmVarDecl 0x9150b0 <line:153:8, col:20> col:20 __new 'const char *'
| `-NoThrowAttr 0x915270 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x9153b8 </usr/include/stdio.h:173:1, col:27> col:14 tmpfile 'FILE *(void)' extern
|-FunctionDecl 0x915540 <line:187:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:187:14 tmpnam 'char *(char *)' extern
| |-ParmVarDecl 0x915470 <col:22, col:28> col:28 __s 'char *'
| `-NoThrowAttr 0x9155e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x91ad80 </usr/include/stdio.h:192:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:192:14 tmpnam_r 'char *(char *)' extern
| |-ParmVarDecl 0x915658 <col:24, col:30> col:30 __s 'char *'
| `-NoThrowAttr 0x91ae28 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x91aff0 </usr/include/stdio.h:204:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdio.h:204:14 tempnam 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x91ae98 <col:23, col:35> col:35 __dir 'const char *'
| |-ParmVarDecl 0x91af18 <col:42, col:54> col:54 __pfx 'const char *'
| |-NoThrowAttr 0x91b0a0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0x91b0f8 <line:208:47> malloc
|-FunctionDecl 0x91b230 </usr/include/stdio.h:213:1, col:34> col:12 fclose 'int (FILE *)' extern
| `-ParmVarDecl 0x91b130 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x91b380 <line:218:1, col:34> col:12 used fflush 'int (FILE *)' extern
| `-ParmVarDecl 0x91b2e8 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x91b4d0 <line:227:1, col:43> col:12 fflush_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x91b438 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0x91b768 <line:246:14> col:14 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x91b808 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x91b870 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x91b8e8 prev 0x91b768 <col:1, line:247:37> line:246:14 fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x91b590 <col:21, col:44> col:44 __filename 'const char *restrict'
| `-ParmVarDecl 0x91b610 <line:247:7, col:30> col:30 __modes 'const char *restrict'
|-FunctionDecl 0x91bbc8 <line:252:1, line:254:34> line:252:14 freopen 'FILE *(const char *restrict, const char *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0x91b9b0 <col:23, col:46> col:46 __filename 'const char *restrict'
| |-ParmVarDecl 0x91ba30 <line:253:9, col:32> col:32 __modes 'const char *restrict'
| `-ParmVarDecl 0x91baa8 <line:254:9, col:26> col:26 __stream 'FILE *restrict'
|-FunctionDecl 0x91ce88 <line:279:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:279:14 fdopen 'FILE *(int, const char *)' extern
| |-ParmVarDecl 0x91bc98 <col:22, col:26> col:26 __fd 'int'
| |-ParmVarDecl 0x91cd70 <col:32, col:44> col:44 __modes 'const char *'
| `-NoThrowAttr 0x91cf38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x91d1c8 </usr/include/stdio.h:292:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:292:14 fmemopen 'FILE *(void *, size_t, const char *)' extern
| |-ParmVarDecl 0x91cfa8 <col:24, col:30> col:30 __s 'void *'
| |-ParmVarDecl 0x91d020 <col:35, col:42> col:42 __len 'size_t':'unsigned long'
| |-ParmVarDecl 0x91d0a0 <col:49, col:61> col:61 __modes 'const char *'
| `-NoThrowAttr 0x91d280 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x91d508 </usr/include/stdio.h:298:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:298:14 open_memstream 'FILE *(char **, size_t *)' extern
| |-ParmVarDecl 0x91d320 <col:30, col:37> col:37 __bufloc 'char **'
| |-ParmVarDecl 0x91d3f8 <col:47, col:55> col:55 __sizeloc 'size_t *'
| `-NoThrowAttr 0x91d5b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x91d7b8 </usr/include/stdio.h:304:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:304:13 setbuf 'void (FILE *restrict, char *restrict)' extern
| |-ParmVarDecl 0x91d620 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0x91d6a0 <col:48, col:65> col:65 __buf 'char *restrict'
| `-NoThrowAttr 0x91d868 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x91db90 </usr/include/stdio.h:308:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:308:12 setvbuf 'int (FILE *restrict, char *restrict, int, size_t)' extern
| |-ParmVarDecl 0x91d8d0 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0x91d950 <col:48, col:65> col:65 __buf 'char *restrict'
| |-ParmVarDecl 0x91d9d0 <line:309:7, col:11> col:11 __modes 'int'
| |-ParmVarDecl 0x91da48 <col:20, col:27> col:27 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0x91dc50 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x91df18 </usr/include/stdio.h:314:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:314:13 setbuffer 'void (FILE *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0x91dcb8 <col:24, col:41> col:41 __stream 'FILE *restrict'
| |-ParmVarDecl 0x91dd80 <col:51, col:68> col:68 __buf 'char *restrict'
| |-ParmVarDecl 0x91ddf8 <line:315:10, col:17> col:17 __size 'size_t':'unsigned long'
| `-NoThrowAttr 0x91dfd0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x91e128 </usr/include/stdio.h:318:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:318:13 setlinebuf 'void (FILE *)' extern
| |-ParmVarDecl 0x91e038 <col:25, col:31> col:31 __stream 'FILE *'
| `-NoThrowAttr 0x91e1d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x91e420 </usr/include/stdio.h:326:12> col:12 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x91e4c0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x91e528 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x91e5a0 <col:12> Implicit printf 2 3
|-FunctionDecl 0x91e608 prev 0x91e420 <col:1, line:327:43> line:326:12 fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x91e238 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0x91e2b8 <line:327:7, col:30> col:30 __format 'const char *restrict'
| `-FormatAttr 0x91e6e8 <line:326:12> Inherited printf 2 3
|-FunctionDecl 0x91e848 <line:332:12> col:12 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x91e8e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x91e958 <col:12> Implicit printf 1 2
|-FunctionDecl 0x91e9c0 prev 0x91e848 <col:1, col:56> col:12 used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x91e738 <col:20, col:43> col:43 __format 'const char *restrict'
| `-FormatAttr 0x91ea98 <col:12> Inherited printf 1 2
|-FunctionDecl 0x91ec88 <line:334:12> col:12 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x91ed90 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x91edf8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x91ee70 <col:12> Implicit printf 2 3
|-FunctionDecl 0x91eed8 prev 0x91ec88 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:56:49> /usr/include/stdio.h:334:12 sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x91eae8 <col:21, col:38> col:38 __s 'char *restrict'
| |-ParmVarDecl 0x91eb68 <line:335:7, col:30> col:30 __format 'const char *restrict'
| |-FormatAttr 0x91efe0 <line:334:12> Inherited printf 2 3
| `-NoThrowAttr 0x91ef88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
|-FunctionDecl 0x91f2f0 </usr/include/stdio.h:341:12> col:12 implicit vfprintf 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x91f390 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x91f3f8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x91f460 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x91f4e0 <col:12> Implicit printf 2 0
|-FunctionDecl 0x91f548 prev 0x91f2f0 <col:1, line:342:28> line:341:12 vfprintf 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x91f028 <col:22, col:39> col:39 __s 'FILE *restrict'
| |-ParmVarDecl 0x91f0a8 <col:44, col:67> col:67 __format 'const char *restrict'
| |-ParmVarDecl 0x91f180 <line:342:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x91f630 <line:341:12> Inherited printf 2 0
|-FunctionDecl 0x91f810 <line:347:12> col:12 implicit vprintf 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x91f8b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x91f918 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x91f990 <col:12> Implicit printf 1 0
|-FunctionDecl 0x91f9f8 prev 0x91f810 <col:1, col:74> col:12 vprintf 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x91f680 <col:21, col:44> col:44 __format 'const char *restrict'
| |-ParmVarDecl 0x91f6f8 <col:54, col:69> col:69 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x91fad8 <col:12> Inherited printf 1 0
|-FunctionDecl 0x91fe40 <line:349:12> col:12 implicit vsprintf 'int (char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x91fee0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x91ff48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x91ffb0 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x920030 <col:12> Implicit printf 2 0
|-FunctionDecl 0x920098 prev 0x91fe40 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:56:49> /usr/include/stdio.h:349:12 vsprintf 'int (char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x91fb28 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0x91fba8 <col:44, col:67> col:67 __format 'const char *restrict'
| |-ParmVarDecl 0x91fc20 <line:350:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-FormatAttr 0x9201a8 <line:349:12> Inherited printf 2 0
| `-NoThrowAttr 0x920150 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
|-FunctionDecl 0x920488 </usr/include/stdio.h:354:12> col:12 implicit snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x920528 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x920590 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x9205f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x920678 <col:12> Implicit printf 3 4
|-FunctionDecl 0x9206e0 prev 0x920488 <col:1, line:356:62> line:354:12 snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x9201f8 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0x920270 <col:44, col:51> col:51 __maxlen 'size_t':'unsigned long'
| |-ParmVarDecl 0x9202f0 <line:355:8, col:31> col:31 __format 'const char *restrict'
| |-NoThrowAttr 0x920798 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
| `-FormatAttr 0x9207f0 </usr/include/stdio.h:356:32, col:60> printf 3 4
|-FunctionDecl 0x920b50 <line:358:12> col:12 implicit vsnprintf 'int (char *, unsigned long, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x920bf0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x920c58 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x920cc0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x920d28 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x920db0 <col:12> Implicit printf 3 0
|-FunctionDecl 0x920e50 prev 0x920b50 <col:1, line:360:62> line:358:12 vsnprintf 'int (char *, unsigned long, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x920840 <col:23, col:40> col:40 __s 'char *restrict'
| |-ParmVarDecl 0x9208b8 <col:45, col:52> col:52 __maxlen 'size_t':'unsigned long'
| |-ParmVarDecl 0x920938 <line:359:9, col:32> col:32 __format 'const char *restrict'
| |-ParmVarDecl 0x9209b0 <col:42, col:57> col:57 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-NoThrowAttr 0x920f10 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
| `-FormatAttr 0x920f68 </usr/include/stdio.h:360:32, col:60> printf 3 0
|-FunctionDecl 0x921230 <line:379:1, line:381:52> line:379:12 vdprintf 'int (int, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x920fb8 <col:22, col:26> col:26 __fd 'int'
| |-ParmVarDecl 0x921038 <col:32, col:55> col:55 __fmt 'const char *restrict'
| |-ParmVarDecl 0x9210b0 <line:380:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x9212e8 <line:381:22, col:50> printf 2 0
|-FunctionDecl 0x921558 <line:382:1, line:383:52> line:382:12 dprintf 'int (int, const char *restrict, ...)' extern
| |-ParmVarDecl 0x921368 <col:21, col:25> col:25 __fd 'int'
| |-ParmVarDecl 0x9213e8 <col:31, col:54> col:54 __fmt 'const char *restrict'
| `-FormatAttr 0x921608 <line:383:22, col:50> printf 2 3
|-FunctionDecl 0x9217a0 <line:391:12> col:12 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x921840 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x9218a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x921920 <col:12> Implicit scanf 2 3
|-FunctionDecl 0x921988 prev 0x9217a0 <col:1, line:392:42> line:391:12 fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x921680 <col:20, col:37> col:37 __stream 'FILE *restrict'
| |-ParmVarDecl 0x921700 <line:392:6, col:29> col:29 __format 'const char *restrict'
| `-FormatAttr 0x921a68 <line:391:12> Inherited scanf 2 3
|-FunctionDecl 0x921b50 <line:397:12> col:12 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x921bf0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x921c60 <col:12> Implicit scanf 1 2
|-FunctionDecl 0x921cc8 prev 0x921b50 <col:1, col:55> col:12 scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x921ab8 <col:19, col:42> col:42 __format 'const char *restrict'
| `-FormatAttr 0x921da0 <col:12> Inherited scanf 1 2
|-FunctionDecl 0x923028 <line:399:12> col:12 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x9230c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x923130 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x9231a8 <col:12> Implicit scanf 2 3
|-FunctionDecl 0x923210 prev 0x923028 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:399:12 sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x922e80 <col:20, col:43> col:43 __s 'const char *restrict'
| |-ParmVarDecl 0x922f00 <line:400:6, col:29> col:29 __format 'const char *restrict'
| |-FormatAttr 0x923318 <line:399:12> Inherited scanf 2 3
| `-NoThrowAttr 0x9232c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x9234f0 prev 0x921988 </usr/include/stdio.h:407:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/stdio.h:407:24 fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x923360 <col:33, col:50> col:50 __stream 'FILE *restrict'
| |-ParmVarDecl 0x9233e0 <line:408:5, col:28> col:28 __format 'const char *restrict'
| |-FormatAttr 0x923618 <line:391:12> Inherited scanf 2 3
| `-AsmLabelAttr 0x923590 <<scratch space>:14:1> "__isoc99_fscanf" IsLiteralLabel
|-FunctionDecl 0x923768 prev 0x921cc8 </usr/include/stdio.h:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/stdio.h:410:24 scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x923668 <col:32, col:55> col:55 __format 'const char *restrict'
| |-FormatAttr 0x923888 <line:397:12> Inherited scanf 1 2
| `-AsmLabelAttr 0x923808 <<scratch space>:16:1> "__isoc99_scanf" IsLiteralLabel
|-FunctionDecl 0x923a28 prev 0x923210 </usr/include/stdio.h:412:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:412:28 sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x9238d8 <col:37, col:60> col:60 __s 'const char *restrict'
| |-ParmVarDecl 0x923958 <line:413:9, col:32> col:32 __format 'const char *restrict'
| |-FormatAttr 0x923b78 <line:399:12> Inherited scanf 2 3
| |-AsmLabelAttr 0x923ac8 <<scratch space>:18:1> "__isoc99_sscanf" IsLiteralLabel
| `-NoThrowAttr 0x923b50 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x924760 </usr/include/stdio.h:432:12> col:12 implicit vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x924800 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x924868 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x9248d0 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x924950 <col:12> Implicit scanf 2 0
|-FunctionDecl 0x9249b8 prev 0x924760 <col:1, line:434:51> line:432:12 vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x923bc0 <col:21, col:38> col:38 __s 'FILE *restrict'
| |-ParmVarDecl 0x923c40 <col:43, col:66> col:66 __format 'const char *restrict'
| |-ParmVarDecl 0x923cb8 <line:433:7, col:22> col:22 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x924a70 <line:434:22, col:49> scanf 2 0
|-FunctionDecl 0x924c98 <line:440:12> col:12 implicit vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x924d38 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x924da0 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x924e18 <col:12> Implicit scanf 1 0
|-FunctionDecl 0x924e80 prev 0x924c98 <col:1, line:441:51> line:440:12 vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x924af0 <col:20, col:43> col:43 __format 'const char *restrict'
| |-ParmVarDecl 0x924b68 <col:53, col:68> col:68 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x924f30 <line:441:22, col:49> scanf 1 0
|-FunctionDecl 0x925260 <line:444:12> col:12 implicit vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x925300 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x925368 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x9253d0 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x925450 <col:12> Implicit scanf 2 0
|-FunctionDecl 0x9254b8 prev 0x925260 <col:1, line:446:59> line:444:12 vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x924fb0 <col:21, col:44> col:44 __s 'const char *restrict'
| |-ParmVarDecl 0x925030 <line:445:7, col:30> col:30 __format 'const char *restrict'
| |-ParmVarDecl 0x9250a8 <col:40, col:55> col:55 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-NoThrowAttr 0x925570 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-FormatAttr 0x9255c8 </usr/include/stdio.h:446:30, col:57> scanf 2 0
|-FunctionDecl 0x926168 prev 0x9249b8 <line:451:1, line:455:51> line:451:24 vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x925610 <line:452:11, col:28> col:28 __s 'FILE *restrict'
| |-ParmVarDecl 0x925690 <line:453:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x926000 <col:37, col:52> col:52 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0x926208 <<scratch space>:21:1> "__isoc99_vfscanf" IsLiteralLabel
| `-FormatAttr 0x926298 </usr/include/stdio.h:455:22, col:49> scanf 2 0
|-FunctionDecl 0x926480 prev 0x924e80 <line:456:1, line:458:51> line:456:24 vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x9262e8 <col:33, col:56> col:56 __format 'const char *restrict'
| |-ParmVarDecl 0x926360 <line:457:5, col:20> col:20 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0x926520 <<scratch space>:23:1> "__isoc99_vscanf" IsLiteralLabel
| `-FormatAttr 0x9265a8 </usr/include/stdio.h:458:22, col:49> scanf 1 0
|-FunctionDecl 0x926818 prev 0x9254b8 <line:459:1, line:463:51> line:459:28 vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x9265f8 <line:460:8, col:31> col:31 __s 'const char *restrict'
| |-ParmVarDecl 0x926678 <line:461:8, col:31> col:31 __format 'const char *restrict'
| |-ParmVarDecl 0x9266f0 <line:462:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0x9268b8 <<scratch space>:25:1> "__isoc99_vsscanf" IsLiteralLabel
| |-NoThrowAttr 0x926948 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-FormatAttr 0x926970 </usr/include/stdio.h:463:22, col:49> scanf 2 0
|-FunctionDecl 0x926a50 <line:485:1, col:33> col:12 fgetc 'int (FILE *)' extern
| `-ParmVarDecl 0x9269b8 <col:19, col:25> col:25 __stream 'FILE *'
|-FunctionDecl 0x926ba0 <line:486:1, col:32> col:12 getc 'int (FILE *)' extern
| `-ParmVarDecl 0x926b08 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0x926d10 <line:492:1, col:25> col:12 getchar 'int (void)' extern
|-FunctionDecl 0x926e58 <line:499:1, col:41> col:12 getc_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x926dc0 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x9273e0 <line:500:1, col:34> col:12 getchar_unlocked 'int (void)' extern
|-FunctionDecl 0x927528 <line:510:1, col:42> col:12 fgetc_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x927490 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0x927780 <line:521:1, col:42> col:12 fputc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x9275e8 <col:19, col:23> col:23 __c 'int'
| `-ParmVarDecl 0x927660 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0x927960 <line:522:1, col:41> col:12 putc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x927848 <col:18, col:22> col:22 __c 'int'
| `-ParmVarDecl 0x9278c0 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x927af0 <line:528:1, col:28> col:12 putchar 'int (int)' extern
| `-ParmVarDecl 0x927a28 <col:21, col:25> col:25 __c 'int'
|-FunctionDecl 0x927cc8 <line:537:1, col:51> col:12 fputc_unlocked 'int (int, FILE *)' extern
| |-ParmVarDecl 0x927bb0 <col:28, col:32> col:32 __c 'int'
| `-ParmVarDecl 0x927c28 <col:37, col:43> col:43 __stream 'FILE *'
|-FunctionDecl 0x927ea8 <line:545:1, col:50> col:12 putc_unlocked 'int (int, FILE *)' extern
| |-ParmVarDecl 0x927d90 <col:27, col:31> col:31 __c 'int'
| `-ParmVarDecl 0x927e08 <col:36, col:42> col:42 __stream 'FILE *'
|-FunctionDecl 0x928008 <line:546:1, col:37> col:12 putchar_unlocked 'int (int)' extern
| `-ParmVarDecl 0x927f70 <col:30, col:34> col:34 __c 'int'
|-FunctionDecl 0x928158 <line:553:1, col:32> col:12 getw 'int (FILE *)' extern
| `-ParmVarDecl 0x9280c0 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0x928330 <line:556:1, col:41> col:12 putw 'int (int, FILE *)' extern
| |-ParmVarDecl 0x928218 <col:18, col:22> col:22 __w 'int'
| `-ParmVarDecl 0x928290 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x928630 <line:564:1, col:77> col:14 fgets 'char *(char *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0x928408 <col:21, col:38> col:38 __s 'char *restrict'
| |-ParmVarDecl 0x928488 <col:43, col:47> col:47 __n 'int'
| `-ParmVarDecl 0x928500 <col:52, col:69> col:69 __stream 'FILE *restrict'
|-FunctionDecl 0x9289b8 <line:603:1, line:605:55> line:603:18 __getdelim '__ssize_t (char **restrict, size_t *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0x928700 <col:30, col:48> col:48 __lineptr 'char **restrict'
| |-ParmVarDecl 0x928778 <line:604:30, col:49> col:49 __n 'size_t *restrict'
| |-ParmVarDecl 0x9287f8 <col:54, col:58> col:58 __delimiter 'int'
| `-ParmVarDecl 0x928870 <line:605:30, col:47> col:47 __stream 'FILE *restrict'
|-FunctionDecl 0x928ca8 <line:606:1, line:608:53> line:606:18 getdelim '__ssize_t (char **restrict, size_t *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0x928a90 <col:28, col:46> col:46 __lineptr 'char **restrict'
| |-ParmVarDecl 0x928b08 <line:607:28, col:47> col:47 __n 'size_t *restrict'
| |-ParmVarDecl 0x928b88 <col:52, col:56> col:56 __delimiter 'int'
| `-ParmVarDecl 0x928c00 <line:608:28, col:45> col:45 __stream 'FILE *restrict'
|-FunctionDecl 0x928f98 <line:616:1, line:618:52> line:616:18 getline '__ssize_t (char **restrict, size_t *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0x928d80 <col:27, col:45> col:45 __lineptr 'char **restrict'
| |-ParmVarDecl 0x928df8 <line:617:27, col:46> col:46 __n 'size_t *restrict'
| `-ParmVarDecl 0x928e70 <line:618:27, col:44> col:44 __stream 'FILE *restrict'
|-FunctionDecl 0x929200 <line:626:1, col:72> col:12 fputs 'int (const char *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0x929068 <col:19, col:42> col:42 __s 'const char *restrict'
| `-ParmVarDecl 0x9290e0 <col:47, col:64> col:64 __stream 'FILE *restrict'
|-FunctionDecl 0x929400 <line:632:1, col:33> col:12 puts 'int (const char *)' extern
| `-ParmVarDecl 0x9292c8 <col:18, col:30> col:30 __s 'const char *'
|-FunctionDecl 0x9295d8 <line:639:1, col:43> col:12 ungetc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x9294c0 <col:20, col:24> col:24 __c 'int'
| `-ParmVarDecl 0x929538 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0x929998 <line:646:15> col:15 implicit fread 'unsigned long (void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x929a38 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x929aa0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x929b08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0x929b70 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x929bf8 prev 0x929998 <col:1, line:647:45> line:646:15 fread 'unsigned long (void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x9296a0 <col:22, col:39> col:39 __ptr 'void *restrict'
| |-ParmVarDecl 0x929718 <col:46, col:53> col:53 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x929790 <line:647:8, col:15> col:15 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x929808 <col:20, col:37> col:37 __stream 'FILE *restrict'
|-FunctionDecl 0x929ff8 <line:652:15> col:15 implicit fwrite 'unsigned long (const void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x92a098 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x92a100 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x92a168 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0x92a1d0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x92a258 prev 0x929ff8 <col:1, line:653:41> line:652:15 fwrite 'unsigned long (const void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x929d00 <col:23, col:46> col:46 __ptr 'const void *restrict'
| |-ParmVarDecl 0x929d78 <col:53, col:60> col:60 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x929df0 <line:653:9, col:16> col:16 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x929e68 <col:21, col:38> col:38 __s 'FILE *restrict'
|-FunctionDecl 0x92a5a8 <line:673:1, line:674:47> line:673:15 fread_unlocked 'size_t (void *restrict, size_t, size_t, FILE *restrict)' extern
| |-ParmVarDecl 0x92a330 <col:31, col:48> col:48 __ptr 'void *restrict'
| |-ParmVarDecl 0x92a410 <col:55, col:62> col:62 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x92a488 <line:674:10, col:17> col:17 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x92a500 <col:22, col:39> col:39 __stream 'FILE *restrict'
|-FunctionDecl 0x92a890 <line:675:1, line:676:48> line:675:15 fwrite_unlocked 'size_t (const void *restrict, size_t, size_t, FILE *restrict)' extern
| |-ParmVarDecl 0x92a680 <col:32, col:55> col:55 __ptr 'const void *restrict'
| |-ParmVarDecl 0x92a6f8 <col:62, col:69> col:69 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x92a770 <line:676:11, col:18> col:18 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x92a7e8 <col:23, col:40> col:40 __stream 'FILE *restrict'
|-FunctionDecl 0x92ab90 <line:684:1, col:63> col:12 fseek 'int (FILE *, long, int)' extern
| |-ParmVarDecl 0x92a960 <col:19, col:25> col:25 __stream 'FILE *'
| |-ParmVarDecl 0x92a9e0 <col:35, col:44> col:44 __off 'long'
| `-ParmVarDecl 0x92aa60 <col:51, col:55> col:55 __whence 'int'
|-FunctionDecl 0x92ad50 <line:689:1, col:38> col:17 ftell 'long (FILE *)' extern
| `-ParmVarDecl 0x92ac58 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0x92ae98 <line:694:1, col:35> col:13 rewind 'void (FILE *)' extern
| `-ParmVarDecl 0x92ae08 <col:21, col:27> col:27 __stream 'FILE *'
|-FunctionDecl 0x92b130 <line:707:1, col:63> col:12 fseeko 'int (FILE *, __off_t, int)' extern
| |-ParmVarDecl 0x92af50 <col:20, col:26> col:26 __stream 'FILE *'
| |-ParmVarDecl 0x92afc8 <col:36, col:44> col:44 __off '__off_t':'long'
| `-ParmVarDecl 0x92b048 <col:51, col:55> col:55 __whence 'int'
|-FunctionDecl 0x92b2b8 <line:712:1, col:38> col:16 ftello '__off_t (FILE *)' extern
| `-ParmVarDecl 0x92b1f8 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0x92c5b0 <line:731:1, col:72> col:12 fgetpos 'int (FILE *restrict, fpos_t *restrict)' extern
| |-ParmVarDecl 0x92b370 <col:21, col:38> col:38 __stream 'FILE *restrict'
| `-ParmVarDecl 0x92c498 <col:48, col:67> col:67 __pos 'fpos_t *restrict'
|-FunctionDecl 0x92c860 <line:736:1, col:56> col:12 fsetpos 'int (FILE *, const fpos_t *)' extern
| |-ParmVarDecl 0x92c670 <col:21, col:27> col:27 __stream 'FILE *'
| `-ParmVarDecl 0x92c748 <col:37, col:51> col:51 __pos 'const fpos_t *'
|-FunctionDecl 0x92c9b0 <line:757:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:757:13 clearerr 'void (FILE *)' extern
| |-ParmVarDecl 0x92c920 <col:23, col:29> col:29 __stream 'FILE *'
| `-NoThrowAttr 0x92ca58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x92cb58 </usr/include/stdio.h:759:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:759:12 feof 'int (FILE *)' extern
| |-ParmVarDecl 0x92cac0 <col:18, col:24> col:24 __stream 'FILE *'
| `-NoThrowAttr 0x92cc00 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x92cd00 </usr/include/stdio.h:761:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:761:12 ferror 'int (FILE *)' extern
| |-ParmVarDecl 0x92cc68 <col:20, col:26> col:26 __stream 'FILE *'
| `-NoThrowAttr 0x92cda8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x92cea0 </usr/include/stdio.h:765:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:765:13 clearerr_unlocked 'void (FILE *)' extern
| |-ParmVarDecl 0x92ce10 <col:32, col:38> col:38 __stream 'FILE *'
| `-NoThrowAttr 0x92cf48 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x92d048 </usr/include/stdio.h:766:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:766:12 feof_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0x92cfb0 <col:27, col:33> col:33 __stream 'FILE *'
| `-NoThrowAttr 0x92d0f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x92d1f0 </usr/include/stdio.h:767:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:767:12 ferror_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0x92d158 <col:29, col:35> col:35 __stream 'FILE *'
| `-NoThrowAttr 0x92d298 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x92d580 </usr/include/stdio.h:775:1, col:36> col:13 perror 'void (const char *)' extern
| `-ParmVarDecl 0x92d308 <col:21, col:33> col:33 __s 'const char *'
|-VarDecl 0x92d640 </usr/include/x86_64-linux-gnu/bits/sys_errlist.h:26:1, col:12> col:12 sys_nerr 'int' extern
|-VarDecl 0x92d730 <line:27:1, col:38> col:26 sys_errlist 'const char *const []' extern
|-FunctionDecl 0x92d840 </usr/include/stdio.h:786:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:786:12 fileno 'int (FILE *)' extern
| |-ParmVarDecl 0x92d7a8 <col:20, col:26> col:26 __stream 'FILE *'
| `-NoThrowAttr 0x92d8e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x92d9e8 </usr/include/stdio.h:791:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:791:12 fileno_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0x92d950 <col:29, col:35> col:35 __stream 'FILE *'
| `-NoThrowAttr 0x92da90 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x92dc18 </usr/include/stdio.h:800:1, col:63> col:14 popen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x92db00 <col:21, col:33> col:33 __command 'const char *'
| `-ParmVarDecl 0x92db80 <col:44, col:56> col:56 __modes 'const char *'
|-FunctionDecl 0x92dd70 <line:806:1, col:34> col:12 pclose 'int (FILE *)' extern
| `-ParmVarDecl 0x92dcd8 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x92dec8 <line:812:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:812:14 ctermid 'char *(char *)' extern
| |-ParmVarDecl 0x92de30 <col:23, col:29> col:29 __s 'char *'
| `-NoThrowAttr 0x92df70 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x92e068 </usr/include/stdio.h:840:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:840:13 flockfile 'void (FILE *)' extern
| |-ParmVarDecl 0x92dfd8 <col:24, col:30> col:30 __stream 'FILE *'
| `-NoThrowAttr 0x92e110 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x92e210 </usr/include/stdio.h:844:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:844:12 ftrylockfile 'int (FILE *)' extern
| |-ParmVarDecl 0x92e178 <col:26, col:32> col:32 __stream 'FILE *'
| `-NoThrowAttr 0x92e2b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x92e3b0 </usr/include/stdio.h:847:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:847:13 funlockfile 'void (FILE *)' extern
| |-ParmVarDecl 0x92e320 <col:26, col:32> col:32 __stream 'FILE *'
| `-NoThrowAttr 0x92e458 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x92eaf0 </usr/include/stdio.h:858:1, col:27> col:12 __uflow 'int (FILE *)' extern
| `-ParmVarDecl 0x92e4c0 <col:21, col:26> col:27 'FILE *'
|-FunctionDecl 0x92ed40 <line:859:1, col:35> col:12 __overflow 'int (FILE *, int)' extern
| |-ParmVarDecl 0x92eba8 <col:24, col:29> col:30 'FILE *'
| `-ParmVarDecl 0x92ec28 <col:32> col:35 'int'
`-FunctionDecl 0x92ee38 <main/hello_world_main.c:16:1, line:38:1> line:16:6 app_main 'void ()'
  `-CompoundStmt 0x930610 <line:17:1, line:38:1>
    |-CallExpr 0x92efc0 <line:18:5, col:28> 'int'
    | |-ImplicitCastExpr 0x92efa8 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x92eed8 <col:5> 'int (const char *, ...)' Function 0x91e9c0 'printf' 'int (const char *, ...)'
    | `-ImplicitCastExpr 0x92f000 <col:12> 'const char *' <NoOp>
    |   `-ImplicitCastExpr 0x92efe8 <col:12> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x92ef38 <col:12> 'char [14]' lvalue "Hello world!\n"
    |-ForStmt 0x92f918 <line:31:5, line:34:5>
    | |-DeclStmt 0x92f5c8 <line:31:10, col:20>
    | | `-VarDecl 0x92f540 <col:10, col:18> col:14 used i 'int' cinit
    | |   `-IntegerLiteral 0x92f5a8 <col:18> 'int' 10
    | |-<<<NULL>>>
    | |-BinaryOperator 0x92f638 <col:22, col:27> 'int' '>='
    | | |-ImplicitCastExpr 0x92f620 <col:22> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x92f5e0 <col:22> 'int' lvalue Var 0x92f540 'i' 'int'
    | | `-IntegerLiteral 0x92f600 <col:27> 'int' 0
    | |-UnaryOperator 0x92f678 <col:30, col:31> 'int' postfix '--'
    | | `-DeclRefExpr 0x92f658 <col:30> 'int' lvalue Var 0x92f540 'i' 'int'
    | `-CompoundStmt 0x92f900 <col:35, line:34:5>
    |   `-CallExpr 0x92f770 <line:32:9, col:50> 'int'
    |     |-ImplicitCastExpr 0x92f758 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x92f690 <col:9> 'int (const char *, ...)' Function 0x91e9c0 'printf' 'int (const char *, ...)'
    |     |-ImplicitCastExpr 0x92f7b8 <col:16> 'const char *' <NoOp>
    |     | `-ImplicitCastExpr 0x92f7a0 <col:16> 'char *' <ArrayToPointerDecay>
    |     |   `-StringLiteral 0x92f6e8 <col:16> 'char [29]' lvalue "Restarting in %d seconds...\n"
    |     `-ImplicitCastExpr 0x92f7d0 <col:49> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x92f720 <col:49> 'int' lvalue Var 0x92f540 'i' 'int'
    |-CallExpr 0x92f9c8 <line:35:5, col:31> 'int'
    | |-ImplicitCastExpr 0x92f9b0 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x92f950 <col:5> 'int (const char *, ...)' Function 0x91e9c0 'printf' 'int (const char *, ...)'
    | `-ImplicitCastExpr 0x92fa08 <col:12> 'const char *' <NoOp>
    |   `-ImplicitCastExpr 0x92f9f0 <col:12> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x92f970 <col:12> 'char [17]' lvalue "Restarting now.\n"
    |-CallExpr 0x9304a0 <line:36:5, col:18> 'int'
    | |-ImplicitCastExpr 0x92fab8 <col:5> 'int (*)(FILE *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x92fa20 <col:5> 'int (FILE *)' Function 0x91b380 'fflush' 'int (FILE *)'
    | `-ImplicitCastExpr 0x9304c8 </usr/include/stdio.h:142:16> 'FILE *' <LValueToRValue>
    |   `-DeclRefExpr 0x92fa40 <col:16> 'FILE *' lvalue Var 0x9149d8 'stdout' 'FILE *'
    `-CallExpr 0x9305f0 <main/hello_world_main.c:37:5, col:17> 'int'
      `-ImplicitCastExpr 0x9305d8 <col:5> 'int (*)()' <FunctionToPointerDecay>
        `-DeclRefExpr 0x9305b8 <col:5> 'int ()' Function 0x930508 'esp_restart' 'int ()'

TranslationUnitDecl 0x7019c8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x702260 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x701f60 '__int128'
|-TypedefDecl 0x7022d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x701f80 'unsigned __int128'
|-TypedefDecl 0x7025d8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7023b0 'struct __NSConstantString_tag'
|   `-Record 0x702328 '__NSConstantString_tag'
|-TypedefDecl 0x702670 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x702630 'char *'
|   `-BuiltinType 0x701a60 'char'
|-TypedefDecl 0x702968 <<invalid sloc>> <invalid sloc> implicit referenced __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x702910 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x702750 'struct __va_list_tag'
|     `-Record 0x7026c8 '__va_list_tag'
|-TypedefDecl 0x764900 <main/los_compiler.h:308:1, col:32> col:32 referenced UINT8 'unsigned char'
| `-BuiltinType 0x701b20 'unsigned char'
|-TypedefDecl 0x764970 <line:309:1, col:32> col:32 referenced UINT16 'unsigned short'
| `-BuiltinType 0x701b40 'unsigned short'
|-TypedefDecl 0x7649e0 <line:310:1, col:32> col:32 referenced UINT32 'unsigned int'
| `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x764a50 <line:311:1, col:32> col:32 INT8 'signed char'
| `-BuiltinType 0x701a80 'signed char'
|-TypedefDecl 0x764ac0 <line:312:1, col:32> col:32 INT16 'short'
| `-BuiltinType 0x701aa0 'short'
|-TypedefDecl 0x764b30 <line:313:1, col:32> col:32 referenced INT32 'int'
| `-BuiltinType 0x701ac0 'int'
|-TypedefDecl 0x764ba0 <line:314:1, col:32> col:32 FLOAT 'float'
| `-BuiltinType 0x701bc0 'float'
|-TypedefDecl 0x764c10 <line:315:1, col:32> col:32 DOUBLE 'double'
| `-BuiltinType 0x701be0 'double'
|-TypedefDecl 0x764c78 <line:316:1, col:32> col:32 referenced CHAR 'char'
| `-BuiltinType 0x701a60 'char'
|-TypedefDecl 0x764ce8 <line:318:1, col:32> col:32 referenced BOOL 'unsigned int'
| `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x764d58 <line:319:1, col:32> col:32 referenced UINT64 'unsigned long long'
| `-BuiltinType 0x701ba0 'unsigned long long'
|-TypedefDecl 0x764dc8 <line:320:1, col:32> col:32 referenced INT64 'long long'
| `-BuiltinType 0x701b00 'long long'
|-TypedefDecl 0x764e38 <line:321:1, col:32> col:32 referenced UINTPTR 'unsigned int'
| `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x764ea8 <line:322:1, col:32> col:32 INTPTR 'int'
| `-BuiltinType 0x701ac0 'int'
|-TypedefDecl 0x764f30 <line:324:1, col:24> col:24 Atomic 'volatile INT32':'volatile int'
| `-QualType 0x764f04 'volatile INT32' volatile
|   `-TypedefType 0x764f00 'INT32' sugar
|     |-Typedef 0x764b30 'INT32'
|     `-BuiltinType 0x701ac0 'int'
|-TypedefDecl 0x764fc0 <line:325:1, col:24> col:24 Atomic64 'volatile INT64':'volatile long long'
| `-QualType 0x764f94 'volatile INT64' volatile
|   `-TypedefType 0x764f90 'INT64' sugar
|     |-Typedef 0x764dc8 'INT64'
|     `-BuiltinType 0x701b00 'long long'
|-FunctionDecl 0x765268 <line:407:1, line:410:1> line:407:22 LOS_Align 'UINT32 (UINT32, UINT32)' static inline
| |-ParmVarDecl 0x7650e0 <col:32, col:39> col:39 used addr 'UINT32':'unsigned int'
| |-ParmVarDecl 0x765158 <col:45, col:52> col:52 used boundary 'UINT32':'unsigned int'
| |-CompoundStmt 0x772140 <line:408:1, line:410:1>
| | `-ReturnStmt 0x772130 <line:409:5, col:93>
| |   `-BinaryOperator 0x772110 <col:12, col:93> 'unsigned int' '&'
| |     |-ParenExpr 0x772028 <col:12, col:75> 'unsigned int'
| |     | `-BinaryOperator 0x772008 <col:13, col:74> 'unsigned int' '+'
| |     |   |-ImplicitCastExpr 0x771ff0 <col:13> 'UINT32':'unsigned int' <LValueToRValue>
| |     |   | `-DeclRefExpr 0x765360 <col:13> 'UINT32':'unsigned int' lvalue ParmVar 0x7650e0 'addr' 'UINT32':'unsigned int'
| |     |   `-ParenExpr 0x771fd0 <col:20, col:74> 'unsigned int'
| |     |     `-ConditionalOperator 0x771fa0 <col:21, col:73> 'unsigned int'
| |     |       |-ParenExpr 0x765500 <col:21, col:52> 'int'
| |     |       | `-BinaryOperator 0x7654e0 <col:22, col:48> 'int' '>'
| |     |       |   |-ParenExpr 0x765488 <col:22, col:44> 'unsigned int'
| |     |       |   | `-BinaryOperator 0x765468 <col:23, col:43> 'unsigned int' '+'
| |     |       |   |   |-ImplicitCastExpr 0x765450 <col:23> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |   | `-DeclRefExpr 0x765380 <col:23> 'UINT32':'unsigned int' lvalue ParmVar 0x7650e0 'addr' 'UINT32':'unsigned int'
| |     |       |   |   `-ParenExpr 0x765430 <col:30, col:43> 'unsigned int'
| |     |       |   |     `-BinaryOperator 0x765410 <col:31, col:42> 'unsigned int' '-'
| |     |       |   |       |-ImplicitCastExpr 0x7653e0 <col:31> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |       | `-DeclRefExpr 0x7653a0 <col:31> 'UINT32':'unsigned int' lvalue ParmVar 0x765158 'boundary' 'UINT32':'unsigned int'
| |     |       |   |       `-ImplicitCastExpr 0x7653f8 <col:42> 'unsigned int' <IntegralCast>
| |     |       |   |         `-IntegerLiteral 0x7653c0 <col:42> 'int' 1
| |     |       |   `-ImplicitCastExpr 0x7654c8 <col:48> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |     `-DeclRefExpr 0x7654a8 <col:48> 'UINT32':'unsigned int' lvalue ParmVar 0x7650e0 'addr' 'UINT32':'unsigned int'
| |     |       |-ParenExpr 0x7655b0 <col:56, col:69> 'unsigned int'
| |     |       | `-BinaryOperator 0x765590 <col:57, col:68> 'unsigned int' '-'
| |     |       |   |-ImplicitCastExpr 0x765560 <col:57> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   | `-DeclRefExpr 0x765520 <col:57> 'UINT32':'unsigned int' lvalue ParmVar 0x765158 'boundary' 'UINT32':'unsigned int'
| |     |       |   `-ImplicitCastExpr 0x765578 <col:68> 'unsigned int' <IntegralCast>
| |     |       |     `-IntegerLiteral 0x765540 <col:68> 'int' 1
| |     |       `-ImplicitCastExpr 0x7655f0 <col:73> 'unsigned int' <IntegralCast>
| |     |         `-IntegerLiteral 0x7655d0 <col:73> 'int' 0
| |     `-UnaryOperator 0x7720f8 <col:79, col:93> 'unsigned int' prefix '~' cannot overflow
| |       `-ParenExpr 0x7720d8 <col:80, col:93> 'unsigned int'
| |         `-BinaryOperator 0x7720b8 <col:81, col:92> 'unsigned int' '-'
| |           |-ImplicitCastExpr 0x772088 <col:81> 'UINT32':'unsigned int' <LValueToRValue>
| |           | `-DeclRefExpr 0x772048 <col:81> 'UINT32':'unsigned int' lvalue ParmVar 0x765158 'boundary' 'UINT32':'unsigned int'
| |           `-ImplicitCastExpr 0x7720a0 <col:92> 'unsigned int' <IntegralCast>
| |             `-IntegerLiteral 0x772068 <col:92> 'int' 1
| `-FullComment 0x80a780 <line:388:3, line:405:7>
|   |-ParagraphComment 0x808d80 <line:388:3>
|   | `-TextComment 0x808d50 <col:3> Text=" "
|   |-VerbatimLineComment 0x808da0 <col:4, col:21> Text=" los_base"
|   |-ParagraphComment 0x808e10 <line:389:3>
|   | `-TextComment 0x808de0 <col:3> Text=" "
|   |-BlockCommandComment 0x808e30 <col:4, col:70> Name="brief"
|   | `-ParagraphComment 0x808e90 <col:10, col:70>
|   |   `-TextComment 0x808e60 <col:10, col:70> Text=" Align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0x808ee0 <line:391:3>
|   | `-TextComment 0x808eb0 <col:3> Text=" "
|   |-BlockCommandComment 0x808f00 <col:4, line:392:83> Name="par"
|   | `-ParagraphComment 0x809fa0 <line:391:8, line:392:83>
|   |   |-TextComment 0x809f50 <line:391:8, col:20> Text=" Description:"
|   |   `-TextComment 0x809f70 <line:392:3, col:83> Text=" This API is used to align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0x809ff0 <line:394:3>
|   | `-TextComment 0x809fc0 <col:3> Text=" "
|   |-BlockCommandComment 0x80a010 <col:4, line:397:8> Name="attention"
|   | `-ParagraphComment 0x80a1e0 <line:395:3, line:397:8>
|   |   |-TextComment 0x80a040 <line:395:3> Text=" "
|   |   |-HTMLStartTagComment 0x80a060 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x80a0a0 <line:396:3> Text=" "
|   |   |-HTMLStartTagComment 0x80a0c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x80a100 <col:8, col:50> Text="the value of boundary usually is 4,8,16,32."
|   |   |-HTMLEndTagComment 0x80a120 <col:51, col:55> Name="li"
|   |   |-TextComment 0x80a150 <line:397:3> Text=" "
|   |   `-HTMLEndTagComment 0x80a170 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x80a230 <line:399:3>
|   | `-TextComment 0x80a200 <col:3> Text=" "
|   |-ParamCommandComment 0x80a250 <col:4, line:400:3> [in] implicitly Param="addr" ParamIndex=0
|   | `-ParagraphComment 0x80a300 <line:399:15, line:400:3>
|   |   |-TextComment 0x80a2b0 <line:399:15, col:61> Text="     [IN]  The variable what you want to align."
|   |   `-TextComment 0x80a2d0 <line:400:3> Text=" "
|   |-ParamCommandComment 0x80a320 <col:4, col:63> [in] implicitly Param="boundary" ParamIndex=1
|   | `-ParagraphComment 0x80a3b0 <col:19, col:63>
|   |   `-TextComment 0x80a380 <col:19, col:63> Text=" [IN]  The align size what you want to align."
|   |-ParagraphComment 0x80a400 <line:402:3>
|   | `-TextComment 0x80a3d0 <col:3> Text=" "
|   |-BlockCommandComment 0x80a420 <col:4, line:403:3> Name="retval"
|   | `-ParagraphComment 0x80a4a0 <line:402:11, line:403:3>
|   |   |-TextComment 0x80a450 <line:402:11, col:55> Text=" #UINT32 The variable what have been aligned."
|   |   `-TextComment 0x80a470 <line:403:3> Text=" "
|   |-BlockCommandComment 0x80a4c0 <col:4, line:405:3> Name="par"
|   | `-ParagraphComment 0x80a690 <line:403:8, line:405:3>
|   |   |-TextComment 0x80a4f0 <line:403:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x80a510 <line:404:3> Text=" "
|   |   |-HTMLStartTagComment 0x80a530 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x80a570 <col:8, col:11> Name="li"
|   |   |-TextComment 0x80a5b0 <col:12, col:73> Text="los_base.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x80a5d0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x80a600 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x80a630 <line:405:3> Text=" "
|   `-BlockCommandComment 0x80a6b0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x80a6e0 <<invalid sloc>>
|-FunctionDecl 0x772238 <line:423:1, line:438:1> line:423:20 used maybe_release_fence 'void (int)' static inline
| |-ParmVarDecl 0x772170 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0x7727f0 <line:424:1, line:438:1>
|   `-SwitchStmt 0x772318 <line:425:5, line:437:5>
|     |-ImplicitCastExpr 0x772300 <line:425:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x7722e0 <col:13> 'int' lvalue ParmVar 0x772170 'model' 'int'
|     `-CompoundStmt 0x7727a8 <col:20, line:437:5>
|       |-CaseStmt 0x772370 <line:426:9, line:427:52>
|       | |-ConstantExpr 0x772358 <<built-in>:14:26> 'int'
|       | | `-IntegerLiteral 0x772338 <col:26> 'int' 3
|       | `-CallExpr 0x772580 <main/los_compiler.h:427:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x772568 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x772500 <col:13> '<builtin fn type>' Function 0x772398 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x772520 <<built-in>:14:26> 'int' 3
|       |-BreakStmt 0x7725a8 <main/los_compiler.h:428:13>
|       |-CaseStmt 0x7725e8 <line:429:9, line:430:52>
|       | |-ConstantExpr 0x7725d0 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0x7725b0 <col:26> 'int' 4
|       | `-CallExpr 0x772668 <main/los_compiler.h:430:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x772650 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x772610 <col:13> '<builtin fn type>' Function 0x772398 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x772630 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0x772690 <main/los_compiler.h:431:13>
|       |-CaseStmt 0x7726d0 <line:432:9, line:433:52>
|       | |-ConstantExpr 0x7726b8 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0x772698 <col:26> 'int' 5
|       | `-CallExpr 0x772750 <main/los_compiler.h:433:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x772738 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x7726f8 <col:13> '<builtin fn type>' Function 0x772398 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x772718 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0x772778 <main/los_compiler.h:434:13>
|       `-DefaultStmt 0x772788 <line:435:9, line:436:13>
|         `-BreakStmt 0x772780 <col:13>
|-FunctionDecl 0x772398 <line:427:13> col:13 implicit used __atomic_thread_fence 'void (int)' extern
| |-ParmVarDecl 0x772438 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x7724a8 <col:13> Implicit
|-FunctionDecl 0x7728b0 <line:440:1, line:455:1> line:440:20 used maybe_acquire_fence 'void (int)' static inline
| |-ParmVarDecl 0x772820 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0x772cd8 <line:441:1, line:455:1>
|   `-SwitchStmt 0x772990 <line:442:5, line:454:5>
|     |-ImplicitCastExpr 0x772978 <line:442:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x772958 <col:13> 'int' lvalue ParmVar 0x772820 'model' 'int'
|     `-CompoundStmt 0x772c90 <col:20, line:454:5>
|       |-CaseStmt 0x7729e8 <line:443:9, line:444:52>
|       | |-ConstantExpr 0x7729d0 <<built-in>:13:26> 'int'
|       | | `-IntegerLiteral 0x7729b0 <col:26> 'int' 2
|       | `-CallExpr 0x772a68 <main/los_compiler.h:444:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x772a50 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x772a10 <col:13> '<builtin fn type>' Function 0x772398 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x772a30 <<built-in>:13:26> 'int' 2
|       |-BreakStmt 0x772a90 <main/los_compiler.h:445:13>
|       |-CaseStmt 0x772ad0 <line:446:9, line:447:52>
|       | |-ConstantExpr 0x772ab8 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0x772a98 <col:26> 'int' 4
|       | `-CallExpr 0x772b50 <main/los_compiler.h:447:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x772b38 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x772af8 <col:13> '<builtin fn type>' Function 0x772398 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x772b18 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0x772b78 <main/los_compiler.h:448:13>
|       |-CaseStmt 0x772bb8 <line:449:9, line:450:52>
|       | |-ConstantExpr 0x772ba0 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0x772b80 <col:26> 'int' 5
|       | `-CallExpr 0x772c38 <main/los_compiler.h:450:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x772c20 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x772be0 <col:13> '<builtin fn type>' Function 0x772398 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x772c00 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0x772c60 <main/los_compiler.h:451:13>
|       `-DefaultStmt 0x772c70 <line:452:9, line:453:13>
|         `-BreakStmt 0x772c68 <col:13>
|-FunctionDecl 0x772e78 <line:458:1, line:472:1> line:458:21 used __libatomic_flag_for_address 'BOOL *(void *)' static inline
| |-ParmVarDecl 0x772d28 <col:50, col:56> col:56 used addr 'void *'
| `-CompoundStmt 0x7776c8 <line:459:1, line:472:1>
|   |-DeclStmt 0x775c90 <line:460:5, col:99>
|   | `-VarDecl 0x775718 <col:5, col:98> col:17 used flag_table 'BOOL [16]' static cinit
|   |   `-InitListExpr 0x775a50 <col:51, col:98> 'BOOL [16]'
|   |     |-ImplicitCastExpr 0x775b10 <col:52> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x775780 <col:52> 'int' 0
|   |     |-ImplicitCastExpr 0x775b28 <col:55> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x7757a0 <col:55> 'int' 0
|   |     |-ImplicitCastExpr 0x775b40 <col:58> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x7757c0 <col:58> 'int' 0
|   |     |-ImplicitCastExpr 0x775b58 <col:61> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x7757e0 <col:61> 'int' 0
|   |     |-ImplicitCastExpr 0x775b70 <col:64> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x775800 <col:64> 'int' 0
|   |     |-ImplicitCastExpr 0x775b88 <col:67> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x775820 <col:67> 'int' 0
|   |     |-ImplicitCastExpr 0x775ba0 <col:70> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x775840 <col:70> 'int' 0
|   |     |-ImplicitCastExpr 0x775bb8 <col:73> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x775860 <col:73> 'int' 0
|   |     |-ImplicitCastExpr 0x775bd0 <col:76> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x775880 <col:76> 'int' 0
|   |     |-ImplicitCastExpr 0x775be8 <col:79> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x7758a0 <col:79> 'int' 0
|   |     |-ImplicitCastExpr 0x775c00 <col:82> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x7758c0 <col:82> 'int' 0
|   |     |-ImplicitCastExpr 0x775c18 <col:85> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x7758e0 <col:85> 'int' 0
|   |     |-ImplicitCastExpr 0x775c30 <col:88> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x775900 <col:88> 'int' 0
|   |     |-ImplicitCastExpr 0x775c48 <col:91> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x775920 <col:91> 'int' 0
|   |     |-ImplicitCastExpr 0x775c60 <col:94> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x775940 <col:94> 'int' 0
|   |     `-ImplicitCastExpr 0x775c78 <col:97> 'BOOL':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x775960 <col:97> 'int' 0
|   |-DeclStmt 0x775e20 <line:461:5, col:41>
|   | `-VarDecl 0x775ce0 <col:5, col:37> col:13 used p 'UINTPTR':'unsigned int' cinit
|   |   `-CStyleCastExpr 0x775df8 <col:17, col:37> 'UINTPTR':'unsigned int' <PointerToIntegral>
|   |     `-CStyleCastExpr 0x775dc0 <col:26, col:37> 'UINTPTR *' <BitCast>
|   |       `-ImplicitCastExpr 0x775da8 <col:37> 'void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x775d48 <col:37> 'void *' lvalue ParmVar 0x772d28 'addr' 'void *'
|   |-CompoundAssignOperator 0x775fa8 <line:462:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x775e38 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x775ce0 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x775f88 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0x775ed0 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x775eb0 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x775e98 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x775e58 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x775ce0 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x775e78 <col:16> 'int' 2
|   |   `-ParenExpr 0x775f68 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x775f48 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x775f30 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x775ef0 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0x775ce0 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x775f10 <col:27> 'int' 4
|   |-CompoundAssignOperator 0x776148 <line:463:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x775fd8 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x775ce0 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x776128 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0x776070 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x776050 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x776038 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x775ff8 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x775ce0 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x776018 <col:16> 'int' 7
|   |   `-ParenExpr 0x776108 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x7760e8 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x7760d0 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x776090 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0x775ce0 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x7760b0 <col:27> 'int' 5
|   |-CompoundAssignOperator 0x7762e8 <line:464:5, col:30> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x776178 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x775ce0 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x7762c8 <col:10, col:30> 'unsigned int' '+'
|   |   |-ParenExpr 0x776210 <col:10, col:18> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x7761f0 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x7761d8 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x776198 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x775ce0 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x7761b8 <col:16> 'int' 17
|   |   `-ParenExpr 0x7762a8 <col:22, col:30> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x776288 <col:23, col:28> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x776270 <col:23> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x776230 <col:23> 'UINTPTR':'unsigned int' lvalue Var 0x775ce0 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x776250 <col:28> 'int' 13
|   |-IfStmt 0x7764a8 <line:466:5, line:468:5>
|   | |-BinaryOperator 0x776388 <line:466:9, col:26> 'int' '>'
|   | | |-UnaryExprOrTypeTraitExpr 0x776330 <col:9, col:22> 'unsigned long' sizeof 'void *'
|   | | `-ImplicitCastExpr 0x776370 <col:26> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x776350 <col:26> 'int' 4
|   | `-CompoundStmt 0x776490 <col:29, line:468:5>
|   |   `-CompoundAssignOperator 0x776460 <line:467:9, col:22> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0x7763a8 <col:9> 'UINTPTR':'unsigned int' lvalue Var 0x775ce0 'p' 'UINTPTR':'unsigned int'
|   |     `-ParenExpr 0x776440 <col:14, col:22> 'UINTPTR':'unsigned int'
|   |       `-BinaryOperator 0x776420 <col:15, col:20> 'UINTPTR':'unsigned int' '>>'
|   |         |-ImplicitCastExpr 0x776408 <col:15> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x7763c8 <col:15> 'UINTPTR':'unsigned int' lvalue Var 0x775ce0 'p' 'UINTPTR':'unsigned int'
|   |         `-IntegerLiteral 0x7763e8 <col:20> 'int' 31
|   |-CompoundAssignOperator 0x7765d8 <line:470:5, col:34> 'UINTPTR':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x7764c0 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x775ce0 'p' 'UINTPTR':'unsigned int'
|   | `-ImplicitCastExpr 0x7765c0 <col:10, col:34> 'unsigned int' <IntegralCast>
|   |   `-ParenExpr 0x7765a0 <col:10, col:34> 'int'
|   |     `-BinaryOperator 0x776580 <line:457:29, line:470:33> 'int' '-'
|   |       |-ParenExpr 0x776540 <line:457:29, col:36> 'int'
|   |       | `-BinaryOperator 0x776520 <col:30, col:35> 'int' '<<'
|   |       |   |-IntegerLiteral 0x7764e0 <col:30> 'int' 1
|   |       |   `-IntegerLiteral 0x776500 <col:35> 'int' 4
|   |       `-IntegerLiteral 0x776560 <line:470:33> 'int' 1
|   `-ReturnStmt 0x7776b8 <line:471:5, col:25>
|     `-BinaryOperator 0x777698 <col:12, col:25> 'BOOL *' '+'
|       |-ImplicitCastExpr 0x776648 <col:12> 'BOOL *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x776608 <col:12> 'BOOL [16]' lvalue Var 0x775718 'flag_table' 'BOOL [16]'
|       `-ImplicitCastExpr 0x777680 <col:25> 'UINTPTR':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x776628 <col:25> 'UINTPTR':'unsigned int' lvalue Var 0x775ce0 'p' 'UINTPTR':'unsigned int'
|-FunctionDecl 0x777888 <line:474:1, line:482:1> line:474:20 used get_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0x777730 <col:29, col:35> col:35 used addr 'void *'
| |-ParmVarDecl 0x7777b0 <col:41, col:45> col:45 used model 'int'
| `-CompoundStmt 0x777f40 <line:475:1, line:482:1>
|   |-DeclStmt 0x777aa0 <line:476:5, col:57>
|   | `-VarDecl 0x777948 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0x777a60 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0x777a48 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x7779b0 <col:22> 'BOOL *(void *)' Function 0x772e78 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0x777a88 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x7779d0 <col:52> 'void *' lvalue ParmVar 0x777730 'addr' 'void *'
|   |-CallExpr 0x777b10 <line:478:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x777af8 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x777ab8 <col:5> 'void (int)' Function 0x772238 'maybe_release_fence' 'void (int)'
|   | `-ImplicitCastExpr 0x777b38 <col:26> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x777ad8 <col:26> 'int' lvalue ParmVar 0x7777b0 'model' 'int'
|   `-WhileStmt 0x777f28 <line:479:5, line:481:5>
|     |-BinaryOperator 0x777ee8 <line:479:12, col:66> 'int' '=='
|     | |-ImplicitCastExpr 0x777ed0 <col:12, col:61> 'int' <IntegralCast>
|     | | `-CallExpr 0x777e50 <col:12, col:61> '_Bool'
|     | |   |-ImplicitCastExpr 0x777e38 <col:12> '_Bool (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|     | |   | `-DeclRefExpr 0x777d90 <col:12> '<builtin fn type>' Function 0x777bb8 '__atomic_test_and_set' '_Bool (volatile void *, int)'
|     | |   |-ImplicitCastExpr 0x777e98 <col:35> 'volatile void *' <BitCast>
|     | |   | `-ImplicitCastExpr 0x777e80 <col:35> 'BOOL *' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x777db0 <col:35> 'BOOL *' lvalue Var 0x777948 'lock_ptr' 'BOOL *'
|     | |   `-IntegerLiteral 0x777dd0 <<built-in>:13:26> 'int' 2
|     | `-IntegerLiteral 0x777eb0 <main/los_compiler.h:479:66> 'int' 1
|     `-CompoundStmt 0x777f10 <col:69, line:481:5>
|       `-NullStmt 0x777f08 <line:480:9>
|-FunctionDecl 0x777bb8 <line:479:12> col:12 implicit used __atomic_test_and_set '_Bool (volatile void *, int)' extern
| |-ParmVarDecl 0x777c58 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0x777cc0 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x777d38 <col:12> Implicit
|-FunctionDecl 0x778098 <line:484:1, line:490:1> line:484:20 used free_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0x777f80 <col:30, col:36> col:36 used addr 'void *'
| |-ParmVarDecl 0x778000 <col:42, col:46> col:46 used model 'int'
| `-CompoundStmt 0x778638 <line:485:1, line:490:1>
|   |-DeclStmt 0x778258 <line:486:5, col:57>
|   | `-VarDecl 0x778158 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0x778218 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0x778200 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x7781c0 <col:22> 'BOOL *(void *)' Function 0x772e78 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0x778240 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x7781e0 <col:52> 'void *' lvalue ParmVar 0x777f80 'addr' 'void *'
|   |-CallExpr 0x778540 <line:488:5, col:47> 'void'
|   | |-ImplicitCastExpr 0x778528 <col:5> 'void (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x778480 <col:5> '<builtin fn type>' Function 0x7782a8 '__atomic_clear' 'void (volatile void *, int)'
|   | |-ImplicitCastExpr 0x778588 <col:21> 'volatile void *' <BitCast>
|   | | `-ImplicitCastExpr 0x778570 <col:21> 'BOOL *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x7784a0 <col:21> 'BOOL *' lvalue Var 0x778158 'lock_ptr' 'BOOL *'
|   | `-IntegerLiteral 0x7784c0 <<built-in>:14:26> 'int' 3
|   `-CallExpr 0x7785f8 <main/los_compiler.h:489:5, col:31> 'void'
|     |-ImplicitCastExpr 0x7785e0 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x7785a0 <col:5> 'void (int)' Function 0x7728b0 'maybe_acquire_fence' 'void (int)'
|     `-ImplicitCastExpr 0x778620 <col:26> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x7785c0 <col:26> 'int' lvalue ParmVar 0x778000 'model' 'int'
|-FunctionDecl 0x7782a8 <line:488:5> col:5 implicit used __atomic_clear 'void (volatile void *, int)' extern
| |-ParmVarDecl 0x778348 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0x7783b0 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x778428 <col:5> Implicit
|-FunctionDecl 0x7788b8 <line:492:1, line:501:1> line:492:23 __atomic_load_8 'UINT64 (const volatile void *, int)' static inline
| |-ParmVarDecl 0x778720 <col:39, col:60> col:60 used mem 'const volatile void *'
| |-ParmVarDecl 0x7787a0 <col:65, col:69> col:69 used model 'int'
| `-CompoundStmt 0x778e68 <line:493:1, line:501:1>
|   |-DeclStmt 0x7789e0 <line:494:5, col:15>
|   | `-VarDecl 0x778978 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0x778af0 <line:496:5, col:29>
|   | `-VarDecl 0x778a10 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x778ac8 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x778ab0 <col:26> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x778a78 <col:26> 'const volatile void *' lvalue ParmVar 0x778720 'mem' 'const volatile void *'
|   |-CallExpr 0x778bb0 <line:497:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x778b98 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x778b08 <col:5> 'void (void *, int)' Function 0x777888 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x778be0 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x778b28 <col:15> 'void *' lvalue Var 0x778a10 'memP' 'void *'
|   | `-ImplicitCastExpr 0x778bf8 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x778b48 <col:21> 'int' lvalue ParmVar 0x7787a0 'model' 'int'
|   |-BinaryOperator 0x778d28 <line:498:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0x778c10 <col:5> 'UINT64':'unsigned long long' lvalue Var 0x778978 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0x778d10 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0x778cf8 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0x778cd0 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0x778cb8 <col:22> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x778c88 <col:22> 'const volatile void *' lvalue ParmVar 0x778720 'mem' 'const volatile void *'
|   |-CallExpr 0x778dc0 <line:499:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x778da8 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x778d48 <col:5> 'void (void *, int)' Function 0x778098 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x778df0 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x778d68 <col:16> 'void *' lvalue Var 0x778a10 'memP' 'void *'
|   | `-ImplicitCastExpr 0x778e08 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x778d88 <col:22> 'int' lvalue ParmVar 0x7787a0 'model' 'int'
|   `-ReturnStmt 0x778e58 <line:500:5, col:12>
|     `-ImplicitCastExpr 0x778e40 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x778e20 <col:12> 'UINT64':'unsigned long long' lvalue Var 0x778978 'ret' 'UINT64':'unsigned long long'
|-FunctionDecl 0x7790d8 <line:503:1, line:509:1> line:503:20 __atomic_store_8 'void (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0x778ec0 <col:37, col:52> col:52 used mem 'volatile void *'
| |-ParmVarDecl 0x778f38 <col:57, col:64> col:64 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x778fb8 <col:69, col:73> col:73 used model 'int'
| `-CompoundStmt 0x779530 <line:504:1, line:509:1>
|   |-DeclStmt 0x779288 <line:505:5, col:29>
|   | `-VarDecl 0x7791a8 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x779260 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x779248 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x779210 <col:26> 'volatile void *' lvalue ParmVar 0x778ec0 'mem' 'volatile void *'
|   |-CallExpr 0x779318 <line:506:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x779300 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x7792a0 <col:5> 'void (void *, int)' Function 0x777888 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x779348 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x7792c0 <col:15> 'void *' lvalue Var 0x7791a8 'memP' 'void *'
|   | `-ImplicitCastExpr 0x779360 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x7792e0 <col:21> 'int' lvalue ParmVar 0x778fb8 'model' 'int'
|   |-BinaryOperator 0x779438 <line:507:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0x7793e8 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0x7793c0 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0x7793a8 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x779378 <col:16> 'volatile void *' lvalue ParmVar 0x778ec0 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0x779420 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x779400 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0x778f38 'val' 'UINT64':'unsigned long long'
|   `-CallExpr 0x7794d0 <line:508:5, col:27> 'void'
|     |-ImplicitCastExpr 0x7794b8 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x779458 <col:5> 'void (void *, int)' Function 0x778098 'free_lock' 'void (void *, int)'
|     |-ImplicitCastExpr 0x779500 <col:16> 'void *' <LValueToRValue>
|     | `-DeclRefExpr 0x779478 <col:16> 'void *' lvalue Var 0x7791a8 'memP' 'void *'
|     `-ImplicitCastExpr 0x779518 <col:22> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x779498 <col:22> 'int' lvalue ParmVar 0x778fb8 'model' 'int'
|-FunctionDecl 0x7797a8 <line:511:1, line:521:1> line:511:22 __atomic_exchange_8 'UINT64 (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0x779578 <col:42, col:57> col:57 used mem 'volatile void *'
| |-ParmVarDecl 0x7795f0 <col:62, col:69> col:69 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x779670 <col:74, col:78> col:78 used model 'int'
| `-CompoundStmt 0x779db8 <line:512:1, line:521:1>
|   |-DeclStmt 0x7798d8 <line:513:5, col:15>
|   | `-VarDecl 0x779870 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0x7799e8 <line:515:5, col:29>
|   | `-VarDecl 0x779908 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x7799c0 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x7799a8 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x779970 <col:26> 'volatile void *' lvalue ParmVar 0x779578 'mem' 'volatile void *'
|   |-CallExpr 0x779a78 <line:516:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x779a60 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x779a00 <col:5> 'void (void *, int)' Function 0x777888 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x779aa8 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x779a20 <col:15> 'void *' lvalue Var 0x779908 'memP' 'void *'
|   | `-ImplicitCastExpr 0x779ac0 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x779a40 <col:21> 'int' lvalue ParmVar 0x779670 'model' 'int'
|   |-BinaryOperator 0x779b98 <line:517:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0x779ad8 <col:5> 'UINT64':'unsigned long long' lvalue Var 0x779870 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0x779b80 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0x779b68 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0x779b40 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0x779b28 <col:22> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x779af8 <col:22> 'volatile void *' lvalue ParmVar 0x779578 'mem' 'volatile void *'
|   |-BinaryOperator 0x779c78 <line:518:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0x779c28 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0x779c00 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0x779be8 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x779bb8 <col:16> 'volatile void *' lvalue ParmVar 0x779578 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0x779c60 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x779c40 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0x7795f0 'val' 'UINT64':'unsigned long long'
|   |-CallExpr 0x779d10 <line:519:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x779cf8 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x779c98 <col:5> 'void (void *, int)' Function 0x778098 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x779d40 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x779cb8 <col:16> 'void *' lvalue Var 0x779908 'memP' 'void *'
|   | `-ImplicitCastExpr 0x779d58 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x779cd8 <col:22> 'int' lvalue ParmVar 0x779670 'model' 'int'
|   `-ReturnStmt 0x779da8 <line:520:5, col:12>
|     `-ImplicitCastExpr 0x779d90 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x779d70 <col:12> 'UINT64':'unsigned long long' lvalue Var 0x779870 'ret' 'UINT64':'unsigned long long'
|-VarDecl 0x779e10 <main/target_config.h:100:1, col:16> col:16 used __heap_start 'UINTPTR':'unsigned int' extern
|-VarDecl 0x77a598 <main/los_config.h:419:1, col:15> col:15 m_aucSysMem0 'UINT8 *' extern
|-TypedefDecl 0x7802a8 <main/los_interrupt.h:44:1, col:16> col:16 referenced HWI_HANDLE_T 'UINT32':'unsigned int'
| `-TypedefType 0x7650b0 'UINT32' sugar
|   |-Typedef 0x7649e0 'UINT32'
|   `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x780330 <line:46:1, col:16> col:16 referenced HWI_PRIOR_T 'UINT16':'unsigned short'
| `-TypedefType 0x780300 'UINT16' sugar
|   |-Typedef 0x764970 'UINT16'
|   `-BuiltinType 0x701b40 'unsigned short'
|-TypedefDecl 0x780398 <line:48:1, col:16> col:16 referenced HWI_MODE_T 'UINT16':'unsigned short'
| `-TypedefType 0x780300 'UINT16' sugar
|   |-Typedef 0x764970 'UINT16'
|   `-BuiltinType 0x701b40 'unsigned short'
|-TypedefDecl 0x780400 <line:50:1, col:16> col:16 HWI_ARG_T 'UINT32':'unsigned int'
| `-TypedefType 0x7650b0 'UINT32' sugar
|   |-Typedef 0x7649e0 'UINT32'
|   `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x7805b8 <line:55:1, col:35> col:16 referenced HWI_PROC_FUNC 'void (*)(void)'
| `-PointerType 0x780560 'void (*)(void)'
|   `-ParenType 0x780500 'void (void)' sugar
|     `-FunctionProtoType 0x7804d0 'void (void)' cdecl
|       `-BuiltinType 0x701a20 'void'
|-RecordDecl 0x780610 <line:57:9, line:61:1> line:57:16 struct tagIrqParam definition
| |-FieldDecl 0x7806c8 <line:58:5, col:9> col:9 swIrq 'int'
| | `-FullComment 0x80a850 <col:28, col:49>
| |   `-ParagraphComment 0x80a820 <col:28, col:49>
| |     `-TextComment 0x80a7f0 <col:28, col:49> Text=" The interrupt number "
| |-FieldDecl 0x780760 <main/los_compiler.h:327:23, main/los_interrupt.h:59:11> col:11 pDevId 'void *'
| | `-FullComment 0x80a920 <col:28, col:85>
| |   `-ParagraphComment 0x80a8f0 <col:28, col:85>
| |     `-TextComment 0x80a8c0 <col:28, col:85> Text=" The pointer to the device ID that launches the interrupt "
| `-FieldDecl 0x780838 <line:60:5, col:17> col:17 pName 'const CHAR *'
|   `-FullComment 0x80a9f0 <col:28, col:47>
|     `-ParagraphComment 0x80a9c0 <col:28, col:47>
|       `-TextComment 0x80a990 <col:28, col:47> Text=" The interrupt name "
|-TypedefDecl 0x780918 <line:57:1, line:61:3> col:3 referenced HwiIrqParam 'struct tagIrqParam':'struct tagIrqParam'
| `-ElaboratedType 0x7808c0 'struct tagIrqParam' sugar
|   `-RecordType 0x780690 'struct tagIrqParam'
|     `-Record 0x780610 'tagIrqParam'
|-RecordDecl 0x780988 <line:63:9, line:70:1> line:63:9 struct definition
| |-FieldDecl 0x780bf0 <line:64:5, col:45> col:14 referenced triggerIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0x780cf0 <line:65:5, col:43> col:14 referenced clearIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0x780df0 <line:66:5, col:44> col:14 referenced enableIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0x7831c0 <line:67:5, col:45> col:14 referenced disableIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0x783448 <line:68:5, col:65> col:14 referenced setIrqPriority 'UINT32 (*)(HWI_HANDLE_T, UINT8)'
| `-FieldDecl 0x783628 <line:69:5, col:32> col:14 referenced getCurIrqNum 'UINT32 (*)(void)'
|-TypedefDecl 0x7836d8 <line:63:1, line:70:3> col:3 referenced HwiControllerOps 'struct HwiControllerOps':'HwiControllerOps'
| `-ElaboratedType 0x783680 'struct HwiControllerOps' sugar
|   `-RecordType 0x780a10 'HwiControllerOps'
|     `-Record 0x780988 ''
|-VarDecl 0x783780 <line:72:1, col:25> col:25 used g_archHwiOps 'HwiControllerOps':'HwiControllerOps' extern
|-VarDecl 0x7837f8 <line:75:1, col:15> col:15 __stack_chk_guard 'UINT32':'unsigned int' extern
|-FunctionDecl 0x7838f8 <line:77:1, col:34> col:13 __stack_chk_fail 'void (void)' extern
|-FunctionDecl 0x783a30 <line:79:1, col:28> col:8 ArchIsIntActive 'UINT32 (void)'
|-FunctionDecl 0x783b68 <line:91:1, col:24> col:8 used ArchIntLock 'UINT32 (void)'
|-FunctionDecl 0x783ca8 <line:93:1, col:37> col:8 used HwiUnmask 'UINT32 (HWI_HANDLE_T)'
| `-ParmVarDecl 0x783c18 <col:18, col:31> col:31 hwiNum 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x783df0 <line:94:1, col:35> col:8 used HwiMask 'UINT32 (HWI_HANDLE_T)'
| `-ParmVarDecl 0x783d60 <col:16, col:29> col:29 hwiNum 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x783f98 <main/los_compiler.h:327:23, main/los_interrupt.h:95:35> col:6 used ArchIntRestore 'void (UINT32)'
| `-ParmVarDecl 0x783ea8 <col:21, col:28> col:28 intSave 'UINT32':'unsigned int'
|-FunctionDecl 0x7840d8 <line:98:1, col:26> col:8 ArchIntUnLock 'UINT32 (void)'
|-FunctionDecl 0x786c38 <line:127:1, col:64> col:8 ArchHwiDelete 'UINT32 (HWI_HANDLE_T, HwiIrqParam *)'
| |-ParmVarDecl 0x786a30 <col:22, col:35> col:35 hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0x786b28 <col:43, col:56> col:56 irqParam 'HwiIrqParam *'
| `-FullComment 0x80b7b0 <line:104:3, line:125:13>
|   |-ParagraphComment 0x80aa90 <line:104:3>
|   | `-TextComment 0x80aa60 <col:3> Text=" "
|   |-VerbatimLineComment 0x80aab0 <col:4, col:27> Text="  los_interrupt"
|   |-ParagraphComment 0x80ab20 <line:105:3>
|   | `-TextComment 0x80aaf0 <col:3> Text=" "
|   |-BlockCommandComment 0x80ab40 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0x80aba0 <col:10, col:36>
|   |   `-TextComment 0x80ab70 <col:10, col:36> Text=" Delete hardware interrupt."
|   |-ParagraphComment 0x80abf0 <line:107:3>
|   | `-TextComment 0x80abc0 <col:3> Text=" "
|   |-BlockCommandComment 0x80ac10 <col:4, line:108:49> Name="par"
|   | `-ParagraphComment 0x80ac90 <line:107:8, line:108:49>
|   |   |-TextComment 0x80ac40 <line:107:8, col:20> Text=" Description:"
|   |   `-TextComment 0x80ac60 <line:108:3, col:49> Text=" This API is used to delete hardware interrupt."
|   |-ParagraphComment 0x80ace0 <line:110:3>
|   | `-TextComment 0x80acb0 <col:3> Text=" "
|   |-BlockCommandComment 0x80ad00 <col:4, line:116:8> Name="attention"
|   | `-ParagraphComment 0x80b140 <line:111:3, line:116:8>
|   |   |-TextComment 0x80ad30 <line:111:3> Text=" "
|   |   |-HTMLStartTagComment 0x80ad50 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x80ad90 <line:112:3> Text=" "
|   |   |-HTMLStartTagComment 0x80adb0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x80adf0 <col:8, col:124> Text="The hardware interrupt module is usable only when the configuration item for hardware interrupt tailoring is enabled."
|   |   |-HTMLEndTagComment 0x80ae10 <col:125, col:129> Name="li"
|   |   |-TextComment 0x80ae40 <line:113:3> Text=" "
|   |   |-HTMLStartTagComment 0x80ae60 <col:4, col:7> Name="li"
|   |   |-TextComment 0x80aea0 <col:8, col:144> Text="Hardware interrupt number value range: [OS_USER_HWI_MIN,OS_USER_HWI_MAX]. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   |-HTMLEndTagComment 0x80aec0 <col:145, col:149> Name="li"
|   |   |-TextComment 0x80aef0 <line:114:3> Text=" "
|   |   |-HTMLStartTagComment 0x80af10 <col:4, col:7> Name="li"
|   |   |-TextComment 0x80af50 <col:8, col:85> Text="OS_HWI_MAX_NUM specifies the maximum number of interrupts that can be created."
|   |   |-HTMLEndTagComment 0x80af70 <col:86, col:90> Name="li"
|   |   |-TextComment 0x80afa0 <line:115:3> Text=" "
|   |   |-HTMLStartTagComment 0x80afc0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x80b000 <col:8, col:93> Text="Before executing an interrupt on a platform, refer to the chip manual of the platform."
|   |   |-HTMLEndTagComment 0x80b020 <col:94, col:98> Name="li"
|   |   |-TextComment 0x80b050 <line:116:3> Text=" "
|   |   `-HTMLEndTagComment 0x80b070 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x80b190 <line:118:3>
|   | `-TextComment 0x80b160 <col:3> Text=" "
|   |-ParamCommandComment 0x80b1b0 <col:4, line:119:3> [in] implicitly Param="hwiNum" ParamIndex=0
|   | `-ParagraphComment 0x80b260 <line:118:18, line:119:3>
|   |   |-TextComment 0x80b210 <line:118:18, col:134> Text="   [IN] Type#HWI_HANDLE_T: hardware interrupt number. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   `-TextComment 0x80b230 <line:119:3> Text=" "
|   |-ParamCommandComment 0x80b280 <col:4, line:121:3> [in] implicitly Param="irqParam" ParamIndex=1
|   | `-ParagraphComment 0x80b360 <line:119:20, line:121:3>
|   |   |-TextComment 0x80b2e0 <line:119:20, col:89> Text=" [IN] Type #HwiIrqParam *. ID of hardware interrupt which will base on"
|   |   |-TextComment 0x80b300 <line:120:3, col:85> Text="                                                when delete the hardware interrupt."
|   |   `-TextComment 0x80b320 <line:121:3> Text=" "
|   |-BlockCommandComment 0x80b380 <col:4, line:122:3> Name="retval"
|   | `-ParagraphComment 0x80b400 <line:121:11, line:122:3>
|   |   |-TextComment 0x80b3b0 <line:121:11, col:87> Text=" #OS_ERRNO_HWI_NUM_INVALID              0x02000900: Invalid interrupt number."
|   |   `-TextComment 0x80b3d0 <line:122:3> Text=" "
|   |-BlockCommandComment 0x80b420 <col:4, line:123:3> Name="retval"
|   | `-ParagraphComment 0x80b4a0 <line:122:11, line:123:3>
|   |   |-TextComment 0x80b450 <line:122:11, col:99> Text=" #LOS_OK                                0         : The interrupt is successfully delete."
|   |   `-TextComment 0x80b470 <line:123:3> Text=" "
|   |-BlockCommandComment 0x80b4c0 <col:4, line:125:3> Name="par"
|   | `-ParagraphComment 0x80b690 <line:123:8, line:125:3>
|   |   |-TextComment 0x80b4f0 <line:123:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x80b510 <line:124:3> Text=" "
|   |   |-HTMLStartTagComment 0x80b530 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x80b570 <col:8, col:11> Name="li"
|   |   |-TextComment 0x80b5b0 <col:12, col:78> Text="los_interrupt.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x80b5d0 <col:79, col:83> Name="li"
|   |   |-HTMLEndTagComment 0x80b600 <col:84, col:88> Name="ul"
|   |   `-TextComment 0x80b630 <line:125:3> Text=" "
|   `-BlockCommandComment 0x80b6b0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x80b710 <col:8, col:13>
|       `-TextComment 0x80b6e0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x7870c8 <line:160:1, line:164:43> line:160:8 ArchHwiCreate 'UINT32 (HWI_HANDLE_T, HWI_PRIOR_T, HWI_MODE_T, HWI_PROC_FUNC, HwiIrqParam *)'
| |-ParmVarDecl 0x786d28 <col:22, col:35> col:35 hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0x786dc0 <line:161:22, col:34> col:34 hwiPrio 'HWI_PRIOR_T':'unsigned short'
| |-ParmVarDecl 0x786e60 <line:162:22, col:33> col:33 mode 'HWI_MODE_T':'unsigned short'
| |-ParmVarDecl 0x786f00 <line:163:22, col:36> col:36 handler 'HWI_PROC_FUNC':'void (*)(void)'
| |-ParmVarDecl 0x786f78 <line:164:22, col:35> col:35 irqParam 'HwiIrqParam *'
| `-FullComment 0x80ebe0 <line:130:3, line:158:13>
|   |-ParagraphComment 0x80b850 <line:130:3>
|   | `-TextComment 0x80b820 <col:3> Text=" "
|   |-VerbatimLineComment 0x80b870 <col:4, col:27> Text="  los_interrupt"
|   |-ParagraphComment 0x80b8e0 <line:131:3>
|   | `-TextComment 0x80b8b0 <col:3> Text=" "
|   |-BlockCommandComment 0x80b900 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0x80b960 <col:10, col:38>
|   |   `-TextComment 0x80b930 <col:10, col:38> Text=" Create a hardware interrupt."
|   |-ParagraphComment 0x80b9b0 <line:133:3>
|   | `-TextComment 0x80b980 <col:3> Text=" "
|   |-BlockCommandComment 0x80b9d0 <col:4, line:134:106> Name="par"
|   | `-ParagraphComment 0x80ba50 <line:133:8, line:134:106>
|   |   |-TextComment 0x80ba00 <line:133:8, col:20> Text=" Description:"
|   |   `-TextComment 0x80ba20 <line:134:3, col:106> Text=" This API is used to configure a hardware interrupt and register a hardware interrupt handling function."
|   |-ParagraphComment 0x80baa0 <line:136:3>
|   | `-TextComment 0x80ba70 <col:3> Text=" "
|   |-BlockCommandComment 0x80bac0 <col:4, line:142:8> Name="attention"
|   | `-ParagraphComment 0x80bf00 <line:137:3, line:142:8>
|   |   |-TextComment 0x80baf0 <line:137:3> Text=" "
|   |   |-HTMLStartTagComment 0x80bb10 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x80bb50 <line:138:3> Text=" "
|   |   |-HTMLStartTagComment 0x80bb70 <col:4, col:7> Name="li"
|   |   |-TextComment 0x80bbb0 <col:8, col:124> Text="The hardware interrupt module is usable only when the configuration item for hardware interrupt tailoring is enabled."
|   |   |-HTMLEndTagComment 0x80bbd0 <col:125, col:129> Name="li"
|   |   |-TextComment 0x80bc00 <line:139:3> Text=" "
|   |   |-HTMLStartTagComment 0x80bc20 <col:4, col:7> Name="li"
|   |   |-TextComment 0x80bc60 <col:8, col:144> Text="Hardware interrupt number value range: [OS_USER_HWI_MIN,OS_USER_HWI_MAX]. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   |-HTMLEndTagComment 0x80bc80 <col:145, col:149> Name="li"
|   |   |-TextComment 0x80bcb0 <line:140:3> Text=" "
|   |   |-HTMLStartTagComment 0x80bcd0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x80bd10 <col:8, col:85> Text="OS_HWI_MAX_NUM specifies the maximum number of interrupts that can be created."
|   |   |-HTMLEndTagComment 0x80bd30 <col:86, col:90> Name="li"
|   |   |-TextComment 0x80bd60 <line:141:3> Text=" "
|   |   |-HTMLStartTagComment 0x80bd80 <col:4, col:7> Name="li"
|   |   |-TextComment 0x80bdc0 <col:8, col:93> Text="Before executing an interrupt on a platform, refer to the chip manual of the platform."
|   |   |-HTMLEndTagComment 0x80bde0 <col:94, col:98> Name="li"
|   |   |-TextComment 0x80be10 <line:142:3> Text=" "
|   |   `-HTMLEndTagComment 0x80be30 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x80e120 <line:144:3>
|   | `-TextComment 0x80bf20 <col:3> Text=" "
|   |-ParamCommandComment 0x80e140 <col:4, line:145:3> [in] implicitly Param="hwiNum" ParamIndex=0
|   | `-ParagraphComment 0x80e1f0 <line:144:18, line:145:3>
|   |   |-TextComment 0x80e1a0 <line:144:18, col:134> Text="   [IN] Type#HWI_HANDLE_T: hardware interrupt number. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   `-TextComment 0x80e1c0 <line:145:3> Text=" "
|   |-ParamCommandComment 0x80e210 <col:4, line:146:3> [in] implicitly Param="hwiPrio" ParamIndex=1
|   | `-ParagraphComment 0x80e2c0 <line:145:19, line:146:3>
|   |   |-TextComment 0x80e270 <line:145:19, col:106> Text="  [IN] Type#HWI_PRIOR_T: hardware interrupt priority. Ignore this parameter temporarily."
|   |   `-TextComment 0x80e290 <line:146:3> Text=" "
|   |-ParamCommandComment 0x80e2e0 <col:4, line:147:3> [in] implicitly Param="mode" ParamIndex=2
|   | `-ParagraphComment 0x80e390 <line:146:16, line:147:3>
|   |   |-TextComment 0x80e340 <line:146:16, col:101> Text="     [IN] Type#HWI_MODE_T: hardware interrupt mode. Ignore this parameter temporarily."
|   |   `-TextComment 0x80e360 <line:147:3> Text=" "
|   |-ParamCommandComment 0x80e3b0 <col:4, line:148:3> [in] implicitly Param="handler" ParamIndex=3
|   | `-ParagraphComment 0x80e460 <line:147:19, line:148:3>
|   |   |-TextComment 0x80e410 <line:147:19, col:107> Text="  [IN] Type#HWI_PROC_FUNC: interrupt handler used when a hardware interrupt is triggered."
|   |   `-TextComment 0x80e430 <line:148:3> Text=" "
|   |-ParamCommandComment 0x80e480 <col:4, line:149:95> [in] implicitly Param="irqParam" ParamIndex=4
|   | `-ParagraphComment 0x80e530 <line:148:20, line:149:95>
|   |   |-TextComment 0x80e4e0 <line:148:20, col:75> Text=" [IN] Type#HwiIrqParam: input parameter of the interrupt"
|   |   `-TextComment 0x80e500 <line:149:3, col:95> Text="                                         handler used when a hardware interrupt is triggered."
|   |-ParagraphComment 0x80e580 <line:151:3>
|   | `-TextComment 0x80e550 <col:3> Text=" "
|   |-BlockCommandComment 0x80e5a0 <col:4, line:152:3> Name="retval"
|   | `-ParagraphComment 0x80e620 <line:151:11, line:152:3>
|   |   |-TextComment 0x80e5d0 <line:151:11, col:108> Text=" #OS_ERRNO_HWI_PROC_FUNC_NULL               0x02000901: Null hardware interrupt handling function."
|   |   `-TextComment 0x80e5f0 <line:152:3> Text=" "
|   |-BlockCommandComment 0x80e640 <col:4, line:153:3> Name="retval"
|   | `-ParagraphComment 0x80e6c0 <line:152:11, line:153:3>
|   |   |-TextComment 0x80e670 <line:152:11, col:91> Text=" #OS_ERRNO_HWI_NUM_INVALID                  0x02000900: Invalid interrupt number."
|   |   `-TextComment 0x80e690 <line:153:3> Text=" "
|   |-BlockCommandComment 0x80e6e0 <col:4, line:154:3> Name="retval"
|   | `-ParagraphComment 0x80e760 <line:153:11, line:154:3>
|   |   |-TextComment 0x80e710 <line:153:11, col:118> Text=" #OS_ERRNO_HWI_NO_MEMORY                    0x02000903: Insufficient memory for hardware interrupt creation."
|   |   `-TextComment 0x80e730 <line:154:3> Text=" "
|   |-BlockCommandComment 0x80e780 <col:4, line:155:3> Name="retval"
|   | `-ParagraphComment 0x80e800 <line:154:11, line:155:3>
|   |   |-TextComment 0x80e7b0 <line:154:11, col:127> Text=" #OS_ERRNO_HWI_ALREADY_CREATED              0x02000904: The interrupt handler being created has already been created."
|   |   `-TextComment 0x80e7d0 <line:155:3> Text=" "
|   |-BlockCommandComment 0x80e820 <col:4, line:156:3> Name="retval"
|   | `-ParagraphComment 0x80e8a0 <line:155:11, line:156:3>
|   |   |-TextComment 0x80e850 <line:155:11, col:104> Text=" #LOS_OK                                    0         : The interrupt is successfully created."
|   |   `-TextComment 0x80e870 <line:156:3> Text=" "
|   |-BlockCommandComment 0x80e8c0 <col:4, line:158:3> Name="par"
|   | `-ParagraphComment 0x80ea90 <line:156:8, line:158:3>
|   |   |-TextComment 0x80e8f0 <line:156:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x80e910 <line:157:3> Text=" "
|   |   |-HTMLStartTagComment 0x80e930 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x80e970 <col:8, col:11> Name="li"
|   |   |-TextComment 0x80e9b0 <col:12, col:78> Text="los_interrupt.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x80e9d0 <col:79, col:83> Name="li"
|   |   |-HTMLEndTagComment 0x80ea00 <col:84, col:88> Name="ul"
|   |   `-TextComment 0x80ea30 <line:158:3> Text=" "
|   `-BlockCommandComment 0x80eab0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x80eb10 <col:8, col:13>
|       `-TextComment 0x80eae0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x787230 <main/los_compiler.h:158:22, main/los_interrupt.h:172:1> line:166:22 ArchIntTrigger 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0x7871a0 <col:37, col:50> col:50 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0x787638 <line:167:1, line:172:1>
|   |-IfStmt 0x787548 <line:168:5, line:170:5>
|   | |-BinaryOperator 0x7873d8 <line:168:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0x7873a8 <main/los_interrupt.h:168:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0x7872f8 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .triggerIrq 0x780bf0
|   | | |   `-DeclRefExpr 0x7872d8 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x783780 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x7873c0 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0x787388 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0x787360 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x787328 <col:31> 'int' 0
|   | `-CompoundStmt 0x787530 <main/los_interrupt.h:168:42, line:170:5>
|   |   `-ReturnStmt 0x787520 <line:169:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x7874f8 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x7874d8 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x787490 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x787470 <col:33> 'int' 1
|   `-ReturnStmt 0x787628 <main/los_interrupt.h:171:5, col:42>
|     `-CallExpr 0x7875e8 <col:12, col:42> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0x7875d0 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0x787580 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .triggerIrq 0x780bf0
|       |   `-DeclRefExpr 0x787560 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x783780 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0x787610 <col:36> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x7875b0 <col:36> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x7871a0 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x7876f8 <main/los_compiler.h:158:22, main/los_interrupt.h:180:1> line:174:22 ArchIntEnable 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0x787668 <col:36, col:49> col:49 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0x7883a8 <line:175:1, line:180:1>
|   |-IfStmt 0x787998 <line:176:5, line:178:5>
|   | |-BinaryOperator 0x7878a0 <line:176:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0x787870 <main/los_interrupt.h:176:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0x7877c0 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .enableIrq 0x780df0
|   | | |   `-DeclRefExpr 0x7877a0 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x783780 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x787888 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0x787850 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0x787828 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x7877f0 <col:31> 'int' 0
|   | `-CompoundStmt 0x787980 <main/los_interrupt.h:176:41, line:178:5>
|   |   `-ReturnStmt 0x787970 <line:177:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x787948 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x787928 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x7878e0 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x7878c0 <col:33> 'int' 1
|   `-ReturnStmt 0x788398 <main/los_interrupt.h:179:5, col:41>
|     `-CallExpr 0x788358 <col:12, col:41> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0x788340 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0x7879d0 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .enableIrq 0x780df0
|       |   `-DeclRefExpr 0x7879b0 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x783780 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0x788380 <col:35> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x787a00 <col:35> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x787668 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x788468 <main/los_compiler.h:158:22, main/los_interrupt.h:188:1> line:182:22 ArchIntDisable 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0x7883d8 <col:37, col:50> col:50 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0x7887f8 <line:183:1, line:188:1>
|   |-IfStmt 0x788708 <line:184:5, line:186:5>
|   | |-BinaryOperator 0x788610 <line:184:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0x7885e0 <main/los_interrupt.h:184:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0x788530 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .disableIrq 0x7831c0
|   | | |   `-DeclRefExpr 0x788510 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x783780 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x7885f8 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0x7885c0 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0x788598 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x788560 <col:31> 'int' 0
|   | `-CompoundStmt 0x7886f0 <main/los_interrupt.h:184:42, line:186:5>
|   |   `-ReturnStmt 0x7886e0 <line:185:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x7886b8 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x788698 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x788650 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x788630 <col:33> 'int' 1
|   `-ReturnStmt 0x7887e8 <main/los_interrupt.h:187:5, col:42>
|     `-CallExpr 0x7887a8 <col:12, col:42> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0x788790 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0x788740 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .disableIrq 0x7831c0
|       |   `-DeclRefExpr 0x788720 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x783780 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0x7887d0 <col:36> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x788770 <col:36> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x7883d8 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x7888b8 <main/los_compiler.h:158:22, main/los_interrupt.h:196:1> line:190:22 ArchIntClear 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0x788828 <col:35, col:48> col:48 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0x788c48 <line:191:1, line:196:1>
|   |-IfStmt 0x788b58 <line:192:5, line:194:5>
|   | |-BinaryOperator 0x788a60 <line:192:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0x788a30 <main/los_interrupt.h:192:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0x788980 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .clearIrq 0x780cf0
|   | | |   `-DeclRefExpr 0x788960 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x783780 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x788a48 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0x788a10 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0x7889e8 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x7889b0 <col:31> 'int' 0
|   | `-CompoundStmt 0x788b40 <main/los_interrupt.h:192:40, line:194:5>
|   |   `-ReturnStmt 0x788b30 <line:193:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x788b08 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x788ae8 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x788aa0 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x788a80 <col:33> 'int' 1
|   `-ReturnStmt 0x788c38 <main/los_interrupt.h:195:5, col:40>
|     `-CallExpr 0x788bf8 <col:12, col:40> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0x788be0 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0x788b90 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .clearIrq 0x780cf0
|       |   `-DeclRefExpr 0x788b70 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x783780 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0x788c20 <col:34> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x788bc0 <col:34> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x788828 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0x788e08 <main/los_compiler.h:158:22, main/los_interrupt.h:204:1> line:198:22 ArchIntSetPriority 'UINT32 (HWI_HANDLE_T, HWI_PRIOR_T)' static inline
| |-ParmVarDecl 0x788c78 <col:41, col:54> col:54 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0x788cf0 <col:62, col:74> col:74 used priority 'HWI_PRIOR_T':'unsigned short'
| `-CompoundStmt 0x7891f8 <line:199:1, line:204:1>
|   |-IfStmt 0x7890b0 <line:200:5, line:202:5>
|   | |-BinaryOperator 0x788fb8 <line:200:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0x788f88 <main/los_interrupt.h:200:9, col:22> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <LValueToRValue>
|   | | | `-MemberExpr 0x788ed8 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' lvalue .setIrqPriority 0x783448
|   | | |   `-DeclRefExpr 0x788eb8 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x783780 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x788fa0 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <BitCast>
|   | |   `-ParenExpr 0x788f68 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0x788f40 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x788f08 <col:31> 'int' 0
|   | `-CompoundStmt 0x789098 <main/los_interrupt.h:200:46, line:202:5>
|   |   `-ReturnStmt 0x789088 <line:201:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x789060 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x789040 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x788ff8 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x788fd8 <col:33> 'int' 1
|   `-ReturnStmt 0x7891e8 <main/los_interrupt.h:203:5, col:56>
|     `-CallExpr 0x789170 <col:12, col:56> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0x789158 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <LValueToRValue>
|       | `-MemberExpr 0x7890e8 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' lvalue .setIrqPriority 0x783448
|       |   `-DeclRefExpr 0x7890c8 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x783780 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       |-ImplicitCastExpr 0x7891a0 <col:40> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x789118 <col:40> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x788c78 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|       `-ImplicitCastExpr 0x7891d0 <col:48> 'UINT8':'unsigned char' <IntegralCast>
|         `-ImplicitCastExpr 0x7891b8 <col:48> 'HWI_PRIOR_T':'unsigned short' <LValueToRValue>
|           `-DeclRefExpr 0x789138 <col:48> 'HWI_PRIOR_T':'unsigned short' lvalue ParmVar 0x788cf0 'priority' 'HWI_PRIOR_T':'unsigned short'
|-FunctionDecl 0x78ab40 <main/los_compiler.h:158:22, main/los_interrupt.h:212:1> line:206:22 ArchIntCurIrqNum 'UINT32 (void)' static inline
| `-CompoundStmt 0x78ae88 <line:207:1, line:212:1>
|   |-IfStmt 0x78add8 <line:208:5, line:210:5>
|   | |-BinaryOperator 0x78ace0 <line:208:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0x78acb0 <main/los_interrupt.h:208:9, col:22> 'UINT32 (*)(void)' <LValueToRValue>
|   | | | `-MemberExpr 0x78ac00 <col:9, col:22> 'UINT32 (*)(void)' lvalue .getCurIrqNum 0x783628
|   | | |   `-DeclRefExpr 0x78abe0 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x783780 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0x78acc8 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(void)' <BitCast>
|   | |   `-ParenExpr 0x78ac90 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0x78ac68 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x78ac30 <col:31> 'int' 0
|   | `-CompoundStmt 0x78adc0 <main/los_interrupt.h:208:44, line:210:5>
|   |   `-ReturnStmt 0x78adb0 <line:209:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0x78ad88 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0x78ad68 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0x78ad20 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0x78ad00 <col:33> 'int' 1
|   `-ReturnStmt 0x78ae78 <main/los_interrupt.h:211:5, col:38>
|     `-CallExpr 0x78ae58 <col:12, col:38> 'UINT32':'unsigned int'
|       `-ImplicitCastExpr 0x78ae40 <col:12, col:25> 'UINT32 (*)(void)' <LValueToRValue>
|         `-MemberExpr 0x78ae10 <col:12, col:25> 'UINT32 (*)(void)' lvalue .getCurIrqNum 0x783628
|           `-DeclRefExpr 0x78adf0 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x783780 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|-FunctionDecl 0x78aff8 <main/los_compiler.h:158:22, main/los_interrupt.h:217:1> line:214:33 ArchIntOpsGet 'HwiControllerOps *(void)' static inline
| `-CompoundStmt 0x78b0e0 <line:215:1, line:217:1>
|   `-ReturnStmt 0x78b0d0 <line:216:5, col:13>
|     `-UnaryOperator 0x78b0b8 <col:12, col:13> 'HwiControllerOps *' prefix '&' cannot overflow
|       `-DeclRefExpr 0x78b098 <col:13> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0x783780 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|-TypedefDecl 0x78b130 </usr/lib/llvm-10/lib/clang/10.0.0/include/stdarg.h:14:1, col:27> col:27 va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0x78b100 '__builtin_va_list' sugar
|   |-Typedef 0x702968 '__builtin_va_list'
|   `-ConstantArrayType 0x702910 'struct __va_list_tag [1]' 1 
|     `-RecordType 0x702750 'struct __va_list_tag'
|       `-Record 0x7026c8 '__va_list_tag'
|-TypedefDecl 0x78b198 <line:32:1, col:27> col:27 referenced __gnuc_va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0x78b100 '__builtin_va_list' sugar
|   |-Typedef 0x702968 '__builtin_va_list'
|   `-ConstantArrayType 0x702910 'struct __va_list_tag [1]' 1 
|     `-RecordType 0x702750 'struct __va_list_tag'
|       `-Record 0x7026c8 '__va_list_tag'
|-TypedefDecl 0x78b208 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:46:1, col:23> col:23 referenced size_t 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x78b278 </usr/include/x86_64-linux-gnu/bits/types.h:31:1, col:23> col:23 referenced __u_char 'unsigned char'
| `-BuiltinType 0x701b20 'unsigned char'
|-TypedefDecl 0x78b2e8 <line:32:1, col:28> col:28 referenced __u_short 'unsigned short'
| `-BuiltinType 0x701b40 'unsigned short'
|-TypedefDecl 0x78b358 <line:33:1, col:22> col:22 referenced __u_int 'unsigned int'
| `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x78b3c8 <line:34:1, col:27> col:27 referenced __u_long 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x78b438 <line:37:1, col:21> col:21 referenced __int8_t 'signed char'
| `-BuiltinType 0x701a80 'signed char'
|-TypedefDecl 0x78b4a8 <line:38:1, col:23> col:23 referenced __uint8_t 'unsigned char'
| `-BuiltinType 0x701b20 'unsigned char'
|-TypedefDecl 0x78b518 <line:39:1, col:26> col:26 referenced __int16_t 'short'
| `-BuiltinType 0x701aa0 'short'
|-TypedefDecl 0x78b588 <line:40:1, col:28> col:28 referenced __uint16_t 'unsigned short'
| `-BuiltinType 0x701b40 'unsigned short'
|-TypedefDecl 0x78b5f8 <line:41:1, col:20> col:20 referenced __int32_t 'int'
| `-BuiltinType 0x701ac0 'int'
|-TypedefDecl 0x78b668 <line:42:1, col:22> col:22 referenced __uint32_t 'unsigned int'
| `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x78b6d8 <line:44:1, col:25> col:25 referenced __int64_t 'long'
| `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x78b748 <line:45:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x78b7d0 <line:52:1, col:18> col:18 __int_least8_t '__int8_t':'signed char'
| `-TypedefType 0x78b7a0 '__int8_t' sugar
|   |-Typedef 0x78b438 '__int8_t'
|   `-BuiltinType 0x701a80 'signed char'
|-TypedefDecl 0x78b860 <line:53:1, col:19> col:19 __uint_least8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x78b830 '__uint8_t' sugar
|   |-Typedef 0x78b4a8 '__uint8_t'
|   `-BuiltinType 0x701b20 'unsigned char'
|-TypedefDecl 0x78b8f0 <line:54:1, col:19> col:19 __int_least16_t '__int16_t':'short'
| `-TypedefType 0x78b8c0 '__int16_t' sugar
|   |-Typedef 0x78b518 '__int16_t'
|   `-BuiltinType 0x701aa0 'short'
|-TypedefDecl 0x78b980 <line:55:1, col:20> col:20 __uint_least16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x78b950 '__uint16_t' sugar
|   |-Typedef 0x78b588 '__uint16_t'
|   `-BuiltinType 0x701b40 'unsigned short'
|-TypedefDecl 0x78ba10 <line:56:1, col:19> col:19 __int_least32_t '__int32_t':'int'
| `-TypedefType 0x78b9e0 '__int32_t' sugar
|   |-Typedef 0x78b5f8 '__int32_t'
|   `-BuiltinType 0x701ac0 'int'
|-TypedefDecl 0x78baa0 <line:57:1, col:20> col:20 __uint_least32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x78ba70 '__uint32_t' sugar
|   |-Typedef 0x78b668 '__uint32_t'
|   `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x7a95e0 <line:58:1, col:19> col:19 __int_least64_t '__int64_t':'long'
| `-TypedefType 0x78bb00 '__int64_t' sugar
|   |-Typedef 0x78b6d8 '__int64_t'
|   `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7a9670 <line:59:1, col:20> col:20 __uint_least64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x7a9640 '__uint64_t' sugar
|   |-Typedef 0x78b748 '__uint64_t'
|   `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7a96e0 <line:63:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7a9750 <line:64:1, col:27> col:27 referenced __u_quad_t 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7a97c0 <line:72:1, col:18> col:18 __intmax_t 'long'
| `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7a9830 <line:73:1, col:27> col:27 __uintmax_t 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7a98a0 <line:137:22, line:145:25> col:25 referenced __dev_t 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7a9910 <line:137:22, line:146:25> col:25 referenced __uid_t 'unsigned int'
| `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x7a9980 <line:137:22, line:147:25> col:25 referenced __gid_t 'unsigned int'
| `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x7a99f0 <line:137:22, line:148:25> col:25 referenced __ino_t 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7a9a60 <line:137:22, line:149:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7a9ad0 <line:137:22, line:150:26> col:26 referenced __mode_t 'unsigned int'
| `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x7a9b40 <line:137:22, line:151:27> col:27 referenced __nlink_t 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7a9bb0 <line:137:22, line:152:25> col:25 referenced __off_t 'long'
| `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7a9c20 <line:137:22, line:153:27> col:27 referenced __off64_t 'long'
| `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7a9c90 <line:137:22, line:154:25> col:25 referenced __pid_t 'int'
| `-BuiltinType 0x701ac0 'int'
|-RecordDecl 0x7a9ce8 </usr/include/x86_64-linux-gnu/bits/typesizes.h:72:24, col:47> col:24 struct definition
| `-FieldDecl 0x7a9e30 <col:33, col:44> col:37 __val 'int [2]'
|-TypedefDecl 0x7a9ed8 </usr/include/x86_64-linux-gnu/bits/types.h:137:22, line:155:26> col:26 referenced __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x7a9e80 'struct __fsid_t' sugar
|   `-RecordType 0x7a9d70 '__fsid_t'
|     `-Record 0x7a9ce8 ''
|-TypedefDecl 0x7a9f60 <line:137:22, line:156:27> col:27 referenced __clock_t 'long'
| `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7a9fd0 <line:137:22, line:157:26> col:26 __rlim_t 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7aa040 <line:137:22, line:158:28> col:28 __rlim64_t 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7aa0b0 <line:137:22, line:159:24> col:24 referenced __id_t 'unsigned int'
| `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x7aa120 <line:137:22, line:160:26> col:26 referenced __time_t 'long'
| `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7aa190 <line:137:22, line:161:30> col:30 __useconds_t 'unsigned int'
| `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x7aa200 <line:137:22, line:162:31> col:31 referenced __suseconds_t 'long'
| `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7aa270 <line:137:22, line:164:27> col:27 referenced __daddr_t 'int'
| `-BuiltinType 0x701ac0 'int'
|-TypedefDecl 0x7aa2e0 <line:137:22, line:165:25> col:25 referenced __key_t 'int'
| `-BuiltinType 0x701ac0 'int'
|-TypedefDecl 0x7aa350 <line:137:22, line:168:29> col:29 referenced __clockid_t 'int'
| `-BuiltinType 0x701ac0 'int'
|-TypedefDecl 0x7aa3c0 <line:137:22, line:171:27> col:27 referenced __timer_t 'void *'
| `-PointerType 0x7021e0 'void *'
|   `-BuiltinType 0x701a20 'void'
|-TypedefDecl 0x7aa430 <line:137:22, line:174:29> col:29 referenced __blksize_t 'long'
| `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7aa4a0 <line:137:22, line:179:28> col:28 referenced __blkcnt_t 'long'
| `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7aa510 <line:137:22, line:180:30> col:30 __blkcnt64_t 'long'
| `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7aa580 <line:137:22, line:183:30> col:30 referenced __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7b25c8 <line:137:22, line:184:32> col:32 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7b2638 <line:137:22, line:187:30> col:30 referenced __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7b26a8 <line:137:22, line:188:32> col:32 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7b2718 <line:137:22, line:191:28> col:28 __fsword_t 'long'
| `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7b2788 <line:137:22, line:193:27> col:27 referenced __ssize_t 'long'
| `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7b27f8 <line:137:22, line:196:33> col:33 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7b2868 <line:137:22, line:198:33> col:33 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7b28f0 <line:202:1, col:19> col:19 referenced __loff_t '__off64_t':'long'
| `-TypedefType 0x7b28c0 '__off64_t' sugar
|   |-Typedef 0x7a9c20 '__off64_t'
|   `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7b2960 <line:203:1, col:15> col:15 referenced __caddr_t 'char *'
| `-PointerType 0x702630 'char *'
|   `-BuiltinType 0x701a60 'char'
|-TypedefDecl 0x7b29d0 <line:137:22, line:206:25> col:25 __intptr_t 'long'
| `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7b2a40 <line:137:22, line:209:23> col:23 __socklen_t 'unsigned int'
| `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x7b2ab0 <line:214:1, col:13> col:13 __sig_atomic_t 'int'
| `-BuiltinType 0x701ac0 'int'
|-RecordDecl 0x7b2b08 </usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:13:9, line:21:1> line:13:9 struct definition
| |-FieldDecl 0x7b2bc8 <line:15:3, col:7> col:7 __count 'int'
| |-RecordDecl 0x7b2c18 <line:16:3, line:20:3> line:16:3 union definition
| | |-FieldDecl 0x7b2cd8 <<built-in>:87:23, /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:18:19> col:19 __wch 'unsigned int'
| | `-FieldDecl 0x7b2db8 <line:19:5, col:18> col:10 __wchb 'char [4]'
| `-FieldDecl 0x7b2e68 <line:16:3, line:20:5> col:5 __value 'union (anonymous union at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)':'union __mbstate_t::(anonymous at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)'
|-TypedefDecl 0x7b2f18 <line:13:1, line:21:3> col:3 referenced __mbstate_t 'struct __mbstate_t':'__mbstate_t'
| `-ElaboratedType 0x7b2ec0 'struct __mbstate_t' sugar
|   `-RecordType 0x7b2b90 '__mbstate_t'
|     `-Record 0x7b2b08 ''
|-RecordDecl 0x7b2f88 </usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h:10:9, line:14:1> line:10:16 struct _G_fpos_t definition
| |-FieldDecl 0x7b3060 <line:12:3, col:11> col:11 __pos '__off_t':'long'
| `-FieldDecl 0x7b30e0 <line:13:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
|-TypedefDecl 0x7b3188 <line:10:1, line:14:3> col:3 referenced __fpos_t 'struct _G_fpos_t':'struct _G_fpos_t'
| `-ElaboratedType 0x7b3130 'struct _G_fpos_t' sugar
|   `-RecordType 0x7b3010 'struct _G_fpos_t'
|     `-Record 0x7b2f88 '_G_fpos_t'
|-RecordDecl 0x7b31f8 </usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h:10:9, line:14:1> line:10:16 struct _G_fpos64_t definition
| |-FieldDecl 0x7b32b0 <line:12:3, col:13> col:13 __pos '__off64_t':'long'
| `-FieldDecl 0x7b3310 <line:13:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
|-TypedefDecl 0x7b33b8 <line:10:1, line:14:3> col:3 __fpos64_t 'struct _G_fpos64_t':'struct _G_fpos64_t'
| `-ElaboratedType 0x7b3360 'struct _G_fpos64_t' sugar
|   `-RecordType 0x7b3280 'struct _G_fpos64_t'
|     `-Record 0x7b31f8 '_G_fpos64_t'
|-RecordDecl 0x7b3428 </usr/include/x86_64-linux-gnu/bits/types/__FILE.h:4:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0x7b3520 <line:5:1, col:25> col:25 __FILE 'struct _IO_FILE':'struct _IO_FILE'
| `-ElaboratedType 0x7b34d0 'struct _IO_FILE' sugar
|   `-RecordType 0x7b34b0 'struct _IO_FILE'
|     `-Record 0x7b52b8 '_IO_FILE'
|-RecordDecl 0x7b4ef0 prev 0x7b3428 </usr/include/x86_64-linux-gnu/bits/types/FILE.h:4:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0x7b4f90 <line:7:1, col:25> col:25 referenced FILE 'struct _IO_FILE':'struct _IO_FILE'
| `-ElaboratedType 0x7b34d0 'struct _IO_FILE' sugar
|   `-RecordType 0x7b34b0 'struct _IO_FILE'
|     `-Record 0x7b52b8 '_IO_FILE'
|-RecordDecl 0x7b4fe8 prev 0x7b4ef0 </usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h:35:1, col:8> col:8 struct _IO_FILE
|-RecordDecl 0x7b5068 <line:36:1, col:8> col:8 struct _IO_marker
|-RecordDecl 0x7b5110 <line:37:1, col:8> col:8 struct _IO_codecvt
|-RecordDecl 0x7b51b0 <line:38:1, col:8> col:8 struct _IO_wide_data
|-TypedefDecl 0x7b5260 <line:43:1, col:14> col:14 referenced _IO_lock_t 'void'
| `-BuiltinType 0x701a20 'void'
|-RecordDecl 0x7b52b8 prev 0x7b4fe8 <line:49:1, line:99:1> line:49:8 struct _IO_FILE definition
| |-FieldDecl 0x7b5350 <line:51:3, col:7> col:7 _flags 'int'
| |-FieldDecl 0x7b53b8 <line:54:3, col:9> col:9 _IO_read_ptr 'char *'
| |-FieldDecl 0x7b5420 <line:55:3, col:9> col:9 _IO_read_end 'char *'
| |-FieldDecl 0x7b5488 <line:56:3, col:9> col:9 _IO_read_base 'char *'
| |-FieldDecl 0x7b54f0 <line:57:3, col:9> col:9 _IO_write_base 'char *'
| |-FieldDecl 0x7b5558 <line:58:3, col:9> col:9 _IO_write_ptr 'char *'
| |-FieldDecl 0x7b55c0 <line:59:3, col:9> col:9 _IO_write_end 'char *'
| |-FieldDecl 0x7b5628 <line:60:3, col:9> col:9 _IO_buf_base 'char *'
| |-FieldDecl 0x7b5690 <line:61:3, col:9> col:9 _IO_buf_end 'char *'
| |-FieldDecl 0x7b56f8 <line:64:3, col:9> col:9 _IO_save_base 'char *'
| |-FieldDecl 0x7b5760 <line:65:3, col:9> col:9 _IO_backup_base 'char *'
| |-FieldDecl 0x7b57c8 <line:66:3, col:9> col:9 _IO_save_end 'char *'
| |-FieldDecl 0x7b58d0 <line:68:3, col:22> col:22 _markers 'struct _IO_marker *'
| |-FieldDecl 0x7b59a0 <line:70:3, col:20> col:20 _chain 'struct _IO_FILE *'
| |-FieldDecl 0x7b5a08 <line:72:3, col:7> col:7 _fileno 'int'
| |-FieldDecl 0x7b5a70 <line:73:3, col:7> col:7 _flags2 'int'
| |-FieldDecl 0x7b5ad0 <line:74:3, col:11> col:11 _old_offset '__off_t':'long'
| |-FieldDecl 0x7b5b38 <line:77:3, col:18> col:18 _cur_column 'unsigned short'
| |-FieldDecl 0x7b5ba0 <line:78:3, col:15> col:15 _vtable_offset 'signed char'
| |-FieldDecl 0x7b5c88 <line:79:3, col:19> col:8 _shortbuf 'char [1]'
| |-FieldDecl 0x7b5d38 <line:81:3, col:15> col:15 _lock '_IO_lock_t *'
| |-FieldDecl 0x7b5d98 <line:89:3, col:13> col:13 _offset '__off64_t':'long'
| |-FieldDecl 0x7b5ea0 <line:91:3, col:23> col:23 _codecvt 'struct _IO_codecvt *'
| |-FieldDecl 0x7b7100 <line:92:3, col:25> col:25 _wide_data 'struct _IO_wide_data *'
| |-FieldDecl 0x7b7178 <line:93:3, col:20> col:20 _freeres_list 'struct _IO_FILE *'
| |-FieldDecl 0x7b71e0 <line:94:3, col:9> col:9 _freeres_buf 'void *'
| |-FieldDecl 0x7b7260 <line:95:3, col:10> col:10 __pad5 'size_t':'unsigned long'
| |-FieldDecl 0x7b72c8 <line:96:3, col:7> col:7 _mode 'int'
| `-FieldDecl 0x7b7518 <line:98:3, col:74> col:8 _unused2 'char [20]'
|-TypedefDecl 0x7b75a0 prev 0x78b130 </usr/include/stdio.h:52:1, col:24> col:24 referenced va_list '__gnuc_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0x7b7570 '__gnuc_va_list' sugar
|   |-Typedef 0x78b198 '__gnuc_va_list'
|   `-TypedefType 0x78b100 '__builtin_va_list' sugar
|     |-Typedef 0x702968 '__builtin_va_list'
|     `-ConstantArrayType 0x702910 'struct __va_list_tag [1]' 1 
|       `-RecordType 0x702750 'struct __va_list_tag'
|         `-Record 0x7026c8 '__va_list_tag'
|-TypedefDecl 0x7b7608 <line:63:1, col:17> col:17 off_t '__off_t':'long'
| `-TypedefType 0x7b3030 '__off_t' sugar
|   |-Typedef 0x7a9bb0 '__off_t'
|   `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7b7690 <line:77:1, col:19> col:19 ssize_t '__ssize_t':'long'
| `-TypedefType 0x7b7660 '__ssize_t' sugar
|   |-Typedef 0x7b2788 '__ssize_t'
|   `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7b7720 <line:84:1, col:18> col:18 referenced fpos_t '__fpos_t':'struct _G_fpos_t'
| `-TypedefType 0x7b76f0 '__fpos_t' sugar
|   |-Typedef 0x7b3188 '__fpos_t'
|   `-ElaboratedType 0x7b3130 'struct _G_fpos_t' sugar
|     `-RecordType 0x7b3010 'struct _G_fpos_t'
|       `-Record 0x7b2f88 '_G_fpos_t'
|-VarDecl 0x7b77d8 <line:137:1, col:14> col:14 stdin 'FILE *' extern
|-VarDecl 0x7b7850 <line:138:1, col:14> col:14 stdout 'FILE *' extern
|-VarDecl 0x7b78c8 <line:139:1, col:14> col:14 stderr 'FILE *' extern
|-FunctionDecl 0x7b7a10 <line:146:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:146:12 remove 'int (const char *)' extern
| |-ParmVarDecl 0x7b7948 <col:20, col:32> col:32 __filename 'const char *'
| `-NoThrowAttr 0x7b7ab8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7b7c80 </usr/include/stdio.h:148:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:148:12 rename 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x7b7b28 <col:20, col:32> col:32 __old 'const char *'
| |-ParmVarDecl 0x7b7ba8 <col:39, col:51> col:51 __new 'const char *'
| `-NoThrowAttr 0x7b7d30 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7bd3e0 </usr/include/stdio.h:152:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:152:12 renameat 'int (int, const char *, int, const char *)' extern
| |-ParmVarDecl 0x7b7da0 <col:22, col:26> col:26 __oldfd 'int'
| |-ParmVarDecl 0x7b7e20 <col:35, col:47> col:47 __old 'const char *'
| |-ParmVarDecl 0x7b7ea0 <col:54, col:58> col:58 __newfd 'int'
| |-ParmVarDecl 0x7b7f20 <line:153:8, col:20> col:20 __new 'const char *'
| `-NoThrowAttr 0x7bd4a0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7bd5e8 </usr/include/stdio.h:173:1, col:27> col:14 tmpfile 'FILE *(void)' extern
|-FunctionDecl 0x7bd770 <line:187:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:187:14 tmpnam 'char *(char *)' extern
| |-ParmVarDecl 0x7bd6a0 <col:22, col:28> col:28 __s 'char *'
| `-NoThrowAttr 0x7bd818 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7bd920 </usr/include/stdio.h:192:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:192:14 tmpnam_r 'char *(char *)' extern
| |-ParmVarDecl 0x7bd888 <col:24, col:30> col:30 __s 'char *'
| `-NoThrowAttr 0x7bd9c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7bdb90 </usr/include/stdio.h:204:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdio.h:204:14 tempnam 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x7bda38 <col:23, col:35> col:35 __dir 'const char *'
| |-ParmVarDecl 0x7bdab8 <col:42, col:54> col:54 __pfx 'const char *'
| |-NoThrowAttr 0x7bdc40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0x7bdc98 <line:208:47> malloc
|-FunctionDecl 0x7bddd0 </usr/include/stdio.h:213:1, col:34> col:12 fclose 'int (FILE *)' extern
| `-ParmVarDecl 0x7bdcd0 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x7bdf20 <line:218:1, col:34> col:12 fflush 'int (FILE *)' extern
| `-ParmVarDecl 0x7bde88 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x7be070 <line:227:1, col:43> col:12 fflush_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x7bdfd8 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0x7be308 <line:246:14> col:14 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x7bf410 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7bf478 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x7bf4f0 prev 0x7be308 <col:1, line:247:37> line:246:14 fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x7be130 <col:21, col:44> col:44 __filename 'const char *restrict'
| `-ParmVarDecl 0x7be1b0 <line:247:7, col:30> col:30 __modes 'const char *restrict'
|-FunctionDecl 0x7bf7d8 <line:252:1, line:254:34> line:252:14 freopen 'FILE *(const char *restrict, const char *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0x7bf5b8 <col:23, col:46> col:46 __filename 'const char *restrict'
| |-ParmVarDecl 0x7bf638 <line:253:9, col:32> col:32 __modes 'const char *restrict'
| `-ParmVarDecl 0x7bf6b0 <line:254:9, col:26> col:26 __stream 'FILE *restrict'
|-FunctionDecl 0x7bfa38 <line:279:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:279:14 fdopen 'FILE *(int, const char *)' extern
| |-ParmVarDecl 0x7bf8a8 <col:22, col:26> col:26 __fd 'int'
| |-ParmVarDecl 0x7bf928 <col:32, col:44> col:44 __modes 'const char *'
| `-NoThrowAttr 0x7bfae8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7bfd78 </usr/include/stdio.h:292:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:292:14 fmemopen 'FILE *(void *, size_t, const char *)' extern
| |-ParmVarDecl 0x7bfb58 <col:24, col:30> col:30 __s 'void *'
| |-ParmVarDecl 0x7bfbd0 <col:35, col:42> col:42 __len 'size_t':'unsigned long'
| |-ParmVarDecl 0x7bfc50 <col:49, col:61> col:61 __modes 'const char *'
| `-NoThrowAttr 0x7bfe30 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7c00b8 </usr/include/stdio.h:298:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:298:14 open_memstream 'FILE *(char **, size_t *)' extern
| |-ParmVarDecl 0x7bfed0 <col:30, col:37> col:37 __bufloc 'char **'
| |-ParmVarDecl 0x7bffa8 <col:47, col:55> col:55 __sizeloc 'size_t *'
| `-NoThrowAttr 0x7c0168 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7c0368 </usr/include/stdio.h:304:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:304:13 setbuf 'void (FILE *restrict, char *restrict)' extern
| |-ParmVarDecl 0x7c01d0 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0x7c0250 <col:48, col:65> col:65 __buf 'char *restrict'
| `-NoThrowAttr 0x7c0430 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7c0760 </usr/include/stdio.h:308:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:308:12 setvbuf 'int (FILE *restrict, char *restrict, int, size_t)' extern
| |-ParmVarDecl 0x7c0498 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0x7c0518 <col:48, col:65> col:65 __buf 'char *restrict'
| |-ParmVarDecl 0x7c0598 <line:309:7, col:11> col:11 __modes 'int'
| |-ParmVarDecl 0x7c0610 <col:20, col:27> col:27 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0x7c0820 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7c0aa8 </usr/include/stdio.h:314:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:314:13 setbuffer 'void (FILE *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0x7c0888 <col:24, col:41> col:41 __stream 'FILE *restrict'
| |-ParmVarDecl 0x7c0908 <col:51, col:68> col:68 __buf 'char *restrict'
| |-ParmVarDecl 0x7c0980 <line:315:10, col:17> col:17 __size 'size_t':'unsigned long'
| `-NoThrowAttr 0x7c0b60 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7c0cb8 </usr/include/stdio.h:318:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:318:13 setlinebuf 'void (FILE *)' extern
| |-ParmVarDecl 0x7c0bc8 <col:25, col:31> col:31 __stream 'FILE *'
| `-NoThrowAttr 0x7c0d60 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7c0fb0 </usr/include/stdio.h:326:12> col:12 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x7c1050 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x7c10b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x7c1130 <col:12> Implicit printf 2 3
|-FunctionDecl 0x7c1198 prev 0x7c0fb0 <col:1, line:327:43> line:326:12 fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x7c0dc8 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0x7c0e48 <line:327:7, col:30> col:30 __format 'const char *restrict'
| `-FormatAttr 0x7c1278 <line:326:12> Inherited printf 2 3
|-FunctionDecl 0x7c1430 <line:332:12> col:12 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x7c14d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x7c1540 <col:12> Implicit printf 1 2
|-FunctionDecl 0x7c15a8 prev 0x7c1430 <col:1, col:56> col:12 used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x7c12c8 <col:20, col:43> col:43 __format 'const char *restrict'
| `-FormatAttr 0x7c1680 <col:12> Inherited printf 1 2
|-FunctionDecl 0x7c1878 <line:334:12> col:12 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x7c1918 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x7c1980 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x7c19f8 <col:12> Implicit printf 2 3
|-FunctionDecl 0x7c1a60 prev 0x7c1878 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:56:49> /usr/include/stdio.h:334:12 sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x7c16d0 <col:21, col:38> col:38 __s 'char *restrict'
| |-ParmVarDecl 0x7c1750 <line:335:7, col:30> col:30 __format 'const char *restrict'
| |-FormatAttr 0x7c1b68 <line:334:12> Inherited printf 2 3
| `-NoThrowAttr 0x7c1b10 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
|-FunctionDecl 0x7c1e80 </usr/include/stdio.h:341:12> col:12 implicit vfprintf 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7c1f20 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x7c1f88 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x7c1ff0 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x7c2070 <col:12> Implicit printf 2 0
|-FunctionDecl 0x7c20d8 prev 0x7c1e80 <col:1, line:342:28> line:341:12 vfprintf 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7c1bb0 <col:22, col:39> col:39 __s 'FILE *restrict'
| |-ParmVarDecl 0x7c1c30 <col:44, col:67> col:67 __format 'const char *restrict'
| |-ParmVarDecl 0x7c1d10 <line:342:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x7c21c0 <line:341:12> Inherited printf 2 0
|-FunctionDecl 0x7c2580 <line:347:12> col:12 implicit vprintf 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7c2620 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x7c2688 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x7c2700 <col:12> Implicit printf 1 0
|-FunctionDecl 0x7c2768 prev 0x7c2580 <col:1, col:74> col:12 vprintf 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7c2210 <col:21, col:44> col:44 __format 'const char *restrict'
| |-ParmVarDecl 0x7c2288 <col:54, col:69> col:69 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x7c2848 <col:12> Inherited printf 1 0
|-FunctionDecl 0x7c2ac0 <line:349:12> col:12 implicit vsprintf 'int (char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7c2b60 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x7c2bc8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x7c2c30 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x7c2cb0 <col:12> Implicit printf 2 0
|-FunctionDecl 0x7c2d18 prev 0x7c2ac0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:56:49> /usr/include/stdio.h:349:12 vsprintf 'int (char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7c2898 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0x7c2918 <col:44, col:67> col:67 __format 'const char *restrict'
| |-ParmVarDecl 0x7c2990 <line:350:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-FormatAttr 0x7c2e28 <line:349:12> Inherited printf 2 0
| `-NoThrowAttr 0x7c2dd0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
|-FunctionDecl 0x7c3108 </usr/include/stdio.h:354:12> col:12 implicit snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x7c31a8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x7c3210 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x7c3278 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x7c32f8 <col:12> Implicit printf 3 4
|-FunctionDecl 0x7c3360 prev 0x7c3108 <col:1, line:356:62> line:354:12 snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x7c2e78 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0x7c2ef0 <col:44, col:51> col:51 __maxlen 'size_t':'unsigned long'
| |-ParmVarDecl 0x7c2f70 <line:355:8, col:31> col:31 __format 'const char *restrict'
| |-NoThrowAttr 0x7c3418 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
| `-FormatAttr 0x7c3470 </usr/include/stdio.h:356:32, col:60> printf 3 4
|-FunctionDecl 0x7c3820 <line:358:12> col:12 implicit vsnprintf 'int (char *, unsigned long, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7c38c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x7c3928 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x7c3990 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x7c39f8 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x7c3a80 <col:12> Implicit printf 3 0
|-FunctionDecl 0x7c3ae8 prev 0x7c3820 <col:1, line:360:62> line:358:12 vsnprintf 'int (char *, unsigned long, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7c34c0 <col:23, col:40> col:40 __s 'char *restrict'
| |-ParmVarDecl 0x7c3590 <col:45, col:52> col:52 __maxlen 'size_t':'unsigned long'
| |-ParmVarDecl 0x7c3610 <line:359:9, col:32> col:32 __format 'const char *restrict'
| |-ParmVarDecl 0x7c3688 <col:42, col:57> col:57 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-NoThrowAttr 0x7c3ba8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
| `-FormatAttr 0x7c3c00 </usr/include/stdio.h:360:32, col:60> printf 3 0
|-FunctionDecl 0x7c3ec0 <line:379:1, line:381:52> line:379:12 vdprintf 'int (int, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7c3c50 <col:22, col:26> col:26 __fd 'int'
| |-ParmVarDecl 0x7c3cd0 <col:32, col:55> col:55 __fmt 'const char *restrict'
| |-ParmVarDecl 0x7c3d48 <line:380:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x7c3f78 <line:381:22, col:50> printf 2 0
|-FunctionDecl 0x7c41e8 <line:382:1, line:383:52> line:382:12 dprintf 'int (int, const char *restrict, ...)' extern
| |-ParmVarDecl 0x7c3ff8 <col:21, col:25> col:25 __fd 'int'
| |-ParmVarDecl 0x7c4078 <col:31, col:54> col:54 __fmt 'const char *restrict'
| `-FormatAttr 0x7c4298 <line:383:22, col:50> printf 2 3
|-FunctionDecl 0x7c4430 <line:391:12> col:12 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x7c44d0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x7c65c0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x7c6638 <col:12> Implicit scanf 2 3
|-FunctionDecl 0x7c66a0 prev 0x7c4430 <col:1, line:392:42> line:391:12 fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x7c4310 <col:20, col:37> col:37 __stream 'FILE *restrict'
| |-ParmVarDecl 0x7c4390 <line:392:6, col:29> col:29 __format 'const char *restrict'
| `-FormatAttr 0x7c6780 <line:391:12> Inherited scanf 2 3
|-FunctionDecl 0x7c6868 <line:397:12> col:12 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x7c6908 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x7c6978 <col:12> Implicit scanf 1 2
|-FunctionDecl 0x7c69e0 prev 0x7c6868 <col:1, col:55> col:12 scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x7c67d0 <col:19, col:42> col:42 __format 'const char *restrict'
| `-FormatAttr 0x7c6ab8 <col:12> Inherited scanf 1 2
|-FunctionDecl 0x7c6ca8 <line:399:12> col:12 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x7c6d48 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x7c6db0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x7c6e28 <col:12> Implicit scanf 2 3
|-FunctionDecl 0x7c6e90 prev 0x7c6ca8 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:399:12 sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x7c6b08 <col:20, col:43> col:43 __s 'const char *restrict'
| |-ParmVarDecl 0x7c6b88 <line:400:6, col:29> col:29 __format 'const char *restrict'
| |-FormatAttr 0x7c6f98 <line:399:12> Inherited scanf 2 3
| `-NoThrowAttr 0x7c6f40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7c7170 prev 0x7c66a0 </usr/include/stdio.h:407:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/stdio.h:407:24 fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x7c6fe0 <col:33, col:50> col:50 __stream 'FILE *restrict'
| |-ParmVarDecl 0x7c7060 <line:408:5, col:28> col:28 __format 'const char *restrict'
| |-FormatAttr 0x7c7298 <line:391:12> Inherited scanf 2 3
| `-AsmLabelAttr 0x7c7210 <<scratch space>:14:1> "__isoc99_fscanf" IsLiteralLabel
|-FunctionDecl 0x7c73e8 prev 0x7c69e0 </usr/include/stdio.h:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/stdio.h:410:24 scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x7c72e8 <col:32, col:55> col:55 __format 'const char *restrict'
| |-FormatAttr 0x7c7508 <line:397:12> Inherited scanf 1 2
| `-AsmLabelAttr 0x7c7488 <<scratch space>:16:1> "__isoc99_scanf" IsLiteralLabel
|-FunctionDecl 0x7c86c8 prev 0x7c6e90 </usr/include/stdio.h:412:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:412:28 sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x7c7558 <col:37, col:60> col:60 __s 'const char *restrict'
| |-ParmVarDecl 0x7c85f8 <line:413:9, col:32> col:32 __format 'const char *restrict'
| |-FormatAttr 0x7c8818 <line:399:12> Inherited scanf 2 3
| |-AsmLabelAttr 0x7c8768 <<scratch space>:18:1> "__isoc99_sscanf" IsLiteralLabel
| `-NoThrowAttr 0x7c87f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7c8a90 </usr/include/stdio.h:432:12> col:12 implicit vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7c8b30 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x7c8b98 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x7c8c00 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x7c8c80 <col:12> Implicit scanf 2 0
|-FunctionDecl 0x7c8ce8 prev 0x7c8a90 <col:1, line:434:51> line:432:12 vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7c8860 <col:21, col:38> col:38 __s 'FILE *restrict'
| |-ParmVarDecl 0x7c88e0 <col:43, col:66> col:66 __format 'const char *restrict'
| |-ParmVarDecl 0x7c8958 <line:433:7, col:22> col:22 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x7c8da0 <line:434:22, col:49> scanf 2 0
|-FunctionDecl 0x7c8fc8 <line:440:12> col:12 implicit vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7c9068 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x7c90d0 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x7c9148 <col:12> Implicit scanf 1 0
|-FunctionDecl 0x7c91b0 prev 0x7c8fc8 <col:1, line:441:51> line:440:12 vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7c8e20 <col:20, col:43> col:43 __format 'const char *restrict'
| |-ParmVarDecl 0x7c8e98 <col:53, col:68> col:68 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x7c9260 <line:441:22, col:49> scanf 1 0
|-FunctionDecl 0x7ca450 <line:444:12> col:12 implicit vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7ca4f0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x7ca558 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x7ca5c0 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x7ca640 <col:12> Implicit scanf 2 0
|-FunctionDecl 0x7ca6a8 prev 0x7ca450 <col:1, line:446:59> line:444:12 vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7c92e0 <col:21, col:44> col:44 __s 'const char *restrict'
| |-ParmVarDecl 0x7c9360 <line:445:7, col:30> col:30 __format 'const char *restrict'
| |-ParmVarDecl 0x7c93d8 <col:40, col:55> col:55 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-NoThrowAttr 0x7ca760 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-FormatAttr 0x7ca7b8 </usr/include/stdio.h:446:30, col:57> scanf 2 0
|-FunctionDecl 0x7caa58 prev 0x7c8ce8 <line:451:1, line:455:51> line:451:24 vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7ca800 <line:452:11, col:28> col:28 __s 'FILE *restrict'
| |-ParmVarDecl 0x7ca880 <line:453:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x7ca8f8 <col:37, col:52> col:52 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0x7caaf8 <<scratch space>:21:1> "__isoc99_vfscanf" IsLiteralLabel
| `-FormatAttr 0x7cab88 </usr/include/stdio.h:455:22, col:49> scanf 2 0
|-FunctionDecl 0x7cad70 prev 0x7c91b0 <line:456:1, line:458:51> line:456:24 vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7cabd8 <col:33, col:56> col:56 __format 'const char *restrict'
| |-ParmVarDecl 0x7cac50 <line:457:5, col:20> col:20 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0x7cae10 <<scratch space>:23:1> "__isoc99_vscanf" IsLiteralLabel
| `-FormatAttr 0x7cae98 </usr/include/stdio.h:458:22, col:49> scanf 1 0
|-FunctionDecl 0x7cb108 prev 0x7ca6a8 <line:459:1, line:463:51> line:459:28 vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x7caee8 <line:460:8, col:31> col:31 __s 'const char *restrict'
| |-ParmVarDecl 0x7caf68 <line:461:8, col:31> col:31 __format 'const char *restrict'
| |-ParmVarDecl 0x7cafe0 <line:462:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0x7cb1a8 <<scratch space>:25:1> "__isoc99_vsscanf" IsLiteralLabel
| |-NoThrowAttr 0x7cb238 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-FormatAttr 0x7cb260 </usr/include/stdio.h:463:22, col:49> scanf 2 0
|-FunctionDecl 0x7cb340 <line:485:1, col:33> col:12 fgetc 'int (FILE *)' extern
| `-ParmVarDecl 0x7cb2a8 <col:19, col:25> col:25 __stream 'FILE *'
|-FunctionDecl 0x79feb8 <line:486:1, col:32> col:12 getc 'int (FILE *)' extern
| `-ParmVarDecl 0x79fe20 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0x7a0030 <line:492:1, col:25> col:12 getchar 'int (void)' extern
|-FunctionDecl 0x7a0178 <line:499:1, col:41> col:12 getc_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x7a00e0 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x7a02c0 <line:500:1, col:34> col:12 getchar_unlocked 'int (void)' extern
|-FunctionDecl 0x7a0408 <line:510:1, col:42> col:12 fgetc_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x7a0370 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0x7a0660 <line:521:1, col:42> col:12 fputc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x7a04c8 <col:19, col:23> col:23 __c 'int'
| `-ParmVarDecl 0x7a0540 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0x7a0840 <line:522:1, col:41> col:12 putc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x7a0728 <col:18, col:22> col:22 __c 'int'
| `-ParmVarDecl 0x7a07a0 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x7a09d0 <line:528:1, col:28> col:12 putchar 'int (int)' extern
| `-ParmVarDecl 0x7a0908 <col:21, col:25> col:25 __c 'int'
|-FunctionDecl 0x7a0ba8 <line:537:1, col:51> col:12 fputc_unlocked 'int (int, FILE *)' extern
| |-ParmVarDecl 0x7a0a90 <col:28, col:32> col:32 __c 'int'
| `-ParmVarDecl 0x7a0b08 <col:37, col:43> col:43 __stream 'FILE *'
|-FunctionDecl 0x7a0e30 <line:545:1, col:50> col:12 putc_unlocked 'int (int, FILE *)' extern
| |-ParmVarDecl 0x7a0c70 <col:27, col:31> col:31 __c 'int'
| `-ParmVarDecl 0x7a0ce8 <col:36, col:42> col:42 __stream 'FILE *'
|-FunctionDecl 0x7a0f90 <line:546:1, col:37> col:12 putchar_unlocked 'int (int)' extern
| `-ParmVarDecl 0x7a0ef8 <col:30, col:34> col:34 __c 'int'
|-FunctionDecl 0x7a10e0 <line:553:1, col:32> col:12 getw 'int (FILE *)' extern
| `-ParmVarDecl 0x7a1048 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0x7a12b8 <line:556:1, col:41> col:12 putw 'int (int, FILE *)' extern
| |-ParmVarDecl 0x7a11a0 <col:18, col:22> col:22 __w 'int'
| `-ParmVarDecl 0x7a1218 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x7a15a0 <line:564:1, col:77> col:14 fgets 'char *(char *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0x7a1380 <col:21, col:38> col:38 __s 'char *restrict'
| |-ParmVarDecl 0x7a1400 <col:43, col:47> col:47 __n 'int'
| `-ParmVarDecl 0x7a1478 <col:52, col:69> col:69 __stream 'FILE *restrict'
|-FunctionDecl 0x7a1928 <line:603:1, line:605:55> line:603:18 __getdelim '__ssize_t (char **restrict, size_t *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0x7a1670 <col:30, col:48> col:48 __lineptr 'char **restrict'
| |-ParmVarDecl 0x7a16e8 <line:604:30, col:49> col:49 __n 'size_t *restrict'
| |-ParmVarDecl 0x7a1768 <col:54, col:58> col:58 __delimiter 'int'
| `-ParmVarDecl 0x7a17e0 <line:605:30, col:47> col:47 __stream 'FILE *restrict'
|-FunctionDecl 0x7a1c18 <line:606:1, line:608:53> line:606:18 getdelim '__ssize_t (char **restrict, size_t *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0x7a1a00 <col:28, col:46> col:46 __lineptr 'char **restrict'
| |-ParmVarDecl 0x7a1a78 <line:607:28, col:47> col:47 __n 'size_t *restrict'
| |-ParmVarDecl 0x7a1af8 <col:52, col:56> col:56 __delimiter 'int'
| `-ParmVarDecl 0x7a1b70 <line:608:28, col:45> col:45 __stream 'FILE *restrict'
|-FunctionDecl 0x7a2f78 <line:616:1, line:618:52> line:616:18 getline '__ssize_t (char **restrict, size_t *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0x7a1cf0 <col:27, col:45> col:45 __lineptr 'char **restrict'
| |-ParmVarDecl 0x7a1d68 <line:617:27, col:46> col:46 __n 'size_t *restrict'
| `-ParmVarDecl 0x7a2e50 <line:618:27, col:44> col:44 __stream 'FILE *restrict'
|-FunctionDecl 0x7a31e0 <line:626:1, col:72> col:12 fputs 'int (const char *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0x7a3048 <col:19, col:42> col:42 __s 'const char *restrict'
| `-ParmVarDecl 0x7a30c0 <col:47, col:64> col:64 __stream 'FILE *restrict'
|-FunctionDecl 0x7a3340 <line:632:1, col:33> col:12 puts 'int (const char *)' extern
| `-ParmVarDecl 0x7a32a8 <col:18, col:30> col:30 __s 'const char *'
|-FunctionDecl 0x7a3518 <line:639:1, col:43> col:12 ungetc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x7a3400 <col:20, col:24> col:24 __c 'int'
| `-ParmVarDecl 0x7a3478 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0x7a38d8 <line:646:15> col:15 implicit fread 'unsigned long (void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x7a3978 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x7a39e0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x7a3a48 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0x7a3ab0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x7a3b38 prev 0x7a38d8 <col:1, line:647:45> line:646:15 fread 'unsigned long (void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x7a35e0 <col:22, col:39> col:39 __ptr 'void *restrict'
| |-ParmVarDecl 0x7a3658 <col:46, col:53> col:53 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x7a36d0 <line:647:8, col:15> col:15 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x7a3748 <col:20, col:37> col:37 __stream 'FILE *restrict'
|-FunctionDecl 0x7d5568 <line:652:15> col:15 implicit fwrite 'unsigned long (const void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x7d5608 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x7d5670 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x7d56d8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0x7d5740 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x7d57c8 prev 0x7d5568 <col:1, line:653:41> line:652:15 fwrite 'unsigned long (const void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x7a3c40 <col:23, col:46> col:46 __ptr 'const void *restrict'
| |-ParmVarDecl 0x7a3cb8 <col:53, col:60> col:60 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x7a3d30 <line:653:9, col:16> col:16 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x7a3da8 <col:21, col:38> col:38 __s 'FILE *restrict'
|-FunctionDecl 0x7d5ab0 <line:673:1, line:674:47> line:673:15 fread_unlocked 'size_t (void *restrict, size_t, size_t, FILE *restrict)' extern
| |-ParmVarDecl 0x7d58a0 <col:31, col:48> col:48 __ptr 'void *restrict'
| |-ParmVarDecl 0x7d5918 <col:55, col:62> col:62 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x7d5990 <line:674:10, col:17> col:17 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x7d5a08 <col:22, col:39> col:39 __stream 'FILE *restrict'
|-FunctionDecl 0x7d5d98 <line:675:1, line:676:48> line:675:15 fwrite_unlocked 'size_t (const void *restrict, size_t, size_t, FILE *restrict)' extern
| |-ParmVarDecl 0x7d5b88 <col:32, col:55> col:55 __ptr 'const void *restrict'
| |-ParmVarDecl 0x7d5c00 <col:62, col:69> col:69 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x7d5c78 <line:676:11, col:18> col:18 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x7d5cf0 <col:23, col:40> col:40 __stream 'FILE *restrict'
|-FunctionDecl 0x7d6090 <line:684:1, col:63> col:12 fseek 'int (FILE *, long, int)' extern
| |-ParmVarDecl 0x7d5e68 <col:19, col:25> col:25 __stream 'FILE *'
| |-ParmVarDecl 0x7d5ee8 <col:35, col:44> col:44 __off 'long'
| `-ParmVarDecl 0x7d5f68 <col:51, col:55> col:55 __whence 'int'
|-FunctionDecl 0x7d6250 <line:689:1, col:38> col:17 ftell 'long (FILE *)' extern
| `-ParmVarDecl 0x7d6158 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0x7d6398 <line:694:1, col:35> col:13 rewind 'void (FILE *)' extern
| `-ParmVarDecl 0x7d6308 <col:21, col:27> col:27 __stream 'FILE *'
|-FunctionDecl 0x7d6640 <line:707:1, col:63> col:12 fseeko 'int (FILE *, __off_t, int)' extern
| |-ParmVarDecl 0x7d6460 <col:20, col:26> col:26 __stream 'FILE *'
| |-ParmVarDecl 0x7d64d8 <col:36, col:44> col:44 __off '__off_t':'long'
| `-ParmVarDecl 0x7d6558 <col:51, col:55> col:55 __whence 'int'
|-FunctionDecl 0x7d67c8 <line:712:1, col:38> col:16 ftello '__off_t (FILE *)' extern
| `-ParmVarDecl 0x7d6708 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0x7d6a90 <line:731:1, col:72> col:12 fgetpos 'int (FILE *restrict, fpos_t *restrict)' extern
| |-ParmVarDecl 0x7d6880 <col:21, col:38> col:38 __stream 'FILE *restrict'
| `-ParmVarDecl 0x7d6978 <col:48, col:67> col:67 __pos 'fpos_t *restrict'
|-FunctionDecl 0x7d6d40 <line:736:1, col:56> col:12 fsetpos 'int (FILE *, const fpos_t *)' extern
| |-ParmVarDecl 0x7d6b50 <col:21, col:27> col:27 __stream 'FILE *'
| `-ParmVarDecl 0x7d6c28 <col:37, col:51> col:51 __pos 'const fpos_t *'
|-FunctionDecl 0x7d6e90 <line:757:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:757:13 clearerr 'void (FILE *)' extern
| |-ParmVarDecl 0x7d6e00 <col:23, col:29> col:29 __stream 'FILE *'
| `-NoThrowAttr 0x7d6f38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7d7038 </usr/include/stdio.h:759:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:759:12 feof 'int (FILE *)' extern
| |-ParmVarDecl 0x7d6fa0 <col:18, col:24> col:24 __stream 'FILE *'
| `-NoThrowAttr 0x7d70e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7d71e0 </usr/include/stdio.h:761:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:761:12 ferror 'int (FILE *)' extern
| |-ParmVarDecl 0x7d7148 <col:20, col:26> col:26 __stream 'FILE *'
| `-NoThrowAttr 0x7d7288 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7d7380 </usr/include/stdio.h:765:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:765:13 clearerr_unlocked 'void (FILE *)' extern
| |-ParmVarDecl 0x7d72f0 <col:32, col:38> col:38 __stream 'FILE *'
| `-NoThrowAttr 0x7d7428 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7d7538 </usr/include/stdio.h:766:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:766:12 feof_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0x7d74a0 <col:27, col:33> col:33 __stream 'FILE *'
| `-NoThrowAttr 0x7d75e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7d76e0 </usr/include/stdio.h:767:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:767:12 ferror_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0x7d7648 <col:29, col:35> col:35 __stream 'FILE *'
| `-NoThrowAttr 0x7d7788 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7d78b8 </usr/include/stdio.h:775:1, col:36> col:13 perror 'void (const char *)' extern
| `-ParmVarDecl 0x7d77f8 <col:21, col:33> col:33 __s 'const char *'
|-VarDecl 0x7d7978 </usr/include/x86_64-linux-gnu/bits/sys_errlist.h:26:1, col:12> col:12 sys_nerr 'int' extern
|-VarDecl 0x7d7a60 <line:27:1, col:38> col:26 sys_errlist 'const char *const []' extern
|-FunctionDecl 0x7d7b70 </usr/include/stdio.h:786:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:786:12 fileno 'int (FILE *)' extern
| |-ParmVarDecl 0x7d7ad8 <col:20, col:26> col:26 __stream 'FILE *'
| `-NoThrowAttr 0x7d7c18 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7d7d18 </usr/include/stdio.h:791:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:791:12 fileno_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0x7d7c80 <col:29, col:35> col:35 __stream 'FILE *'
| `-NoThrowAttr 0x7d7dc0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7d7f48 </usr/include/stdio.h:800:1, col:63> col:14 popen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x7d7e30 <col:21, col:33> col:33 __command 'const char *'
| `-ParmVarDecl 0x7d7eb0 <col:44, col:56> col:56 __modes 'const char *'
|-FunctionDecl 0x7d80a0 <line:806:1, col:34> col:12 pclose 'int (FILE *)' extern
| `-ParmVarDecl 0x7d8008 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x7d81f8 <line:812:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:812:14 ctermid 'char *(char *)' extern
| |-ParmVarDecl 0x7d8160 <col:23, col:29> col:29 __s 'char *'
| `-NoThrowAttr 0x7d82a0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7d8398 </usr/include/stdio.h:840:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:840:13 flockfile 'void (FILE *)' extern
| |-ParmVarDecl 0x7d8308 <col:24, col:30> col:30 __stream 'FILE *'
| `-NoThrowAttr 0x7d8470 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7d8570 </usr/include/stdio.h:844:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:844:12 ftrylockfile 'int (FILE *)' extern
| |-ParmVarDecl 0x7d84d8 <col:26, col:32> col:32 __stream 'FILE *'
| `-NoThrowAttr 0x7d8618 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7d8710 </usr/include/stdio.h:847:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:847:13 funlockfile 'void (FILE *)' extern
| |-ParmVarDecl 0x7d8680 <col:26, col:32> col:32 __stream 'FILE *'
| `-NoThrowAttr 0x7d87b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7d88b8 </usr/include/stdio.h:858:1, col:27> col:12 __uflow 'int (FILE *)' extern
| `-ParmVarDecl 0x7d8820 <col:21, col:26> col:27 'FILE *'
|-FunctionDecl 0x7d8b10 <line:859:1, col:35> col:12 __overflow 'int (FILE *, int)' extern
| |-ParmVarDecl 0x7d8970 <col:24, col:29> col:30 'FILE *'
| `-ParmVarDecl 0x7d89f0 <col:32> col:35 'int'
|-FunctionDecl 0x7d8e40 </usr/include/string.h:43:14> col:14 implicit memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x7d8ee0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x7d8f48 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x7d8fb0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x7d9030 prev 0x7d8e40 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:43:14 memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x7d8bd8 <col:22, col:39> col:39 __dest 'void *restrict'
| |-ParmVarDecl 0x7d8c58 <col:47, col:70> col:70 __src 'const void *restrict'
| |-ParmVarDecl 0x7d8cd0 <line:44:8, col:15> col:15 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7d90e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7d9140 <line:293:44, /usr/include/string.h:44:44> 1 2
|-FunctionDecl 0x7d93b0 <line:47:14> col:14 implicit memmove 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x7da490 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x7da4f8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x7da560 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x7da5e0 prev 0x7d93b0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:47:14 memmove 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x7d9190 <col:23, col:29> col:29 __dest 'void *'
| |-ParmVarDecl 0x7d9210 <col:37, col:49> col:49 __src 'const void *'
| |-ParmVarDecl 0x7d9288 <col:56, col:63> col:63 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7da698 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7da6f0 <line:293:44, /usr/include/string.h:48:30> 1 2
|-FunctionDecl 0x7daa40 <line:54:14> col:14 implicit memccpy 'void *(void *, const void *, int, unsigned long)' extern
| |-ParmVarDecl 0x7daae0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x7dab48 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x7dabb0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x7dac18 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x7daca0 prev 0x7daa40 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:54:14 memccpy 'void *(void *, const void *, int, unsigned long)' extern
| |-ParmVarDecl 0x7da740 <col:23, col:40> col:40 __dest 'void *restrict'
| |-ParmVarDecl 0x7da7c0 <col:48, col:71> col:71 __src 'const void *restrict'
| |-ParmVarDecl 0x7da840 <line:55:9, col:13> col:13 __c 'int'
| |-ParmVarDecl 0x7da8b8 <col:18, col:25> col:25 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7dad60 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7dadb8 <line:293:44, /usr/include/string.h:56:30> 1 2
|-FunctionDecl 0x7db050 <line:61:14> col:14 implicit memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x7db0f0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x7db158 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x7db1c0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x7db240 prev 0x7db050 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:61:14 memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0x7dae10 <col:22, col:28> col:28 __s 'void *'
| |-ParmVarDecl 0x7dae90 <col:33, col:37> col:37 __c 'int'
| |-ParmVarDecl 0x7daf08 <col:42, col:49> col:49 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7db2f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7db350 <line:293:44, /usr/include/string.h:61:75> 1
|-FunctionDecl 0x7db620 <line:64:12> col:12 implicit memcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x7db6c0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x7db728 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x7db790 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x7db810 prev 0x7db620 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:64:12 memcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x7db3a0 <col:20, col:32> col:32 __s1 'const void *'
| |-ParmVarDecl 0x7db420 <col:38, col:50> col:50 __s2 'const void *'
| |-ParmVarDecl 0x7db4b0 <col:56, col:63> col:63 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7db8c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7db920 <line:226:45>
| `-NonNullAttr 0x7db948 <line:293:44, /usr/include/string.h:65:49> 1 2
|-FunctionDecl 0x7dbbe0 <line:91:14> col:14 implicit memchr 'void *(const void *, int, unsigned long)' extern
| |-ParmVarDecl 0x7dbc80 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x7dbce8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x7dbd50 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x7dbdd0 prev 0x7dbbe0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:91:14 memchr 'void *(const void *, int, unsigned long)' extern
| |-ParmVarDecl 0x7db9a0 <col:22, col:34> col:34 __s 'const void *'
| |-ParmVarDecl 0x7dba20 <col:39, col:43> col:43 __c 'int'
| |-ParmVarDecl 0x7dba98 <col:48, col:55> col:55 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7dbe88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7dbee0 <line:226:45>
| `-NonNullAttr 0x7dbf08 <line:293:44, /usr/include/string.h:92:47> 1
|-FunctionDecl 0x7dc140 <line:122:14> col:14 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x7dc1e0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x7dc248 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x7dc2c0 prev 0x7dc140 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:122:14 strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x7dbf60 <col:22, col:39> col:39 __dest 'char *restrict'
| |-ParmVarDecl 0x7dbfe0 <col:47, col:70> col:70 __src 'const char *restrict'
| |-NoThrowAttr 0x7dc370 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7dc3c8 <line:293:44, /usr/include/string.h:123:30> 1 2
|-FunctionDecl 0x7dc690 <line:125:14> col:14 implicit strncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x7dc730 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x7dc798 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7dc800 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x7dc880 prev 0x7dc690 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:125:14 strncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x7dc420 <col:23, col:40> col:40 __dest 'char *restrict'
| |-ParmVarDecl 0x7dc4b0 <line:126:9, col:32> col:32 __src 'const char *restrict'
| |-ParmVarDecl 0x7dc528 <col:39, col:46> col:46 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7dc938 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7dc990 <line:293:44, /usr/include/string.h:127:30> 1 2
|-FunctionDecl 0x7dcb40 <line:130:14> col:14 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x7dcbe0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x7dcc48 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x7dccc0 prev 0x7dcb40 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:130:14 strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x7dc9e0 <col:22, col:39> col:39 __dest 'char *restrict'
| |-ParmVarDecl 0x7dca60 <col:47, col:70> col:70 __src 'const char *restrict'
| |-NoThrowAttr 0x7dcd70 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7dcdc8 <line:293:44, /usr/include/string.h:131:30> 1 2
|-FunctionDecl 0x7dd000 <line:133:14> col:14 implicit strncat 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x7dd0a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x7dd108 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7dd170 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x7dd1f0 prev 0x7dd000 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:133:14 strncat 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x7dce20 <col:23, col:40> col:40 __dest 'char *restrict'
| |-ParmVarDecl 0x7dcea0 <col:48, col:71> col:71 __src 'const char *restrict'
| |-ParmVarDecl 0x7dcf18 <line:134:9, col:16> col:16 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7dd2a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7dd300 <line:293:44, /usr/include/string.h:134:45> 1 2
|-FunctionDecl 0x7dd4c0 <line:137:12> col:12 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x7dd560 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7dd5c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x7dd640 prev 0x7dd4c0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:137:12 strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x7dd350 <col:20, col:32> col:32 __s1 'const char *'
| |-ParmVarDecl 0x7dd3d0 <col:38, col:50> col:50 __s2 'const char *'
| |-NoThrowAttr 0x7dd6f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7dd748 <line:226:45>
| `-NonNullAttr 0x7dd770 <line:293:44, /usr/include/string.h:138:49> 1 2
|-FunctionDecl 0x7dda20 <line:140:12> col:12 implicit strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x7ddac0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x7ddb28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7ddb90 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x7ddc10 prev 0x7dda20 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:140:12 strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x7dd7c0 <col:21, col:33> col:33 __s1 'const char *'
| |-ParmVarDecl 0x7dd840 <col:39, col:51> col:51 __s2 'const char *'
| |-ParmVarDecl 0x7dd8b8 <col:57, col:64> col:64 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7ddcc8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7ddd20 <line:226:45>
| `-NonNullAttr 0x7ddd48 <line:293:44, /usr/include/string.h:141:49> 1 2
|-FunctionDecl 0x7ddf00 <line:144:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:144:12 strcoll 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x7ddda0 <col:21, col:33> col:33 __s1 'const char *'
| |-ParmVarDecl 0x7dde20 <col:39, col:51> col:51 __s2 'const char *'
| |-NoThrowAttr 0x7ddfb0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7de008 <line:226:45>
| `-NonNullAttr 0x7de030 <line:293:44, /usr/include/string.h:145:49> 1 2
|-FunctionDecl 0x7de2b8 <line:147:15> col:15 implicit strxfrm 'unsigned long (char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x7de358 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x7de3c0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7de428 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x7de4d0 prev 0x7de2b8 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:147:15 strxfrm 'unsigned long (char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x7de080 <col:24, col:41> col:41 __dest 'char *restrict'
| |-ParmVarDecl 0x7de100 <line:148:10, col:33> col:33 __src 'const char *restrict'
| |-ParmVarDecl 0x7de178 <col:40, col:47> col:47 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7de588 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7de5e0 <line:293:44, /usr/include/string.h:149:27> 2
|-RecordDecl 0x7de618 </usr/include/x86_64-linux-gnu/bits/types/__locale_t.h:28:1, line:40:1> line:28:8 struct __locale_struct definition
| |-RecordDecl 0x7de6c0 parent 0x7019c8 <line:31:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x7de8f0 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x7de980 <line:34:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x7de9e8 <line:35:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x7dea50 <line:36:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x7deb40 <line:39:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x7dec40 <line:42:1, col:33> col:33 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x7debf0 'struct __locale_struct *'
|   `-ElaboratedType 0x7deb90 'struct __locale_struct' sugar
|     `-RecordType 0x7de6a0 'struct __locale_struct'
|       `-Record 0x7de618 '__locale_struct'
|-TypedefDecl 0x7decd0 </usr/include/x86_64-linux-gnu/bits/types/locale_t.h:24:1, col:20> col:20 referenced locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x7deca0 '__locale_t' sugar
|   |-Typedef 0x7dec40 '__locale_t'
|   `-PointerType 0x7debf0 'struct __locale_struct *'
|     `-ElaboratedType 0x7deb90 'struct __locale_struct' sugar
|       `-RecordType 0x7de6a0 'struct __locale_struct'
|         `-Record 0x7de618 '__locale_struct'
|-FunctionDecl 0x7deff0 </usr/include/string.h:156:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:156:12 strcoll_l 'int (const char *, const char *, locale_t)' extern
| |-ParmVarDecl 0x7ded40 <col:23, col:35> col:35 __s1 'const char *'
| |-ParmVarDecl 0x7dedc0 <col:41, col:53> col:53 __s2 'const char *'
| |-ParmVarDecl 0x7dee60 <col:59, col:68> col:68 __l 'locale_t':'struct __locale_struct *'
| |-NoThrowAttr 0x7df0a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7df100 <line:226:45>
| `-NonNullAttr 0x7df128 <line:293:44, /usr/include/string.h:157:52> 1 2 3
|-FunctionDecl 0x7e1420 <line:160:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:160:15 strxfrm_l 'size_t (char *, const char *, size_t, locale_t)' extern
| |-ParmVarDecl 0x7df188 <col:26, col:32> col:32 __dest 'char *'
| |-ParmVarDecl 0x7df208 <col:40, col:52> col:52 __src 'const char *'
| |-ParmVarDecl 0x7df280 <col:59, col:66> col:66 __n 'size_t':'unsigned long'
| |-ParmVarDecl 0x7df2f8 <line:161:5, col:14> col:14 __l 'locale_t':'struct __locale_struct *'
| |-NoThrowAttr 0x7e14e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7e1538 <line:293:44, /usr/include/string.h:161:43> 2 4
|-FunctionDecl 0x7e1680 <line:167:14> col:14 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x7e1720 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x7e1790 prev 0x7e1680 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:167:14 strdup 'char *(const char *)' extern
| |-ParmVarDecl 0x7e1590 <col:22, col:34> col:34 __s 'const char *'
| |-NoThrowAttr 0x7e1838 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-RestrictAttr 0x7e1890 <line:208:47> malloc
| `-NonNullAttr 0x7e18b8 <line:293:44, /usr/include/string.h:168:48> 1
|-FunctionDecl 0x7e1ac0 <line:175:14> col:14 implicit strndup 'char *(const char *, unsigned long)' extern
| |-ParmVarDecl 0x7e1b60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7e1bc8 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x7e1c40 prev 0x7e1ac0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:175:14 strndup 'char *(const char *, unsigned long)' extern
| |-ParmVarDecl 0x7e1910 <col:23, col:35> col:35 __string 'const char *'
| |-ParmVarDecl 0x7e1988 <col:45, col:52> col:52 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7e1cf0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-RestrictAttr 0x7e1d48 <line:208:47> malloc
| `-NonNullAttr 0x7e1d70 <line:293:44, /usr/include/string.h:176:48> 1
|-FunctionDecl 0x7e1f40 <line:226:14> col:14 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x7e1fe0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7e2048 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x7e20c0 prev 0x7e1f40 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:226:14 strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x7e1dc0 <col:22, col:34> col:34 __s 'const char *'
| |-ParmVarDecl 0x7e1e40 <col:39, col:43> col:43 __c 'int'
| |-NoThrowAttr 0x7e2170 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7e21c8 <line:226:45>
| `-NonNullAttr 0x7e21f0 <line:293:44, /usr/include/string.h:227:46> 1
|-FunctionDecl 0x7e2380 <line:253:14> col:14 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x7e2430 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7e2498 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x7e2510 prev 0x7e2380 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:253:14 strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x7e2240 <col:23, col:35> col:35 __s 'const char *'
| |-ParmVarDecl 0x7e22c0 <col:40, col:44> col:44 __c 'int'
| |-NoThrowAttr 0x7e25c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7e2618 <line:226:45>
| `-NonNullAttr 0x7e2640 <line:293:44, /usr/include/string.h:254:46> 1
|-FunctionDecl 0x7e2868 <line:273:15> col:15 implicit strcspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0x7e2908 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7e2970 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x7e29e8 prev 0x7e2868 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:273:15 strcspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0x7e2690 <col:24, col:36> col:36 __s 'const char *'
| |-ParmVarDecl 0x7e2710 <col:41, col:53> col:53 __reject 'const char *'
| |-NoThrowAttr 0x7e2a98 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7e2af0 <line:226:45>
| `-NonNullAttr 0x7e2b18 <line:293:44, /usr/include/string.h:274:49> 1 2
|-FunctionDecl 0x7e2cc8 <line:277:15> col:15 implicit strspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0x7e2d68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7e2dd0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x7e2e48 prev 0x7e2cc8 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:277:15 strspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0x7e2b70 <col:23, col:35> col:35 __s 'const char *'
| |-ParmVarDecl 0x7e2bf0 <col:40, col:52> col:52 __accept 'const char *'
| |-NoThrowAttr 0x7e2ef8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7e2f50 <line:226:45>
| `-NonNullAttr 0x7e2f78 <line:293:44, /usr/include/string.h:278:49> 1 2
|-FunctionDecl 0x7e3130 <line:303:14> col:14 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x7e31d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7e3238 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x7e32b0 prev 0x7e3130 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:303:14 strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x7e2fd0 <col:23, col:35> col:35 __s 'const char *'
| |-ParmVarDecl 0x7e3050 <col:40, col:52> col:52 __accept 'const char *'
| |-NoThrowAttr 0x7e3360 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7e33b8 <line:226:45>
| `-NonNullAttr 0x7e33e0 <line:293:44, /usr/include/string.h:304:49> 1 2
|-FunctionDecl 0x7e35a0 <line:330:14> col:14 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x7e3640 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7e36a8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x7e3720 prev 0x7e35a0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:330:14 strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x7e3440 <col:22, col:34> col:34 __haystack 'const char *'
| |-ParmVarDecl 0x7e34c0 <col:46, col:58> col:58 __needle 'const char *'
| |-NoThrowAttr 0x7e37d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7e3828 <line:226:45>
| `-NonNullAttr 0x7e3850 <line:293:44, /usr/include/string.h:331:49> 1 2
|-FunctionDecl 0x7e39e0 <line:336:14> col:14 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x7e3a80 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x7e3ae8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x7e3b60 prev 0x7e39e0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:336:14 strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x7e38a0 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0x7e3920 <col:44, col:67> col:67 __delim 'const char *restrict'
| |-NoThrowAttr 0x7e3c10 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7e3c68 <line:293:44, /usr/include/string.h:337:27> 2
|-FunctionDecl 0x7e3f30 <line:341:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:341:14 __strtok_r 'char *(char *restrict, const char *restrict, char **restrict)' extern
| |-ParmVarDecl 0x7e3cc0 <col:26, col:43> col:43 __s 'char *restrict'
| |-ParmVarDecl 0x7e3d40 <line:342:5, col:28> col:28 __delim 'const char *restrict'
| |-ParmVarDecl 0x7e3dc0 <line:343:5, col:23> col:23 __save_ptr 'char **restrict'
| |-NoThrowAttr 0x7e3fe8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7e4040 <line:293:44, /usr/include/string.h:344:30> 2 3
|-FunctionDecl 0x7e4278 <line:346:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:346:14 strtok_r 'char *(char *restrict, const char *restrict, char **restrict)' extern
| |-ParmVarDecl 0x7e4090 <col:24, col:41> col:41 __s 'char *restrict'
| |-ParmVarDecl 0x7e4110 <col:46, col:69> col:69 __delim 'const char *restrict'
| |-ParmVarDecl 0x7e4190 <line:347:10, col:28> col:28 __save_ptr 'char **restrict'
| |-NoThrowAttr 0x7e4330 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7e4388 <line:293:44, /usr/include/string.h:348:30> 2 3
|-FunctionDecl 0x7e4568 <line:385:15> col:15 implicit strlen 'unsigned long (const char *)' extern
| `-ParmVarDecl 0x7e4608 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x7e4678 prev 0x7e4568 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:385:15 strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0x7e4450 <col:23, col:35> col:35 __s 'const char *'
| |-NoThrowAttr 0x7e4720 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7e4778 <line:226:45>
| `-NonNullAttr 0x7e47a0 <line:293:44, /usr/include/string.h:386:46> 1
|-FunctionDecl 0x7e4998 <line:391:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:391:15 strnlen 'size_t (const char *, size_t)' extern
| |-ParmVarDecl 0x7e47f0 <col:24, col:36> col:36 __string 'const char *'
| |-ParmVarDecl 0x7e4868 <col:46, col:53> col:53 __maxlen 'size_t':'unsigned long'
| |-NoThrowAttr 0x7e4a48 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7e4aa0 <line:226:45>
| `-NonNullAttr 0x7e4ac8 <line:293:44, /usr/include/string.h:392:46> 1
|-FunctionDecl 0x7e4bf0 <line:397:14> col:14 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x7e4c90 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x7e4d00 prev 0x7e4bf0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/string.h:397:14 strerror 'char *(int)' extern
| |-ParmVarDecl 0x7e4b20 <col:24, col:28> col:28 __errnum 'int'
| `-NoThrowAttr 0x7e4da8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7e5090 </usr/include/string.h:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:410:28 strerror_r 'int (int, char *, size_t)' extern
| |-ParmVarDecl 0x7e4e18 <line:411:8, col:12> col:12 __errnum 'int'
| |-ParmVarDecl 0x7e4e98 <col:22, col:28> col:28 __buf 'char *'
| |-ParmVarDecl 0x7e4f10 <col:35, col:42> col:42 __buflen 'size_t':'unsigned long'
| |-AsmLabelAttr 0x7e5130 <<scratch space>:39:1> "__xpg_strerror_r" IsLiteralLabel
| |-NoThrowAttr 0x7e51c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7e51e8 <line:293:44, /usr/include/string.h:412:38> 2
|-FunctionDecl 0x7e6470 <line:428:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/string.h:428:14 strerror_l 'char *(int, locale_t)' extern
| |-ParmVarDecl 0x7e5240 <col:26, col:30> col:30 __errnum 'int'
| |-ParmVarDecl 0x7e52b8 <col:40, col:49> col:49 __l 'locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x7e6520 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7e6770 </usr/include/strings.h:34:12> col:12 implicit bcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x7e6810 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x7e6878 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x7e68e0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x7e6960 prev 0x7e6770 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:34:12 bcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0x7e6590 <col:18, col:30> col:30 __s1 'const void *'
| |-ParmVarDecl 0x7e6610 <col:36, col:48> col:48 __s2 'const void *'
| |-ParmVarDecl 0x7e6688 <col:54, col:61> col:61 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7e6a18 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7e6a70 <line:226:45>
| `-NonNullAttr 0x7e6a98 <line:293:44, /usr/include/strings.h:35:49> 1 2
|-FunctionDecl 0x7e6d48 <line:38:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:38:13 bcopy 'void (const void *, void *, size_t)' extern
| |-ParmVarDecl 0x7e6af0 <col:20, col:32> col:32 __src 'const void *'
| |-ParmVarDecl 0x7e6b70 <col:39, col:45> col:45 __dest 'void *'
| |-ParmVarDecl 0x7e6be8 <col:53, col:60> col:60 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7e6e00 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7e6e58 <line:293:44, /usr/include/strings.h:39:27> 1 2
|-FunctionDecl 0x7e7058 <line:42:13> col:13 implicit bzero 'void (void *, unsigned long)' extern
| |-ParmVarDecl 0x7e70f8 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x7e7160 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x7e71d8 prev 0x7e7058 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:42:13 bzero 'void (void *, unsigned long)' extern
| |-ParmVarDecl 0x7e6eb0 <col:20, col:26> col:26 __s 'void *'
| |-ParmVarDecl 0x7e6f28 <col:31, col:38> col:38 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7e7288 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7e72e0 <line:293:44, /usr/include/strings.h:42:64> 1
|-FunctionDecl 0x7e8750 <line:68:14> col:14 implicit index 'char *(const char *, int)' extern
| |-ParmVarDecl 0x7e87f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7e8858 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x7e88d0 prev 0x7e8750 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:68:14 index 'char *(const char *, int)' extern
| |-ParmVarDecl 0x7e7330 <col:21, col:33> col:33 __s 'const char *'
| |-ParmVarDecl 0x7e73b0 <col:38, col:42> col:42 __c 'int'
| |-NoThrowAttr 0x7e8980 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7e89d8 <line:226:45>
| `-NonNullAttr 0x7e8a00 <line:293:44, /usr/include/strings.h:69:46> 1
|-FunctionDecl 0x7e8b90 <line:96:14> col:14 implicit rindex 'char *(const char *, int)' extern
| |-ParmVarDecl 0x7e8c30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7e8c98 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x7e8d10 prev 0x7e8b90 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:96:14 rindex 'char *(const char *, int)' extern
| |-ParmVarDecl 0x7e8a50 <col:22, col:34> col:34 __s 'const char *'
| |-ParmVarDecl 0x7e8ad0 <col:39, col:43> col:43 __c 'int'
| |-NoThrowAttr 0x7e8dc0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7e8e18 <line:226:45>
| `-NonNullAttr 0x7e8e40 <line:293:44, /usr/include/strings.h:97:46> 1
|-FunctionDecl 0x7e8f28 <line:104:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:233:56> /usr/include/strings.h:104:12 ffs 'int (int)' extern
| |-ParmVarDecl 0x7e8e90 <col:17, col:21> col:21 __i 'int'
| |-NoThrowAttr 0x7e8fd0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x7e9028 <line:233:46>
|-FunctionDecl 0x7e9130 </usr/include/strings.h:110:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:233:56> /usr/include/strings.h:110:12 ffsl 'int (long)' extern
| |-ParmVarDecl 0x7e9068 <col:18, col:27> col:27 __l 'long'
| |-NoThrowAttr 0x7e91d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x7e9230 <line:233:46>
|-FunctionDecl 0x7e9340 </usr/include/strings.h:111:15, /usr/include/x86_64-linux-gnu/sys/cdefs.h:233:56> /usr/include/strings.h:111:26 ffsll 'int (long long)' extern
| |-ParmVarDecl 0x7e9270 <col:33, col:47> col:47 __ll 'long long'
| |-NoThrowAttr 0x7e93e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x7e9440 <line:233:46>
|-FunctionDecl 0x7e95e0 </usr/include/strings.h:116:12> col:12 implicit strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x7e9680 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7e96e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x7e9770 prev 0x7e95e0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:116:12 strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x7e9480 <col:24, col:36> col:36 __s1 'const char *'
| |-ParmVarDecl 0x7e9500 <col:42, col:54> col:54 __s2 'const char *'
| |-NoThrowAttr 0x7e9820 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7e9878 <line:226:45>
| `-NonNullAttr 0x7e98a0 <line:293:44, /usr/include/strings.h:117:49> 1 2
|-FunctionDecl 0x7e9ad0 <line:120:12> col:12 implicit strncasecmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x7e9b70 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x7e9bd8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7e9c40 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x7e9cc0 prev 0x7e9ad0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:120:12 strncasecmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x7e98f0 <col:25, col:37> col:37 __s1 'const char *'
| |-ParmVarDecl 0x7e9970 <col:43, col:55> col:55 __s2 'const char *'
| |-ParmVarDecl 0x7e99e8 <col:61, col:68> col:68 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7e9d78 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7e9dd0 <line:226:45>
| `-NonNullAttr 0x7e9df8 <line:293:44, /usr/include/strings.h:121:49> 1 2
|-FunctionDecl 0x7ea050 <line:128:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:128:12 strcasecmp_l 'int (const char *, const char *, locale_t)' extern
| |-ParmVarDecl 0x7e9e50 <col:26, col:38> col:38 __s1 'const char *'
| |-ParmVarDecl 0x7e9ed0 <col:44, col:56> col:56 __s2 'const char *'
| |-ParmVarDecl 0x7e9f48 <col:62, col:71> col:71 __loc 'locale_t':'struct __locale_struct *'
| |-NoThrowAttr 0x7ea108 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7ea160 <line:226:45>
| `-NonNullAttr 0x7ea188 <line:293:44, /usr/include/strings.h:129:52> 1 2 3
|-FunctionDecl 0x7ea500 <line:133:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:133:12 strncasecmp_l 'int (const char *, const char *, size_t, locale_t)' extern
| |-ParmVarDecl 0x7ea1e8 <col:27, col:39> col:39 __s1 'const char *'
| |-ParmVarDecl 0x7ea268 <col:45, col:57> col:57 __s2 'const char *'
| |-ParmVarDecl 0x7ea2e0 <line:134:6, col:13> col:13 __n 'size_t':'unsigned long'
| |-ParmVarDecl 0x7ea358 <col:18, col:27> col:27 __loc 'locale_t':'struct __locale_struct *'
| |-NoThrowAttr 0x7ea5c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7ea618 <line:226:45>
| `-NonNullAttr 0x7ea640 <line:293:44, /usr/include/strings.h:135:52> 1 2 4
|-FunctionDecl 0x7ea828 </usr/include/string.h:436:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:436:13 explicit_bzero 'void (void *, size_t)' extern
| |-ParmVarDecl 0x7ea698 <col:29, col:35> col:35 __s 'void *'
| |-ParmVarDecl 0x7ea770 <col:40, col:47> col:47 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7ea8d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7ea930 <line:293:44, /usr/include/string.h:436:73> 1
|-FunctionDecl 0x7eab60 <line:440:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:440:14 strsep 'char *(char **restrict, const char *restrict)' extern
| |-ParmVarDecl 0x7ea980 <col:22, col:40> col:40 __stringp 'char **restrict'
| |-ParmVarDecl 0x7eaa00 <line:441:8, col:31> col:31 __delim 'const char *restrict'
| |-NoThrowAttr 0x7eac10 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7eac68 <line:293:44, /usr/include/string.h:442:30> 1 2
|-FunctionDecl 0x7ead58 <line:447:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/string.h:447:14 strsignal 'char *(int)' extern
| |-ParmVarDecl 0x7eacc0 <col:25, col:29> col:29 __sig 'int'
| `-NoThrowAttr 0x7eae00 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7eafd0 </usr/include/string.h:450:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:450:14 __stpcpy 'char *(char *restrict, const char *restrict)' extern
| |-ParmVarDecl 0x7eae70 <col:24, col:41> col:41 __dest 'char *restrict'
| |-ParmVarDecl 0x7eaef0 <col:49, col:72> col:72 __src 'const char *restrict'
| |-NoThrowAttr 0x7eb080 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7eb0d8 <line:293:44, /usr/include/string.h:451:30> 1 2
|-FunctionDecl 0x7eb290 <line:452:14> col:14 implicit stpcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x7eb330 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x7eb398 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x7eb410 prev 0x7eb290 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:452:14 stpcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x7eb130 <col:22, col:39> col:39 __dest 'char *restrict'
| |-ParmVarDecl 0x7eb1b0 <col:47, col:70> col:70 __src 'const char *restrict'
| |-NoThrowAttr 0x7eb4c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7eb518 <line:293:44, /usr/include/string.h:453:30> 1 2
|-FunctionDecl 0x7eb780 <line:457:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:457:14 __stpncpy 'char *(char *restrict, const char *restrict, size_t)' extern
| |-ParmVarDecl 0x7eb570 <col:25, col:42> col:42 __dest 'char *restrict'
| |-ParmVarDecl 0x7eb5f0 <line:458:4, col:27> col:27 __src 'const char *restrict'
| |-ParmVarDecl 0x7eb668 <col:34, col:41> col:41 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7eb838 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7eb890 <line:293:44, /usr/include/string.h:459:30> 1 2
|-FunctionDecl 0x7ebac0 <line:460:14> col:14 implicit stpncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x7ebb60 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x7ebbc8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x7ebc30 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x7ebcb0 prev 0x7ebac0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:460:14 stpncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0x7eb8e0 <col:23, col:40> col:40 __dest 'char *restrict'
| |-ParmVarDecl 0x7eb960 <line:461:9, col:32> col:32 __src 'const char *restrict'
| |-ParmVarDecl 0x7eb9d8 <col:39, col:46> col:46 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0x7ebd68 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7ebdc0 <line:293:44, /usr/include/string.h:462:30> 1 2
|-TypedefDecl 0x7ebe10 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:74:1, col:24> col:24 referenced wchar_t 'int'
| `-BuiltinType 0x701ac0 'int'
|-EnumDecl 0x7ebe68 </usr/include/x86_64-linux-gnu/bits/waitflags.h:52:9, line:57:1> line:52:9
| |-EnumConstantDecl 0x7ebf30 <line:54:3> col:3 P_ALL 'int'
| |-EnumConstantDecl 0x7ebf80 <line:55:3> col:3 P_PID 'int'
| `-EnumConstantDecl 0x7ebfd0 <line:56:3> col:3 P_PGID 'int'
|-TypedefDecl 0x7ec078 <line:52:1, line:57:3> col:3 idtype_t 'enum idtype_t':'idtype_t'
| `-ElaboratedType 0x7ec020 'enum idtype_t' sugar
|   `-EnumType 0x7ebf10 'idtype_t'
|     `-Enum 0x7ebe68 ''
|-TypedefDecl 0x7ec100 </usr/include/x86_64-linux-gnu/bits/floatn-common.h:214:1, col:15> col:15 _Float32 'float'
| `-BuiltinType 0x701bc0 'float'
|-TypedefDecl 0x7ec170 <line:251:1, col:16> col:16 _Float64 'double'
| `-BuiltinType 0x701be0 'double'
|-TypedefDecl 0x7ec1e0 <line:268:1, col:16> col:16 _Float32x 'double'
| `-BuiltinType 0x701be0 'double'
|-TypedefDecl 0x7ec250 <line:285:1, col:21> col:21 _Float64x 'long double'
| `-BuiltinType 0x701c00 'long double'
|-RecordDecl 0x7ec2a8 </usr/include/stdlib.h:58:9, line:62:3> line:58:9 struct definition
| |-FieldDecl 0x7ec368 <line:60:5, col:9> col:9 quot 'int'
| `-FieldDecl 0x7ec3d0 <line:61:5, col:9> col:9 rem 'int'
|-TypedefDecl 0x7ec478 <line:58:1, line:62:5> col:5 referenced div_t 'struct div_t':'div_t'
| `-ElaboratedType 0x7ec420 'struct div_t' sugar
|   `-RecordType 0x7ec330 'div_t'
|     `-Record 0x7ec2a8 ''
|-RecordDecl 0x7ec4e8 <line:66:9, line:70:3> line:66:9 struct definition
| |-FieldDecl 0x7ec5a8 <line:68:5, col:14> col:14 quot 'long'
| `-FieldDecl 0x7ec610 <line:69:5, col:14> col:14 rem 'long'
|-TypedefDecl 0x7ec6b8 <line:66:1, line:70:5> col:5 referenced ldiv_t 'struct ldiv_t':'ldiv_t'
| `-ElaboratedType 0x7ec660 'struct ldiv_t' sugar
|   `-RecordType 0x7ec570 'ldiv_t'
|     `-Record 0x7ec4e8 ''
|-RecordDecl 0x7ff830 <line:76:23, line:80:3> line:76:23 struct definition
| |-FieldDecl 0x7ff8e8 <line:78:5, col:19> col:19 quot 'long long'
| `-FieldDecl 0x7ff950 <line:79:5, col:19> col:19 rem 'long long'
|-TypedefDecl 0x7ff9f8 <line:76:15, line:80:5> col:5 referenced lldiv_t 'struct lldiv_t':'lldiv_t'
| `-ElaboratedType 0x7ff9a0 'struct lldiv_t' sugar
|   `-RecordType 0x7ff8b0 'lldiv_t'
|     `-Record 0x7ff830 ''
|-FunctionDecl 0x7ffb58 <line:97:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:97:15 __ctype_get_mb_cur_max 'size_t (void)' extern
| `-NoThrowAttr 0x7ffbf8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7ffd50 </usr/include/stdlib.h:101:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:101:15 atof 'double (const char *)' extern
| |-ParmVarDecl 0x7ffc68 <col:21, col:33> col:33 __nptr 'const char *'
| |-NoThrowAttr 0x7ffdf8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x7ffe50 <line:226:45>
| `-NonNullAttr 0x7ffe78 <line:293:44, /usr/include/stdlib.h:102:46> 1
|-FunctionDecl 0x7fff88 <line:104:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:104:12 atoi 'int (const char *)' extern
| |-ParmVarDecl 0x7ffed0 <col:18, col:30> col:30 __nptr 'const char *'
| |-NoThrowAttr 0x800030 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x800088 <line:226:45>
| `-NonNullAttr 0x8000b0 <line:293:44, /usr/include/stdlib.h:105:46> 1
|-FunctionDecl 0x8001f0 <line:107:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:107:17 atol 'long (const char *)' extern
| |-ParmVarDecl 0x800100 <col:23, col:35> col:35 __nptr 'const char *'
| |-NoThrowAttr 0x800298 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x8002f0 <line:226:45>
| `-NonNullAttr 0x800318 <line:293:44, /usr/include/stdlib.h:108:46> 1
|-FunctionDecl 0x800460 <line:112:15, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:112:36 atoll 'long long (const char *)' extern
| |-ParmVarDecl 0x800370 <col:43, col:55> col:55 __nptr 'const char *'
| |-NoThrowAttr 0x800508 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x800560 <line:226:45>
| `-NonNullAttr 0x800588 <line:293:44, /usr/include/stdlib.h:113:46> 1
|-FunctionDecl 0x801850 <line:117:15> col:15 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x8018f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x801958 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x8019d0 prev 0x801850 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:117:15 strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x8005e0 <col:23, col:46> col:46 __nptr 'const char *restrict'
| |-ParmVarDecl 0x800660 <line:118:9, col:27> col:27 __endptr 'char **restrict'
| |-NoThrowAttr 0x801a80 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x801ad8 <line:293:44, /usr/include/stdlib.h:119:27> 1
|-FunctionDecl 0x801cf0 <line:123:14> col:14 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x801d90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x801df8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x801e70 prev 0x801cf0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:123:14 strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x801b30 <col:22, col:45> col:45 __nptr 'const char *restrict'
| |-ParmVarDecl 0x801bb0 <line:124:8, col:26> col:26 __endptr 'char **restrict'
| |-NoThrowAttr 0x801f20 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x801f78 <line:293:44, /usr/include/stdlib.h:124:57> 1
|-FunctionDecl 0x802190 <line:126:20> col:20 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x802230 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x802298 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x802310 prev 0x802190 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:126:20 strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x801fd0 <col:29, col:52> col:52 __nptr 'const char *restrict'
| |-ParmVarDecl 0x802050 <line:127:8, col:26> col:26 __endptr 'char **restrict'
| |-NoThrowAttr 0x8023c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x802418 <line:293:44, /usr/include/stdlib.h:128:27> 1
|-FunctionDecl 0x8026c0 <line:176:17> col:17 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x802760 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x8027c8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x802860 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x8028e0 prev 0x8026c0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:176:17 strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x802470 <col:25, col:48> col:48 __nptr 'const char *restrict'
| |-ParmVarDecl 0x8024f0 <line:177:4, col:22> col:22 __endptr 'char **restrict'
| |-ParmVarDecl 0x802570 <col:32, col:36> col:36 __base 'int'
| |-NoThrowAttr 0x802998 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x8029f0 <line:293:44, /usr/include/stdlib.h:178:27> 1
|-FunctionDecl 0x802c90 <line:180:26> col:26 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x802d30 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x802d98 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x802e00 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x802e80 prev 0x802c90 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:180:26 strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x802a40 <col:35, col:58> col:58 __nptr 'const char *restrict'
| |-ParmVarDecl 0x802ac0 <line:181:7, col:25> col:25 __endptr 'char **restrict'
| |-ParmVarDecl 0x802b40 <col:35, col:39> col:39 __base 'int'
| |-NoThrowAttr 0x802f38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x802f90 <line:293:44, /usr/include/stdlib.h:182:27> 1
|-FunctionDecl 0x803230 <line:187:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:187:22 strtoq 'long long (const char *restrict, char **restrict, int)' extern
| |-ParmVarDecl 0x802fe0 <col:30, col:53> col:53 __nptr 'const char *restrict'
| |-ParmVarDecl 0x803060 <line:188:9, col:27> col:27 __endptr 'char **restrict'
| |-ParmVarDecl 0x8030e0 <col:37, col:41> col:41 __base 'int'
| |-NoThrowAttr 0x8032e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x803340 <line:293:44, /usr/include/stdlib.h:189:27> 1
|-FunctionDecl 0x8035e0 <line:192:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:192:31 strtouq 'unsigned long long (const char *restrict, char **restrict, int)' extern
| |-ParmVarDecl 0x803390 <col:40, col:63> col:63 __nptr 'const char *restrict'
| |-ParmVarDecl 0x803410 <line:193:12, col:30> col:30 __endptr 'char **restrict'
| |-ParmVarDecl 0x803490 <col:40, col:44> col:44 __base 'int'
| |-NoThrowAttr 0x803698 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x8036f0 <line:293:44, /usr/include/stdlib.h:194:27> 1
|-FunctionDecl 0x803938 <line:200:22> col:22 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x8039d8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x803a40 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x803aa8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x803b28 prev 0x803938 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:200:22 strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x803740 <col:31, col:54> col:54 __nptr 'const char *restrict'
| |-ParmVarDecl 0x8037c0 <line:201:10, col:28> col:28 __endptr 'char **restrict'
| |-ParmVarDecl 0x803870 <col:38, col:42> col:42 __base 'int'
| |-NoThrowAttr 0x803be0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x803c38 <line:293:44, /usr/include/stdlib.h:202:27> 1
|-FunctionDecl 0x803e58 <line:205:31> col:31 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x803ef8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x803f60 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x803fc8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x804048 prev 0x803e58 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:205:31 strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x803c90 <col:41, col:64> col:64 __nptr 'const char *restrict'
| |-ParmVarDecl 0x803d10 <line:206:6, col:24> col:24 __endptr 'char **restrict'
| |-ParmVarDecl 0x803d90 <col:34, col:38> col:38 __base 'int'
| |-NoThrowAttr 0x804100 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x804158 <line:293:44, /usr/include/stdlib.h:207:27> 1
|-FunctionDecl 0x804280 <line:385:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:385:14 l64a 'char *(long)' extern
| |-ParmVarDecl 0x8041b0 <col:20, col:29> col:29 __n 'long'
| `-NoThrowAttr 0x804328 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x804450 </usr/include/stdlib.h:388:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:388:17 a64l 'long (const char *)' extern
| |-ParmVarDecl 0x804398 <col:23, col:35> col:35 __s 'const char *'
| |-NoThrowAttr 0x8044f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0x804550 <line:226:45>
| `-NonNullAttr 0x804578 <line:293:44, /usr/include/stdlib.h:389:46> 1
|-TypedefDecl 0x8045f0 </usr/include/x86_64-linux-gnu/sys/types.h:33:1, col:18> col:18 u_char '__u_char':'unsigned char'
| `-TypedefType 0x8045c0 '__u_char' sugar
|   |-Typedef 0x78b278 '__u_char'
|   `-BuiltinType 0x701b20 'unsigned char'
|-TypedefDecl 0x804680 <line:34:1, col:19> col:19 u_short '__u_short':'unsigned short'
| `-TypedefType 0x804650 '__u_short' sugar
|   |-Typedef 0x78b2e8 '__u_short'
|   `-BuiltinType 0x701b40 'unsigned short'
|-TypedefDecl 0x804710 <line:35:1, col:17> col:17 u_int '__u_int':'unsigned int'
| `-TypedefType 0x8046e0 '__u_int' sugar
|   |-Typedef 0x78b358 '__u_int'
|   `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x8047a0 <line:36:1, col:18> col:18 u_long '__u_long':'unsigned long'
| `-TypedefType 0x804770 '__u_long' sugar
|   |-Typedef 0x78b3c8 '__u_long'
|   `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7ccb10 <line:37:1, col:18> col:18 quad_t '__quad_t':'long'
| `-TypedefType 0x804800 '__quad_t' sugar
|   |-Typedef 0x7a96e0 '__quad_t'
|   `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7ccba0 <line:38:1, col:20> col:20 u_quad_t '__u_quad_t':'unsigned long'
| `-TypedefType 0x7ccb70 '__u_quad_t' sugar
|   |-Typedef 0x7a9750 '__u_quad_t'
|   `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7ccc30 <line:39:1, col:18> col:18 fsid_t '__fsid_t':'__fsid_t'
| `-TypedefType 0x7ccc00 '__fsid_t' sugar
|   |-Typedef 0x7a9ed8 '__fsid_t'
|   `-ElaboratedType 0x7a9e80 'struct __fsid_t' sugar
|     `-RecordType 0x7a9d70 '__fsid_t'
|       `-Record 0x7a9ce8 ''
|-TypedefDecl 0x7cccc0 <line:42:1, col:18> col:18 loff_t '__loff_t':'long'
| `-TypedefType 0x7ccc90 '__loff_t' sugar
|   |-Typedef 0x7b28f0 '__loff_t'
|   `-TypedefType 0x7b28c0 '__off64_t' sugar
|     |-Typedef 0x7a9c20 '__off64_t'
|     `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7ccd50 <line:47:1, col:17> col:17 ino_t '__ino_t':'unsigned long'
| `-TypedefType 0x7ccd20 '__ino_t' sugar
|   |-Typedef 0x7a99f0 '__ino_t'
|   `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7ccde0 <line:59:1, col:17> col:17 dev_t '__dev_t':'unsigned long'
| `-TypedefType 0x7ccdb0 '__dev_t' sugar
|   |-Typedef 0x7a98a0 '__dev_t'
|   `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7cce70 <line:64:1, col:17> col:17 gid_t '__gid_t':'unsigned int'
| `-TypedefType 0x7cce40 '__gid_t' sugar
|   |-Typedef 0x7a9980 '__gid_t'
|   `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x7ccf00 <line:69:1, col:18> col:18 mode_t '__mode_t':'unsigned int'
| `-TypedefType 0x7cced0 '__mode_t' sugar
|   |-Typedef 0x7a9ad0 '__mode_t'
|   `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x7ccf90 <line:74:1, col:19> col:19 nlink_t '__nlink_t':'unsigned long'
| `-TypedefType 0x7ccf60 '__nlink_t' sugar
|   |-Typedef 0x7a9b40 '__nlink_t'
|   `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7cd020 <line:79:1, col:17> col:17 uid_t '__uid_t':'unsigned int'
| `-TypedefType 0x7ccff0 '__uid_t' sugar
|   |-Typedef 0x7a9910 '__uid_t'
|   `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x7cd0b0 <line:97:1, col:17> col:17 pid_t '__pid_t':'int'
| `-TypedefType 0x7cd080 '__pid_t' sugar
|   |-Typedef 0x7a9c90 '__pid_t'
|   `-BuiltinType 0x701ac0 'int'
|-TypedefDecl 0x7cd140 <line:103:1, col:16> col:16 id_t '__id_t':'unsigned int'
| `-TypedefType 0x7cd110 '__id_t' sugar
|   |-Typedef 0x7aa0b0 '__id_t'
|   `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x7cd1d0 <line:114:1, col:19> col:19 daddr_t '__daddr_t':'int'
| `-TypedefType 0x7cd1a0 '__daddr_t' sugar
|   |-Typedef 0x7aa270 '__daddr_t'
|   `-BuiltinType 0x701ac0 'int'
|-TypedefDecl 0x7cd260 <line:115:1, col:19> col:19 caddr_t '__caddr_t':'char *'
| `-TypedefType 0x7cd230 '__caddr_t' sugar
|   |-Typedef 0x7b2960 '__caddr_t'
|   `-PointerType 0x702630 'char *'
|     `-BuiltinType 0x701a60 'char'
|-TypedefDecl 0x7cd2f0 <line:121:1, col:17> col:17 key_t '__key_t':'int'
| `-TypedefType 0x7cd2c0 '__key_t' sugar
|   |-Typedef 0x7aa2e0 '__key_t'
|   `-BuiltinType 0x701ac0 'int'
|-TypedefDecl 0x7cd380 </usr/include/x86_64-linux-gnu/bits/types/clock_t.h:7:1, col:19> col:19 clock_t '__clock_t':'long'
| `-TypedefType 0x7cd350 '__clock_t' sugar
|   |-Typedef 0x7a9f60 '__clock_t'
|   `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7cd410 </usr/include/x86_64-linux-gnu/bits/types/clockid_t.h:7:1, col:21> col:21 clockid_t '__clockid_t':'int'
| `-TypedefType 0x7cd3e0 '__clockid_t' sugar
|   |-Typedef 0x7aa350 '__clockid_t'
|   `-BuiltinType 0x701ac0 'int'
|-TypedefDecl 0x7cd4a0 </usr/include/x86_64-linux-gnu/bits/types/time_t.h:7:1, col:18> col:18 time_t '__time_t':'long'
| `-TypedefType 0x7cd470 '__time_t' sugar
|   |-Typedef 0x7aa120 '__time_t'
|   `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7cd530 </usr/include/x86_64-linux-gnu/bits/types/timer_t.h:7:1, col:19> col:19 timer_t '__timer_t':'void *'
| `-TypedefType 0x7cd500 '__timer_t' sugar
|   |-Typedef 0x7aa3c0 '__timer_t'
|   `-PointerType 0x7021e0 'void *'
|     `-BuiltinType 0x701a20 'void'
|-TypedefDecl 0x7cd5a0 </usr/include/x86_64-linux-gnu/sys/types.h:148:1, col:27> col:27 ulong 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7cd610 <line:149:1, col:28> col:28 ushort 'unsigned short'
| `-BuiltinType 0x701b40 'unsigned short'
|-TypedefDecl 0x7cd680 <line:150:1, col:22> col:22 uint 'unsigned int'
| `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x7cd6e8 </usr/include/x86_64-linux-gnu/bits/stdint-intn.h:24:1, col:18> col:18 int8_t '__int8_t':'signed char'
| `-TypedefType 0x78b7a0 '__int8_t' sugar
|   |-Typedef 0x78b438 '__int8_t'
|   `-BuiltinType 0x701a80 'signed char'
|-TypedefDecl 0x7cd750 <line:25:1, col:19> col:19 int16_t '__int16_t':'short'
| `-TypedefType 0x78b8c0 '__int16_t' sugar
|   |-Typedef 0x78b518 '__int16_t'
|   `-BuiltinType 0x701aa0 'short'
|-TypedefDecl 0x7cd7b8 <line:26:1, col:19> col:19 referenced int32_t '__int32_t':'int'
| `-TypedefType 0x78b9e0 '__int32_t' sugar
|   |-Typedef 0x78b5f8 '__int32_t'
|   `-BuiltinType 0x701ac0 'int'
|-TypedefDecl 0x7cd820 <line:27:1, col:19> col:19 int64_t '__int64_t':'long'
| `-TypedefType 0x78bb00 '__int64_t' sugar
|   |-Typedef 0x78b6d8 '__int64_t'
|   `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x7cd888 </usr/include/x86_64-linux-gnu/sys/types.h:158:1, col:19> col:19 u_int8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x78b830 '__uint8_t' sugar
|   |-Typedef 0x78b4a8 '__uint8_t'
|   `-BuiltinType 0x701b20 'unsigned char'
|-TypedefDecl 0x7cd8f0 <line:159:1, col:20> col:20 u_int16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x78b950 '__uint16_t' sugar
|   |-Typedef 0x78b588 '__uint16_t'
|   `-BuiltinType 0x701b40 'unsigned short'
|-TypedefDecl 0x7cd958 <line:160:1, col:20> col:20 u_int32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x78ba70 '__uint32_t' sugar
|   |-Typedef 0x78b668 '__uint32_t'
|   `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x7cd9c0 <line:161:1, col:20> col:20 u_int64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x7a9640 '__uint64_t' sugar
|   |-Typedef 0x78b748 '__uint64_t'
|   `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x7cda40 <line:164:1, col:13> col:13 register_t 'long'
| |-BuiltinType 0x701ae0 'long'
| `-ModeAttr 0x7cdaa8 <col:40, col:58> __word__
|-FunctionDecl 0x818968 </usr/include/x86_64-linux-gnu/bits/byteswap.h:33:1, line:41:1> line:34:1 __bswap_16 '__uint16_t (__uint16_t)' static inline
| |-ParmVarDecl 0x818870 <col:13, col:24> col:24 used __bsx '__uint16_t':'unsigned short'
| `-CompoundStmt 0x818d38 <line:35:1, line:41:1>
|   `-ReturnStmt 0x818d28 <line:39:3, line:31:60>
|     `-ParenExpr 0x818d08 <col:3, col:60> '__uint16_t':'unsigned short'
|       `-CStyleCastExpr 0x818ce0 <col:4, col:59> '__uint16_t':'unsigned short' <IntegralCast>
|         `-ParenExpr 0x818cc0 <col:17, col:59> 'int'
|           `-BinaryOperator 0x818c70 <col:18, col:58> 'int' '|'
|             |-ParenExpr 0x818b20 <col:18, col:36> 'int'
|             | `-BinaryOperator 0x818b00 <col:19, col:32> 'int' '&'
|             |   |-ParenExpr 0x818ac0 <col:19, col:28> 'int'
|             |   | `-BinaryOperator 0x818aa0 <col:20, col:27> 'int' '>>'
|             |   |   |-ImplicitCastExpr 0x818a88 <col:20, col:22> 'int' <IntegralCast>
|             |   |   | `-ImplicitCastExpr 0x818a70 <col:20, col:22> '__uint16_t':'unsigned short' <LValueToRValue>
|             |   |   |   `-ParenExpr 0x818a30 <col:20, col:22> '__uint16_t':'unsigned short' lvalue
|             |   |   |     `-DeclRefExpr 0x818a10 <line:39:31> '__uint16_t':'unsigned short' lvalue ParmVar 0x818870 '__bsx' '__uint16_t':'unsigned short'
|             |   |   `-IntegerLiteral 0x818a50 <line:31:27> 'int' 8
|             |   `-IntegerLiteral 0x818ae0 <col:32> 'int' 255
|             `-ParenExpr 0x818c50 <col:40, col:58> 'int'
|               `-BinaryOperator 0x818c30 <col:41, col:57> 'int' '<<'
|                 |-ParenExpr 0x818bf0 <col:41, col:52> 'int'
|                 | `-BinaryOperator 0x818bd0 <col:42, col:48> 'int' '&'
|                 |   |-ImplicitCastExpr 0x818bb8 <col:42, col:44> 'int' <IntegralCast>
|                 |   | `-ImplicitCastExpr 0x818ba0 <col:42, col:44> '__uint16_t':'unsigned short' <LValueToRValue>
|                 |   |   `-ParenExpr 0x818b60 <col:42, col:44> '__uint16_t':'unsigned short' lvalue
|                 |   |     `-DeclRefExpr 0x818b40 <line:39:31> '__uint16_t':'unsigned short' lvalue ParmVar 0x818870 '__bsx' '__uint16_t':'unsigned short'
|                 |   `-IntegerLiteral 0x818b80 <line:31:48> 'int' 255
|                 `-IntegerLiteral 0x818c10 <col:57> 'int' 8
|-FunctionDecl 0x818e28 <line:48:1, line:56:1> line:49:1 __bswap_32 '__uint32_t (__uint32_t)' static inline
| |-ParmVarDecl 0x818d60 <col:13, col:24> col:24 used __bsx '__uint32_t':'unsigned int'
| `-CompoundStmt 0x8193c0 <line:50:1, line:56:1>
|   `-ReturnStmt 0x8193b0 <line:54:3, line:46:62>
|     `-ParenExpr 0x819390 <line:45:3, line:46:62> 'unsigned int'
|       `-BinaryOperator 0x819370 <line:45:4, line:46:61> 'unsigned int' '|'
|         |-BinaryOperator 0x819238 <line:45:4, line:46:31> 'unsigned int' '|'
|         | |-BinaryOperator 0x819100 <line:45:4, col:59> 'unsigned int' '|'
|         | | |-ParenExpr 0x818fc8 <col:4, col:30> 'unsigned int'
|         | | | `-BinaryOperator 0x818fa8 <col:5, col:28> 'unsigned int' '>>'
|         | | |   |-ParenExpr 0x818f68 <col:5, col:23> 'unsigned int'
|         | | |   | `-BinaryOperator 0x818f48 <col:6, col:12> 'unsigned int' '&'
|         | | |   |   |-ImplicitCastExpr 0x818f30 <col:6, col:8> '__uint32_t':'unsigned int' <LValueToRValue>
|         | | |   |   | `-ParenExpr 0x818ef0 <col:6, col:8> '__uint32_t':'unsigned int' lvalue
|         | | |   |   |   `-DeclRefExpr 0x818ed0 <line:54:31> '__uint32_t':'unsigned int' lvalue ParmVar 0x818d60 '__bsx' '__uint32_t':'unsigned int'
|         | | |   |   `-IntegerLiteral 0x818f10 <line:45:12> 'unsigned int' 4278190080
|         | | |   `-IntegerLiteral 0x818f88 <col:28> 'int' 24
|         | | `-ParenExpr 0x8190e0 <col:34, col:59> 'unsigned int'
|         | |   `-BinaryOperator 0x8190c0 <col:35, col:58> 'unsigned int' '>>'
|         | |     |-ParenExpr 0x819080 <col:35, col:53> 'unsigned int'
|         | |     | `-BinaryOperator 0x819060 <col:36, col:42> 'unsigned int' '&'
|         | |     |   |-ImplicitCastExpr 0x819048 <col:36, col:38> '__uint32_t':'unsigned int' <LValueToRValue>
|         | |     |   | `-ParenExpr 0x819008 <col:36, col:38> '__uint32_t':'unsigned int' lvalue
|         | |     |   |   `-DeclRefExpr 0x818fe8 <line:54:31> '__uint32_t':'unsigned int' lvalue ParmVar 0x818d60 '__bsx' '__uint32_t':'unsigned int'
|         | |     |   `-IntegerLiteral 0x819028 <line:45:42> 'unsigned int' 16711680
|         | |     `-IntegerLiteral 0x8190a0 <col:58> 'int' 8
|         | `-ParenExpr 0x819218 <line:46:6, col:31> 'unsigned int'
|         |   `-BinaryOperator 0x8191f8 <col:7, col:30> 'unsigned int' '<<'
|         |     |-ParenExpr 0x8191b8 <col:7, col:25> 'unsigned int'
|         |     | `-BinaryOperator 0x819198 <col:8, col:14> 'unsigned int' '&'
|         |     |   |-ImplicitCastExpr 0x819180 <col:8, col:10> '__uint32_t':'unsigned int' <LValueToRValue>
|         |     |   | `-ParenExpr 0x819140 <col:8, col:10> '__uint32_t':'unsigned int' lvalue
|         |     |   |   `-DeclRefExpr 0x819120 <line:54:31> '__uint32_t':'unsigned int' lvalue ParmVar 0x818d60 '__bsx' '__uint32_t':'unsigned int'
|         |     |   `-IntegerLiteral 0x819160 <line:46:14> 'unsigned int' 65280
|         |     `-IntegerLiteral 0x8191d8 <col:30> 'int' 8
|         `-ParenExpr 0x819350 <col:35, col:61> 'unsigned int'
|           `-BinaryOperator 0x819330 <col:36, col:59> 'unsigned int' '<<'
|             |-ParenExpr 0x8192f0 <col:36, col:54> 'unsigned int'
|             | `-BinaryOperator 0x8192d0 <col:37, col:43> 'unsigned int' '&'
|             |   |-ImplicitCastExpr 0x8192b8 <col:37, col:39> '__uint32_t':'unsigned int' <LValueToRValue>
|             |   | `-ParenExpr 0x819278 <col:37, col:39> '__uint32_t':'unsigned int' lvalue
|             |   |   `-DeclRefExpr 0x819258 <line:54:31> '__uint32_t':'unsigned int' lvalue ParmVar 0x818d60 '__bsx' '__uint32_t':'unsigned int'
|             |   `-IntegerLiteral 0x819298 <line:46:43> 'unsigned int' 255
|             `-IntegerLiteral 0x819310 <col:59> 'int' 24
|-FunctionDecl 0x8194d8 <line:69:15, line:77:1> line:70:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x8193e8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x81ba58 <line:71:1, line:77:1>
|   `-ReturnStmt 0x81ba48 <line:75:3, line:67:43>
|     `-ImplicitCastExpr 0x81ba30 <line:60:3, line:67:43> '__uint64_t':'unsigned long' <IntegralCast>
|       `-ParenExpr 0x81ba10 <line:60:3, line:67:43> 'unsigned long long'
|         `-BinaryOperator 0x81b9f0 <line:60:4, line:67:42> 'unsigned long long' '|'
|           |-BinaryOperator 0x81b8a0 <line:60:4, line:66:42> 'unsigned long long' '|'
|           | |-BinaryOperator 0x81b750 <line:60:4, line:65:42> 'unsigned long long' '|'
|           | | |-BinaryOperator 0x81b600 <line:60:4, line:64:41> 'unsigned long long' '|'
|           | | | |-BinaryOperator 0x81b4b0 <line:60:4, line:63:41> 'unsigned long long' '|'
|           | | | | |-BinaryOperator 0x81b360 <line:60:4, line:62:42> 'unsigned long long' '|'
|           | | | | | |-BinaryOperator 0x8197e0 <line:60:4, line:61:42> 'unsigned long long' '|'
|           | | | | | | |-ParenExpr 0x819690 <line:60:4, col:40> 'unsigned long long'
|           | | | | | | | `-BinaryOperator 0x819670 <col:5, col:38> 'unsigned long long' '>>'
|           | | | | | | |   |-ParenExpr 0x819630 <col:5, col:33> 'unsigned long long'
|           | | | | | | |   | `-BinaryOperator 0x819610 <col:6, col:12> 'unsigned long long' '&'
|           | | | | | | |   |   |-ImplicitCastExpr 0x8195f8 <col:6, col:8> 'unsigned long long' <IntegralCast>
|           | | | | | | |   |   | `-ImplicitCastExpr 0x8195e0 <col:6, col:8> '__uint64_t':'unsigned long' <LValueToRValue>
|           | | | | | | |   |   |   `-ParenExpr 0x8195a0 <col:6, col:8> '__uint64_t':'unsigned long' lvalue
|           | | | | | | |   |   |     `-DeclRefExpr 0x819580 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x8193e8 '__bsx' '__uint64_t':'unsigned long'
|           | | | | | | |   |   `-IntegerLiteral 0x8195c0 <line:60:12> 'unsigned long long' 18374686479671623680
|           | | | | | | |   `-IntegerLiteral 0x819650 <col:38> 'int' 56
|           | | | | | | `-ParenExpr 0x8197c0 <line:61:6, col:42> 'unsigned long long'
|           | | | | | |   `-BinaryOperator 0x8197a0 <col:7, col:40> 'unsigned long long' '>>'
|           | | | | | |     |-ParenExpr 0x819760 <col:7, col:35> 'unsigned long long'
|           | | | | | |     | `-BinaryOperator 0x819740 <col:8, col:14> 'unsigned long long' '&'
|           | | | | | |     |   |-ImplicitCastExpr 0x819728 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           | | | | | |     |   | `-ImplicitCastExpr 0x819710 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           | | | | | |     |   |   `-ParenExpr 0x8196d0 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           | | | | | |     |   |     `-DeclRefExpr 0x8196b0 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x8193e8 '__bsx' '__uint64_t':'unsigned long'
|           | | | | | |     |   `-IntegerLiteral 0x8196f0 <line:61:14> 'unsigned long long' 71776119061217280
|           | | | | | |     `-IntegerLiteral 0x819780 <col:40> 'int' 40
|           | | | | | `-ParenExpr 0x81b340 <line:62:6, col:42> 'unsigned long long'
|           | | | | |   `-BinaryOperator 0x81b320 <col:7, col:40> 'unsigned long long' '>>'
|           | | | | |     |-ParenExpr 0x81b2e0 <col:7, col:35> 'unsigned long long'
|           | | | | |     | `-BinaryOperator 0x81b2c0 <col:8, col:14> 'unsigned long long' '&'
|           | | | | |     |   |-ImplicitCastExpr 0x81b2a8 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           | | | | |     |   | `-ImplicitCastExpr 0x81b290 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           | | | | |     |   |   `-ParenExpr 0x819820 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           | | | | |     |   |     `-DeclRefExpr 0x819800 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x8193e8 '__bsx' '__uint64_t':'unsigned long'
|           | | | | |     |   `-IntegerLiteral 0x819840 <line:62:14> 'unsigned long long' 280375465082880
|           | | | | |     `-IntegerLiteral 0x81b300 <col:40> 'int' 24
|           | | | | `-ParenExpr 0x81b490 <line:63:6, col:41> 'unsigned long long'
|           | | | |   `-BinaryOperator 0x81b470 <col:7, col:40> 'unsigned long long' '>>'
|           | | | |     |-ParenExpr 0x81b430 <col:7, col:35> 'unsigned long long'
|           | | | |     | `-BinaryOperator 0x81b410 <col:8, col:14> 'unsigned long long' '&'
|           | | | |     |   |-ImplicitCastExpr 0x81b3f8 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           | | | |     |   | `-ImplicitCastExpr 0x81b3e0 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           | | | |     |   |   `-ParenExpr 0x81b3a0 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           | | | |     |   |     `-DeclRefExpr 0x81b380 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x8193e8 '__bsx' '__uint64_t':'unsigned long'
|           | | | |     |   `-IntegerLiteral 0x81b3c0 <line:63:14> 'unsigned long long' 1095216660480
|           | | | |     `-IntegerLiteral 0x81b450 <col:40> 'int' 8
|           | | | `-ParenExpr 0x81b5e0 <line:64:6, col:41> 'unsigned long long'
|           | | |   `-BinaryOperator 0x81b5c0 <col:7, col:40> 'unsigned long long' '<<'
|           | | |     |-ParenExpr 0x81b580 <col:7, col:35> 'unsigned long long'
|           | | |     | `-BinaryOperator 0x81b560 <col:8, col:14> 'unsigned long long' '&'
|           | | |     |   |-ImplicitCastExpr 0x81b548 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           | | |     |   | `-ImplicitCastExpr 0x81b530 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           | | |     |   |   `-ParenExpr 0x81b4f0 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           | | |     |   |     `-DeclRefExpr 0x81b4d0 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x8193e8 '__bsx' '__uint64_t':'unsigned long'
|           | | |     |   `-IntegerLiteral 0x81b510 <line:64:14> 'unsigned long long' 4278190080
|           | | |     `-IntegerLiteral 0x81b5a0 <col:40> 'int' 8
|           | | `-ParenExpr 0x81b730 <line:65:6, col:42> 'unsigned long long'
|           | |   `-BinaryOperator 0x81b710 <col:7, col:40> 'unsigned long long' '<<'
|           | |     |-ParenExpr 0x81b6d0 <col:7, col:35> 'unsigned long long'
|           | |     | `-BinaryOperator 0x81b6b0 <col:8, col:14> 'unsigned long long' '&'
|           | |     |   |-ImplicitCastExpr 0x81b698 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           | |     |   | `-ImplicitCastExpr 0x81b680 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           | |     |   |   `-ParenExpr 0x81b640 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           | |     |   |     `-DeclRefExpr 0x81b620 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x8193e8 '__bsx' '__uint64_t':'unsigned long'
|           | |     |   `-IntegerLiteral 0x81b660 <line:65:14> 'unsigned long long' 16711680
|           | |     `-IntegerLiteral 0x81b6f0 <col:40> 'int' 24
|           | `-ParenExpr 0x81b880 <line:66:6, col:42> 'unsigned long long'
|           |   `-BinaryOperator 0x81b860 <col:7, col:40> 'unsigned long long' '<<'
|           |     |-ParenExpr 0x81b820 <col:7, col:35> 'unsigned long long'
|           |     | `-BinaryOperator 0x81b800 <col:8, col:14> 'unsigned long long' '&'
|           |     |   |-ImplicitCastExpr 0x81b7e8 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           |     |   | `-ImplicitCastExpr 0x81b7d0 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           |     |   |   `-ParenExpr 0x81b790 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           |     |   |     `-DeclRefExpr 0x81b770 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x8193e8 '__bsx' '__uint64_t':'unsigned long'
|           |     |   `-IntegerLiteral 0x81b7b0 <line:66:14> 'unsigned long long' 65280
|           |     `-IntegerLiteral 0x81b840 <col:40> 'int' 40
|           `-ParenExpr 0x81b9d0 <line:67:6, col:42> 'unsigned long long'
|             `-BinaryOperator 0x81b9b0 <col:7, col:40> 'unsigned long long' '<<'
|               |-ParenExpr 0x81b970 <col:7, col:35> 'unsigned long long'
|               | `-BinaryOperator 0x81b950 <col:8, col:14> 'unsigned long long' '&'
|               |   |-ImplicitCastExpr 0x81b938 <col:8, col:10> 'unsigned long long' <IntegralCast>
|               |   | `-ImplicitCastExpr 0x81b920 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|               |   |   `-ParenExpr 0x81b8e0 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|               |   |     `-DeclRefExpr 0x81b8c0 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0x8193e8 '__bsx' '__uint64_t':'unsigned long'
|               |   `-IntegerLiteral 0x81b900 <line:67:14> 'unsigned long long' 255
|               `-IntegerLiteral 0x81b990 <col:40> 'int' 56
|-FunctionDecl 0x81bb10 </usr/include/x86_64-linux-gnu/bits/uintn-identity.h:32:1, line:36:1> line:33:1 __uint16_identity '__uint16_t (__uint16_t)' static inline
| |-ParmVarDecl 0x81ba80 <col:20, col:31> col:31 used __x '__uint16_t':'unsigned short'
| `-CompoundStmt 0x81bc00 <line:34:1, line:36:1>
|   `-ReturnStmt 0x81bbf0 <line:35:3, col:10>
|     `-ImplicitCastExpr 0x81bbd8 <col:10> '__uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x81bbb8 <col:10> '__uint16_t':'unsigned short' lvalue ParmVar 0x81ba80 '__x' '__uint16_t':'unsigned short'
|-FunctionDecl 0x81bcb8 <line:38:1, line:42:1> line:39:1 __uint32_identity '__uint32_t (__uint32_t)' static inline
| |-ParmVarDecl 0x81bc28 <col:20, col:31> col:31 used __x '__uint32_t':'unsigned int'
| `-CompoundStmt 0x81bda8 <line:40:1, line:42:1>
|   `-ReturnStmt 0x81bd98 <line:41:3, col:10>
|     `-ImplicitCastExpr 0x81bd80 <col:10> '__uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x81bd60 <col:10> '__uint32_t':'unsigned int' lvalue ParmVar 0x81bc28 '__x' '__uint32_t':'unsigned int'
|-FunctionDecl 0x81be60 <line:44:1, line:48:1> line:45:1 __uint64_identity '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x81bdd0 <col:20, col:31> col:31 used __x '__uint64_t':'unsigned long'
| `-CompoundStmt 0x81bf50 <line:46:1, line:48:1>
|   `-ReturnStmt 0x81bf40 <line:47:3, col:10>
|     `-ImplicitCastExpr 0x81bf28 <col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x81bf08 <col:10> '__uint64_t':'unsigned long' lvalue ParmVar 0x81bdd0 '__x' '__uint64_t':'unsigned long'
|-RecordDecl 0x81bf68 </usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h:5:9, line:8:1> line:5:9 struct definition
| `-FieldDecl 0x81c1b0 <line:7:3, col:41> col:21 __val 'unsigned long [16]'
|-TypedefDecl 0x822710 <line:5:1, line:8:3> col:3 referenced __sigset_t 'struct __sigset_t':'__sigset_t'
| `-ElaboratedType 0x81c200 'struct __sigset_t' sugar
|   `-RecordType 0x81bff0 '__sigset_t'
|     `-Record 0x81bf68 ''
|-TypedefDecl 0x8227b0 </usr/include/x86_64-linux-gnu/bits/types/sigset_t.h:7:1, col:20> col:20 sigset_t '__sigset_t':'__sigset_t'
| `-TypedefType 0x822780 '__sigset_t' sugar
|   |-Typedef 0x822710 '__sigset_t'
|   `-ElaboratedType 0x81c200 'struct __sigset_t' sugar
|     `-RecordType 0x81bff0 '__sigset_t'
|       `-Record 0x81bf68 ''
|-RecordDecl 0x822808 </usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h:8:1, line:12:1> line:8:8 struct timeval definition
| |-FieldDecl 0x8228c0 <line:10:3, col:12> col:12 tv_sec '__time_t':'long'
| `-FieldDecl 0x822940 <line:11:3, col:17> col:17 tv_usec '__suseconds_t':'long'
|-RecordDecl 0x822990 </usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h:10:1, line:26:1> line:10:8 struct timespec definition
| |-FieldDecl 0x822a40 <line:12:3, col:12> col:12 tv_sec '__time_t':'long'
| `-FieldDecl 0x822ac0 <line:16:3, col:21> col:21 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x822b20 </usr/include/x86_64-linux-gnu/sys/select.h:43:1, col:23> col:23 suseconds_t '__suseconds_t':'long'
| `-TypedefType 0x822910 '__suseconds_t' sugar
|   |-Typedef 0x7aa200 '__suseconds_t'
|   `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x822b90 <line:49:1, col:18> col:18 referenced __fd_mask 'long'
| `-BuiltinType 0x701ae0 'long'
|-RecordDecl 0x822be8 <line:59:9, line:70:3> line:59:9 struct definition
| `-FieldDecl 0x822e78 <line:67:5, col:50> col:15 __fds_bits '__fd_mask [16]'
|-TypedefDecl 0x822f28 <line:59:1, line:70:5> col:5 referenced fd_set 'struct fd_set':'fd_set'
| `-ElaboratedType 0x822ed0 'struct fd_set' sugar
|   `-RecordType 0x822c70 'fd_set'
|     `-Record 0x822be8 ''
|-TypedefDecl 0x822fa8 <line:77:1, col:19> col:19 fd_mask '__fd_mask':'long'
| `-TypedefType 0x822c90 '__fd_mask' sugar
|   |-Typedef 0x822b90 '__fd_mask'
|   `-BuiltinType 0x701ae0 'long'
|-FunctionDecl 0x823470 <line:101:1, line:104:42> line:101:12 select 'int (int, fd_set *restrict, fd_set *restrict, fd_set *restrict, struct timeval *restrict)' extern
| |-ParmVarDecl 0x823018 <col:20, col:24> col:24 __nfds 'int'
| |-ParmVarDecl 0x823108 <col:32, col:51> col:51 __readfds 'fd_set *restrict'
| |-ParmVarDecl 0x823180 <line:102:6, col:25> col:25 __writefds 'fd_set *restrict'
| |-ParmVarDecl 0x8231f8 <line:103:6, col:25> col:25 __exceptfds 'fd_set *restrict'
| `-ParmVarDecl 0x823310 <line:104:6, col:33> col:33 __timeout 'struct timeval *restrict'
|-FunctionDecl 0x826690 <line:113:1, line:117:45> line:113:12 pselect 'int (int, fd_set *restrict, fd_set *restrict, fd_set *restrict, const struct timespec *restrict, const __sigset_t *restrict)' extern
| |-ParmVarDecl 0x823550 <col:21, col:25> col:25 __nfds 'int'
| |-ParmVarDecl 0x8235c8 <col:33, col:52> col:52 __readfds 'fd_set *restrict'
| |-ParmVarDecl 0x823640 <line:114:7, col:26> col:26 __writefds 'fd_set *restrict'
| |-ParmVarDecl 0x826320 <line:115:7, col:26> col:26 __exceptfds 'fd_set *restrict'
| |-ParmVarDecl 0x826440 <line:116:7, col:41> col:41 __timeout 'const struct timespec *restrict'
| `-ParmVarDecl 0x826518 <line:117:7, col:36> col:36 __sigmask 'const __sigset_t *restrict'
|-TypedefDecl 0x826790 </usr/include/x86_64-linux-gnu/sys/types.h:185:1, col:21> col:21 blksize_t '__blksize_t':'long'
| `-TypedefType 0x826760 '__blksize_t' sugar
|   |-Typedef 0x7aa430 '__blksize_t'
|   `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x826820 <line:192:1, col:20> col:20 blkcnt_t '__blkcnt_t':'long'
| `-TypedefType 0x8267f0 '__blkcnt_t' sugar
|   |-Typedef 0x7aa4a0 '__blkcnt_t'
|   `-BuiltinType 0x701ae0 'long'
|-TypedefDecl 0x8268b0 <line:196:1, col:22> col:22 fsblkcnt_t '__fsblkcnt_t':'unsigned long'
| `-TypedefType 0x826880 '__fsblkcnt_t' sugar
|   |-Typedef 0x7aa580 '__fsblkcnt_t'
|   `-BuiltinType 0x701b80 'unsigned long'
|-TypedefDecl 0x826940 <line:200:1, col:22> col:22 fsfilcnt_t '__fsfilcnt_t':'unsigned long'
| `-TypedefType 0x826910 '__fsfilcnt_t' sugar
|   |-Typedef 0x7b2638 '__fsfilcnt_t'
|   `-BuiltinType 0x701b80 'unsigned long'
|-RecordDecl 0x826998 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:49:9, line:53:1> line:49:16 struct __pthread_internal_list definition
| |-FieldDecl 0x826af0 <line:51:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x826b68 <line:52:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x826c18 <line:49:1, line:53:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x826bc0 'struct __pthread_internal_list' sugar
|   `-RecordType 0x826a20 'struct __pthread_internal_list'
|     `-Record 0x826998 '__pthread_internal_list'
|-RecordDecl 0x826c88 <line:55:9, line:58:1> line:55:16 struct __pthread_internal_slist definition
| `-FieldDecl 0x826de0 <line:57:3, col:36> col:36 __next 'struct __pthread_internal_slist *'
|-TypedefDecl 0x826e88 <line:55:1, line:58:3> col:3 __pthread_slist_t 'struct __pthread_internal_slist':'struct __pthread_internal_slist'
| `-ElaboratedType 0x826e30 'struct __pthread_internal_slist' sugar
|   `-RecordType 0x826d10 'struct __pthread_internal_slist'
|     `-Record 0x826c88 '__pthread_internal_slist'
|-RecordDecl 0x826ef8 </usr/include/x86_64-linux-gnu/bits/struct_mutex.h:22:1, line:53:1> line:22:8 struct __pthread_mutex_s definition
| |-FieldDecl 0x826fb8 <line:24:3, col:7> col:7 __lock 'int'
| |-FieldDecl 0x827020 <line:25:3, col:16> col:16 __count 'unsigned int'
| |-FieldDecl 0x827088 <line:26:3, col:7> col:7 __owner 'int'
| |-FieldDecl 0x8270f0 <line:28:3, col:16> col:16 __nusers 'unsigned int'
| |-FieldDecl 0x827158 <line:32:3, col:7> col:7 __kind 'int'
| |-FieldDecl 0x8271c0 <line:34:3, col:9> col:9 __spins 'short'
| |-FieldDecl 0x827228 <line:35:3, col:9> col:9 __elision 'short'
| `-FieldDecl 0x8272b0 <line:36:3, col:20> col:20 __list '__pthread_list_t':'struct __pthread_internal_list'
|-RecordDecl 0x82d190 </usr/include/x86_64-linux-gnu/bits/struct_rwlock.h:23:1, line:55:1> line:23:8 struct __pthread_rwlock_arch_t definition
| |-FieldDecl 0x82d248 <line:25:3, col:16> col:16 __readers 'unsigned int'
| |-FieldDecl 0x82d2b0 <line:26:3, col:16> col:16 __writers 'unsigned int'
| |-FieldDecl 0x82d318 <line:27:3, col:16> col:16 __wrphase_futex 'unsigned int'
| |-FieldDecl 0x82d380 <line:28:3, col:16> col:16 __writers_futex 'unsigned int'
| |-FieldDecl 0x82d3e8 <line:29:3, col:16> col:16 __pad3 'unsigned int'
| |-FieldDecl 0x82d450 <line:30:3, col:16> col:16 __pad4 'unsigned int'
| |-FieldDecl 0x82d4b8 <line:32:3, col:7> col:7 __cur_writer 'int'
| |-FieldDecl 0x82d520 <line:33:3, col:7> col:7 __shared 'int'
| |-FieldDecl 0x82d588 <line:34:3, col:15> col:15 __rwelision 'signed char'
| |-FieldDecl 0x82d670 <line:39:3, col:25> col:17 __pad1 'unsigned char [7]'
| |-FieldDecl 0x82d6d8 <line:42:3, col:21> col:21 __pad2 'unsigned long'
| `-FieldDecl 0x82d740 <line:45:3, col:16> col:16 __flags 'unsigned int'
|-RecordDecl 0x82d790 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:92:1, line:117:1> line:92:8 struct __pthread_cond_s definition
| |-RecordDecl 0x82d830 <line:94:17, line:102:3> line:94:17 union definition
| | |-FieldDecl 0x82d8e8 <line:96:19, col:42> col:42 __wseq 'unsigned long long'
| | |-RecordDecl 0x82d938 <line:97:5, line:101:5> line:97:5 struct definition
| | | |-FieldDecl 0x82d9f8 <line:99:7, col:20> col:20 __low 'unsigned int'
| | | `-FieldDecl 0x82da60 <line:100:7, col:20> col:20 __high 'unsigned int'
| | `-FieldDecl 0x82db08 <line:97:5, line:101:7> col:7 __wseq32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)'
| |-FieldDecl 0x82dbb8 <line:94:17> col:17 implicit 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:94:17)'
| |-IndirectFieldDecl 0x82dc18 <line:96:42> col:42 implicit __wseq 'unsigned long long'
| | |-Field 0x82dbb8 '' 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:94:17)'
| | `-Field 0x82d8e8 '__wseq' 'unsigned long long'
| |-IndirectFieldDecl 0x82dc70 <line:101:7> col:7 implicit __wseq32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)'
| | |-Field 0x82dbb8 '' 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:94:17)'
| | `-Field 0x82db08 '__wseq32' 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)'
| |-RecordDecl 0x82dcb8 <line:103:17, line:111:3> line:103:17 union definition
| | |-FieldDecl 0x82dd78 <line:105:19, col:42> col:42 __g1_start 'unsigned long long'
| | |-RecordDecl 0x82ddc8 <line:106:5, line:110:5> line:106:5 struct definition
| | | |-FieldDecl 0x82de88 <line:108:7, col:20> col:20 __low 'unsigned int'
| | | `-FieldDecl 0x82def0 <line:109:7, col:20> col:20 __high 'unsigned int'
| | `-FieldDecl 0x82df98 <line:106:5, line:110:7> col:7 __g1_start32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)'
| |-FieldDecl 0x82e048 <line:103:17> col:17 implicit 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:103:17)'
| |-IndirectFieldDecl 0x82e0a8 <line:105:42> col:42 implicit __g1_start 'unsigned long long'
| | |-Field 0x82e048 '' 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:103:17)'
| | `-Field 0x82dd78 '__g1_start' 'unsigned long long'
| |-IndirectFieldDecl 0x82e100 <line:110:7> col:7 implicit __g1_start32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)'
| | |-Field 0x82e048 '' 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:103:17)'
| | `-Field 0x82df98 '__g1_start32' 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)'
| |-FieldDecl 0x82f700 <line:112:3, col:26> col:16 __g_refs 'unsigned int [2]'
| |-FieldDecl 0x82f7b0 <line:113:3, col:26> col:16 __g_size 'unsigned int [2]'
| |-FieldDecl 0x82f818 <line:114:3, col:16> col:16 __g1_orig_size 'unsigned int'
| |-FieldDecl 0x82f880 <line:115:3, col:16> col:16 __wrefs 'unsigned int'
| `-FieldDecl 0x82f930 <line:116:3, col:29> col:16 __g_signals 'unsigned int [2]'
|-TypedefDecl 0x82fa48 </usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:27:1, col:27> col:27 pthread_t 'unsigned long'
| `-BuiltinType 0x701b80 'unsigned long'
|-RecordDecl 0x82faa0 <line:32:9, line:36:1> line:32:9 union definition
| |-FieldDecl 0x82fb98 <line:34:3, col:43> col:8 __size 'char [4]'
| `-FieldDecl 0x82fc00 <line:35:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x82fca8 <line:32:1, line:36:3> col:3 pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x82fc50 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x82fb20 'pthread_mutexattr_t'
|     `-Record 0x82faa0 ''
|-RecordDecl 0x82fd18 <line:41:9, line:45:1> line:41:9 union definition
| |-FieldDecl 0x82fe18 <line:43:3, col:42> col:8 __size 'char [4]'
| `-FieldDecl 0x82fe80 <line:44:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x82ff28 <line:41:1, line:45:3> col:3 pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x82fed0 'union pthread_condattr_t' sugar
|   `-RecordType 0x82fda0 'pthread_condattr_t'
|     `-Record 0x82fd18 ''
|-TypedefDecl 0x82ffb0 <line:49:1, col:22> col:22 pthread_key_t 'unsigned int'
| `-BuiltinType 0x701b60 'unsigned int'
|-TypedefDecl 0x830020 <line:53:1, col:30> col:30 pthread_once_t 'int'
| `-BuiltinType 0x701ac0 'int'
|-RecordDecl 0x830078 <line:56:1, line:60:1> line:56:7 union pthread_attr_t definition
| |-FieldDecl 0x8301b8 <line:58:3, col:38> col:8 __size 'char [56]'
| `-FieldDecl 0x830220 <line:59:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x8302c0 <line:62:1, col:30> col:30 pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x830270 'union pthread_attr_t' sugar
|   `-RecordType 0x830100 'union pthread_attr_t'
|     `-Record 0x830078 'pthread_attr_t'
|-RecordDecl 0x830318 <line:67:9, line:72:1> line:67:9 union definition
| |-FieldDecl 0x830410 <line:69:3, col:28> col:28 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x8304f8 <line:70:3, col:39> col:8 __size 'char [40]'
| `-FieldDecl 0x830560 <line:71:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x834718 <line:67:1, line:72:3> col:3 pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x8346c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x8303a0 'pthread_mutex_t'
|     `-Record 0x830318 ''
|-RecordDecl 0x834788 <line:75:9, line:80:1> line:75:9 union definition
| |-FieldDecl 0x834880 <line:77:3, col:27> col:27 __data 'struct __pthread_cond_s':'struct __pthread_cond_s'
| |-FieldDecl 0x834968 <line:78:3, col:38> col:8 __size 'char [48]'
| `-FieldDecl 0x8349d0 <line:79:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x834ba8 <line:75:1, line:80:3> col:3 pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x834b50 'union pthread_cond_t' sugar
|   `-RecordType 0x834810 'pthread_cond_t'
|     `-Record 0x834788 ''
|-RecordDecl 0x834c18 <line:86:9, line:91:1> line:86:9 union definition
| |-FieldDecl 0x834d10 <line:88:3, col:34> col:34 __data 'struct __pthread_rwlock_arch_t':'struct __pthread_rwlock_arch_t'
| |-FieldDecl 0x834db8 <line:89:3, col:40> col:8 __size 'char [56]'
| `-FieldDecl 0x834e20 <line:90:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x834f78 <line:86:1, line:91:3> col:3 pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x834f20 'union pthread_rwlock_t' sugar
|   `-RecordType 0x834ca0 'pthread_rwlock_t'
|     `-Record 0x834c18 ''
|-RecordDecl 0x834fe8 <line:93:9, line:97:1> line:93:9 union definition
| |-FieldDecl 0x835128 <line:95:3, col:44> col:8 __size 'char [8]'
| `-FieldDecl 0x835190 <line:96:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x835238 <line:93:1, line:97:3> col:3 pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x8351e0 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x835070 'pthread_rwlockattr_t'
|     `-Record 0x834fe8 ''
|-TypedefDecl 0x8352c0 <line:103:1, col:22> col:22 pthread_spinlock_t 'volatile int'
| `-QualType 0x701ac4 'volatile int' volatile
|   `-BuiltinType 0x701ac0 'int'
|-RecordDecl 0x835318 <line:108:9, line:112:1> line:108:9 union definition
| |-FieldDecl 0x835458 <line:110:3, col:41> col:8 __size 'char [32]'
| `-FieldDecl 0x8354c0 <line:111:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x835568 <line:108:1, line:112:3> col:3 pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x835510 'union pthread_barrier_t' sugar
|   `-RecordType 0x8353a0 'pthread_barrier_t'
|     `-Record 0x835318 ''
|-RecordDecl 0x8355d8 <line:114:9, line:118:1> line:114:9 union definition
| |-FieldDecl 0x7a1e60 <line:116:3, col:45> col:8 __size 'char [4]'
| `-FieldDecl 0x7a1ec8 <line:117:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x7a1f78 <line:114:1, line:118:3> col:3 pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x7a1f20 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x835660 'pthread_barrierattr_t'
|     `-Record 0x8355d8 ''
|-FunctionDecl 0x7a20b0 </usr/include/stdlib.h:401:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:401:17 random 'long (void)' extern
| `-NoThrowAttr 0x7a2150 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7a2250 </usr/include/stdlib.h:404:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:404:13 srandom 'void (unsigned int)' extern
| |-ParmVarDecl 0x7a21c0 <col:22, col:35> col:35 __seed 'unsigned int'
| `-NoThrowAttr 0x7a22f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x7a25b0 </usr/include/stdlib.h:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:410:14 initstate 'char *(unsigned int, char *, size_t)' extern
| |-ParmVarDecl 0x7a2368 <col:25, col:38> col:38 __seed 'unsigned int'
| |-ParmVarDecl 0x7a23e8 <col:46, col:52> col:52 __statebuf 'char *'
| |-ParmVarDecl 0x7a2460 <line:411:4, col:11> col:11 __statelen 'size_t':'unsigned long'
| |-NoThrowAttr 0x7a2668 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7a26c0 <line:293:44, /usr/include/stdlib.h:411:44> 2
|-FunctionDecl 0x7a27c8 <line:415:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:415:14 setstate 'char *(char *)' extern
| |-ParmVarDecl 0x7a2710 <col:24, col:30> col:30 __statebuf 'char *'
| |-NoThrowAttr 0x7a2870 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7a28c8 <line:293:44, /usr/include/stdlib.h:415:63> 1
|-RecordDecl 0x7a2908 <line:423:1, line:432:3> line:423:8 struct random_data definition
| |-FieldDecl 0x7a2a38 <line:425:5, col:14> col:14 fptr 'int32_t *'
| |-FieldDecl 0x7a2a98 <line:426:5, col:14> col:14 rptr 'int32_t *'
| |-FieldDecl 0x7a2af8 <line:427:5, col:14> col:14 state 'int32_t *'
| |-FieldDecl 0x7a2b60 <line:428:5, col:9> col:9 rand_type 'int'
| |-FieldDecl 0x7a2bc8 <line:429:5, col:9> col:9 rand_deg 'int'
| |-FieldDecl 0x7a2c30 <line:430:5, col:9> col:9 rand_sep 'int'
| `-FieldDecl 0x7a2c90 <line:431:5, col:14> col:14 end_ptr 'int32_t *'
|-FunctionDecl 0x839840 <line:434:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:434:12 random_r 'int (struct random_data *restrict, int32_t *restrict)' extern
| |-ParmVarDecl 0x7a2d90 <col:22, col:53> col:53 __buf 'struct random_data *restrict'
| |-ParmVarDecl 0x8396e0 <line:435:8, col:28> col:28 __result 'int32_t *restrict'
| |-NoThrowAttr 0x8398f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x839948 <line:293:44, /usr/include/stdlib.h:435:62> 1 2
|-FunctionDecl 0x839b70 <line:437:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:437:12 srandom_r 'int (unsigned int, struct random_data *)' extern
| |-ParmVarDecl 0x8399a0 <col:23, col:36> col:36 __seed 'unsigned int'
| |-ParmVarDecl 0x839a30 <col:44, col:64> col:64 __buf 'struct random_data *'
| |-NoThrowAttr 0x839c20 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x839c78 <line:293:44, /usr/include/stdlib.h:438:27> 2
|-FunctionDecl 0x839fe0 <line:440:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:440:12 initstate_r 'int (unsigned int, char *restrict, size_t, struct random_data *restrict)' extern
| |-ParmVarDecl 0x839cd0 <col:25, col:38> col:38 __seed 'unsigned int'
| |-ParmVarDecl 0x839d50 <col:46, col:63> col:63 __statebuf 'char *restrict'
| |-ParmVarDecl 0x839dc8 <line:441:4, col:11> col:11 __statelen 'size_t':'unsigned long'
| |-ParmVarDecl 0x839e58 <line:442:4, col:35> col:35 __buf 'struct random_data *restrict'
| |-NoThrowAttr 0x83a0a0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x83a0f8 <line:293:44, /usr/include/stdlib.h:443:30> 2 4
|-FunctionDecl 0x83a340 <line:445:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:445:12 setstate_r 'int (char *restrict, struct random_data *restrict)' extern
| |-ParmVarDecl 0x83a150 <col:24, col:41> col:41 __statebuf 'char *restrict'
| |-ParmVarDecl 0x83a1e0 <line:446:10, col:41> col:41 __buf 'struct random_data *restrict'
| |-NoThrowAttr 0x83a3f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x83a448 <line:293:44, /usr/include/stdlib.h:447:30> 1 2
|-FunctionDecl 0x83a528 <line:453:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:453:12 rand 'int (void)' extern
| `-NoThrowAttr 0x83a5c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x83a6f0 </usr/include/stdlib.h:455:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:455:13 srand 'void (unsigned int)' extern
| |-ParmVarDecl 0x83a638 <col:20, col:33> col:33 __seed 'unsigned int'
| `-NoThrowAttr 0x83a798 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x83a8d0 </usr/include/stdlib.h:459:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:459:12 rand_r 'int (unsigned int *)' extern
| |-ParmVarDecl 0x83a808 <col:20, col:34> col:34 __seed 'unsigned int *'
| `-NoThrowAttr 0x83a978 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x83aaa0 </usr/include/stdlib.h:467:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:467:15 drand48 'double (void)' extern
| `-NoThrowAttr 0x83ab40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x83adb0 </usr/include/stdlib.h:468:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:468:15 erand48 'double (unsigned short *)' extern
| |-ParmVarDecl 0x83ac90 <col:24, col:52> col:43 __xsubi 'unsigned short *':'unsigned short *'
| |-NoThrowAttr 0x83ae58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x83aeb0 <line:293:44, /usr/include/stdlib.h:468:76> 1
|-FunctionDecl 0x83af88 <line:471:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:471:17 lrand48 'long (void)' extern
| `-NoThrowAttr 0x83b028 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x83b200 </usr/include/stdlib.h:472:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:472:17 nrand48 'long (unsigned short *)' extern
| |-ParmVarDecl 0x83b0e0 <col:26, col:54> col:45 __xsubi 'unsigned short *':'unsigned short *'
| |-NoThrowAttr 0x83b2a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x83b300 <line:293:44, /usr/include/stdlib.h:473:27> 1
|-FunctionDecl 0x83b3d8 <line:476:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:476:17 mrand48 'long (void)' extern
| `-NoThrowAttr 0x83b478 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x83b5e8 </usr/include/stdlib.h:477:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:477:17 jrand48 'long (unsigned short *)' extern
| |-ParmVarDecl 0x83b530 <col:26, col:54> col:45 __xsubi 'unsigned short *':'unsigned short *'
| |-NoThrowAttr 0x83b690 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x83b700 <line:293:44, /usr/include/stdlib.h:478:27> 1
|-FunctionDecl 0x83b818 <line:481:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:481:13 srand48 'void (long)' extern
| |-ParmVarDecl 0x83b750 <col:22, col:31> col:31 __seedval 'long'
| `-NoThrowAttr 0x83b8c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x83ba90 </usr/include/stdlib.h:482:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:482:28 seed48 'unsigned short *(unsigned short *)' extern
| |-ParmVarDecl 0x83b978 <col:36, col:66> col:55 __seed16v 'unsigned short *':'unsigned short *'
| |-NoThrowAttr 0x83bb38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x83bb90 <line:293:44, /usr/include/stdlib.h:483:27> 1
|-FunctionDecl 0x83bda8 <line:484:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:484:13 lcong48 'void (unsigned short *)' extern
| |-ParmVarDecl 0x83bc90 <col:22, col:50> col:41 __param 'unsigned short *':'unsigned short *'
| |-NoThrowAttr 0x83be50 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x83bea8 <line:293:44, /usr/include/stdlib.h:484:74> 1
|-RecordDecl 0x83bee8 <line:490:1, line:498:3> line:490:8 struct drand48_data definition
| |-FieldDecl 0x83bff0 <line:492:5, col:29> col:24 __x 'unsigned short [3]'
| |-FieldDecl 0x83c0a0 <line:493:5, col:33> col:24 __old_x 'unsigned short [3]'
| |-FieldDecl 0x83c108 <line:494:5, col:24> col:24 __c 'unsigned short'
| |-FieldDecl 0x83c170 <line:495:5, col:24> col:24 __init 'unsigned short'
| `-FieldDecl 0x83c1d8 <line:496:19, col:42> col:42 __a 'unsigned long long'
|-FunctionDecl 0x83c4f0 <line:501:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:501:12 drand48_r 'int (struct drand48_data *restrict, double *restrict)' extern
| |-ParmVarDecl 0x83c2e0 <col:23, col:55> col:55 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0x83c390 <line:502:9, col:28> col:28 __result 'double *restrict'
| |-NoThrowAttr 0x83c5a0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x83c5f8 <line:293:44, /usr/include/stdlib.h:502:62> 1 2
|-FunctionDecl 0x83c920 <line:503:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:503:12 erand48_r 'int (unsigned short *, struct drand48_data *restrict, double *restrict)' extern
| |-ParmVarDecl 0x83c698 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| |-ParmVarDecl 0x83c738 <line:504:9, col:41> col:41 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0x83c7b8 <line:505:9, col:28> col:28 __result 'double *restrict'
| |-NoThrowAttr 0x83c9d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x83ca30 <line:293:44, /usr/include/stdlib.h:505:62> 1 2
|-FunctionDecl 0x83cca0 <line:508:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:508:12 lrand48_r 'int (struct drand48_data *restrict, long *restrict)' extern
| |-ParmVarDecl 0x83ca90 <col:23, col:55> col:55 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0x83cb40 <line:509:9, col:30> col:30 __result 'long *restrict'
| |-NoThrowAttr 0x83cd50 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x83cda8 <line:293:44, /usr/include/stdlib.h:510:30> 1 2
|-FunctionDecl 0x83d0c0 <line:511:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:511:12 nrand48_r 'int (unsigned short *, struct drand48_data *restrict, long *restrict)' extern
| |-ParmVarDecl 0x83ce48 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| |-ParmVarDecl 0x83ced8 <line:512:9, col:41> col:41 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0x83cf58 <line:513:9, col:30> col:30 __result 'long *restrict'
| |-NoThrowAttr 0x83d178 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x83d1d0 <line:293:44, /usr/include/stdlib.h:514:30> 1 2
|-FunctionDecl 0x83d390 <line:517:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:517:12 mrand48_r 'int (struct drand48_data *restrict, long *restrict)' extern
| |-ParmVarDecl 0x83d230 <col:23, col:55> col:55 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0x83d2b0 <line:518:9, col:30> col:30 __result 'long *restrict'
| |-NoThrowAttr 0x83d440 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x83d498 <line:293:44, /usr/include/stdlib.h:519:30> 1 2
|-FunctionDecl 0x83e770 <line:520:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:520:12 jrand48_r 'int (unsigned short *, struct drand48_data *restrict, long *restrict)' extern
| |-ParmVarDecl 0x83d538 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| |-ParmVarDecl 0x83d5c8 <line:521:9, col:41> col:41 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0x83d648 <line:522:9, col:30> col:30 __result 'long *restrict'
| |-NoThrowAttr 0x83e828 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x83e880 <line:293:44, /usr/include/stdlib.h:523:30> 1 2
|-FunctionDecl 0x83eaa0 <line:526:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:526:12 srand48_r 'int (long, struct drand48_data *)' extern
| |-ParmVarDecl 0x83e8d0 <col:23, col:32> col:32 __seedval 'long'
| |-ParmVarDecl 0x83e960 <col:43, col:64> col:64 __buffer 'struct drand48_data *'
| |-NoThrowAttr 0x83eb50 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x83eba8 <line:293:44, /usr/include/stdlib.h:527:27> 2
|-FunctionDecl 0x83ee30 <line:529:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:529:12 seed48_r 'int (unsigned short *, struct drand48_data *)' extern
| |-ParmVarDecl 0x83ec48 <col:22, col:52> col:41 __seed16v 'unsigned short *':'unsigned short *'
| |-ParmVarDecl 0x83ecd8 <line:530:8, col:29> col:29 __buffer 'struct drand48_data *'
| |-NoThrowAttr 0x83eee0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x83ef38 <line:293:44, /usr/include/stdlib.h:530:63> 1 2
|-FunctionDecl 0x83f180 <line:532:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:532:12 lcong48_r 'int (unsigned short *, struct drand48_data *)' extern
| |-ParmVarDecl 0x83efd8 <col:23, col:51> col:42 __param 'unsigned short *':'unsigned short *'
| |-ParmVarDecl 0x83f068 <line:533:9, col:30> col:30 __buffer 'struct drand48_data *'
| |-NoThrowAttr 0x83f230 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x83f288 <line:293:44, /usr/include/stdlib.h:534:30> 1 2
|-FunctionDecl 0x83f3d0 <line:539:14> col:14 implicit malloc 'void *(unsigned long)' extern
| `-ParmVarDecl 0x83f470 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x83f4e0 prev 0x83f3d0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdlib.h:539:14 malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0x83f2d8 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0x83f588 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0x83f5e0 <line:208:47> malloc
|-FunctionDecl 0x83f7f0 </usr/include/stdlib.h:542:14> col:14 implicit calloc 'void *(unsigned long, unsigned long)' extern
| |-ParmVarDecl 0x83f890 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0x83f8f8 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x83f970 prev 0x83f7f0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdlib.h:542:14 calloc 'void *(unsigned long, unsigned long)' extern
| |-ParmVarDecl 0x83f618 <col:22, col:29> col:29 __nmemb 'size_t':'unsigned long'
| |-ParmVarDecl 0x83f690 <col:38, col:45> col:45 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0x83fa20 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0x83fa78 <line:208:47> malloc
|-FunctionDecl 0x83fc50 </usr/include/stdlib.h:550:14> col:14 implicit realloc 'void *(void *, unsigned long)' extern
| |-ParmVarDecl 0x83fcf0 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x83fd58 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x83fdd0 prev 0x83fc50 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:302:43> /usr/include/stdlib.h:550:14 realloc 'void *(void *, unsigned long)' extern
| |-ParmVarDecl 0x83fab8 <col:23, col:29> col:29 __ptr 'void *'
| |-ParmVarDecl 0x83fb30 <col:36, col:43> col:43 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0x83fe80 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-WarnUnusedResultAttr 0x83fed8 <line:302:20> warn_unused_result ""
|-FunctionDecl 0x840140 </usr/include/stdlib.h:559:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:302:43> /usr/include/stdlib.h:559:14 reallocarray 'void *(void *, size_t, size_t)' extern
| |-ParmVarDecl 0x83ff20 <col:28, col:34> col:34 __ptr 'void *'
| |-ParmVarDecl 0x83ff98 <col:41, col:48> col:48 __nmemb 'size_t':'unsigned long'
| |-ParmVarDecl 0x840010 <col:57, col:64> col:64 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0x8401f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-WarnUnusedResultAttr 0x840250 <line:302:20> warn_unused_result ""
|-FunctionDecl 0x840358 </usr/include/stdlib.h:565:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:565:13 free 'void (void *)' extern
| |-ParmVarDecl 0x840298 <col:19, col:25> col:25 __ptr 'void *'
| `-NoThrowAttr 0x840400 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x840500 </usr/include/alloca.h:32:14> col:14 implicit alloca 'void *(unsigned long)' extern
| `-ParmVarDecl 0x8405a0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0x840610 prev 0x840500 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/alloca.h:32:14 alloca 'void *(unsigned long)' extern
| |-ParmVarDecl 0x840468 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| `-NoThrowAttr 0x8406b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x8407e8 </usr/include/stdlib.h:574:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdlib.h:574:14 valloc 'void *(size_t)' extern
| |-ParmVarDecl 0x840750 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0x840890 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0x8408e8 <line:208:47> malloc
|-FunctionDecl 0x840b90 </usr/include/stdlib.h:580:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:580:12 posix_memalign 'int (void **, size_t, size_t)' extern
| |-ParmVarDecl 0x840950 <col:28, col:35> col:35 __memptr 'void **'
| |-ParmVarDecl 0x8409c8 <col:45, col:52> col:52 __alignment 'size_t':'unsigned long'
| |-ParmVarDecl 0x840a40 <col:65, col:72> col:72 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0x840c48 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x840ca0 <line:293:44, /usr/include/stdlib.h:581:27> 1
|-FunctionDecl 0x840e00 <line:586:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdlib.h:586:14 aligned_alloc 'void *(size_t, size_t)' extern
| |-ParmVarDecl 0x840ce8 <col:29, col:36> col:36 __alignment 'size_t':'unsigned long'
| |-ParmVarDecl 0x840d60 <col:49, col:56> col:56 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0x840eb0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0x840f08 <line:208:47> malloc
|-FunctionDecl 0x840ff8 </usr/include/stdlib.h:591:13> col:13 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x841098 prev 0x840ff8 <col:1, col:63> col:13 abort 'void (void) __attribute__((noreturn))' extern
| `-NoThrowAttr 0x841138 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x841350 </usr/include/stdlib.h:595:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:595:12 atexit 'int (void (*)(void))' extern
| |-ParmVarDecl 0x841238 <col:20, col:40> col:27 __func 'void (*)(void)'
| |-NoThrowAttr 0x8413f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x841450 <line:293:44, /usr/include/stdlib.h:595:64> 1
|-FunctionDecl 0x8415e8 <line:603:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:603:12 at_quick_exit 'int (void (*)(void))' extern
| |-ParmVarDecl 0x841530 <col:27, col:47> col:34 __func 'void (*)(void)'
| |-NoThrowAttr 0x841690 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x8416e8 <line:293:44, /usr/include/stdlib.h:603:71> 1
|-FunctionDecl 0x841b10 <line:610:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:610:12 on_exit 'int (void (*)(int, void *), void *)' extern
| |-ParmVarDecl 0x841958 <col:21, col:62> col:28 __func 'void (*)(int, void *)'
| |-ParmVarDecl 0x8419d8 <col:65, col:71> col:71 __arg 'void *'
| |-NoThrowAttr 0x841bc0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x841c18 <line:293:44, /usr/include/stdlib.h:611:27> 1
|-FunctionDecl 0x841d38 <line:617:13> col:13 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x841dd8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x841e48 prev 0x841d38 <col:1, col:70> col:13 exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x841c70 <col:19, col:23> col:23 __status 'int'
| `-NoThrowAttr 0x841ef0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x841ff0 </usr/include/stdlib.h:623:1, col:76> col:13 quick_exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x841f60 <col:25, col:29> col:29 __status 'int'
| `-NoThrowAttr 0x842098 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x842198 </usr/include/stdlib.h:629:13> col:13 implicit _Exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x842238 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x8422a8 prev 0x842198 <col:1, col:71> col:13 _Exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x842108 <col:20, col:24> col:24 __status 'int'
| `-NoThrowAttr 0x842350 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x842478 </usr/include/stdlib.h:634:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:634:14 getenv 'char *(const char *)' extern
| |-ParmVarDecl 0x8423c0 <col:22, col:34> col:34 __name 'const char *'
| |-NoThrowAttr 0x842520 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x842578 <line:293:44, /usr/include/stdlib.h:634:63> 1
|-FunctionDecl 0x8426c0 <line:647:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:647:12 putenv 'int (char *)' extern
| |-ParmVarDecl 0x8425d0 <col:20, col:26> col:26 __string 'char *'
| |-NoThrowAttr 0x8437a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x843800 <line:293:44, /usr/include/stdlib.h:647:57> 1
|-FunctionDecl 0x843a60 <line:653:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:653:12 setenv 'int (const char *, const char *, int)' extern
| |-ParmVarDecl 0x843850 <col:20, col:32> col:32 __name 'const char *'
| |-ParmVarDecl 0x8438d0 <col:40, col:52> col:52 __value 'const char *'
| |-ParmVarDecl 0x843950 <col:61, col:65> col:65 __replace 'int'
| |-NoThrowAttr 0x843b18 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x843b70 <line:293:44, /usr/include/stdlib.h:654:27> 2
|-FunctionDecl 0x843c78 <line:657:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:657:12 unsetenv 'int (const char *)' extern
| |-ParmVarDecl 0x843bc0 <col:22, col:34> col:34 __name 'const char *'
| |-NoThrowAttr 0x843d20 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x843d78 <line:293:44, /usr/include/stdlib.h:657:63> 1
|-FunctionDecl 0x843e58 <line:664:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:664:12 clearenv 'int (void)' extern
| `-NoThrowAttr 0x843ef8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x844020 </usr/include/stdlib.h:675:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:675:14 mktemp 'char *(char *)' extern
| |-ParmVarDecl 0x843f68 <col:22, col:28> col:28 __template 'char *'
| |-NoThrowAttr 0x8440c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x844120 <line:293:44, /usr/include/stdlib.h:675:61> 1
|-FunctionDecl 0x844228 <line:688:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:688:12 mkstemp 'int (char *)' extern
| |-ParmVarDecl 0x844170 <col:21, col:27> col:27 __template 'char *'
| `-NonNullAttr 0x8442d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:688:52> 1
|-FunctionDecl 0x8444d0 <line:710:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:710:12 mkstemps 'int (char *, int)' extern
| |-ParmVarDecl 0x844350 <col:22, col:28> col:28 __template 'char *'
| |-ParmVarDecl 0x8443d0 <col:40, col:44> col:44 __suffixlen 'int'
| `-NonNullAttr 0x844580 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:710:70> 1
|-FunctionDecl 0x8446b8 <line:731:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:731:14 mkdtemp 'char *(char *)' extern
| |-ParmVarDecl 0x844600 <col:23, col:29> col:29 __template 'char *'
| |-NoThrowAttr 0x844760 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x8447e0 <line:293:44, /usr/include/stdlib.h:731:62> 1
|-FunctionDecl 0x8448c8 <line:784:1, col:41> col:12 system 'int (const char *)' extern
| `-ParmVarDecl 0x844830 <col:20, col:32> col:32 __command 'const char *'
|-FunctionDecl 0x844b20 <line:800:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:800:14 realpath 'char *(const char *restrict, char *restrict)' extern
| |-ParmVarDecl 0x844988 <col:24, col:47> col:47 __name 'const char *restrict'
| |-ParmVarDecl 0x844a08 <line:801:10, col:27> col:27 __resolved 'char *restrict'
| `-NoThrowAttr 0x844bd0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-TypedefDecl 0x844e40 </usr/include/stdlib.h:808:1, col:57> col:15 referenced __compar_fn_t 'int (*)(const void *, const void *)'
| `-PointerType 0x844dd0 'int (*)(const void *, const void *)'
|   `-ParenType 0x844d70 'int (const void *, const void *)' sugar
|     `-FunctionProtoType 0x844d30 'int (const void *, const void *)' cdecl
|       |-BuiltinType 0x701ac0 'int'
|       |-PointerType 0x7a3c00 'const void *'
|       | `-QualType 0x701a21 'const void' const
|       |   `-BuiltinType 0x701a20 'void'
|       `-PointerType 0x7a3c00 'const void *'
|         `-QualType 0x701a21 'const void' const
|           `-BuiltinType 0x701a20 'void'
|-FunctionDecl 0x845280 <line:820:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:820:14 bsearch 'void *(const void *, const void *, size_t, size_t, __compar_fn_t)' extern
| |-ParmVarDecl 0x844eb0 <col:23, col:35> col:35 __key 'const void *'
| |-ParmVarDecl 0x844f30 <col:42, col:54> col:54 __base 'const void *'
| |-ParmVarDecl 0x844fa8 <line:821:9, col:16> col:16 __nmemb 'size_t':'unsigned long'
| |-ParmVarDecl 0x845020 <col:25, col:32> col:32 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x8450c0 <col:40, col:54> col:54 __compar '__compar_fn_t':'int (*)(const void *, const void *)'
| `-NonNullAttr 0x845348 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:822:25> 1 2 5
|-FunctionDecl 0x8456c8 <line:830:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:830:13 qsort 'void (void *, size_t, size_t, __compar_fn_t)' extern
| |-ParmVarDecl 0x8453d8 <col:20, col:26> col:26 __base 'void *'
| |-ParmVarDecl 0x845450 <col:34, col:41> col:41 __nmemb 'size_t':'unsigned long'
| |-ParmVarDecl 0x8454c8 <col:50, col:57> col:57 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x845540 <line:831:6, col:20> col:20 __compar '__compar_fn_t':'int (*)(const void *, const void *)'
| `-NonNullAttr 0x8457c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:831:46> 1 4
|-FunctionDecl 0x8458d8 <line:840:12> col:12 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x845978 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x8459e8 <col:12> Implicit
| `-ConstAttr 0x845a40 <col:12> Implicit
|-FunctionDecl 0x845a68 prev 0x8458d8 <col:1, col:60> col:12 abs 'int (int)' extern
| |-ParmVarDecl 0x845840 <col:17, col:21> col:21 __x 'int'
| |-NoThrowAttr 0x845b10 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x845b68 </usr/include/stdlib.h:840:50>
|-FunctionDecl 0x845c70 <line:841:17> col:17 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x845d10 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x845d80 <col:17> Implicit
| `-ConstAttr 0x845dd8 <col:17> Implicit
|-FunctionDecl 0x845e00 prev 0x845c70 <col:1, col:71> col:17 labs 'long (long)' extern
| |-ParmVarDecl 0x845ba8 <col:23, col:32> col:32 __x 'long'
| |-NoThrowAttr 0x845ea8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x845f00 </usr/include/stdlib.h:841:61>
|-FunctionDecl 0x846010 <line:844:36> col:36 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x8460b0 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x846120 <col:36> Implicit
| `-ConstAttr 0x846178 <col:36> Implicit
|-FunctionDecl 0x8461a0 prev 0x846010 <col:15, line:845:40> line:844:36 llabs 'long long (long long)' extern
| |-ParmVarDecl 0x845f40 <col:43, col:57> col:57 __x 'long long'
| |-NoThrowAttr 0x846248 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x8462a0 </usr/include/stdlib.h:845:30>
|-FunctionDecl 0x846498 <line:852:1, line:853:40> line:852:14 div 'div_t (int, int)' extern
| |-ParmVarDecl 0x846308 <col:19, col:23> col:23 __numer 'int'
| |-ParmVarDecl 0x846388 <col:32, col:36> col:36 __denom 'int'
| |-NoThrowAttr 0x846548 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x8465a0 </usr/include/stdlib.h:853:30>
|-FunctionDecl 0x7e5460 <line:854:1, line:855:40> line:854:15 ldiv 'ldiv_t (long, long)' extern
| |-ParmVarDecl 0x846608 <col:21, col:30> col:30 __numer 'long'
| |-ParmVarDecl 0x846688 <col:39, col:48> col:48 __denom 'long'
| |-NoThrowAttr 0x7e5510 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x7e5568 </usr/include/stdlib.h:855:30>
|-FunctionDecl 0x7e5758 <line:858:15, line:860:40> line:858:30 lldiv 'lldiv_t (long long, long long)' extern
| |-ParmVarDecl 0x7e55c8 <col:37, col:51> col:51 __numer 'long long'
| |-ParmVarDecl 0x7e5648 <line:859:9, col:23> col:23 __denom 'long long'
| |-NoThrowAttr 0x7e5808 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x7e5860 </usr/include/stdlib.h:860:30>
|-FunctionDecl 0x7e5bb0 <line:872:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:872:14 ecvt 'char *(double, int, int *restrict, int *restrict)' extern
| |-ParmVarDecl 0x7e58a0 <col:20, col:27> col:27 __value 'double'
| |-ParmVarDecl 0x7e5920 <col:36, col:40> col:40 __ndigit 'int'
| |-ParmVarDecl 0x7e59a0 <col:50, col:66> col:66 __decpt 'int *restrict'
| |-ParmVarDecl 0x7e5a20 <line:873:6, col:22> col:22 __sign 'int *restrict'
| |-NoThrowAttr 0x7e5c70 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7e5cc8 <line:293:44, /usr/include/stdlib.h:873:54> 3 4
|-FunctionDecl 0x7e5f90 <line:878:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:878:14 fcvt 'char *(double, int, int *restrict, int *restrict)' extern
| |-ParmVarDecl 0x7e5d20 <col:20, col:27> col:27 __value 'double'
| |-ParmVarDecl 0x7e5da0 <col:36, col:40> col:40 __ndigit 'int'
| |-ParmVarDecl 0x7e5e20 <col:50, col:66> col:66 __decpt 'int *restrict'
| |-ParmVarDecl 0x7e5ea0 <line:879:6, col:22> col:22 __sign 'int *restrict'
| |-NoThrowAttr 0x7e6050 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7e60a8 <line:293:44, /usr/include/stdlib.h:879:54> 3 4
|-FunctionDecl 0x7e6310 <line:884:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:884:14 gcvt 'char *(double, int, char *)' extern
| |-ParmVarDecl 0x7e6100 <col:20, col:27> col:27 __value 'double'
| |-ParmVarDecl 0x7e6180 <col:36, col:40> col:40 __ndigit 'int'
| |-ParmVarDecl 0x7e6200 <col:50, col:56> col:56 __buf 'char *'
| |-NoThrowAttr 0x7e63c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x7e6420 <line:293:44, /usr/include/stdlib.h:885:27> 3
|-FunctionDecl 0x848b00 <line:890:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:890:14 qecvt 'char *(long double, int, int *restrict, int *restrict)' extern
| |-ParmVarDecl 0x8487f8 <col:21, col:33> col:33 __value 'long double'
| |-ParmVarDecl 0x848878 <col:42, col:46> col:46 __ndigit 'int'
| |-ParmVarDecl 0x8488f8 <line:891:7, col:23> col:23 __decpt 'int *restrict'
| |-ParmVarDecl 0x848978 <col:32, col:48> col:48 __sign 'int *restrict'
| |-NoThrowAttr 0x848bc0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x848c18 <line:293:44, /usr/include/stdlib.h:892:30> 3 4
|-FunctionDecl 0x848ee0 <line:893:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:893:14 qfcvt 'char *(long double, int, int *restrict, int *restrict)' extern
| |-ParmVarDecl 0x848c70 <col:21, col:33> col:33 __value 'long double'
| |-ParmVarDecl 0x848cf0 <col:42, col:46> col:46 __ndigit 'int'
| |-ParmVarDecl 0x848d70 <line:894:7, col:23> col:23 __decpt 'int *restrict'
| |-ParmVarDecl 0x848df0 <col:32, col:48> col:48 __sign 'int *restrict'
| |-NoThrowAttr 0x848fa0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x848ff8 <line:293:44, /usr/include/stdlib.h:895:30> 3 4
|-FunctionDecl 0x849260 <line:896:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:896:14 qgcvt 'char *(long double, int, char *)' extern
| |-ParmVarDecl 0x849050 <col:21, col:33> col:33 __value 'long double'
| |-ParmVarDecl 0x8490d0 <col:42, col:46> col:46 __ndigit 'int'
| |-ParmVarDecl 0x849150 <col:56, col:62> col:62 __buf 'char *'
| |-NoThrowAttr 0x849318 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x849370 <line:293:44, /usr/include/stdlib.h:897:27> 3
|-FunctionDecl 0x849848 <line:902:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:902:12 ecvt_r 'int (double, int, int *restrict, int *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0x8493c0 <col:20, col:27> col:27 __value 'double'
| |-ParmVarDecl 0x849440 <col:36, col:40> col:40 __ndigit 'int'
| |-ParmVarDecl 0x8494c0 <col:50, col:66> col:66 __decpt 'int *restrict'
| |-ParmVarDecl 0x849540 <line:903:6, col:22> col:22 __sign 'int *restrict'
| |-ParmVarDecl 0x8495c0 <col:30, col:47> col:47 __buf 'char *restrict'
| |-ParmVarDecl 0x849638 <line:904:6, col:13> col:13 __len 'size_t':'unsigned long'
| |-NoThrowAttr 0x849918 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x849970 <line:293:44, /usr/include/stdlib.h:904:47> 3 4 5
|-FunctionDecl 0x849d60 <line:905:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:905:12 fcvt_r 'int (double, int, int *restrict, int *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0x8499c8 <col:20, col:27> col:27 __value 'double'
| |-ParmVarDecl 0x849a48 <col:36, col:40> col:40 __ndigit 'int'
| |-ParmVarDecl 0x849ac8 <col:50, col:66> col:66 __decpt 'int *restrict'
| |-ParmVarDecl 0x849b48 <line:906:6, col:22> col:22 __sign 'int *restrict'
| |-ParmVarDecl 0x849bc8 <col:30, col:47> col:47 __buf 'char *restrict'
| |-ParmVarDecl 0x849c40 <line:907:6, col:13> col:13 __len 'size_t':'unsigned long'
| |-NoThrowAttr 0x849e30 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x849e88 <line:293:44, /usr/include/stdlib.h:907:47> 3 4 5
|-FunctionDecl 0x84a340 <line:909:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:909:12 qecvt_r 'int (long double, int, int *restrict, int *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0x849ee8 <col:21, col:33> col:33 __value 'long double'
| |-ParmVarDecl 0x849f68 <col:42, col:46> col:46 __ndigit 'int'
| |-ParmVarDecl 0x849fe8 <line:910:7, col:23> col:23 __decpt 'int *restrict'
| |-ParmVarDecl 0x84a068 <col:32, col:48> col:48 __sign 'int *restrict'
| |-ParmVarDecl 0x84a0e8 <line:911:7, col:24> col:24 __buf 'char *restrict'
| |-ParmVarDecl 0x84a160 <col:31, col:38> col:38 __len 'size_t':'unsigned long'
| |-NoThrowAttr 0x84a410 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x84a468 <line:293:44, /usr/include/stdlib.h:912:33> 3 4 5
|-FunctionDecl 0x84a878 <line:913:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:913:12 qfcvt_r 'int (long double, int, int *restrict, int *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0x84a4c8 <col:21, col:33> col:33 __value 'long double'
| |-ParmVarDecl 0x84a548 <col:42, col:46> col:46 __ndigit 'int'
| |-ParmVarDecl 0x84a5c8 <line:914:7, col:23> col:23 __decpt 'int *restrict'
| |-ParmVarDecl 0x84a648 <col:32, col:48> col:48 __sign 'int *restrict'
| |-ParmVarDecl 0x84a6c8 <line:915:7, col:24> col:24 __buf 'char *restrict'
| |-ParmVarDecl 0x84a740 <col:31, col:38> col:38 __len 'size_t':'unsigned long'
| |-NoThrowAttr 0x84a948 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x84a9a0 <line:293:44, /usr/include/stdlib.h:916:33> 3 4 5
|-FunctionDecl 0x84ab90 <line:922:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:922:12 mblen 'int (const char *, size_t)' extern
| |-ParmVarDecl 0x84a9f8 <col:19, col:31> col:31 __s 'const char *'
| |-ParmVarDecl 0x84aa70 <col:36, col:43> col:43 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0x84ac40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x84af20 </usr/include/stdlib.h:925:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:925:12 mbtowc 'int (wchar_t *restrict, const char *restrict, size_t)' extern
| |-ParmVarDecl 0x84acf8 <col:20, col:40> col:40 __pwc 'wchar_t *restrict'
| |-ParmVarDecl 0x84ad78 <line:926:6, col:29> col:29 __s 'const char *restrict'
| |-ParmVarDecl 0x84adf0 <col:34, col:41> col:41 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0x84afd8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x84b1a0 </usr/include/stdlib.h:929:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:929:12 wctomb 'int (char *, wchar_t)' extern
| |-ParmVarDecl 0x84b048 <col:20, col:26> col:26 __s 'char *'
| |-ParmVarDecl 0x84b0c0 <col:31, col:39> col:39 __wchar 'wchar_t':'int'
| `-NoThrowAttr 0x84b250 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x84b4d8 </usr/include/stdlib.h:933:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:933:15 mbstowcs 'size_t (wchar_t *restrict, const char *restrict, size_t)' extern
| |-ParmVarDecl 0x84b2b8 <col:25, col:46> col:46 __pwcs 'wchar_t *restrict'
| |-ParmVarDecl 0x84b338 <line:934:4, col:27> col:27 __s 'const char *restrict'
| |-ParmVarDecl 0x84b3b0 <col:32, col:39> col:39 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0x84b590 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x84b888 </usr/include/stdlib.h:936:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:936:15 wcstombs 'size_t (char *restrict, const wchar_t *restrict, size_t)' extern
| |-ParmVarDecl 0x84b600 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x84b6a8 <line:937:4, col:30> col:30 __pwcs 'const wchar_t *restrict'
| |-ParmVarDecl 0x84b720 <col:38, col:45> col:45 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0x84b940 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x84ba68 </usr/include/stdlib.h:946:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:946:12 rpmatch 'int (const char *)' extern
| |-ParmVarDecl 0x84b9b0 <col:21, col:33> col:33 __response 'const char *'
| |-NoThrowAttr 0x84bb10 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x84bb68 <line:293:44, /usr/include/stdlib.h:946:66> 1
|-FunctionDecl 0x84be80 <line:957:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:957:12 getsubopt 'int (char **restrict, char *const *restrict, char **restrict)' extern
| |-ParmVarDecl 0x84bbc0 <col:23, col:41> col:41 __optionp 'char **restrict'
| |-ParmVarDecl 0x84bc70 <line:958:9, col:33> col:33 __tokens 'char *const *restrict'
| |-ParmVarDecl 0x84bcf0 <line:959:9, col:27> col:27 __valuep 'char **restrict'
| |-NoThrowAttr 0x84bf38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x84bf90 <line:293:44, /usr/include/stdlib.h:960:33> 1 2 3
|-FunctionDecl 0x84c210 <line:1003:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:1003:12 getloadavg 'int (double *, int)' extern
| |-ParmVarDecl 0x84c050 <col:24, col:41> col:31 __loadavg 'double *':'double *'
| |-ParmVarDecl 0x84c0d0 <col:44, col:48> col:48 __nelem 'int'
| |-NoThrowAttr 0x84c2c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0x84c318 <line:293:44, /usr/include/stdlib.h:1004:27> 1
|-TypedefDecl 0x84c370 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:35:1, col:26> col:26 ptrdiff_t 'long'
| `-BuiltinType 0x701ae0 'long'
|-RecordDecl 0x84c3c8 </usr/lib/llvm-10/lib/clang/10.0.0/include/__stddef_max_align_t.h:19:9, line:24:1> line:19:9 struct definition
| |-FieldDecl 0x84c4c0 <line:20:3, col:13> col:13 __clang_max_align_nonce1 'long long'
| | `-AlignedAttr 0x84c528 <line:21:22, col:56> aligned
| |   `-ConstantExpr 0x84c510 <col:34, col:55> 'unsigned long'
| |     `-UnaryExprOrTypeTraitExpr 0x84c488 <col:34, col:55> 'unsigned long' __alignof 'long long'
| `-FieldDecl 0x84c5d8 <line:22:3, col:15> col:15 __clang_max_align_nonce2 'long double'
|   `-AlignedAttr 0x84c640 <line:23:22, col:58> aligned
|     `-ConstantExpr 0x84c628 <col:34, col:57> 'unsigned long'
|       `-UnaryExprOrTypeTraitExpr 0x84c5a0 <col:34, col:57> 'unsigned long' __alignof 'long double'
|-TypedefDecl 0x84c6f8 <line:19:1, line:24:3> col:3 max_align_t 'struct max_align_t':'max_align_t'
| `-ElaboratedType 0x84c6a0 'struct max_align_t' sugar
|   `-RecordType 0x84c450 'max_align_t'
|     `-Record 0x84c3c8 ''
|-FunctionDecl 0x86a0b8 </usr/include/errno.h:37:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:233:56> /usr/include/errno.h:37:13 __errno_location 'int *(void)' extern
| |-NoThrowAttr 0x86a158 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0x86a1b0 <line:233:46>
|-TypedefDecl 0x86a1f0 <main/securec.h:66:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x701ac0 'int'
|-FunctionDecl 0x86a568 <line:112:21, line:131:81> col:25 memset_s 'errno_t (void *, size_t, int, size_t)' extern
| |-ParmVarDecl 0x86a2b8 <col:34, col:40> col:40 dest 'void *'
| |-ParmVarDecl 0x86a330 <col:46, col:53> col:53 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x86a3b0 <col:62, col:66> col:66 c 'int'
| |-ParmVarDecl 0x86a428 <col:69, col:76> col:76 count 'size_t':'unsigned long'
| `-FullComment 0x80f130 <line:124:6, line:129:63>
|   |-ParagraphComment 0x80ed20 <line:124:6, line:125:6>
|   | |-TextComment 0x80ec50 <line:124:6> Text=" "
|   | |-InlineCommandComment 0x80eca0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x80ecc0 <col:19, col:168> Text=":The memset_s function copies the value of c (converted to an unsigned char) into each of the first count characters of the object pointed to by dest."
|   | `-TextComment 0x80ece0 <line:125:6> Text=" "
|   |-ParamCommandComment 0x80ed40 <col:7, line:126:6> [in] implicitly Param="dest" ParamIndex=0
|   | `-ParagraphComment 0x80edf0 <line:125:18, line:126:6>
|   |   |-TextComment 0x80eda0 <line:125:18, col:40> Text=" - destination  address"
|   |   `-TextComment 0x80edc0 <line:126:6> Text=" "
|   |-ParamCommandComment 0x80ee10 <col:7, line:127:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x80eec0 <line:126:21, line:127:6>
|   |   |-TextComment 0x80ee70 <line:126:21, col:62> Text=" -The maximum length of destination buffer"
|   |   `-TextComment 0x80ee90 <line:127:6> Text=" "
|   |-ParamCommandComment 0x80eee0 <col:7, line:128:6> [in] implicitly Param="c" ParamIndex=2
|   | `-ParagraphComment 0x80ef90 <line:127:15, line:128:6>
|   |   |-TextComment 0x80ef40 <line:127:15, col:39> Text=" - the value to be copied"
|   |   `-TextComment 0x80ef60 <line:128:6> Text=" "
|   |-ParamCommandComment 0x80efb0 <col:7, line:129:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0x80f060 <line:128:19, line:129:6>
|   |   |-TextComment 0x80f010 <line:128:19, col:58> Text=" -copies first count characters of  dest"
|   |   `-TextComment 0x80f030 <line:129:6> Text=" "
|   `-BlockCommandComment 0x80f080 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x80f0e0 <col:14, col:63>
|       `-TextComment 0x80f0b0 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x86a918 <line:112:21, line:145:98> col:25 wmemcpy_s 'errno_t (wchar_t *, size_t, const wchar_t *, size_t)' extern
| |-ParmVarDecl 0x86a668 <col:35, col:44> col:44 dest 'wchar_t *'
| |-ParmVarDecl 0x86a6e0 <col:50, col:57> col:57 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x86a758 <col:66, col:81> col:81 src 'const wchar_t *'
| `-ParmVarDecl 0x86a7d0 <col:86, col:93> col:93 count 'size_t':'unsigned long'
|-FunctionDecl 0x86acd8 <line:112:21, line:155:92> col:25 memmove_s 'errno_t (void *, size_t, const void *, size_t)' extern
| |-ParmVarDecl 0x86aa20 <col:35, col:41> col:41 dest 'void *'
| |-ParmVarDecl 0x86aa98 <col:47, col:54> col:54 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x86ab18 <col:63, col:75> col:75 src 'const void *'
| |-ParmVarDecl 0x86ab90 <col:80, col:87> col:87 count 'size_t':'unsigned long'
| `-FullComment 0x80f650 <line:148:6, line:153:63>
|   |-ParagraphComment 0x80f240 <line:148:6, line:149:6>
|   | |-TextComment 0x80f1a0 <line:148:6> Text=" "
|   | |-InlineCommandComment 0x80f1c0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x80f1e0 <col:19, col:131> Text=":The memmove_s function copies n characters from the object pointed to by src into the object pointed to by dest."
|   | `-TextComment 0x80f200 <line:149:6> Text=" "
|   |-ParamCommandComment 0x80f260 <col:7, line:150:6> [in] implicitly Param="dest" ParamIndex=0
|   | `-ParagraphComment 0x80f310 <line:149:18, line:150:6>
|   |   |-TextComment 0x80f2c0 <line:149:18, col:40> Text=" - destination  address"
|   |   `-TextComment 0x80f2e0 <line:150:6> Text=" "
|   |-ParamCommandComment 0x80f330 <col:7, line:151:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x80f3e0 <line:150:21, line:151:6>
|   |   |-TextComment 0x80f390 <line:150:21, col:62> Text=" -The maximum length of destination buffer"
|   |   `-TextComment 0x80f3b0 <line:151:6> Text=" "
|   |-ParamCommandComment 0x80f400 <col:7, line:152:6> [in] implicitly Param="src" ParamIndex=2
|   | `-ParagraphComment 0x80f4b0 <line:151:17, line:152:6>
|   |   |-TextComment 0x80f460 <line:151:17, col:33> Text=" -source  address"
|   |   `-TextComment 0x80f480 <line:152:6> Text=" "
|   |-ParamCommandComment 0x80f4d0 <col:7, line:153:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0x80f580 <line:152:19, line:153:6>
|   |   |-TextComment 0x80f530 <line:152:19, col:62> Text=" -copies count wide characters from the  src"
|   |   `-TextComment 0x80f550 <line:153:6> Text=" "
|   `-BlockCommandComment 0x80f5a0 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x80f600 <col:14, col:63>
|       `-TextComment 0x80f5d0 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x86afe8 <line:112:21, line:165:99> col:25 wmemmove_s 'errno_t (wchar_t *, size_t, const wchar_t *, size_t)' extern
| |-ParmVarDecl 0x86add8 <col:36, col:45> col:45 dest 'wchar_t *'
| |-ParmVarDecl 0x86ae50 <col:51, col:58> col:58 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x86aec8 <col:67, col:82> col:82 src 'const wchar_t *'
| |-ParmVarDecl 0x86af40 <col:87, col:94> col:94 count 'size_t':'unsigned long'
| `-FullComment 0x80fb70 <line:158:6, line:163:63>
|   |-ParagraphComment 0x80f760 <line:158:6, line:159:6>
|   | |-TextComment 0x80f6c0 <line:158:6> Text=" "
|   | |-InlineCommandComment 0x80f6e0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x80f700 <col:19, col:148> Text=":The wmemmove_s function copies n successive wide characters from the object pointed to by src into the object pointed to by dest."
|   | `-TextComment 0x80f720 <line:159:6> Text=" "
|   |-ParamCommandComment 0x80f780 <col:7, line:160:6> [in] implicitly Param="dest" ParamIndex=0
|   | `-ParagraphComment 0x80f830 <line:159:18, line:160:6>
|   |   |-TextComment 0x80f7e0 <line:159:18, col:40> Text=" - destination  address"
|   |   `-TextComment 0x80f800 <line:160:6> Text=" "
|   |-ParamCommandComment 0x80f850 <col:7, line:161:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x80f900 <line:160:21, line:161:6>
|   |   |-TextComment 0x80f8b0 <line:160:21, col:62> Text=" -The maximum length of destination buffer"
|   |   `-TextComment 0x80f8d0 <line:161:6> Text=" "
|   |-ParamCommandComment 0x80f920 <col:7, line:162:6> [in] implicitly Param="src" ParamIndex=2
|   | `-ParagraphComment 0x80f9d0 <line:161:17, line:162:6>
|   |   |-TextComment 0x80f980 <line:161:17, col:33> Text=" -source  address"
|   |   `-TextComment 0x80f9a0 <line:162:6> Text=" "
|   |-ParamCommandComment 0x80f9f0 <col:7, line:163:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0x80faa0 <line:162:19, line:163:6>
|   |   |-TextComment 0x80fa50 <line:162:19, col:62> Text=" -copies count wide characters from the  src"
|   |   `-TextComment 0x80fa70 <line:163:6> Text=" "
|   `-BlockCommandComment 0x80fac0 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x80fb20 <col:14, col:63>
|       `-TextComment 0x80faf0 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x86c318 <line:112:21, line:174:89> col:25 wcscpy_s 'errno_t (wchar_t *, size_t, const wchar_t *)' extern
| |-ParmVarDecl 0x86c108 <col:34, col:43> col:43 strDest 'wchar_t *'
| |-ParmVarDecl 0x86c180 <col:52, col:59> col:59 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x86c1f8 <col:68, col:83> col:83 strSrc 'const wchar_t *'
| `-FullComment 0x80ffc0 <line:168:6, line:172:63>
|   |-ParagraphComment 0x80fc80 <line:168:6, line:169:6>
|   | |-TextComment 0x80fbe0 <line:168:6> Text=" "
|   | |-InlineCommandComment 0x80fc00 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x80fc20 <col:19, col:168> Text=":The wcscpy_s function copies the wide string pointed to by strSrc (including theterminating null wide character) into the array pointed to by strDest"
|   | `-TextComment 0x80fc40 <line:169:6> Text=" "
|   |-ParamCommandComment 0x80fca0 <col:7, line:170:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x80fd50 <line:169:21, line:170:6>
|   |   |-TextComment 0x80fd00 <line:169:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0x80fd20 <line:170:6> Text=" "
|   |-ParamCommandComment 0x80fd70 <col:7, line:171:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x80fe20 <line:170:21, line:171:6>
|   |   |-TextComment 0x80fdd0 <line:170:21, col:62> Text=" -The maximum length of destination buffer"
|   |   `-TextComment 0x80fdf0 <line:171:6> Text=" "
|   |-ParamCommandComment 0x80fe40 <col:7, line:172:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0x80fef0 <line:171:20, line:172:6>
|   |   |-TextComment 0x80fea0 <line:171:20, col:36> Text=" -source  address"
|   |   `-TextComment 0x80fec0 <line:172:6> Text=" "
|   `-BlockCommandComment 0x80ff10 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x80ff70 <col:14, col:63>
|       `-TextComment 0x80ff40 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x86c618 <line:112:21, line:185:104> col:25 wcsncpy_s 'errno_t (wchar_t *, size_t, const wchar_t *, size_t)' extern
| |-ParmVarDecl 0x86c408 <col:35, col:44> col:44 strDest 'wchar_t *'
| |-ParmVarDecl 0x86c480 <col:53, col:60> col:60 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x86c4f8 <col:69, col:84> col:84 strSrc 'const wchar_t *'
| |-ParmVarDecl 0x86c570 <col:92, col:99> col:99 count 'size_t':'unsigned long'
| `-FullComment 0x814560 <line:177:6, line:183:63>
|   |-ParagraphComment 0x810100 <line:177:6, line:179:6>
|   | |-TextComment 0x810030 <line:177:6> Text=" "
|   | |-InlineCommandComment 0x810050 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x810070 <col:19, col:143> Text=":The wcsncpy_s function copies not more than n successive wide characters (not including the terminating null wide character)"
|   | |-TextComment 0x810090 <line:178:6, col:98> Text="                       from the array pointed to by strSrc to the array pointed to by strDest"
|   | `-TextComment 0x8100b0 <line:179:6> Text=" "
|   |-ParamCommandComment 0x814170 <col:7, line:180:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x814220 <line:179:21, line:180:6>
|   |   |-TextComment 0x8141d0 <line:179:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0x8141f0 <line:180:6> Text=" "
|   |-ParamCommandComment 0x814240 <col:7, line:181:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x8142f0 <line:180:21, line:181:6>
|   |   |-TextComment 0x8142a0 <line:180:21, col:104> Text=" -The maximum length of destination buffer(including the terminating wide character)"
|   |   `-TextComment 0x8142c0 <line:181:6> Text=" "
|   |-ParamCommandComment 0x814310 <col:7, line:182:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0x8143c0 <line:181:20, line:182:6>
|   |   |-TextComment 0x814370 <line:181:20, col:36> Text=" -source  address"
|   |   `-TextComment 0x814390 <line:182:6> Text=" "
|   |-ParamCommandComment 0x8143e0 <col:7, line:183:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0x814490 <line:182:19, line:183:6>
|   |   |-TextComment 0x814440 <line:182:19, col:62> Text=" -copies count wide characters from the  src"
|   |   `-TextComment 0x814460 <line:183:6> Text=" "
|   `-BlockCommandComment 0x8144b0 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x814510 <col:14, col:63>
|       `-TextComment 0x8144e0 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x86c8a8 <line:112:21, line:195:89> col:25 wcscat_s 'errno_t (wchar_t *, size_t, const wchar_t *)' extern
| |-ParmVarDecl 0x86c718 <col:34, col:43> col:43 strDest 'wchar_t *'
| |-ParmVarDecl 0x86c790 <col:52, col:59> col:59 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x86c808 <col:68, col:83> col:83 strSrc 'const wchar_t *'
| `-FullComment 0x8149e0 <line:188:6, line:193:63>
|   |-ParagraphComment 0x8146a0 <line:188:6, line:190:6>
|   | |-TextComment 0x8145d0 <line:188:6> Text=" "
|   | |-InlineCommandComment 0x8145f0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x814610 <col:19, col:143> Text=":The wcscat_s function appends a copy of the wide string pointed to by strSrc (including the terminating null wide character)"
|   | |-TextComment 0x814630 <line:189:6, col:77> Text="                     to the end of the wide string pointed to by strDest"
|   | `-TextComment 0x814650 <line:190:6> Text=" "
|   |-ParamCommandComment 0x8146c0 <col:7, line:191:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x814770 <line:190:21, line:191:6>
|   |   |-TextComment 0x814720 <line:190:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0x814740 <line:191:6> Text=" "
|   |-ParamCommandComment 0x814790 <col:7, line:192:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x814840 <line:191:21, line:192:6>
|   |   |-TextComment 0x8147f0 <line:191:21, col:104> Text=" -The maximum length of destination buffer(including the terminating wide character)"
|   |   `-TextComment 0x814810 <line:192:6> Text=" "
|   |-ParamCommandComment 0x814860 <col:7, line:193:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0x814910 <line:192:20, line:193:6>
|   |   |-TextComment 0x8148c0 <line:192:20, col:36> Text=" -source  address"
|   |   `-TextComment 0x8148e0 <line:193:6> Text=" "
|   `-BlockCommandComment 0x814930 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x814990 <col:14, col:63>
|       `-TextComment 0x814960 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x86cba8 <line:112:21, line:206:104> col:25 wcsncat_s 'errno_t (wchar_t *, size_t, const wchar_t *, size_t)' extern
| |-ParmVarDecl 0x86c998 <col:35, col:44> col:44 strDest 'wchar_t *'
| |-ParmVarDecl 0x86ca10 <col:53, col:60> col:60 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x86ca88 <col:69, col:84> col:84 strSrc 'const wchar_t *'
| |-ParmVarDecl 0x86cb00 <col:92, col:99> col:99 count 'size_t':'unsigned long'
| `-FullComment 0x814f30 <line:198:6, line:204:63>
|   |-ParagraphComment 0x814b20 <line:198:6, line:200:6>
|   | |-TextComment 0x814a50 <line:198:6> Text=" "
|   | |-InlineCommandComment 0x814a70 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x814a90 <col:19, col:144> Text=":The wcsncat_s function appends not more than n successive wide characters (not including the terminating null wide character)"
|   | |-TextComment 0x814ab0 <line:199:6, col:116> Text="                       from the array pointed to by strSrc to the end of the wide string pointed to by strDest."
|   | `-TextComment 0x814ad0 <line:200:6> Text=" "
|   |-ParamCommandComment 0x814b40 <col:7, line:201:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x814bf0 <line:200:21, line:201:6>
|   |   |-TextComment 0x814ba0 <line:200:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0x814bc0 <line:201:6> Text=" "
|   |-ParamCommandComment 0x814c10 <col:7, line:202:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x814cc0 <line:201:21, line:202:6>
|   |   |-TextComment 0x814c70 <line:201:21, col:104> Text=" -The maximum length of destination buffer(including the terminating wide character)"
|   |   `-TextComment 0x814c90 <line:202:6> Text=" "
|   |-ParamCommandComment 0x814ce0 <col:7, line:203:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0x814d90 <line:202:20, line:203:6>
|   |   |-TextComment 0x814d40 <line:202:20, col:36> Text=" -source  address"
|   |   `-TextComment 0x814d60 <line:203:6> Text=" "
|   |-ParamCommandComment 0x814db0 <col:7, line:204:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0x814e60 <line:203:19, line:204:6>
|   |   |-TextComment 0x814e10 <line:203:19, col:62> Text=" -copies count wide characters from the  src"
|   |   `-TextComment 0x814e30 <line:204:6> Text=" "
|   `-BlockCommandComment 0x814e80 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x814ee0 <col:14, col:63>
|       `-TextComment 0x814eb0 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x86ce58 <line:112:21, line:216:86> col:23 strtok_s 'char *(char *, const char *, char **)' extern
| |-ParmVarDecl 0x86ccb0 <col:32, col:38> col:38 strToken 'char *'
| |-ParmVarDecl 0x86cd30 <col:48, col:60> col:60 strDelimit 'const char *'
| |-ParmVarDecl 0x86cdb0 <col:72, col:79> col:79 context 'char **'
| `-FullComment 0x8153b0 <line:209:6, line:214:149>
|   |-ParagraphComment 0x815070 <line:209:6, line:211:6>
|   | |-TextComment 0x814fa0 <line:209:6> Text=" "
|   | |-InlineCommandComment 0x814fc0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x814fe0 <col:19, col:172> Text=": The  strtok_s  function parses a string into a sequence of tokens,On the first call to strtok_s the string to be parsed should be specified in strToken."
|   | |-TextComment 0x815000 <line:210:6, col:110> Text="                       In each subsequent call that should parse the same string, strToken should be NULL"
|   | `-TextComment 0x815020 <line:211:6> Text=" "
|   |-ParamCommandComment 0x815090 <col:7, line:212:6> [in] implicitly Param="strToken" ParamIndex=0
|   | `-ParagraphComment 0x815140 <line:211:22, line:212:6>
|   |   |-TextComment 0x8150f0 <line:211:22, col:50> Text=" - the string to be delimited"
|   |   `-TextComment 0x815110 <line:212:6> Text=" "
|   |-ParamCommandComment 0x815160 <col:7, line:213:6> [in] implicitly Param="strDelimit" ParamIndex=1
|   | `-ParagraphComment 0x815210 <line:212:24, line:213:6>
|   |   |-TextComment 0x8151c0 <line:212:24, col:99> Text=" -specifies a set of characters that delimit the tokens in the parsed string"
|   |   `-TextComment 0x8151e0 <line:213:6> Text=" "
|   |-ParamCommandComment 0x815230 <col:7, line:214:6> [in] implicitly Param="context" ParamIndex=2
|   | `-ParagraphComment 0x8152e0 <line:213:21, line:214:6>
|   |   |-TextComment 0x815290 <line:213:21, col:100> Text=" -is a pointer to a char * variable that is used internally by strtok_s function"
|   |   `-TextComment 0x8152b0 <line:214:6> Text=" "
|   `-BlockCommandComment 0x815300 <col:7, col:149> Name="return"
|     `-ParagraphComment 0x815360 <col:14, col:149>
|       `-TextComment 0x815330 <col:14, col:149> Text=":returns a pointer to the first character of a token, or a null pointer if there is no token or there is a runtime-constraint violation."
|-FunctionDecl 0x86d1e8 <line:112:21, line:225:98> col:26 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)' extern
| |-ParmVarDecl 0x86cf48 <col:35, col:44> col:44 strToken 'wchar_t *'
| |-ParmVarDecl 0x86cfc0 <col:54, col:69> col:69 strDelimit 'const wchar_t *'
| |-ParmVarDecl 0x86d0c0 <col:81, col:91> col:91 context 'wchar_t **'
| `-FullComment 0x815800 <line:219:6, line:223:149>
|   |-ParagraphComment 0x8154c0 <line:219:6, line:220:6>
|   | |-TextComment 0x815420 <line:219:6> Text=" "
|   | |-InlineCommandComment 0x815440 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x815460 <col:19, col:106> Text=": The  wcstok_s  function  is  the  wide-character  equivalent  of the strtok_s function"
|   | `-TextComment 0x815480 <line:220:6> Text=" "
|   |-ParamCommandComment 0x8154e0 <col:7, line:221:6> [in] implicitly Param="strToken" ParamIndex=0
|   | `-ParagraphComment 0x815590 <line:220:22, line:221:6>
|   |   |-TextComment 0x815540 <line:220:22, col:50> Text=" - the string to be delimited"
|   |   `-TextComment 0x815560 <line:221:6> Text=" "
|   |-ParamCommandComment 0x8155b0 <col:7, line:222:6> [in] implicitly Param="strDelimit" ParamIndex=1
|   | `-ParagraphComment 0x815660 <line:221:24, line:222:6>
|   |   |-TextComment 0x815610 <line:221:24, col:99> Text=" -specifies a set of characters that delimit the tokens in the parsed string"
|   |   `-TextComment 0x815630 <line:222:6> Text=" "
|   |-ParamCommandComment 0x815680 <col:7, line:223:6> [in] implicitly Param="context" ParamIndex=2
|   | `-ParagraphComment 0x815730 <line:222:21, line:223:6>
|   |   |-TextComment 0x8156e0 <line:222:21, col:100> Text=" -is a pointer to a char * variable that is used internally by strtok_s function"
|   |   `-TextComment 0x815700 <line:223:6> Text=" "
|   `-BlockCommandComment 0x815750 <col:7, col:149> Name="return"
|     `-ParagraphComment 0x8157b0 <col:14, col:149>
|       `-TextComment 0x815780 <col:14, col:149> Text=":returns a pointer to the first character of a token, or a null pointer if there is no token or there is a runtime-constraint violation."
|-FunctionDecl 0x86d4c8 <line:112:21, line:234:85> col:21 sprintf_s 'int (char *, size_t, const char *, ...)' extern
| |-ParmVarDecl 0x86d2e0 <col:31, col:37> col:37 strDest 'char *'
| |-ParmVarDecl 0x86d358 <col:46, col:53> col:53 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x86d3d8 <col:62, col:74> col:74 format 'const char *'
| `-FullComment 0x815cf0 <line:228:6, line:232:135>
|   |-ParagraphComment 0x815910 <line:228:6, line:229:6>
|   | |-TextComment 0x815870 <line:228:6> Text=" "
|   | |-InlineCommandComment 0x815890 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x8158b0 <col:19, col:160> Text=": The sprintf_s function is equivalent to the sprintf function except for the parameter destMax and the explicit runtime-constraints violation"
|   | `-TextComment 0x8158d0 <line:229:6> Text=" "
|   |-ParamCommandComment 0x815930 <col:7, line:230:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x8159e0 <line:229:21, line:230:6>
|   |   |-TextComment 0x815990 <line:229:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0x8159b0 <line:230:6> Text=" "
|   |-ParamCommandComment 0x815a00 <col:7, line:231:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x815b00 <line:230:21, line:231:6>
|   |   |-TextComment 0x815a60 <line:230:21, col:102> Text=" - The maximum length of destination buffer(including the terminating null byte ('"
|   |   |-TextComment 0x815a80 <col:103> Text="\"
|   |   |-TextComment 0x815aa0 <col:104, col:107> Text="0'))"
|   |   `-TextComment 0x815ac0 <line:231:6> Text=" "
|   |-ParamCommandComment 0x815b20 <col:7, line:232:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0x815bd0 <line:231:20, line:232:6>
|   |   |-TextComment 0x815b80 <line:231:20, col:35> Text=" - format string"
|   |   `-TextComment 0x815ba0 <line:232:6> Text=" "
|   `-BlockCommandComment 0x815bf0 <col:7, col:135> Name="return"
|     `-ParagraphComment 0x815ca0 <col:14, col:135>
|       |-TextComment 0x815c20 <col:14, col:97> Text=":success the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0x815c40 <col:98> Text="\"
|       `-TextComment 0x815c60 <col:99, col:135> Text="0')), If an error occurred return -1."
|-FunctionDecl 0x86d7e8 <line:112:21, line:243:92> col:21 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...)' extern
| |-ParmVarDecl 0x86d5b8 <col:32, col:41> col:41 strDest 'wchar_t *'
| |-ParmVarDecl 0x86d630 <col:50, col:57> col:57 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x86d6a8 <col:66, col:81> col:81 format 'const wchar_t *'
| `-FullComment 0x816140 <line:237:6, line:241:137>
|   |-ParagraphComment 0x815e00 <line:237:6, line:238:6>
|   | |-TextComment 0x815d60 <line:237:6> Text=" "
|   | |-InlineCommandComment 0x815d80 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x815da0 <col:19, col:109> Text=": The  swprintf_s  function  is  the  wide-character  equivalent  of the sprintf_s function"
|   | `-TextComment 0x815dc0 <line:238:6> Text=" "
|   |-ParamCommandComment 0x815e20 <col:7, line:239:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x815ed0 <line:238:21, line:239:6>
|   |   |-TextComment 0x815e80 <line:238:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0x815ea0 <line:239:6> Text=" "
|   |-ParamCommandComment 0x815ef0 <col:7, line:240:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x815fa0 <line:239:21, line:240:6>
|   |   |-TextComment 0x815f50 <line:239:21, col:96> Text=" - The maximum length of destination buffer(including the terminating null )"
|   |   `-TextComment 0x815f70 <line:240:6> Text=" "
|   |-ParamCommandComment 0x815fc0 <col:7, line:241:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0x816070 <line:240:20, line:241:6>
|   |   |-TextComment 0x816020 <line:240:20, col:35> Text=" - format string"
|   |   `-TextComment 0x816040 <line:241:6> Text=" "
|   `-BlockCommandComment 0x816090 <col:7, col:137> Name="return"
|     `-ParagraphComment 0x8160f0 <col:14, col:137>
|       `-TextComment 0x8160c0 <col:14, col:137> Text=":success the number of characters printed(not including the terminating null wide characte), If an error occurred return -1."
|-FunctionDecl 0x86dba0 <line:112:21, line:254:47> line:253:21 vsprintf_s 'int (char *, size_t, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x86d8e0 <col:32, col:38> col:38 strDest 'char *'
| |-ParmVarDecl 0x86d958 <col:47, col:54> col:54 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x86d9d8 <col:63, col:75> col:75 format 'const char *'
| |-ParmVarDecl 0x86daa0 <line:254:32, col:40> col:40 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x8166c0 <line:246:6, line:251:134>
|   |-ParagraphComment 0x816260 <line:246:6, line:247:6>
|   | |-TextComment 0x8161c0 <line:246:6> Text=" "
|   | |-InlineCommandComment 0x8161e0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x816200 <col:19, col:162> Text=": The vsprintf_s function is equivalent to the vsprintf function except for the parameter destMax and the explicit runtime-constraints violation"
|   | `-TextComment 0x816220 <line:247:6> Text=" "
|   |-ParamCommandComment 0x816280 <col:7, line:248:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x816330 <line:247:21, line:248:6>
|   |   |-TextComment 0x8162e0 <line:247:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0x816300 <line:248:6> Text=" "
|   |-ParamCommandComment 0x816350 <col:7, line:249:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x816400 <line:248:21, line:249:6>
|   |   |-TextComment 0x8163b0 <line:248:21, col:109> Text=" - The maximum length of destination buffer(including the terminating null wide characte)"
|   |   `-TextComment 0x8163d0 <line:249:6> Text=" "
|   |-ParamCommandComment 0x816420 <col:7, line:250:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0x8164d0 <line:249:20, line:250:6>
|   |   |-TextComment 0x816480 <line:249:20, col:35> Text=" - format string"
|   |   `-TextComment 0x8164a0 <line:250:6> Text=" "
|   |-ParamCommandComment 0x8164f0 <col:7, line:251:6> [in] implicitly Param="arglist" ParamIndex=3
|   | `-ParagraphComment 0x8165a0 <line:250:21, line:251:6>
|   |   |-TextComment 0x816550 <line:250:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x816570 <line:251:6> Text=" "
|   `-BlockCommandComment 0x8165c0 <col:7, col:134> Name="return"
|     `-ParagraphComment 0x816670 <col:14, col:134>
|       |-TextComment 0x8165f0 <col:14, col:96> Text=":return the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0x816610 <col:97> Text="\"
|       `-TextComment 0x816630 <col:98, col:134> Text="0')), If an error occurred return -1."
|-FunctionDecl 0x86df50 <line:112:21, line:264:105> col:21 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x86dc98 <col:33, col:42> col:42 strDest 'wchar_t *'
| |-ParmVarDecl 0x86dd10 <col:51, col:58> col:58 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x86dd88 <col:67, col:82> col:82 format 'const wchar_t *'
| |-ParmVarDecl 0x86de00 <col:90, col:98> col:98 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x816be0 <line:257:6, line:262:136>
|   |-ParagraphComment 0x8167d0 <line:257:6, line:258:6>
|   | |-TextComment 0x816730 <line:257:6> Text=" "
|   | |-InlineCommandComment 0x816750 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x816770 <col:19, col:111> Text=": The  vswprintf_s  function  is  the  wide-character  equivalent  of the vsprintf_s function"
|   | `-TextComment 0x816790 <line:258:6> Text=" "
|   |-ParamCommandComment 0x8167f0 <col:7, line:259:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x8168a0 <line:258:21, line:259:6>
|   |   |-TextComment 0x816850 <line:258:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0x816870 <line:259:6> Text=" "
|   |-ParamCommandComment 0x8168c0 <col:7, line:260:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x816970 <line:259:21, line:260:6>
|   |   |-TextComment 0x816920 <line:259:21, col:96> Text=" - The maximum length of destination buffer(including the terminating null )"
|   |   `-TextComment 0x816940 <line:260:6> Text=" "
|   |-ParamCommandComment 0x816990 <col:7, line:261:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0x816a40 <line:260:20, line:261:6>
|   |   |-TextComment 0x8169f0 <line:260:20, col:35> Text=" - format string"
|   |   `-TextComment 0x816a10 <line:261:6> Text=" "
|   |-ParamCommandComment 0x816a60 <col:7, line:262:6> [in] implicitly Param="arglist" ParamIndex=3
|   | `-ParagraphComment 0x816b10 <line:261:21, line:262:6>
|   |   |-TextComment 0x816ac0 <line:261:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x816ae0 <line:262:6> Text=" "
|   `-BlockCommandComment 0x816b30 <col:7, col:136> Name="return"
|     `-ParagraphComment 0x816b90 <col:14, col:136>
|       `-TextComment 0x816b60 <col:14, col:136> Text=":return the number of characters printed(not including the terminating null wide characte), If an error occurred return -1."
|-FunctionDecl 0x86e3b0 <line:112:21, line:276:48> line:275:21 vsnprintf_s 'int (char *, size_t, size_t, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x86e050 <col:33, col:39> col:39 strDest 'char *'
| |-ParmVarDecl 0x86e0e0 <col:48, col:55> col:55 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x86e158 <col:64, col:71> col:71 count 'size_t':'unsigned long'
| |-ParmVarDecl 0x86e1d8 <col:78, col:90> col:90 format 'const char *'
| |-ParmVarDecl 0x86e250 <line:276:33, col:41> col:41 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x8172d0 <line:267:6, line:273:194>
|   |-ParagraphComment 0x816cf0 <line:267:6, line:268:6>
|   | |-TextComment 0x816c50 <line:267:6> Text=" "
|   | |-InlineCommandComment 0x816c70 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x816c90 <col:19, col:170> Text=": The vsnprintf_s function is equivalent to the vsnprintf function except for the parameter destMax/count and the explicit runtime-constraints violation"
|   | `-TextComment 0x816cb0 <line:268:6> Text=" "
|   |-ParamCommandComment 0x816d10 <col:7, line:269:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x816dc0 <line:268:21, line:269:6>
|   |   |-TextComment 0x816d70 <line:268:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0x816d90 <line:269:6> Text=" "
|   |-ParamCommandComment 0x816de0 <col:7, line:270:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x816ee0 <line:269:21, line:270:6>
|   |   |-TextComment 0x816e40 <line:269:21, col:103> Text=" - The maximum length of destination buffer(including the terminating null  byte ('"
|   |   |-TextComment 0x816e60 <col:104> Text="\"
|   |   |-TextComment 0x816e80 <col:105, col:108> Text="0'))"
|   |   `-TextComment 0x816ea0 <line:270:6> Text=" "
|   |-ParamCommandComment 0x816f00 <col:7, line:271:6> [in] implicitly Param="count" ParamIndex=2
|   | `-ParagraphComment 0x817000 <line:270:19, line:271:6>
|   |   |-TextComment 0x816f60 <line:270:19, col:110> Text=" - do not write more than count bytes to strDest(not including the terminating null  byte ('"
|   |   |-TextComment 0x816f80 <col:111> Text="\"
|   |   |-TextComment 0x816fa0 <col:112, col:115> Text="0'))"
|   |   `-TextComment 0x816fc0 <line:271:6> Text=" "
|   |-ParamCommandComment 0x817020 <col:7, line:272:6> [in] implicitly Param="format" ParamIndex=3
|   | `-ParagraphComment 0x8170d0 <line:271:20, line:272:6>
|   |   |-TextComment 0x817080 <line:271:20, col:35> Text=" - format string"
|   |   `-TextComment 0x8170a0 <line:272:6> Text=" "
|   |-ParamCommandComment 0x8170f0 <col:7, line:273:6> [in] implicitly Param="arglist" ParamIndex=4
|   | `-ParagraphComment 0x8171a0 <line:272:21, line:273:6>
|   |   |-TextComment 0x817150 <line:272:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x817170 <line:273:6> Text=" "
|   `-BlockCommandComment 0x8171c0 <col:7, col:194> Name="return"
|     `-ParagraphComment 0x817270 <col:14, col:194>
|       |-TextComment 0x8171f0 <col:14, col:96> Text=":return the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0x817210 <col:97> Text="\"
|       `-TextComment 0x817230 <col:98, col:194> Text="0')), If an error occurred return -1.Pay special attention to returning -1 when truncation occurs"
|-FunctionDecl 0x86e788 <line:112:21, line:287:35> line:286:21 snprintf_s 'int (char *, size_t, size_t, const char *, ...)' extern
| |-ParmVarDecl 0x86e4c0 <col:32, col:38> col:38 strDest 'char *'
| |-ParmVarDecl 0x86e538 <col:47, col:54> col:54 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x86e5b0 <col:63, col:70> col:70 count 'size_t':'unsigned long'
| |-ParmVarDecl 0x86e630 <col:77, col:89> col:89 format 'const char *'
| `-FullComment 0x8178e0 <line:279:6, line:284:194>
|   |-ParagraphComment 0x8173e0 <line:279:6, line:280:6>
|   | |-TextComment 0x817340 <line:279:6> Text=" "
|   | |-InlineCommandComment 0x817360 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x817380 <col:19, col:168> Text=": The snprintf_s function is equivalent to the snprintf function except for the parameter destMax/count and the explicit runtime-constraints violation"
|   | `-TextComment 0x8173a0 <line:280:6> Text=" "
|   |-ParamCommandComment 0x817400 <col:7, line:281:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x8174b0 <line:280:21, line:281:6>
|   |   |-TextComment 0x817460 <line:280:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0x817480 <line:281:6> Text=" "
|   |-ParamCommandComment 0x8174d0 <col:7, line:282:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x8175d0 <line:281:21, line:282:6>
|   |   |-TextComment 0x817530 <line:281:21, col:103> Text=" - The maximum length of destination buffer(including the terminating null  byte ('"
|   |   |-TextComment 0x817550 <col:104> Text="\"
|   |   |-TextComment 0x817570 <col:105, col:108> Text="0'))"
|   |   `-TextComment 0x817590 <line:282:6> Text=" "
|   |-ParamCommandComment 0x8175f0 <col:7, line:283:6> [in] implicitly Param="count" ParamIndex=2
|   | `-ParagraphComment 0x8176f0 <line:282:19, line:283:6>
|   |   |-TextComment 0x817650 <line:282:19, col:110> Text=" - do not write more than count bytes to strDest(not including the terminating null  byte ('"
|   |   |-TextComment 0x817670 <col:111> Text="\"
|   |   |-TextComment 0x817690 <col:112, col:115> Text="0'))"
|   |   `-TextComment 0x8176b0 <line:283:6> Text=" "
|   |-ParamCommandComment 0x817710 <col:7, line:284:6> [in] implicitly Param="format" ParamIndex=3
|   | `-ParagraphComment 0x8177c0 <line:283:20, line:284:6>
|   |   |-TextComment 0x817770 <line:283:20, col:35> Text=" - format string"
|   |   `-TextComment 0x817790 <line:284:6> Text=" "
|   `-BlockCommandComment 0x8177e0 <col:7, col:194> Name="return"
|     `-ParagraphComment 0x817890 <col:14, col:194>
|       |-TextComment 0x817810 <col:14, col:96> Text=":return the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0x817830 <col:97> Text="\"
|       `-TextComment 0x817850 <col:98, col:194> Text="0')), If an error occurred return -1.Pay special attention to returning -1 when truncation occurs"
|-FunctionDecl 0x86eab0 <line:112:21, line:299:51> line:298:21 vsnprintf_truncated_s 'int (char *, size_t, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x86e890 <col:43, col:49> col:49 strDest 'char *'
| |-ParmVarDecl 0x86e908 <col:58, col:65> col:65 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x86e988 <col:74, col:86> col:86 format 'const char *'
| |-ParmVarDecl 0x86ea00 <line:299:36, col:44> col:44 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x817ea0 <line:291:6, line:296:203>
|   |-ParagraphComment 0x8179f0 <line:291:6, line:292:6>
|   | |-TextComment 0x817950 <line:291:6> Text=" "
|   | |-InlineCommandComment 0x817970 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x817990 <col:19, col:141> Text=": The vsnprintf_truncated_s function is equivalent to the vsnprintf_s function except  no count parameter  and return value"
|   | `-TextComment 0x8179b0 <line:292:6> Text=" "
|   |-ParamCommandComment 0x817a10 <col:7, line:293:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x817ac0 <line:292:21, line:293:6>
|   |   |-TextComment 0x817a70 <line:292:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0x817a90 <line:293:6> Text=" "
|   |-ParamCommandComment 0x817ae0 <col:7, line:294:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x817be0 <line:293:21, line:294:6>
|   |   |-TextComment 0x817b40 <line:293:21, col:103> Text=" - The maximum length of destination buffer(including the terminating null  byte ('"
|   |   |-TextComment 0x817b60 <col:104> Text="\"
|   |   |-TextComment 0x817b80 <col:105, col:108> Text="0'))"
|   |   `-TextComment 0x817ba0 <line:294:6> Text=" "
|   |-ParamCommandComment 0x817c00 <col:7, line:295:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0x817cb0 <line:294:20, line:295:6>
|   |   |-TextComment 0x817c60 <line:294:20, col:35> Text=" - format string"
|   |   `-TextComment 0x817c80 <line:295:6> Text=" "
|   |-ParamCommandComment 0x817cd0 <col:7, line:296:6> [in] implicitly Param="arglist" ParamIndex=3
|   | `-ParagraphComment 0x817d80 <line:295:21, line:296:6>
|   |   |-TextComment 0x817d30 <line:295:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x817d50 <line:296:6> Text=" "
|   `-BlockCommandComment 0x817da0 <col:7, col:203> Name="return"
|     `-ParagraphComment 0x817e50 <col:14, col:203>
|       |-TextComment 0x817dd0 <col:14, col:96> Text=":return the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0x817df0 <col:97> Text="\"
|       `-TextComment 0x817e10 <col:98, col:203> Text="0')), If an error occurred return -1.Pay special attention to returning destMax - 1 when truncation occurs"
|-FunctionDecl 0x86ed50 <line:112:21, line:308:96> col:21 snprintf_truncated_s 'int (char *, size_t, const char *, ...)' extern
| |-ParmVarDecl 0x86ebb0 <col:42, col:48> col:48 strDest 'char *'
| |-ParmVarDecl 0x86ec28 <col:57, col:64> col:64 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x86eca8 <col:73, col:85> col:85 format 'const char *'
| `-FullComment 0x916e90 <line:302:6, line:306:203>
|   |-ParagraphComment 0x817fb0 <line:302:6, line:303:6>
|   | |-TextComment 0x817f10 <line:302:6> Text=" "
|   | |-InlineCommandComment 0x817f30 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x817f50 <col:19, col:139> Text=": The snprintf_truncated_s function is equivalent to the snprintf_2 function except  no count parameter  and return value"
|   | `-TextComment 0x817f70 <line:303:6> Text=" "
|   |-ParamCommandComment 0x817fd0 <col:7, line:304:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x818080 <line:303:21, line:304:6>
|   |   |-TextComment 0x818030 <line:303:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0x818050 <line:304:6> Text=" "
|   |-ParamCommandComment 0x8180a0 <col:7, line:305:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x916ca0 <line:304:21, line:305:6>
|   |   |-TextComment 0x818100 <line:304:21, col:103> Text=" - The maximum length of destination buffer(including the terminating null  byte ('"
|   |   |-TextComment 0x818120 <col:104> Text="\"
|   |   |-TextComment 0x818140 <col:105, col:108> Text="0'))"
|   |   `-TextComment 0x818160 <line:305:6> Text=" "
|   |-ParamCommandComment 0x916cc0 <col:7, line:306:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0x916d70 <line:305:20, line:306:6>
|   |   |-TextComment 0x916d20 <line:305:20, col:35> Text=" - format string"
|   |   `-TextComment 0x916d40 <line:306:6> Text=" "
|   `-BlockCommandComment 0x916d90 <col:7, col:203> Name="return"
|     `-ParagraphComment 0x916e40 <col:14, col:203>
|       |-TextComment 0x916dc0 <col:14, col:96> Text=":return the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0x916de0 <col:97> Text="\"
|       `-TextComment 0x916e00 <col:98, col:203> Text="0')), If an error occurred return -1.Pay special attention to returning destMax - 1 when truncation occurs"
|-FunctionDecl 0x86eee8 <line:112:21, line:315:52> col:21 scanf_s 'int (const char *, ...)' extern
| |-ParmVarDecl 0x86ee50 <col:29, col:41> col:41 format 'const char *'
| `-FullComment 0x917130 <line:311:6, line:313:89>
|   |-ParagraphComment 0x916fa0 <line:311:6, line:312:6>
|   | |-TextComment 0x916f00 <line:311:6> Text=" "
|   | |-InlineCommandComment 0x916f20 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x916f40 <col:19, col:133> Text=": The scanf_s function is equivalent to fscanf_s with the argument stdin interposed before the arguments to scanf_s"
|   | `-TextComment 0x916f60 <line:312:6> Text=" "
|   |-ParamCommandComment 0x916fc0 <col:7, line:313:6> [in] implicitly Param="format" ParamIndex=0
|   | `-ParagraphComment 0x917070 <line:312:20, line:313:6>
|   |   |-TextComment 0x917020 <line:312:20, col:35> Text=" - format string"
|   |   `-TextComment 0x917040 <line:313:6> Text=" "
|   `-BlockCommandComment 0x917090 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x9170f0 <col:14, col:89>
|       `-TextComment 0x9170c0 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x86f210 <line:112:21, line:322:56> col:21 wscanf_s 'int (const wchar_t *, ...)' extern
| |-ParmVarDecl 0x86efc8 <col:30, col:45> col:45 format 'const wchar_t *'
| `-FullComment 0x9173d0 <line:318:6, line:320:89>
|   |-ParagraphComment 0x917240 <line:318:6, line:319:6>
|   | |-TextComment 0x9171a0 <line:318:6> Text=" "
|   | |-InlineCommandComment 0x9171c0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x9171e0 <col:19, col:105> Text=": The  wscanf_s  function  is  the  wide-character  equivalent  of the scanf_s function"
|   | `-TextComment 0x917200 <line:319:6> Text=" "
|   |-ParamCommandComment 0x917260 <col:7, line:320:6> [in] implicitly Param="format" ParamIndex=0
|   | `-ParagraphComment 0x917310 <line:319:20, line:320:6>
|   |   |-TextComment 0x9172c0 <line:319:20, col:35> Text=" - format string"
|   |   `-TextComment 0x9172e0 <line:320:6> Text=" "
|   `-BlockCommandComment 0x917330 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x917390 <col:14, col:89>
|       `-TextComment 0x917360 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x86f450 <line:112:21, line:330:65> col:21 vscanf_s 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x86f300 <col:30, col:42> col:42 format 'const char *'
| |-ParmVarDecl 0x86f378 <col:50, col:58> col:58 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x917740 <line:325:6, line:328:89>
|   |-ParagraphComment 0x9174e0 <line:325:6, line:326:6>
|   | |-TextComment 0x917440 <line:325:6> Text=" "
|   | |-InlineCommandComment 0x917460 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x917480 <col:19, col:119> Text=": The vscanf_s function is equivalent to scanf_s, with the variable argument list replaced by arglist"
|   | `-TextComment 0x9174a0 <line:326:6> Text=" "
|   |-ParamCommandComment 0x917500 <col:7, line:327:6> [in] implicitly Param="format" ParamIndex=0
|   | `-ParagraphComment 0x9175b0 <line:326:20, line:327:6>
|   |   |-TextComment 0x917560 <line:326:20, col:35> Text=" - format string"
|   |   `-TextComment 0x917580 <line:327:6> Text=" "
|   |-ParamCommandComment 0x9175d0 <col:7, line:328:6> [in] implicitly Param="arglist" ParamIndex=1
|   | `-ParagraphComment 0x917680 <line:327:21, line:328:6>
|   |   |-TextComment 0x917630 <line:327:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x917650 <line:328:6> Text=" "
|   `-BlockCommandComment 0x9176a0 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x917700 <col:14, col:89>
|       `-TextComment 0x9176d0 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x86f6d0 <line:112:21, line:338:69> col:21 vwscanf_s 'int (const wchar_t *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x86f538 <col:31, col:46> col:46 format 'const wchar_t *'
| |-ParmVarDecl 0x86f5b0 <col:54, col:62> col:62 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x917ab0 <line:333:6, line:336:89>
|   |-ParagraphComment 0x917850 <line:333:6, line:334:6>
|   | |-TextComment 0x9177b0 <line:333:6> Text=" "
|   | |-InlineCommandComment 0x9177d0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x9177f0 <col:19, col:107> Text=": The  vwscanf_s  function  is  the  wide-character  equivalent  of the vscanf_s function"
|   | `-TextComment 0x917810 <line:334:6> Text=" "
|   |-ParamCommandComment 0x917870 <col:7, line:335:6> [in] implicitly Param="format" ParamIndex=0
|   | `-ParagraphComment 0x917920 <line:334:20, line:335:6>
|   |   |-TextComment 0x9178d0 <line:334:20, col:35> Text=" - format string"
|   |   `-TextComment 0x9178f0 <line:335:6> Text=" "
|   |-ParamCommandComment 0x917940 <col:7, line:336:6> [in] implicitly Param="arglist" ParamIndex=1
|   | `-ParagraphComment 0x9179f0 <line:335:21, line:336:6>
|   |   |-TextComment 0x9179a0 <line:335:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x9179c0 <line:336:6> Text=" "
|   `-BlockCommandComment 0x917a10 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x917a70 <col:14, col:89>
|       `-TextComment 0x917a40 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x86f8d8 <line:112:21, line:346:67> col:21 fscanf_s 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x86f7b8 <col:30, col:36> col:36 stream 'FILE *'
| |-ParmVarDecl 0x86f838 <col:44, col:56> col:56 format 'const char *'
| `-FullComment 0x917e20 <line:341:6, line:344:89>
|   |-ParagraphComment 0x917bc0 <line:341:6, line:342:6>
|   | |-TextComment 0x917b20 <line:341:6> Text=" "
|   | |-InlineCommandComment 0x917b40 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x917b60 <col:19, col:195> Text=": The fscanf_s function is equivalent to fscanf except that the c, s, and [ conversion specifiers apply to a pair of arguments (unless assignment suppression is indicated by a*)"
|   | `-TextComment 0x917b80 <line:342:6> Text=" "
|   |-ParamCommandComment 0x917be0 <col:7, line:343:6> [in] implicitly Param="stream" ParamIndex=0
|   | `-ParagraphComment 0x917c90 <line:342:20, line:343:6>
|   |   |-TextComment 0x917c40 <line:342:20, col:39> Text=" - stdio file stream"
|   |   `-TextComment 0x917c60 <line:343:6> Text=" "
|   |-ParamCommandComment 0x917cb0 <col:7, line:344:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0x917d60 <line:343:20, line:344:6>
|   |   |-TextComment 0x917d10 <line:343:20, col:35> Text=" - format string"
|   |   `-TextComment 0x917d30 <line:344:6> Text=" "
|   `-BlockCommandComment 0x917d80 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x917de0 <col:14, col:89>
|       `-TextComment 0x917db0 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x86fb68 <line:112:21, line:354:71> col:21 fwscanf_s 'int (FILE *, const wchar_t *, ...)' extern
| |-ParmVarDecl 0x86f9c8 <col:31, col:37> col:37 stream 'FILE *'
| |-ParmVarDecl 0x86fa40 <col:45, col:60> col:60 format 'const wchar_t *'
| `-FullComment 0x918190 <line:349:6, line:352:89>
|   |-ParagraphComment 0x917f30 <line:349:6, line:350:6>
|   | |-TextComment 0x917e90 <line:349:6> Text=" "
|   | |-InlineCommandComment 0x917eb0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x917ed0 <col:19, col:107> Text=": The  fwscanf_s  function  is  the  wide-character  equivalent  of the fscanf_s function"
|   | `-TextComment 0x917ef0 <line:350:6> Text=" "
|   |-ParamCommandComment 0x917f50 <col:7, line:351:6> [in] implicitly Param="stream" ParamIndex=0
|   | `-ParagraphComment 0x918000 <line:350:20, line:351:6>
|   |   |-TextComment 0x917fb0 <line:350:20, col:39> Text=" - stdio file stream"
|   |   `-TextComment 0x917fd0 <line:351:6> Text=" "
|   |-ParamCommandComment 0x918020 <col:7, line:352:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0x9180d0 <line:351:20, line:352:6>
|   |   |-TextComment 0x918080 <line:351:20, col:35> Text=" - format string"
|   |   `-TextComment 0x9180a0 <line:352:6> Text=" "
|   `-BlockCommandComment 0x9180f0 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x918150 <col:14, col:89>
|       `-TextComment 0x918120 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x86fe40 <line:112:21, line:363:80> col:21 vfscanf_s 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x86fc58 <col:31, col:37> col:37 stream 'FILE *'
| |-ParmVarDecl 0x86fcd8 <col:45, col:57> col:57 format 'const char *'
| |-ParmVarDecl 0x86fd50 <col:65, col:73> col:73 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x9185e0 <line:357:6, line:361:89>
|   |-ParagraphComment 0x9182a0 <line:357:6, line:358:6>
|   | |-TextComment 0x918200 <line:357:6> Text=" "
|   | |-InlineCommandComment 0x918220 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x918240 <col:19, col:121> Text=": The vfscanf_s function is equivalent to fscanf_s, with the variable argument list replaced by arglist"
|   | `-TextComment 0x918260 <line:358:6> Text=" "
|   |-ParamCommandComment 0x9182c0 <col:7, line:359:6> [in] implicitly Param="stream" ParamIndex=0
|   | `-ParagraphComment 0x918370 <line:358:20, line:359:6>
|   |   |-TextComment 0x918320 <line:358:20, col:39> Text=" - stdio file stream"
|   |   `-TextComment 0x918340 <line:359:6> Text=" "
|   |-ParamCommandComment 0x918390 <col:7, line:360:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0x918440 <line:359:20, line:360:6>
|   |   |-TextComment 0x9183f0 <line:359:20, col:35> Text=" - format string"
|   |   `-TextComment 0x918410 <line:360:6> Text=" "
|   |-ParamCommandComment 0x918460 <col:7, line:361:6> [in] implicitly Param="arglist" ParamIndex=2
|   | `-ParagraphComment 0x918510 <line:360:21, line:361:6>
|   |   |-TextComment 0x9184c0 <line:360:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x9184e0 <line:361:6> Text=" "
|   `-BlockCommandComment 0x918530 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x918590 <col:14, col:89>
|       `-TextComment 0x918560 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x870870 <line:112:21, line:372:84> col:21 vfwscanf_s 'int (FILE *, const wchar_t *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x86ff38 <col:32, col:38> col:38 stream 'FILE *'
| |-ParmVarDecl 0x86ffb0 <col:46, col:61> col:61 format 'const wchar_t *'
| |-ParmVarDecl 0x870028 <col:69, col:77> col:77 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x918a30 <line:366:6, line:370:89>
|   |-ParagraphComment 0x9186f0 <line:366:6, line:367:6>
|   | |-TextComment 0x918650 <line:366:6> Text=" "
|   | |-InlineCommandComment 0x918670 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x918690 <col:19, col:109> Text=": The  vfwscanf_s  function  is  the  wide-character  equivalent  of the vfscanf_s function"
|   | `-TextComment 0x9186b0 <line:367:6> Text=" "
|   |-ParamCommandComment 0x918710 <col:7, line:368:6> [in] implicitly Param="stream" ParamIndex=0
|   | `-ParagraphComment 0x9187c0 <line:367:20, line:368:6>
|   |   |-TextComment 0x918770 <line:367:20, col:39> Text=" - stdio file stream"
|   |   `-TextComment 0x918790 <line:368:6> Text=" "
|   |-ParamCommandComment 0x9187e0 <col:7, line:369:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0x918890 <line:368:20, line:369:6>
|   |   |-TextComment 0x918840 <line:368:20, col:35> Text=" - format string"
|   |   `-TextComment 0x918860 <line:369:6> Text=" "
|   |-ParamCommandComment 0x9188b0 <col:7, line:370:6> [in] implicitly Param="arglist" ParamIndex=2
|   | `-ParagraphComment 0x918960 <line:369:21, line:370:6>
|   |   |-TextComment 0x918910 <line:369:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x918930 <line:370:6> Text=" "
|   `-BlockCommandComment 0x918980 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x9189e0 <col:14, col:89>
|       `-TextComment 0x9189b0 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x870a90 <line:112:21, line:380:73> col:21 sscanf_s 'int (const char *, const char *, ...)' extern
| |-ParmVarDecl 0x870970 <col:30, col:42> col:42 buffer 'const char *'
| |-ParmVarDecl 0x8709f0 <col:50, col:62> col:62 format 'const char *'
| `-FullComment 0x918dc0 <line:375:6, line:378:89>
|   |-ParagraphComment 0x918b40 <line:375:6, line:376:6>
|   | |-TextComment 0x918aa0 <line:375:6> Text=" "
|   | |-InlineCommandComment 0x918ac0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x918ae0 <col:19, col:173> Text=": The sscanf_s function is equivalent to fscanf_s, except that input is obtained from a string (specified by the argument buffer) rather than from a stream"
|   | `-TextComment 0x918b00 <line:376:6> Text=" "
|   |-ParamCommandComment 0x918b60 <col:7, line:377:6> [in] implicitly Param="buffer" ParamIndex=0
|   | `-ParagraphComment 0x918c10 <line:376:20, line:377:6>
|   |   |-TextComment 0x918bc0 <line:376:20, col:50> Text=" -  read character from  buffer"
|   |   `-TextComment 0x918be0 <line:377:6> Text=" "
|   |-ParamCommandComment 0x918c30 <col:7, line:378:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0x918d00 <line:377:20, line:378:6>
|   |   |-TextComment 0x918cb0 <line:377:20, col:35> Text=" - format string"
|   |   `-TextComment 0x918cd0 <line:378:6> Text=" "
|   `-BlockCommandComment 0x918d20 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x918d80 <col:14, col:89>
|       `-TextComment 0x918d50 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x870d18 <line:112:21, line:388:80> col:21 swscanf_s 'int (const wchar_t *, const wchar_t *, ...)' extern
| |-ParmVarDecl 0x870b78 <col:31, col:46> col:46 buffer 'const wchar_t *'
| |-ParmVarDecl 0x870bf0 <col:54, col:69> col:69 format 'const wchar_t *'
| `-FullComment 0x919130 <line:383:6, line:386:89>
|   |-ParagraphComment 0x918ed0 <line:383:6, line:384:6>
|   | |-TextComment 0x918e30 <line:383:6> Text=" "
|   | |-InlineCommandComment 0x918e50 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x918e70 <col:19, col:107> Text=": The  swscanf_s  function  is  the  wide-character  equivalent  of the sscanf_s function"
|   | `-TextComment 0x918e90 <line:384:6> Text=" "
|   |-ParamCommandComment 0x918ef0 <col:7, line:385:6> [in] implicitly Param="buffer" ParamIndex=0
|   | `-ParagraphComment 0x918fa0 <line:384:20, line:385:6>
|   |   |-TextComment 0x918f50 <line:384:20, col:50> Text=" -  read character from  buffer"
|   |   `-TextComment 0x918f70 <line:385:6> Text=" "
|   |-ParamCommandComment 0x918fc0 <col:7, line:386:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0x919070 <line:385:20, line:386:6>
|   |   |-TextComment 0x919020 <line:385:20, col:35> Text=" - format string"
|   |   `-TextComment 0x919040 <line:386:6> Text=" "
|   `-BlockCommandComment 0x919090 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x9190f0 <col:14, col:89>
|       `-TextComment 0x9190c0 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x870ff0 <line:112:21, line:397:86> col:21 vsscanf_s 'int (const char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x870e10 <col:31, col:43> col:43 buffer 'const char *'
| |-ParmVarDecl 0x870e90 <col:51, col:63> col:63 format 'const char *'
| |-ParmVarDecl 0x870f08 <col:71, col:79> col:79 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x919580 <line:391:6, line:395:89>
|   |-ParagraphComment 0x919240 <line:391:6, line:392:6>
|   | |-TextComment 0x9191a0 <line:391:6> Text=" "
|   | |-InlineCommandComment 0x9191c0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x9191e0 <col:19, col:121> Text=": The vsscanf_s function is equivalent to sscanf_s, with the variable argument list replaced by arglist"
|   | `-TextComment 0x919200 <line:392:6> Text=" "
|   |-ParamCommandComment 0x919260 <col:7, line:393:6> [in] implicitly Param="buffer" ParamIndex=0
|   | `-ParagraphComment 0x919310 <line:392:20, line:393:6>
|   |   |-TextComment 0x9192c0 <line:392:20, col:50> Text=" -  read character from  buffer"
|   |   `-TextComment 0x9192e0 <line:393:6> Text=" "
|   |-ParamCommandComment 0x919330 <col:7, line:394:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0x9193e0 <line:393:20, line:394:6>
|   |   |-TextComment 0x919390 <line:393:20, col:35> Text=" - format string"
|   |   `-TextComment 0x9193b0 <line:394:6> Text=" "
|   |-ParamCommandComment 0x919400 <col:7, line:395:6> [in] implicitly Param="arglist" ParamIndex=2
|   | `-ParagraphComment 0x9194b0 <line:394:21, line:395:6>
|   |   |-TextComment 0x919460 <line:394:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x919480 <line:395:6> Text=" "
|   `-BlockCommandComment 0x9194d0 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x919530 <col:14, col:89>
|       `-TextComment 0x919500 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x871300 <line:112:21, line:406:93> col:21 vswscanf_s 'int (const wchar_t *, const wchar_t *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x8710e8 <col:32, col:47> col:47 buffer 'const wchar_t *'
| |-ParmVarDecl 0x871160 <col:55, col:70> col:70 format 'const wchar_t *'
| |-ParmVarDecl 0x8711d8 <col:78, col:86> col:86 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0x9199d0 <line:400:6, line:404:89>
|   |-ParagraphComment 0x919690 <line:400:6, line:401:6>
|   | |-TextComment 0x9195f0 <line:400:6> Text=" "
|   | |-InlineCommandComment 0x919610 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x919630 <col:19, col:109> Text=": The  vswscanf_s  function  is  the  wide-character  equivalent  of the vsscanf_s function"
|   | `-TextComment 0x919650 <line:401:6> Text=" "
|   |-ParamCommandComment 0x9196b0 <col:7, line:402:6> [in] implicitly Param="buffer" ParamIndex=0
|   | `-ParagraphComment 0x919760 <line:401:20, line:402:6>
|   |   |-TextComment 0x919710 <line:401:20, col:50> Text=" -  read character from  buffer"
|   |   `-TextComment 0x919730 <line:402:6> Text=" "
|   |-ParamCommandComment 0x919780 <col:7, line:403:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0x919830 <line:402:20, line:403:6>
|   |   |-TextComment 0x9197e0 <line:402:20, col:35> Text=" - format string"
|   |   `-TextComment 0x919800 <line:403:6> Text=" "
|   |-ParamCommandComment 0x919850 <col:7, line:404:6> [in] implicitly Param="arglist" ParamIndex=2
|   | `-ParagraphComment 0x919900 <line:403:21, line:404:6>
|   |   |-TextComment 0x9198b0 <line:403:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0x9198d0 <line:404:6> Text=" "
|   `-BlockCommandComment 0x919920 <col:7, col:89> Name="return"
|     `-ParagraphComment 0x919980 <col:14, col:89>
|       `-TextComment 0x919950 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0x871590 <line:112:21, line:414:58> col:23 gets_s 'char *(char *, size_t)' extern
| |-ParmVarDecl 0x871400 <col:30, col:36> col:36 buffer 'char *'
| |-ParmVarDecl 0x871478 <col:44, col:51> col:51 destMax 'size_t':'unsigned long'
| `-FullComment 0x919d40 <line:409:6, line:412:100>
|   |-ParagraphComment 0x919ae0 <line:409:6, line:410:6>
|   | |-TextComment 0x919a40 <line:409:6> Text=" "
|   | |-InlineCommandComment 0x919a60 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x919a80 <col:19, col:185> Text=":The gets_s function reads at most one less than the number of characters specified by destMax from the stream pointed to by stdin, into the array pointed to by buffer"
|   | `-TextComment 0x919aa0 <line:410:6> Text=" "
|   |-ParamCommandComment 0x919b00 <col:7, line:411:6> [in] implicitly Param="buffer" ParamIndex=0
|   | `-ParagraphComment 0x919bb0 <line:410:20, line:411:6>
|   |   |-TextComment 0x919b60 <line:410:20, col:42> Text=" - destination  address"
|   |   `-TextComment 0x919b80 <line:411:6> Text=" "
|   |-ParamCommandComment 0x919bd0 <col:7, line:412:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x919c80 <line:411:21, line:412:6>
|   |   |-TextComment 0x919c30 <line:411:21, col:104> Text=" -The maximum length of destination buffer(including the terminating null character)"
|   |   `-TextComment 0x919c50 <line:412:6> Text=" "
|   `-BlockCommandComment 0x919ca0 <col:7, col:100> Name="return"
|     `-ParagraphComment 0x919d00 <col:14, col:100>
|       `-TextComment 0x919cd0 <col:14, col:100> Text="  buffer if there was no runtime-constraint violation,If an error occurred return NULL."
|-FunctionDecl 0x871a40 <line:112:21, line:425:91> col:25 memcpy_s 'errno_t (void *, size_t, const void *, size_t)' extern
| |-ParmVarDecl 0x871680 <col:34, col:40> col:40 dest 'void *'
| |-ParmVarDecl 0x8716f8 <col:46, col:53> col:53 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x871778 <col:62, col:74> col:74 src 'const void *'
| |-ParmVarDecl 0x8717f0 <col:79, col:86> col:86 count 'size_t':'unsigned long'
| `-FullComment 0x91a260 <line:418:6, line:423:63>
|   |-ParagraphComment 0x919e50 <line:418:6, line:419:6>
|   | |-TextComment 0x919db0 <line:418:6> Text=" "
|   | |-InlineCommandComment 0x919dd0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x919df0 <col:19, col:130> Text=":The memcpy_s function copies n characters from the object pointed to by src into the object pointed to by dest."
|   | `-TextComment 0x919e10 <line:419:6> Text=" "
|   |-ParamCommandComment 0x919e70 <col:7, line:420:6> [in] implicitly Param="dest" ParamIndex=0
|   | `-ParagraphComment 0x919f20 <line:419:18, line:420:6>
|   |   |-TextComment 0x919ed0 <line:419:18, col:40> Text=" - destination  address"
|   |   `-TextComment 0x919ef0 <line:420:6> Text=" "
|   |-ParamCommandComment 0x919f40 <col:7, line:421:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x919ff0 <line:420:21, line:421:6>
|   |   |-TextComment 0x919fa0 <line:420:21, col:62> Text=" -The maximum length of destination buffer"
|   |   `-TextComment 0x919fc0 <line:421:6> Text=" "
|   |-ParamCommandComment 0x91a010 <col:7, line:422:6> [in] implicitly Param="src" ParamIndex=2
|   | `-ParagraphComment 0x91a0c0 <line:421:17, line:422:6>
|   |   |-TextComment 0x91a070 <line:421:17, col:33> Text=" -source  address"
|   |   `-TextComment 0x91a090 <line:422:6> Text=" "
|   |-ParamCommandComment 0x91a0e0 <col:7, line:423:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0x91a190 <line:422:19, line:423:6>
|   |   |-TextComment 0x91a140 <line:422:19, col:58> Text=" -copies count  characters from the  src"
|   |   `-TextComment 0x91a160 <line:423:6> Text=" "
|   `-BlockCommandComment 0x91a1b0 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x91a210 <col:14, col:63>
|       `-TextComment 0x91a1e0 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x871d58 <line:112:21, line:434:83> col:25 strcpy_s 'errno_t (char *, size_t, const char *)' extern
| |-ParmVarDecl 0x871b40 <col:34, col:40> col:40 strDest 'char *'
| |-ParmVarDecl 0x871bb8 <col:49, col:56> col:56 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x871c38 <col:65, col:77> col:77 strSrc 'const char *'
| `-FullComment 0x91a6b0 <line:428:6, line:432:63>
|   |-ParagraphComment 0x91a370 <line:428:6, line:429:6>
|   | |-TextComment 0x91a2d0 <line:428:6> Text=" "
|   | |-InlineCommandComment 0x91a2f0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x91a310 <col:19, col:159> Text=":The strcpy_s function copies the string pointed to by strSrc (including the terminating null character) into the array pointed to by strDest"
|   | `-TextComment 0x91a330 <line:429:6> Text=" "
|   |-ParamCommandComment 0x91a390 <col:7, line:430:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x91a440 <line:429:21, line:430:6>
|   |   |-TextComment 0x91a3f0 <line:429:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0x91a410 <line:430:6> Text=" "
|   |-ParamCommandComment 0x91a460 <col:7, line:431:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x91a510 <line:430:21, line:431:6>
|   |   |-TextComment 0x91a4c0 <line:430:21, col:104> Text=" -The maximum length of destination buffer(including the terminating null character)"
|   |   `-TextComment 0x91a4e0 <line:431:6> Text=" "
|   |-ParamCommandComment 0x91a530 <col:7, line:432:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0x91a5e0 <line:431:20, line:432:6>
|   |   |-TextComment 0x91a590 <line:431:20, col:36> Text=" -source  address"
|   |   `-TextComment 0x91a5b0 <line:432:6> Text=" "
|   `-BlockCommandComment 0x91a600 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x91a660 <col:14, col:63>
|       `-TextComment 0x91a630 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x872108 <line:112:21, line:445:98> col:25 strncpy_s 'errno_t (char *, size_t, const char *, size_t)' extern
| |-ParmVarDecl 0x871e50 <col:35, col:41> col:41 strDest 'char *'
| |-ParmVarDecl 0x871ec8 <col:50, col:57> col:57 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x871f48 <col:66, col:78> col:78 strSrc 'const char *'
| |-ParmVarDecl 0x871fc0 <col:86, col:93> col:93 count 'size_t':'unsigned long'
| `-FullComment 0x91ac00 <line:437:6, line:443:63>
|   |-ParagraphComment 0x91a7f0 <line:437:6, line:439:6>
|   | |-TextComment 0x91a720 <line:437:6> Text=" "
|   | |-InlineCommandComment 0x91a740 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x91a760 <col:19, col:133> Text=":The strncpy_s function copies not more than n successive characters (not including the terminating null character)"
|   | |-TextComment 0x91a780 <line:438:6, col:96> Text="                     from the array pointed to by strSrc to the array pointed to by strDest"
|   | `-TextComment 0x91a7a0 <line:439:6> Text=" "
|   |-ParamCommandComment 0x91a810 <col:7, line:440:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x91a8c0 <line:439:21, line:440:6>
|   |   |-TextComment 0x91a870 <line:439:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0x91a890 <line:440:6> Text=" "
|   |-ParamCommandComment 0x91a8e0 <col:7, line:441:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x91a990 <line:440:21, line:441:6>
|   |   |-TextComment 0x91a940 <line:440:21, col:104> Text=" -The maximum length of destination buffer(including the terminating null character)"
|   |   `-TextComment 0x91a960 <line:441:6> Text=" "
|   |-ParamCommandComment 0x91a9b0 <col:7, line:442:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0x91aa60 <line:441:20, line:442:6>
|   |   |-TextComment 0x91aa10 <line:441:20, col:36> Text=" -source  address"
|   |   `-TextComment 0x91aa30 <line:442:6> Text=" "
|   |-ParamCommandComment 0x91aa80 <col:7, line:443:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0x91ab30 <line:442:19, line:443:6>
|   |   |-TextComment 0x91aae0 <line:442:19, col:58> Text=" -copies count  characters from the  src"
|   |   `-TextComment 0x91ab00 <line:443:6> Text=" "
|   `-BlockCommandComment 0x91ab50 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x91abb0 <col:14, col:63>
|       `-TextComment 0x91ab80 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x8723a8 <line:112:21, line:455:83> col:25 strcat_s 'errno_t (char *, size_t, const char *)' extern
| |-ParmVarDecl 0x872210 <col:34, col:40> col:40 strDest 'char *'
| |-ParmVarDecl 0x872288 <col:49, col:56> col:56 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x872308 <col:65, col:77> col:77 strSrc 'const char *'
| `-FullComment 0x91b090 <line:448:6, line:453:63>
|   |-ParagraphComment 0x91ad50 <line:448:6, line:450:6>
|   | |-TextComment 0x91ac70 <line:448:6> Text=" "
|   | |-InlineCommandComment 0x91aca0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x91acc0 <col:19, col:135> Text=":The strcat_s function appends a copy of the  string pointed to by strSrc (including the terminating null  character)"
|   | |-TextComment 0x91ace0 <line:449:6, col:73> Text="                     to the end of the  string pointed to by strDest"
|   | `-TextComment 0x91ad00 <line:450:6> Text=" "
|   |-ParamCommandComment 0x91ad70 <col:7, line:451:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x91ae20 <line:450:21, line:451:6>
|   |   |-TextComment 0x91add0 <line:450:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0x91adf0 <line:451:6> Text=" "
|   |-ParamCommandComment 0x91ae40 <col:7, line:452:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x91aef0 <line:451:21, line:452:6>
|   |   |-TextComment 0x91aea0 <line:451:21, col:109> Text=" -The maximum length of destination buffer(including the terminating null wide character)"
|   |   `-TextComment 0x91aec0 <line:452:6> Text=" "
|   |-ParamCommandComment 0x91af10 <col:7, line:453:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0x91afc0 <line:452:20, line:453:6>
|   |   |-TextComment 0x91af70 <line:452:20, col:36> Text=" -source  address"
|   |   `-TextComment 0x91af90 <line:453:6> Text=" "
|   `-BlockCommandComment 0x91afe0 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x91b040 <col:14, col:63>
|       `-TextComment 0x91b010 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x8726b8 <line:112:21, line:466:98> col:25 strncat_s 'errno_t (char *, size_t, const char *, size_t)' extern
| |-ParmVarDecl 0x8724a0 <col:35, col:41> col:41 strDest 'char *'
| |-ParmVarDecl 0x872518 <col:50, col:57> col:57 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x872598 <col:66, col:78> col:78 strSrc 'const char *'
| |-ParmVarDecl 0x872610 <col:86, col:93> col:93 count 'size_t':'unsigned long'
| `-FullComment 0x91b5e0 <line:458:6, line:464:63>
|   |-ParagraphComment 0x91b1d0 <line:458:6, line:460:6>
|   | |-TextComment 0x91b100 <line:458:6> Text=" "
|   | |-InlineCommandComment 0x91b120 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0x91b140 <col:19, col:136> Text=":The strncat_s function appends not more than n successive  characters (not including the terminating null  character)"
|   | |-TextComment 0x91b160 <line:459:6, col:112> Text="                       from the array pointed to by strSrc to the end of the  string pointed to by strDest."
|   | `-TextComment 0x91b180 <line:460:6> Text=" "
|   |-ParamCommandComment 0x91b1f0 <col:7, line:461:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0x91b2a0 <line:460:21, line:461:6>
|   |   |-TextComment 0x91b250 <line:460:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0x91b270 <line:461:6> Text=" "
|   |-ParamCommandComment 0x91b2c0 <col:7, line:462:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0x91b370 <line:461:21, line:462:6>
|   |   |-TextComment 0x91b320 <line:461:21, col:104> Text=" -The maximum length of destination buffer(including the terminating null character)"
|   |   `-TextComment 0x91b340 <line:462:6> Text=" "
|   |-ParamCommandComment 0x91b390 <col:7, line:463:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0x91b440 <line:462:20, line:463:6>
|   |   |-TextComment 0x91b3f0 <line:462:20, col:36> Text=" -source  address"
|   |   `-TextComment 0x91b410 <line:463:6> Text=" "
|   |-ParamCommandComment 0x91b460 <col:7, line:464:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0x91b510 <line:463:19, line:464:6>
|   |   |-TextComment 0x91b4c0 <line:463:19, col:58> Text=" -copies count  characters from the  src"
|   |   `-TextComment 0x91b4e0 <line:464:6> Text=" "
|   `-BlockCommandComment 0x91b530 <col:7, col:63> Name="return"
|     `-ParagraphComment 0x91b590 <col:14, col:63>
|       `-TextComment 0x91b560 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0x872b10 <line:469:5, col:97> col:20 strncpy_error 'errno_t (char *, size_t, const char *, size_t)' extern
| |-ParmVarDecl 0x872790 <col:34, col:40> col:40 strDest 'char *'
| |-ParmVarDecl 0x872808 <col:49, col:56> col:56 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x872888 <col:65, col:77> col:77 strSrc 'const char *'
| `-ParmVarDecl 0x872900 <col:85, col:92> col:92 count 'size_t':'unsigned long'
|-FunctionDecl 0x872d80 <line:470:5, col:82> col:20 strcpy_error 'errno_t (char *, size_t, const char *)' extern
| |-ParmVarDecl 0x872be8 <col:33, col:39> col:39 strDest 'char *'
| |-ParmVarDecl 0x872c60 <col:48, col:55> col:55 destMax 'size_t':'unsigned long'
| `-ParmVarDecl 0x872ce0 <col:64, col:76> col:76 strSrc 'const char *'
|-FunctionDecl 0x873068 <line:476:5, col:82> col:20 memset_sOptAsm 'errno_t (void *, size_t, int, size_t)' extern
| |-ParmVarDecl 0x872e50 <col:35, col:41> col:41 dest 'void *'
| |-ParmVarDecl 0x872ec8 <col:47, col:54> col:54 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x872f48 <col:63, col:67> col:67 c 'int'
| `-ParmVarDecl 0x872fc0 <col:70, col:77> col:77 count 'size_t':'unsigned long'
|-FunctionDecl 0x873358 <line:477:5, col:81> col:20 memset_sOptTc 'errno_t (void *, size_t, int, size_t)' extern
| |-ParmVarDecl 0x873140 <col:34, col:40> col:40 dest 'void *'
| |-ParmVarDecl 0x8731b8 <col:46, col:53> col:53 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x873238 <col:62, col:66> col:66 c 'int'
| `-ParmVarDecl 0x8732b0 <col:69, col:76> col:76 count 'size_t':'unsigned long'
|-FunctionDecl 0x873648 <line:478:5, col:92> col:20 memcpy_sOptAsm 'errno_t (void *, size_t, const void *, size_t)' extern
| |-ParmVarDecl 0x873430 <col:35, col:41> col:41 dest 'void *'
| |-ParmVarDecl 0x8734a8 <col:47, col:54> col:54 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x873528 <col:63, col:75> col:75 src 'const void *'
| `-ParmVarDecl 0x8735a0 <col:80, col:87> col:87 count 'size_t':'unsigned long'
|-FunctionDecl 0x873938 <line:479:5, col:91> col:20 memcpy_sOptTc 'errno_t (void *, size_t, const void *, size_t)' extern
| |-ParmVarDecl 0x873720 <col:34, col:40> col:40 dest 'void *'
| |-ParmVarDecl 0x873798 <col:46, col:53> col:53 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0x873818 <col:62, col:74> col:74 src 'const void *'
| `-ParmVarDecl 0x873890 <col:79, col:86> col:86 count 'size_t':'unsigned long'
|-FunctionDecl 0x879180 <main/los_compiler.h:327:23, main/los_context.h:68:71> col:7 ArchTskStackInit 'void *(UINT32, UINT32, void *)'
| |-ParmVarDecl 0x873a68 <col:24, col:31> col:31 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x878fd0 <col:39, col:46> col:46 stackSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0x879050 <main/los_compiler.h:327:23, main/los_context.h:68:63> col:63 topStack 'void *'
| `-FullComment 0x91c130 <line:50:3, line:66:13>
|   |-ParagraphComment 0x91b680 <line:50:3>
|   | `-TextComment 0x91b650 <col:3> Text=" "
|   |-VerbatimLineComment 0x91b6a0 <col:4, col:25> Text="  los_context"
|   |-ParagraphComment 0x91b710 <line:51:3>
|   | `-TextComment 0x91b6e0 <col:3> Text=" "
|   |-BlockCommandComment 0x91b730 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0x91b790 <col:10, col:37>
|   |   `-TextComment 0x91b760 <col:10, col:37> Text=": Task stack initialization."
|   |-ParagraphComment 0x91b7e0 <line:53:3>
|   | `-TextComment 0x91b7b0 <col:3> Text=" "
|   |-BlockCommandComment 0x91b800 <col:4, line:54:49> Name="par"
|   | `-ParagraphComment 0x91b880 <line:53:8, line:54:49>
|   |   |-TextComment 0x91b830 <line:53:8, col:20> Text=" Description:"
|   |   `-TextComment 0x91b850 <line:54:3, col:49> Text=" This API is used to initialize the task stack."
|   |-ParagraphComment 0x91b8d0 <line:56:3>
|   | `-TextComment 0x91b8a0 <col:3> Text=" "
|   |-BlockCommandComment 0x91b8f0 <col:4, line:57:26> Name="attention"
|   | `-ParagraphComment 0x91ba90 <line:56:14, line:57:26>
|   |   |-TextComment 0x91b920 <line:56:14> Text=":"
|   |   |-TextComment 0x91b940 <line:57:3> Text=" "
|   |   |-HTMLStartTagComment 0x91b960 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x91b9a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x91b9e0 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0x91ba00 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0x91ba30 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0x91bae0 <line:59:3>
|   | `-TextComment 0x91bab0 <col:3> Text=" "
|   |-ParamCommandComment 0x91bb00 <col:4, line:60:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x91bbb0 <line:59:18, line:60:3>
|   |   |-TextComment 0x91bb60 <line:59:18, col:47> Text="     [IN] Type#UINT32: TaskID."
|   |   `-TextComment 0x91bb80 <line:60:3> Text=" "
|   |-ParamCommandComment 0x91bbd0 <col:4, line:61:3> [in] implicitly Param="stackSize" ParamIndex=1
|   | `-ParagraphComment 0x91bc80 <line:60:21, line:61:3>
|   |   |-TextComment 0x91bc30 <line:60:21, col:64> Text="  [IN] Type#UINT32: Total size of the stack."
|   |   `-TextComment 0x91bc50 <line:61:3> Text=" "
|   |-ParamCommandComment 0x91bca0 <col:4, col:60> [in] implicitly Param="topStack" ParamIndex=2
|   | `-ParagraphComment 0x91bd30 <col:20, col:60>
|   |   `-TextComment 0x91bd00 <col:20, col:60> Text="   [IN] Type#VOID *: Top of task's stack."
|   |-ParagraphComment 0x91bd80 <line:63:3>
|   | `-TextComment 0x91bd50 <col:3> Text=" "
|   |-BlockCommandComment 0x91bda0 <col:4, line:64:3> Name="retval"
|   | `-ParagraphComment 0x91be20 <line:63:11, line:64:3>
|   |   |-TextComment 0x91bdd0 <line:63:11, col:39> Text=": context Type#TaskContext *."
|   |   `-TextComment 0x91bdf0 <line:64:3> Text=" "
|   |-BlockCommandComment 0x91be40 <col:4, line:66:3> Name="par"
|   | `-ParagraphComment 0x91c010 <line:64:8, line:66:3>
|   |   |-TextComment 0x91be70 <line:64:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x91be90 <line:65:3> Text=" "
|   |   |-HTMLStartTagComment 0x91beb0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x91bef0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x91bf30 <col:12, col:76> Text="los_context.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x91bf50 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0x91bf80 <col:82, col:86> Name="ul"
|   |   `-TextComment 0x91bfb0 <line:66:3> Text=" "
|   `-BlockCommandComment 0x91c030 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x91c090 <col:8, col:13>
|       `-TextComment 0x91c060 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8792d0 <main/los_compiler.h:327:23, main/los_context.h:69:34> col:6 used HalIrqEndCheckNeedSched 'void (void)'
|-FunctionDecl 0x879408 <main/los_compiler.h:327:23, main/los_context.h:70:35> col:6 used EnableExceptionInterface 'void (void)'
|-FunctionDecl 0x879540 <main/los_compiler.h:327:23, main/los_context.h:71:31> col:6 HalTaskContextSwitch 'void (void)'
|-FunctionDecl 0x8796a0 <main/los_compiler.h:146:23, main/los_context.h:89:54> col:38 used ArchSysExit 'void (void) __attribute__((noreturn))'
| `-FullComment 0x91caa0 <line:73:3, line:87:13>
|   |-ParagraphComment 0x91c1d0 <line:73:3>
|   | `-TextComment 0x91c1a0 <col:3> Text=" "
|   |-VerbatimLineComment 0x91c1f0 <col:4, col:25> Text="  los_context"
|   |-ParagraphComment 0x91c260 <line:74:3>
|   | `-TextComment 0x91c230 <col:3> Text=" "
|   |-BlockCommandComment 0x91c280 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0x91c2e0 <col:10, col:32>
|   |   `-TextComment 0x91c2b0 <col:10, col:32> Text=": Function to sys exit."
|   |-ParagraphComment 0x91c330 <line:76:3>
|   | `-TextComment 0x91c300 <col:3> Text=" "
|   |-BlockCommandComment 0x91c350 <col:4, line:77:32> Name="par"
|   | `-ParagraphComment 0x91c3d0 <line:76:8, line:77:32>
|   |   |-TextComment 0x91c380 <line:76:8, col:20> Text=" Description:"
|   |   `-TextComment 0x91c3a0 <line:77:3, col:32> Text=" This API is used to sys exit."
|   |-ParagraphComment 0x91c420 <line:79:3>
|   | `-TextComment 0x91c3f0 <col:3> Text=" "
|   |-BlockCommandComment 0x91c440 <col:4, line:80:26> Name="attention"
|   | `-ParagraphComment 0x91c5e0 <line:79:14, line:80:26>
|   |   |-TextComment 0x91c470 <line:79:14> Text=":"
|   |   |-TextComment 0x91c490 <line:80:3> Text=" "
|   |   |-HTMLStartTagComment 0x91c4b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x91c4f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x91c530 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0x91c550 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0x91c580 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0x91c630 <line:82:3>
|   | `-TextComment 0x91c600 <col:3> Text=" "
|   |-ParamCommandComment 0x91c650 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x91c6b0 <<invalid sloc>>
|   |-ParagraphComment 0x91c700 <line:84:3>
|   | `-TextComment 0x91c6d0 <col:3> Text=" "
|   |-BlockCommandComment 0x91c720 <col:4, line:85:3> Name="retval"
|   | `-ParagraphComment 0x91c7a0 <line:84:11, line:85:3>
|   |   |-TextComment 0x91c750 <line:84:11, col:17> Text=": None."
|   |   `-TextComment 0x91c770 <line:85:3> Text=" "
|   |-BlockCommandComment 0x91c7c0 <col:4, line:87:3> Name="par"
|   | `-ParagraphComment 0x91c990 <line:85:8, line:87:3>
|   |   |-TextComment 0x91c7f0 <line:85:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x91c810 <line:86:3> Text=" "
|   |   |-HTMLStartTagComment 0x91c830 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x91c870 <col:8, col:11> Name="li"
|   |   |-TextComment 0x91c8b0 <col:12, col:76> Text="los_context.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x91c8d0 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0x91c900 <col:82, col:86> Name="ul"
|   |   `-TextComment 0x91c930 <line:87:3> Text=" "
|   `-BlockCommandComment 0x91c9b0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x91ca10 <col:8, col:13>
|       `-TextComment 0x91c9e0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x879800 <main/los_compiler.h:327:23, main/los_context.h:108:27> col:6 ArchTaskSchedule 'void (void)'
| `-FullComment 0x91d420 <line:92:3, line:106:13>
|   |-ParagraphComment 0x91cb40 <line:92:3>
|   | `-TextComment 0x91cb10 <col:3> Text=" "
|   |-VerbatimLineComment 0x91cb60 <col:4, col:25> Text="  los_context"
|   |-ParagraphComment 0x91cbd0 <line:93:3>
|   | `-TextComment 0x91cba0 <col:3> Text=" "
|   |-BlockCommandComment 0x91cbf0 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0x91cc50 <col:10, col:36>
|   |   `-TextComment 0x91cc20 <col:10, col:36> Text=": Task scheduling Function."
|   |-ParagraphComment 0x91ccb0 <line:95:3>
|   | `-TextComment 0x91cc70 <col:3> Text=" "
|   |-BlockCommandComment 0x91ccd0 <col:4, line:96:39> Name="par"
|   | `-ParagraphComment 0x91cd50 <line:95:8, line:96:39>
|   |   |-TextComment 0x91cd00 <line:95:8, col:20> Text=" Description:"
|   |   `-TextComment 0x91cd20 <line:96:3, col:39> Text=" This API is used to scheduling task."
|   |-ParagraphComment 0x91cda0 <line:98:3>
|   | `-TextComment 0x91cd70 <col:3> Text=" "
|   |-BlockCommandComment 0x91cdc0 <col:4, line:99:26> Name="attention"
|   | `-ParagraphComment 0x91cf60 <line:98:14, line:99:26>
|   |   |-TextComment 0x91cdf0 <line:98:14> Text=":"
|   |   |-TextComment 0x91ce10 <line:99:3> Text=" "
|   |   |-HTMLStartTagComment 0x91ce30 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x91ce70 <col:8, col:11> Name="li"
|   |   |-TextComment 0x91ceb0 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0x91ced0 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0x91cf00 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0x91cfb0 <line:101:3>
|   | `-TextComment 0x91cf80 <col:3> Text=" "
|   |-ParamCommandComment 0x91cfd0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x91d030 <<invalid sloc>>
|   |-ParagraphComment 0x91d080 <line:103:3>
|   | `-TextComment 0x91d050 <col:3> Text=" "
|   |-BlockCommandComment 0x91d0a0 <col:4, line:104:3> Name="retval"
|   | `-ParagraphComment 0x91d120 <line:103:11, line:104:3>
|   |   |-TextComment 0x91d0d0 <line:103:11, col:17> Text=": None."
|   |   `-TextComment 0x91d0f0 <line:104:3> Text=" "
|   |-BlockCommandComment 0x91d140 <col:4, line:106:3> Name="par"
|   | `-ParagraphComment 0x91d310 <line:104:8, line:106:3>
|   |   |-TextComment 0x91d170 <line:104:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x91d190 <line:105:3> Text=" "
|   |   |-HTMLStartTagComment 0x91d1b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x91d1f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x91d230 <col:12, col:76> Text="los_context.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x91d250 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0x91d280 <col:82, col:86> Name="ul"
|   |   `-TextComment 0x91d2b0 <line:106:3> Text=" "
|   `-BlockCommandComment 0x91d330 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x91d390 <col:8, col:13>
|       `-TextComment 0x91d360 <col:8, col:13> Text=" None."
|-FunctionDecl 0x879938 <line:110:1, col:30> col:8 ArchStartSchedule 'UINT32 (void)'
|-FunctionDecl 0x879cb0 <main/los_compiler.h:327:23, main/los_context.h:111:97> col:7 ArchSignalContextInit 'void *(void *, void *, UINTPTR, UINT32)'
| |-ParmVarDecl 0x8799f0 <main/los_compiler.h:327:23, main/los_context.h:111:35> col:35 stackPointer 'void *'
| |-ParmVarDecl 0x879a70 <main/los_compiler.h:327:23, main/los_context.h:111:55> col:55 stackTop 'void *'
| |-ParmVarDecl 0x879ae8 <col:65, col:73> col:73 sigHandler 'UINTPTR':'unsigned int'
| `-ParmVarDecl 0x879b60 <col:85, col:92> col:92 param 'UINT32':'unsigned int'
|-RecordDecl 0x879d70 <main/los_arch_interrupt.h:45:9, line:64:1> line:45:9 struct definition
| |-FieldDecl 0x879e20 <line:46:5, col:12> col:12 referenced pc 'UINT32':'unsigned int'
| |-FieldDecl 0x879e80 <line:47:5, col:12> col:12 referenced ps 'UINT32':'unsigned int'
| |-FieldDecl 0x879f68 <line:48:5, col:19> col:12 referenced regA 'UINT32 [16]'
| |-FieldDecl 0x87dc90 <line:49:5, col:12> col:12 referenced sar 'UINT32':'unsigned int'
| |-FieldDecl 0x87dcf0 <line:50:5, col:12> col:12 referenced excCause 'UINT32':'unsigned int'
| |-FieldDecl 0x87dd50 <line:51:5, col:12> col:12 referenced excVaddr 'UINT32':'unsigned int'
| |-FieldDecl 0x87ddb0 <line:52:5, col:12> col:12 referenced lbeg 'UINT32':'unsigned int'
| |-FieldDecl 0x87de10 <line:53:5, col:12> col:12 referenced lend 'UINT32':'unsigned int'
| |-FieldDecl 0x87de70 <line:54:5, col:12> col:12 referenced lcount 'UINT32':'unsigned int'
| `-FieldDecl 0x87df98 <line:63:5, col:17> col:12 res 'UINT32 [4]'
|-TypedefDecl 0x87e048 <line:45:1, line:64:3> col:3 referenced EXC_CONTEXT_S 'struct EXC_CONTEXT_S':'EXC_CONTEXT_S'
| `-ElaboratedType 0x87dff0 'struct EXC_CONTEXT_S' sugar
|   `-RecordType 0x879df0 'EXC_CONTEXT_S'
|     `-Record 0x879d70 ''
|-VarDecl 0x87e0f8 <line:67:1, line:66:47> col:47 used _init_start 'CHAR *' extern
|-TypedefDecl 0x87e268 <line:102:1, col:38> col:17 HWI_VECTOR_FUNC 'void (**)(void)'
| `-PointerType 0x87e210 'void (**)(void)'
|   `-PointerType 0x780560 'void (*)(void)'
|     `-ParenType 0x780500 'void (void)' sugar
|       `-FunctionProtoType 0x7804d0 'void (void)' cdecl
|         `-BuiltinType 0x701a20 'void'
|-VarDecl 0x87e2d0 <line:108:1, col:15> col:15 used g_intCount 'UINT32':'unsigned int' extern
|-FunctionDecl 0x87e4d8 <line:213:1, col:57> col:13 used OsSetVector 'void (UINT32, HWI_PROC_FUNC)' extern
| |-ParmVarDecl 0x87e348 <col:25, col:32> col:32 num 'UINT32':'unsigned int'
| `-ParmVarDecl 0x87e3c0 <col:37, col:51> col:51 vector 'HWI_PROC_FUNC':'void (*)(void)'
|-FunctionDecl 0x87e620 <main/los_compiler.h:327:23, main/los_arch_interrupt.h:216:23> col:6 used HalInterrupt 'void (void)'
|-FunctionDecl 0x87e758 <main/los_compiler.h:327:23, main/los_arch_interrupt.h:217:31> col:6 used HalHwiDefaultHandler 'void (void)'
|-FunctionDecl 0x87ea98 <main/los_compiler.h:327:23, main/los_arch_interrupt.h:218:81> col:6 HalExcHandleEntry 'void (UINTPTR, EXC_CONTEXT_S *, UINT32)'
| |-ParmVarDecl 0x87e808 <col:24, col:32> col:32 faultAddr 'UINTPTR':'unsigned int'
| |-ParmVarDecl 0x87e8f8 <col:43, col:58> col:58 excBufAddr 'EXC_CONTEXT_S *'
| `-ParmVarDecl 0x87e970 <col:70, col:77> col:77 type 'UINT32':'unsigned int'
|-FunctionDecl 0x87ebe8 <main/los_compiler.h:327:23, main/los_arch_interrupt.h:219:21> col:6 HalHwiInit 'void (void)'
|-RecordDecl 0x880ce8 <line:228:9, line:236:1> line:228:16 struct TagExcInfo definition
| |-FullComment 0x91d640 <line:222:3, line:227:1>
| | |-ParagraphComment 0x91d4c0 <line:222:3>
| | | `-TextComment 0x91d490 <col:3> Text=" "
| | |-VerbatimLineComment 0x91d4e0 <col:4, col:20> Text=" los_exc"
| | |-ParagraphComment 0x91d550 <line:223:3, col:34>
| | | `-TextComment 0x91d520 <col:3, col:34> Text=" Exception information structure"
| | |-ParagraphComment 0x91d5a0 <line:225:3, col:98>
| | | `-TextComment 0x91d570 <col:3, col:98> Text=" Description: Exception information saved when an exception is triggered on the Xtensa platform."
| | `-ParagraphComment 0x91d5f0 <line:227:1>
| |   `-TextComment 0x91d5c0 <col:1> Text=" "
| |-FieldDecl 0x880da0 <line:229:5, col:12> col:12 referenced phase 'UINT16':'unsigned short'
| |-FieldDecl 0x880e00 <line:230:5, col:12> col:12 referenced type 'UINT16':'unsigned short'
| |-FieldDecl 0x880e60 <line:231:5, col:12> col:12 referenced faultAddr 'UINT32':'unsigned int'
| |-FieldDecl 0x880ec0 <line:232:5, col:12> col:12 referenced thrdPid 'UINT32':'unsigned int'
| |-FieldDecl 0x880f20 <line:233:5, col:12> col:12 referenced nestCnt 'UINT16':'unsigned short'
| |-FieldDecl 0x880f80 <line:234:5, col:12> col:12 reserved 'UINT16':'unsigned short'
| `-FieldDecl 0x880fe0 <line:235:5, col:20> col:20 referenced context 'EXC_CONTEXT_S *'
|-TypedefDecl 0x881088 <line:228:1, line:236:3> col:3 referenced ExcInfo 'struct TagExcInfo':'struct TagExcInfo'
| |-ElaboratedType 0x881030 'struct TagExcInfo' sugar
| | `-RecordType 0x880d70 'struct TagExcInfo'
| |   `-Record 0x880ce8 'TagExcInfo'
| `-FullComment 0x91d860 <line:222:3, line:227:1>
|   |-ParagraphComment 0x91d6e0 <line:222:3>
|   | `-TextComment 0x91d6b0 <col:3> Text=" "
|   |-VerbatimLineComment 0x91d700 <col:4, col:20> Text=" los_exc"
|   |-ParagraphComment 0x91d770 <line:223:3, col:34>
|   | `-TextComment 0x91d740 <col:3, col:34> Text=" Exception information structure"
|   |-ParagraphComment 0x91d7c0 <line:225:3, col:98>
|   | `-TextComment 0x91d790 <col:3, col:98> Text=" Description: Exception information saved when an exception is triggered on the Xtensa platform."
|   `-ParagraphComment 0x91d810 <line:227:1>
|     `-TextComment 0x91d7e0 <col:1> Text=" "
|-VarDecl 0x881108 <line:238:1, col:15> col:15 g_curNestCount 'UINT32':'unsigned int' extern
|-VarDecl 0x8811a0 <line:239:1, col:16> col:16 used g_excInfo 'ExcInfo':'struct TagExcInfo' extern
|-EnumDecl 0x881238 <main/los_debug.h:74:9, line:80:1> line:74:9
| |-EnumConstantDecl 0x881300 <line:75:5> col:5 EXC_REBOOT 'int'
| |-EnumConstantDecl 0x881350 <line:76:5> col:5 EXC_ASSERT 'int'
| |-EnumConstantDecl 0x8813a0 <line:77:5> col:5 EXC_STACKOVERFLOW 'int'
| |-EnumConstantDecl 0x8813f0 <line:78:5> col:5 referenced EXC_INTERRUPT 'int'
| `-EnumConstantDecl 0x881440 <line:79:5> col:5 EXC_TYPE_END 'int'
|-TypedefDecl 0x8814e8 <line:74:1, line:80:3> col:3 referenced EXC_TYPE 'enum EXC_TYPE':'EXC_TYPE'
| `-ElaboratedType 0x881490 'enum EXC_TYPE' sugar
|   `-EnumType 0x8812e0 'EXC_TYPE'
|     `-Enum 0x881238 ''
|-TypedefDecl 0x881720 <line:82:1, col:43> col:16 referenced ExcHookFn 'void (*)(EXC_TYPE)'
| `-PointerType 0x8816c0 'void (*)(EXC_TYPE)'
|   `-ParenType 0x881660 'void (EXC_TYPE)' sugar
|     `-FunctionProtoType 0x881630 'void (EXC_TYPE)' cdecl
|       |-BuiltinType 0x701a20 'void'
|       `-TypedefType 0x881560 'EXC_TYPE' sugar
|         |-Typedef 0x8814e8 'EXC_TYPE'
|         `-ElaboratedType 0x881490 'enum EXC_TYPE' sugar
|           `-EnumType 0x8812e0 'EXC_TYPE'
|             `-Enum 0x881238 ''
|-FunctionDecl 0x8818a8 <main/los_compiler.h:327:23, main/los_debug.h:84:43> col:6 OsExcHookRegister 'void (ExcHookFn)'
| `-ParmVarDecl 0x8817b0 <col:24, col:34> col:34 excHookFn 'ExcHookFn':'void (*)(EXC_TYPE)'
|-FunctionDecl 0x8819f0 <main/los_compiler.h:327:23, main/los_debug.h:86:34> col:6 used OsDoExcHook 'void (EXC_TYPE)'
| `-ParmVarDecl 0x881960 <col:18, col:27> col:27 excType 'EXC_TYPE':'EXC_TYPE'
|-EnumDecl 0x881a98 <line:104:9, line:108:1> line:104:9
| |-EnumConstantDecl 0x881b60 <line:105:5> col:5 LOG_MODULE_KERNEL 'int'
| |-EnumConstantDecl 0x881bb0 <line:106:5> col:5 LOG_MODULE_FS 'int'
| `-EnumConstantDecl 0x881c00 <line:107:5> col:5 LOS_MODULE_OTHERS 'int'
|-TypedefDecl 0x884490 <line:104:1, line:108:3> col:3 LogModuleType 'enum LogModuleType':'LogModuleType'
| `-ElaboratedType 0x881c50 'enum LogModuleType' sugar
|   `-EnumType 0x881b40 'LogModuleType'
|     `-Enum 0x881a98 ''
|-FunctionDecl 0x884610 prev 0x7c15a8 <line:132:1, col:41> col:14 used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x884540 <col:21, col:33> col:33 fmt 'const CHAR *'
| `-FormatAttr 0x8846e8 </usr/include/stdio.h:332:12> Inherited printf 1 2
|-FunctionDecl 0x8847f8 <main/los_debug.h:133:1, col:41> col:14 used OsLogLevelCheck 'INT32 (INT32)' extern
| `-ParmVarDecl 0x884730 <col:30, col:36> col:36 level 'INT32':'int'
|-TypedefDecl 0x884bf8 <line:167:1, col:89> col:16 referenced BACK_TRACE_HOOK 'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
| `-PointerType 0x884b80 'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
|   `-ParenType 0x884b20 'void (UINTPTR *, UINT32, UINT32, UINTPTR)' sugar
|     `-FunctionProtoType 0x884ad0 'void (UINTPTR *, UINT32, UINT32, UINTPTR)' cdecl
|       |-BuiltinType 0x701a20 'void'
|       |-PointerType 0x775d70 'UINTPTR *'
|       | `-TypedefType 0x775cb0 'UINTPTR' sugar
|       |   |-Typedef 0x764e38 'UINTPTR'
|       |   `-BuiltinType 0x701b60 'unsigned int'
|       |-TypedefType 0x7650b0 'UINT32' sugar
|       | |-Typedef 0x7649e0 'UINT32'
|       | `-BuiltinType 0x701b60 'unsigned int'
|       |-TypedefType 0x7650b0 'UINT32' sugar
|       | |-Typedef 0x7649e0 'UINT32'
|       | `-BuiltinType 0x701b60 'unsigned int'
|       `-TypedefType 0x775cb0 'UINTPTR' sugar
|         |-Typedef 0x764e38 'UINTPTR'
|         `-BuiltinType 0x701b60 'unsigned int'
|-FunctionDecl 0x884d78 <line:168:1, col:52> col:13 OsBackTraceHookSet 'void (BACK_TRACE_HOOK)' extern
| `-ParmVarDecl 0x884c80 <col:32, col:48> col:48 hook 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
|-FunctionDecl 0x885040 <line:169:1, col:89> col:13 OsBackTraceHookCall 'void (UINTPTR *, UINT32, UINT32, UINTPTR)' extern
| |-ParmVarDecl 0x884e30 <col:33, col:42> col:42 LR 'UINTPTR *'
| |-ParmVarDecl 0x884ea8 <col:46, col:53> col:53 LRSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0x884f20 <col:61, col:68> col:68 jumpCount 'UINT32':'unsigned int'
| `-ParmVarDecl 0x884f98 <col:79, col:87> col:87 SP 'UINTPTR':'unsigned int'
|-RecordDecl 0x885188 <main/los_list.h:52:9, line:55:1> line:52:16 struct LOS_DL_LIST definition
| |-FullComment 0x91d9d0 <line:49:3, line:50:47>
| | |-ParagraphComment 0x91d900 <line:49:3>
| | | `-TextComment 0x91d8d0 <col:3> Text=" "
| | |-VerbatimLineComment 0x91d920 <col:4, col:21> Text=" los_list"
| | `-ParagraphComment 0x91d990 <line:50:3, col:47>
| |   `-TextComment 0x91d960 <col:3, col:47> Text=" Structure of a node in a doubly linked list."
| |-FieldDecl 0x8852e0 <line:53:5, col:25> col:25 referenced pstPrev 'struct LOS_DL_LIST *'
| | `-FullComment 0x91daa0 <col:38, col:82>
| |   `-ParagraphComment 0x91da70 <col:38, col:82>
| |     `-TextComment 0x91da40 <col:38, col:82> Text=" Current node's pointer to the previous node "
| `-FieldDecl 0x885380 <line:54:5, col:25> col:25 referenced pstNext 'struct LOS_DL_LIST *'
|   `-FullComment 0x91db70 <col:38, col:78>
|     `-ParagraphComment 0x91db40 <col:38, col:78>
|       `-TextComment 0x91db10 <col:38, col:78> Text=" Current node's pointer to the next node "
|-TypedefDecl 0x892420 <line:52:1, line:55:3> col:3 referenced LOS_DL_LIST 'struct LOS_DL_LIST':'struct LOS_DL_LIST'
| |-ElaboratedType 0x885400 'struct LOS_DL_LIST' sugar
| | `-RecordType 0x885210 'struct LOS_DL_LIST'
| |   `-Record 0x885188 'LOS_DL_LIST'
| `-FullComment 0x91dce0 <line:49:3, line:50:47>
|   |-ParagraphComment 0x91dc10 <line:49:3>
|   | `-TextComment 0x91dbe0 <col:3> Text=" "
|   |-VerbatimLineComment 0x91dc30 <col:4, col:21> Text=" los_list"
|   `-ParagraphComment 0x91dca0 <line:50:3, col:47>
|     `-TextComment 0x91dc70 <col:3, col:47> Text=" Structure of a node in a doubly linked list."
|-FunctionDecl 0x892608 <main/los_compiler.h:130:23, main/los_list.h:79:1> line:75:43 used LOS_ListInit 'void (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0x892518 <col:56, col:69> col:69 used list 'LOS_DL_LIST *'
| |-CompoundStmt 0x892888 <line:76:1, line:79:1>
| | |-BinaryOperator 0x892750 <line:77:5, col:21> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x8926e8 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x885380
| | | | `-ImplicitCastExpr 0x8926d0 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x8926b0 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x892518 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0x892738 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| | |   `-DeclRefExpr 0x892718 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0x892518 'list' 'LOS_DL_LIST *'
| | `-BinaryOperator 0x892810 <line:78:5, col:21> 'struct LOS_DL_LIST *' '='
| |   |-MemberExpr 0x8927a8 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x8852e0
| |   | `-ImplicitCastExpr 0x892790 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| |   |   `-DeclRefExpr 0x892770 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x892518 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0x8927f8 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0x8927d8 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0x892518 'list' 'LOS_DL_LIST *'
| `-FullComment 0x91e660 <line:58:3, line:73:7>
|   |-ParagraphComment 0x91dd80 <line:58:3>
|   | `-TextComment 0x91dd50 <col:3> Text=" "
|   |-VerbatimLineComment 0x91dda0 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0x91de10 <line:59:3>
|   | `-TextComment 0x91dde0 <col:3> Text=" "
|   |-BlockCommandComment 0x91de30 <col:4, col:42> Name="brief"
|   | `-ParagraphComment 0x91de90 <col:10, col:42>
|   |   `-TextComment 0x91de60 <col:10, col:42> Text=" Initialize a doubly linked list."
|   |-ParagraphComment 0x91dee0 <line:61:3>
|   | `-TextComment 0x91deb0 <col:3> Text=" "
|   |-BlockCommandComment 0x91df00 <col:4, line:63:3> Name="par"
|   | `-ParagraphComment 0x91dfb0 <line:61:8, line:63:3>
|   |   |-TextComment 0x91df30 <line:61:8, col:20> Text=" Description:"
|   |   |-TextComment 0x91df50 <line:62:3, col:55> Text=" This API is used to initialize a doubly linked list."
|   |   `-TextComment 0x91df70 <line:63:3> Text=" "
|   |-BlockCommandComment 0x91dfd0 <col:4, line:66:8> Name="attention"
|   | `-ParagraphComment 0x91e1a0 <line:64:3, line:66:8>
|   |   |-TextComment 0x91e000 <line:64:3> Text=" "
|   |   |-HTMLStartTagComment 0x91e020 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x91e060 <line:65:3> Text=" "
|   |   |-HTMLStartTagComment 0x91e080 <col:4, col:7> Name="li"
|   |   |-TextComment 0x91e0c0 <col:8, col:71> Text="The parameter passed in should be ensured to be a legal pointer."
|   |   |-HTMLEndTagComment 0x91e0e0 <col:72, col:76> Name="li"
|   |   |-TextComment 0x91e110 <line:66:3> Text=" "
|   |   `-HTMLEndTagComment 0x91e130 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x91e1f0 <line:68:3>
|   | `-TextComment 0x91e1c0 <col:3> Text=" "
|   |-ParamCommandComment 0x91e210 <col:4, col:52> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0x91e2a0 <col:15, col:52>
|   |   `-TextComment 0x91e270 <col:15, col:52> Text="    [IN] Node in a doubly linked list."
|   |-ParagraphComment 0x91e2f0 <line:70:3>
|   | `-TextComment 0x91e2c0 <col:3> Text=" "
|   |-BlockCommandComment 0x91e310 <col:4, line:71:3> Name="retval"
|   | `-ParagraphComment 0x91e390 <line:70:11, line:71:3>
|   |   |-TextComment 0x91e340 <line:70:11, col:16> Text=" None."
|   |   `-TextComment 0x91e360 <line:71:3> Text=" "
|   |-BlockCommandComment 0x91e3b0 <col:4, line:73:3> Name="par"
|   | `-ParagraphComment 0x91e580 <line:71:8, line:73:3>
|   |   |-TextComment 0x91e3e0 <line:71:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x91e400 <line:72:3> Text=" "
|   |   |-HTMLStartTagComment 0x91e420 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x91e460 <col:8, col:11> Name="li"
|   |   |-TextComment 0x91e4a0 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x91e4c0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x91e4f0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x91e520 <line:73:3> Text=" "
|   `-BlockCommandComment 0x91e5a0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x91e5d0 <<invalid sloc>>
|-FunctionDecl 0x892a48 <main/los_compiler.h:130:23, main/los_list.h:128:1> line:122:43 used LOS_ListAdd 'void (LOS_DL_LIST *, LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0x8928b8 <col:55, col:68> col:68 used list 'LOS_DL_LIST *'
| |-ParmVarDecl 0x892930 <col:74, col:87> col:87 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0x892eb8 <line:123:1, line:128:1>
| | |-BinaryOperator 0x892be0 <line:124:5, col:27> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x892b30 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x885380
| | | | `-ImplicitCastExpr 0x892b18 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x892af8 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x892930 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0x892bc8 <col:21, col:27> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0x892b98 <col:21, col:27> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x885380
| | |     `-ImplicitCastExpr 0x892b80 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0x892b60 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0x8928b8 'list' 'LOS_DL_LIST *'
| | |-BinaryOperator 0x892ca0 <line:125:5, col:21> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x892c38 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x8852e0
| | | | `-ImplicitCastExpr 0x892c20 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x892c00 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x892930 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0x892c88 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| | |   `-DeclRefExpr 0x892c68 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0x8928b8 'list' 'LOS_DL_LIST *'
| | |-BinaryOperator 0x892da8 <line:126:5, col:30> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x892d40 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x8852e0
| | | | `-ImplicitCastExpr 0x892d28 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0x892cf8 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x885380
| | | |     `-ImplicitCastExpr 0x892ce0 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0x892cc0 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x8928b8 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0x892d90 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |   `-DeclRefExpr 0x892d70 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0x892930 'node' 'LOS_DL_LIST *'
| | `-BinaryOperator 0x892e68 <line:127:5, col:21> 'struct LOS_DL_LIST *' '='
| |   |-MemberExpr 0x892e00 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x885380
| |   | `-ImplicitCastExpr 0x892de8 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| |   |   `-DeclRefExpr 0x892dc8 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x8928b8 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0x892e50 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0x892e30 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0x892930 'node' 'LOS_DL_LIST *'
| `-FullComment 0x920920 <line:104:3, line:120:22>
|   |-ParagraphComment 0x91e700 <line:104:3>
|   | `-TextComment 0x91e6d0 <col:3> Text=" "
|   |-VerbatimLineComment 0x91e720 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0x91e790 <line:105:3>
|   | `-TextComment 0x91e760 <col:3> Text=" "
|   |-BlockCommandComment 0x91e7b0 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0x91e810 <col:10, col:52>
|   |   `-TextComment 0x91e7e0 <col:10, col:52> Text=" Insert a new node to a doubly linked list."
|   |-ParagraphComment 0x91e860 <line:107:3>
|   | `-TextComment 0x91e830 <col:3> Text=" "
|   |-BlockCommandComment 0x91e880 <col:4, line:109:3> Name="par"
|   | `-ParagraphComment 0x91e930 <line:107:8, line:109:3>
|   |   |-TextComment 0x91e8b0 <line:107:8, col:20> Text=" Description:"
|   |   |-TextComment 0x91e8d0 <line:108:3, col:65> Text=" This API is used to insert a new node to a doubly linked list."
|   |   `-TextComment 0x91e8f0 <line:109:3> Text=" "
|   |-BlockCommandComment 0x91e950 <col:4, line:112:8> Name="attention"
|   | `-ParagraphComment 0x91eb20 <line:110:3, line:112:8>
|   |   |-TextComment 0x91e980 <line:110:3> Text=" "
|   |   |-HTMLStartTagComment 0x91e9a0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x91e9e0 <line:111:3> Text=" "
|   |   |-HTMLStartTagComment 0x91ea00 <col:4, col:7> Name="li"
|   |   |-TextComment 0x91ea40 <col:8, col:71> Text="The parameters passed in should be ensured to be legal pointers."
|   |   |-HTMLEndTagComment 0x91ea60 <col:72, col:76> Name="li"
|   |   |-TextComment 0x91ea90 <line:112:3> Text=" "
|   |   `-HTMLEndTagComment 0x91eab0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x91eb70 <line:114:3>
|   | `-TextComment 0x91eb40 <col:3> Text=" "
|   |-ParamCommandComment 0x91eb90 <col:4, line:115:3> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0x91ec40 <line:114:15, line:115:3>
|   |   |-TextComment 0x91ebf0 <line:114:15, col:75> Text="    [IN]   Doubly linked list where the new node is inserted."
|   |   `-TextComment 0x91ec10 <line:115:3> Text=" "
|   |-ParamCommandComment 0x91ec60 <col:4, col:49> [in] implicitly Param="node" ParamIndex=1
|   | `-ParagraphComment 0x920530 <col:15, col:49>
|   |   `-TextComment 0x920500 <col:15, col:49> Text="    [IN]   New node to be inserted."
|   |-ParagraphComment 0x920580 <line:117:3>
|   | `-TextComment 0x920550 <col:3> Text=" "
|   |-BlockCommandComment 0x9205a0 <col:4, line:118:3> Name="retval"
|   | `-ParagraphComment 0x920620 <line:117:11, line:118:3>
|   |   |-TextComment 0x9205d0 <line:117:11, col:15> Text=" None"
|   |   `-TextComment 0x9205f0 <line:118:3> Text=" "
|   |-BlockCommandComment 0x920640 <col:4, line:120:3> Name="par"
|   | `-ParagraphComment 0x920810 <line:118:8, line:120:3>
|   |   |-TextComment 0x920670 <line:118:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x920690 <line:119:3> Text=" "
|   |   |-HTMLStartTagComment 0x9206b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x9206f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x920730 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x920750 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x920780 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x9207b0 <line:120:3> Text=" "
|   `-BlockCommandComment 0x920830 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x920890 <col:8, col:22>
|       `-TextComment 0x920860 <col:8, col:22> Text=" LOS_ListDelete"
|-FunctionDecl 0x893008 <main/los_compiler.h:130:23, main/los_list.h:152:1> line:149:43 LOS_ListTailInsert 'void (LOS_DL_LIST *, LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0x892ef8 <col:62, col:75> col:75 used list 'LOS_DL_LIST *'
| |-ParmVarDecl 0x892f70 <col:81, col:94> col:94 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0x893258 <line:150:1, line:152:1>
| | `-CallExpr 0x8931d0 <line:151:5, col:36> 'void'
| |   |-ImplicitCastExpr 0x8931b8 <col:5> 'void (*)(LOS_DL_LIST *, LOS_DL_LIST *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0x8930b8 <col:5> 'void (LOS_DL_LIST *, LOS_DL_LIST *)' Function 0x892a48 'LOS_ListAdd' 'void (LOS_DL_LIST *, LOS_DL_LIST *)'
| |   |-ImplicitCastExpr 0x893200 <col:17, col:23> 'struct LOS_DL_LIST *' <LValueToRValue>
| |   | `-MemberExpr 0x893110 <col:17, col:23> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x8852e0
| |   |   `-ImplicitCastExpr 0x8930f8 <col:17> 'LOS_DL_LIST *' <LValueToRValue>
| |   |     `-DeclRefExpr 0x8930d8 <col:17> 'LOS_DL_LIST *' lvalue ParmVar 0x892ef8 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0x893218 <col:32> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0x893140 <col:32> 'LOS_DL_LIST *' lvalue ParmVar 0x892f70 'node' 'LOS_DL_LIST *'
| `-FullComment 0x9213a0 <line:131:3, line:147:40>
|   |-ParagraphComment 0x9209c0 <line:131:3>
|   | `-TextComment 0x920990 <col:3> Text=" "
|   |-VerbatimLineComment 0x9209e0 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0x920a50 <line:132:3>
|   | `-TextComment 0x920a20 <col:3> Text=" "
|   |-BlockCommandComment 0x920a70 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0x920ad0 <col:10, col:60>
|   |   `-TextComment 0x920aa0 <col:10, col:60> Text=" Insert a node to the tail of a doubly linked list."
|   |-ParagraphComment 0x920b20 <line:134:3>
|   | `-TextComment 0x920af0 <col:3> Text=" "
|   |-BlockCommandComment 0x920b40 <col:4, line:136:3> Name="par"
|   | `-ParagraphComment 0x920bf0 <line:134:8, line:136:3>
|   |   |-TextComment 0x920b70 <line:134:8, col:20> Text=" Description:"
|   |   |-TextComment 0x920b90 <line:135:3, col:77> Text=" This API is used to insert a new node to the tail of a doubly linked list."
|   |   `-TextComment 0x920bb0 <line:136:3> Text=" "
|   |-BlockCommandComment 0x920c10 <col:4, line:139:8> Name="attention"
|   | `-ParagraphComment 0x920de0 <line:137:3, line:139:8>
|   |   |-TextComment 0x920c40 <line:137:3> Text=" "
|   |   |-HTMLStartTagComment 0x920c60 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x920ca0 <line:138:3> Text=" "
|   |   |-HTMLStartTagComment 0x920cc0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x920d00 <col:8, col:71> Text="The parameters passed in should be ensured to be legal pointers."
|   |   |-HTMLEndTagComment 0x920d20 <col:72, col:76> Name="li"
|   |   |-TextComment 0x920d50 <line:139:3> Text=" "
|   |   `-HTMLEndTagComment 0x920d70 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x920e30 <line:141:3>
|   | `-TextComment 0x920e00 <col:3> Text=" "
|   |-ParamCommandComment 0x920e50 <col:4, line:142:3> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0x920f00 <line:141:15, line:142:3>
|   |   |-TextComment 0x920eb0 <line:141:15, col:74> Text="     [IN] Doubly linked list where the new node is inserted."
|   |   `-TextComment 0x920ed0 <line:142:3> Text=" "
|   |-ParamCommandComment 0x920f20 <col:4, col:48> [in] implicitly Param="node" ParamIndex=1
|   | `-ParagraphComment 0x920fb0 <col:15, col:48>
|   |   `-TextComment 0x920f80 <col:15, col:48> Text="     [IN] New node to be inserted."
|   |-ParagraphComment 0x921000 <line:144:3>
|   | `-TextComment 0x920fd0 <col:3> Text=" "
|   |-BlockCommandComment 0x921020 <col:4, line:145:3> Name="retval"
|   | `-ParagraphComment 0x9210a0 <line:144:11, line:145:3>
|   |   |-TextComment 0x921050 <line:144:11, col:16> Text=" None."
|   |   `-TextComment 0x921070 <line:145:3> Text=" "
|   |-BlockCommandComment 0x9210c0 <col:4, line:147:3> Name="par"
|   | `-ParagraphComment 0x921290 <line:145:8, line:147:3>
|   |   |-TextComment 0x9210f0 <line:145:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x921110 <line:146:3> Text=" "
|   |   |-HTMLStartTagComment 0x921130 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x921170 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9211b0 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9211d0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x921200 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x921230 <line:147:3> Text=" "
|   `-BlockCommandComment 0x9212b0 <col:4, col:40> Name="see"
|     `-ParagraphComment 0x921310 <col:8, col:40>
|       `-TextComment 0x9212e0 <col:8, col:40> Text=" LOS_ListAdd | LOS_ListHeadInsert"
|-FunctionDecl 0x893570 <main/los_compiler.h:130:23, main/los_list.h:176:1> line:173:43 LOS_ListHeadInsert 'void (LOS_DL_LIST *, LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0x893280 <col:62, col:75> col:75 used list 'LOS_DL_LIST *'
| |-ParmVarDecl 0x8932f8 <col:81, col:94> col:94 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0x893728 <line:174:1, line:176:1>
| | `-CallExpr 0x893698 <line:175:5, col:27> 'void'
| |   |-ImplicitCastExpr 0x893680 <col:5> 'void (*)(LOS_DL_LIST *, LOS_DL_LIST *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0x893620 <col:5> 'void (LOS_DL_LIST *, LOS_DL_LIST *)' Function 0x892a48 'LOS_ListAdd' 'void (LOS_DL_LIST *, LOS_DL_LIST *)'
| |   |-ImplicitCastExpr 0x8936c8 <col:17> 'LOS_DL_LIST *' <LValueToRValue>
| |   | `-DeclRefExpr 0x893640 <col:17> 'LOS_DL_LIST *' lvalue ParmVar 0x893280 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0x8936e0 <col:23> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0x893660 <col:23> 'LOS_DL_LIST *' lvalue ParmVar 0x8932f8 'node' 'LOS_DL_LIST *'
| `-FullComment 0x921e20 <line:155:3, line:171:40>
|   |-ParagraphComment 0x921440 <line:155:3>
|   | `-TextComment 0x921410 <col:3> Text=" "
|   |-VerbatimLineComment 0x921460 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0x9214d0 <line:156:3>
|   | `-TextComment 0x9214a0 <col:3> Text=" "
|   |-BlockCommandComment 0x9214f0 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0x921550 <col:10, col:60>
|   |   `-TextComment 0x921520 <col:10, col:60> Text=" Insert a node to the head of a doubly linked list."
|   |-ParagraphComment 0x9215a0 <line:158:3>
|   | `-TextComment 0x921570 <col:3> Text=" "
|   |-BlockCommandComment 0x9215c0 <col:4, line:160:3> Name="par"
|   | `-ParagraphComment 0x921670 <line:158:8, line:160:3>
|   |   |-TextComment 0x9215f0 <line:158:8, col:20> Text=" Description:"
|   |   |-TextComment 0x921610 <line:159:3, col:77> Text=" This API is used to insert a new node to the head of a doubly linked list."
|   |   `-TextComment 0x921630 <line:160:3> Text=" "
|   |-BlockCommandComment 0x921690 <col:4, line:163:8> Name="attention"
|   | `-ParagraphComment 0x921860 <line:161:3, line:163:8>
|   |   |-TextComment 0x9216c0 <line:161:3> Text=" "
|   |   |-HTMLStartTagComment 0x9216e0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x921720 <line:162:3> Text=" "
|   |   |-HTMLStartTagComment 0x921740 <col:4, col:7> Name="li"
|   |   |-TextComment 0x921780 <col:8, col:71> Text="The parameters passed in should be ensured to be legal pointers."
|   |   |-HTMLEndTagComment 0x9217a0 <col:72, col:76> Name="li"
|   |   |-TextComment 0x9217d0 <line:163:3> Text=" "
|   |   `-HTMLEndTagComment 0x9217f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x9218b0 <line:165:3>
|   | `-TextComment 0x921880 <col:3> Text=" "
|   |-ParamCommandComment 0x9218d0 <col:4, line:166:3> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0x921980 <line:165:15, line:166:3>
|   |   |-TextComment 0x921930 <line:165:15, col:74> Text="     [IN] Doubly linked list where the new node is inserted."
|   |   `-TextComment 0x921950 <line:166:3> Text=" "
|   |-ParamCommandComment 0x9219a0 <col:4, col:48> [in] implicitly Param="node" ParamIndex=1
|   | `-ParagraphComment 0x921a30 <col:15, col:48>
|   |   `-TextComment 0x921a00 <col:15, col:48> Text="     [IN] New node to be inserted."
|   |-ParagraphComment 0x921a80 <line:168:3>
|   | `-TextComment 0x921a50 <col:3> Text=" "
|   |-BlockCommandComment 0x921aa0 <col:4, line:169:3> Name="retval"
|   | `-ParagraphComment 0x921b20 <line:168:11, line:169:3>
|   |   |-TextComment 0x921ad0 <line:168:11, col:16> Text=" None."
|   |   `-TextComment 0x921af0 <line:169:3> Text=" "
|   |-BlockCommandComment 0x921b40 <col:4, line:171:3> Name="par"
|   | `-ParagraphComment 0x921d10 <line:169:8, line:171:3>
|   |   |-TextComment 0x921b70 <line:169:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x921b90 <line:170:3> Text=" "
|   |   |-HTMLStartTagComment 0x921bb0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x921bf0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x921c30 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x921c50 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x921c80 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x921cb0 <line:171:3> Text=" "
|   `-BlockCommandComment 0x921d30 <col:4, col:40> Name="see"
|     `-ParagraphComment 0x921d90 <col:8, col:40>
|       `-TextComment 0x921d60 <col:8, col:40> Text=" LOS_ListAdd | LOS_ListTailInsert"
|-FunctionDecl 0x8937e0 <main/los_compiler.h:130:23, main/los_list.h:204:1> line:198:43 used LOS_ListDelete 'void (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0x893750 <col:58, col:71> col:71 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0x893e18 <line:199:1, line:204:1>
| | |-BinaryOperator 0x8939b8 <line:200:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x893908 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x8852e0
| | | | `-ImplicitCastExpr 0x8938f0 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0x8938c0 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x885380
| | | |     `-ImplicitCastExpr 0x8938a8 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0x893888 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x893750 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0x8939a0 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0x893970 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x8852e0
| | |     `-ImplicitCastExpr 0x893958 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0x893938 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0x893750 'node' 'LOS_DL_LIST *'
| | |-BinaryOperator 0x893b08 <line:201:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x893a58 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x885380
| | | | `-ImplicitCastExpr 0x893a40 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0x893a10 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x8852e0
| | | |     `-ImplicitCastExpr 0x8939f8 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0x8939d8 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x893750 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0x893af0 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0x893ac0 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x885380
| | |     `-ImplicitCastExpr 0x893aa8 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0x893a88 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0x893750 'node' 'LOS_DL_LIST *'
| | |-BinaryOperator 0x893c68 <line:202:5, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x893b60 <main/los_list.h:202:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x885380
| | | | `-ImplicitCastExpr 0x893b48 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x893b28 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x893750 'node' 'LOS_DL_LIST *'
| | | `-CStyleCastExpr 0x893c40 <col:21, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'LOS_DL_LIST *' <BitCast>
| | |   `-ParenExpr 0x893c20 <col:16, col:25> 'void *'
| | |     `-CStyleCastExpr 0x893bc8 <col:17, col:24> 'void *' <NullToPointer>
| | |       `-IntegerLiteral 0x893b90 <col:24> 'int' 0
| | `-BinaryOperator 0x893dc8 <main/los_list.h:203:5, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'struct LOS_DL_LIST *' '='
| |   |-MemberExpr 0x893cc0 <main/los_list.h:203:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x8852e0
| |   | `-ImplicitCastExpr 0x893ca8 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| |   |   `-DeclRefExpr 0x893c88 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x893750 'node' 'LOS_DL_LIST *'
| |   `-CStyleCastExpr 0x893da0 <col:21, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'LOS_DL_LIST *' <BitCast>
| |     `-ParenExpr 0x893d80 <col:16, col:25> 'void *'
| |       `-CStyleCastExpr 0x893d28 <col:17, col:24> 'void *' <NullToPointer>
| |         `-IntegerLiteral 0x893cf0 <col:24> 'int' 0
| `-FullComment 0x922970 <main/los_list.h:179:3, line:196:19>
|   |-ParagraphComment 0x921ec0 <line:179:3>
|   | `-TextComment 0x921e90 <col:3> Text=" "
|   |-VerbatimLineComment 0x921ee0 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0x921f50 <line:180:3>
|   | `-TextComment 0x921f20 <col:3> Text=" "
|   |-BlockCommandComment 0x921f70 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0x921fd0 <col:10, col:60>
|   |   `-TextComment 0x921fa0 <col:10, col:60> Text=" Delete a specified node from a doubly linked list."
|   |-ParagraphComment 0x922020 <line:182:3>
|   | `-TextComment 0x921ff0 <col:3> Text=" "
|   |-BlockCommandComment 0x922040 <col:4, line:186:3> Name="par"
|   | `-ParagraphComment 0x922260 <line:182:8, line:186:3>
|   |   |-TextComment 0x922070 <line:182:8, col:20> Text=" Description:"
|   |   |-TextComment 0x922090 <line:183:3> Text=" "
|   |   |-HTMLStartTagComment 0x9220b0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9220f0 <line:184:3> Text=" "
|   |   |-HTMLStartTagComment 0x922110 <col:4, col:7> Name="li"
|   |   |-TextComment 0x922150 <col:8, col:77> Text="This API is used to delete a specified node from a doubly linked list."
|   |   |-HTMLEndTagComment 0x922170 <col:78, col:82> Name="li"
|   |   |-TextComment 0x9221a0 <line:185:3> Text=" "
|   |   |-HTMLEndTagComment 0x9221c0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x9221f0 <line:186:3> Text=" "
|   |-BlockCommandComment 0x922280 <col:4, line:189:8> Name="attention"
|   | `-ParagraphComment 0x922450 <line:187:3, line:189:8>
|   |   |-TextComment 0x9222b0 <line:187:3> Text=" "
|   |   |-HTMLStartTagComment 0x9222d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x922310 <line:188:3> Text=" "
|   |   |-HTMLStartTagComment 0x922330 <col:4, col:7> Name="li"
|   |   |-TextComment 0x922370 <col:8, col:71> Text="The parameter passed in should be ensured to be a legal pointer."
|   |   |-HTMLEndTagComment 0x922390 <col:72, col:76> Name="li"
|   |   |-TextComment 0x9223c0 <line:189:3> Text=" "
|   |   `-HTMLEndTagComment 0x9223e0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x9224a0 <line:191:3>
|   | `-TextComment 0x922470 <col:3> Text=" "
|   |-ParamCommandComment 0x9224f0 <col:4, col:42> [in] implicitly Param="node" ParamIndex=0
|   | `-ParagraphComment 0x922580 <col:15, col:42>
|   |   `-TextComment 0x922550 <col:15, col:42> Text="    [IN] Node to be deleted."
|   |-ParagraphComment 0x9225d0 <line:193:3>
|   | `-TextComment 0x9225a0 <col:3> Text=" "
|   |-BlockCommandComment 0x9225f0 <col:4, line:194:3> Name="retval"
|   | `-ParagraphComment 0x922670 <line:193:11, line:194:3>
|   |   |-TextComment 0x922620 <line:193:11, col:16> Text=" None."
|   |   `-TextComment 0x922640 <line:194:3> Text=" "
|   |-BlockCommandComment 0x922690 <col:4, line:196:3> Name="par"
|   | `-ParagraphComment 0x922860 <line:194:8, line:196:3>
|   |   |-TextComment 0x9226c0 <line:194:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9226e0 <line:195:3> Text=" "
|   |   |-HTMLStartTagComment 0x922700 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x922740 <col:8, col:11> Name="li"
|   |   |-TextComment 0x922780 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9227a0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x9227d0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x922800 <line:196:3> Text=" "
|   `-BlockCommandComment 0x922880 <col:4, col:19> Name="see"
|     `-ParagraphComment 0x9228e0 <col:8, col:19>
|       `-TextComment 0x9228b0 <col:8, col:19> Text=" LOS_ListAdd"
|-FunctionDecl 0x893f48 <main/los_compiler.h:130:23, main/los_list.h:230:1> line:227:43 used LOS_ListEmpty 'BOOL (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0x893e58 <col:57, col:70> col:70 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0x894238 <line:228:1, line:230:1>
| | `-ReturnStmt 0x894140 <line:229:5, col:40>
| |   `-CStyleCastExpr 0x894118 <col:12, col:40> 'BOOL':'unsigned int' <IntegralCast>
| |     `-ParenExpr 0x8940f8 <col:18, col:40> 'int'
| |       `-BinaryOperator 0x8940a8 <col:19, col:36> 'int' '=='
| |         |-ImplicitCastExpr 0x894078 <col:19, col:25> 'struct LOS_DL_LIST *' <LValueToRValue>
| |         | `-MemberExpr 0x894028 <col:19, col:25> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x885380
| |         |   `-ImplicitCastExpr 0x894010 <col:19> 'LOS_DL_LIST *' <LValueToRValue>
| |         |     `-DeclRefExpr 0x893ff0 <col:19> 'LOS_DL_LIST *' lvalue ParmVar 0x893e58 'node' 'LOS_DL_LIST *'
| |         `-ImplicitCastExpr 0x894090 <col:36> 'LOS_DL_LIST *' <LValueToRValue>
| |           `-DeclRefExpr 0x894058 <col:36> 'LOS_DL_LIST *' lvalue ParmVar 0x893e58 'node' 'LOS_DL_LIST *'
| `-FullComment 0x923500 <line:207:3, line:225:7>
|   |-ParagraphComment 0x922a10 <line:207:3>
|   | `-TextComment 0x9229e0 <col:3> Text=" "
|   |-VerbatimLineComment 0x922a30 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0x922aa0 <line:208:3>
|   | `-TextComment 0x922a70 <col:3> Text=" "
|   |-BlockCommandComment 0x922ac0 <col:4, col:67> Name="brief"
|   | `-ParagraphComment 0x922b20 <col:10, col:67>
|   |   `-TextComment 0x922af0 <col:10, col:67> Text=" Identify whether a specified doubly linked list is empty."
|   |-ParagraphComment 0x922b70 <line:210:3>
|   | `-TextComment 0x922b40 <col:3> Text=" "
|   |-BlockCommandComment 0x922b90 <col:4, line:214:3> Name="par"
|   | `-ParagraphComment 0x922db0 <line:210:8, line:214:3>
|   |   |-TextComment 0x922bc0 <line:210:8, col:20> Text=" Description:"
|   |   |-TextComment 0x922be0 <line:211:3> Text=" "
|   |   |-HTMLStartTagComment 0x922c00 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x922c40 <line:212:3> Text=" "
|   |   |-HTMLStartTagComment 0x922c60 <col:4, col:7> Name="li"
|   |   |-TextComment 0x922ca0 <col:8, col:72> Text="This API is used to return whether a doubly linked list is empty."
|   |   |-HTMLEndTagComment 0x922cc0 <col:73, col:77> Name="li"
|   |   |-TextComment 0x922cf0 <line:213:3> Text=" "
|   |   |-HTMLEndTagComment 0x922d10 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x922d40 <line:214:3> Text=" "
|   |-BlockCommandComment 0x922dd0 <col:4, line:217:8> Name="attention"
|   | `-ParagraphComment 0x922fa0 <line:215:3, line:217:8>
|   |   |-TextComment 0x922e00 <line:215:3> Text=" "
|   |   |-HTMLStartTagComment 0x922e20 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x922e60 <line:216:3> Text=" "
|   |   |-HTMLStartTagComment 0x922e80 <col:4, col:7> Name="li"
|   |   |-TextComment 0x922ec0 <col:8, col:71> Text="The parameter passed in should be ensured to be a legal pointer."
|   |   |-HTMLEndTagComment 0x922ee0 <col:72, col:76> Name="li"
|   |   |-TextComment 0x922f10 <line:217:3> Text=" "
|   |   `-HTMLEndTagComment 0x922f30 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x922ff0 <line:219:3>
|   | `-TextComment 0x922fc0 <col:3> Text=" "
|   |-ParamCommandComment 0x923010 <col:4, col:40> [in] implicitly Param="list"
|   | `-ParagraphComment 0x9230a0 <col:15, col:40>
|   |   `-TextComment 0x923070 <col:15, col:40> Text="  [IN] Doubly linked node."
|   |-ParagraphComment 0x9230f0 <line:221:3>
|   | `-TextComment 0x9230c0 <col:3> Text=" "
|   |-BlockCommandComment 0x923110 <col:4, line:222:3> Name="retval"
|   | `-ParagraphComment 0x923190 <line:221:11, line:222:3>
|   |   |-TextComment 0x923140 <line:221:11, col:48> Text=" TRUE The doubly linked list is empty."
|   |   `-TextComment 0x923160 <line:222:3> Text=" "
|   |-BlockCommandComment 0x9231b0 <col:4, line:223:3> Name="retval"
|   | `-ParagraphComment 0x923230 <line:222:11, line:223:3>
|   |   |-TextComment 0x9231e0 <line:222:11, col:53> Text=" FALSE The doubly linked list is not empty."
|   |   `-TextComment 0x923200 <line:223:3> Text=" "
|   |-BlockCommandComment 0x923250 <col:4, line:225:3> Name="par"
|   | `-ParagraphComment 0x923420 <line:223:8, line:225:3>
|   |   |-TextComment 0x923280 <line:223:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9232a0 <line:224:3> Text=" "
|   |   |-HTMLStartTagComment 0x9232c0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x923300 <col:8, col:11> Name="li"
|   |   |-TextComment 0x923340 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x923360 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x923390 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x9233c0 <line:225:3> Text=" "
|   `-BlockCommandComment 0x923440 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x923470 <<invalid sloc>>
|-FunctionDecl 0x8942f0 <main/los_compiler.h:130:23, main/los_list.h:356:1> line:351:43 LOS_ListDelInit 'void (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0x894260 <col:59, col:72> col:72 used list 'LOS_DL_LIST *'
| |-CompoundStmt 0x896538 <line:352:1, line:356:1>
| | |-BinaryOperator 0x8944c8 <line:353:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x894418 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x8852e0
| | | | `-ImplicitCastExpr 0x894400 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0x8943d0 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x885380
| | | |     `-ImplicitCastExpr 0x8943b8 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0x894398 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x894260 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0x8944b0 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0x894480 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x8852e0
| | |     `-ImplicitCastExpr 0x894468 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0x894448 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0x894260 'list' 'LOS_DL_LIST *'
| | |-BinaryOperator 0x896100 <line:354:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0x896050 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x885380
| | | | `-ImplicitCastExpr 0x894550 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0x894520 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0x8852e0
| | | |     `-ImplicitCastExpr 0x894508 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0x8944e8 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0x894260 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0x8960e8 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0x8960b8 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x885380
| | |     `-ImplicitCastExpr 0x8960a0 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0x896080 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0x894260 'list' 'LOS_DL_LIST *'
| | `-CallExpr 0x8961d0 <line:355:5, col:22> 'void'
| |   |-ImplicitCastExpr 0x8961b8 <col:5> 'void (*)(LOS_DL_LIST *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0x896120 <col:5> 'void (LOS_DL_LIST *)' Function 0x892608 'LOS_ListInit' 'void (LOS_DL_LIST *)'
| |   `-ImplicitCastExpr 0x8961f8 <col:18> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0x896140 <col:18> 'LOS_DL_LIST *' lvalue ParmVar 0x894260 'list' 'LOS_DL_LIST *'
| `-FullComment 0x923e80 <line:334:3, line:349:7>
|   |-ParagraphComment 0x9235a0 <line:334:3>
|   | `-TextComment 0x923570 <col:3> Text=" "
|   |-VerbatimLineComment 0x9235c0 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0x923630 <line:335:3>
|   | `-TextComment 0x923600 <col:3> Text=" "
|   |-BlockCommandComment 0x923650 <col:4, col:49> Name="brief"
|   | `-ParagraphComment 0x9236b0 <col:10, col:49>
|   |   `-TextComment 0x923680 <col:10, col:49> Text=" Delete initialize a doubly linked list."
|   |-ParagraphComment 0x923700 <line:337:3>
|   | `-TextComment 0x9236d0 <col:3> Text=" "
|   |-BlockCommandComment 0x923720 <col:4, line:339:3> Name="par"
|   | `-ParagraphComment 0x9237d0 <line:337:8, line:339:3>
|   |   |-TextComment 0x923750 <line:337:8, col:20> Text=" Description:"
|   |   |-TextComment 0x923770 <line:338:3, col:62> Text=" This API is used to delete initialize a doubly linked list."
|   |   `-TextComment 0x923790 <line:339:3> Text=" "
|   |-BlockCommandComment 0x9237f0 <col:4, line:342:8> Name="attention"
|   | `-ParagraphComment 0x9239c0 <line:340:3, line:342:8>
|   |   |-TextComment 0x923820 <line:340:3> Text=" "
|   |   |-HTMLStartTagComment 0x923840 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x923880 <line:341:3> Text=" "
|   |   |-HTMLStartTagComment 0x9238a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9238e0 <col:8, col:71> Text="The parameter passed in should be ensured to be s legal pointer."
|   |   |-HTMLEndTagComment 0x923900 <col:72, col:76> Name="li"
|   |   |-TextComment 0x923930 <line:342:3> Text=" "
|   |   `-HTMLEndTagComment 0x923950 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x923a10 <line:344:3>
|   | `-TextComment 0x9239e0 <col:3> Text=" "
|   |-ParamCommandComment 0x923a30 <col:4, col:42> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0x923ac0 <col:15, col:42>
|   |   `-TextComment 0x923a90 <col:15, col:42> Text="    [IN] Doubly linked list."
|   |-ParagraphComment 0x923b10 <line:346:3>
|   | `-TextComment 0x923ae0 <col:3> Text=" "
|   |-BlockCommandComment 0x923b30 <col:4, line:347:3> Name="retval"
|   | `-ParagraphComment 0x923bb0 <line:346:11, line:347:3>
|   |   |-TextComment 0x923b60 <line:346:11, col:16> Text=" None."
|   |   `-TextComment 0x923b80 <line:347:3> Text=" "
|   |-BlockCommandComment 0x923bd0 <col:4, line:349:3> Name="par"
|   | `-ParagraphComment 0x923da0 <line:347:8, line:349:3>
|   |   |-TextComment 0x923c00 <line:347:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x923c20 <line:348:3> Text=" "
|   |   |-HTMLStartTagComment 0x923c40 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x923c80 <col:8, col:11> Name="li"
|   |   |-TextComment 0x923cc0 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x923ce0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x923d10 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x923d40 <line:349:3> Text=" "
|   `-BlockCommandComment 0x923dc0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x923df0 <<invalid sloc>>
|-RecordDecl 0x896560 <main/los_event.h:171:9, line:175:1> line:171:16 struct tagEvent definition
| |-FullComment 0x923ff0 <line:168:3, line:169:26>
| | |-ParagraphComment 0x923f20 <line:168:3>
| | | `-TextComment 0x923ef0 <col:3> Text=" "
| | |-VerbatimLineComment 0x923f40 <col:4, col:22> Text=" los_event"
| | `-ParagraphComment 0x923fb0 <line:169:3, col:26>
| |   `-TextComment 0x923f80 <col:3, col:26> Text=" Event control structure"
| |-FieldDecl 0x896610 <line:172:5, col:12> col:12 uwEventID 'UINT32':'unsigned int'
| | `-FullComment 0x9240e0 <col:34, line:173:90>
| |   `-ParagraphComment 0x9240b0 <line:172:34, line:173:90>
| |     |-TextComment 0x924060 <line:172:34, col:72> Text=" Event mask in the event control block,"
| |     `-TextComment 0x924080 <line:173:1, col:90> Text="                                  indicating the event that has been logically processed. "
| `-FieldDecl 0x896698 <line:174:5, col:17> col:17 stEventList 'LOS_DL_LIST':'struct LOS_DL_LIST'
|   `-FullComment 0x9241b0 <col:34, col:66>
|     `-ParagraphComment 0x924180 <col:34, col:66>
|       `-TextComment 0x924150 <col:34, col:66> Text=" Event control block linked list "
|-TypedefDecl 0x896778 <line:171:1, line:175:3> col:3 referenced EVENT_CB_S 'struct tagEvent':'struct tagEvent'
| |-ElaboratedType 0x896720 'struct tagEvent' sugar
| | `-RecordType 0x8965e0 'struct tagEvent'
| |   `-Record 0x896560 'tagEvent'
| `-FullComment 0x924320 <line:168:3, line:169:26>
|   |-ParagraphComment 0x924250 <line:168:3>
|   | `-TextComment 0x924220 <col:3> Text=" "
|   |-VerbatimLineComment 0x924270 <col:4, col:22> Text=" los_event"
|   `-ParagraphComment 0x9242e0 <line:169:3, col:26>
|     `-TextComment 0x9242b0 <col:3, col:26> Text=" Event control structure"
|-TypedefDecl 0x896850 <line:171:1, line:175:16> col:16 referenced PEVENT_CB_S 'struct tagEvent *'
| |-PointerType 0x896800 'struct tagEvent *'
| | `-ElaboratedType 0x896720 'struct tagEvent' sugar
| |   `-RecordType 0x8965e0 'struct tagEvent'
| |     `-Record 0x896560 'tagEvent'
| `-FullComment 0x924490 <line:168:3, line:169:26>
|   |-ParagraphComment 0x9243c0 <line:168:3>
|   | `-TextComment 0x924390 <col:3> Text=" "
|   |-VerbatimLineComment 0x9243e0 <col:4, col:22> Text=" los_event"
|   `-ParagraphComment 0x924450 <line:169:3, col:26>
|     `-TextComment 0x924420 <col:3, col:26> Text=" Event control structure"
|-FunctionDecl 0x896a28 <line:195:1, col:48> col:15 LOS_EventInit 'UINT32 (PEVENT_CB_S)' extern
| |-ParmVarDecl 0x896930 <col:29, col:41> col:41 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| `-FullComment 0x926740 <line:177:3, line:193:22>
|   |-ParagraphComment 0x925d90 <line:177:3>
|   | `-TextComment 0x925d60 <col:3> Text=" "
|   |-VerbatimLineComment 0x925db0 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0x925e20 <line:178:3>
|   | `-TextComment 0x925df0 <col:3> Text=" "
|   |-BlockCommandComment 0x925e40 <col:4, col:44> Name="brief"
|   | `-ParagraphComment 0x925ea0 <col:10, col:44>
|   |   `-TextComment 0x925e70 <col:10, col:44> Text=" Initialize an event control block."
|   |-ParagraphComment 0x925ef0 <line:180:3>
|   | `-TextComment 0x925ec0 <col:3> Text=" "
|   |-BlockCommandComment 0x925f10 <col:4, line:182:3> Name="par"
|   | `-ParagraphComment 0x925fc0 <line:180:8, line:182:3>
|   |   |-TextComment 0x925f40 <line:180:8, col:20> Text=" Description:"
|   |   |-TextComment 0x925f60 <line:181:3, col:80> Text=" This API is used to initialize the event control block pointed to by eventCB."
|   |   `-TextComment 0x925f80 <line:182:3> Text=" "
|   |-BlockCommandComment 0x925fe0 <col:4, line:185:8> Name="attention"
|   | `-ParagraphComment 0x9261b0 <line:183:3, line:185:8>
|   |   |-TextComment 0x926010 <line:183:3> Text=" "
|   |   |-HTMLStartTagComment 0x926030 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x926070 <line:184:3> Text=" "
|   |   |-HTMLStartTagComment 0x926090 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9260d0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x9260f0 <col:13, col:17> Name="li"
|   |   |-TextComment 0x926120 <line:185:3> Text=" "
|   |   `-HTMLEndTagComment 0x926140 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x926200 <line:187:3>
|   | `-TextComment 0x9261d0 <col:3> Text=" "
|   |-ParamCommandComment 0x926220 <col:4, col:80> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0x9262b0 <col:18, col:80>
|   |   `-TextComment 0x926280 <col:18, col:80> Text=" [IN/OUT] Pointer to the event control block to be initialized."
|   |-ParagraphComment 0x926300 <line:189:3>
|   | `-TextComment 0x9262d0 <col:3> Text=" "
|   |-BlockCommandComment 0x926320 <col:4, line:190:3> Name="retval"
|   | `-ParagraphComment 0x9263a0 <line:189:11, line:190:3>
|   |   |-TextComment 0x926350 <line:189:11, col:51> Text=" #LOS_ERRNO_EVENT_PTR_NULL  Null pointer."
|   |   `-TextComment 0x926370 <line:190:3> Text=" "
|   |-BlockCommandComment 0x9263c0 <col:4, line:191:3> Name="retval"
|   | `-ParagraphComment 0x926440 <line:190:11, line:191:3>
|   |   |-TextComment 0x9263f0 <line:190:11, col:90> Text=" #LOS_OK                    The event control block is successfully initialized."
|   |   `-TextComment 0x926410 <line:191:3> Text=" "
|   |-BlockCommandComment 0x926460 <col:4, line:193:3> Name="par"
|   | `-ParagraphComment 0x926630 <line:191:8, line:193:3>
|   |   |-TextComment 0x926490 <line:191:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9264b0 <line:192:3> Text=" "
|   |   |-HTMLStartTagComment 0x9264d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x926510 <col:8, col:11> Name="li"
|   |   |-TextComment 0x926550 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x926570 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x9265a0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x9265d0 <line:193:3> Text=" "
|   `-BlockCommandComment 0x926650 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x9266b0 <col:8, col:22>
|       `-TextComment 0x926680 <col:8, col:22> Text=" LOS_EventClear"
|-FunctionDecl 0x896d48 <line:221:1, col:75> col:15 LOS_EventPoll 'UINT32 (UINT32 *, UINT32, UINT32)' extern
| |-ParmVarDecl 0x896b38 <col:29, col:37> col:37 eventID 'UINT32 *'
| |-ParmVarDecl 0x896bb0 <col:46, col:53> col:53 eventMask 'UINT32':'unsigned int'
| |-ParmVarDecl 0x896c28 <col:64, col:71> col:71 mode 'UINT32':'unsigned int'
| `-FullComment 0x927460 <line:198:3, line:219:38>
|   |-ParagraphComment 0x9267e0 <line:198:3>
|   | `-TextComment 0x9267b0 <col:3> Text=" "
|   |-VerbatimLineComment 0x926800 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0x926870 <line:199:3>
|   | `-TextComment 0x926840 <col:3> Text=" "
|   |-BlockCommandComment 0x926890 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0x9268f0 <col:10, col:52>
|   |   `-TextComment 0x9268c0 <col:10, col:52> Text=" Obtain an event specified by the event ID."
|   |-ParagraphComment 0x926940 <line:201:3>
|   | `-TextComment 0x926910 <col:3> Text=" "
|   |-BlockCommandComment 0x926960 <col:4, line:204:3> Name="par"
|   | `-ParagraphComment 0x926a30 <line:201:8, line:204:3>
|   |   |-TextComment 0x926990 <line:201:8, col:20> Text=" Description:"
|   |   |-TextComment 0x9269b0 <line:202:3, col:112> Text=" This API is used to check whether an event expected by the user occurs according to the event ID, event mask,"
|   |   |-TextComment 0x9269d0 <line:203:3, col:122> Text=" and event reading mode, and process the event based on the event reading mode. The event ID must point to valid memory."
|   |   `-TextComment 0x9269f0 <line:204:3> Text=" "
|   |-BlockCommandComment 0x926a50 <col:4, line:208:8> Name="attention"
|   | `-ParagraphComment 0x926cf0 <line:205:3, line:208:8>
|   |   |-TextComment 0x926a80 <line:205:3> Text=" "
|   |   |-HTMLStartTagComment 0x926aa0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x926ae0 <line:206:3> Text=" "
|   |   |-HTMLStartTagComment 0x926b00 <col:4, col:7> Name="li"
|   |   |-TextComment 0x926b40 <col:8, col:68> Text="When the mode is LOS_WAITMODE_CLR, the eventID is passed-out."
|   |   |-HTMLEndTagComment 0x926b60 <col:69, col:73> Name="li"
|   |   |-TextComment 0x926b90 <line:207:3> Text=" "
|   |   |-HTMLStartTagComment 0x926bb0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x926bf0 <col:8, col:42> Text="Otherwise the eventID is passed-in."
|   |   |-HTMLEndTagComment 0x926c10 <col:43, col:47> Name="li"
|   |   |-TextComment 0x926c40 <line:208:3> Text=" "
|   |   `-HTMLEndTagComment 0x926c60 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x926d40 <line:210:3>
|   | `-TextComment 0x926d10 <col:3> Text=" "
|   |-ParamCommandComment 0x926d60 <col:4, line:211:3> [in] implicitly Param="eventID" ParamIndex=0
|   | `-ParagraphComment 0x926e10 <line:210:18, line:211:3>
|   |   |-TextComment 0x926dc0 <line:210:18, col:77> Text="      [IN/OUT] Pointer to the ID of the event to be checked."
|   |   `-TextComment 0x926de0 <line:211:3> Text=" "
|   |-ParamCommandComment 0x926e30 <col:4, line:213:3> [in] implicitly Param="eventMask" ParamIndex=1
|   | `-ParagraphComment 0x926f10 <line:211:20, line:213:3>
|   |   |-TextComment 0x926e90 <line:211:20, col:112> Text="    [IN] Mask of the event expected to occur by the user, indicating the event obtained after"
|   |   |-TextComment 0x926eb0 <line:212:3, col:68> Text=" it is logically processed that matches the ID pointed to by mode."
|   |   `-TextComment 0x926ed0 <line:213:3> Text=" "
|   |-ParamCommandComment 0x926f30 <col:4, col:118> [in] implicitly Param="mode" ParamIndex=2
|   | `-ParagraphComment 0x926fc0 <col:15, col:118>
|   |   `-TextComment 0x926f90 <col:15, col:118> Text="         [IN] Event reading mode. The modes include LOS_WAITMODE_AND, LOS_WAITMODE_OR, LOS_WAITMODE_CLR."
|   |-ParagraphComment 0x927010 <line:215:3>
|   | `-TextComment 0x926fe0 <col:3> Text=" "
|   |-BlockCommandComment 0x927030 <col:4, line:216:3> Name="retval"
|   | `-ParagraphComment 0x9270b0 <line:215:11, line:216:3>
|   |   |-TextComment 0x927060 <line:215:11, col:71> Text=" 0             The event expected by the user does not occur."
|   |   `-TextComment 0x927080 <line:216:3> Text=" "
|   |-BlockCommandComment 0x9270d0 <col:4, line:217:3> Name="retval"
|   | `-ParagraphComment 0x927150 <line:216:11, line:217:3>
|   |   |-TextComment 0x927100 <line:216:11, col:63> Text=" #UINT32       The event expected by the user occurs."
|   |   `-TextComment 0x927120 <line:217:3> Text=" "
|   |-BlockCommandComment 0x927170 <col:4, line:219:3> Name="par"
|   | `-ParagraphComment 0x927340 <line:217:8, line:219:3>
|   |   |-TextComment 0x9271a0 <line:217:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9271c0 <line:218:3> Text=" "
|   |   |-HTMLStartTagComment 0x9271e0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x927220 <col:8, col:11> Name="li"
|   |   |-TextComment 0x927260 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x927280 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x9272b0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x9272e0 <line:219:3> Text=" "
|   `-BlockCommandComment 0x927360 <col:4, col:38> Name="see"
|     `-ParagraphComment 0x9273c0 <col:8, col:38>
|       `-TextComment 0x927390 <col:8, col:38> Text=" LOS_EventRead | LOS_EventWrite"
|-FunctionDecl 0x89a278 <line:255:1, col:95> col:15 LOS_EventRead 'UINT32 (PEVENT_CB_S, UINT32, UINT32, UINT32)' extern
| |-ParmVarDecl 0x896e38 <col:29, col:41> col:41 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0x896eb0 <col:50, col:57> col:57 eventMask 'UINT32':'unsigned int'
| |-ParmVarDecl 0x896f28 <col:68, col:75> col:75 mode 'UINT32':'unsigned int'
| |-ParmVarDecl 0x896fa0 <col:81, col:88> col:88 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x928620 <line:224:3, line:253:38>
|   |-ParagraphComment 0x927500 <line:224:3>
|   | `-TextComment 0x9274d0 <col:3> Text=" "
|   |-VerbatimLineComment 0x927520 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0x927590 <line:225:3>
|   | `-TextComment 0x927560 <col:3> Text=" "
|   |-BlockCommandComment 0x9275b0 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0x927610 <col:10, col:24>
|   |   `-TextComment 0x9275e0 <col:10, col:24> Text=" Read an event."
|   |-ParagraphComment 0x927660 <line:227:3>
|   | `-TextComment 0x927630 <col:3> Text=" "
|   |-BlockCommandComment 0x927680 <col:4, line:231:3> Name="par"
|   | `-ParagraphComment 0x9277b0 <line:227:8, line:231:3>
|   |   |-TextComment 0x9276b0 <line:227:8, col:20> Text=" Description:"
|   |   |-TextComment 0x9276d0 <line:228:3, col:127> Text=" This API is used to block or schedule a task that reads an event of which the event control block, event mask, reading mode,"
|   |   |-TextComment 0x9276f0 <line:229:3, col:41> Text=" and timeout information are specified."
|   |   |-TextComment 0x927710 <line:230:3> Text=" "
|   |   |-HTMLEndTagComment 0x927730 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x927760 <line:231:3> Text=" "
|   |-BlockCommandComment 0x9277d0 <col:4, line:235:8> Name="attention"
|   | `-ParagraphComment 0x9279c0 <line:232:3, line:235:8>
|   |   |-TextComment 0x927800 <line:232:3> Text=" "
|   |   |-HTMLStartTagComment 0x927820 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x927860 <line:233:3> Text=" "
|   |   |-HTMLStartTagComment 0x927880 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9278c0 <col:8, col:119> Text="An error code and an event return value can be same. To differentiate the error code and return value, bit 25 of"
|   |   |-TextComment 0x9278e0 <line:234:3, col:42> Text=" the event mask is forbidden to be used."
|   |   |-HTMLEndTagComment 0x927900 <col:43, col:47> Name="li"
|   |   |-TextComment 0x927930 <line:235:3> Text=" "
|   |   `-HTMLEndTagComment 0x927950 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x927a10 <line:237:3>
|   | `-TextComment 0x9279e0 <col:3> Text=" "
|   |-ParamCommandComment 0x927a30 <col:4, line:238:3> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0x927ae0 <line:237:18, line:238:3>
|   |   |-TextComment 0x927a90 <line:237:18, col:124> Text="      [IN/OUT] Pointer to the event control block to be checked. This parameter must point to valid memory."
|   |   `-TextComment 0x927ab0 <line:238:3> Text=" "
|   |-ParamCommandComment 0x927b00 <col:4, line:240:3> [in] implicitly Param="eventMask" ParamIndex=1
|   | `-ParagraphComment 0x927be0 <line:238:20, line:240:3>
|   |   |-TextComment 0x927b60 <line:238:20, col:116> Text="    [IN]     Mask of the event expected to occur by the user, indicating the event obtained after"
|   |   |-TextComment 0x927b80 <line:239:3, col:100> Text="                              it is logically processed that matches the ID pointed to by eventID."
|   |   `-TextComment 0x927ba0 <line:240:3> Text=" "
|   |-ParamCommandComment 0x927c00 <col:4, line:241:3> [in] implicitly Param="mode" ParamIndex=2
|   | `-ParagraphComment 0x927cb0 <line:240:15, line:241:3>
|   |   |-TextComment 0x927c60 <line:240:15, col:51> Text="         [IN]     Event reading mode."
|   |   `-TextComment 0x927c80 <line:241:3> Text=" "
|   |-ParamCommandComment 0x927cd0 <col:4, col:79> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0x927d80 <col:18, col:79>
|   |   `-TextComment 0x927d50 <col:18, col:79> Text="      [IN]     Timeout interval of event reading (unit: Tick)."
|   |-ParagraphComment 0x927dd0 <line:243:3>
|   | `-TextComment 0x927da0 <col:3> Text=" "
|   |-BlockCommandComment 0x927df0 <col:4, line:244:3> Name="retval"
|   | `-ParagraphComment 0x927e70 <line:243:11, line:244:3>
|   |   |-TextComment 0x927e20 <line:243:11, col:123> Text=" #LOS_ERRNO_EVENT_SETBIT_INVALID     Bit 25 of the event mask cannot be set because it is set to an error number."
|   |   `-TextComment 0x927e40 <line:244:3> Text=" "
|   |-BlockCommandComment 0x927e90 <col:4, line:245:3> Name="retval"
|   | `-ParagraphComment 0x927f10 <line:244:11, line:245:3>
|   |   |-TextComment 0x927ec0 <line:244:11, col:93> Text=" #LOS_ERRNO_EVENT_EVENTMASK_INVALID  The passed-in event reading mode is incorrect."
|   |   `-TextComment 0x927ee0 <line:245:3> Text=" "
|   |-BlockCommandComment 0x927f30 <col:4, line:246:3> Name="retval"
|   | `-ParagraphComment 0x927fb0 <line:245:11, line:246:3>
|   |   |-TextComment 0x927f60 <line:245:11, col:91> Text=" #LOS_ERRNO_EVENT_READ_IN_INTERRUPT  The event is being read during an interrupt."
|   |   `-TextComment 0x927f80 <line:246:3> Text=" "
|   |-BlockCommandComment 0x927fd0 <col:4, line:247:3> Name="retval"
|   | `-ParagraphComment 0x928050 <line:246:11, line:247:3>
|   |   |-TextComment 0x928000 <line:246:11, col:73> Text=" #LOS_ERRNO_EVENT_FLAGS_INVALID      The event mode is invalid."
|   |   `-TextComment 0x928020 <line:247:3> Text=" "
|   |-BlockCommandComment 0x928070 <col:4, line:248:3> Name="retval"
|   | `-ParagraphComment 0x9280f0 <line:247:11, line:248:3>
|   |   |-TextComment 0x9280a0 <line:247:11, col:80> Text=" #LOS_ERRNO_EVENT_READ_IN_LOCK       The event reading task is locked."
|   |   `-TextComment 0x9280c0 <line:248:3> Text=" "
|   |-BlockCommandComment 0x928110 <col:4, line:249:3> Name="retval"
|   | `-ParagraphComment 0x928190 <line:248:11, line:249:3>
|   |   |-TextComment 0x928140 <line:248:11, col:77> Text=" #LOS_ERRNO_EVENT_PTR_NULL           The passed-in pointer is null."
|   |   `-TextComment 0x928160 <line:249:3> Text=" "
|   |-BlockCommandComment 0x9281b0 <col:4, line:250:3> Name="retval"
|   | `-ParagraphComment 0x928230 <line:249:11, line:250:3>
|   |   |-TextComment 0x9281e0 <line:249:11, col:93> Text=" 0                                   The event expected by the user does not occur."
|   |   `-TextComment 0x928200 <line:250:3> Text=" "
|   |-BlockCommandComment 0x928250 <col:4, line:251:3> Name="retval"
|   | `-ParagraphComment 0x9282d0 <line:250:11, line:251:3>
|   |   |-TextComment 0x928280 <line:250:11, col:85> Text=" #UINT32                             The event expected by the user occurs."
|   |   `-TextComment 0x9282a0 <line:251:3> Text=" "
|   |-BlockCommandComment 0x9282f0 <col:4, line:253:3> Name="par"
|   | `-ParagraphComment 0x9284c0 <line:251:8, line:253:3>
|   |   |-TextComment 0x928320 <line:251:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x928340 <line:252:3> Text=" "
|   |   |-HTMLStartTagComment 0x928360 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x9283a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9283e0 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x928400 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x928430 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x928460 <line:253:3> Text=" "
|   `-BlockCommandComment 0x9284e0 <col:4, col:38> Name="see"
|     `-ParagraphComment 0x928540 <col:8, col:38>
|       `-TextComment 0x928510 <col:8, col:38> Text=" LOS_EventPoll | LOS_EventWrite"
|-FunctionDecl 0x89a508 <line:282:1, col:64> col:15 LOS_EventWrite 'UINT32 (PEVENT_CB_S, UINT32)' extern
| |-ParmVarDecl 0x89a378 <col:30, col:42> col:42 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0x89a3f0 <col:51, col:58> col:58 events 'UINT32':'unsigned int'
| `-FullComment 0x929290 <line:258:3, line:280:37>
|   |-ParagraphComment 0x9286c0 <line:258:3>
|   | `-TextComment 0x928690 <col:3> Text=" "
|   |-VerbatimLineComment 0x9286e0 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0x928750 <line:259:3>
|   | `-TextComment 0x928720 <col:3> Text=" "
|   |-BlockCommandComment 0x928770 <col:4, col:25> Name="brief"
|   | `-ParagraphComment 0x9287d0 <col:10, col:25>
|   |   `-TextComment 0x9287a0 <col:10, col:25> Text=" Write an event."
|   |-ParagraphComment 0x928820 <line:261:3>
|   | `-TextComment 0x9287f0 <col:3> Text=" "
|   |-BlockCommandComment 0x928840 <col:4, line:264:3> Name="par"
|   | `-ParagraphComment 0x928910 <line:261:8, line:264:3>
|   |   |-TextComment 0x928870 <line:261:8, col:20> Text=" Description:"
|   |   |-TextComment 0x928890 <line:262:3, col:103> Text=" This API is used to write an event specified by the passed-in event mask into an event control block"
|   |   |-TextComment 0x9288b0 <line:263:3, col:25> Text=" pointed to by eventCB."
|   |   `-TextComment 0x9288d0 <line:264:3> Text=" "
|   |-BlockCommandComment 0x928930 <col:4, line:268:8> Name="attention"
|   | `-ParagraphComment 0x928b20 <line:265:3, line:268:8>
|   |   |-TextComment 0x928960 <line:265:3> Text=" "
|   |   |-HTMLStartTagComment 0x928980 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9289c0 <line:266:3> Text=" "
|   |   |-HTMLStartTagComment 0x9289e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x928a20 <col:8, col:109> Text="To determine whether the LOS_EventRead API returns an event or an error code, bit 25 of the event mask"
|   |   |-TextComment 0x928a40 <line:267:3, col:27> Text=" is forbidden to be used."
|   |   |-HTMLEndTagComment 0x928a60 <col:28, col:32> Name="li"
|   |   |-TextComment 0x928a90 <line:268:3> Text=" "
|   |   `-HTMLEndTagComment 0x928ab0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x928b70 <line:270:3>
|   | `-TextComment 0x928b40 <col:3> Text=" "
|   |-ParamCommandComment 0x928b90 <col:4, line:272:3> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0x928c70 <line:270:18, line:272:3>
|   |   |-TextComment 0x928bf0 <line:270:18, col:100> Text="  [IN/OUT] Pointer to the event control block into which an event is to be written."
|   |   |-TextComment 0x928c10 <line:271:3, col:45> Text=" This parameter must point to valid memory."
|   |   `-TextComment 0x928c30 <line:272:3> Text=" "
|   |-ParamCommandComment 0x928c90 <col:4, col:49> [in] implicitly Param="events" ParamIndex=1
|   | `-ParagraphComment 0x928d20 <col:17, col:49>
|   |   `-TextComment 0x928cf0 <col:17, col:49> Text="   [IN] Event mask to be written."
|   |-ParagraphComment 0x928d70 <line:274:3>
|   | `-TextComment 0x928d40 <col:3> Text=" "
|   |-BlockCommandComment 0x928d90 <col:4, line:276:3> Name="retval"
|   | `-ParagraphComment 0x928e40 <line:274:11, line:276:3>
|   |   |-TextComment 0x928dc0 <line:274:11, col:94> Text=" #LOS_ERRNO_EVENT_SETBIT_INVALID  Bit 25 of the event mask cannot be set to an event"
|   |   |-TextComment 0x928de0 <line:275:3, col:38> Text=" because it is set to an error code."
|   |   `-TextComment 0x928e00 <line:276:3> Text=" "
|   |-BlockCommandComment 0x928e60 <col:4, line:277:3> Name="retval"
|   | `-ParagraphComment 0x928ee0 <line:276:11, line:277:3>
|   |   |-TextComment 0x928e90 <line:276:11, col:57> Text=" #LOS_ERRNO_EVENT_PTR_NULL        Null pointer."
|   |   `-TextComment 0x928eb0 <line:277:3> Text=" "
|   |-BlockCommandComment 0x928f00 <col:4, line:278:3> Name="retval"
|   | `-ParagraphComment 0x928f80 <line:277:11, line:278:3>
|   |   |-TextComment 0x928f30 <line:277:11, col:78> Text=" #LOS_OK                          The event is successfully written."
|   |   `-TextComment 0x928f50 <line:278:3> Text=" "
|   |-BlockCommandComment 0x928fa0 <col:4, line:280:3> Name="par"
|   | `-ParagraphComment 0x929170 <line:278:8, line:280:3>
|   |   |-TextComment 0x928fd0 <line:278:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x928ff0 <line:279:3> Text=" "
|   |   |-HTMLStartTagComment 0x929010 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x929050 <col:8, col:11> Name="li"
|   |   |-TextComment 0x929090 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9290b0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x9290e0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x929110 <line:280:3> Text=" "
|   `-BlockCommandComment 0x929190 <col:4, col:37> Name="see"
|     `-ParagraphComment 0x9291f0 <col:8, col:37>
|       `-TextComment 0x9291c0 <col:8, col:37> Text=" LOS_EventPoll | LOS_EventRead"
|-FunctionDecl 0x89a708 <line:307:1, col:67> col:15 LOS_EventClear 'UINT32 (PEVENT_CB_S, UINT32)' extern
| |-ParmVarDecl 0x89a5f8 <col:30, col:42> col:42 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0x89a670 <col:51, col:58> col:58 eventMask 'UINT32':'unsigned int'
| `-FullComment 0x929f80 <line:285:3, line:305:54>
|   |-ParagraphComment 0x929330 <line:285:3>
|   | `-TextComment 0x929300 <col:3> Text=" "
|   |-VerbatimLineComment 0x929350 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0x9293c0 <line:286:3>
|   | `-TextComment 0x929390 <col:3> Text=" "
|   |-BlockCommandComment 0x9293e0 <col:4, col:66> Name="brief"
|   | `-ParagraphComment 0x929440 <col:10, col:66>
|   |   `-TextComment 0x929410 <col:10, col:66> Text=" Clear the event of the eventCB by a specified eventMask."
|   |-ParagraphComment 0x929490 <line:288:3>
|   | `-TextComment 0x929460 <col:3> Text=" "
|   |-BlockCommandComment 0x9294b0 <col:4, line:293:3> Name="par"
|   | `-ParagraphComment 0x929700 <line:288:8, line:293:3>
|   |   |-TextComment 0x9294e0 <line:288:8, col:20> Text=" Description:"
|   |   |-TextComment 0x929500 <line:289:3> Text=" "
|   |   |-HTMLStartTagComment 0x929520 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x929560 <line:290:3> Text=" "
|   |   |-HTMLStartTagComment 0x929580 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9295c0 <col:8, col:117> Text="This API is used to set the ID of an event that has a specified mask and of which the information is stored in"
|   |   |-TextComment 0x9295e0 <line:291:3, col:89> Text=" an event control block pointed to by eventCB to 0. eventCB must point to valid memory."
|   |   |-HTMLEndTagComment 0x929600 <col:90, col:94> Name="li"
|   |   |-TextComment 0x929630 <line:292:3> Text=" "
|   |   |-HTMLEndTagComment 0x929650 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x929680 <line:293:3> Text=" "
|   |-BlockCommandComment 0x929720 <col:4, line:296:8> Name="attention"
|   | `-ParagraphComment 0x9298f0 <line:294:3, line:296:8>
|   |   |-TextComment 0x929750 <line:294:3> Text=" "
|   |   |-HTMLStartTagComment 0x929770 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9297b0 <line:295:3> Text=" "
|   |   |-HTMLStartTagComment 0x9297d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x929810 <col:8, col:69> Text="The value of events needs to be reversed when it is passed-in."
|   |   |-HTMLEndTagComment 0x929830 <col:70, col:74> Name="li"
|   |   |-TextComment 0x929860 <line:296:3> Text=" "
|   |   `-HTMLEndTagComment 0x929880 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x929940 <line:298:3>
|   | `-TextComment 0x929910 <col:3> Text=" "
|   |-ParamCommandComment 0x929960 <col:4, line:299:3> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0x929a10 <line:298:18, line:299:3>
|   |   |-TextComment 0x9299c0 <line:298:18, col:80> Text="     [IN/OUT] Pointer to the event control block to be cleared."
|   |   `-TextComment 0x9299e0 <line:299:3> Text=" "
|   |-ParamCommandComment 0x929a30 <col:4, col:63> [in] implicitly Param="eventMask" ParamIndex=1
|   | `-ParagraphComment 0x929ac0 <col:20, col:63>
|   |   `-TextComment 0x929a90 <col:20, col:63> Text="   [IN]     Mask of the event to be cleared."
|   |-ParagraphComment 0x929b10 <line:301:3>
|   | `-TextComment 0x929ae0 <col:3> Text=" "
|   |-BlockCommandComment 0x929b30 <col:4, line:302:3> Name="retval"
|   | `-ParagraphComment 0x929bb0 <line:301:11, line:302:3>
|   |   |-TextComment 0x929b60 <line:301:11, col:51> Text=" #LOS_ERRNO_EVENT_PTR_NULL  Null pointer."
|   |   `-TextComment 0x929b80 <line:302:3> Text=" "
|   |-BlockCommandComment 0x929bd0 <col:4, line:303:3> Name="retval"
|   | `-ParagraphComment 0x929c50 <line:302:11, line:303:3>
|   |   |-TextComment 0x929c00 <line:302:11, col:72> Text=" #LOS_OK                    The event is successfully cleared."
|   |   `-TextComment 0x929c20 <line:303:3> Text=" "
|   |-BlockCommandComment 0x929c70 <col:4, line:305:3> Name="par"
|   | `-ParagraphComment 0x929e60 <line:303:8, line:305:3>
|   |   |-TextComment 0x929ca0 <line:303:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x929cc0 <line:304:3> Text=" "
|   |   |-HTMLStartTagComment 0x929ce0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x929d40 <col:8, col:11> Name="li"
|   |   |-TextComment 0x929d80 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x929da0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x929dd0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x929e00 <line:305:3> Text=" "
|   `-BlockCommandComment 0x929e80 <col:4, col:54> Name="see"
|     `-ParagraphComment 0x929ee0 <col:8, col:54>
|       `-TextComment 0x929eb0 <col:8, col:54> Text=" LOS_EventPoll | LOS_EventRead | LOS_EventWrite"
|-FunctionDecl 0x89a888 <line:330:1, col:51> col:15 LOS_EventDestroy 'UINT32 (PEVENT_CB_S)' extern
| |-ParmVarDecl 0x89a7f8 <col:32, col:44> col:44 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| `-FullComment 0x92ab40 <line:310:3, line:328:54>
|   |-ParagraphComment 0x92a020 <line:310:3>
|   | `-TextComment 0x929ff0 <col:3> Text=" "
|   |-VerbatimLineComment 0x92a040 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0x92a0b0 <line:311:3>
|   | `-TextComment 0x92a080 <col:3> Text=" "
|   |-BlockCommandComment 0x92a0d0 <col:4, col:27> Name="brief"
|   | `-ParagraphComment 0x92a130 <col:10, col:27>
|   |   `-TextComment 0x92a100 <col:10, col:27> Text=" Destroy an event."
|   |-ParagraphComment 0x92a180 <line:313:3>
|   | `-TextComment 0x92a150 <col:3> Text=" "
|   |-BlockCommandComment 0x92a1a0 <col:4, line:317:3> Name="par"
|   | `-ParagraphComment 0x92a3c0 <line:313:8, line:317:3>
|   |   |-TextComment 0x92a1d0 <line:313:8, col:20> Text=" Description:"
|   |   |-TextComment 0x92a1f0 <line:314:3> Text=" "
|   |   |-HTMLStartTagComment 0x92a210 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x92a250 <line:315:3> Text=" "
|   |   |-HTMLStartTagComment 0x92a270 <col:4, col:7> Name="li"
|   |   |-TextComment 0x92a2b0 <col:8, col:44> Text="This API is used to Destroy an event."
|   |   |-HTMLEndTagComment 0x92a2d0 <col:45, col:49> Name="li"
|   |   |-TextComment 0x92a300 <line:316:3> Text=" "
|   |   |-HTMLEndTagComment 0x92a320 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x92a350 <line:317:3> Text=" "
|   |-BlockCommandComment 0x92a3e0 <col:4, line:320:8> Name="attention"
|   | `-ParagraphComment 0x92a5b0 <line:318:3, line:320:8>
|   |   |-TextComment 0x92a410 <line:318:3> Text=" "
|   |   |-HTMLStartTagComment 0x92a430 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x92a470 <line:319:3> Text=" "
|   |   |-HTMLStartTagComment 0x92a490 <col:4, col:7> Name="li"
|   |   |-TextComment 0x92a4d0 <col:8, col:48> Text="The specific event should be a valid one."
|   |   |-HTMLEndTagComment 0x92a4f0 <col:49, col:53> Name="li"
|   |   |-TextComment 0x92a520 <line:320:3> Text=" "
|   |   `-HTMLEndTagComment 0x92a540 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x92a600 <line:322:3>
|   | `-TextComment 0x92a5d0 <col:3> Text=" "
|   |-ParamCommandComment 0x92a620 <col:4, col:82> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0x92a6b0 <col:18, col:82>
|   |   `-TextComment 0x92a680 <col:18, col:82> Text="     [IN/OUT] Pointer to the event control block to be Destroyed."
|   |-ParagraphComment 0x92a700 <line:324:3>
|   | `-TextComment 0x92a6d0 <col:3> Text=" "
|   |-BlockCommandComment 0x92a720 <col:4, line:325:3> Name="retval"
|   | `-ParagraphComment 0x92a7a0 <line:324:11, line:325:3>
|   |   |-TextComment 0x92a750 <line:324:11, col:50> Text=" #LOS_ERRNO_EVENT_PTR_NULL Null pointer."
|   |   `-TextComment 0x92a770 <line:325:3> Text=" "
|   |-BlockCommandComment 0x92a7c0 <col:4, line:326:3> Name="retval"
|   | `-ParagraphComment 0x92a840 <line:325:11, line:326:3>
|   |   |-TextComment 0x92a7f0 <line:325:11, col:71> Text=" #LOS_OK                   The event is successfully cleared."
|   |   `-TextComment 0x92a810 <line:326:3> Text=" "
|   |-BlockCommandComment 0x92a860 <col:4, line:328:3> Name="par"
|   | `-ParagraphComment 0x92aa30 <line:326:8, line:328:3>
|   |   |-TextComment 0x92a890 <line:326:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x92a8b0 <line:327:3> Text=" "
|   |   |-HTMLStartTagComment 0x92a8d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x92a910 <col:8, col:11> Name="li"
|   |   |-TextComment 0x92a950 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x92a970 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x92a9a0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x92a9d0 <line:328:3> Text=" "
|   `-BlockCommandComment 0x92aa50 <col:4, col:54> Name="see"
|     `-ParagraphComment 0x92aab0 <col:8, col:54>
|       `-TextComment 0x92aa80 <col:8, col:54> Text=" LOS_EventPoll | LOS_EventRead | LOS_EventWrite"
|-FunctionDecl 0x89ab50 <line:332:1, col:97> col:15 OsEventReadOnce 'UINT32 (PEVENT_CB_S, UINT32, UINT32, UINT32)' extern
| |-ParmVarDecl 0x89a940 <col:31, col:43> col:43 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0x89a9b8 <col:52, col:59> col:59 eventMask 'UINT32':'unsigned int'
| |-ParmVarDecl 0x89aa30 <col:70, col:77> col:77 mode 'UINT32':'unsigned int'
| `-ParmVarDecl 0x89aaa8 <col:83, col:90> col:90 timeOut 'UINT32':'unsigned int'
|-FunctionDecl 0x89ad30 <line:333:1, col:66> col:15 OsEventWriteOnce 'UINT32 (PEVENT_CB_S, UINT32)' extern
| |-ParmVarDecl 0x89ac20 <col:32, col:44> col:44 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| `-ParmVarDecl 0x89ac98 <col:53, col:60> col:60 events 'UINT32':'unsigned int'
|-TypedefDecl 0x8a6dc0 <main/los_error.h:130:1, line:134:51> line:130:16 referenced LOS_ERRORHANDLE_FUNC 'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
| |-PointerType 0x8a6d40 'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
| | `-ParenType 0x8a6ce0 'void (CHAR *, UINT32, UINT32, UINT32, void *)' sugar
| |   `-FunctionProtoType 0x8a6c90 'void (CHAR *, UINT32, UINT32, UINT32, void *)' cdecl
| |     |-BuiltinType 0x701a20 'void'
| |     |-PointerType 0x87e0c0 'CHAR *'
| |     | `-TypedefType 0x7807e0 'CHAR' sugar
| |     |   |-Typedef 0x764c78 'CHAR'
| |     |   `-BuiltinType 0x701a60 'char'
| |     |-TypedefType 0x7650b0 'UINT32' sugar
| |     | |-Typedef 0x7649e0 'UINT32'
| |     | `-BuiltinType 0x701b60 'unsigned int'
| |     |-TypedefType 0x7650b0 'UINT32' sugar
| |     | |-Typedef 0x7649e0 'UINT32'
| |     | `-BuiltinType 0x701b60 'unsigned int'
| |     |-TypedefType 0x7650b0 'UINT32' sugar
| |     | |-Typedef 0x7649e0 'UINT32'
| |     | `-BuiltinType 0x701b60 'unsigned int'
| |     `-PointerType 0x7021e0 'void *'
| |       `-BuiltinType 0x701a20 'void'
| `-FullComment 0x92b850 <line:109:3, line:128:13>
|   |-ParagraphComment 0x92abe0 <line:109:3>
|   | `-TextComment 0x92abb0 <col:3> Text=" "
|   |-VerbatimLineComment 0x92ac00 <col:4, col:20> Text=" los_err"
|   |-ParagraphComment 0x92ac70 <line:110:3>
|   | `-TextComment 0x92ac40 <col:3> Text=" "
|   |-BlockCommandComment 0x92ac90 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0x92acf0 <col:10, col:60>
|   |   `-TextComment 0x92acc0 <col:10, col:60> Text=" Define the pointer to the error handling function."
|   |-ParagraphComment 0x92ad40 <line:112:3>
|   | `-TextComment 0x92ad10 <col:3> Text=" "
|   |-BlockCommandComment 0x92ad60 <col:4, line:114:3> Name="par"
|   | `-ParagraphComment 0x92ae10 <line:112:8, line:114:3>
|   |   |-TextComment 0x92ad90 <line:112:8, col:20> Text=" Description:"
|   |   |-TextComment 0x92adb0 <line:113:3, col:73> Text=" This API is used to define the pointer to the error handling function."
|   |   `-TextComment 0x92add0 <line:114:3> Text=" "
|   |-BlockCommandComment 0x92ae30 <col:4, line:117:8> Name="attention"
|   | `-ParagraphComment 0x92b000 <line:115:3, line:117:8>
|   |   |-TextComment 0x92ae60 <line:115:3> Text=" "
|   |   |-HTMLStartTagComment 0x92ae80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x92aec0 <line:116:3> Text=" "
|   |   |-HTMLStartTagComment 0x92aee0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x92af20 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x92af40 <col:13, col:17> Name="li"
|   |   |-TextComment 0x92af70 <line:117:3> Text=" "
|   |   `-HTMLEndTagComment 0x92af90 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x92b050 <line:119:3>
|   | `-TextComment 0x92b020 <col:3> Text=" "
|   |-ParamCommandComment 0x92b070 <col:4, line:120:3> [in] implicitly Param="fileName" ParamIndex=0
|   | `-ParagraphComment 0x92b120 <line:119:20, line:120:3>
|   |   |-TextComment 0x92b0d0 <line:119:20, col:65> Text="  [IN] Log file that stores error information."
|   |   `-TextComment 0x92b0f0 <line:120:3> Text=" "
|   |-ParamCommandComment 0x92b140 <col:4, line:121:3> [in] implicitly Param="lineNo" ParamIndex=1
|   | `-ParagraphComment 0x92b1f0 <line:120:18, line:121:3>
|   |   |-TextComment 0x92b1a0 <line:120:18, col:60> Text="    [IN] Line number of the erroneous line."
|   |   `-TextComment 0x92b1c0 <line:121:3> Text=" "
|   |-ParamCommandComment 0x92b210 <col:4, line:122:3> [in] implicitly Param="errorNo" ParamIndex=2
|   | `-ParagraphComment 0x92b2c0 <line:121:19, line:122:3>
|   |   |-TextComment 0x92b270 <line:121:19, col:37> Text="   [IN] Error code."
|   |   `-TextComment 0x92b290 <line:122:3> Text=" "
|   |-ParamCommandComment 0x92b2e0 <col:4, line:123:3> [in] implicitly Param="paraLen" ParamIndex=3
|   | `-ParagraphComment 0x92b390 <line:122:19, line:123:3>
|   |   |-TextComment 0x92b340 <line:122:19, col:62> Text="   [IN] Length of the input parameter pPara."
|   |   `-TextComment 0x92b360 <line:123:3> Text=" "
|   |-ParamCommandComment 0x92b3b0 <col:4, col:50> [in] implicitly Param="para" ParamIndex=4
|   | `-ParagraphComment 0x92b440 <col:16, col:50>
|   |   `-TextComment 0x92b410 <col:16, col:50> Text="      [IN] User label of the error."
|   |-ParagraphComment 0x92b490 <line:125:3>
|   | `-TextComment 0x92b460 <col:3> Text=" "
|   |-BlockCommandComment 0x92b4b0 <col:4, line:126:3> Name="retval"
|   | `-ParagraphComment 0x92b530 <line:125:11, line:126:3>
|   |   |-TextComment 0x92b4e0 <line:125:11, col:16> Text=" None."
|   |   `-TextComment 0x92b500 <line:126:3> Text=" "
|   |-BlockCommandComment 0x92b550 <col:4, line:128:3> Name="par"
|   | `-ParagraphComment 0x92b720 <line:126:8, line:128:3>
|   |   |-TextComment 0x92b580 <line:126:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x92b5a0 <line:127:3> Text=" "
|   |   |-HTMLStartTagComment 0x92b5c0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x92b600 <col:8, col:11> Name="li"
|   |   |-TextComment 0x92b640 <col:12, col:72> Text="los_err.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x92b660 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x92b690 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x92b6c0 <line:128:3> Text=" "
|   `-BlockCommandComment 0x92b740 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x92b7a0 <col:8, col:13>
|       `-TextComment 0x92b770 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8a7198 <line:158:1, line:160:39> line:158:15 LOS_ErrHandle 'UINT32 (CHAR *, UINT32, UINT32, UINT32, void *)' extern
| |-ParmVarDecl 0x8a6e58 <col:29, col:35> col:35 fileName 'CHAR *'
| |-ParmVarDecl 0x8a6ed0 <col:45, col:52> col:52 lineNo 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8a6f48 <line:159:29, col:36> col:36 errorNo 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8a6fc0 <col:45, col:52> col:52 paraLen 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8a7040 <main/los_compiler.h:327:23, main/los_error.h:160:35> col:35 para 'void *'
| `-FullComment 0x92c580 <line:137:3, line:156:12>
|   |-ParagraphComment 0x92b8f0 <line:137:3>
|   | `-TextComment 0x92b8c0 <col:3> Text=" "
|   |-VerbatimLineComment 0x92b910 <col:4, col:20> Text=" los_err"
|   |-ParagraphComment 0x92b980 <line:138:3>
|   | `-TextComment 0x92b950 <col:3> Text=" "
|   |-BlockCommandComment 0x92b9a0 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0x92ba00 <col:10, col:34>
|   |   `-TextComment 0x92b9d0 <col:10, col:34> Text=" Error handling function."
|   |-ParagraphComment 0x92ba50 <line:140:3>
|   | `-TextComment 0x92ba20 <col:3> Text=" "
|   |-BlockCommandComment 0x92ba70 <col:4, line:142:3> Name="par"
|   | `-ParagraphComment 0x92bb20 <line:140:8, line:142:3>
|   |   |-TextComment 0x92baa0 <line:140:8, col:20> Text=" Description:"
|   |   |-TextComment 0x92bac0 <line:141:3, col:77> Text=" This API is used to perform different operations according to error types."
|   |   `-TextComment 0x92bae0 <line:142:3> Text=" "
|   |-BlockCommandComment 0x92bb40 <col:4, line:145:8> Name="attention"
|   | `-ParagraphComment 0x92bd10 <line:143:3, line:145:8>
|   |   |-TextComment 0x92bb70 <line:143:3> Text=" "
|   |   |-HTMLStartTagComment 0x92bb90 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x92bbd0 <line:144:3> Text=" "
|   |   |-HTMLStartTagComment 0x92bbf0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x92bc30 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0x92bc50 <col:12, col:16> Name="li"
|   |   |-TextComment 0x92bc80 <line:145:3> Text=" "
|   |   `-HTMLEndTagComment 0x92bca0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x92bd80 <line:147:3>
|   | `-TextComment 0x92bd50 <col:3> Text=" "
|   |-ParamCommandComment 0x92bda0 <col:4, line:148:3> [in] implicitly Param="fileName" ParamIndex=0
|   | `-ParagraphComment 0x92be50 <line:147:20, line:148:3>
|   |   |-TextComment 0x92be00 <line:147:20, col:65> Text="  [IN] Log file that stores error information."
|   |   `-TextComment 0x92be20 <line:148:3> Text=" "
|   |-ParamCommandComment 0x92be70 <col:4, line:149:3> [in] implicitly Param="lineNo" ParamIndex=1
|   | `-ParagraphComment 0x92bf20 <line:148:18, line:149:3>
|   |   |-TextComment 0x92bed0 <line:148:18, col:98> Text="    [IN] Line number of the erroneous line which should not be OS_ERR_MAGIC_WORD."
|   |   `-TextComment 0x92bef0 <line:149:3> Text=" "
|   |-ParamCommandComment 0x92bf40 <col:4, line:150:3> [in] implicitly Param="errorNo" ParamIndex=2
|   | `-ParagraphComment 0x92bff0 <line:149:19, line:150:3>
|   |   |-TextComment 0x92bfa0 <line:149:19, col:37> Text="   [IN] Error code."
|   |   `-TextComment 0x92bfc0 <line:150:3> Text=" "
|   |-ParamCommandComment 0x92c010 <col:4, line:151:3> [in] implicitly Param="paraLen" ParamIndex=3
|   | `-ParagraphComment 0x92c0c0 <line:150:19, line:151:3>
|   |   |-TextComment 0x92c070 <line:150:19, col:62> Text="   [IN] Length of the input parameter pPara."
|   |   `-TextComment 0x92c090 <line:151:3> Text=" "
|   |-ParamCommandComment 0x92c0e0 <col:4, col:50> [in] implicitly Param="para" ParamIndex=4
|   | `-ParagraphComment 0x92c170 <col:16, col:50>
|   |   `-TextComment 0x92c140 <col:16, col:50> Text="      [IN] User label of the error."
|   |-ParagraphComment 0x92c1c0 <line:153:3>
|   | `-TextComment 0x92c190 <col:3> Text=" "
|   |-BlockCommandComment 0x92c1e0 <col:4, line:154:3> Name="retval"
|   | `-ParagraphComment 0x92c260 <line:153:11, line:154:3>
|   |   |-TextComment 0x92c210 <line:153:11, col:54> Text=" LOS_OK The error is successfully processed."
|   |   `-TextComment 0x92c230 <line:154:3> Text=" "
|   |-BlockCommandComment 0x92c280 <col:4, line:156:3> Name="par"
|   | `-ParagraphComment 0x92c450 <line:154:8, line:156:3>
|   |   |-TextComment 0x92c2b0 <line:154:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x92c2d0 <line:155:3> Text=" "
|   |   |-HTMLStartTagComment 0x92c2f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x92c330 <col:8, col:11> Name="li"
|   |   |-TextComment 0x92c370 <col:12, col:72> Text="los_err.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x92c390 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x92c3c0 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x92c3f0 <line:156:3> Text=" "
|   `-BlockCommandComment 0x92c470 <col:4, col:12> Name="see"
|     `-ParagraphComment 0x92c4d0 <col:8, col:12>
|       `-TextComment 0x92c4a0 <col:8, col:12> Text=" None"
|-RecordDecl 0x8a7288 <line:166:9, line:168:1> line:166:16 struct tagUserErrFunc definition
| |-FullComment 0x92c6f0 <line:163:3, line:164:37>
| | |-ParagraphComment 0x92c620 <line:163:3>
| | | `-TextComment 0x92c5f0 <col:3> Text=" "
| | |-VerbatimLineComment 0x92c640 <col:4, col:20> Text=" los_err"
| | `-ParagraphComment 0x92c6b0 <line:164:3, col:37>
| |   `-TextComment 0x92c680 <col:3, col:37> Text=" Error handling function structure."
| `-FieldDecl 0x8a7360 <line:167:5, col:27> col:27 pfnHook 'LOS_ERRORHANDLE_FUNC':'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
|   `-FullComment 0x92c7c0 <col:41, col:75>
|     `-ParagraphComment 0x92c790 <col:41, col:75>
|       `-TextComment 0x92c760 <col:41, col:75> Text=" Hook function for error handling. "
|-TypedefDecl 0x8a7438 <line:166:1, line:168:3> col:3 UserErrFunc 'struct tagUserErrFunc':'struct tagUserErrFunc'
| |-ElaboratedType 0x8a73e0 'struct tagUserErrFunc' sugar
| | `-RecordType 0x8a7310 'struct tagUserErrFunc'
| |   `-Record 0x8a7288 'tagUserErrFunc'
| `-FullComment 0x92c930 <line:163:3, line:164:37>
|   |-ParagraphComment 0x92c860 <line:163:3>
|   | `-TextComment 0x92c830 <col:3> Text=" "
|   |-VerbatimLineComment 0x92c880 <col:4, col:20> Text=" los_err"
|   `-ParagraphComment 0x92c8f0 <line:164:3, col:37>
|     `-TextComment 0x92c8c0 <col:3, col:37> Text=" Error handling function structure."
|-EnumDecl 0x8a74a8 <line:171:1, line:207:1> line:171:6 LOS_MODULE_ID
| |-EnumConstantDecl 0x8a75a8 <line:172:5, col:32> col:5 LOS_MOD_SYS 'int'
| | `-ConstantExpr 0x8a7590 <col:32> 'int'
| |   `-IntegerLiteral 0x8a7570 <col:32> 'int' 0
| |-EnumConstantDecl 0x8a7630 <line:173:5, col:32> col:5 LOS_MOD_MEM 'int'
| | `-ConstantExpr 0x8a7618 <col:32> 'int'
| |   `-IntegerLiteral 0x8a75f8 <col:32> 'int' 1
| |-EnumConstantDecl 0x8a76b8 <line:174:5, col:32> col:5 LOS_MOD_TSK 'int'
| | `-ConstantExpr 0x8a76a0 <col:32> 'int'
| |   `-IntegerLiteral 0x8a7680 <col:32> 'int' 2
| |-EnumConstantDecl 0x8a7740 <line:175:5, col:32> col:5 LOS_MOD_SWTMR 'int'
| | `-ConstantExpr 0x8a7728 <col:32> 'int'
| |   `-IntegerLiteral 0x8a7708 <col:32> 'int' 3
| |-EnumConstantDecl 0x8a77c8 <line:176:5, col:32> col:5 LOS_MOD_TICK 'int'
| | `-ConstantExpr 0x8a77b0 <col:32> 'int'
| |   `-IntegerLiteral 0x8a7790 <col:32> 'int' 4
| |-EnumConstantDecl 0x8a7850 <line:177:5, col:32> col:5 LOS_MOD_MSG 'int'
| | `-ConstantExpr 0x8a7838 <col:32> 'int'
| |   `-IntegerLiteral 0x8a7818 <col:32> 'int' 5
| |-EnumConstantDecl 0x8a78d8 <line:178:5, col:32> col:5 LOS_MOD_QUE 'int'
| | `-ConstantExpr 0x8a78c0 <col:32> 'int'
| |   `-IntegerLiteral 0x8a78a0 <col:32> 'int' 6
| |-EnumConstantDecl 0x8a7960 <line:179:5, col:32> col:5 LOS_MOD_SEM 'int'
| | `-ConstantExpr 0x8a7948 <col:32> 'int'
| |   `-IntegerLiteral 0x8a7928 <col:32> 'int' 7
| |-EnumConstantDecl 0x8a79e8 <line:180:5, col:32> col:5 LOS_MOD_MBOX 'int'
| | `-ConstantExpr 0x8a79d0 <col:32> 'int'
| |   `-IntegerLiteral 0x8a79b0 <col:32> 'int' 8
| |-EnumConstantDecl 0x8a7bc0 <line:181:5, col:32> col:5 referenced LOS_MOD_HWI 'int'
| | `-ConstantExpr 0x8a7a58 <col:32> 'int'
| |   `-IntegerLiteral 0x8a7a38 <col:32> 'int' 9
| |-EnumConstantDecl 0x8a7c48 <line:182:5, col:32> col:5 LOS_MOD_HWWDG 'int'
| | `-ConstantExpr 0x8a7c30 <col:32> 'int'
| |   `-IntegerLiteral 0x8a7c10 <col:32> 'int' 10
| |-EnumConstantDecl 0x8a7cd0 <line:183:5, col:32> col:5 LOS_MOD_CACHE 'int'
| | `-ConstantExpr 0x8a7cb8 <col:32> 'int'
| |   `-IntegerLiteral 0x8a7c98 <col:32> 'int' 11
| |-EnumConstantDecl 0x8a7d58 <line:184:5, col:32> col:5 LOS_MOD_HWTMR 'int'
| | `-ConstantExpr 0x8a7d40 <col:32> 'int'
| |   `-IntegerLiteral 0x8a7d20 <col:32> 'int' 12
| |-EnumConstantDecl 0x8a7de0 <line:185:5, col:32> col:5 LOS_MOD_MMU 'int'
| | `-ConstantExpr 0x8a7dc8 <col:32> 'int'
| |   `-IntegerLiteral 0x8a7da8 <col:32> 'int' 13
| |-EnumConstantDecl 0x8a7e68 <line:187:5, col:32> col:5 LOS_MOD_LOG 'int'
| | `-ConstantExpr 0x8a7e50 <col:32> 'int'
| |   `-IntegerLiteral 0x8a7e30 <col:32> 'int' 14
| |-EnumConstantDecl 0x8a7ef0 <line:188:5, col:32> col:5 LOS_MOD_ERR 'int'
| | `-ConstantExpr 0x8a7ed8 <col:32> 'int'
| |   `-IntegerLiteral 0x8a7eb8 <col:32> 'int' 15
| |-EnumConstantDecl 0x8a7f78 <line:190:5, col:32> col:5 LOS_MOD_EXC 'int'
| | `-ConstantExpr 0x8a7f60 <col:32> 'int'
| |   `-IntegerLiteral 0x8a7f40 <col:32> 'int' 16
| |-EnumConstantDecl 0x8a8000 <line:191:5, col:32> col:5 LOS_MOD_CSTK 'int'
| | `-ConstantExpr 0x8a7fe8 <col:32> 'int'
| |   `-IntegerLiteral 0x8a7fc8 <col:32> 'int' 17
| |-EnumConstantDecl 0x8a8088 <line:193:5, col:32> col:5 LOS_MOD_MPU 'int'
| | `-ConstantExpr 0x8a8070 <col:32> 'int'
| |   `-IntegerLiteral 0x8a8050 <col:32> 'int' 18
| |-EnumConstantDecl 0x8a8110 <line:194:5, col:32> col:5 LOS_MOD_NMHWI 'int'
| | `-ConstantExpr 0x8a80f8 <col:32> 'int'
| |   `-IntegerLiteral 0x8a80d8 <col:32> 'int' 19
| |-EnumConstantDecl 0x8a8198 <line:195:5, col:32> col:5 LOS_MOD_TRACE 'int'
| | `-ConstantExpr 0x8a8180 <col:32> 'int'
| |   `-IntegerLiteral 0x8a8160 <col:32> 'int' 20
| |-EnumConstantDecl 0x8a8220 <line:196:5, col:32> col:5 LOS_MOD_IPC 'int'
| | `-ConstantExpr 0x8a8208 <col:32> 'int'
| |   `-IntegerLiteral 0x8a81e8 <col:32> 'int' 24
| |-EnumConstantDecl 0x8a82a8 <line:197:5, col:32> col:5 LOS_MOD_TIMER 'int'
| | `-ConstantExpr 0x8a8290 <col:32> 'int'
| |   `-IntegerLiteral 0x8a8270 <col:32> 'int' 26
| |-EnumConstantDecl 0x8a8330 <line:198:5, col:32> col:5 LOS_MOD_EVENT 'int'
| | `-ConstantExpr 0x8a8318 <col:32> 'int'
| |   `-IntegerLiteral 0x8a82f8 <col:32> 'int' 28
| |-EnumConstantDecl 0x8a83b8 <line:199:5, col:32> col:5 LOS_MOD_MUX 'int'
| | `-ConstantExpr 0x8a83a0 <col:32> 'int'
| |   `-IntegerLiteral 0x8a8380 <col:32> 'int' 29
| |-EnumConstantDecl 0x8a8440 <line:200:5, col:32> col:5 LOS_MOD_CPUP 'int'
| | `-ConstantExpr 0x8a8428 <col:32> 'int'
| |   `-IntegerLiteral 0x8a8408 <col:32> 'int' 30
| |-EnumConstantDecl 0x8a84c8 <line:201:5, col:32> col:5 LOS_MOD_HOOK 'int'
| | `-ConstantExpr 0x8a84b0 <col:32> 'int'
| |   `-IntegerLiteral 0x8a8490 <col:32> 'int' 31
| |-EnumConstantDecl 0x8a8550 <line:202:5, col:32> col:5 LOS_MOD_PM 'int'
| | `-ConstantExpr 0x8a8538 <col:32> 'int'
| |   `-IntegerLiteral 0x8a8518 <col:32> 'int' 32
| |-EnumConstantDecl 0x8a85d8 <line:203:5, col:32> col:5 LOS_MOD_LMK 'int'
| | `-ConstantExpr 0x8a85c0 <col:32> 'int'
| |   `-IntegerLiteral 0x8a85a0 <col:32> 'int' 33
| |-EnumConstantDecl 0x8a8660 <line:204:5, col:32> col:5 LOS_MOD_SHELL 'int'
| | `-ConstantExpr 0x8a8648 <col:32> 'int'
| |   `-IntegerLiteral 0x8a8628 <col:32> 'int' 49
| |-EnumConstantDecl 0x8a86e8 <line:205:5, col:32> col:5 LOS_MOD_SIGNAL 'int'
| | `-ConstantExpr 0x8a86d0 <col:32> 'int'
| |   `-IntegerLiteral 0x8a86b0 <col:32> 'int' 50
| `-EnumConstantDecl 0x8a8738 <line:206:5> col:5 LOS_MOD_BUTT 'int'
|-RecordDecl 0x8a8848 <main/los_timer.h:56:9, line:66:1> line:56:9 struct definition
| |-FieldDecl 0x8a8900 <line:57:5, col:19> col:19 freq 'UINT32':'unsigned int'
| |-FieldDecl 0x8a8960 <line:58:5, col:19> col:19 irqNum 'INT32':'int'
| |-FieldDecl 0x8a89c0 <line:59:5, col:19> col:19 periodMax 'UINT64':'unsigned long long'
| |-FieldDecl 0x8ac520 <line:60:5, col:52> col:21 init 'UINT32 (*)(HWI_PROC_FUNC)'
| |-FieldDecl 0x8ac710 <line:61:5, col:45> col:21 getCycle 'UINT64 (*)(UINT32 *)'
| |-FieldDecl 0x8ac900 <line:62:5, col:40> col:21 reload 'UINT64 (*)(UINT64)'
| |-FieldDecl 0x8ac9f8 <main/los_compiler.h:327:23, main/los_timer.h:63:31> col:21 lock 'void (*)(void)'
| |-FieldDecl 0x8acaf0 <main/los_compiler.h:327:23, main/los_timer.h:64:33> col:21 unlock 'void (*)(void)'
| `-FieldDecl 0x8acb50 <line:65:5, col:19> col:19 tickHandler 'HWI_PROC_FUNC':'void (*)(void)'
|-TypedefDecl 0x8acbf8 <line:56:1, line:66:3> col:3 referenced ArchTickTimer 'struct ArchTickTimer':'ArchTickTimer'
| `-ElaboratedType 0x8acba0 'struct ArchTickTimer' sugar
|   `-RecordType 0x8a88d0 'ArchTickTimer'
|     `-Record 0x8a8848 ''
|-FunctionDecl 0x8acd00 <line:68:1, col:27> col:8 ArchEnterSleep 'UINT32 (void)'
|-FunctionDecl 0x8acf48 <line:84:1, col:40> col:16 ArchSysTickTimerGet 'ArchTickTimer *(void)'
| `-FullComment 0x92d080 <line:71:3, line:82:13>
|   |-ParagraphComment 0x92c9d0 <line:71:3>
|   | `-TextComment 0x92c9a0 <col:3> Text=" "
|   |-VerbatimLineComment 0x92c9f0 <col:4, col:22> Text=" los_timer"
|   |-ParagraphComment 0x92ca60 <line:72:3>
|   | `-TextComment 0x92ca30 <col:3> Text=" "
|   |-BlockCommandComment 0x92ca80 <col:4, col:39> Name="brief"
|   | `-ParagraphComment 0x92cae0 <col:10, col:39>
|   |   `-TextComment 0x92cab0 <col:10, col:39> Text=" Get tick timer control block."
|   |-ParagraphComment 0x92cb30 <line:74:3>
|   | `-TextComment 0x92cb00 <col:3> Text=" "
|   |-BlockCommandComment 0x92cb50 <col:4, line:75:52> Name="par"
|   | `-ParagraphComment 0x92cbd0 <line:74:8, line:75:52>
|   |   |-TextComment 0x92cb80 <line:74:8, col:20> Text=" Description:"
|   |   `-TextComment 0x92cba0 <line:75:3, col:52> Text=" This API is used to get tick timer control block."
|   |-ParagraphComment 0x92cc20 <line:77:3>
|   | `-TextComment 0x92cbf0 <col:3> Text=" "
|   |-ParamCommandComment 0x92cc40 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0x92cca0 <<invalid sloc>>
|   |-ParagraphComment 0x92ccf0 <line:79:3>
|   | `-TextComment 0x92ccc0 <col:3> Text=" "
|   |-BlockCommandComment 0x92cd10 <col:4, line:80:3> Name="retval"
|   | `-ParagraphComment 0x92cd90 <line:79:11, line:80:3>
|   |   |-TextComment 0x92cd40 <line:79:11, col:36> Text=" #tick timer control block"
|   |   `-TextComment 0x92cd60 <line:80:3> Text=" "
|   |-BlockCommandComment 0x92cdb0 <col:4, line:82:3> Name="par"
|   | `-ParagraphComment 0x92cf80 <line:80:8, line:82:3>
|   |   |-TextComment 0x92cde0 <line:80:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x92ce00 <line:81:3> Text=" "
|   |   |-HTMLStartTagComment 0x92ce20 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x92ce60 <col:8, col:11> Name="li"
|   |   |-TextComment 0x92cea0 <col:12, col:74> Text="los_timer.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x92cec0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x92cef0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x92cf20 <line:82:3> Text=" "
|   `-BlockCommandComment 0x92cfa0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x92d000 <col:8, col:13>
|       `-TextComment 0x92cfd0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8ad198 <main/los_tick.h:100:1, col:35> col:15 used LOS_SysCycleGet 'UINT64 (void)' extern
| `-FullComment 0x92dab0 <line:82:3, line:99:3>
|   |-ParagraphComment 0x92d120 <line:82:3, col:4>
|   | `-TextComment 0x92d0f0 <col:3, col:4> Text="  "
|   |-VerbatimLineComment 0x92d140 <col:5, col:23> Text="  los_tick"
|   |-ParagraphComment 0x92d1b0 <line:83:3, col:4>
|   | `-TextComment 0x92d180 <col:3, col:4> Text="  "
|   |-BlockCommandComment 0x92d1d0 <col:5, col:45> Name="brief"
|   | `-ParagraphComment 0x92d230 <col:11, col:45>
|   |   `-TextComment 0x92d200 <col:11, col:45> Text=": System timer cycles get function."
|   |-ParagraphComment 0x92d280 <line:85:3, col:4>
|   | `-TextComment 0x92d250 <col:3, col:4> Text="  "
|   |-BlockCommandComment 0x92d2a0 <col:5, line:86:48> Name="par"
|   | `-ParagraphComment 0x92d320 <line:85:9, line:86:48>
|   |   |-TextComment 0x92d2d0 <line:85:9, col:21> Text=" Description:"
|   |   `-TextComment 0x92d2f0 <line:86:3, col:48> Text="  This API is used to get system timer cycles."
|   |-ParagraphComment 0x92d370 <line:88:3>
|   | `-TextComment 0x92d340 <col:3> Text=" "
|   |-BlockCommandComment 0x92d390 <col:4, line:89:26> Name="attention"
|   | `-ParagraphComment 0x92d530 <line:88:14, line:89:26>
|   |   |-TextComment 0x92d3c0 <line:88:14> Text=":"
|   |   |-TextComment 0x92d3e0 <line:89:3> Text=" "
|   |   |-HTMLStartTagComment 0x92d400 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x92d440 <col:8, col:11> Name="li"
|   |   |-TextComment 0x92d480 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0x92d4a0 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0x92d4d0 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0x92d580 <line:91:3>
|   | `-TextComment 0x92d550 <col:3> Text=" "
|   |-ParamCommandComment 0x92d5a0 <col:4, col:16> [in] implicitly Param=":"
|   | `-ParagraphComment 0x92d630 <col:11, col:16>
|   |   `-TextComment 0x92d600 <col:11, col:16> Text=" None."
|   |-ParagraphComment 0x92d680 <line:93:3>
|   | `-TextComment 0x92d650 <col:3> Text=" "
|   |-BlockCommandComment 0x92d6a0 <col:4, col:34> Name="retval"
|   | `-ParagraphComment 0x92d700 <col:11, col:34>
|   |   `-TextComment 0x92d6d0 <col:11, col:34> Text=": current system cycles."
|   |-ParagraphComment 0x92d750 <line:95:3>
|   | `-TextComment 0x92d720 <col:3> Text=" "
|   |-BlockCommandComment 0x92d770 <col:4, line:97:3> Name="par"
|   | `-ParagraphComment 0x92d940 <line:95:8, line:97:3>
|   |   |-TextComment 0x92d7a0 <line:95:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x92d7c0 <line:96:3> Text=" "
|   |   |-HTMLStartTagComment 0x92d7e0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x92d820 <col:8, col:11> Name="li"
|   |   |-TextComment 0x92d860 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x92d880 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x92d8b0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x92d8e0 <line:97:3> Text=" "
|   |-BlockCommandComment 0x92d960 <col:4, col:13> Name="see"
|   | `-ParagraphComment 0x92d9c0 <col:8, col:13>
|   |   `-TextComment 0x92d990 <col:8, col:13> Text=" None."
|   `-ParagraphComment 0x92da10 <line:99:3>
|     `-TextComment 0x92d9e0 <col:3> Text=" "
|-VarDecl 0x8ad2a8 <line:112:1, col:18> col:18 g_ticksPerSec 'UINT32':'unsigned int' extern
| `-FullComment 0x92dc20 <line:109:3, line:110:19>
|   |-ParagraphComment 0x92db50 <line:109:3>
|   | `-TextComment 0x92db20 <col:3> Text=" "
|   |-VerbatimLineComment 0x92db70 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x92dbe0 <line:110:3, col:19>
|     `-TextComment 0x92dbb0 <col:3, col:19> Text=" Ticks per second"
|-VarDecl 0x8ad348 <line:118:1, col:18> col:18 g_uwCyclePerSec 'UINT32':'unsigned int' extern
| `-FullComment 0x92fdd0 <line:115:3, line:116:20>
|   |-ParagraphComment 0x92dcc0 <line:115:3>
|   | `-TextComment 0x92dc90 <col:3> Text=" "
|   |-VerbatimLineComment 0x92dce0 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x92fd90 <line:116:3, col:20>
|     `-TextComment 0x92dd20 <col:3, col:20> Text=" Cycles per Second"
|-VarDecl 0x8ad3e8 <line:124:1, col:18> col:18 g_cyclesPerTick 'UINT32':'unsigned int' extern
| `-FullComment 0x92ff40 <line:121:3, line:122:18>
|   |-ParagraphComment 0x92fe70 <line:121:3>
|   | `-TextComment 0x92fe40 <col:3> Text=" "
|   |-VerbatimLineComment 0x92fe90 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x92ff00 <line:122:3, col:18>
|     `-TextComment 0x92fed0 <col:3, col:18> Text=" Cycles per Tick"
|-VarDecl 0x8ad488 <line:130:1, col:18> col:18 used g_sysClock 'UINT32':'unsigned int' extern
| `-FullComment 0x9300b0 <line:127:3, line:128:15>
|   |-ParagraphComment 0x92ffe0 <line:127:3>
|   | `-TextComment 0x92ffb0 <col:3> Text=" "
|   |-VerbatimLineComment 0x930000 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x930070 <line:128:3, col:15>
|     `-TextComment 0x930040 <col:3, col:15> Text=" System Clock"
|-RecordDecl 0x8af048 <line:244:9, line:252:1> line:244:16 struct TagSysTime definition
| |-FullComment 0x930220 <line:241:3, line:242:25>
| | |-ParagraphComment 0x930150 <line:241:3>
| | | `-TextComment 0x930120 <col:3> Text=" "
| | |-VerbatimLineComment 0x930170 <col:4, col:21> Text=" los_tick"
| | `-ParagraphComment 0x9301e0 <line:242:3, col:25>
| |   `-TextComment 0x9301b0 <col:3, col:25> Text=" system time structure."
| |-FieldDecl 0x8af100 <line:245:5, col:13> col:13 uwYear 'UINT16':'unsigned short'
| | `-FullComment 0x9302f0 <col:28, col:61>
| |   `-ParagraphComment 0x9302c0 <col:28, col:61>
| |     `-TextComment 0x930290 <col:28, col:61> Text=" value 1970 ~ 2038 or 1970 ~ 2100 "
| |-FieldDecl 0x8af188 <line:246:5, col:13> col:13 ucMonth 'UINT8':'unsigned char'
| | `-FullComment 0x9303c0 <col:28, col:41>
| |   `-ParagraphComment 0x930390 <col:28, col:41>
| |     `-TextComment 0x930360 <col:28, col:41> Text=" value 1 - 12 "
| |-FieldDecl 0x8af218 <line:247:5, col:13> col:13 ucDay 'UINT8':'unsigned char'
| | `-FullComment 0x930490 <col:28, col:41>
| |   `-ParagraphComment 0x930460 <col:28, col:41>
| |     `-TextComment 0x930430 <col:28, col:41> Text=" value 1 - 31 "
| |-FieldDecl 0x8af2a8 <line:248:5, col:13> col:13 ucHour 'UINT8':'unsigned char'
| | `-FullComment 0x930560 <col:28, col:41>
| |   `-ParagraphComment 0x930530 <col:28, col:41>
| |     `-TextComment 0x930500 <col:28, col:41> Text=" value 0 - 23 "
| |-FieldDecl 0x8af338 <line:249:5, col:13> col:13 ucMinute 'UINT8':'unsigned char'
| | `-FullComment 0x930630 <col:28, col:41>
| |   `-ParagraphComment 0x930600 <col:28, col:41>
| |     `-TextComment 0x9305d0 <col:28, col:41> Text=" value 0 - 59 "
| |-FieldDecl 0x8af3c8 <line:250:5, col:13> col:13 ucSecond 'UINT8':'unsigned char'
| | `-FullComment 0x930700 <col:28, col:41>
| |   `-ParagraphComment 0x9306d0 <col:28, col:41>
| |     `-TextComment 0x9306a0 <col:28, col:41> Text=" value 0 - 59 "
| `-FieldDecl 0x8af458 <line:251:5, col:13> col:13 ucWeek 'UINT8':'unsigned char'
|   `-FullComment 0x9307d0 <col:28, col:41>
|     `-ParagraphComment 0x9307a0 <col:28, col:41>
|       `-TextComment 0x930770 <col:28, col:41> Text=" value 0 - 6  "
|-TypedefDecl 0x8af538 <line:244:1, line:252:3> col:3 SYS_TIME_S 'struct TagSysTime':'struct TagSysTime'
| |-ElaboratedType 0x8af4e0 'struct TagSysTime' sugar
| | `-RecordType 0x8af0d0 'struct TagSysTime'
| |   `-Record 0x8af048 'TagSysTime'
| `-FullComment 0x930940 <line:241:3, line:242:25>
|   |-ParagraphComment 0x930870 <line:241:3>
|   | `-TextComment 0x930840 <col:3> Text=" "
|   |-VerbatimLineComment 0x930890 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x930900 <line:242:3, col:25>
|     `-TextComment 0x9308d0 <col:3, col:25> Text=" system time structure."
|-FunctionDecl 0x8af648 <line:254:1, col:39> col:8 OsTickTimerReload 'UINT64 (UINT64)'
| `-ParmVarDecl 0x8af5b8 <col:26, col:33> col:33 period 'UINT64':'unsigned long long'
|-FunctionDecl 0x8af788 <line:260:1, col:28> col:8 OsTickTimerInit 'UINT32 (void)'
|-FunctionDecl 0x8af928 <main/los_compiler.h:327:23, main/los_tick.h:262:48> col:6 OsTickSysTimerStartTimeSet 'void (UINT64)'
| `-ParmVarDecl 0x8af838 <col:33, col:40> col:40 currTime 'UINT64':'unsigned long long'
|-FunctionDecl 0x8afa90 <line:282:1, col:36> col:15 LOS_TickCountGet 'UINT64 (void)' extern
| `-FullComment 0x9312c0 <line:265:3, line:280:12>
|   |-ParagraphComment 0x9309e0 <line:265:3>
|   | `-TextComment 0x9309b0 <col:3> Text=" "
|   |-VerbatimLineComment 0x930a00 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x930a70 <line:266:3>
|   | `-TextComment 0x930a40 <col:3> Text=" "
|   |-BlockCommandComment 0x930a90 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0x930af0 <col:10, col:37>
|   |   `-TextComment 0x930ac0 <col:10, col:37> Text=" Obtain the number of Ticks."
|   |-ParagraphComment 0x930b40 <line:268:3>
|   | `-TextComment 0x930b10 <col:3> Text=" "
|   |-BlockCommandComment 0x930b60 <col:4, line:270:3> Name="par"
|   | `-ParagraphComment 0x930c10 <line:268:8, line:270:3>
|   |   |-TextComment 0x930b90 <line:268:8, col:20> Text=" Description:"
|   |   |-TextComment 0x930bb0 <line:269:3, col:50> Text=" This API is used to obtain the number of Ticks."
|   |   `-TextComment 0x930bd0 <line:270:3> Text=" "
|   |-BlockCommandComment 0x930c30 <col:4, line:273:8> Name="attention"
|   | `-ParagraphComment 0x930e00 <line:271:3, line:273:8>
|   |   |-TextComment 0x930c60 <line:271:3> Text=" "
|   |   |-HTMLStartTagComment 0x930c80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x930cc0 <line:272:3> Text=" "
|   |   |-HTMLStartTagComment 0x930ce0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x930d20 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0x930d40 <col:12, col:16> Name="li"
|   |   |-TextComment 0x930d70 <line:273:3> Text=" "
|   |   `-HTMLEndTagComment 0x930d90 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x930e50 <line:275:3>
|   | `-TextComment 0x930e20 <col:3> Text=" "
|   |-ParamCommandComment 0x930e70 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0x930ed0 <<invalid sloc>>
|   |-ParagraphComment 0x930f20 <line:277:3>
|   | `-TextComment 0x930ef0 <col:3> Text=" "
|   |-BlockCommandComment 0x930f40 <col:4, line:278:3> Name="retval"
|   | `-ParagraphComment 0x930fc0 <line:277:11, line:278:3>
|   |   |-TextComment 0x930f70 <line:277:11, col:38> Text=" UINT64 The number of Ticks."
|   |   `-TextComment 0x930f90 <line:278:3> Text=" "
|   |-BlockCommandComment 0x930fe0 <col:4, line:280:3> Name="par"
|   | `-ParagraphComment 0x9311b0 <line:278:8, line:280:3>
|   |   |-TextComment 0x931010 <line:278:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x931030 <line:279:3> Text=" "
|   |   |-HTMLStartTagComment 0x931050 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x931090 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9310d0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9310f0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x931120 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x931150 <line:280:3> Text=" "
|   `-BlockCommandComment 0x9311d0 <col:4, col:12> Name="see"
|     `-ParagraphComment 0x931230 <col:8, col:12>
|       `-TextComment 0x931200 <col:8, col:12> Text=" None"
|-FunctionDecl 0x8afbf0 <line:302:1, col:39> col:15 LOS_CyclePerTickGet 'UINT32 (void)' extern
| `-FullComment 0x931c40 <line:285:3, line:300:12>
|   |-ParagraphComment 0x931360 <line:285:3>
|   | `-TextComment 0x931330 <col:3> Text=" "
|   |-VerbatimLineComment 0x931380 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x9313f0 <line:286:3>
|   | `-TextComment 0x9313c0 <col:3> Text=" "
|   |-BlockCommandComment 0x931410 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0x931470 <col:10, col:52>
|   |   `-TextComment 0x931440 <col:10, col:52> Text=" Obtain the number of cycles in one second."
|   |-ParagraphComment 0x9314c0 <line:288:3>
|   | `-TextComment 0x931490 <col:3> Text=" "
|   |-BlockCommandComment 0x9314e0 <col:4, line:290:3> Name="par"
|   | `-ParagraphComment 0x931590 <line:288:8, line:290:3>
|   |   |-TextComment 0x931510 <line:288:8, col:20> Text=" Description:"
|   |   |-TextComment 0x931530 <line:289:3, col:65> Text=" This API is used to obtain the number of cycles in one second."
|   |   `-TextComment 0x931550 <line:290:3> Text=" "
|   |-BlockCommandComment 0x9315b0 <col:4, line:293:8> Name="attention"
|   | `-ParagraphComment 0x931780 <line:291:3, line:293:8>
|   |   |-TextComment 0x9315e0 <line:291:3> Text=" "
|   |   |-HTMLStartTagComment 0x931600 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x931640 <line:292:3> Text=" "
|   |   |-HTMLStartTagComment 0x931660 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9316a0 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0x9316c0 <col:12, col:16> Name="li"
|   |   |-TextComment 0x9316f0 <line:293:3> Text=" "
|   |   `-HTMLEndTagComment 0x931710 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x9317d0 <line:295:3>
|   | `-TextComment 0x9317a0 <col:3> Text=" "
|   |-ParamCommandComment 0x9317f0 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0x931850 <<invalid sloc>>
|   |-ParagraphComment 0x9318a0 <line:297:3>
|   | `-TextComment 0x931870 <col:3> Text=" "
|   |-BlockCommandComment 0x9318c0 <col:4, line:298:3> Name="retval"
|   | `-ParagraphComment 0x931940 <line:297:11, line:298:3>
|   |   |-TextComment 0x9318f0 <line:297:11, col:58> Text=" UINT32 Number of cycles obtained in one second."
|   |   `-TextComment 0x931910 <line:298:3> Text=" "
|   |-BlockCommandComment 0x931960 <col:4, line:300:3> Name="par"
|   | `-ParagraphComment 0x931b30 <line:298:8, line:300:3>
|   |   |-TextComment 0x931990 <line:298:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9319b0 <line:299:3> Text=" "
|   |   |-HTMLStartTagComment 0x9319d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x931a10 <col:8, col:11> Name="li"
|   |   |-TextComment 0x931a50 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x931a70 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x931aa0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x931ad0 <line:300:3> Text=" "
|   `-BlockCommandComment 0x931b50 <col:4, col:12> Name="see"
|     `-ParagraphComment 0x931bb0 <col:8, col:12>
|       `-TextComment 0x931b80 <col:8, col:12> Text=" None"
|-FunctionDecl 0x8afd88 <line:323:1, col:39> col:15 LOS_Tick2MS 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x8afcc8 <col:27, col:34> col:34 ticks 'UINT32':'unsigned int'
| `-FullComment 0x932630 <line:305:3, line:321:19>
|   |-ParagraphComment 0x931ce0 <line:305:3>
|   | `-TextComment 0x931cb0 <col:3> Text=" "
|   |-VerbatimLineComment 0x931d00 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x931d70 <line:306:3>
|   | `-TextComment 0x931d40 <col:3> Text=" "
|   |-BlockCommandComment 0x931da0 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0x931e00 <col:10, col:40>
|   |   `-TextComment 0x931dd0 <col:10, col:40> Text=" Convert Ticks to milliseconds."
|   |-ParagraphComment 0x931e50 <line:308:3>
|   | `-TextComment 0x931e20 <col:3> Text=" "
|   |-BlockCommandComment 0x931e70 <col:4, line:310:3> Name="par"
|   | `-ParagraphComment 0x931f20 <line:308:8, line:310:3>
|   |   |-TextComment 0x931ea0 <line:308:8, col:20> Text=" Description:"
|   |   |-TextComment 0x931ec0 <line:309:3, col:53> Text=" This API is used to convert Ticks to milliseconds."
|   |   `-TextComment 0x931ee0 <line:310:3> Text=" "
|   |-BlockCommandComment 0x931f40 <col:4, line:313:8> Name="attention"
|   | `-ParagraphComment 0x932110 <line:311:3, line:313:8>
|   |   |-TextComment 0x931f70 <line:311:3> Text=" "
|   |   |-HTMLStartTagComment 0x931f90 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x931fd0 <line:312:3> Text=" "
|   |   |-HTMLStartTagComment 0x931ff0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x932030 <col:8, col:76> Text="The number of milliseconds obtained through the conversion is 32-bit."
|   |   |-HTMLEndTagComment 0x932050 <col:77, col:81> Name="li"
|   |   |-TextComment 0x932080 <line:313:3> Text=" "
|   |   `-HTMLEndTagComment 0x9320a0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x932160 <line:315:3>
|   | `-TextComment 0x932130 <col:3> Text=" "
|   |-ParamCommandComment 0x932180 <col:4, col:76> [in] implicitly Param="ticks" ParamIndex=0
|   | `-ParagraphComment 0x932210 <col:17, col:76>
|   |   `-TextComment 0x9321e0 <col:17, col:76> Text="  [IN] Number of Ticks. The value range is (0,OS_SYS_CLOCK)."
|   |-ParagraphComment 0x932260 <line:317:3>
|   | `-TextComment 0x932230 <col:3> Text=" "
|   |-BlockCommandComment 0x932280 <col:4, line:319:3> Name="retval"
|   | `-ParagraphComment 0x932330 <line:317:11, line:319:3>
|   |   |-TextComment 0x9322b0 <line:317:11, col:109> Text=" UINT32 Number of milliseconds obtained through the conversion. Ticks are successfully converted to"
|   |   |-TextComment 0x9322d0 <line:318:3, col:16> Text=" milliseconds."
|   |   `-TextComment 0x9322f0 <line:319:3> Text=" "
|   |-BlockCommandComment 0x932350 <col:4, line:321:3> Name="par"
|   | `-ParagraphComment 0x932520 <line:319:8, line:321:3>
|   |   |-TextComment 0x932380 <line:319:8, col:20> Text="  Dependency:"
|   |   |-TextComment 0x9323a0 <line:320:3> Text=" "
|   |   |-HTMLStartTagComment 0x9323c0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x932400 <col:8, col:11> Name="li"
|   |   |-TextComment 0x932440 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x932460 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x932490 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x9324c0 <line:321:3> Text=" "
|   `-BlockCommandComment 0x932540 <col:4, col:19> Name="see"
|     `-ParagraphComment 0x9325a0 <col:8, col:19>
|       `-TextComment 0x932570 <col:8, col:19> Text=" LOS_MS2Tick"
|-FunctionDecl 0x8b2960 <line:344:1, col:42> col:15 LOS_MS2Tick 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x8b28d0 <col:27, col:34> col:34 millisec 'UINT32':'unsigned int'
| `-FullComment 0x933000 <line:326:3, line:342:19>
|   |-ParagraphComment 0x9326d0 <line:326:3>
|   | `-TextComment 0x9326a0 <col:3> Text=" "
|   |-VerbatimLineComment 0x9326f0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x932760 <line:327:3>
|   | `-TextComment 0x932730 <col:3> Text=" "
|   |-BlockCommandComment 0x932780 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0x9327e0 <col:10, col:40>
|   |   `-TextComment 0x9327b0 <col:10, col:40> Text=" Convert milliseconds to Ticks."
|   |-ParagraphComment 0x932830 <line:329:3>
|   | `-TextComment 0x932800 <col:3> Text=" "
|   |-BlockCommandComment 0x932850 <col:4, line:331:3> Name="par"
|   | `-ParagraphComment 0x932900 <line:329:8, line:331:3>
|   |   |-TextComment 0x932880 <line:329:8, col:20> Text=" Description:"
|   |   |-TextComment 0x9328a0 <line:330:3, col:53> Text=" This API is used to convert milliseconds to Ticks."
|   |   `-TextComment 0x9328c0 <line:331:3> Text=" "
|   |-BlockCommandComment 0x932920 <col:4, line:335:8> Name="attention"
|   | `-ParagraphComment 0x932b10 <line:332:3, line:335:8>
|   |   |-TextComment 0x932950 <line:332:3> Text=" "
|   |   |-HTMLStartTagComment 0x932970 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9329b0 <line:333:3> Text=" "
|   |   |-HTMLStartTagComment 0x9329d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x932a10 <col:8, col:116> Text="If the parameter passed in is equal to 0xFFFFFFFF, the retval is 0xFFFFFFFF. Pay attention to the value to be"
|   |   |-TextComment 0x932a30 <line:334:3, col:45> Text=" converted because data possibly overflows."
|   |   |-HTMLEndTagComment 0x932a50 <col:46, col:50> Name="li"
|   |   |-TextComment 0x932a80 <line:335:3> Text=" "
|   |   `-HTMLEndTagComment 0x932aa0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x932b60 <line:337:3>
|   | `-TextComment 0x932b30 <col:3> Text=" "
|   |-ParamCommandComment 0x932b80 <col:4, col:49> [in] implicitly Param="millisec" ParamIndex=0
|   | `-ParagraphComment 0x932c10 <col:20, col:49>
|   |   `-TextComment 0x932be0 <col:20, col:49> Text="  [IN] Number of milliseconds."
|   |-ParagraphComment 0x932c60 <line:339:3>
|   | `-TextComment 0x932c30 <col:3> Text=" "
|   |-BlockCommandComment 0x932c80 <col:4, line:340:3> Name="retval"
|   | `-ParagraphComment 0x932d00 <line:339:11, line:340:3>
|   |   |-TextComment 0x932cb0 <line:339:11, col:66> Text=" UINT32 Number of Ticks obtained through the conversion."
|   |   `-TextComment 0x932cd0 <line:340:3> Text=" "
|   |-BlockCommandComment 0x932d20 <col:4, line:342:3> Name="par"
|   | `-ParagraphComment 0x932ef0 <line:340:8, line:342:3>
|   |   |-TextComment 0x932d50 <line:340:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x932d70 <line:341:3> Text=" "
|   |   |-HTMLStartTagComment 0x932d90 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x932dd0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x932e10 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x932e30 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x932e60 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x932e90 <line:342:3> Text=" "
|   `-BlockCommandComment 0x932f10 <col:4, col:19> Name="see"
|     `-ParagraphComment 0x932f70 <col:8, col:19>
|       `-TextComment 0x932f40 <col:8, col:19> Text=" LOS_Tick2MS"
|-FunctionDecl 0x8b2c38 <line:362:1, col:96> col:15 LOS_TickTimerRegister 'UINT32 (const ArchTickTimer *, const HWI_PROC_FUNC)' extern
| |-ParmVarDecl 0x8b2aa8 <col:37, col:58> col:58 timer 'const ArchTickTimer *'
| |-ParmVarDecl 0x8b2b20 <col:65, col:85> col:85 tickHandler 'const HWI_PROC_FUNC':'void (*const)(void)'
| `-FullComment 0x9338b0 <line:347:3, line:360:7>
|   |-ParagraphComment 0x9330a0 <line:347:3>
|   | `-TextComment 0x933070 <col:3> Text=" "
|   |-VerbatimLineComment 0x9330c0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x933130 <line:348:3>
|   | `-TextComment 0x933100 <col:3> Text=" "
|   |-BlockCommandComment 0x933150 <col:4, col:47> Name="brief"
|   | `-ParagraphComment 0x9331b0 <col:10, col:47>
|   |   `-TextComment 0x933180 <col:10, col:47> Text=" Re-initializes the system tick timer."
|   |-ParagraphComment 0x933200 <line:350:3>
|   | `-TextComment 0x9331d0 <col:3> Text=" "
|   |-BlockCommandComment 0x933220 <col:4, line:352:3> Name="par"
|   | `-ParagraphComment 0x9332d0 <line:350:8, line:352:3>
|   |   |-TextComment 0x933250 <line:350:8, col:20> Text=" Description:"
|   |   |-TextComment 0x933270 <line:351:3, col:59> Text=" This API is used to re-initialize the system Tick timer."
|   |   `-TextComment 0x933290 <line:352:3> Text=" "
|   |-BlockCommandComment 0x9332f0 <col:4, col:13> Name="attention"
|   | `-ParagraphComment 0x933320 <<invalid sloc>>
|   |-ParagraphComment 0x933370 <line:354:3>
|   | `-TextComment 0x933340 <col:3> Text=" "
|   |-ParamCommandComment 0x933390 <col:4, line:355:3> [in] implicitly Param="timer" ParamIndex=0
|   | `-ParagraphComment 0x933440 <line:354:16, line:355:3>
|   |   |-TextComment 0x9333f0 <line:354:16, col:51> Text="        [IN] Specify the tick timer."
|   |   `-TextComment 0x933410 <line:355:3> Text=" "
|   |-ParamCommandComment 0x933460 <col:4, col:79> [in] implicitly Param="tickHandler" ParamIndex=1
|   | `-ParagraphComment 0x9334f0 <col:22, col:79>
|   |   `-TextComment 0x9334c0 <col:22, col:79> Text="  [IN] Tick Interrupts the execution of the hook function."
|   |-ParagraphComment 0x933540 <line:357:3>
|   | `-TextComment 0x933510 <col:3> Text=" "
|   |-BlockCommandComment 0x933560 <col:4, line:358:3> Name="retval"
|   | `-ParagraphComment 0x9335e0 <line:357:11, line:358:3>
|   |   |-TextComment 0x933590 <line:357:11, col:32> Text=" LOS_OK or Error code."
|   |   `-TextComment 0x9335b0 <line:358:3> Text=" "
|   |-BlockCommandComment 0x933600 <col:4, line:360:3> Name="par"
|   | `-ParagraphComment 0x9337d0 <line:358:8, line:360:3>
|   |   |-TextComment 0x933630 <line:358:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x933650 <line:359:3> Text=" "
|   |   |-HTMLStartTagComment 0x933670 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x9336b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9336f0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x933710 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x933740 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x933770 <line:360:3> Text=" "
|   `-BlockCommandComment 0x9337f0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x933820 <<invalid sloc>>
|-FunctionDecl 0x8b2d88 <line:381:1, col:43> col:13 LOS_UDelay 'void (UINT64)' extern
| `-ParmVarDecl 0x8b2cf8 <col:24, col:31> col:31 microseconds 'UINT64':'unsigned long long'
|-FunctionDecl 0x8b2ed0 <line:400:1, col:39> col:13 LOS_MDelay 'void (UINT32)' extern
| `-ParmVarDecl 0x8b2e40 <col:24, col:31> col:31 millisec 'UINT32':'unsigned int'
|-FunctionDecl 0x8b3010 <line:419:1, col:35> col:15 LOS_CurrNanosec 'UINT64 (void)' extern
|-FunctionDecl 0x8b3170 <line:440:1, col:31> col:13 OsTickHandler 'void (void)' extern
| `-FullComment 0x934270 <line:422:3, line:438:13>
|   |-ParagraphComment 0x933950 <line:422:3>
|   | `-TextComment 0x933920 <col:3> Text=" "
|   |-VerbatimLineComment 0x933970 <col:4, col:22> Text="  los_tick"
|   |-ParagraphComment 0x9339e0 <line:423:3>
|   | `-TextComment 0x9339b0 <col:3> Text=" "
|   |-BlockCommandComment 0x933a00 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x933a60 <col:10, col:41>
|   |   `-TextComment 0x933a30 <col:10, col:41> Text=" Handle the system tick timeout."
|   |-ParagraphComment 0x933ab0 <line:425:3>
|   | `-TextComment 0x933a80 <col:3> Text=" "
|   |-BlockCommandComment 0x933ad0 <col:4, line:426:78> Name="par"
|   | `-ParagraphComment 0x933b50 <line:425:8, line:426:78>
|   |   |-TextComment 0x933b00 <line:425:8, col:20> Text=" Description:"
|   |   `-TextComment 0x933b20 <line:426:3, col:78> Text=" This API is called when the system tick timeout and triggers the interrupt."
|   |-ParagraphComment 0x933ba0 <line:428:3>
|   | `-TextComment 0x933b70 <col:3> Text=" "
|   |-BlockCommandComment 0x933bc0 <col:4, line:431:8> Name="attention"
|   | `-ParagraphComment 0x933db0 <line:429:3, line:431:8>
|   |   |-TextComment 0x933bf0 <line:429:3> Text=" "
|   |   |-HTMLStartTagComment 0x933c10 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x933c50 <line:430:3> Text=" "
|   |   |-HTMLStartTagComment 0x933c70 <col:4, col:7> Name="li"
|   |   |-TextComment 0x933cb0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x933cd0 <col:13, col:17> Name="li"
|   |   |-TextComment 0x933d00 <line:431:3> Text=" "
|   |   `-HTMLEndTagComment 0x933d20 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x933e00 <line:433:3>
|   | `-TextComment 0x933dd0 <col:3> Text=" "
|   |-ParamCommandComment 0x933e20 <col:4, col:15> [in] implicitly Param="none."
|   | `-ParagraphComment 0x933e80 <<invalid sloc>>
|   |-ParagraphComment 0x933ed0 <line:435:3>
|   | `-TextComment 0x933ea0 <col:3> Text=" "
|   |-BlockCommandComment 0x933ef0 <col:4, line:436:3> Name="retval"
|   | `-ParagraphComment 0x933f70 <line:435:11, line:436:3>
|   |   |-TextComment 0x933f20 <line:435:11, col:16> Text=" None."
|   |   `-TextComment 0x933f40 <line:436:3> Text=" "
|   |-BlockCommandComment 0x933f90 <col:4, line:438:3> Name="par"
|   | `-ParagraphComment 0x934160 <line:436:8, line:438:3>
|   |   |-TextComment 0x933fc0 <line:436:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x933fe0 <line:437:3> Text=" "
|   |   |-HTMLStartTagComment 0x934000 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x934040 <col:8, col:11> Name="li"
|   |   |-TextComment 0x934080 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9340a0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x9340d0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x934100 <line:438:3> Text=" "
|   `-BlockCommandComment 0x934180 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x9341e0 <col:8, col:13>
|       `-TextComment 0x9341b0 <col:8, col:13> Text=" None."
|-RecordDecl 0x8b3238 <line:446:9, line:449:1> line:446:16 struct TagCpuTick definition
| |-FullComment 0x9343e0 <line:443:3, line:444:33>
| | |-ParagraphComment 0x934310 <line:443:3>
| | | `-TextComment 0x9342e0 <col:3> Text=" "
| | |-VerbatimLineComment 0x934330 <col:4, col:21> Text=" los_tick"
| | `-ParagraphComment 0x9343a0 <line:444:3, col:33>
| |   `-TextComment 0x934370 <col:3, col:33> Text=" Define the CPU Tick structure."
| |-FieldDecl 0x8b32f0 <line:447:5, col:12> col:12 cntHi 'UINT32':'unsigned int'
| `-FieldDecl 0x8b3350 <line:448:5, col:12> col:12 cntLo 'UINT32':'unsigned int'
|-TypedefDecl 0x8b33f8 <line:446:1, line:449:3> col:3 referenced CpuTick 'struct TagCpuTick':'struct TagCpuTick'
| |-ElaboratedType 0x8b33a0 'struct TagCpuTick' sugar
| | `-RecordType 0x8b32c0 'struct TagCpuTick'
| |   `-Record 0x8b3238 'TagCpuTick'
| `-FullComment 0x934550 <line:443:3, line:444:33>
|   |-ParagraphComment 0x934480 <line:443:3>
|   | `-TextComment 0x934450 <col:3> Text=" "
|   |-VerbatimLineComment 0x9344a0 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0x934510 <line:444:3, col:33>
|     `-TextComment 0x9344e0 <col:3, col:33> Text=" Define the CPU Tick structure."
|-FunctionDecl 0x8b3b60 <line:510:1, col:72> col:15 OsCpuTick2MS 'UINT32 (CpuTick *, UINT32 *, UINT32 *)' extern
| |-ParmVarDecl 0x8b3638 <col:28, col:37> col:37 cpuTick 'CpuTick *'
| |-ParmVarDecl 0x8b36b0 <col:46, col:54> col:54 msHi 'UINT32 *'
| |-ParmVarDecl 0x8b3728 <col:60, col:68> col:68 msLo 'UINT32 *'
| `-FullComment 0x935150 <line:490:3, line:508:13>
|   |-ParagraphComment 0x9345f0 <line:490:3>
|   | `-TextComment 0x9345c0 <col:3> Text=" "
|   |-VerbatimLineComment 0x934610 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x934680 <line:491:3>
|   | `-TextComment 0x934650 <col:3> Text=" "
|   |-BlockCommandComment 0x9346a0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x934700 <col:10, col:41>
|   |   `-TextComment 0x9346d0 <col:10, col:41> Text=" Convert cycles to milliseconds."
|   |-ParagraphComment 0x934750 <line:493:3>
|   | `-TextComment 0x934720 <col:3> Text=" "
|   |-BlockCommandComment 0x934770 <col:4, line:495:3> Name="par"
|   | `-ParagraphComment 0x934820 <line:493:8, line:495:3>
|   |   |-TextComment 0x9347a0 <line:493:8, col:20> Text=" Description:"
|   |   |-TextComment 0x9347c0 <line:494:3, col:54> Text=" This API is used to convert cycles to milliseconds."
|   |   `-TextComment 0x9347e0 <line:495:3> Text=" "
|   |-BlockCommandComment 0x934840 <col:4, line:498:8> Name="attention"
|   | `-ParagraphComment 0x934a10 <line:496:3, line:498:8>
|   |   |-TextComment 0x934870 <line:496:3> Text=" "
|   |   |-HTMLStartTagComment 0x934890 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9348d0 <line:497:3> Text=" "
|   |   |-HTMLStartTagComment 0x9348f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x934930 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x934950 <col:13, col:17> Name="li"
|   |   |-TextComment 0x934980 <line:498:3> Text=" "
|   |   `-HTMLEndTagComment 0x9349a0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x934a60 <line:500:3>
|   | `-TextComment 0x934a30 <col:3> Text=" "
|   |-ParamCommandComment 0x934a80 <col:4, line:501:3> [in] implicitly Param="cpuTick" ParamIndex=0
|   | `-ParagraphComment 0x934b30 <line:500:19, line:501:3>
|   |   |-TextComment 0x934ae0 <line:500:19, col:47> Text="  [IN]  Number of CPU cycles."
|   |   `-TextComment 0x934b00 <line:501:3> Text=" "
|   |-ParamCommandComment 0x934b50 <col:4, line:502:3> [in] implicitly Param="msHi" ParamIndex=1
|   | `-ParagraphComment 0x934c00 <line:501:16, line:502:3>
|   |   |-TextComment 0x934bb0 <line:501:16, col:70> Text="     [OUT] Upper 32 bits of the number of milliseconds."
|   |   `-TextComment 0x934bd0 <line:502:3> Text=" "
|   |-ParamCommandComment 0x934c20 <col:4, col:70> [in] implicitly Param="msLo" ParamIndex=2
|   | `-ParagraphComment 0x934cb0 <col:16, col:70>
|   |   `-TextComment 0x934c80 <col:16, col:70> Text="     [OUT] Lower 32 bits of the number of milliseconds."
|   |-ParagraphComment 0x934d00 <line:504:3>
|   | `-TextComment 0x934cd0 <col:3> Text=" "
|   |-BlockCommandComment 0x934d20 <col:4, line:505:3> Name="retval"
|   | `-ParagraphComment 0x934da0 <line:504:11, line:505:3>
|   |   |-TextComment 0x934d50 <line:504:11, col:68> Text=" #LOS_ERRNO_SYS_PTR_NULL    0x02000011: Invalid parameter."
|   |   `-TextComment 0x934d70 <line:505:3> Text=" "
|   |-BlockCommandComment 0x934dc0 <col:4, line:506:3> Name="retval"
|   | `-ParagraphComment 0x934e40 <line:505:11, line:506:3>
|   |   |-TextComment 0x934df0 <line:505:11, col:91> Text=" #LOS_OK                   0:  Cycles are successfully converted to microseconds."
|   |   `-TextComment 0x934e10 <line:506:3> Text=" "
|   |-BlockCommandComment 0x934e60 <col:4, line:508:3> Name="par"
|   | `-ParagraphComment 0x935030 <line:506:8, line:508:3>
|   |   |-TextComment 0x934e90 <line:506:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x934eb0 <line:507:3> Text=" "
|   |   |-HTMLStartTagComment 0x934ed0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x934f10 <col:8, col:11> Name="li"
|   |   |-TextComment 0x934f50 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x934f70 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x934fa0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x934fd0 <line:508:3> Text=" "
|   `-BlockCommandComment 0x935050 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x9350b0 <col:8, col:13>
|       `-TextComment 0x935080 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8b3de8 <line:533:1, col:72> col:15 OsCpuTick2US 'UINT32 (CpuTick *, UINT32 *, UINT32 *)' extern
| |-ParmVarDecl 0x8b3c58 <col:28, col:37> col:37 cpuTick 'CpuTick *'
| |-ParmVarDecl 0x8b3cd0 <col:46, col:54> col:54 usHi 'UINT32 *'
| |-ParmVarDecl 0x8b3d48 <col:60, col:68> col:68 usLo 'UINT32 *'
| `-FullComment 0x935d50 <line:513:3, line:531:13>
|   |-ParagraphComment 0x9351f0 <line:513:3>
|   | `-TextComment 0x9351c0 <col:3> Text=" "
|   |-VerbatimLineComment 0x935210 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x935280 <line:514:3>
|   | `-TextComment 0x935250 <col:3> Text=" "
|   |-BlockCommandComment 0x9352a0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x935300 <col:10, col:41>
|   |   `-TextComment 0x9352d0 <col:10, col:41> Text=" Convert cycles to microseconds."
|   |-ParagraphComment 0x935350 <line:516:3>
|   | `-TextComment 0x935320 <col:3> Text=" "
|   |-BlockCommandComment 0x935370 <col:4, line:518:3> Name="par"
|   | `-ParagraphComment 0x935420 <line:516:8, line:518:3>
|   |   |-TextComment 0x9353a0 <line:516:8, col:20> Text=" Description:"
|   |   |-TextComment 0x9353c0 <line:517:3, col:54> Text=" This API is used to convert cycles to microseconds."
|   |   `-TextComment 0x9353e0 <line:518:3> Text=" "
|   |-BlockCommandComment 0x935440 <col:4, line:521:8> Name="attention"
|   | `-ParagraphComment 0x935610 <line:519:3, line:521:8>
|   |   |-TextComment 0x935470 <line:519:3> Text=" "
|   |   |-HTMLStartTagComment 0x935490 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9354d0 <line:520:3> Text=" "
|   |   |-HTMLStartTagComment 0x9354f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x935530 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x935550 <col:13, col:17> Name="li"
|   |   |-TextComment 0x935580 <line:521:3> Text=" "
|   |   `-HTMLEndTagComment 0x9355a0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x935660 <line:523:3>
|   | `-TextComment 0x935630 <col:3> Text=" "
|   |-ParamCommandComment 0x935680 <col:4, line:524:3> [in] implicitly Param="cpuTick" ParamIndex=0
|   | `-ParagraphComment 0x935730 <line:523:19, line:524:3>
|   |   |-TextComment 0x9356e0 <line:523:19, col:47> Text="  [IN]  Number of CPU cycles."
|   |   `-TextComment 0x935700 <line:524:3> Text=" "
|   |-ParamCommandComment 0x935750 <col:4, line:525:3> [in] implicitly Param="usHi" ParamIndex=1
|   | `-ParagraphComment 0x935800 <line:524:16, line:525:3>
|   |   |-TextComment 0x9357b0 <line:524:16, col:70> Text="     [OUT] Upper 32 bits of the number of microseconds."
|   |   `-TextComment 0x9357d0 <line:525:3> Text=" "
|   |-ParamCommandComment 0x935820 <col:4, col:70> [in] implicitly Param="usLo" ParamIndex=2
|   | `-ParagraphComment 0x9358b0 <col:16, col:70>
|   |   `-TextComment 0x935880 <col:16, col:70> Text="     [OUT] Lower 32 bits of the number of microseconds."
|   |-ParagraphComment 0x935900 <line:527:3>
|   | `-TextComment 0x9358d0 <col:3> Text=" "
|   |-BlockCommandComment 0x935920 <col:4, line:528:3> Name="retval"
|   | `-ParagraphComment 0x9359a0 <line:527:11, line:528:3>
|   |   |-TextComment 0x935950 <line:527:11, col:68> Text=" #LOS_ERRNO_SYS_PTR_NULL    0x02000011: Invalid parameter."
|   |   `-TextComment 0x935970 <line:528:3> Text=" "
|   |-BlockCommandComment 0x9359c0 <col:4, line:529:3> Name="retval"
|   | `-ParagraphComment 0x935a40 <line:528:11, line:529:3>
|   |   |-TextComment 0x9359f0 <line:528:11, col:90> Text=" #LOS_OK                   0: Cycles are successfully converted to microseconds."
|   |   `-TextComment 0x935a10 <line:529:3> Text=" "
|   |-BlockCommandComment 0x935a60 <col:4, line:531:3> Name="par"
|   | `-ParagraphComment 0x935c30 <line:529:8, line:531:3>
|   |   |-TextComment 0x935a90 <line:529:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x935ab0 <line:530:3> Text=" "
|   |   |-HTMLStartTagComment 0x935ad0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x935b10 <col:8, col:11> Name="li"
|   |   |-TextComment 0x935b50 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x935b70 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x935ba0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x935bd0 <line:531:3> Text=" "
|   `-BlockCommandComment 0x935c50 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x935cb0 <col:8, col:13>
|       `-TextComment 0x935c80 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8b3f68 <main/los_compiler.h:130:23, main/los_tick.h:556:1> line:553:22 OsCycle2MS 'UINT64 (UINT64)' static inline
| |-ParmVarDecl 0x8b3ed8 <col:33, col:40> col:40 used cycle 'UINT64':'unsigned long long'
| |-CompoundStmt 0x8b4208 <line:554:1, line:556:1>
| | `-ReturnStmt 0x8b41c8 <line:555:5, col:66>
| |   `-CStyleCastExpr 0x8b41a0 <col:12, col:66> 'UINT64':'unsigned long long' <NoOp>
| |     `-ParenExpr 0x8b4180 <col:20, col:66> 'unsigned long long'
| |       `-ParenExpr 0x8b4130 <col:21, col:65> 'unsigned long long'
| |         `-BinaryOperator 0x8b4110 <col:22, col:64> 'unsigned long long' '/'
| |           |-ImplicitCastExpr 0x8b40e0 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
| |           | `-DeclRefExpr 0x8b4010 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0x8b3ed8 'cycle' 'UINT64':'unsigned long long'
| |           `-ImplicitCastExpr 0x8b40f8 <col:30, col:64> 'unsigned long long' <IntegralCast>
| |             `-ParenExpr 0x8b40c0 <col:30, col:64> 'unsigned int'
| |               `-BinaryOperator 0x8b40a0 <col:31, line:461:32> 'unsigned int' '/'
| |                 |-ImplicitCastExpr 0x8b4070 <line:555:31> 'UINT32':'unsigned int' <LValueToRValue>
| |                 | `-DeclRefExpr 0x8b4030 <col:31> 'UINT32':'unsigned int' lvalue Var 0x8ad488 'g_sysClock' 'UINT32':'unsigned int'
| |                 `-ImplicitCastExpr 0x8b4088 <line:461:32> 'unsigned int' <IntegralCast>
| |                   `-IntegerLiteral 0x8b4050 <col:32> 'int' 1000
| `-FullComment 0x936740 <line:536:3, line:551:13>
|   |-ParagraphComment 0x935e30 <line:536:3>
|   | `-TextComment 0x935e00 <col:3> Text=" "
|   |-VerbatimLineComment 0x935e50 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x935ec0 <line:537:3>
|   | `-TextComment 0x935e90 <col:3> Text=" "
|   |-BlockCommandComment 0x935ee0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x935f40 <col:10, col:41>
|   |   `-TextComment 0x935f10 <col:10, col:41> Text=" Convert cycles to milliseconds."
|   |-ParagraphComment 0x935f90 <line:539:3>
|   | `-TextComment 0x935f60 <col:3> Text=" "
|   |-BlockCommandComment 0x935fb0 <col:4, line:541:3> Name="par"
|   | `-ParagraphComment 0x936060 <line:539:8, line:541:3>
|   |   |-TextComment 0x935fe0 <line:539:8, col:20> Text=" Description:"
|   |   |-TextComment 0x936000 <line:540:3, col:54> Text=" This API is used to convert cycles to milliseconds."
|   |   `-TextComment 0x936020 <line:541:3> Text=" "
|   |-BlockCommandComment 0x936080 <col:4, line:544:8> Name="attention"
|   | `-ParagraphComment 0x936250 <line:542:3, line:544:8>
|   |   |-TextComment 0x9360b0 <line:542:3> Text=" "
|   |   |-HTMLStartTagComment 0x9360d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x936110 <line:543:3> Text=" "
|   |   |-HTMLStartTagComment 0x936130 <col:4, col:7> Name="li"
|   |   |-TextComment 0x936170 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x936190 <col:13, col:17> Name="li"
|   |   |-TextComment 0x9361c0 <line:544:3> Text=" "
|   |   `-HTMLEndTagComment 0x9361e0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x9362a0 <line:546:3>
|   | `-TextComment 0x936270 <col:3> Text=" "
|   |-ParamCommandComment 0x9362c0 <col:4, col:43> [in] implicitly Param="cycle" ParamIndex=0
|   | `-ParagraphComment 0x936350 <col:17, col:43>
|   |   `-TextComment 0x936320 <col:17, col:43> Text="     [IN] Number of cycles."
|   |-ParagraphComment 0x9363a0 <line:548:3>
|   | `-TextComment 0x936370 <col:3> Text=" "
|   |-BlockCommandComment 0x9363c0 <col:4, line:549:3> Name="retval"
|   | `-ParagraphComment 0x936440 <line:548:11, line:549:3>
|   |   |-TextComment 0x9363f0 <line:548:11, col:120> Text=" Number of milliseconds obtained through the conversion.    Cycles are successfully converted to milliseconds."
|   |   `-TextComment 0x936410 <line:549:3> Text=" "
|   |-BlockCommandComment 0x936460 <col:4, line:551:3> Name="par"
|   | `-ParagraphComment 0x936630 <line:549:8, line:551:3>
|   |   |-TextComment 0x936490 <line:549:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9364b0 <line:550:3> Text=" "
|   |   |-HTMLStartTagComment 0x9364d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x936510 <col:8, col:11> Name="li"
|   |   |-TextComment 0x936550 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x936570 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x9365a0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x9365d0 <line:551:3> Text=" "
|   `-BlockCommandComment 0x936650 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x9366b0 <col:8, col:13>
|       `-TextComment 0x936680 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8b42c0 <main/los_compiler.h:130:23, main/los_tick.h:583:1> line:576:22 OsCycle2US 'UINT64 (UINT64)' static inline
| |-ParmVarDecl 0x8b4230 <col:33, col:40> col:40 used cycle 'UINT64':'unsigned long long'
| |-CompoundStmt 0x8b46c0 <line:577:1, line:583:1>
| | |-DeclStmt 0x8b4488 <line:578:5, col:51>
| | | `-VarDecl 0x8b4378 <col:5, line:467:32> line:578:12 used tmp 'UINT64':'unsigned long long' cinit
| | |   `-ImplicitCastExpr 0x8b4470 <col:18, line:467:32> 'UINT64':'unsigned long long' <IntegralCast>
| | |     `-BinaryOperator 0x8b4450 <line:578:18, line:467:32> 'unsigned int' '/'
| | |       |-ImplicitCastExpr 0x8b4420 <line:578:18> 'UINT32':'unsigned int' <LValueToRValue>
| | |       | `-DeclRefExpr 0x8b43e0 <col:18> 'UINT32':'unsigned int' lvalue Var 0x8ad488 'g_sysClock' 'UINT32':'unsigned int'
| | |       `-ImplicitCastExpr 0x8b4438 <line:467:32> 'unsigned int' <IntegralCast>
| | |         `-IntegerLiteral 0x8b4400 <col:32> 'int' 1000000
| | |-IfStmt 0x8b4590 <line:579:5, line:581:5>
| | | |-BinaryOperator 0x8b4510 <line:579:9, col:16> 'int' '=='
| | | | |-ImplicitCastExpr 0x8b44e0 <col:9> 'UINT64':'unsigned long long' <LValueToRValue>
| | | | | `-DeclRefExpr 0x8b44a0 <col:9> 'UINT64':'unsigned long long' lvalue Var 0x8b4378 'tmp' 'UINT64':'unsigned long long'
| | | | `-ImplicitCastExpr 0x8b44f8 <col:16> 'unsigned long long' <IntegralCast>
| | | |   `-IntegerLiteral 0x8b44c0 <col:16> 'int' 0
| | | `-CompoundStmt 0x8b4578 <col:19, line:581:5>
| | |   `-ReturnStmt 0x8b4568 <line:580:9, col:16>
| | |     `-ImplicitCastExpr 0x8b4550 <col:16> 'UINT64':'unsigned long long' <IntegralCast>
| | |       `-IntegerLiteral 0x8b4530 <col:16> 'int' 0
| | `-ReturnStmt 0x8b46b0 <line:582:5, col:32>
| |   `-CStyleCastExpr 0x8b4688 <col:12, col:32> 'UINT64':'unsigned long long' <NoOp>
| |     `-ParenExpr 0x8b4668 <col:20, col:32> 'unsigned long long'
| |       `-BinaryOperator 0x8b4618 <col:21, col:29> 'unsigned long long' '/'
| |         |-ImplicitCastExpr 0x8b45e8 <col:21> 'UINT64':'unsigned long long' <LValueToRValue>
| |         | `-DeclRefExpr 0x8b45a8 <col:21> 'UINT64':'unsigned long long' lvalue ParmVar 0x8b4230 'cycle' 'UINT64':'unsigned long long'
| |         `-ImplicitCastExpr 0x8b4600 <col:29> 'UINT64':'unsigned long long' <LValueToRValue>
| |           `-DeclRefExpr 0x8b45c8 <col:29> 'UINT64':'unsigned long long' lvalue Var 0x8b4378 'tmp' 'UINT64':'unsigned long long'
| `-FullComment 0x9370f0 <line:559:3, line:574:13>
|   |-ParagraphComment 0x9367e0 <line:559:3>
|   | `-TextComment 0x9367b0 <col:3> Text=" "
|   |-VerbatimLineComment 0x936800 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0x936870 <line:560:3>
|   | `-TextComment 0x936840 <col:3> Text=" "
|   |-BlockCommandComment 0x936890 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x9368f0 <col:10, col:41>
|   |   `-TextComment 0x9368c0 <col:10, col:41> Text=" Convert cycles to microseconds."
|   |-ParagraphComment 0x936940 <line:562:3>
|   | `-TextComment 0x936910 <col:3> Text=" "
|   |-BlockCommandComment 0x936960 <col:4, line:564:3> Name="par"
|   | `-ParagraphComment 0x936a10 <line:562:8, line:564:3>
|   |   |-TextComment 0x936990 <line:562:8, col:20> Text=" Description:"
|   |   |-TextComment 0x9369b0 <line:563:3, col:54> Text=" This API is used to convert cycles to microseconds."
|   |   `-TextComment 0x9369d0 <line:564:3> Text=" "
|   |-BlockCommandComment 0x936a30 <col:4, line:567:8> Name="attention"
|   | `-ParagraphComment 0x936c00 <line:565:3, line:567:8>
|   |   |-TextComment 0x936a60 <line:565:3> Text=" "
|   |   |-HTMLStartTagComment 0x936a80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x936ac0 <line:566:3> Text=" "
|   |   |-HTMLStartTagComment 0x936ae0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x936b20 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x936b40 <col:13, col:17> Name="li"
|   |   |-TextComment 0x936b70 <line:567:3> Text=" "
|   |   `-HTMLEndTagComment 0x936b90 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x936c50 <line:569:3>
|   | `-TextComment 0x936c20 <col:3> Text=" "
|   |-ParamCommandComment 0x936c70 <col:4, col:43> [in] implicitly Param="cycle" ParamIndex=0
|   | `-ParagraphComment 0x936d00 <col:17, col:43>
|   |   `-TextComment 0x936cd0 <col:17, col:43> Text="     [IN] Number of cycles."
|   |-ParagraphComment 0x936d50 <line:571:3>
|   | `-TextComment 0x936d20 <col:3> Text=" "
|   |-BlockCommandComment 0x936d70 <col:4, line:572:3> Name="retval"
|   | `-ParagraphComment 0x936df0 <line:571:11, line:572:3>
|   |   |-TextComment 0x936da0 <line:571:11, col:117> Text=" Number of microseconds obtained through the conversion. Cycles are successfully converted to microseconds."
|   |   `-TextComment 0x936dc0 <line:572:3> Text=" "
|   |-BlockCommandComment 0x936e10 <col:4, line:574:3> Name="par"
|   | `-ParagraphComment 0x936fe0 <line:572:8, line:574:3>
|   |   |-TextComment 0x936e40 <line:572:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x936e60 <line:573:3> Text=" "
|   |   |-HTMLStartTagComment 0x936e80 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x936ec0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x936f00 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x936f20 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x936f50 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x936f80 <line:574:3> Text=" "
|   `-BlockCommandComment 0x937000 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x937060 <col:8, col:13>
|       `-TextComment 0x937030 <col:8, col:13> Text=" None."
|-EnumDecl 0x8b46e8 <main/los_sortlink.h:44:9, line:47:1> line:44:9
| |-EnumConstantDecl 0x8b47e8 <line:45:5, col:25> col:5 OS_SORT_LINK_TASK 'int'
| | `-ConstantExpr 0x8b47d0 <col:25> 'int'
| |   `-IntegerLiteral 0x8b47b0 <col:25> 'int' 1
| `-EnumConstantDecl 0x8b4870 <line:46:5, col:26> col:5 OS_SORT_LINK_SWTMR 'int'
|   `-ConstantExpr 0x8b4858 <col:26> 'int'
|     `-IntegerLiteral 0x8b4838 <col:26> 'int' 2
|-TypedefDecl 0x8b4918 <line:44:1, line:47:3> col:3 referenced SortLinkType 'enum SortLinkType':'SortLinkType'
| `-ElaboratedType 0x8b48c0 'enum SortLinkType' sugar
|   `-EnumType 0x8b4790 'SortLinkType'
|     `-Enum 0x8b46e8 ''
|-RecordDecl 0x8b4988 <line:49:9, line:52:1> line:49:9 struct definition
| |-FieldDecl 0x8b4a40 <line:50:5, col:17> col:17 referenced sortLinkNode 'LOS_DL_LIST':'struct LOS_DL_LIST'
| `-FieldDecl 0x8b4aa0 <line:51:5, col:17> col:17 referenced responseTime 'UINT64':'unsigned long long'
|-TypedefDecl 0x8b6ed8 <line:49:1, line:52:3> col:3 referenced SortLinkList 'struct SortLinkList':'SortLinkList'
| `-ElaboratedType 0x8b6e80 'struct SortLinkList' sugar
|   `-RecordType 0x8b4a10 'SortLinkList'
|     `-Record 0x8b4988 ''
|-RecordDecl 0x8b6f48 <line:54:9, line:56:1> line:54:9 struct definition
| `-FieldDecl 0x8b7000 <line:55:5, col:17> col:17 referenced sortLink 'LOS_DL_LIST':'struct LOS_DL_LIST'
|-TypedefDecl 0x8b70a8 <line:54:1, line:56:3> col:3 referenced SortLinkAttribute 'struct SortLinkAttribute':'SortLinkAttribute'
| `-ElaboratedType 0x8b7050 'struct SortLinkAttribute' sugar
|   `-RecordType 0x8b6fd0 'SortLinkAttribute'
|     `-Record 0x8b6f48 ''
|-VarDecl 0x8b7150 <line:58:1, col:26> col:26 used g_taskSortLink 'SortLinkAttribute':'SortLinkAttribute' extern
|-VarDecl 0x8b71c8 <line:59:1, col:26> col:26 used g_swtmrSortLink 'SortLinkAttribute':'SortLinkAttribute' extern
|-FunctionDecl 0x8b7448 <main/los_compiler.h:158:22, main/los_sortlink.h:73:1> line:67:22 OsSortLinkGetRemainTime 'UINT64 (UINT64, const SortLinkList *)' static inline
| |-ParmVarDecl 0x8b7240 <col:46, col:53> col:53 used currTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x8b7338 <col:63, col:83> col:83 used targetSortList 'const SortLinkList *'
| `-CompoundStmt 0x8b7750 <line:68:1, line:73:1>
|   |-IfStmt 0x8b7630 <line:69:5, line:71:5>
|   | |-BinaryOperator 0x8b75b0 <line:69:9, col:37> 'int' '>='
|   | | |-ImplicitCastExpr 0x8b7580 <col:9> 'UINT64':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x8b74f8 <col:9> 'UINT64':'unsigned long long' lvalue ParmVar 0x8b7240 'currTime' 'UINT64':'unsigned long long'
|   | | `-ImplicitCastExpr 0x8b7598 <col:21, col:37> 'UINT64':'unsigned long long' <LValueToRValue>
|   | |   `-MemberExpr 0x8b7550 <col:21, col:37> 'const UINT64':'const unsigned long long' lvalue ->responseTime 0x8b4aa0
|   | |     `-ImplicitCastExpr 0x8b7538 <col:21> 'const SortLinkList *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x8b7518 <col:21> 'const SortLinkList *' lvalue ParmVar 0x8b7338 'targetSortList' 'const SortLinkList *'
|   | `-CompoundStmt 0x8b7618 <col:51, line:71:5>
|   |   `-ReturnStmt 0x8b7608 <line:70:9, col:16>
|   |     `-ImplicitCastExpr 0x8b75f0 <col:16> 'UINT64':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x8b75d0 <col:16> 'int' 0
|   `-ReturnStmt 0x8b7740 <line:72:5, col:52>
|     `-ParenExpr 0x8b7720 <col:12, col:52> 'unsigned long long'
|       `-BinaryOperator 0x8b7700 <col:13, col:44> 'unsigned long long' '-'
|         |-ImplicitCastExpr 0x8b76d0 <col:13, col:29> 'UINT64':'unsigned long long' <LValueToRValue>
|         | `-MemberExpr 0x8b7680 <col:13, col:29> 'const UINT64':'const unsigned long long' lvalue ->responseTime 0x8b4aa0
|         |   `-ImplicitCastExpr 0x8b7668 <col:13> 'const SortLinkList *' <LValueToRValue>
|         |     `-DeclRefExpr 0x8b7648 <col:13> 'const SortLinkList *' lvalue ParmVar 0x8b7338 'targetSortList' 'const SortLinkList *'
|         `-ImplicitCastExpr 0x8b76e8 <col:44> 'UINT64':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x8b76b0 <col:44> 'UINT64':'unsigned long long' lvalue ParmVar 0x8b7240 'currTime' 'UINT64':'unsigned long long'
|-FunctionDecl 0x8b78c8 <main/los_compiler.h:158:22, main/los_sortlink.h:79:1> line:75:20 OsDeleteNodeSortLink 'void (SortLinkList *)' static inline
| |-ParmVarDecl 0x8b77d8 <col:41, col:55> col:55 used sortList 'SortLinkList *'
| `-CompoundStmt 0x8b7c40 <line:76:1, line:79:1>
|   |-CallExpr 0x8b7a28 <line:77:5, col:43> 'void'
|   | |-ImplicitCastExpr 0x8b7a10 <col:5> 'void (*)(LOS_DL_LIST *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x8b7970 <col:5> 'void (LOS_DL_LIST *)' Function 0x8937e0 'LOS_ListDelete' 'void (LOS_DL_LIST *)'
|   | `-UnaryOperator 0x8b79f8 <col:20, col:31> 'LOS_DL_LIST *' prefix '&' cannot overflow
|   |   `-MemberExpr 0x8b79c8 <col:21, col:31> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue ->sortLinkNode 0x8b4a40
|   |     `-ImplicitCastExpr 0x8b79b0 <col:21> 'SortLinkList *' <LValueToRValue>
|   |       `-DeclRefExpr 0x8b7990 <col:21> 'SortLinkList *' lvalue ParmVar 0x8b77d8 'sortList' 'SortLinkList *'
|   `-ParenExpr 0x8b7c20 <line:62:45, col:98> 'UINT64':'unsigned long long'
|     `-BinaryOperator 0x8b7c00 <col:46, col:97> 'UINT64':'unsigned long long' '='
|       |-MemberExpr 0x8b7b20 <col:46, col:76> 'UINT64':'unsigned long long' lvalue ->responseTime 0x8b4aa0
|       | `-ParenExpr 0x8b7b00 <col:46, col:73> 'SortLinkList *'
|       |   `-CStyleCastExpr 0x8b7ad8 <col:47, col:72> 'SortLinkList *' <NoOp>
|       |     `-ImplicitCastExpr 0x8b7ac0 <col:63, col:72> 'SortLinkList *' <LValueToRValue> part_of_explicit_cast
|       |       `-ParenExpr 0x8b7aa0 <col:63, col:72> 'SortLinkList *' lvalue
|       |         `-DeclRefExpr 0x8b7a50 <line:78:24> 'SortLinkList *' lvalue ParmVar 0x8b77d8 'sortList' 'SortLinkList *'
|       `-ParenExpr 0x8b7be0 <line:62:91, col:97> 'UINT64':'unsigned long long'
|         `-ParenExpr 0x8b7bc0 <line:61:35, col:46> 'UINT64':'unsigned long long'
|           `-CStyleCastExpr 0x8b7b98 <col:36, col:45> 'UINT64':'unsigned long long' <IntegralCast>
|             `-UnaryOperator 0x8b7b70 <col:44, col:45> 'int' prefix '-'
|               `-IntegerLiteral 0x8b7b50 <col:45> 'int' 1
|-FunctionDecl 0x8b8358 <main/los_compiler.h:158:22, main/los_sortlink.h:96:1> line:81:22 used GetSortLinkNextExpireTime 'UINT64 (SortLinkAttribute *, UINT64, UINT32)' static inline
| |-ParmVarDecl 0x8b7cc8 <col:48, col:67> col:67 used sortHeader 'SortLinkAttribute *'
| |-ParmVarDecl 0x8b7d40 <col:79, col:86> col:86 used startTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x8b7db8 <col:97, col:104> col:104 used tickPrecision 'UINT32':'unsigned int'
| `-CompoundStmt 0x8b8f28 <line:82:1, line:96:1>
|   |-DeclStmt 0x8b8508 <line:83:5, col:46>
|   | `-VarDecl 0x8b8420 <col:5, col:38> col:18 used head 'LOS_DL_LIST *' cinit
|   |   `-UnaryOperator 0x8b84f0 <col:25, col:38> 'LOS_DL_LIST *' prefix '&' cannot overflow
|   |     `-MemberExpr 0x8b84c0 <col:26, col:38> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue ->sortLink 0x8b7000
|   |       `-ImplicitCastExpr 0x8b84a8 <col:26> 'SortLinkAttribute *' <LValueToRValue>
|   |         `-DeclRefExpr 0x8b8488 <col:26> 'SortLinkAttribute *' lvalue ParmVar 0x8b7cc8 'sortHeader' 'SortLinkAttribute *'
|   |-DeclStmt 0x8b8618 <line:84:5, col:38>
|   | `-VarDecl 0x8b8530 <col:5, col:31> col:18 used list 'LOS_DL_LIST *' cinit
|   |   `-ImplicitCastExpr 0x8b8600 <col:25, col:31> 'struct LOS_DL_LIST *' <LValueToRValue>
|   |     `-MemberExpr 0x8b85d0 <col:25, col:31> 'struct LOS_DL_LIST *' lvalue ->pstNext 0x885380
|   |       `-ImplicitCastExpr 0x8b85b8 <col:25> 'LOS_DL_LIST *' <LValueToRValue>
|   |         `-DeclRefExpr 0x8b8598 <col:25> 'LOS_DL_LIST *' lvalue Var 0x8b8420 'head' 'LOS_DL_LIST *'
|   |-IfStmt 0x8b8848 <line:86:5, line:88:5>
|   | |-CallExpr 0x8b86e0 <line:86:9, col:27> 'BOOL':'unsigned int'
|   | | |-ImplicitCastExpr 0x8b86c8 <col:9> 'BOOL (*)(LOS_DL_LIST *)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x8b8630 <col:9> 'BOOL (LOS_DL_LIST *)' Function 0x893f48 'LOS_ListEmpty' 'BOOL (LOS_DL_LIST *)'
|   | | `-ImplicitCastExpr 0x8b8708 <col:23> 'LOS_DL_LIST *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x8b8650 <col:23> 'LOS_DL_LIST *' lvalue Var 0x8b8420 'head' 'LOS_DL_LIST *'
|   | `-CompoundStmt 0x8b8830 <col:30, line:88:5>
|   |   `-ReturnStmt 0x8b8820 <line:87:9, col:42>
|   |     `-BinaryOperator 0x8b8800 <line:65:33, line:87:42> 'unsigned long long' '-'
|   |       |-ParenExpr 0x8b8790 <line:65:33, col:44> 'UINT64':'unsigned long long'
|   |       | `-CStyleCastExpr 0x8b8768 <col:34, col:43> 'UINT64':'unsigned long long' <IntegralCast>
|   |       |   `-UnaryOperator 0x8b8740 <col:42, col:43> 'int' prefix '-'
|   |       |     `-IntegerLiteral 0x8b8720 <col:43> 'int' 1
|   |       `-ImplicitCastExpr 0x8b87e8 <line:87:42> 'unsigned long long' <IntegralCast>
|   |         `-ImplicitCastExpr 0x8b87d0 <col:42> 'UINT32':'unsigned int' <LValueToRValue>
|   |           `-DeclRefExpr 0x8b87b0 <col:42> 'UINT32':'unsigned int' lvalue ParmVar 0x8b7db8 'tickPrecision' 'UINT32':'unsigned int'
|   |-DeclStmt 0x8b8c10 <line:90:5, col:83>
|   | `-VarDecl 0x8b8870 <col:5, main/los_list.h:277:69> main/los_sortlink.h:90:19 used listSorted 'SortLinkList *' cinit
|   |   `-ParenExpr 0x8b8b98 <main/los_list.h:277:5, col:69> 'SortLinkList *'
|   |     `-CStyleCastExpr 0x8b8b70 <col:6, col:68> 'SortLinkList *' <BitCast>
|   |       `-CStyleCastExpr 0x8b8b38 <col:14, col:68> 'void *' <BitCast>
|   |         `-ParenExpr 0x8b8b18 <col:22, col:68> 'CHAR *'
|   |           `-BinaryOperator 0x8b8ac0 <col:23, line:251:69> 'CHAR *' '-'
|   |             |-CStyleCastExpr 0x8b8960 <line:277:23, col:36> 'CHAR *' <BitCast>
|   |             | `-ImplicitCastExpr 0x8b8948 <col:31, col:36> 'LOS_DL_LIST *' <LValueToRValue> part_of_explicit_cast
|   |             |   `-ParenExpr 0x8b8928 <col:31, col:36> 'LOS_DL_LIST *' lvalue
|   |             |     `-DeclRefExpr 0x8b88d8 <main/los_sortlink.h:90:50> 'LOS_DL_LIST *' lvalue Var 0x8b8530 'list' 'LOS_DL_LIST *'
|   |             `-ParenExpr 0x8b8aa0 <main/los_list.h:251:38, col:69> 'UINT32':'unsigned int'
|   |               `-CStyleCastExpr 0x8b8a78 <col:39, col:68> 'UINT32':'unsigned int' <PointerToIntegral>
|   |                 `-UnaryOperator 0x8b8a50 <col:47, col:68> 'LOS_DL_LIST *' prefix '&' cannot overflow
|   |                   `-ParenExpr 0x8b8a30 <col:48, col:68> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue
|   |                     `-MemberExpr 0x8b8a00 <col:49, main/los_sortlink.h:90:70> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue ->sortLinkNode 0x8b4a40
|   |                       `-ParenExpr 0x8b89e0 <main/los_list.h:251:49, col:59> 'SortLinkList *'
|   |                         `-CStyleCastExpr 0x8b89b8 <col:50, col:58> 'SortLinkList *' <NullToPointer>
|   |                           `-IntegerLiteral 0x8b8988 <col:58> 'int' 0
|   |-IfStmt 0x8b8e80 <main/los_sortlink.h:91:5, line:93:5>
|   | |-BinaryOperator 0x8b8d70 <line:91:9, col:63> 'int' '<='
|   | | |-ImplicitCastExpr 0x8b8d58 <col:9, col:21> 'UINT64':'unsigned long long' <LValueToRValue>
|   | | | `-MemberExpr 0x8b8c60 <col:9, col:21> 'UINT64':'unsigned long long' lvalue ->responseTime 0x8b4aa0
|   | | |   `-ImplicitCastExpr 0x8b8c48 <col:9> 'SortLinkList *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x8b8c28 <col:9> 'SortLinkList *' lvalue Var 0x8b8870 'listSorted' 'SortLinkList *'
|   | | `-ParenExpr 0x8b8d38 <col:37, col:63> 'unsigned long long'
|   | |   `-BinaryOperator 0x8b8d18 <col:38, col:50> 'unsigned long long' '+'
|   | |     |-ImplicitCastExpr 0x8b8cd0 <col:38> 'UINT64':'unsigned long long' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x8b8c90 <col:38> 'UINT64':'unsigned long long' lvalue ParmVar 0x8b7d40 'startTime' 'UINT64':'unsigned long long'
|   | |     `-ImplicitCastExpr 0x8b8d00 <col:50> 'unsigned long long' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x8b8ce8 <col:50> 'UINT32':'unsigned int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x8b8cb0 <col:50> 'UINT32':'unsigned int' lvalue ParmVar 0x8b7db8 'tickPrecision' 'UINT32':'unsigned int'
|   | `-CompoundStmt 0x8b8e68 <col:66, line:93:5>
|   |   `-ReturnStmt 0x8b8e58 <line:92:9, col:42>
|   |     `-ParenExpr 0x8b8e38 <col:16, col:42> 'unsigned long long'
|   |       `-BinaryOperator 0x8b8e18 <col:17, col:29> 'unsigned long long' '+'
|   |         |-ImplicitCastExpr 0x8b8dd0 <col:17> 'UINT64':'unsigned long long' <LValueToRValue>
|   |         | `-DeclRefExpr 0x8b8d90 <col:17> 'UINT64':'unsigned long long' lvalue ParmVar 0x8b7d40 'startTime' 'UINT64':'unsigned long long'
|   |         `-ImplicitCastExpr 0x8b8e00 <col:29> 'unsigned long long' <IntegralCast>
|   |           `-ImplicitCastExpr 0x8b8de8 <col:29> 'UINT32':'unsigned int' <LValueToRValue>
|   |             `-DeclRefExpr 0x8b8db0 <col:29> 'UINT32':'unsigned int' lvalue ParmVar 0x8b7db8 'tickPrecision' 'UINT32':'unsigned int'
|   `-ReturnStmt 0x8b8f18 <line:95:5, col:24>
|     `-ImplicitCastExpr 0x8b8f00 <col:12, col:24> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-MemberExpr 0x8b8ed0 <col:12, col:24> 'UINT64':'unsigned long long' lvalue ->responseTime 0x8b4aa0
|         `-ImplicitCastExpr 0x8b8eb8 <col:12> 'SortLinkList *' <LValueToRValue>
|           `-DeclRefExpr 0x8b8e98 <col:12> 'SortLinkList *' lvalue Var 0x8b8870 'listSorted' 'SortLinkList *'
|-FunctionDecl 0x8b9108 <main/los_compiler.h:158:22, main/los_sortlink.h:103:1> line:98:22 OsGetNextExpireTime 'UINT64 (UINT64, UINT32)' static inline
| |-ParmVarDecl 0x8b8f78 <col:42, col:49> col:49 used startTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x8b8ff0 <col:60, col:67> col:67 used tickPrecision 'UINT32':'unsigned int'
| `-CompoundStmt 0x8b96e8 <line:99:1, line:103:1>
|   |-DeclStmt 0x8b93c8 <line:100:5, col:97>
|   | `-VarDecl 0x8b91c8 <col:5, col:96> col:12 used taskExpireTime 'UINT64':'unsigned long long' cinit
|   |   `-CallExpr 0x8b9360 <col:29, col:96> 'UINT64':'unsigned long long'
|   |     |-ImplicitCastExpr 0x8b9348 <col:29> 'UINT64 (*)(SortLinkAttribute *, UINT64, UINT32)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x8b9230 <col:29> 'UINT64 (SortLinkAttribute *, UINT64, UINT32)' Function 0x8b8358 'GetSortLinkNextExpireTime' 'UINT64 (SortLinkAttribute *, UINT64, UINT32)'
|   |     |-UnaryOperator 0x8b9270 <col:55, col:56> 'SortLinkAttribute *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x8b9250 <col:56> 'SortLinkAttribute':'SortLinkAttribute' lvalue Var 0x8b7150 'g_taskSortLink' 'SortLinkAttribute':'SortLinkAttribute'
|   |     |-ImplicitCastExpr 0x8b9398 <col:72> 'UINT64':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x8b9288 <col:72> 'UINT64':'unsigned long long' lvalue ParmVar 0x8b8f78 'startTime' 'UINT64':'unsigned long long'
|   |     `-ImplicitCastExpr 0x8b93b0 <col:83> 'UINT32':'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x8b92a8 <col:83> 'UINT32':'unsigned int' lvalue ParmVar 0x8b8ff0 'tickPrecision' 'UINT32':'unsigned int'
|   |-DeclStmt 0x8b9570 <line:101:5, col:99>
|   | `-VarDecl 0x8b93f0 <col:5, col:98> col:12 used swtmrExpireTime 'UINT64':'unsigned long long' cinit
|   |   `-CallExpr 0x8b9508 <col:30, col:98> 'UINT64':'unsigned long long'
|   |     |-ImplicitCastExpr 0x8b94f0 <col:30> 'UINT64 (*)(SortLinkAttribute *, UINT64, UINT32)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x8b9458 <col:30> 'UINT64 (SortLinkAttribute *, UINT64, UINT32)' Function 0x8b8358 'GetSortLinkNextExpireTime' 'UINT64 (SortLinkAttribute *, UINT64, UINT32)'
|   |     |-UnaryOperator 0x8b9498 <col:56, col:57> 'SortLinkAttribute *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x8b9478 <col:57> 'SortLinkAttribute':'SortLinkAttribute' lvalue Var 0x8b71c8 'g_swtmrSortLink' 'SortLinkAttribute':'SortLinkAttribute'
|   |     |-ImplicitCastExpr 0x8b9540 <col:74> 'UINT64':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x8b94b0 <col:74> 'UINT64':'unsigned long long' lvalue ParmVar 0x8b8f78 'startTime' 'UINT64':'unsigned long long'
|   |     `-ImplicitCastExpr 0x8b9558 <col:85> 'UINT32':'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x8b94d0 <col:85> 'UINT32':'unsigned int' lvalue ParmVar 0x8b8ff0 'tickPrecision' 'UINT32':'unsigned int'
|   `-ReturnStmt 0x8b96d8 <line:102:5, col:66>
|     `-ConditionalOperator 0x8b96a8 <col:12, col:66> 'unsigned long long'
|       |-ParenExpr 0x8b9618 <col:12, col:45> 'int'
|       | `-BinaryOperator 0x8b95f8 <col:13, col:30> 'int' '<'
|       |   |-ImplicitCastExpr 0x8b95c8 <col:13> 'UINT64':'unsigned long long' <LValueToRValue>
|       |   | `-DeclRefExpr 0x8b9588 <col:13> 'UINT64':'unsigned long long' lvalue Var 0x8b91c8 'taskExpireTime' 'UINT64':'unsigned long long'
|       |   `-ImplicitCastExpr 0x8b95e0 <col:30> 'UINT64':'unsigned long long' <LValueToRValue>
|       |     `-DeclRefExpr 0x8b95a8 <col:30> 'UINT64':'unsigned long long' lvalue Var 0x8b93f0 'swtmrExpireTime' 'UINT64':'unsigned long long'
|       |-ImplicitCastExpr 0x8b9678 <col:49> 'UINT64':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x8b9638 <col:49> 'UINT64':'unsigned long long' lvalue Var 0x8b91c8 'taskExpireTime' 'UINT64':'unsigned long long'
|       `-ImplicitCastExpr 0x8b9690 <col:66> 'UINT64':'unsigned long long' <LValueToRValue>
|         `-DeclRefExpr 0x8b9658 <col:66> 'UINT64':'unsigned long long' lvalue Var 0x8b93f0 'swtmrExpireTime' 'UINT64':'unsigned long long'
|-FunctionDecl 0x8b9838 <line:105:1, col:60> col:20 OsGetSortLinkAttribute 'SortLinkAttribute *(SortLinkType)'
| `-ParmVarDecl 0x8b9740 <col:43, col:56> col:56 type 'SortLinkType':'SortLinkType'
|-FunctionDecl 0x8b99e8 <line:106:1, col:56> col:8 OsSortLinkInit 'UINT32 (SortLinkAttribute *)'
| `-ParmVarDecl 0x8b98f0 <col:23, col:42> col:42 sortLinkHeader 'SortLinkAttribute *'
|-FunctionDecl 0x8b9d48 <main/los_compiler.h:327:23, main/los_sortlink.h:107:94> col:6 OsAdd2SortLink 'void (SortLinkList *, UINT64, UINT32, SortLinkType)'
| |-ParmVarDecl 0x8b9aa0 <col:21, col:35> col:35 node 'SortLinkList *'
| |-ParmVarDecl 0x8b9b18 <col:41, col:48> col:48 startTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x8b9b90 <col:59, col:66> col:66 waitTicks 'UINT32':'unsigned int'
| `-ParmVarDecl 0x8b9c08 <col:77, col:90> col:90 type 'SortLinkType':'SortLinkType'
|-FunctionDecl 0x8b9ea8 <main/los_compiler.h:327:23, main/los_sortlink.h:108:41> col:6 OsDeleteSortLink 'void (SortLinkList *)'
| `-ParmVarDecl 0x8b9e18 <col:23, col:37> col:37 node 'SortLinkList *'
|-FunctionDecl 0x8ba070 <line:109:1, col:89> col:8 OsSortLinkGetTargetExpireTime 'UINT64 (UINT64, const SortLinkList *)'
| |-ParmVarDecl 0x8b9f60 <col:38, col:45> col:45 currTime 'UINT64':'unsigned long long'
| `-ParmVarDecl 0x8b9fd8 <col:55, col:75> col:75 targetSortList 'const SortLinkList *'
|-FunctionDecl 0x8ba710 <line:110:1, col:75> col:8 OsSortLinkGetNextExpireTime 'UINT64 (const SortLinkAttribute *)'
| `-ParmVarDecl 0x8ba188 <col:36, col:61> col:61 sortLinkHeader 'const SortLinkAttribute *'
|-TypedefDecl 0x8bb0d8 <main/los_task.h:448:1, col:43> col:17 referenced TSK_ENTRY_FUNC 'void *(*)(UINT32)'
| |-PointerType 0x8bb070 'void *(*)(UINT32)'
| | `-ParenType 0x8bb010 'void *(UINT32)' sugar
| |   `-FunctionProtoType 0x8bafe0 'void *(UINT32)' cdecl
| |     |-PointerType 0x7021e0 'void *'
| |     | `-BuiltinType 0x701a20 'void'
| |     `-TypedefType 0x7650b0 'UINT32' sugar
| |       |-Typedef 0x7649e0 'UINT32'
| |       `-BuiltinType 0x701b60 'unsigned int'
| `-FullComment 0x9372b0 <line:444:3, line:447:1>
|   |-ParagraphComment 0x937190 <line:444:3>
|   | `-TextComment 0x937160 <col:3> Text=" "
|   |-VerbatimLineComment 0x9371b0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x937220 <line:445:3, col:46>
|   | `-TextComment 0x9371f0 <col:3, col:46> Text=" Define the type of the task entry function."
|   `-ParagraphComment 0x937270 <line:447:1>
|     `-TextComment 0x937240 <col:1> Text=" "
|-RecordDecl 0x8bb158 <line:456:9, line:464:1> line:456:16 struct tagTskInitParam definition
| |-FullComment 0x937470 <line:451:3, line:454:70>
| | |-ParagraphComment 0x937350 <line:451:3>
| | | `-TextComment 0x937320 <col:3> Text=" "
| | |-VerbatimLineComment 0x937370 <col:4, col:21> Text=" los_task"
| | |-ParagraphComment 0x9373e0 <line:452:3, col:65>
| | | `-TextComment 0x9373b0 <col:3, col:65> Text=" Define the structure of the parameters used for task creation."
| | `-ParagraphComment 0x937430 <line:454:3, col:70>
| |   `-TextComment 0x937400 <col:3, col:70> Text=" Information of specified parameters passed in during task creation."
| |-FieldDecl 0x8bb230 <line:457:5, col:26> col:26 pfnTaskEntry 'TSK_ENTRY_FUNC':'void *(*)(UINT32)'
| | `-FullComment 0x937540 <col:57, col:96>
| |   `-ParagraphComment 0x937510 <col:57, col:96>
| |     `-TextComment 0x9374e0 <col:57, col:96> Text=" Task entrance function                 "
| |-FieldDecl 0x8bb2b8 <line:458:5, col:26> col:26 usTaskPrio 'UINT16':'unsigned short'
| | `-FullComment 0x937610 <col:57, col:96>
| |   `-ParagraphComment 0x9375e0 <col:57, col:96>
| |     `-TextComment 0x9375b0 <col:57, col:96> Text=" Task priority                          "
| |-FieldDecl 0x8bb348 <line:459:5, col:26> col:26 uwArg 'UINT32':'unsigned int'
| | `-FullComment 0x9376e0 <col:57, col:96>
| |   `-ParagraphComment 0x9376b0 <col:57, col:96>
| |     `-TextComment 0x937680 <col:57, col:96> Text=" Task parameters                        "
| |-FieldDecl 0x8bb3d8 <line:460:5, col:26> col:26 stackAddr 'UINTPTR':'unsigned int'
| | `-FullComment 0x9377b0 <col:57, col:96>
| |   `-ParagraphComment 0x937780 <col:57, col:96>
| |     `-TextComment 0x937750 <col:57, col:96> Text=" Task satck memory                      "
| |-FieldDecl 0x8bb468 <line:461:5, col:26> col:26 uwStackSize 'UINT32':'unsigned int'
| | `-FullComment 0x937880 <col:57, col:96>
| |   `-ParagraphComment 0x937850 <col:57, col:96>
| |     `-TextComment 0x937820 <col:57, col:96> Text=" Task stack size                        "
| |-FieldDecl 0x8bb4f8 <line:462:5, col:27> col:27 pcName 'CHAR *'
| | `-FullComment 0x937950 <col:57, col:96>
| |   `-ParagraphComment 0x937920 <col:57, col:96>
| |     `-TextComment 0x9378f0 <col:57, col:96> Text=" Task name                              "
| `-FieldDecl 0x8bb588 <line:463:5, col:26> col:26 uwResved 'UINT32':'unsigned int'
|   `-FullComment 0x937a20 <col:57, col:96>
|     `-ParagraphComment 0x9379f0 <col:57, col:96>
|       `-TextComment 0x9379c0 <col:57, col:96> Text=" Reserved                               "
|-TypedefDecl 0x8bb668 <line:456:1, line:464:3> col:3 referenced TSK_INIT_PARAM_S 'struct tagTskInitParam':'struct tagTskInitParam'
| |-ElaboratedType 0x8bb610 'struct tagTskInitParam' sugar
| | `-RecordType 0x8bb1e0 'struct tagTskInitParam'
| |   `-Record 0x8bb158 'tagTskInitParam'
| `-FullComment 0x937be0 <line:451:3, line:454:70>
|   |-ParagraphComment 0x937ac0 <line:451:3>
|   | `-TextComment 0x937a90 <col:3> Text=" "
|   |-VerbatimLineComment 0x937ae0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x937b50 <line:452:3, col:65>
|   | `-TextComment 0x937b20 <col:3, col:65> Text=" Define the structure of the parameters used for task creation."
|   `-ParagraphComment 0x937ba0 <line:454:3, col:70>
|     `-TextComment 0x937b70 <col:3, col:70> Text=" Information of specified parameters passed in during task creation."
|-RecordDecl 0x8c03d0 <line:482:9, line:500:1> line:482:16 struct tagTskInfo definition
| |-FullComment 0x937d50 <line:479:3, line:480:30>
| | |-ParagraphComment 0x937c80 <line:479:3>
| | | `-TextComment 0x937c50 <col:3> Text=" "
| | |-VerbatimLineComment 0x937ca0 <col:4, col:21> Text=" los_task"
| | `-ParagraphComment 0x937d10 <line:480:3, col:30>
| |   `-TextComment 0x937ce0 <col:3, col:30> Text=" Task information structure."
| |-FieldDecl 0x8c0508 <line:483:5, col:48> col:25 acName 'CHAR [32]'
| | `-FullComment 0x937e30 <col:57, col:88>
| |   `-ParagraphComment 0x937e00 <col:57, col:88>
| |     `-TextComment 0x937dd0 <col:57, col:88> Text=" Task entrance function         "
| |-FieldDecl 0x8c0598 <line:484:5, col:25> col:25 uwTaskID 'UINT32':'unsigned int'
| | `-FullComment 0x937f00 <col:57, col:88>
| |   `-ParagraphComment 0x937ed0 <col:57, col:88>
| |     `-TextComment 0x937ea0 <col:57, col:88> Text=" Task ID                        "
| |-FieldDecl 0x8c0628 <line:485:5, col:25> col:25 usTaskStatus 'UINT16':'unsigned short'
| | `-FullComment 0x937fd0 <col:57, col:88>
| |   `-ParagraphComment 0x937fa0 <col:57, col:88>
| |     `-TextComment 0x937f70 <col:57, col:88> Text=" Task status                    "
| |-FieldDecl 0x8c06b8 <line:486:5, col:25> col:25 usTaskPrio 'UINT16':'unsigned short'
| | `-FullComment 0x9380a0 <col:57, col:88>
| |   `-ParagraphComment 0x938070 <col:57, col:88>
| |     `-TextComment 0x938040 <col:57, col:88> Text=" Task priority                  "
| |-FieldDecl 0x8c0750 <main/los_compiler.h:327:23, main/los_task.h:487:26> col:26 pTaskSem 'void *'
| | `-FullComment 0x938170 <col:57, col:88>
| |   `-ParagraphComment 0x938140 <col:57, col:88>
| |     `-TextComment 0x938110 <col:57, col:88> Text=" Semaphore pointer              "
| |-FieldDecl 0x8c07e0 <main/los_compiler.h:327:23, main/los_task.h:488:26> col:26 pTaskMux 'void *'
| | `-FullComment 0x938240 <col:57, col:88>
| |   `-ParagraphComment 0x938210 <col:57, col:88>
| |     `-TextComment 0x9381e0 <col:57, col:88> Text=" Mutex pointer                  "
| |-FieldDecl 0x8c0868 <line:489:5, col:25> col:25 uwSemID 'UINT32':'unsigned int'
| | `-FullComment 0x938310 <col:57, col:88>
| |   `-ParagraphComment 0x9382e0 <col:57, col:88>
| |     `-TextComment 0x9382b0 <col:57, col:88> Text=" Sem ID                         "
| |-FieldDecl 0x8c08f8 <line:490:5, col:25> col:25 uwMuxID 'UINT32':'unsigned int'
| | `-FullComment 0x9383e0 <col:57, col:88>
| |   `-ParagraphComment 0x9383b0 <col:57, col:88>
| |     `-TextComment 0x938380 <col:57, col:88> Text=" Mux ID                         "
| |-FieldDecl 0x8c09b0 <line:491:5, col:25> col:25 uwEvent 'EVENT_CB_S':'struct tagEvent'
| | `-FullComment 0x9384b0 <col:57, col:88>
| |   `-ParagraphComment 0x938480 <col:57, col:88>
| |     `-TextComment 0x938450 <col:57, col:88> Text=" Event                          "
| |-FieldDecl 0x8c0a38 <line:492:5, col:25> col:25 uwEventMask 'UINT32':'unsigned int'
| | `-FullComment 0x938580 <col:57, col:88>
| |   `-ParagraphComment 0x938550 <col:57, col:88>
| |     `-TextComment 0x938520 <col:57, col:88> Text=" Event mask                     "
| |-FieldDecl 0x8c0ac8 <line:493:5, col:25> col:25 uwStackSize 'UINT32':'unsigned int'
| | `-FullComment 0x938650 <col:57, col:88>
| |   `-ParagraphComment 0x938620 <col:57, col:88>
| |     `-TextComment 0x9385f0 <col:57, col:88> Text=" Task stack size                "
| |-FieldDecl 0x8c0b58 <line:494:5, col:25> col:25 uwTopOfStack 'UINT32':'unsigned int'
| | `-FullComment 0x938720 <col:57, col:88>
| |   `-ParagraphComment 0x9386f0 <col:57, col:88>
| |     `-TextComment 0x9386c0 <col:57, col:88> Text=" Task stack top                 "
| |-FieldDecl 0x8c0be8 <line:495:5, col:25> col:25 uwBottomOfStack 'UINT32':'unsigned int'
| | `-FullComment 0x9387f0 <col:57, col:88>
| |   `-ParagraphComment 0x9387c0 <col:57, col:88>
| |     `-TextComment 0x938790 <col:57, col:88> Text=" Task stack bottom              "
| |-FieldDecl 0x8c0c78 <line:496:5, col:25> col:25 uwSP 'UINT32':'unsigned int'
| | `-FullComment 0x9388c0 <col:57, col:88>
| |   `-ParagraphComment 0x938890 <col:57, col:88>
| |     `-TextComment 0x938860 <col:57, col:88> Text=" Task SP pointer                "
| |-FieldDecl 0x8c0d08 <line:497:5, col:25> col:25 uwCurrUsed 'UINT32':'unsigned int'
| | `-FullComment 0x938990 <col:57, col:88>
| |   `-ParagraphComment 0x938960 <col:57, col:88>
| |     `-TextComment 0x938930 <col:57, col:88> Text=" Current task stack usage       "
| |-FieldDecl 0x8c0d98 <line:498:5, col:25> col:25 uwPeakUsed 'UINT32':'unsigned int'
| | `-FullComment 0x938a60 <col:57, col:88>
| |   `-ParagraphComment 0x938a30 <col:57, col:88>
| |     `-TextComment 0x938a00 <col:57, col:88> Text=" Task stack usage peak          "
| `-FieldDecl 0x8c0e28 <line:499:5, col:25> col:25 bOvf 'BOOL':'unsigned int'
|   `-FullComment 0x938b30 <col:57, col:114>
|     `-ParagraphComment 0x938b00 <col:57, col:114>
|       `-TextComment 0x938ad0 <col:57, col:114> Text=" Flag that indicates whether a task stack overflow occurs "
|-TypedefDecl 0x8c0f08 <line:482:1, line:500:3> col:3 referenced TSK_INFO_S 'struct tagTskInfo':'struct tagTskInfo'
| |-ElaboratedType 0x8c0eb0 'struct tagTskInfo' sugar
| | `-RecordType 0x8c0450 'struct tagTskInfo'
| |   `-Record 0x8c03d0 'tagTskInfo'
| `-FullComment 0x938ca0 <line:479:3, line:480:30>
|   |-ParagraphComment 0x938bd0 <line:479:3>
|   | `-TextComment 0x938ba0 <col:3> Text=" "
|   |-VerbatimLineComment 0x938bf0 <col:4, col:21> Text=" los_task"
|   `-ParagraphComment 0x938c60 <line:480:3, col:30>
|     `-TextComment 0x938c30 <col:3, col:30> Text=" Task information structure."
|-FunctionDecl 0x8c10a0 <line:540:1, col:36> col:13 LOS_Msleep 'void (UINT32)' extern
| |-ParmVarDecl 0x8c1010 <col:24, col:31> col:31 mSecs 'UINT32':'unsigned int'
| `-FullComment 0x9398e0 <line:515:3, line:538:12>
|   |-ParagraphComment 0x938d40 <line:515:3>
|   | `-TextComment 0x938d10 <col:3> Text=" "
|   |-VerbatimLineComment 0x938d60 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x938dd0 <line:516:3>
|   | `-TextComment 0x938da0 <col:3> Text=" "
|   |-BlockCommandComment 0x938df0 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0x938e50 <col:10, col:33>
|   |   `-TextComment 0x938e20 <col:10, col:33> Text=" Sleep the current task."
|   |-ParagraphComment 0x938ea0 <line:518:3>
|   | `-TextComment 0x938e70 <col:3> Text=" "
|   |-BlockCommandComment 0x938ec0 <col:4, line:520:55> Name="par"
|   | `-ParagraphComment 0x938f70 <line:518:8, line:520:55>
|   |   |-TextComment 0x938ef0 <line:518:8, col:20> Text=" Description:"
|   |   |-TextComment 0x938f10 <line:519:3, col:96> Text=" This API is used to delay the execution of the current task. The task is able to be scheduled"
|   |   `-TextComment 0x938f30 <line:520:3, col:55> Text=" after it is delayed for a specified number of Ticks."
|   |-ParagraphComment 0x938fc0 <line:522:3>
|   | `-TextComment 0x938f90 <col:3> Text=" "
|   |-BlockCommandComment 0x938fe0 <col:4, line:531:8> Name="attention"
|   | `-ParagraphComment 0x9393f0 <line:523:3, line:531:8>
|   |   |-TextComment 0x939010 <line:523:3> Text=" "
|   |   |-HTMLStartTagComment 0x939030 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x939070 <line:524:3> Text=" "
|   |   |-HTMLStartTagComment 0x939090 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9390d0 <col:8, col:103> Text="The task fails to be delayed if it is being delayed during interrupt processing or it is locked."
|   |   |-HTMLEndTagComment 0x9390f0 <col:104, col:108> Name="li"
|   |   |-TextComment 0x939120 <line:525:3> Text=" "
|   |   |-HTMLStartTagComment 0x939140 <col:4, col:7> Name="li"
|   |   |-TextComment 0x939180 <col:8, col:63> Text="If 0 is passed in and the task scheduling is not locked,"
|   |   |-TextComment 0x9391a0 <line:526:3, col:85> Text=" execute the next task in the queue of tasks with the priority of the current task."
|   |   |-TextComment 0x9391c0 <line:527:3, col:71> Text=" If no ready task with the priority of the current task is available,"
|   |   |-TextComment 0x9391e0 <line:528:3, col:85> Text=" the task scheduling will not occur, and the current task continues to be executed."
|   |   |-HTMLEndTagComment 0x939200 <col:86, col:90> Name="li"
|   |   |-TextComment 0x939230 <line:529:3> Text=" "
|   |   |-HTMLStartTagComment 0x939250 <col:4, col:7> Name="li"
|   |   |-TextComment 0x939290 <col:8, col:80> Text="The parameter passed in can not be equal to LOS_WAIT_FOREVER(0xFFFFFFFF)."
|   |   |-TextComment 0x9392b0 <line:530:3, col:112> Text=" If that happens, the task will not sleep 0xFFFFFFFF milliseconds or sleep forever but sleep 0xFFFFFFFF Ticks."
|   |   |-HTMLEndTagComment 0x9392d0 <col:113, col:117> Name="li"
|   |   |-TextComment 0x939300 <line:531:3> Text=" "
|   |   `-HTMLEndTagComment 0x939320 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x939440 <line:533:3>
|   | `-TextComment 0x939410 <col:3> Text=" "
|   |-ParamCommandComment 0x939460 <col:4, col:77> [in] implicitly Param="mSecs" ParamIndex=0
|   | `-ParagraphComment 0x9394f0 <col:16, col:77>
|   |   `-TextComment 0x9394c0 <col:16, col:77> Text=" [IN] Type #UINT32 Number of MS for which the task is delayed."
|   |-ParagraphComment 0x939540 <line:535:3>
|   | `-TextComment 0x939510 <col:3> Text=" "
|   |-BlockCommandComment 0x939560 <col:4, line:536:3> Name="retval"
|   | `-ParagraphComment 0x9395e0 <line:535:11, line:536:3>
|   |   |-TextComment 0x939590 <line:535:11, col:15> Text=" None"
|   |   `-TextComment 0x9395b0 <line:536:3> Text=" "
|   |-BlockCommandComment 0x939600 <col:4, line:538:3> Name="par"
|   | `-ParagraphComment 0x9397d0 <line:536:8, line:538:3>
|   |   |-TextComment 0x939630 <line:536:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x939650 <line:537:3> Text=" "
|   |   |-HTMLStartTagComment 0x939670 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x9396b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9396f0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x939710 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x939740 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x939770 <line:538:3> Text=" "
|   `-BlockCommandComment 0x9397f0 <col:4, col:12> Name="see"
|     `-ParagraphComment 0x939850 <col:8, col:12>
|       `-TextComment 0x939820 <col:8, col:12> Text=" None"
|-FunctionDecl 0x8c1210 <line:562:1, col:29> col:15 LOS_Start 'UINT32 (void)' extern
| `-FullComment 0x93bee0 <line:543:3, line:560:7>
|   |-ParagraphComment 0x939980 <line:543:3>
|   | `-TextComment 0x939950 <col:3> Text=" "
|   |-VerbatimLineComment 0x9399a0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x939a10 <line:544:3>
|   | `-TextComment 0x9399e0 <col:3> Text=" "
|   |-BlockCommandComment 0x939a30 <col:4, col:48> Name="brief"
|   | `-ParagraphComment 0x939a90 <col:10, col:48>
|   |   `-TextComment 0x939a60 <col:10, col:48> Text=" System kernel initialization function."
|   |-ParagraphComment 0x939ae0 <line:546:3>
|   | `-TextComment 0x939ab0 <col:3> Text=" "
|   |-BlockCommandComment 0x939b00 <col:4, line:547:37> Name="par"
|   | `-ParagraphComment 0x939b80 <line:546:8, line:547:37>
|   |   |-TextComment 0x939b30 <line:546:8, col:20> Text=" Description:"
|   |   `-TextComment 0x939b50 <line:547:3, col:37> Text=" This API is used to start liteOS ."
|   |-ParagraphComment 0x939bd0 <line:549:3>
|   | `-TextComment 0x939ba0 <col:3> Text=" "
|   |-BlockCommandComment 0x939bf0 <col:4, line:552:8> Name="attention"
|   | `-ParagraphComment 0x93b9e0 <line:550:3, line:552:8>
|   |   |-TextComment 0x939c20 <line:550:3> Text=" "
|   |   |-HTMLStartTagComment 0x939c40 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x939c80 <line:551:3> Text=" "
|   |   |-HTMLStartTagComment 0x939ca0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x939ce0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x939d00 <col:13, col:17> Name="li"
|   |   |-TextComment 0x939d30 <line:552:3> Text=" "
|   |   `-HTMLEndTagComment 0x939d50 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x93ba30 <line:554:3>
|   | `-TextComment 0x93ba00 <col:3> Text=" "
|   |-ParamCommandComment 0x93ba50 <col:4, col:16> [in] implicitly Param=":"
|   | `-ParagraphComment 0x93bae0 <col:11, col:16>
|   |   `-TextComment 0x93bab0 <col:11, col:16> Text=" None."
|   |-ParagraphComment 0x93bb30 <line:556:3>
|   | `-TextComment 0x93bb00 <col:3> Text=" "
|   |-BlockCommandComment 0x93bb50 <col:4, col:75> Name="retval"
|   | `-ParagraphComment 0x93bbb0 <col:11, col:75>
|   |   `-TextComment 0x93bb80 <col:11, col:75> Text=" #LOS_OK                                  0:LiteOS start success."
|   |-ParagraphComment 0x93bc00 <line:558:3>
|   | `-TextComment 0x93bbd0 <col:3> Text=" "
|   |-BlockCommandComment 0x93bc20 <col:4, line:560:3> Name="par"
|   | `-ParagraphComment 0x93bdf0 <line:558:8, line:560:3>
|   |   |-TextComment 0x93bc50 <line:558:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x93bc70 <line:559:3> Text=" "
|   |   |-HTMLStartTagComment 0x93bc90 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x93bcd0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x93bd10 <col:12, col:75> Text="los_config.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x93bd30 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0x93bd60 <col:81, col:85> Name="ul"
|   |   `-TextComment 0x93bd90 <line:560:3> Text=" "
|   `-BlockCommandComment 0x93be10 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x93be40 <<invalid sloc>>
|-FunctionDecl 0x8c2940 <line:563:1, col:37> col:22 LOS_Reboot 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x8c2b80 <line:564:1, col:52> col:22 used LOS_Panic 'void (const CHAR *, ...) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x8c29f0 <col:32, col:44> col:44 fmt 'const CHAR *'
|-FunctionDecl 0x8c2cf0 <line:586:1, col:34> col:15 LOS_KernelInit 'UINT32 (void)' extern
| `-FullComment 0x93c8c0 <line:567:3, line:584:7>
|   |-ParagraphComment 0x93bf80 <line:567:3>
|   | `-TextComment 0x93bf50 <col:3> Text=" "
|   |-VerbatimLineComment 0x93bfa0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x93c010 <line:568:3>
|   | `-TextComment 0x93bfe0 <col:3> Text=" "
|   |-BlockCommandComment 0x93c030 <col:4, col:48> Name="brief"
|   | `-ParagraphComment 0x93c090 <col:10, col:48>
|   |   `-TextComment 0x93c060 <col:10, col:48> Text=" System kernel initialization function."
|   |-ParagraphComment 0x93c0e0 <line:570:3>
|   | `-TextComment 0x93c0b0 <col:3> Text=" "
|   |-BlockCommandComment 0x93c100 <col:4, line:571:71> Name="par"
|   | `-ParagraphComment 0x93c180 <line:570:8, line:571:71>
|   |   |-TextComment 0x93c130 <line:570:8, col:20> Text=" Description:"
|   |   `-TextComment 0x93c150 <line:571:3, col:71> Text=" This API is used to Initialize kernel ,configure all system modules."
|   |-ParagraphComment 0x93c1d0 <line:573:3>
|   | `-TextComment 0x93c1a0 <col:3> Text=" "
|   |-BlockCommandComment 0x93c1f0 <col:4, line:576:8> Name="attention"
|   | `-ParagraphComment 0x93c3c0 <line:574:3, line:576:8>
|   |   |-TextComment 0x93c220 <line:574:3> Text=" "
|   |   |-HTMLStartTagComment 0x93c240 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x93c280 <line:575:3> Text=" "
|   |   |-HTMLStartTagComment 0x93c2a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93c2e0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x93c300 <col:13, col:17> Name="li"
|   |   |-TextComment 0x93c330 <line:576:3> Text=" "
|   |   `-HTMLEndTagComment 0x93c350 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x93c410 <line:578:3>
|   | `-TextComment 0x93c3e0 <col:3> Text=" "
|   |-ParamCommandComment 0x93c430 <col:4, col:16> [in] implicitly Param=":"
|   | `-ParagraphComment 0x93c4c0 <col:11, col:16>
|   |   `-TextComment 0x93c490 <col:11, col:16> Text=" None."
|   |-ParagraphComment 0x93c510 <line:580:3>
|   | `-TextComment 0x93c4e0 <col:3> Text=" "
|   |-BlockCommandComment 0x93c530 <col:4, col:91> Name="retval"
|   | `-ParagraphComment 0x93c590 <col:11, col:91>
|   |   `-TextComment 0x93c560 <col:11, col:91> Text=" #LOS_OK                                  0:System kernel initialization success."
|   |-ParagraphComment 0x93c5e0 <line:582:3>
|   | `-TextComment 0x93c5b0 <col:3> Text=" "
|   |-BlockCommandComment 0x93c600 <col:4, line:584:3> Name="par"
|   | `-ParagraphComment 0x93c7d0 <line:582:8, line:584:3>
|   |   |-TextComment 0x93c630 <line:582:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x93c650 <line:583:3> Text=" "
|   |   |-HTMLStartTagComment 0x93c670 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x93c6b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x93c6f0 <col:12, col:75> Text="los_config.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x93c710 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0x93c740 <col:81, col:85> Name="ul"
|   |   `-TextComment 0x93c770 <line:584:3> Text=" "
|   `-BlockCommandComment 0x93c7f0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x93c820 <<invalid sloc>>
|-FunctionDecl 0x8c2fc8 <line:633:1, col:81> col:15 LOS_TaskCreateOnly 'UINT32 (UINT32 *, TSK_INIT_PARAM_S *)' extern
| |-ParmVarDecl 0x8c2dc8 <col:34, col:42> col:42 taskID 'UINT32 *'
| |-ParmVarDecl 0x8c2eb8 <col:50, col:68> col:68 taskInitParam 'TSK_INIT_PARAM_S *'
| `-FullComment 0x93e250 <line:589:3, line:631:22>
|   |-ParagraphComment 0x93c960 <line:589:3>
|   | `-TextComment 0x93c930 <col:3> Text=" "
|   |-VerbatimLineComment 0x93c980 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x93c9f0 <line:590:3>
|   | `-TextComment 0x93c9c0 <col:3> Text=" "
|   |-BlockCommandComment 0x93ca10 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0x93ca70 <col:10, col:36>
|   |   `-TextComment 0x93ca40 <col:10, col:36> Text=" Create a task and suspend."
|   |-ParagraphComment 0x93cac0 <line:592:3>
|   | `-TextComment 0x93ca90 <col:3> Text=" "
|   |-BlockCommandComment 0x93cae0 <col:4, line:594:13> Name="par"
|   | `-ParagraphComment 0x93cb90 <line:592:8, line:594:13>
|   |   |-TextComment 0x93cb10 <line:592:8, col:20> Text=" Description:"
|   |   |-TextComment 0x93cb30 <line:593:3, col:115> Text=" This API is used to create a task and suspend it. This task will not be added to the queue of ready tasks before"
|   |   `-TextComment 0x93cb50 <line:594:3, col:13> Text=" resume it."
|   |-ParagraphComment 0x93cbe0 <line:596:3>
|   | `-TextComment 0x93cbb0 <col:3> Text=" "
|   |-BlockCommandComment 0x93cc00 <col:4, line:613:8> Name="attention"
|   | `-ParagraphComment 0x93d540 <line:597:3, line:613:8>
|   |   |-TextComment 0x93cc30 <line:597:3> Text=" "
|   |   |-HTMLStartTagComment 0x93cc50 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x93cc90 <line:598:3> Text=" "
|   |   |-HTMLStartTagComment 0x93ccb0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93ccf0 <col:8, col:119> Text="During task creation, the task control block and task stack of the task that is previously automatically deleted"
|   |   |-TextComment 0x93cd10 <line:599:3, col:19> Text=" are deallocated."
|   |   |-HTMLEndTagComment 0x93cd30 <col:20, col:24> Name="li"
|   |   |-TextComment 0x93cd60 <line:600:3> Text=" "
|   |   |-HTMLStartTagComment 0x93cd80 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93cdc0 <col:8, col:62> Text="The task name is a pointer and is not allocated memory."
|   |   |-HTMLEndTagComment 0x93cde0 <col:63, col:67> Name="li"
|   |   |-TextComment 0x93ce10 <line:601:3> Text=" "
|   |   |-HTMLStartTagComment 0x93ce30 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93ce70 <col:8, col:119> Text="If the size of the task stack of the task to be created is 0, configure #LOSCFG_BASE_CORE_TSK_DEFAULT_STACK_SIZE"
|   |   |-TextComment 0x93ce90 <line:602:3, col:117> Text=" to specify the default task stack size. The stack size should be a reasonable value, if the size is too large, may"
|   |   |-TextComment 0x93ceb0 <line:603:3, col:27> Text=" cause memory exhaustion."
|   |   |-HTMLEndTagComment 0x93ced0 <col:28, col:32> Name="li"
|   |   |-TextComment 0x93cf00 <line:604:3> Text=" "
|   |   |-HTMLStartTagComment 0x93cf20 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93cf60 <col:8, col:114> Text="The task stack size must be aligned on the boundary of 8 bytes. The size is determined by whether it is big"
|   |   |-TextComment 0x93cf80 <line:605:3, col:39> Text=" enough to avoid task stack overflow."
|   |   |-HTMLEndTagComment 0x93cfa0 <col:40, col:44> Name="li"
|   |   |-TextComment 0x93cfd0 <line:606:3> Text=" "
|   |   |-HTMLStartTagComment 0x93cff0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93d030 <col:8, col:59> Text="Less parameter value indicates higher task priority."
|   |   |-HTMLEndTagComment 0x93d050 <col:60, col:64> Name="li"
|   |   |-TextComment 0x93d080 <line:607:3> Text=" "
|   |   |-HTMLStartTagComment 0x93d0a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93d0e0 <col:8, col:36> Text="The task name cannot be null."
|   |   |-HTMLEndTagComment 0x93d100 <col:37, col:41> Name="li"
|   |   |-TextComment 0x93d130 <line:608:3> Text=" "
|   |   |-HTMLStartTagComment 0x93d150 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93d190 <col:8, col:65> Text="The pointer to the task executing function cannot be null."
|   |   |-HTMLEndTagComment 0x93d1b0 <col:66, col:70> Name="li"
|   |   |-TextComment 0x93d1e0 <line:609:3> Text=" "
|   |   |-HTMLStartTagComment 0x93d200 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93d240 <col:8, col:114> Text="The two parameters of this interface is pointer, it should be a correct value, otherwise, the system may be"
|   |   |-TextComment 0x93d260 <line:610:3, col:12> Text=" abnormal."
|   |   |-HTMLEndTagComment 0x93d280 <col:13, col:17> Name="li"
|   |   |-TextComment 0x93d2b0 <line:611:3> Text=" "
|   |   |-HTMLStartTagComment 0x93d2d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93d310 <col:8, col:115> Text="If user mode is enabled, user should input user stack pointer and size, the size must fit the stack pointer,"
|   |   |-TextComment 0x93d330 <line:612:3, col:47> Text=" uwStackSize remain as the kernel stack size."
|   |   |-HTMLEndTagComment 0x93d350 <col:48, col:52> Name="li"
|   |   |-TextComment 0x93d380 <line:613:3> Text=" "
|   |   `-HTMLEndTagComment 0x93d3a0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x93d590 <line:615:3>
|   | `-TextComment 0x93d560 <col:3> Text=" "
|   |-ParamCommandComment 0x93d5b0 <col:4, line:616:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x93d660 <line:615:18, line:616:3>
|   |   |-TextComment 0x93d610 <line:615:18, col:55> Text="        [OUT] Type  #UINT32 * Task ID."
|   |   `-TextComment 0x93d630 <line:616:3> Text=" "
|   |-ParamCommandComment 0x93d680 <col:4, col:85> [in] implicitly Param="taskInitParam" ParamIndex=1
|   | `-ParagraphComment 0x93d710 <col:25, col:85>
|   |   `-TextComment 0x93d6e0 <col:25, col:85> Text=" [IN]  Type  #TSK_INIT_PARAM_S * Parameter for task creation."
|   |-ParagraphComment 0x93d760 <line:618:3>
|   | `-TextComment 0x93d730 <col:3> Text=" "
|   |-BlockCommandComment 0x93d780 <col:4, line:619:3> Name="retval"
|   | `-ParagraphComment 0x93d800 <line:618:11, line:619:3>
|   |   |-TextComment 0x93d7b0 <line:618:11, col:85> Text=" #LOS_ERRNO_TSK_ID_INVALID        Invalid Task ID, param puwTaskID is NULL."
|   |   `-TextComment 0x93d7d0 <line:619:3> Text=" "
|   |-BlockCommandComment 0x93d820 <col:4, line:620:3> Name="retval"
|   | `-ParagraphComment 0x93d8a0 <line:619:11, line:620:3>
|   |   |-TextComment 0x93d850 <line:619:11, col:71> Text=" #LOS_ERRNO_TSK_PTR_NULL          Param pstInitParam is NULL."
|   |   `-TextComment 0x93d870 <line:620:3> Text=" "
|   |-BlockCommandComment 0x93d8c0 <col:4, line:621:3> Name="retval"
|   | `-ParagraphComment 0x93d940 <line:620:11, line:621:3>
|   |   |-TextComment 0x93d8f0 <line:620:11, col:66> Text=" #LOS_ERRNO_TSK_NAME_EMPTY        The task name is NULL."
|   |   `-TextComment 0x93d910 <line:621:3> Text=" "
|   |-BlockCommandComment 0x93d960 <col:4, line:622:3> Name="retval"
|   | `-ParagraphComment 0x93d9f0 <line:621:11, line:622:3>
|   |   |-TextComment 0x93d990 <line:621:11, col:70> Text=" #LOS_ERRNO_TSK_ENTRY_NULL        The task entrance is NULL."
|   |   `-TextComment 0x93d9b0 <line:622:3> Text=" "
|   |-BlockCommandComment 0x93da10 <col:4, line:623:3> Name="retval"
|   | `-ParagraphComment 0x93da90 <line:622:11, line:623:3>
|   |   |-TextComment 0x93da40 <line:622:11, col:68> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR       Incorrect task priority."
|   |   `-TextComment 0x93da60 <line:623:3> Text=" "
|   |-BlockCommandComment 0x93dab0 <col:4, line:624:3> Name="retval"
|   | `-ParagraphComment 0x93db30 <line:623:11, line:624:3>
|   |   |-TextComment 0x93dae0 <line:623:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_LARGE   The task stack size is too large."
|   |   `-TextComment 0x93db00 <line:624:3> Text=" "
|   |-BlockCommandComment 0x93db50 <col:4, line:625:3> Name="retval"
|   | `-ParagraphComment 0x93dbd0 <line:624:11, line:625:3>
|   |   |-TextComment 0x93db80 <line:624:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_SMALL   The task stack size is too small."
|   |   `-TextComment 0x93dba0 <line:625:3> Text=" "
|   |-BlockCommandComment 0x93dbf0 <col:4, line:626:3> Name="retval"
|   | `-ParagraphComment 0x93dc70 <line:625:11, line:626:3>
|   |   |-TextComment 0x93dc20 <line:625:11, col:84> Text=" #LOS_ERRNO_TSK_TCB_UNAVAILABLE   No free task control block is available."
|   |   `-TextComment 0x93dc40 <line:626:3> Text=" "
|   |-BlockCommandComment 0x93dc90 <col:4, line:627:3> Name="retval"
|   | `-ParagraphComment 0x93dd10 <line:626:11, line:627:3>
|   |   |-TextComment 0x93dcc0 <line:626:11, col:82> Text=" #LOS_ERRNO_TSK_NO_MEMORY         Insufficient memory for task creation."
|   |   `-TextComment 0x93dce0 <line:627:3> Text=" "
|   |-BlockCommandComment 0x93dd30 <col:4, line:628:3> Name="retval"
|   | `-ParagraphComment 0x93ddb0 <line:627:11, line:628:3>
|   |   |-TextComment 0x93dd60 <line:627:11, col:77> Text=" #LOS_OK                          The task is successfully created."
|   |   `-TextComment 0x93dd80 <line:628:3> Text=" "
|   |-BlockCommandComment 0x93ddd0 <col:4, line:631:3> Name="par"
|   | `-ParagraphComment 0x93e0f0 <line:628:8, line:631:3>
|   |   |-TextComment 0x93de00 <line:628:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x93de20 <line:629:3> Text=" "
|   |   |-HTMLStartTagComment 0x93de40 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x93de80 <col:8, col:11> Name="li"
|   |   |-TextComment 0x93dec0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x93dee0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x93df10 <col:79, col:83> Name="ul"
|   |   |-TextComment 0x93df40 <line:630:3> Text=" "
|   |   |-HTMLStartTagComment 0x93df60 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x93dfa0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x93dfe0 <col:12, col:82> Text="los_config.h: the header file that contains system configuration items."
|   |   |-HTMLEndTagComment 0x93e000 <col:83, col:87> Name="li"
|   |   |-HTMLEndTagComment 0x93e030 <col:88, col:92> Name="ul"
|   |   `-TextComment 0x93e060 <line:631:3> Text=" "
|   `-BlockCommandComment 0x93e110 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x93e170 <col:8, col:22>
|       `-TextComment 0x93e140 <col:8, col:22> Text=" LOS_TaskDelete"
|-FunctionDecl 0x8c31c8 <line:680:1, col:77> col:15 LOS_TaskCreate 'UINT32 (UINT32 *, TSK_INIT_PARAM_S *)' extern
| |-ParmVarDecl 0x8c30b8 <col:30, col:38> col:38 taskID 'UINT32 *'
| |-ParmVarDecl 0x8c3130 <col:46, col:64> col:64 taskInitParam 'TSK_INIT_PARAM_S *'
| `-FullComment 0x93fbd0 <line:636:3, line:678:22>
|   |-ParagraphComment 0x93e2f0 <line:636:3>
|   | `-TextComment 0x93e2c0 <col:3> Text=" "
|   |-VerbatimLineComment 0x93e310 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x93e380 <line:637:3>
|   | `-TextComment 0x93e350 <col:3> Text=" "
|   |-BlockCommandComment 0x93e3a0 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0x93e400 <col:10, col:24>
|   |   `-TextComment 0x93e3d0 <col:10, col:24> Text=" Create a task."
|   |-ParagraphComment 0x93e450 <line:639:3>
|   | `-TextComment 0x93e420 <col:3> Text=" "
|   |-BlockCommandComment 0x93e470 <col:4, line:642:65> Name="par"
|   | `-ParagraphComment 0x93e540 <line:639:8, line:642:65>
|   |   |-TextComment 0x93e4a0 <line:639:8, col:20> Text=" Description:"
|   |   |-TextComment 0x93e4c0 <line:640:3, col:113> Text=" This API is used to create a task. If the priority of the task created after system initialized is higher than"
|   |   |-TextComment 0x93e4e0 <line:641:3, col:83> Text=" the current task and task scheduling is not locked, it is scheduled for running."
|   |   `-TextComment 0x93e500 <line:642:3, col:65> Text=" If not, the created task is added to the queue of ready tasks."
|   |-ParagraphComment 0x93e590 <line:644:3>
|   | `-TextComment 0x93e560 <col:3> Text=" "
|   |-BlockCommandComment 0x93e5b0 <col:4, line:660:8> Name="attention"
|   | `-ParagraphComment 0x93eec0 <line:645:3, line:660:8>
|   |   |-TextComment 0x93e5e0 <line:645:3> Text=" "
|   |   |-HTMLStartTagComment 0x93e600 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x93e640 <line:646:3> Text=" "
|   |   |-HTMLStartTagComment 0x93e660 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93e6a0 <col:8, col:111> Text="During task creation, the task control block and task stack of the task that is previously automatically"
|   |   |-TextComment 0x93e6c0 <line:647:3, col:27> Text=" deleted are deallocated."
|   |   |-HTMLEndTagComment 0x93e6e0 <col:28, col:32> Name="li"
|   |   |-TextComment 0x93e710 <line:648:3> Text=" "
|   |   |-HTMLStartTagComment 0x93e730 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93e770 <col:8, col:62> Text="The task name is a pointer and is not allocated memory."
|   |   |-HTMLEndTagComment 0x93e790 <col:63, col:67> Name="li"
|   |   |-TextComment 0x93e7c0 <line:649:3> Text=" "
|   |   |-HTMLStartTagComment 0x93e7e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93e820 <col:8, col:119> Text="If the size of the task stack of the task to be created is 0, configure #LOSCFG_BASE_CORE_TSK_DEFAULT_STACK_SIZE"
|   |   |-TextComment 0x93e840 <line:650:3, col:42> Text=" to specify the default task stack size."
|   |   |-HTMLEndTagComment 0x93e860 <col:43, col:47> Name="li"
|   |   |-TextComment 0x93e890 <line:651:3> Text=" "
|   |   |-HTMLStartTagComment 0x93e8b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93e8f0 <col:8, col:114> Text="The task stack size must be aligned on the boundary of 8 bytes. The size is determined by whether it is big"
|   |   |-TextComment 0x93e910 <line:652:3, col:39> Text=" enough to avoid task stack overflow."
|   |   |-HTMLEndTagComment 0x93e930 <col:40, col:44> Name="li"
|   |   |-TextComment 0x93e960 <line:653:3> Text=" "
|   |   |-HTMLStartTagComment 0x93e980 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93e9c0 <col:8, col:59> Text="Less parameter value indicates higher task priority."
|   |   |-HTMLEndTagComment 0x93e9e0 <col:60, col:64> Name="li"
|   |   |-TextComment 0x93ea10 <line:654:3> Text=" "
|   |   |-HTMLStartTagComment 0x93ea30 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93ea70 <col:8, col:36> Text="The task name cannot be null."
|   |   |-HTMLEndTagComment 0x93ea90 <col:37, col:41> Name="li"
|   |   |-TextComment 0x93eac0 <line:655:3> Text=" "
|   |   |-HTMLStartTagComment 0x93eae0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93eb20 <col:8, col:65> Text="The pointer to the task executing function cannot be null."
|   |   |-HTMLEndTagComment 0x93eb40 <col:66, col:70> Name="li"
|   |   |-TextComment 0x93eb70 <line:656:3> Text=" "
|   |   |-HTMLStartTagComment 0x93eb90 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93ebd0 <col:8, col:114> Text="The two parameters of this interface is pointer, it should be a correct value, otherwise, the system may be"
|   |   |-TextComment 0x93ebf0 <line:657:3, col:12> Text=" abnormal."
|   |   |-HTMLEndTagComment 0x93ec10 <col:13, col:17> Name="li"
|   |   |-TextComment 0x93ec40 <line:658:3> Text=" "
|   |   |-HTMLStartTagComment 0x93ec60 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93eca0 <col:8, col:115> Text="If user mode is enabled, user should input user stack pointer and size, the size must fit the stack pointer,"
|   |   |-TextComment 0x93ecc0 <line:659:3, col:47> Text=" uwStackSize remain as the kernel stack size."
|   |   |-HTMLEndTagComment 0x93ece0 <col:48, col:52> Name="li"
|   |   |-TextComment 0x93ed10 <line:660:3> Text=" "
|   |   `-HTMLEndTagComment 0x93ed30 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x93ef10 <line:662:3>
|   | `-TextComment 0x93eee0 <col:3> Text=" "
|   |-ParamCommandComment 0x93ef30 <col:4, line:663:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x93efe0 <line:662:18, line:663:3>
|   |   |-TextComment 0x93ef90 <line:662:18, col:55> Text="        [OUT] Type  #UINT32 * Task ID."
|   |   `-TextComment 0x93efb0 <line:663:3> Text=" "
|   |-ParamCommandComment 0x93f000 <col:4, col:85> [in] implicitly Param="taskInitParam" ParamIndex=1
|   | `-ParagraphComment 0x93f090 <col:25, col:85>
|   |   `-TextComment 0x93f060 <col:25, col:85> Text=" [IN]  Type  #TSK_INIT_PARAM_S * Parameter for task creation."
|   |-ParagraphComment 0x93f0e0 <line:665:3>
|   | `-TextComment 0x93f0b0 <col:3> Text=" "
|   |-BlockCommandComment 0x93f100 <col:4, line:666:3> Name="retval"
|   | `-ParagraphComment 0x93f180 <line:665:11, line:666:3>
|   |   |-TextComment 0x93f130 <line:665:11, col:85> Text=" #LOS_ERRNO_TSK_ID_INVALID        Invalid Task ID, param puwTaskID is NULL."
|   |   `-TextComment 0x93f150 <line:666:3> Text=" "
|   |-BlockCommandComment 0x93f1a0 <col:4, line:667:3> Name="retval"
|   | `-ParagraphComment 0x93f220 <line:666:11, line:667:3>
|   |   |-TextComment 0x93f1d0 <line:666:11, col:71> Text=" #LOS_ERRNO_TSK_PTR_NULL          Param pstInitParam is NULL."
|   |   `-TextComment 0x93f1f0 <line:667:3> Text=" "
|   |-BlockCommandComment 0x93f240 <col:4, line:668:3> Name="retval"
|   | `-ParagraphComment 0x93f2c0 <line:667:11, line:668:3>
|   |   |-TextComment 0x93f270 <line:667:11, col:66> Text=" #LOS_ERRNO_TSK_NAME_EMPTY        The task name is NULL."
|   |   `-TextComment 0x93f290 <line:668:3> Text=" "
|   |-BlockCommandComment 0x93f2e0 <col:4, line:669:3> Name="retval"
|   | `-ParagraphComment 0x93f360 <line:668:11, line:669:3>
|   |   |-TextComment 0x93f310 <line:668:11, col:70> Text=" #LOS_ERRNO_TSK_ENTRY_NULL        The task entrance is NULL."
|   |   `-TextComment 0x93f330 <line:669:3> Text=" "
|   |-BlockCommandComment 0x93f380 <col:4, line:670:3> Name="retval"
|   | `-ParagraphComment 0x93f400 <line:669:11, line:670:3>
|   |   |-TextComment 0x93f3b0 <line:669:11, col:68> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR       Incorrect task priority."
|   |   `-TextComment 0x93f3d0 <line:670:3> Text=" "
|   |-BlockCommandComment 0x93f420 <col:4, line:671:3> Name="retval"
|   | `-ParagraphComment 0x93f4a0 <line:670:11, line:671:3>
|   |   |-TextComment 0x93f450 <line:670:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_LARGE   The task stack size is too large."
|   |   `-TextComment 0x93f470 <line:671:3> Text=" "
|   |-BlockCommandComment 0x93f4c0 <col:4, line:672:3> Name="retval"
|   | `-ParagraphComment 0x93f540 <line:671:11, line:672:3>
|   |   |-TextComment 0x93f4f0 <line:671:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_SMALL   The task stack size is too small."
|   |   `-TextComment 0x93f510 <line:672:3> Text=" "
|   |-BlockCommandComment 0x93f560 <col:4, line:673:3> Name="retval"
|   | `-ParagraphComment 0x93f5e0 <line:672:11, line:673:3>
|   |   |-TextComment 0x93f590 <line:672:11, col:84> Text=" #LOS_ERRNO_TSK_TCB_UNAVAILABLE   No free task control block is available."
|   |   `-TextComment 0x93f5b0 <line:673:3> Text=" "
|   |-BlockCommandComment 0x93f600 <col:4, line:674:3> Name="retval"
|   | `-ParagraphComment 0x93f680 <line:673:11, line:674:3>
|   |   |-TextComment 0x93f630 <line:673:11, col:82> Text=" #LOS_ERRNO_TSK_NO_MEMORY         Insufficient memory for task creation."
|   |   `-TextComment 0x93f650 <line:674:3> Text=" "
|   |-BlockCommandComment 0x93f6a0 <col:4, line:675:3> Name="retval"
|   | `-ParagraphComment 0x93f720 <line:674:11, line:675:3>
|   |   |-TextComment 0x93f6d0 <line:674:11, col:77> Text=" #LOS_OK                          The task is successfully created."
|   |   `-TextComment 0x93f6f0 <line:675:3> Text=" "
|   |-BlockCommandComment 0x93f740 <col:4, line:678:3> Name="par"
|   | `-ParagraphComment 0x93fa70 <line:675:8, line:678:3>
|   |   |-TextComment 0x93f770 <line:675:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x93f790 <line:676:3> Text=" "
|   |   |-HTMLStartTagComment 0x93f7b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x93f7f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x93f830 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x93f850 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x93f880 <col:79, col:83> Name="ul"
|   |   |-TextComment 0x93f8b0 <line:677:3> Text=" "
|   |   |-HTMLStartTagComment 0x93f8d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x93f910 <col:8, col:11> Name="li"
|   |   |-TextComment 0x93f950 <col:12, col:82> Text="los_config.h: the header file that contains system configuration items."
|   |   |-HTMLEndTagComment 0x93f970 <col:83, col:87> Name="li"
|   |   |-HTMLEndTagComment 0x93f9a0 <col:88, col:92> Name="ul"
|   |   `-TextComment 0x93f9d0 <line:678:3> Text=" "
|   `-BlockCommandComment 0x93fa90 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x93faf0 <col:8, col:22>
|       `-TextComment 0x93fac0 <col:8, col:22> Text=" LOS_TaskDelete"
|-FunctionDecl 0x8c3348 <line:706:1, col:43> col:15 LOS_TaskResume 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x8c32b8 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0x940890 <line:683:3, line:704:23>
|   |-ParagraphComment 0x93fc70 <line:683:3>
|   | `-TextComment 0x93fc40 <col:3> Text=" "
|   |-VerbatimLineComment 0x93fc90 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x93fd00 <line:684:3>
|   | `-TextComment 0x93fcd0 <col:3> Text=" "
|   |-BlockCommandComment 0x93fd20 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0x93fd80 <col:10, col:24>
|   |   `-TextComment 0x93fd50 <col:10, col:24> Text=" Resume a task."
|   |-ParagraphComment 0x93fdd0 <line:686:3>
|   | `-TextComment 0x93fda0 <col:3> Text=" "
|   |-BlockCommandComment 0x93fdf0 <col:4, line:687:47> Name="par"
|   | `-ParagraphComment 0x93fe70 <line:686:8, line:687:47>
|   |   |-TextComment 0x93fe20 <line:686:8, col:20> Text=" Description:"
|   |   `-TextComment 0x93fe40 <line:687:3, col:47> Text=" This API is used to resume a suspended task."
|   |-ParagraphComment 0x93fec0 <line:689:3>
|   | `-TextComment 0x93fe90 <col:3> Text=" "
|   |-BlockCommandComment 0x93fee0 <col:4, line:694:8> Name="attention"
|   | `-ParagraphComment 0x9401a0 <line:690:3, line:694:8>
|   |   |-TextComment 0x93ff10 <line:690:3> Text=" "
|   |   |-HTMLStartTagComment 0x93ff30 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x93ff70 <line:691:3> Text=" "
|   |   |-HTMLStartTagComment 0x93ff90 <col:4, col:7> Name="li"
|   |   |-TextComment 0x93ffd0 <col:8, col:104> Text="If the task is delayed or blocked, resume the task without adding it to the queue of ready tasks."
|   |   |-HTMLEndTagComment 0x93fff0 <col:105, col:109> Name="li"
|   |   |-TextComment 0x940020 <line:692:3> Text=" "
|   |   |-HTMLStartTagComment 0x940040 <col:4, col:7> Name="li"
|   |   |-TextComment 0x940080 <col:8, col:119> Text="If the priority of the task resumed after system initialized is higher than the current task and task scheduling"
|   |   |-TextComment 0x9400a0 <line:693:3, col:46> Text=" is not locked, it is scheduled for running."
|   |   |-HTMLEndTagComment 0x9400c0 <col:47, col:51> Name="li"
|   |   |-TextComment 0x9400f0 <line:694:3> Text=" "
|   |   `-HTMLEndTagComment 0x940110 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x9401f0 <line:696:3>
|   | `-TextComment 0x9401c0 <col:3> Text=" "
|   |-ParamCommandComment 0x940210 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x9402a0 <col:18, col:94>
|   |   `-TextComment 0x940270 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0x9402f0 <line:698:3>
|   | `-TextComment 0x9402c0 <col:3> Text=" "
|   |-BlockCommandComment 0x940310 <col:4, line:699:3> Name="retval"
|   | `-ParagraphComment 0x940390 <line:698:11, line:699:3>
|   |   |-TextComment 0x940340 <line:698:11, col:59> Text=" #LOS_ERRNO_TSK_ID_INVALID        Invalid Task ID"
|   |   `-TextComment 0x940360 <line:699:3> Text=" "
|   |-BlockCommandComment 0x9403b0 <col:4, line:700:3> Name="retval"
|   | `-ParagraphComment 0x940430 <line:699:11, line:700:3>
|   |   |-TextComment 0x9403e0 <line:699:11, col:68> Text=" #LOS_ERRNO_TSK_NOT_CREATED       The task is not created."
|   |   `-TextComment 0x940400 <line:700:3> Text=" "
|   |-BlockCommandComment 0x940450 <col:4, line:701:3> Name="retval"
|   | `-ParagraphComment 0x9404d0 <line:700:11, line:701:3>
|   |   |-TextComment 0x940480 <line:700:11, col:70> Text=" #LOS_ERRNO_TSK_NOT_SUSPENDED     The task is not suspended."
|   |   `-TextComment 0x9404a0 <line:701:3> Text=" "
|   |-BlockCommandComment 0x9404f0 <col:4, line:702:3> Name="retval"
|   | `-ParagraphComment 0x940570 <line:701:11, line:702:3>
|   |   |-TextComment 0x940520 <line:701:11, col:77> Text=" #LOS_OK                          The task is successfully resumed."
|   |   `-TextComment 0x940540 <line:702:3> Text=" "
|   |-BlockCommandComment 0x940590 <col:4, line:704:3> Name="par"
|   | `-ParagraphComment 0x940760 <line:702:8, line:704:3>
|   |   |-TextComment 0x9405c0 <line:702:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9405e0 <line:703:3> Text=" "
|   |   |-HTMLStartTagComment 0x940600 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x940640 <col:8, col:11> Name="li"
|   |   |-TextComment 0x940680 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9406a0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x9406d0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x940700 <line:704:3> Text=" "
|   `-BlockCommandComment 0x940780 <col:4, col:23> Name="see"
|     `-ParagraphComment 0x9407e0 <col:8, col:23>
|       `-TextComment 0x9407b0 <col:8, col:23> Text=" LOS_TaskSuspend"
|-FunctionDecl 0x8c34b8 <line:735:1, col:44> col:15 LOS_TaskSuspend 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x8c3428 <col:31, col:38> col:38 taskID 'UINT32':'unsigned int'
| `-FullComment 0x941750 <line:709:3, line:733:22>
|   |-ParagraphComment 0x940930 <line:709:3>
|   | `-TextComment 0x940900 <col:3> Text=" "
|   |-VerbatimLineComment 0x940950 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x9409c0 <line:710:3>
|   | `-TextComment 0x940990 <col:3> Text=" "
|   |-BlockCommandComment 0x9409e0 <col:4, col:25> Name="brief"
|   | `-ParagraphComment 0x940a40 <col:10, col:25>
|   |   `-TextComment 0x940a10 <col:10, col:25> Text=" Suspend a task."
|   |-ParagraphComment 0x940a90 <line:712:3>
|   | `-TextComment 0x940a60 <col:3> Text=" "
|   |-BlockCommandComment 0x940ab0 <col:4, line:713:108> Name="par"
|   | `-ParagraphComment 0x940b30 <line:712:8, line:713:108>
|   |   |-TextComment 0x940ae0 <line:712:8, col:20> Text=" Description:"
|   |   `-TextComment 0x940b00 <line:713:3, col:108> Text=" This API is used to suspend a specified task, and the task will be removed from the queue of ready tasks."
|   |-ParagraphComment 0x940b80 <line:715:3>
|   | `-TextComment 0x940b50 <col:3> Text=" "
|   |-BlockCommandComment 0x940ba0 <col:4, line:719:8> Name="attention"
|   | `-ParagraphComment 0x940e40 <line:716:3, line:719:8>
|   |   |-TextComment 0x940bd0 <line:716:3> Text=" "
|   |   |-HTMLStartTagComment 0x940bf0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x940c30 <line:717:3> Text=" "
|   |   |-HTMLStartTagComment 0x940c50 <col:4, col:7> Name="li"
|   |   |-TextComment 0x940c90 <col:8, col:63> Text="The task that is running and locked cannot be suspended."
|   |   |-HTMLEndTagComment 0x940cb0 <col:64, col:68> Name="li"
|   |   |-TextComment 0x940ce0 <line:718:3> Text=" "
|   |   |-HTMLStartTagComment 0x940d00 <col:4, col:7> Name="li"
|   |   |-TextComment 0x940d40 <col:8, col:56> Text="The idle task and swtmr task cannot be suspended."
|   |   |-HTMLEndTagComment 0x940d60 <col:57, col:61> Name="li"
|   |   |-TextComment 0x940d90 <line:719:3> Text=" "
|   |   `-HTMLEndTagComment 0x940db0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x940e90 <line:721:3>
|   | `-TextComment 0x940e60 <col:3> Text=" "
|   |-ParamCommandComment 0x940eb0 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x940f40 <col:18, col:94>
|   |   `-TextComment 0x940f10 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0x940f90 <line:723:3>
|   | `-TextComment 0x940f60 <col:3> Text=" "
|   |-BlockCommandComment 0x940fb0 <col:4, line:724:3> Name="retval"
|   | `-ParagraphComment 0x941030 <line:723:11, line:724:3>
|   |   |-TextComment 0x940fe0 <line:723:11, col:110> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE                  Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0x941000 <line:724:3> Text=" "
|   |-BlockCommandComment 0x941050 <col:4, line:725:3> Name="retval"
|   | `-ParagraphComment 0x9410d0 <line:724:11, line:725:3>
|   |   |-TextComment 0x941080 <line:724:11, col:111> Text=" #LOS_ERRNO_TSK_SUSPEND_SWTMR_NOT_ALLOWED     Check the task ID and do not operate on the swtmr task."
|   |   `-TextComment 0x9410a0 <line:725:3> Text=" "
|   |-BlockCommandComment 0x9410f0 <col:4, line:726:3> Name="retval"
|   | `-ParagraphComment 0x941170 <line:725:11, line:726:3>
|   |   |-TextComment 0x941120 <line:725:11, col:71> Text=" #LOS_ERRNO_TSK_ID_INVALID                    Invalid Task ID"
|   |   `-TextComment 0x941140 <line:726:3> Text=" "
|   |-BlockCommandComment 0x941190 <col:4, line:727:3> Name="retval"
|   | `-ParagraphComment 0x941210 <line:726:11, line:727:3>
|   |   |-TextComment 0x9411c0 <line:726:11, col:80> Text=" #LOS_ERRNO_TSK_NOT_CREATED                   The task is not created."
|   |   `-TextComment 0x9411e0 <line:727:3> Text=" "
|   |-BlockCommandComment 0x941230 <col:4, line:728:3> Name="retval"
|   | `-ParagraphComment 0x9412b0 <line:727:11, line:728:3>
|   |   |-TextComment 0x941260 <line:727:11, col:86> Text=" #LOS_ERRNO_TSK_ALREADY_SUSPENDED             The task is already suspended."
|   |   `-TextComment 0x941280 <line:728:3> Text=" "
|   |-BlockCommandComment 0x9412d0 <col:4, line:730:3> Name="retval"
|   | `-ParagraphComment 0x941380 <line:728:11, line:730:3>
|   |   |-TextComment 0x941300 <line:728:11, col:116> Text=" #LOS_ERRNO_TSK_SUSPEND_LOCKED                The task being suspended is current task and task scheduling"
|   |   |-TextComment 0x941320 <line:729:3, col:66> Text="                                                      is locked."
|   |   `-TextComment 0x941340 <line:730:3> Text=" "
|   |-BlockCommandComment 0x9413a0 <col:4, line:731:3> Name="retval"
|   | `-ParagraphComment 0x941420 <line:730:11, line:731:3>
|   |   |-TextComment 0x9413d0 <line:730:11, col:91> Text=" #LOS_OK                                      The task is successfully suspended."
|   |   `-TextComment 0x9413f0 <line:731:3> Text=" "
|   |-BlockCommandComment 0x941440 <col:4, line:733:3> Name="par"
|   | `-ParagraphComment 0x941610 <line:731:8, line:733:3>
|   |   |-TextComment 0x941470 <line:731:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x941490 <line:732:3> Text=" "
|   |   |-HTMLStartTagComment 0x9414b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x9414f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x941530 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x941550 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x941580 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x9415b0 <line:733:3> Text=" "
|   `-BlockCommandComment 0x941630 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x941690 <col:8, col:22>
|       `-TextComment 0x941660 <col:8, col:22> Text=" LOS_TaskResume"
|-FunctionDecl 0x8c3628 <line:763:1, col:43> col:15 LOS_TaskDelete 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x8c3598 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0x9425a0 <line:738:3, line:761:43>
|   |-ParagraphComment 0x9417f0 <line:738:3>
|   | `-TextComment 0x9417c0 <col:3> Text=" "
|   |-VerbatimLineComment 0x941810 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x941880 <line:739:3>
|   | `-TextComment 0x941850 <col:3> Text=" "
|   |-BlockCommandComment 0x9418a0 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0x941900 <col:10, col:24>
|   |   `-TextComment 0x9418d0 <col:10, col:24> Text=" Delete a task."
|   |-ParagraphComment 0x941950 <line:741:3>
|   | `-TextComment 0x941920 <col:3> Text=" "
|   |-BlockCommandComment 0x941970 <col:4, line:742:115> Name="par"
|   | `-ParagraphComment 0x941a10 <line:741:8, line:742:115>
|   |   |-TextComment 0x9419a0 <line:741:8, col:20> Text=" Description:"
|   |   `-TextComment 0x9419c0 <line:742:3, col:115> Text=" This API is used to delete a specified task and release the resources for its task stack and task control block."
|   |-ParagraphComment 0x941a60 <line:744:3>
|   | `-TextComment 0x941a30 <col:3> Text=" "
|   |-BlockCommandComment 0x941a80 <col:4, line:750:8> Name="attention"
|   | `-ParagraphComment 0x941e10 <line:745:3, line:750:8>
|   |   |-TextComment 0x941ab0 <line:745:3> Text=" "
|   |   |-HTMLStartTagComment 0x941ad0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x941b10 <line:746:3> Text=" "
|   |   |-HTMLStartTagComment 0x941b30 <col:4, col:7> Name="li"
|   |   |-TextComment 0x941b70 <col:8, col:54> Text="The idle task and swtmr task cannot be deleted."
|   |   |-HTMLEndTagComment 0x941b90 <col:55, col:59> Name="li"
|   |   |-TextComment 0x941bc0 <line:747:3> Text=" "
|   |   |-HTMLStartTagComment 0x941be0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x941c20 <col:8, col:59> Text="If delete current task maybe cause unexpected error."
|   |   |-HTMLEndTagComment 0x941c40 <col:60, col:64> Name="li"
|   |   |-TextComment 0x941c70 <line:748:3> Text=" "
|   |   |-HTMLStartTagComment 0x941c90 <col:4, col:7> Name="li"
|   |   |-TextComment 0x941cd0 <col:8, col:110> Text="If a task get a mutex is deleted or automatically deleted before release this mutex, other tasks pended"
|   |   |-TextComment 0x941cf0 <line:749:3, col:39> Text=" this mutex maybe never be shchduled."
|   |   |-HTMLEndTagComment 0x941d10 <col:40, col:44> Name="li"
|   |   |-TextComment 0x941d40 <line:750:3> Text=" "
|   |   `-HTMLEndTagComment 0x941d60 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x941e60 <line:752:3>
|   | `-TextComment 0x941e30 <col:3> Text=" "
|   |-ParamCommandComment 0x941e80 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x941f10 <col:18, col:94>
|   |   `-TextComment 0x941ee0 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0x941f60 <line:754:3>
|   | `-TextComment 0x941f30 <col:3> Text=" "
|   |-BlockCommandComment 0x941f80 <col:4, line:755:3> Name="retval"
|   | `-ParagraphComment 0x942000 <line:754:11, line:755:3>
|   |   |-TextComment 0x941fb0 <line:754:11, col:110> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE                  Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0x941fd0 <line:755:3> Text=" "
|   |-BlockCommandComment 0x942020 <col:4, line:756:3> Name="retval"
|   | `-ParagraphComment 0x9420a0 <line:755:11, line:756:3>
|   |   |-TextComment 0x942050 <line:755:11, col:111> Text=" #LOS_ERRNO_TSK_SUSPEND_SWTMR_NOT_ALLOWED     Check the task ID and do not operate on the swtmr task."
|   |   `-TextComment 0x942070 <line:756:3> Text=" "
|   |-BlockCommandComment 0x9420c0 <col:4, line:757:3> Name="retval"
|   | `-ParagraphComment 0x942140 <line:756:11, line:757:3>
|   |   |-TextComment 0x9420f0 <line:756:11, col:71> Text=" #LOS_ERRNO_TSK_ID_INVALID                    Invalid Task ID"
|   |   `-TextComment 0x942110 <line:757:3> Text=" "
|   |-BlockCommandComment 0x942160 <col:4, line:758:3> Name="retval"
|   | `-ParagraphComment 0x9421e0 <line:757:11, line:758:3>
|   |   |-TextComment 0x942190 <line:757:11, col:80> Text=" #LOS_ERRNO_TSK_NOT_CREATED                   The task is not created."
|   |   `-TextComment 0x9421b0 <line:758:3> Text=" "
|   |-BlockCommandComment 0x942200 <col:4, line:759:3> Name="retval"
|   | `-ParagraphComment 0x942280 <line:758:11, line:759:3>
|   |   |-TextComment 0x942230 <line:758:11, col:89> Text=" #LOS_OK                                      The task is successfully deleted."
|   |   `-TextComment 0x942250 <line:759:3> Text=" "
|   |-BlockCommandComment 0x9422a0 <col:4, line:761:3> Name="par"
|   | `-ParagraphComment 0x942470 <line:759:8, line:761:3>
|   |   |-TextComment 0x9422d0 <line:759:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9422f0 <line:760:3> Text=" "
|   |   |-HTMLStartTagComment 0x942310 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x942350 <col:8, col:11> Name="li"
|   |   |-TextComment 0x942390 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9423b0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x9423e0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x942410 <line:761:3> Text=" "
|   `-BlockCommandComment 0x942490 <col:4, col:43> Name="see"
|     `-ParagraphComment 0x9424f0 <col:8, col:43>
|       `-TextComment 0x9424c0 <col:8, col:43> Text=" LOS_TaskCreate | LOS_TaskCreateOnly"
|-FunctionDecl 0x8c3798 <line:794:1, col:40> col:15 LOS_TaskDelay 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x8c3708 <col:29, col:36> col:36 tick 'UINT32':'unsigned int'
| `-FullComment 0x943420 <line:766:3, line:792:7>
|   |-ParagraphComment 0x942640 <line:766:3>
|   | `-TextComment 0x942610 <col:3> Text=" "
|   |-VerbatimLineComment 0x942660 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x9426d0 <line:767:3>
|   | `-TextComment 0x9426a0 <col:3> Text=" "
|   |-BlockCommandComment 0x9426f0 <col:4, col:23> Name="brief"
|   | `-ParagraphComment 0x942750 <col:10, col:23>
|   |   `-TextComment 0x942720 <col:10, col:23> Text=" Delay a task."
|   |-ParagraphComment 0x9427a0 <line:769:3>
|   | `-TextComment 0x942770 <col:3> Text=" "
|   |-BlockCommandComment 0x9427c0 <col:4, line:771:35> Name="par"
|   | `-ParagraphComment 0x942870 <line:769:8, line:771:35>
|   |   |-TextComment 0x9427f0 <line:769:8, col:20> Text=" Description:"
|   |   |-TextComment 0x942810 <line:770:3, col:116> Text=" This API is used to delay the execution of the current task. The task is able to be scheduled after it is delayed"
|   |   `-TextComment 0x942830 <line:771:3, col:35> Text=" for a specified number of Ticks."
|   |-ParagraphComment 0x9428c0 <line:773:3>
|   | `-TextComment 0x942890 <col:3> Text=" "
|   |-BlockCommandComment 0x9428e0 <col:4, line:781:8> Name="attention"
|   | `-ParagraphComment 0x942cc0 <line:774:3, line:781:8>
|   |   |-TextComment 0x942910 <line:774:3> Text=" "
|   |   |-HTMLStartTagComment 0x942930 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x942970 <line:775:3> Text=" "
|   |   |-HTMLStartTagComment 0x942990 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9429d0 <col:8, col:103> Text="The task fails to be delayed if it is being delayed during interrupt processing or it is locked."
|   |   |-HTMLEndTagComment 0x9429f0 <col:104, col:108> Name="li"
|   |   |-TextComment 0x942a20 <line:776:3> Text=" "
|   |   |-HTMLStartTagComment 0x942a40 <col:4, col:7> Name="li"
|   |   |-TextComment 0x942a80 <col:8, col:112> Text="If 0 is passed in and the task scheduling is not locked, execute the next task in the queue of tasks with"
|   |   |-TextComment 0x942aa0 <line:777:3, col:41> Text=" the same priority of the current task."
|   |   |-TextComment 0x942ac0 <line:778:3, col:115> Text=" If no ready task with the priority of the current task is available, the task scheduling will not occur, and the"
|   |   |-TextComment 0x942ae0 <line:779:3, col:41> Text=" current task continues to be executed."
|   |   |-HTMLEndTagComment 0x942b00 <col:42, col:46> Name="li"
|   |   |-TextComment 0x942b30 <line:780:3> Text=" "
|   |   |-HTMLStartTagComment 0x942b50 <col:4, col:7> Name="li"
|   |   |-TextComment 0x942b90 <col:8, col:68> Text="Using the interface before system initialized is not allowed."
|   |   |-HTMLEndTagComment 0x942bb0 <col:69, col:73> Name="li"
|   |   |-TextComment 0x942be0 <line:781:3> Text=" "
|   |   `-HTMLEndTagComment 0x942c00 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x942d10 <line:783:3>
|   | `-TextComment 0x942ce0 <col:3> Text=" "
|   |-ParamCommandComment 0x942d30 <col:4, col:80> [in] implicitly Param="tick" ParamIndex=0
|   | `-ParagraphComment 0x942dc0 <col:16, col:80>
|   |   `-TextComment 0x942d90 <col:16, col:80> Text=" [IN] Type #UINT32 Number of Ticks for which the task is delayed."
|   |-ParagraphComment 0x942e10 <line:785:3>
|   | `-TextComment 0x942de0 <col:3> Text=" "
|   |-BlockCommandComment 0x942e30 <col:4, line:786:3> Name="retval"
|   | `-ParagraphComment 0x942eb0 <line:785:11, line:786:3>
|   |   |-TextComment 0x942e60 <line:785:11, col:94> Text=" #LOS_ERRNO_TSK_DELAY_IN_INT              The task delay occurs during an interrupt."
|   |   `-TextComment 0x942e80 <line:786:3> Text=" "
|   |-BlockCommandComment 0x942ed0 <col:4, line:787:3> Name="retval"
|   | `-ParagraphComment 0x942f50 <line:786:11, line:787:3>
|   |   |-TextComment 0x942f00 <line:786:11, col:109> Text=" #LOS_ERRNO_TSK_DELAY_IN_LOCK             The task delay occurs when the task scheduling is locked."
|   |   `-TextComment 0x942f20 <line:787:3> Text=" "
|   |-BlockCommandComment 0x942f70 <col:4, line:788:3> Name="retval"
|   | `-ParagraphComment 0x942ff0 <line:787:11, line:788:3>
|   |   |-TextComment 0x942fa0 <line:787:11, col:67> Text=" #LOS_ERRNO_TSK_ID_INVALID                Invalid Task ID"
|   |   `-TextComment 0x942fc0 <line:788:3> Text=" "
|   |-BlockCommandComment 0x943010 <col:4, line:789:3> Name="retval"
|   | `-ParagraphComment 0x943090 <line:788:11, line:789:3>
|   |   |-TextComment 0x943040 <line:788:11, col:112> Text=" #LOS_ERRNO_TSK_YIELD_NOT_ENOUGH_TASK     No tasks with the same priority is available for scheduling."
|   |   `-TextComment 0x943060 <line:789:3> Text=" "
|   |-BlockCommandComment 0x9430b0 <col:4, line:790:3> Name="retval"
|   | `-ParagraphComment 0x943130 <line:789:11, line:790:3>
|   |   |-TextComment 0x9430e0 <line:789:11, col:85> Text=" #LOS_OK                                  The task is successfully delayed."
|   |   `-TextComment 0x943100 <line:790:3> Text=" "
|   |-BlockCommandComment 0x943150 <col:4, line:792:3> Name="par"
|   | `-ParagraphComment 0x943320 <line:790:8, line:792:3>
|   |   |-TextComment 0x943180 <line:790:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9431a0 <line:791:3> Text=" "
|   |   |-HTMLStartTagComment 0x9431c0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x943200 <col:8, col:11> Name="li"
|   |   |-TextComment 0x943240 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x943260 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x943290 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x9432c0 <line:792:3> Text=" "
|   `-BlockCommandComment 0x943340 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x943370 <<invalid sloc>>
|-FunctionDecl 0x8c3b50 <line:817:1, col:30> col:13 LOS_TaskLock 'void (void)' extern
| `-FullComment 0x943ec0 <line:797:3, line:815:22>
|   |-ParagraphComment 0x9434c0 <line:797:3>
|   | `-TextComment 0x943490 <col:3> Text=" "
|   |-VerbatimLineComment 0x9434e0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x943550 <line:798:3>
|   | `-TextComment 0x943520 <col:3> Text=" "
|   |-BlockCommandComment 0x943570 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0x9435d0 <col:10, col:35>
|   |   `-TextComment 0x9435a0 <col:10, col:35> Text=" Lock the task scheduling."
|   |-ParagraphComment 0x943620 <line:800:3>
|   | `-TextComment 0x9435f0 <col:3> Text=" "
|   |-BlockCommandComment 0x943640 <col:4, line:801:112> Name="par"
|   | `-ParagraphComment 0x9436c0 <line:800:8, line:801:112>
|   |   |-TextComment 0x943670 <line:800:8, col:20> Text=" Description:"
|   |   `-TextComment 0x943690 <line:801:3, col:112> Text=" This API is used to lock the task scheduling. Task switching will not occur if the task scheduling is locked."
|   |-ParagraphComment 0x943710 <line:803:3>
|   | `-TextComment 0x9436e0 <col:3> Text=" "
|   |-BlockCommandComment 0x943730 <col:4, line:808:8> Name="attention"
|   | `-ParagraphComment 0x9439f0 <line:804:3, line:808:8>
|   |   |-TextComment 0x943760 <line:804:3> Text=" "
|   |   |-HTMLStartTagComment 0x943780 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9437c0 <line:805:3> Text=" "
|   |   |-HTMLStartTagComment 0x9437e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x943820 <col:8, col:113> Text="If the task scheduling is locked, but interrupts are not disabled, tasks are still able to be interrupted."
|   |   |-HTMLEndTagComment 0x943840 <col:114, col:118> Name="li"
|   |   |-TextComment 0x943870 <line:806:3> Text=" "
|   |   |-HTMLStartTagComment 0x943890 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9438d0 <col:8, col:117> Text="One is added to the number of task scheduling locks if this API is called. The number of locks is decreased by"
|   |   |-TextComment 0x9438f0 <line:807:3, col:107> Text=" one if the task scheduling is unlocked. Therefore, this API should be used together with LOS_TaskUnlock."
|   |   |-HTMLEndTagComment 0x943910 <col:108, col:112> Name="li"
|   |   |-TextComment 0x943940 <line:808:3> Text=" "
|   |   `-HTMLEndTagComment 0x943960 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x943a50 <line:810:3>
|   | `-TextComment 0x943a20 <col:3> Text=" "
|   |-ParamCommandComment 0x943a70 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x943ad0 <<invalid sloc>>
|   |-ParagraphComment 0x943b20 <line:812:3>
|   | `-TextComment 0x943af0 <col:3> Text=" "
|   |-BlockCommandComment 0x943b40 <col:4, line:813:3> Name="retval"
|   | `-ParagraphComment 0x943bc0 <line:812:11, line:813:3>
|   |   |-TextComment 0x943b70 <line:812:11, col:16> Text=" None."
|   |   `-TextComment 0x943b90 <line:813:3> Text=" "
|   |-BlockCommandComment 0x943be0 <col:4, line:815:3> Name="par"
|   | `-ParagraphComment 0x943db0 <line:813:8, line:815:3>
|   |   |-TextComment 0x943c10 <line:813:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x943c30 <line:814:3> Text=" "
|   |   |-HTMLStartTagComment 0x943c50 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x943c90 <col:8, col:11> Name="li"
|   |   |-TextComment 0x943cd0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x943cf0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x943d20 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x943d50 <line:815:3> Text=" "
|   `-BlockCommandComment 0x943dd0 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x943e30 <col:8, col:22>
|       `-TextComment 0x943e00 <col:8, col:22> Text=" LOS_TaskUnlock"
|-FunctionDecl 0x8c3cb0 <line:840:1, col:32> col:13 LOS_TaskUnlock 'void (void)' extern
| `-FullComment 0x9448b0 <line:820:3, line:838:20>
|   |-ParagraphComment 0x943f60 <line:820:3>
|   | `-TextComment 0x943f30 <col:3> Text=" "
|   |-VerbatimLineComment 0x943f80 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x943ff0 <line:821:3>
|   | `-TextComment 0x943fc0 <col:3> Text=" "
|   |-BlockCommandComment 0x944010 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0x944070 <col:10, col:37>
|   |   `-TextComment 0x944040 <col:10, col:37> Text=" Unlock the task scheduling."
|   |-ParagraphComment 0x9440c0 <line:823:3>
|   | `-TextComment 0x944090 <col:3> Text=" "
|   |-BlockCommandComment 0x9440e0 <col:4, line:825:119> Name="par"
|   | `-ParagraphComment 0x944190 <line:823:8, line:825:119>
|   |   |-TextComment 0x944110 <line:823:8, col:20> Text=" Description:"
|   |   |-TextComment 0x944130 <line:824:3, col:114> Text=" This API is used to unlock the task scheduling. Calling this API will decrease the number of task locks by one."
|   |   `-TextComment 0x944150 <line:825:3, col:119> Text=" If a task is locked more than once, the task scheduling will be unlocked only when the number of locks becomes zero."
|   |-ParagraphComment 0x9441e0 <line:827:3>
|   | `-TextComment 0x9441b0 <col:3> Text=" "
|   |-BlockCommandComment 0x944200 <col:4, line:831:8> Name="attention"
|   | `-ParagraphComment 0x9443f0 <line:828:3, line:831:8>
|   |   |-TextComment 0x944230 <line:828:3> Text=" "
|   |   |-HTMLStartTagComment 0x944250 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x944290 <line:829:3> Text=" "
|   |   |-HTMLStartTagComment 0x9442b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9442f0 <col:8, col:115> Text="The number of locks is decreased by one if this API is called. One is added to the number of task scheduling"
|   |   |-TextComment 0x944310 <line:830:3, col:105> Text=" locks if the task scheduling is locked. Therefore, this API should be used together with LOS_TaskLock."
|   |   |-HTMLEndTagComment 0x944330 <col:106, col:110> Name="li"
|   |   |-TextComment 0x944360 <line:831:3> Text=" "
|   |   `-HTMLEndTagComment 0x944380 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x944440 <line:833:3>
|   | `-TextComment 0x944410 <col:3> Text=" "
|   |-ParamCommandComment 0x944460 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x9444c0 <<invalid sloc>>
|   |-ParagraphComment 0x944510 <line:835:3>
|   | `-TextComment 0x9444e0 <col:3> Text=" "
|   |-BlockCommandComment 0x944530 <col:4, line:836:3> Name="retval"
|   | `-ParagraphComment 0x9445b0 <line:835:11, line:836:3>
|   |   |-TextComment 0x944560 <line:835:11, col:16> Text=" None."
|   |   `-TextComment 0x944580 <line:836:3> Text=" "
|   |-BlockCommandComment 0x9445d0 <col:4, line:838:3> Name="par"
|   | `-ParagraphComment 0x9447a0 <line:836:8, line:838:3>
|   |   |-TextComment 0x944600 <line:836:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x944620 <line:837:3> Text=" "
|   |   |-HTMLStartTagComment 0x944640 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x944680 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9446c0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9446e0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x944710 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x944740 <line:838:3> Text=" "
|   `-BlockCommandComment 0x9447c0 <col:4, col:20> Name="see"
|     `-ParagraphComment 0x944820 <col:8, col:20>
|       `-TextComment 0x9447f0 <col:8, col:20> Text=" LOS_TaskLock"
|-FunctionDecl 0x8c3ed8 <line:870:1, col:60> col:15 LOS_TaskPriSet 'UINT32 (UINT32, UINT16)' extern
| |-ParmVarDecl 0x8c3d88 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8c3e00 <col:45, col:52> col:52 taskPrio 'UINT16':'unsigned short'
| `-FullComment 0x945890 <line:843:3, line:868:22>
|   |-ParagraphComment 0x944950 <line:843:3>
|   | `-TextComment 0x944920 <col:3> Text=" "
|   |-VerbatimLineComment 0x944970 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x9449e0 <line:844:3>
|   | `-TextComment 0x9449b0 <col:3> Text=" "
|   |-BlockCommandComment 0x944a00 <col:4, col:30> Name="brief"
|   | `-ParagraphComment 0x944a60 <col:10, col:30>
|   |   `-TextComment 0x944a30 <col:10, col:30> Text=" Set a task priority."
|   |-ParagraphComment 0x944ab0 <line:846:3>
|   | `-TextComment 0x944a80 <col:3> Text=" "
|   |-BlockCommandComment 0x944ad0 <col:4, line:847:60> Name="par"
|   | `-ParagraphComment 0x944b50 <line:846:8, line:847:60>
|   |   |-TextComment 0x944b00 <line:846:8, col:20> Text=" Description:"
|   |   `-TextComment 0x944b20 <line:847:3, col:60> Text=" This API is used to set the priority of a specified task."
|   |-ParagraphComment 0x944ba0 <line:849:3>
|   | `-TextComment 0x944b70 <col:3> Text=" "
|   |-BlockCommandComment 0x944bc0 <col:4, line:856:8> Name="attention"
|   | `-ParagraphComment 0x945020 <line:850:3, line:856:8>
|   |   |-TextComment 0x944bf0 <line:850:3> Text=" "
|   |   |-HTMLStartTagComment 0x944c10 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x944c50 <line:851:3> Text=" "
|   |   |-HTMLStartTagComment 0x944c70 <col:4, col:7> Name="li"
|   |   |-TextComment 0x944cb0 <col:8, col:116> Text="If the set priority is higher than the priority of the current running task, task scheduling probably occurs."
|   |   |-TextComment 0x944cd0 <line:852:3> Text=" "
|   |   |-HTMLEndTagComment 0x944cf0 <col:4, col:8> Name="li"
|   |   |-TextComment 0x944d20 <line:853:3> Text=" "
|   |   |-HTMLStartTagComment 0x944d40 <col:4, col:7> Name="li"
|   |   |-TextComment 0x944d80 <col:8, col:94> Text="Changing the priority of the current running task also probably causes task scheduling."
|   |   |-HTMLEndTagComment 0x944da0 <col:95, col:99> Name="li"
|   |   |-TextComment 0x944dd0 <line:854:3> Text=" "
|   |   |-HTMLStartTagComment 0x944df0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x944e30 <col:8, col:102> Text="Using the interface to change the priority of software timer task and idle task is not allowed."
|   |   |-HTMLEndTagComment 0x944e50 <col:103, col:107> Name="li"
|   |   |-TextComment 0x944e80 <line:855:3> Text=" "
|   |   |-HTMLStartTagComment 0x944ea0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x944ee0 <col:8, col:59> Text="Using the interface in the interrupt is not allowed."
|   |   |-HTMLEndTagComment 0x944f00 <col:60, col:64> Name="li"
|   |   |-TextComment 0x944f30 <line:856:3> Text=" "
|   |   `-HTMLEndTagComment 0x944f50 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x945070 <line:858:3>
|   | `-TextComment 0x945040 <col:3> Text=" "
|   |-ParamCommandComment 0x945090 <col:4, line:859:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x945140 <line:858:18, line:859:3>
|   |   |-TextComment 0x9450f0 <line:858:18, col:96> Text="   [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |   `-TextComment 0x945110 <line:859:3> Text=" "
|   |-ParamCommandComment 0x945160 <col:4, col:52> [in] implicitly Param="taskPrio" ParamIndex=1
|   | `-ParagraphComment 0x9451f0 <col:20, col:52>
|   |   `-TextComment 0x9451c0 <col:20, col:52> Text=" [IN] Type #UINT16 Task priority."
|   |-ParagraphComment 0x945240 <line:861:3>
|   | `-TextComment 0x945210 <col:3> Text=" "
|   |-BlockCommandComment 0x945260 <col:4, line:862:3> Name="retval"
|   | `-ParagraphComment 0x9452e0 <line:861:11, line:862:3>
|   |   |-TextComment 0x945290 <line:861:11, col:95> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR    Incorrect task priority.Re-configure the task priority"
|   |   `-TextComment 0x9452b0 <line:862:3> Text=" "
|   |-BlockCommandComment 0x945300 <col:4, line:863:3> Name="retval"
|   | `-ParagraphComment 0x945380 <line:862:11, line:863:3>
|   |   |-TextComment 0x945330 <line:862:11, col:95> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE   Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0x945350 <line:863:3> Text=" "
|   |-BlockCommandComment 0x9453a0 <col:4, line:864:3> Name="retval"
|   | `-ParagraphComment 0x945420 <line:863:11, line:864:3>
|   |   |-TextComment 0x9453d0 <line:863:11, col:56> Text=" #LOS_ERRNO_TSK_ID_INVALID     Invalid Task ID"
|   |   `-TextComment 0x9453f0 <line:864:3> Text=" "
|   |-BlockCommandComment 0x945440 <col:4, line:865:3> Name="retval"
|   | `-ParagraphComment 0x9454c0 <line:864:11, line:865:3>
|   |   |-TextComment 0x945470 <line:864:11, col:65> Text=" #LOS_ERRNO_TSK_NOT_CREATED    The task is not created."
|   |   `-TextComment 0x945490 <line:865:3> Text=" "
|   |-BlockCommandComment 0x9454e0 <col:4, line:866:3> Name="retval"
|   | `-ParagraphComment 0x945560 <line:865:11, line:866:3>
|   |   |-TextComment 0x945510 <line:865:11, col:103> Text=" #LOS_OK                       The task priority is successfully set to a specified priority."
|   |   `-TextComment 0x945530 <line:866:3> Text=" "
|   |-BlockCommandComment 0x945580 <col:4, line:868:3> Name="par"
|   | `-ParagraphComment 0x945750 <line:866:8, line:868:3>
|   |   |-TextComment 0x9455b0 <line:866:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9455d0 <line:867:3> Text=" "
|   |   |-HTMLStartTagComment 0x9455f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x945630 <col:8, col:11> Name="li"
|   |   |-TextComment 0x945670 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x945690 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x9456c0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x9456f0 <line:868:3> Text=" "
|   `-BlockCommandComment 0x945770 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x9457d0 <col:8, col:22>
|       `-TextComment 0x9457a0 <col:8, col:22> Text=" LOS_TaskPriSet"
|-FunctionDecl 0x8c40b8 <line:898:1, col:48> col:15 LOS_CurTaskPriSet 'UINT32 (UINT16)' extern
| |-ParmVarDecl 0x8c3fc8 <col:33, col:40> col:40 taskPrio 'UINT16':'unsigned short'
| `-FullComment 0x9466f0 <line:873:3, line:896:22>
|   |-ParagraphComment 0x945930 <line:873:3>
|   | `-TextComment 0x945900 <col:3> Text=" "
|   |-VerbatimLineComment 0x945950 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x9459c0 <line:874:3>
|   | `-TextComment 0x945990 <col:3> Text=" "
|   |-BlockCommandComment 0x9459e0 <col:4, col:79> Name="brief"
|   | `-ParagraphComment 0x945a60 <col:10, col:79>
|   |   `-TextComment 0x945a30 <col:10, col:79> Text=" Set the priority of the current running task to a specified priority."
|   |-ParagraphComment 0x945ab0 <line:876:3>
|   | `-TextComment 0x945a80 <col:3> Text=" "
|   |-BlockCommandComment 0x945ad0 <col:4, line:877:92> Name="par"
|   | `-ParagraphComment 0x945b50 <line:876:8, line:877:92>
|   |   |-TextComment 0x945b00 <line:876:8, col:20> Text=" Description:"
|   |   `-TextComment 0x945b20 <line:877:3, col:92> Text=" This API is used to set the priority of the current running task to a specified priority."
|   |-ParagraphComment 0x945ba0 <line:879:3>
|   | `-TextComment 0x945b70 <col:3> Text=" "
|   |-BlockCommandComment 0x945bc0 <col:4, line:884:8> Name="attention"
|   | `-ParagraphComment 0x945f30 <line:880:3, line:884:8>
|   |   |-TextComment 0x945bf0 <line:880:3> Text=" "
|   |   |-HTMLStartTagComment 0x945c10 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x945c50 <line:881:3> Text=" "
|   |   |-HTMLStartTagComment 0x945c70 <col:4, col:7> Name="li"
|   |   |-TextComment 0x945cb0 <col:8, col:89> Text="Changing the priority of the current running task probably causes task scheduling."
|   |   |-HTMLEndTagComment 0x945cd0 <col:90, col:94> Name="li"
|   |   |-TextComment 0x945d00 <line:882:3> Text=" "
|   |   |-HTMLStartTagComment 0x945d20 <col:4, col:7> Name="li"
|   |   |-TextComment 0x945d60 <col:8, col:102> Text="Using the interface to change the priority of software timer task and idle task is not allowed."
|   |   |-HTMLEndTagComment 0x945d80 <col:103, col:107> Name="li"
|   |   |-TextComment 0x945db0 <line:883:3> Text=" "
|   |   |-HTMLStartTagComment 0x945dd0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x945e10 <col:8, col:59> Text="Using the interface in the interrupt is not allowed."
|   |   |-HTMLEndTagComment 0x945e30 <col:60, col:64> Name="li"
|   |   |-TextComment 0x945e60 <line:884:3> Text=" "
|   |   `-HTMLEndTagComment 0x945e80 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x945f80 <line:886:3>
|   | `-TextComment 0x945f50 <col:3> Text=" "
|   |-ParamCommandComment 0x945fa0 <col:4, col:52> [in] implicitly Param="taskPrio" ParamIndex=0
|   | `-ParagraphComment 0x946030 <col:20, col:52>
|   |   `-TextComment 0x946000 <col:20, col:52> Text=" [IN] Type #UINT16 Task priority."
|   |-ParagraphComment 0x946080 <line:888:3>
|   | `-TextComment 0x946050 <col:3> Text=" "
|   |-BlockCommandComment 0x9460a0 <col:4, line:889:3> Name="retval"
|   | `-ParagraphComment 0x946120 <line:888:11, line:889:3>
|   |   |-TextComment 0x9460d0 <line:888:11, col:96> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR     Incorrect task priority.Re-configure the task priority"
|   |   `-TextComment 0x9460f0 <line:889:3> Text=" "
|   |-BlockCommandComment 0x946140 <col:4, line:890:3> Name="retval"
|   | `-ParagraphComment 0x9461c0 <line:889:11, line:890:3>
|   |   |-TextComment 0x946170 <line:889:11, col:96> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE    Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0x946190 <line:890:3> Text=" "
|   |-BlockCommandComment 0x9461e0 <col:4, line:891:3> Name="retval"
|   | `-ParagraphComment 0x946260 <line:890:11, line:891:3>
|   |   |-TextComment 0x946210 <line:890:11, col:57> Text=" #LOS_ERRNO_TSK_ID_INVALID      Invalid Task ID"
|   |   `-TextComment 0x946230 <line:891:3> Text=" "
|   |-BlockCommandComment 0x946280 <col:4, line:892:3> Name="retval"
|   | `-ParagraphComment 0x946300 <line:891:11, line:892:3>
|   |   |-TextComment 0x9462b0 <line:891:11, col:66> Text=" #LOS_ERRNO_TSK_NOT_CREATED     The task is not created."
|   |   `-TextComment 0x9462d0 <line:892:3> Text=" "
|   |-BlockCommandComment 0x946320 <col:4, line:894:3> Name="retval"
|   | `-ParagraphComment 0x9463d0 <line:892:11, line:894:3>
|   |   |-TextComment 0x946350 <line:892:11, col:117> Text=" #LOS_OK                        The priority of the current running task is successfully set to a specified"
|   |   |-TextComment 0x946370 <line:893:3, col:51> Text="                                        priority."
|   |   `-TextComment 0x946390 <line:894:3> Text=" "
|   |-BlockCommandComment 0x9463f0 <col:4, line:896:3> Name="par"
|   | `-ParagraphComment 0x9465c0 <line:894:8, line:896:3>
|   |   |-TextComment 0x946420 <line:894:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x946440 <line:895:3> Text=" "
|   |   |-HTMLStartTagComment 0x946460 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x9464a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9464e0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x946500 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x946530 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x946560 <line:896:3> Text=" "
|   `-BlockCommandComment 0x9465e0 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x946640 <col:8, col:22>
|       `-TextComment 0x946610 <col:8, col:22> Text=" LOS_TaskPriGet"
|-FunctionDecl 0x8c4220 <line:924:1, col:33> col:15 LOS_TaskYield 'UINT32 (void)' extern
| `-FullComment 0x947230 <line:901:3, line:922:7>
|   |-ParagraphComment 0x946790 <line:901:3>
|   | `-TextComment 0x946760 <col:3> Text=" "
|   |-VerbatimLineComment 0x9467b0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x946820 <line:902:3>
|   | `-TextComment 0x9467f0 <col:3> Text=" "
|   |-BlockCommandComment 0x946840 <col:4, col:73> Name="brief"
|   | `-ParagraphComment 0x9468a0 <col:10, col:73>
|   |   `-TextComment 0x946870 <col:10, col:73> Text=" Change the scheduling sequence of tasks with the same priority."
|   |-ParagraphComment 0x9468f0 <line:904:3>
|   | `-TextComment 0x9468c0 <col:3> Text=" "
|   |-BlockCommandComment 0x946910 <col:4, line:906:9> Name="par"
|   | `-ParagraphComment 0x9469c0 <line:904:8, line:906:9>
|   |   |-TextComment 0x946940 <line:904:8, col:20> Text=" Description:"
|   |   |-TextComment 0x946960 <line:905:3, col:117> Text=" This API is used to move current task in a queue of tasks with the same priority to the tail of the queue of ready"
|   |   `-TextComment 0x946980 <line:906:3, col:9> Text=" tasks."
|   |-ParagraphComment 0x946a10 <line:908:3>
|   | `-TextComment 0x9469e0 <col:3> Text=" "
|   |-BlockCommandComment 0x946a30 <col:4, line:912:8> Name="attention"
|   | `-ParagraphComment 0x946c20 <line:909:3, line:912:8>
|   |   |-TextComment 0x946a60 <line:909:3> Text=" "
|   |   |-HTMLStartTagComment 0x946a80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x946ac0 <line:910:3> Text=" "
|   |   |-HTMLStartTagComment 0x946ae0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x946b20 <col:8, col:110> Text="At least two ready tasks need to be included in the queue of ready tasks with the same priority. If the"
|   |   |-TextComment 0x946b40 <line:911:3, col:77> Text=" less than two ready tasks are included in the queue, an error is reported."
|   |   |-HTMLEndTagComment 0x946b60 <col:78, col:82> Name="li"
|   |   |-TextComment 0x946b90 <line:912:3> Text=" "
|   |   `-HTMLEndTagComment 0x946bb0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x946c70 <line:914:3>
|   | `-TextComment 0x946c40 <col:3> Text=" "
|   |-ParamCommandComment 0x946c90 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x946cf0 <<invalid sloc>>
|   |-ParagraphComment 0x946d40 <line:916:3>
|   | `-TextComment 0x946d10 <col:3> Text=" "
|   |-BlockCommandComment 0x946d60 <col:4, line:917:3> Name="retval"
|   | `-ParagraphComment 0x946de0 <line:916:11, line:917:3>
|   |   |-TextComment 0x946d90 <line:916:11, col:71> Text=" #LOS_ERRNO_TSK_ID_INVALID                    Invalid Task ID"
|   |   `-TextComment 0x946db0 <line:917:3> Text=" "
|   |-BlockCommandComment 0x946e00 <col:4, line:918:3> Name="retval"
|   | `-ParagraphComment 0x946e80 <line:917:11, line:918:3>
|   |   |-TextComment 0x946e30 <line:917:11, col:116> Text=" #LOS_ERRNO_TSK_YIELD_NOT_ENOUGH_TASK         No tasks with the same priority is available for scheduling."
|   |   `-TextComment 0x946e50 <line:918:3> Text=" "
|   |-BlockCommandComment 0x946ea0 <col:4, line:920:3> Name="retval"
|   | `-ParagraphComment 0x946f50 <line:918:11, line:920:3>
|   |   |-TextComment 0x946ed0 <line:918:11, col:110> Text=" #LOS_OK                                      The scheduling sequence of tasks with same priority is"
|   |   |-TextComment 0x946ef0 <line:919:3, col:77> Text="                                                      successfully changed."
|   |   `-TextComment 0x946f10 <line:920:3> Text=" "
|   |-BlockCommandComment 0x946f70 <col:4, line:922:3> Name="par"
|   | `-ParagraphComment 0x947140 <line:920:8, line:922:3>
|   |   |-TextComment 0x946fa0 <line:920:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x946fc0 <line:921:3> Text=" "
|   |   |-HTMLStartTagComment 0x946fe0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x947020 <col:8, col:11> Name="li"
|   |   |-TextComment 0x947060 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x947080 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x9470b0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x9470e0 <line:922:3> Text=" "
|   `-BlockCommandComment 0x947160 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x947190 <<invalid sloc>>
|-FunctionDecl 0x8c43e8 <line:943:1, col:43> col:15 LOS_TaskPriGet 'UINT16 (UINT32)' extern
| |-ParmVarDecl 0x8c42f8 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0x948560 <line:927:3, line:941:22>
|   |-ParagraphComment 0x9472d0 <line:927:3>
|   | `-TextComment 0x9472a0 <col:3> Text=" "
|   |-VerbatimLineComment 0x9472f0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x947360 <line:928:3>
|   | `-TextComment 0x947330 <col:3> Text=" "
|   |-BlockCommandComment 0x947380 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0x9473e0 <col:10, col:33>
|   |   `-TextComment 0x9473b0 <col:10, col:33> Text=" Obtain a task priority."
|   |-ParagraphComment 0x947430 <line:930:3>
|   | `-TextComment 0x947400 <col:3> Text=" "
|   |-BlockCommandComment 0x947450 <col:4, line:931:63> Name="par"
|   | `-ParagraphComment 0x9474d0 <line:930:8, line:931:63>
|   |   |-TextComment 0x947480 <line:930:8, col:20> Text=" Description:"
|   |   `-TextComment 0x9474a0 <line:931:3, col:63> Text=" This API is used to obtain the priority of a specified task."
|   |-ParagraphComment 0x947520 <line:933:3>
|   | `-TextComment 0x9474f0 <col:3> Text=" "
|   |-BlockCommandComment 0x947540 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x9475a0 <col:14, col:19>
|   |   `-TextComment 0x947570 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x9475f0 <line:935:3>
|   | `-TextComment 0x9475c0 <col:3> Text=" "
|   |-ParamCommandComment 0x947610 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x9476a0 <col:18, col:94>
|   |   `-TextComment 0x947670 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0x9476f0 <line:937:3>
|   | `-TextComment 0x9476c0 <col:3> Text=" "
|   |-BlockCommandComment 0x947710 <col:4, line:938:3> Name="retval"
|   | `-ParagraphComment 0x947790 <line:937:11, line:938:3>
|   |   |-TextComment 0x947740 <line:937:11, col:67> Text=" #OS_INVALID      The task priority fails to be obtained."
|   |   `-TextComment 0x947760 <line:938:3> Text=" "
|   |-BlockCommandComment 0x9477b0 <col:4, line:939:3> Name="retval"
|   | `-ParagraphComment 0x947830 <line:938:11, line:939:3>
|   |   |-TextComment 0x9477e0 <line:938:11, col:46> Text=" #UINT16          The task priority."
|   |   `-TextComment 0x947800 <line:939:3> Text=" "
|   |-BlockCommandComment 0x947850 <col:4, line:941:3> Name="par"
|   | `-ParagraphComment 0x948440 <line:939:8, line:941:3>
|   |   |-TextComment 0x947880 <line:939:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9478a0 <line:940:3> Text=" "
|   |   |-HTMLStartTagComment 0x9478c0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x947900 <col:8, col:11> Name="li"
|   |   |-TextComment 0x947940 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x947960 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x947990 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x9479c0 <line:941:3> Text=" "
|   `-BlockCommandComment 0x948460 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x9484c0 <col:8, col:22>
|       `-TextComment 0x948490 <col:8, col:22> Text=" LOS_TaskPriSet"
|-FunctionDecl 0x8c4550 <line:963:1, col:36> col:15 used LOS_CurTaskIDGet 'UINT32 (void)' extern
| `-FullComment 0x948ea0 <line:946:3, line:961:7>
|   |-ParagraphComment 0x948600 <line:946:3>
|   | `-TextComment 0x9485d0 <col:3> Text=" "
|   |-VerbatimLineComment 0x948620 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x948690 <line:947:3>
|   | `-TextComment 0x948660 <col:3> Text=" "
|   |-BlockCommandComment 0x9486b0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x948710 <col:10, col:41>
|   |   `-TextComment 0x9486e0 <col:10, col:41> Text=" Obtain current running task ID."
|   |-ParagraphComment 0x948760 <line:949:3>
|   | `-TextComment 0x948730 <col:3> Text=" "
|   |-BlockCommandComment 0x948780 <col:4, line:950:61> Name="par"
|   | `-ParagraphComment 0x948800 <line:949:8, line:950:61>
|   |   |-TextComment 0x9487b0 <line:949:8, col:20> Text=" Description:"
|   |   `-TextComment 0x9487d0 <line:950:3, col:61> Text=" This API is used to obtain the ID of current running task."
|   |-ParagraphComment 0x948850 <line:952:3>
|   | `-TextComment 0x948820 <col:3> Text=" "
|   |-BlockCommandComment 0x948870 <col:4, line:955:8> Name="attention"
|   | `-ParagraphComment 0x948a40 <line:953:3, line:955:8>
|   |   |-TextComment 0x9488a0 <line:953:3> Text=" "
|   |   |-HTMLStartTagComment 0x9488c0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x948900 <line:954:3> Text=" "
|   |   |-HTMLStartTagComment 0x948920 <col:4, col:7> Name="li"
|   |   |-TextComment 0x948960 <col:8, col:70> Text=" This interface should not be called before system initialized."
|   |   |-HTMLEndTagComment 0x948980 <col:71, col:75> Name="li"
|   |   |-TextComment 0x9489b0 <line:955:3> Text=" "
|   |   `-HTMLEndTagComment 0x9489d0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x948a90 <line:957:3>
|   | `-TextComment 0x948a60 <col:3> Text=" "
|   |-BlockCommandComment 0x948ab0 <col:4, line:958:3> Name="retval"
|   | `-ParagraphComment 0x948b30 <line:957:11, line:958:3>
|   |   |-TextComment 0x948ae0 <line:957:11, col:56> Text=" #LOS_ERRNO_TSK_ID_INVALID    Invalid Task ID."
|   |   `-TextComment 0x948b00 <line:958:3> Text=" "
|   |-BlockCommandComment 0x948b50 <col:4, line:959:3> Name="retval"
|   | `-ParagraphComment 0x948bd0 <line:958:11, line:959:3>
|   |   |-TextComment 0x948b80 <line:958:11, col:48> Text=" #UINT32                      Task ID."
|   |   `-TextComment 0x948ba0 <line:959:3> Text=" "
|   |-BlockCommandComment 0x948bf0 <col:4, line:961:3> Name="par"
|   | `-ParagraphComment 0x948dc0 <line:959:8, line:961:3>
|   |   |-TextComment 0x948c20 <line:959:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x948c40 <line:960:3> Text=" "
|   |   |-HTMLStartTagComment 0x948c60 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x948ca0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x948ce0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x948d00 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x948d30 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x948d60 <line:961:3> Text=" "
|   `-BlockCommandComment 0x948de0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x948e10 <<invalid sloc>>
|-FunctionDecl 0x8c46b0 <line:981:1, col:37> col:15 LOS_NextTaskIDGet 'UINT32 (void)' extern
| `-FullComment 0x949670 <line:966:3, line:979:7>
|   |-ParagraphComment 0x948f40 <line:966:3>
|   | `-TextComment 0x948f10 <col:3> Text=" "
|   |-VerbatimLineComment 0x948f60 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x948fd0 <line:967:3>
|   | `-TextComment 0x948fa0 <col:3> Text=" "
|   |-BlockCommandComment 0x948ff0 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0x949050 <col:10, col:38>
|   |   `-TextComment 0x949020 <col:10, col:38> Text=" Obtain next running task ID."
|   |-ParagraphComment 0x9490a0 <line:969:3>
|   | `-TextComment 0x949070 <col:3> Text=" "
|   |-BlockCommandComment 0x9490c0 <col:4, line:970:58> Name="par"
|   | `-ParagraphComment 0x949140 <line:969:8, line:970:58>
|   |   |-TextComment 0x9490f0 <line:969:8, col:20> Text=" Description:"
|   |   `-TextComment 0x949110 <line:970:3, col:58> Text=" This API is used to obtain the ID of next running task."
|   |-ParagraphComment 0x949190 <line:972:3>
|   | `-TextComment 0x949160 <col:3> Text=" "
|   |-BlockCommandComment 0x9491b0 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x949210 <col:14, col:19>
|   |   `-TextComment 0x9491e0 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x949260 <line:975:3>
|   | `-TextComment 0x949230 <col:3> Text=" "
|   |-BlockCommandComment 0x949280 <col:4, line:976:3> Name="retval"
|   | `-ParagraphComment 0x949300 <line:975:11, line:976:3>
|   |   |-TextComment 0x9492b0 <line:975:11, col:56> Text=" #LOS_ERRNO_TSK_ID_INVALID    invalid Task ID."
|   |   `-TextComment 0x9492d0 <line:976:3> Text=" "
|   |-BlockCommandComment 0x949320 <col:4, line:977:3> Name="retval"
|   | `-ParagraphComment 0x9493a0 <line:976:11, line:977:3>
|   |   |-TextComment 0x949350 <line:976:11, col:48> Text=" #UINT32                      task id."
|   |   `-TextComment 0x949370 <line:977:3> Text=" "
|   |-BlockCommandComment 0x9493c0 <col:4, line:979:3> Name="par"
|   | `-ParagraphComment 0x949590 <line:977:8, line:979:3>
|   |   |-TextComment 0x9493f0 <line:977:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x949410 <line:978:3> Text=" "
|   |   |-HTMLStartTagComment 0x949430 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x949470 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9494b0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9494d0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x949500 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x949530 <line:979:3> Text=" "
|   `-BlockCommandComment 0x9495b0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x9495e0 <<invalid sloc>>
|-FunctionDecl 0x8c4868 <line:999:1, col:37> col:14 LOS_CurTaskNameGet 'CHAR *(void)' extern
| `-FullComment 0x949e40 <line:984:3, line:997:7>
|   |-ParagraphComment 0x949710 <line:984:3>
|   | `-TextComment 0x9496e0 <col:3> Text=" "
|   |-VerbatimLineComment 0x949730 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x9497a0 <line:985:3>
|   | `-TextComment 0x949770 <col:3> Text=" "
|   |-BlockCommandComment 0x9497c0 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0x949820 <col:10, col:38>
|   |   `-TextComment 0x9497f0 <col:10, col:38> Text=" Obtain next running task ID."
|   |-ParagraphComment 0x949870 <line:987:3>
|   | `-TextComment 0x949840 <col:3> Text=" "
|   |-BlockCommandComment 0x949890 <col:4, line:988:58> Name="par"
|   | `-ParagraphComment 0x949910 <line:987:8, line:988:58>
|   |   |-TextComment 0x9498c0 <line:987:8, col:20> Text=" Description:"
|   |   `-TextComment 0x9498e0 <line:988:3, col:58> Text=" This API is used to obtain the ID of next running task."
|   |-ParagraphComment 0x949960 <line:990:3>
|   | `-TextComment 0x949930 <col:3> Text=" "
|   |-BlockCommandComment 0x949980 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x9499e0 <col:14, col:19>
|   |   `-TextComment 0x9499b0 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x949a30 <line:993:3>
|   | `-TextComment 0x949a00 <col:3> Text=" "
|   |-BlockCommandComment 0x949a50 <col:4, line:994:3> Name="retval"
|   | `-ParagraphComment 0x949ad0 <line:993:11, line:994:3>
|   |   |-TextComment 0x949a80 <line:993:11, col:46> Text=" #NULL            invalid Task name."
|   |   `-TextComment 0x949aa0 <line:994:3> Text=" "
|   |-BlockCommandComment 0x949af0 <col:4, line:995:3> Name="retval"
|   | `-ParagraphComment 0x949b70 <line:994:11, line:995:3>
|   |   |-TextComment 0x949b20 <line:994:11, col:38> Text=" #CHAR*           task name."
|   |   `-TextComment 0x949b40 <line:995:3> Text=" "
|   |-BlockCommandComment 0x949b90 <col:4, line:997:3> Name="par"
|   | `-ParagraphComment 0x949d60 <line:995:8, line:997:3>
|   |   |-TextComment 0x949bc0 <line:995:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x949be0 <line:996:3> Text=" "
|   |   |-HTMLStartTagComment 0x949c00 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x949c40 <col:8, col:11> Name="li"
|   |   |-TextComment 0x949c80 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x949ca0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x949cd0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x949d00 <line:997:3> Text=" "
|   `-BlockCommandComment 0x949d80 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x949db0 <<invalid sloc>>
|-FunctionDecl 0x8c4da0 <line:1025:1, col:66> col:15 LOS_TaskInfoGet 'UINT32 (UINT32, TSK_INFO_S *)' extern
| |-ParmVarDecl 0x8c4948 <col:31, col:38> col:38 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8c4a38 <col:46, col:58> col:58 taskInfo 'TSK_INFO_S *'
| `-FullComment 0x94aaf0 <line:1002:3, line:1023:7>
|   |-ParagraphComment 0x949ee0 <line:1002:3>
|   | `-TextComment 0x949eb0 <col:3> Text=" "
|   |-VerbatimLineComment 0x949f00 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x949f70 <line:1003:3>
|   | `-TextComment 0x949f40 <col:3> Text=" "
|   |-BlockCommandComment 0x949f90 <col:4, col:46> Name="brief"
|   | `-ParagraphComment 0x949ff0 <col:10, col:46>
|   |   `-TextComment 0x949fc0 <col:10, col:46> Text=" Obtain a task information structure."
|   |-ParagraphComment 0x94a040 <line:1005:3>
|   | `-TextComment 0x94a010 <col:3> Text=" "
|   |-BlockCommandComment 0x94a060 <col:4, line:1006:59> Name="par"
|   | `-ParagraphComment 0x94a0e0 <line:1005:8, line:1006:59>
|   |   |-TextComment 0x94a090 <line:1005:8, col:20> Text=" Description:"
|   |   `-TextComment 0x94a0b0 <line:1006:3, col:59> Text=" This API is used to obtain a task information structure."
|   |-ParagraphComment 0x94a130 <line:1008:3>
|   | `-TextComment 0x94a100 <col:3> Text=" "
|   |-BlockCommandComment 0x94a150 <col:4, line:1012:8> Name="attention"
|   | `-ParagraphComment 0x94a340 <line:1009:3, line:1012:8>
|   |   |-TextComment 0x94a180 <line:1009:3> Text=" "
|   |   |-HTMLStartTagComment 0x94a1a0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x94a1e0 <line:1010:3> Text=" "
|   |   |-HTMLStartTagComment 0x94a200 <col:4, col:7> Name="li"
|   |   |-TextComment 0x94a240 <col:8, col:111> Text="One parameter of this interface is a pointer, it should be a correct value, otherwise, the system may be"
|   |   |-TextComment 0x94a260 <line:1011:3, col:12> Text=" abnormal."
|   |   |-HTMLEndTagComment 0x94a280 <col:13, col:17> Name="li"
|   |   |-TextComment 0x94a2b0 <line:1012:3> Text=" "
|   |   `-HTMLEndTagComment 0x94a2d0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x94a390 <line:1014:3>
|   | `-TextComment 0x94a360 <col:3> Text=" "
|   |-ParamCommandComment 0x94a3b0 <col:4, line:1015:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x94a480 <line:1014:18, line:1015:3>
|   |   |-TextComment 0x94a410 <line:1014:18, col:99> Text="    [IN]  Type  #UINT32 Task ID. The task id value is obtained from task creation."
|   |   `-TextComment 0x94a450 <line:1015:3> Text=" "
|   |-ParamCommandComment 0x94a4a0 <col:4, col:103> [in] implicitly Param="taskInfo" ParamIndex=1
|   | `-ParagraphComment 0x94a530 <col:20, col:103>
|   |   `-TextComment 0x94a500 <col:20, col:103> Text="  [OUT] Type  #TSK_INFO_S* Pointer to the task information structure to be obtained."
|   |-ParagraphComment 0x94a580 <line:1017:3>
|   | `-TextComment 0x94a550 <col:3> Text=" "
|   |-BlockCommandComment 0x94a5a0 <col:4, line:1018:3> Name="retval"
|   | `-ParagraphComment 0x94a620 <line:1017:11, line:1018:3>
|   |   |-TextComment 0x94a5d0 <line:1017:11, col:57> Text=" #LOS_ERRNO_TSK_PTR_NULL        Null parameter."
|   |   `-TextComment 0x94a5f0 <line:1018:3> Text=" "
|   |-BlockCommandComment 0x94a640 <col:4, line:1019:3> Name="retval"
|   | `-ParagraphComment 0x94a6c0 <line:1018:11, line:1019:3>
|   |   |-TextComment 0x94a670 <line:1018:11, col:58> Text=" #LOS_ERRNO_TSK_ID_INVALID      Invalid task ID."
|   |   `-TextComment 0x94a690 <line:1019:3> Text=" "
|   |-BlockCommandComment 0x94a6e0 <col:4, line:1020:3> Name="retval"
|   | `-ParagraphComment 0x94a760 <line:1019:11, line:1020:3>
|   |   |-TextComment 0x94a710 <line:1019:11, col:66> Text=" #LOS_ERRNO_TSK_NOT_CREATED     The task is not created."
|   |   `-TextComment 0x94a730 <line:1020:3> Text=" "
|   |-BlockCommandComment 0x94a780 <col:4, line:1021:3> Name="retval"
|   | `-ParagraphComment 0x94a800 <line:1020:11, line:1021:3>
|   |   |-TextComment 0x94a7b0 <line:1020:11, col:98> Text=" #LOS_OK                        The task information structure is successfully obtained."
|   |   `-TextComment 0x94a7d0 <line:1021:3> Text=" "
|   |-BlockCommandComment 0x94a820 <col:4, line:1023:3> Name="par"
|   | `-ParagraphComment 0x94a9f0 <line:1021:8, line:1023:3>
|   |   |-TextComment 0x94a850 <line:1021:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x94a870 <line:1022:3> Text=" "
|   |   |-HTMLStartTagComment 0x94a890 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x94a8d0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x94a910 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x94a930 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x94a960 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x94a990 <line:1023:3> Text=" "
|   `-BlockCommandComment 0x94aa10 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x94aa40 <<invalid sloc>>
|-FunctionDecl 0x8c5018 <line:1047:1, col:66> col:15 LOS_TaskStatusGet 'UINT32 (UINT32, UINT32 *)' extern
| |-ParmVarDecl 0x8c4e88 <col:33, col:40> col:40 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8c4f00 <col:48, col:56> col:56 taskStatus 'UINT32 *'
| `-FullComment 0x94b5f0 <line:1028:3, line:1045:7>
|   |-ParagraphComment 0x94ab90 <line:1028:3>
|   | `-TextComment 0x94ab60 <col:3> Text=" "
|   |-VerbatimLineComment 0x94abb0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x94ac20 <line:1029:3>
|   | `-TextComment 0x94abf0 <col:3> Text=" "
|   |-BlockCommandComment 0x94ac40 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0x94aca0 <col:10, col:33>
|   |   `-TextComment 0x94ac70 <col:10, col:33> Text=" Obtain the task status."
|   |-ParagraphComment 0x94acf0 <line:1031:3>
|   | `-TextComment 0x94acc0 <col:3> Text=" "
|   |-BlockCommandComment 0x94ad10 <col:4, line:1032:46> Name="par"
|   | `-ParagraphComment 0x94ad90 <line:1031:8, line:1032:46>
|   |   |-TextComment 0x94ad40 <line:1031:8, col:20> Text=" Description:"
|   |   `-TextComment 0x94ad60 <line:1032:3, col:46> Text=" This API is used to obtain the task status."
|   |-ParagraphComment 0x94ade0 <line:1034:3>
|   | `-TextComment 0x94adb0 <col:3> Text=" "
|   |-BlockCommandComment 0x94ae00 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x94ae60 <col:14, col:19>
|   |   `-TextComment 0x94ae30 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x94aeb0 <line:1036:3>
|   | `-TextComment 0x94ae80 <col:3> Text=" "
|   |-ParamCommandComment 0x94aed0 <col:4, line:1037:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x94af80 <line:1036:18, line:1037:3>
|   |   |-TextComment 0x94af30 <line:1036:18, col:55> Text="     [IN] Type  #TSK_HANDLE_T Task ID."
|   |   `-TextComment 0x94af50 <line:1037:3> Text=" "
|   |-ParamCommandComment 0x94afa0 <col:4, col:84> [in] implicitly Param="taskStatus" ParamIndex=1
|   | `-ParagraphComment 0x94b030 <col:22, col:84>
|   |   `-TextComment 0x94b000 <col:22, col:84> Text=" [OUT] Type  #UINT32 Pointer to the task status to be obtained."
|   |-ParagraphComment 0x94b080 <line:1039:3>
|   | `-TextComment 0x94b050 <col:3> Text=" "
|   |-BlockCommandComment 0x94b0a0 <col:4, line:1040:3> Name="retval"
|   | `-ParagraphComment 0x94b120 <line:1039:11, line:1040:3>
|   |   |-TextComment 0x94b0d0 <line:1039:11, col:81> Text=" #LOS_ERRNO_TSK_PTR_NULL                    0x02000201: Null parameter."
|   |   `-TextComment 0x94b0f0 <line:1040:3> Text=" "
|   |-BlockCommandComment 0x94b140 <col:4, line:1041:3> Name="retval"
|   | `-ParagraphComment 0x94b1c0 <line:1040:11, line:1041:3>
|   |   |-TextComment 0x94b170 <line:1040:11, col:82> Text=" #LOS_ERRNO_TSK_ID_INVALID                  0x02000207: Invalid task ID."
|   |   `-TextComment 0x94b190 <line:1041:3> Text=" "
|   |-BlockCommandComment 0x94b1e0 <col:4, line:1042:3> Name="retval"
|   | `-ParagraphComment 0x94b260 <line:1041:11, line:1042:3>
|   |   |-TextComment 0x94b210 <line:1041:11, col:90> Text=" #LOS_ERRNO_TSK_NOT_CREATED                 0x0200020a: The task is not created."
|   |   `-TextComment 0x94b230 <line:1042:3> Text=" "
|   |-BlockCommandComment 0x94b280 <col:4, line:1043:3> Name="retval"
|   | `-ParagraphComment 0x94b300 <line:1042:11, line:1043:3>
|   |   |-TextComment 0x94b2b0 <line:1042:11, col:112> Text=" #LOS_OK                                   0: The task information structure is successfully obtained."
|   |   `-TextComment 0x94b2d0 <line:1043:3> Text=" "
|   |-BlockCommandComment 0x94b320 <col:4, line:1045:3> Name="par"
|   | `-ParagraphComment 0x94b4f0 <line:1043:8, line:1045:3>
|   |   |-TextComment 0x94b350 <line:1043:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x94b370 <line:1044:3> Text=" "
|   |   |-HTMLStartTagComment 0x94b390 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x94b3d0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x94b410 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x94b430 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x94b460 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x94b490 <line:1045:3> Text=" "
|   `-BlockCommandComment 0x94b510 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x94b540 <<invalid sloc>>
|-FunctionDecl 0x8c5190 <line:1068:1, col:39> col:15 LOS_TaskInfoMonitor 'UINT32 (void)' extern
| `-FullComment 0x94c010 <line:1050:3, line:1066:27>
|   |-ParagraphComment 0x94b690 <line:1050:3>
|   | `-TextComment 0x94b660 <col:3> Text=" "
|   |-VerbatimLineComment 0x94b6b0 <col:4, col:24> Text=" los_monitor"
|   |-ParagraphComment 0x94b720 <line:1051:3>
|   | `-TextComment 0x94b6f0 <col:3> Text=" "
|   |-BlockCommandComment 0x94b740 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0x94b7a0 <col:10, col:32>
|   |   `-TextComment 0x94b770 <col:10, col:32> Text=" Obtain all tasks info."
|   |-ParagraphComment 0x94b7f0 <line:1053:3>
|   | `-TextComment 0x94b7c0 <col:3> Text=" "
|   |-BlockCommandComment 0x94b810 <col:4, line:1055:3> Name="par"
|   | `-ParagraphComment 0x94b8c0 <line:1053:8, line:1055:3>
|   |   |-TextComment 0x94b840 <line:1053:8, col:20> Text=" Description:"
|   |   |-TextComment 0x94b860 <line:1054:3, col:45> Text=" This API is used to obtain all tasks info."
|   |   `-TextComment 0x94b880 <line:1055:3> Text=" "
|   |-BlockCommandComment 0x94b8e0 <col:4, line:1058:8> Name="attention"
|   | `-ParagraphComment 0x94bab0 <line:1056:3, line:1058:8>
|   |   |-TextComment 0x94b910 <line:1056:3> Text=" "
|   |   |-HTMLStartTagComment 0x94b930 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x94b970 <line:1057:3> Text=" "
|   |   |-HTMLStartTagComment 0x94b990 <col:4, col:7> Name="li"
|   |   |-TextComment 0x94b9d0 <col:8, col:102> Text="This API can be called only after the CPU usage is initialized. Otherwise, -1 will be returned."
|   |   |-HTMLEndTagComment 0x94b9f0 <col:103, col:107> Name="li"
|   |   |-TextComment 0x94ba20 <line:1058:3> Text=" "
|   |   `-HTMLEndTagComment 0x94ba40 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x94bb00 <line:1060:3>
|   | `-TextComment 0x94bad0 <col:3> Text=" "
|   |-ParamCommandComment 0x94bb20 <col:4, col:15> [in] implicitly Param="None."
|   | `-ParagraphComment 0x94bb80 <<invalid sloc>>
|   |-ParagraphComment 0x94bbd0 <line:1062:3>
|   | `-TextComment 0x94bba0 <col:3> Text=" "
|   |-BlockCommandComment 0x94bbf0 <col:4, line:1063:3> Name="retval"
|   | `-ParagraphComment 0x94bc70 <line:1062:11, line:1063:3>
|   |   |-TextComment 0x94bc20 <line:1062:11, col:63> Text=" #OS_ERROR           -1:all tasks info obtain failed."
|   |   `-TextComment 0x94bc40 <line:1063:3> Text=" "
|   |-BlockCommandComment 0x94bc90 <col:4, line:1064:3> Name="retval"
|   | `-ParagraphComment 0x94bd10 <line:1063:11, line:1064:3>
|   |   |-TextComment 0x94bcc0 <line:1063:11, col:74> Text=" #LOS_OK              0:all tasks info is successfully obtained."
|   |   `-TextComment 0x94bce0 <line:1064:3> Text=" "
|   |-BlockCommandComment 0x94bd30 <col:4, line:1066:3> Name="par"
|   | `-ParagraphComment 0x94bf00 <line:1064:8, line:1066:3>
|   |   |-TextComment 0x94bd60 <line:1064:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x94bd80 <line:1065:3> Text=" "
|   |   |-HTMLStartTagComment 0x94bda0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x94bde0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x94be20 <col:12, col:76> Text="los_monitor.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x94be40 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0x94be70 <col:82, col:86> Name="ul"
|   |   `-TextComment 0x94bea0 <line:1066:3> Text=" "
|   `-BlockCommandComment 0x94bf20 <col:4, col:27> Name="see"
|     `-ParagraphComment 0x94bf80 <col:8, col:27>
|       `-TextComment 0x94bf50 <col:8, col:27> Text=" LOS_TaskInfoMonitor"
|-FunctionDecl 0x8c5378 <line:1089:1, col:73> col:15 LOS_TaskSwitchInfoGet 'UINT32 (UINT32, UINT32 *)' extern
| |-ParmVarDecl 0x8c5268 <col:37, col:44> col:44 index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8c52e0 <col:51, col:59> col:59 taskSwitchInfo 'UINT32 *'
| `-FullComment 0x94c9f0 <line:1071:3, line:1087:7>
|   |-ParagraphComment 0x94c0b0 <line:1071:3>
|   | `-TextComment 0x94c080 <col:3> Text=" "
|   |-VerbatimLineComment 0x94c0d0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x94c140 <line:1072:3>
|   | `-TextComment 0x94c110 <col:3> Text=" "
|   |-BlockCommandComment 0x94c160 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0x94c1c0 <col:10, col:35>
|   |   `-TextComment 0x94c190 <col:10, col:35> Text=" Obtain tasks switch info."
|   |-ParagraphComment 0x94c210 <line:1074:3>
|   | `-TextComment 0x94c1e0 <col:3> Text=" "
|   |-BlockCommandComment 0x94c230 <col:4, line:1075:48> Name="par"
|   | `-ParagraphComment 0x94c2b0 <line:1074:8, line:1075:48>
|   |   |-TextComment 0x94c260 <line:1074:8, col:20> Text=" Description:"
|   |   `-TextComment 0x94c280 <line:1075:3, col:48> Text=" This API is used to obtain tasks switch info."
|   |-ParagraphComment 0x94c300 <line:1077:3>
|   | `-TextComment 0x94c2d0 <col:3> Text=" "
|   |-BlockCommandComment 0x94c320 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x94c380 <col:14, col:19>
|   |   `-TextComment 0x94c350 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x94c3d0 <line:1079:3>
|   | `-TextComment 0x94c3a0 <col:3> Text=" "
|   |-ParamCommandComment 0x94c3f0 <col:4, line:1080:3> [in] implicitly Param="index" ParamIndex=0
|   | `-ParagraphComment 0x94c4b0 <line:1079:17, line:1080:3>
|   |   |-TextComment 0x94c460 <line:1079:17, col:73> Text="            [IN]  Type  #UINT32  Switch info array index."
|   |   `-TextComment 0x94c480 <line:1080:3> Text=" "
|   |-ParamCommandComment 0x94c4d0 <col:4, line:1081:50> [in] implicitly Param="taskSwitchInfo" ParamIndex=1
|   | `-ParagraphComment 0x94c580 <line:1080:26, line:1081:50>
|   |   |-TextComment 0x94c530 <line:1080:26, col:109> Text="   [OUT] Type  #UINT32* First 4 bytes is task id, and then is task name, name len is"
|   |   `-TextComment 0x94c550 <line:1081:3, col:50> Text="                                OS_TSK_NAME_LEN."
|   |-ParagraphComment 0x94c5d0 <line:1083:3>
|   | `-TextComment 0x94c5a0 <col:3> Text=" "
|   |-BlockCommandComment 0x94c5f0 <col:4, line:1084:3> Name="retval"
|   | `-ParagraphComment 0x94c670 <line:1083:11, line:1084:3>
|   |   |-TextComment 0x94c620 <line:1083:11, col:72> Text=" #LOS_ERRNO_TSK_PTR_NULL           0x02000201: Null parameter."
|   |   `-TextComment 0x94c640 <line:1084:3> Text=" "
|   |-BlockCommandComment 0x94c690 <col:4, line:1085:3> Name="retval"
|   | `-ParagraphComment 0x94c710 <line:1084:11, line:1085:3>
|   |   |-TextComment 0x94c6c0 <line:1084:11, col:101> Text=" #LOS_OK                           0: The task switch information is successfully obtained."
|   |   `-TextComment 0x94c6e0 <line:1085:3> Text=" "
|   |-BlockCommandComment 0x94c730 <col:4, line:1087:3> Name="par"
|   | `-ParagraphComment 0x94c900 <line:1085:8, line:1087:3>
|   |   |-TextComment 0x94c760 <line:1085:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x94c780 <line:1086:3> Text=" "
|   |   |-HTMLStartTagComment 0x94c7a0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x94c7e0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x94c820 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x94c840 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x94c870 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x94c8a0 <line:1087:3> Text=" "
|   `-BlockCommandComment 0x94c920 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x94c950 <<invalid sloc>>
|-FunctionDecl 0x8c5518 <line:1108:1, col:35> col:13 LOS_TaskIsRunning 'BOOL (void)' extern
| `-FullComment 0x94d2a0 <line:1092:3, line:1106:7>
|   |-ParagraphComment 0x94ca90 <line:1092:3>
|   | `-TextComment 0x94ca60 <col:3> Text=" "
|   |-VerbatimLineComment 0x94cab0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x94cb20 <line:1093:3>
|   | `-TextComment 0x94caf0 <col:3> Text=" "
|   |-BlockCommandComment 0x94cb40 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0x94cba0 <col:10, col:38>
|   |   `-TextComment 0x94cb70 <col:10, col:38> Text=" Obtain tasks schduling info."
|   |-ParagraphComment 0x94cbf0 <line:1095:3>
|   | `-TextComment 0x94cbc0 <col:3> Text=" "
|   |-BlockCommandComment 0x94cc10 <col:4, line:1096:48> Name="par"
|   | `-ParagraphComment 0x94cc90 <line:1095:8, line:1096:48>
|   |   |-TextComment 0x94cc40 <line:1095:8, col:20> Text=" Description:"
|   |   `-TextComment 0x94cc60 <line:1096:3, col:48> Text=" This API is used to obtain task is scheduled."
|   |-ParagraphComment 0x94cce0 <line:1098:3>
|   | `-TextComment 0x94ccb0 <col:3> Text=" "
|   |-BlockCommandComment 0x94cd00 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x94cd60 <col:14, col:19>
|   |   `-TextComment 0x94cd30 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x94cdb0 <line:1100:3>
|   | `-TextComment 0x94cd80 <col:3> Text=" "
|   |-ParamCommandComment 0x94cdd0 <col:4, col:15> [in] implicitly Param="None."
|   | `-ParagraphComment 0x94ce30 <<invalid sloc>>
|   |-ParagraphComment 0x94ce80 <line:1102:3>
|   | `-TextComment 0x94ce50 <col:3> Text=" "
|   |-BlockCommandComment 0x94cea0 <col:4, line:1103:3> Name="retval"
|   | `-ParagraphComment 0x94cf20 <line:1102:11, line:1103:3>
|   |   |-TextComment 0x94ced0 <line:1102:11, col:44> Text=" #TRUE         Tasks is scheduled."
|   |   `-TextComment 0x94cef0 <line:1103:3> Text=" "
|   |-BlockCommandComment 0x94cf40 <col:4, line:1104:3> Name="retval"
|   | `-ParagraphComment 0x94cfc0 <line:1103:11, line:1104:3>
|   |   |-TextComment 0x94cf70 <line:1103:11, col:50> Text=" #FALSE        Tasks not scheduling yet."
|   |   `-TextComment 0x94cf90 <line:1104:3> Text=" "
|   |-BlockCommandComment 0x94cfe0 <col:4, line:1106:3> Name="par"
|   | `-ParagraphComment 0x94d1b0 <line:1104:8, line:1106:3>
|   |   |-TextComment 0x94d010 <line:1104:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x94d030 <line:1105:3> Text=" "
|   |   |-HTMLStartTagComment 0x94d050 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x94d090 <col:8, col:11> Name="li"
|   |   |-TextComment 0x94d0d0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x94d0f0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x94d120 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x94d150 <line:1106:3> Text=" "
|   `-BlockCommandComment 0x94d1d0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x94d200 <<invalid sloc>>
|-FunctionDecl 0x8c5680 <line:1126:1, col:37> col:16 LOS_NewTaskIDGet 'UINT32 (void)' extern
| `-FullComment 0x94da70 <line:1111:3, line:1124:7>
|   |-ParagraphComment 0x94d340 <line:1111:3>
|   | `-TextComment 0x94d310 <col:3> Text=" "
|   |-VerbatimLineComment 0x94d360 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x94d3d0 <line:1112:3>
|   | `-TextComment 0x94d3a0 <col:3> Text=" "
|   |-BlockCommandComment 0x94d3f0 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0x94d450 <col:10, col:37>
|   |   `-TextComment 0x94d420 <col:10, col:37> Text=" Obtain current new task ID."
|   |-ParagraphComment 0x94d4a0 <line:1114:3>
|   | `-TextComment 0x94d470 <col:3> Text=" "
|   |-BlockCommandComment 0x94d4c0 <col:4, line:1115:49> Name="par"
|   | `-ParagraphComment 0x94d540 <line:1114:8, line:1115:49>
|   |   |-TextComment 0x94d4f0 <line:1114:8, col:20> Text=" Description:"
|   |   `-TextComment 0x94d510 <line:1115:3, col:49> Text=" This API is used to obtain the ID of new task."
|   |-ParagraphComment 0x94d590 <line:1117:3>
|   | `-TextComment 0x94d560 <col:3> Text=" "
|   |-BlockCommandComment 0x94d5b0 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x94d610 <col:14, col:19>
|   |   `-TextComment 0x94d5e0 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x94d660 <line:1120:3>
|   | `-TextComment 0x94d630 <col:3> Text=" "
|   |-BlockCommandComment 0x94d680 <col:4, line:1121:3> Name="retval"
|   | `-ParagraphComment 0x94d700 <line:1120:11, line:1121:3>
|   |   |-TextComment 0x94d6b0 <line:1120:11, col:68> Text=" #LOS_ERRNO_TSK_ID_INVALID    0x02000207: invalid Task ID."
|   |   `-TextComment 0x94d6d0 <line:1121:3> Text=" "
|   |-BlockCommandComment 0x94d720 <col:4, line:1122:3> Name="retval"
|   | `-ParagraphComment 0x94d7a0 <line:1121:11, line:1122:3>
|   |   |-TextComment 0x94d750 <line:1121:11, col:21> Text=" # Task ID."
|   |   `-TextComment 0x94d770 <line:1122:3> Text=" "
|   |-BlockCommandComment 0x94d7c0 <col:4, line:1124:3> Name="par"
|   | `-ParagraphComment 0x94d990 <line:1122:8, line:1124:3>
|   |   |-TextComment 0x94d7f0 <line:1122:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x94d810 <line:1123:3> Text=" "
|   |   |-HTMLStartTagComment 0x94d830 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x94d870 <col:8, col:11> Name="li"
|   |   |-TextComment 0x94d8b0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x94d8d0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x94d900 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x94d930 <line:1124:3> Text=" "
|   `-BlockCommandComment 0x94d9b0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x94d9e0 <<invalid sloc>>
|-FunctionDecl 0x8c5848 <line:1144:1, col:43> col:14 LOS_TaskNameGet 'CHAR *(UINT32)' extern
| |-ParmVarDecl 0x8c5758 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0x94e350 <line:1128:4, line:1142:8>
|   |-ParagraphComment 0x94db10 <line:1128:4>
|   | `-TextComment 0x94dae0 <col:4> Text=" "
|   |-VerbatimLineComment 0x94db30 <col:5, col:23> Text="  los_task"
|   |-ParagraphComment 0x94dba0 <line:1129:4>
|   | `-TextComment 0x94db70 <col:4> Text=" "
|   |-BlockCommandComment 0x94dbc0 <col:5, col:32> Name="brief"
|   | `-ParagraphComment 0x94dc20 <col:11, col:32>
|   |   `-TextComment 0x94dbf0 <col:11, col:32> Text=" Obtain the task name."
|   |-ParagraphComment 0x94dc70 <line:1131:4>
|   | `-TextComment 0x94dc40 <col:4> Text=" "
|   |-BlockCommandComment 0x94dc90 <col:5, line:1132:45> Name="par"
|   | `-ParagraphComment 0x94dd10 <line:1131:9, line:1132:45>
|   |   |-TextComment 0x94dcc0 <line:1131:9, col:21> Text=" Description:"
|   |   `-TextComment 0x94dce0 <line:1132:4, col:45> Text=" This API is used to obtain the task name."
|   |-ParagraphComment 0x94dd60 <line:1134:4>
|   | `-TextComment 0x94dd30 <col:4> Text=" "
|   |-BlockCommandComment 0x94dd80 <col:5, col:20> Name="attention"
|   | `-ParagraphComment 0x94dde0 <col:15, col:20>
|   |   `-TextComment 0x94ddb0 <col:15, col:20> Text=" None."
|   |-ParagraphComment 0x94de30 <line:1136:4>
|   | `-TextComment 0x94de00 <col:4> Text=" "
|   |-ParamCommandComment 0x94de50 <col:5, col:44> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x94dee0 <col:19, col:44>
|   |   `-TextComment 0x94deb0 <col:19, col:44> Text="            [IN]  Task ID."
|   |-ParagraphComment 0x94df30 <line:1138:4>
|   | `-TextComment 0x94df00 <col:4> Text=" "
|   |-BlockCommandComment 0x94df50 <col:5, line:1139:4> Name="retval"
|   | `-ParagraphComment 0x94dfd0 <line:1138:12, line:1139:4>
|   |   |-TextComment 0x94df80 <line:1138:12, col:37> Text=" #NULL: invalid Task name."
|   |   `-TextComment 0x94dfa0 <line:1139:4> Text=" "
|   |-BlockCommandComment 0x94dff0 <col:5, line:1140:4> Name="retval"
|   | `-ParagraphComment 0x94e070 <line:1139:12, line:1140:4>
|   |   |-TextComment 0x94e020 <line:1139:12, col:24> Text=" # Task name."
|   |   `-TextComment 0x94e040 <line:1140:4> Text=" "
|   |-BlockCommandComment 0x94e090 <col:5, line:1142:4> Name="par"
|   | `-ParagraphComment 0x94e260 <line:1140:9, line:1142:4>
|   |   |-TextComment 0x94e0c0 <line:1140:9, col:20> Text=" Dependency:"
|   |   |-TextComment 0x94e0e0 <line:1141:4> Text=" "
|   |   |-HTMLStartTagComment 0x94e100 <col:5, col:8> Name="ul"
|   |   |-HTMLStartTagComment 0x94e140 <col:9, col:12> Name="li"
|   |   |-TextComment 0x94e180 <col:13, col:74> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x94e1a0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x94e1d0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x94e200 <line:1142:4> Text=" "
|   `-BlockCommandComment 0x94e280 <col:5, col:8> Name="see"
|     `-ParagraphComment 0x94e2b0 <<invalid sloc>>
|-FunctionDecl 0x8c5a48 <line:1164:1, col:58> col:15 LOS_TaskJoin 'UINT32 (UINT32, UINTPTR *)' extern
| |-ParmVarDecl 0x8c5900 <col:28, col:35> col:35 taskID 'UINT32':'unsigned int'
| `-ParmVarDecl 0x8c5978 <col:43, col:52> col:52 retval 'UINTPTR *'
|-FunctionDecl 0x8c5b98 <line:1183:1, col:43> col:15 LOS_TaskDetach 'UINT32 (UINT32)' extern
| `-ParmVarDecl 0x8c5b08 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
|-RecordDecl 0x8c6628 <line:1465:9, line:1494:1> line:1465:9 struct definition
| |-FullComment 0x94e4e0 <line:1462:3, line:1463:43>
| | |-ParagraphComment 0x94e3f0 <line:1462:3>
| | | `-TextComment 0x94e3c0 <col:3> Text=" "
| | |-VerbatimLineComment 0x94e410 <col:4, col:21> Text=" los_task"
| | `-ParagraphComment 0x94e4a0 <line:1463:3, col:43>
| |   `-TextComment 0x94e470 <col:3, col:43> Text=" Define the task control block structure."
| |-FieldDecl 0x8c66e8 <main/los_compiler.h:327:23, main/los_task.h:1466:34> col:34 referenced stackPointer 'void *'
| | `-FullComment 0x94e5b0 <col:63, col:82>
| |   `-ParagraphComment 0x94e580 <col:63, col:82>
| |     `-TextComment 0x94e550 <col:63, col:82> Text=" Task stack pointer "
| |-FieldDecl 0x8c6778 <line:1467:5, col:33> col:33 taskStatus 'UINT16':'unsigned short'
| |-FieldDecl 0x8c67d8 <line:1468:5, col:33> col:33 priority 'UINT16':'unsigned short'
| |-FieldDecl 0x8c6838 <line:1469:5, col:33> col:33 timeSlice 'INT32':'int'
| |-FieldDecl 0x8c6898 <line:1470:5, col:33> col:33 waitTimes 'UINT32':'unsigned int'
| |-FieldDecl 0x8c68f8 <line:1471:5, col:33> col:33 sortList 'SortLinkList':'SortLinkList'
| |-FieldDecl 0x8c6958 <line:1472:5, col:33> col:33 startTime 'UINT64':'unsigned long long'
| |-FieldDecl 0x8c69b8 <line:1473:5, col:33> col:33 referenced stackSize 'UINT32':'unsigned int'
| | `-FullComment 0x94e680 <col:63, col:79>
| |   `-ParagraphComment 0x94e650 <col:63, col:79>
| |     `-TextComment 0x94e620 <col:63, col:79> Text=" Task stack size "
| |-FieldDecl 0x8c6a48 <line:1474:5, col:33> col:33 referenced topOfStack 'UINT32':'unsigned int'
| | `-FullComment 0x94e750 <col:63, col:78>
| |   `-ParagraphComment 0x94e720 <col:63, col:78>
| |     `-TextComment 0x94e6f0 <col:63, col:78> Text=" Task stack top "
| |-FieldDecl 0x8c6ad8 <line:1475:5, col:33> col:33 referenced taskID 'UINT32':'unsigned int'
| | `-FullComment 0x94e820 <col:63, col:71>
| |   `-ParagraphComment 0x94e7f0 <col:63, col:71>
| |     `-TextComment 0x94e7c0 <col:63, col:71> Text=" Task ID "
| |-FieldDecl 0x8c6b68 <line:1476:5, col:33> col:33 taskEntry 'TSK_ENTRY_FUNC':'void *(*)(UINT32)'
| | `-FullComment 0x94e8f0 <col:63, col:86>
| |   `-ParagraphComment 0x94e8c0 <col:63, col:86>
| |     `-TextComment 0x94e890 <col:63, col:86> Text=" Task entrance function "
| |-FieldDecl 0x8c6c00 <main/los_compiler.h:327:23, main/los_task.h:1477:34> col:34 taskSem 'void *'
| | `-FullComment 0x94e9c0 <col:63, col:83>
| |   `-ParagraphComment 0x94e990 <col:63, col:83>
| |     `-TextComment 0x94e960 <col:63, col:83> Text=" Task-held semaphore "
| |-FieldDecl 0x8c6c90 <main/los_compiler.h:327:23, main/los_task.h:1478:34> col:34 taskMux 'void *'
| | `-FullComment 0x94ea90 <col:63, col:79>
| |   `-ParagraphComment 0x94ea60 <col:63, col:79>
| |     `-TextComment 0x94ea30 <col:63, col:79> Text=" Task-held mutex "
| |-FieldDecl 0x8c6d18 <line:1479:5, col:33> col:33 arg 'UINT32':'unsigned int'
| | `-FullComment 0x94eb60 <col:63, col:73>
| |   `-ParagraphComment 0x94eb30 <col:63, col:73>
| |     `-TextComment 0x94eb00 <col:63, col:73> Text=" Parameter "
| |-FieldDecl 0x8c6da8 <line:1480:5, col:34> col:34 referenced taskName 'CHAR *'
| | `-FullComment 0x94ec30 <col:63, col:73>
| |   `-ParagraphComment 0x94ec00 <col:63, col:73>
| |     `-TextComment 0x94ebd0 <col:63, col:73> Text=" Task name "
| |-FieldDecl 0x8c6e38 <line:1481:5, col:33> col:33 pendList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| |-FieldDecl 0x8c6e98 <line:1482:5, col:33> col:33 timerList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| |-FieldDecl 0x8c6ef8 <line:1483:5, col:33> col:33 joinList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| |-FieldDecl 0x8c6f58 <line:1484:5, col:33> col:33 joinRetval 'UINTPTR':'unsigned int'
| | `-FullComment 0x94ed00 <col:63, col:190>
| |   `-ParagraphComment 0x94ecd0 <col:63, col:190>
| |     `-TextComment 0x94eca0 <col:63, col:190> Text=" Return value of the end of the task, If the task does not exit by itself, the ID of the task that killed the task is recorded. "
| |-FieldDecl 0x8c6fe8 <line:1485:5, col:33> col:33 event 'EVENT_CB_S':'struct tagEvent'
| |-FieldDecl 0x8c7048 <line:1486:5, col:33> col:33 eventMask 'UINT32':'unsigned int'
| | `-FullComment 0x94edd0 <col:63, col:74>
| |   `-ParagraphComment 0x94eda0 <col:63, col:74>
| |     `-TextComment 0x94ed70 <col:63, col:74> Text=" Event mask "
| |-FieldDecl 0x8cae30 <line:1487:5, col:33> col:33 eventMode 'UINT32':'unsigned int'
| | `-FullComment 0x94eea0 <col:63, col:74>
| |   `-ParagraphComment 0x94ee70 <col:63, col:74>
| |     `-TextComment 0x94ee40 <col:63, col:74> Text=" Event mode "
| |-FieldDecl 0x8caec0 <main/los_compiler.h:327:23, main/los_task.h:1488:34> col:34 msg 'void *'
| | `-FullComment 0x94ef70 <col:63, col:90>
| |   `-ParagraphComment 0x94ef40 <col:63, col:90>
| |     `-TextComment 0x94ef10 <col:63, col:90> Text=" Memory allocated to queues "
| `-FieldDecl 0x8caf48 <line:1489:5, col:33> col:33 errorNo 'INT32':'int'
|-TypedefDecl 0x8cb028 <line:1465:1, line:1494:3> col:3 referenced LosTaskCB 'struct LosTaskCB':'LosTaskCB'
| |-ElaboratedType 0x8cafd0 'struct LosTaskCB' sugar
| | `-RecordType 0x8c66b0 'LosTaskCB'
| |   `-Record 0x8c6628 ''
| `-FullComment 0x94f0e0 <line:1462:3, line:1463:43>
|   |-ParagraphComment 0x94f010 <line:1462:3>
|   | `-TextComment 0x94efe0 <col:3> Text=" "
|   |-VerbatimLineComment 0x94f030 <col:4, col:21> Text=" los_task"
|   `-ParagraphComment 0x94f0a0 <line:1463:3, col:43>
|     `-TextComment 0x94f070 <col:3, col:43> Text=" Define the task control block structure."
|-RecordDecl 0x8cb098 <line:1496:9, line:1499:1> line:1496:9 struct definition
| |-FieldDecl 0x8cb1c8 <line:1497:5, col:18> col:18 referenced runTask 'LosTaskCB *'
| `-FieldDecl 0x8cb228 <line:1498:5, col:18> col:18 newTask 'LosTaskCB *'
|-TypedefDecl 0x8cb2d8 <line:1496:1, line:1499:3> col:3 referenced LosTask 'struct LosTask':'LosTask'
| `-ElaboratedType 0x8cb280 'struct LosTask' sugar
|   `-RecordType 0x8cb120 'LosTask'
|     `-Record 0x8cb098 ''
|-RecordDecl 0x8cb348 <line:1501:9, line:1505:1> line:1501:9 struct definition
| |-FieldDecl 0x8cb400 <line:1502:5, col:18> col:18 sortLink 'LOS_DL_LIST *'
| |-FieldDecl 0x8cb460 <line:1503:5, col:17> col:17 cursor 'UINT16':'unsigned short'
| `-FieldDecl 0x8cb4c0 <line:1504:5, col:17> col:17 reserved 'UINT16':'unsigned short'
|-TypedefDecl 0x8cb568 <line:1501:1, line:1505:3> col:3 TaskSortLinkAttr 'struct TaskSortLinkAttr':'TaskSortLinkAttr'
| `-ElaboratedType 0x8cb510 'struct TaskSortLinkAttr' sugar
|   `-RecordType 0x8cb3d0 'TaskSortLinkAttr'
|     `-Record 0x8cb348 ''
|-RecordDecl 0x8cb600 <line:1511:9, line:1515:1> line:1511:16 struct TaskTimeSlice definition
| |-FullComment 0x94f250 <line:1508:3, line:1509:24>
| | |-ParagraphComment 0x94f180 <line:1508:3>
| | | `-TextComment 0x94f150 <col:3> Text=" "
| | |-VerbatimLineComment 0x94f1a0 <col:4, col:21> Text=" los_task"
| | `-ParagraphComment 0x94f210 <line:1509:3, col:24>
| |   `-TextComment 0x94f1e0 <col:3, col:24> Text=" Time slice structure."
| |-FieldDecl 0x8cb6b0 <line:1512:5, col:30> col:30 task 'LosTaskCB *'
| | `-FullComment 0x94f320 <col:63, col:84>
| |   `-ParagraphComment 0x94f2f0 <col:63, col:84>
| |     `-TextComment 0x94f2c0 <col:63, col:84> Text=" Current running task "
| |-FieldDecl 0x8cb738 <line:1513:5, col:29> col:29 time 'UINT16':'unsigned short'
| | `-FullComment 0x94f3f0 <col:63, col:85>
| |   `-ParagraphComment 0x94f3c0 <col:63, col:85>
| |     `-TextComment 0x94f390 <col:63, col:85> Text=" Expiration time point "
| `-FieldDecl 0x8cb7c8 <line:1514:5, col:29> col:29 tout 'UINT16':'unsigned short'
|   `-FullComment 0x94f4c0 <col:63, col:83>
|     `-ParagraphComment 0x94f490 <col:63, col:83>
|       `-TextComment 0x94f460 <col:63, col:83> Text=" Expiration duration "
|-TypedefDecl 0x8cb8a8 <line:1511:1, line:1515:3> col:3 OsTaskRobin 'struct TaskTimeSlice':'struct TaskTimeSlice'
| |-ElaboratedType 0x8cb850 'struct TaskTimeSlice' sugar
| | `-RecordType 0x8cb680 'struct TaskTimeSlice'
| |   `-Record 0x8cb600 'TaskTimeSlice'
| `-FullComment 0x94f630 <line:1508:3, line:1509:24>
|   |-ParagraphComment 0x94f560 <line:1508:3>
|   | `-TextComment 0x94f530 <col:3> Text=" "
|   |-VerbatimLineComment 0x94f580 <col:4, col:21> Text=" los_task"
|   `-ParagraphComment 0x94f5f0 <line:1509:3, col:24>
|     `-TextComment 0x94f5c0 <col:3, col:24> Text=" Time slice structure."
|-RecordDecl 0x8cb918 <line:1517:9, line:1520:1> line:1517:9 struct definition
| |-FieldDecl 0x8cba08 <line:1518:5, col:20> col:11 maxCnt 'UINT8':'unsigned char'
| | `-ConstantExpr 0x8cb9f0 <col:20> 'int'
| |   `-IntegerLiteral 0x8cb9c0 <col:20> 'int' 7
| `-FieldDecl 0x8cbaa0 <line:1519:5, col:20> col:11 isFull 'UINT8':'unsigned char'
|   `-ConstantExpr 0x8cba88 <col:20> 'int'
|     `-IntegerLiteral 0x8cba58 <col:20> 'int' 1
|-TypedefDecl 0x8cbb48 <line:1517:1, line:1520:3> col:3 referenced TaskCountInfo 'struct TaskCountInfo':'TaskCountInfo'
| `-ElaboratedType 0x8cbaf0 'struct TaskCountInfo' sugar
|   `-RecordType 0x8cb9a0 'TaskCountInfo'
|     `-Record 0x8cb918 ''
|-RecordDecl 0x8cbbe0 <line:1527:9, line:1532:1> line:1527:9 struct definition
| |-FullComment 0x94f7f0 <line:1523:3, line:1526:1>
| | |-ParagraphComment 0x94f6d0 <line:1523:3>
| | | `-TextComment 0x94f6a0 <col:3> Text=" "
| | |-VerbatimLineComment 0x94f6f0 <col:4, col:21> Text=" los_task"
| | |-ParagraphComment 0x94f760 <line:1524:3, col:37>
| | | `-TextComment 0x94f730 <col:3, col:37> Text=" Task switch information structure."
| | `-ParagraphComment 0x94f7b0 <line:1526:1>
| |   `-TextComment 0x94f780 <col:1> Text=" "
| |-FieldDecl 0x8cbc90 <line:1528:5, col:11> col:11 idx 'UINT8':'unsigned char'
| |-FieldDecl 0x8cbd10 <line:1529:5, col:19> col:19 cntInfo 'TaskCountInfo':'TaskCountInfo'
| |-FieldDecl 0x8cc060 <line:1530:5, col:41> col:12 pid 'UINT16 [10]'
| `-FieldDecl 0x8cc1c8 <line:1531:5, col:60> col:12 name 'CHAR [10][32]'
|-TypedefDecl 0x8cc278 <line:1527:1, line:1532:3> col:3 TaskSwitchInfo 'struct TaskSwitchInfo':'TaskSwitchInfo'
| |-ElaboratedType 0x8cc220 'struct TaskSwitchInfo' sugar
| | `-RecordType 0x8cbc60 'TaskSwitchInfo'
| |   `-Record 0x8cbbe0 ''
| `-FullComment 0x94f9b0 <line:1523:3, line:1526:1>
|   |-ParagraphComment 0x94f890 <line:1523:3>
|   | `-TextComment 0x94f860 <col:3> Text=" "
|   |-VerbatimLineComment 0x94f8b0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x94f920 <line:1524:3, col:37>
|   | `-TextComment 0x94f8f0 <col:3, col:37> Text=" Task switch information structure."
|   `-ParagraphComment 0x94f970 <line:1526:1>
|     `-TextComment 0x94f940 <col:1> Text=" "
|-VarDecl 0x8cc320 <line:1538:1, col:29> col:29 used g_losTask 'LosTask':'LosTask' extern
|-VarDecl 0x8cc3c8 <line:1545:1, col:29> col:29 g_losTaskLock 'UINT16':'unsigned short' extern
| `-FullComment 0x94fb70 <line:1541:3, line:1544:1>
|   |-ParagraphComment 0x94fa50 <line:1541:3>
|   | `-TextComment 0x94fa20 <col:3> Text=" "
|   |-VerbatimLineComment 0x94fa70 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x94fae0 <line:1542:3, col:18>
|   | `-TextComment 0x94fab0 <col:3, col:18> Text=" Task lock flag."
|   `-ParagraphComment 0x94fb30 <line:1544:1>
|     `-TextComment 0x94fb00 <col:1> Text=" "
|-VarDecl 0x8cc468 <line:1558:1, col:29> col:29 used g_taskMaxNum 'UINT32':'unsigned int' extern
| `-FullComment 0x94fd30 <line:1554:3, line:1557:1>
|   |-ParagraphComment 0x94fc10 <line:1554:3>
|   | `-TextComment 0x94fbe0 <col:3> Text=" "
|   |-VerbatimLineComment 0x94fc30 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x94fca0 <line:1555:3, col:27>
|   | `-TextComment 0x94fc70 <col:3, col:27> Text=" Maximum number of tasks."
|   `-ParagraphComment 0x94fcf0 <line:1557:1>
|     `-TextComment 0x94fcc0 <col:1> Text=" "
|-VarDecl 0x8cc508 <line:1565:1, col:29> col:29 g_idleTaskID 'UINT32':'unsigned int' extern
| `-FullComment 0x94fef0 <line:1561:3, line:1564:1>
|   |-ParagraphComment 0x94fdd0 <line:1561:3>
|   | `-TextComment 0x94fda0 <col:3> Text=" "
|   |-VerbatimLineComment 0x94fdf0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x94fe60 <line:1562:3, col:16>
|   | `-TextComment 0x94fe30 <col:3, col:16> Text=" Idle task ID."
|   `-ParagraphComment 0x94feb0 <line:1564:1>
|     `-TextComment 0x94fe80 <col:1> Text=" "
|-VarDecl 0x8cc5a8 <line:1572:1, col:29> col:29 g_swtmrTaskID 'UINT32':'unsigned int' extern
| `-FullComment 0x9500b0 <line:1568:3, line:1571:1>
|   |-ParagraphComment 0x94ff90 <line:1568:3>
|   | `-TextComment 0x94ff60 <col:3> Text=" "
|   |-VerbatimLineComment 0x94ffb0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x950020 <line:1569:3, col:26>
|   | `-TextComment 0x94fff0 <col:3, col:26> Text=" Software timer task ID."
|   `-ParagraphComment 0x950070 <line:1571:1>
|     `-TextComment 0x950040 <col:1> Text=" "
|-VarDecl 0x8cc648 <line:1579:1, col:30> col:30 used g_taskCBArray 'LosTaskCB *' extern
| `-FullComment 0x950270 <line:1575:3, line:1578:1>
|   |-ParagraphComment 0x950150 <line:1575:3>
|   | `-TextComment 0x950120 <col:3> Text=" "
|   |-VerbatimLineComment 0x950170 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x9501e0 <line:1576:3, col:30>
|   | `-TextComment 0x9501b0 <col:3, col:30> Text=" Starting address of a task."
|   `-ParagraphComment 0x950230 <line:1578:1>
|     `-TextComment 0x950200 <col:1> Text=" "
|-VarDecl 0x8cc6e8 <line:1586:1, col:29> col:29 g_losFreeTask 'LOS_DL_LIST':'struct LOS_DL_LIST' extern
| `-FullComment 0x950430 <line:1582:3, line:1585:1>
|   |-ParagraphComment 0x950310 <line:1582:3>
|   | `-TextComment 0x9502e0 <col:3> Text=" "
|   |-VerbatimLineComment 0x950330 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x9503a0 <line:1583:3, col:25>
|   | `-TextComment 0x950370 <col:3, col:25> Text=" Free task linked list."
|   `-ParagraphComment 0x9503f0 <line:1585:1>
|     `-TextComment 0x9503c0 <col:1> Text=" "
|-VarDecl 0x8cc788 <line:1593:1, col:29> col:29 g_taskRecycleList 'LOS_DL_LIST':'struct LOS_DL_LIST' extern
| `-FullComment 0x950610 <line:1589:3, line:1592:1>
|   |-ParagraphComment 0x9504f0 <line:1589:3>
|   | `-TextComment 0x9504c0 <col:3> Text=" "
|   |-VerbatimLineComment 0x950510 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0x950580 <line:1590:3, col:73>
|   | `-TextComment 0x950550 <col:3, col:73> Text=" Circular linked list that stores tasks that are deleted automatically."
|   `-ParagraphComment 0x9505d0 <line:1592:1>
|     `-TextComment 0x9505a0 <col:1> Text=" "
|-FunctionDecl 0x8cc8b0 <line:1614:1, col:30> col:15 OsTaskInit 'UINT32 (void)' extern
| `-FullComment 0x950f80 <line:1596:3, line:1612:7>
|   |-ParagraphComment 0x9506b0 <line:1596:3>
|   | `-TextComment 0x950680 <col:3> Text=" "
|   |-VerbatimLineComment 0x9506d0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x950740 <line:1597:3>
|   | `-TextComment 0x950710 <col:3> Text=" "
|   |-BlockCommandComment 0x950760 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0x9507c0 <col:10, col:32>
|   |   `-TextComment 0x950790 <col:10, col:32> Text=" Initialization a task."
|   |-ParagraphComment 0x950810 <line:1599:3>
|   | `-TextComment 0x9507e0 <col:3> Text=" "
|   |-BlockCommandComment 0x950830 <col:4, line:1600:45> Name="par"
|   | `-ParagraphComment 0x9508b0 <line:1599:8, line:1600:45>
|   |   |-TextComment 0x950860 <line:1599:8, col:20> Text=" Description:"
|   |   `-TextComment 0x950880 <line:1600:3, col:45> Text=" This API is used to initialization a task."
|   |-ParagraphComment 0x950900 <line:1602:3>
|   | `-TextComment 0x9508d0 <col:3> Text=" "
|   |-BlockCommandComment 0x950920 <col:4, line:1605:8> Name="attention"
|   | `-ParagraphComment 0x950af0 <line:1603:3, line:1605:8>
|   |   |-TextComment 0x950950 <line:1603:3> Text=" "
|   |   |-HTMLStartTagComment 0x950970 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9509b0 <line:1604:3> Text=" "
|   |   |-HTMLStartTagComment 0x9509d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x950a10 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x950a30 <col:13, col:17> Name="li"
|   |   |-TextComment 0x950a60 <line:1605:3> Text=" "
|   |   `-HTMLEndTagComment 0x950a80 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x950b40 <line:1607:3>
|   | `-TextComment 0x950b10 <col:3> Text=" "
|   |-ParamCommandComment 0x950b60 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x950bc0 <<invalid sloc>>
|   |-ParagraphComment 0x950c10 <line:1609:3>
|   | `-TextComment 0x950be0 <col:3> Text=" "
|   |-BlockCommandComment 0x950c30 <col:4, line:1610:3> Name="retval"
|   | `-ParagraphComment 0x950cb0 <line:1609:11, line:1610:3>
|   |   |-TextComment 0x950c60 <line:1609:11, col:44> Text="  UINT32    Initialization result."
|   |   `-TextComment 0x950c80 <line:1610:3> Text=" "
|   |-BlockCommandComment 0x950cd0 <col:4, line:1612:3> Name="par"
|   | `-ParagraphComment 0x950ea0 <line:1610:8, line:1612:3>
|   |   |-TextComment 0x950d00 <line:1610:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x950d20 <line:1611:3> Text=" "
|   |   |-HTMLStartTagComment 0x950d40 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x950d80 <col:8, col:11> Name="li"
|   |   |-TextComment 0x950dc0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x950de0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x950e10 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x950e40 <line:1612:3> Text=" "
|   `-BlockCommandComment 0x950ec0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x950ef0 <<invalid sloc>>
|-FunctionDecl 0x8cca10 <line:1635:1, col:36> col:15 OsIdleTaskCreate 'UINT32 (void)' extern
| `-FullComment 0x9518f0 <line:1617:3, line:1633:7>
|   |-ParagraphComment 0x951020 <line:1617:3>
|   | `-TextComment 0x950ff0 <col:3> Text=" "
|   |-VerbatimLineComment 0x951040 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x9510b0 <line:1618:3>
|   | `-TextComment 0x951080 <col:3> Text=" "
|   |-BlockCommandComment 0x9510d0 <col:4, col:27> Name="brief"
|   | `-ParagraphComment 0x951130 <col:10, col:27>
|   |   `-TextComment 0x951100 <col:10, col:27> Text=" Create idle task."
|   |-ParagraphComment 0x951180 <line:1620:3>
|   | `-TextComment 0x951150 <col:3> Text=" "
|   |-BlockCommandComment 0x9511a0 <col:4, line:1621:40> Name="par"
|   | `-ParagraphComment 0x951220 <line:1620:8, line:1621:40>
|   |   |-TextComment 0x9511d0 <line:1620:8, col:20> Text=" Description:"
|   |   `-TextComment 0x9511f0 <line:1621:3, col:40> Text=" This API is used to create idle task."
|   |-ParagraphComment 0x951270 <line:1623:3>
|   | `-TextComment 0x951240 <col:3> Text=" "
|   |-BlockCommandComment 0x951290 <col:4, line:1626:8> Name="attention"
|   | `-ParagraphComment 0x951460 <line:1624:3, line:1626:8>
|   |   |-TextComment 0x9512c0 <line:1624:3> Text=" "
|   |   |-HTMLStartTagComment 0x9512e0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x951320 <line:1625:3> Text=" "
|   |   |-HTMLStartTagComment 0x951340 <col:4, col:7> Name="li"
|   |   |-TextComment 0x951380 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x9513a0 <col:13, col:17> Name="li"
|   |   |-TextComment 0x9513d0 <line:1626:3> Text=" "
|   |   `-HTMLEndTagComment 0x9513f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x9514b0 <line:1628:3>
|   | `-TextComment 0x951480 <col:3> Text=" "
|   |-ParamCommandComment 0x9514d0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x951530 <<invalid sloc>>
|   |-ParagraphComment 0x951580 <line:1630:3>
|   | `-TextComment 0x951550 <col:3> Text=" "
|   |-BlockCommandComment 0x9515a0 <col:4, line:1631:3> Name="retval"
|   | `-ParagraphComment 0x951620 <line:1630:11, line:1631:3>
|   |   |-TextComment 0x9515d0 <line:1630:11, col:35> Text="  UINT32   Create result."
|   |   `-TextComment 0x9515f0 <line:1631:3> Text=" "
|   |-BlockCommandComment 0x951640 <col:4, line:1633:3> Name="par"
|   | `-ParagraphComment 0x951810 <line:1631:8, line:1633:3>
|   |   |-TextComment 0x951670 <line:1631:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x951690 <line:1632:3> Text=" "
|   |   |-HTMLStartTagComment 0x9516b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x9516f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x951730 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x951750 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x951780 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x9517b0 <line:1633:3> Text=" "
|   `-BlockCommandComment 0x951830 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x951860 <<invalid sloc>>
|-FunctionDecl 0x8ccb70 <line:1656:1, col:35> col:13 OsTaskSwitchCheck 'void (void)' extern
| `-FullComment 0x952260 <line:1638:3, line:1654:7>
|   |-ParagraphComment 0x951990 <line:1638:3>
|   | `-TextComment 0x951960 <col:3> Text=" "
|   |-VerbatimLineComment 0x9519b0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x951a20 <line:1639:3>
|   | `-TextComment 0x9519f0 <col:3> Text=" "
|   |-BlockCommandComment 0x951a40 <col:4, col:28> Name="brief"
|   | `-ParagraphComment 0x951aa0 <col:10, col:28>
|   |   `-TextComment 0x951a70 <col:10, col:28> Text=" Check task switch."
|   |-ParagraphComment 0x951af0 <line:1641:3>
|   | `-TextComment 0x951ac0 <col:3> Text=" "
|   |-BlockCommandComment 0x951b10 <col:4, line:1642:41> Name="par"
|   | `-ParagraphComment 0x951b90 <line:1641:8, line:1642:41>
|   |   |-TextComment 0x951b40 <line:1641:8, col:20> Text=" Description:"
|   |   `-TextComment 0x951b60 <line:1642:3, col:41> Text=" This API is used to check task switch."
|   |-ParagraphComment 0x951be0 <line:1644:3>
|   | `-TextComment 0x951bb0 <col:3> Text=" "
|   |-BlockCommandComment 0x951c00 <col:4, line:1647:8> Name="attention"
|   | `-ParagraphComment 0x951dd0 <line:1645:3, line:1647:8>
|   |   |-TextComment 0x951c30 <line:1645:3> Text=" "
|   |   |-HTMLStartTagComment 0x951c50 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x951c90 <line:1646:3> Text=" "
|   |   |-HTMLStartTagComment 0x951cb0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x951cf0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x951d10 <col:13, col:17> Name="li"
|   |   |-TextComment 0x951d40 <line:1647:3> Text=" "
|   |   `-HTMLEndTagComment 0x951d60 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x951e20 <line:1649:3>
|   | `-TextComment 0x951df0 <col:3> Text=" "
|   |-ParamCommandComment 0x951e40 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x951ea0 <<invalid sloc>>
|   |-ParagraphComment 0x951ef0 <line:1651:3>
|   | `-TextComment 0x951ec0 <col:3> Text=" "
|   |-BlockCommandComment 0x951f10 <col:4, line:1652:3> Name="retval"
|   | `-ParagraphComment 0x951f90 <line:1651:11, line:1652:3>
|   |   |-TextComment 0x951f40 <line:1651:11, col:17> Text="  None."
|   |   `-TextComment 0x951f60 <line:1652:3> Text=" "
|   |-BlockCommandComment 0x951fb0 <col:4, line:1654:3> Name="par"
|   | `-ParagraphComment 0x952180 <line:1652:8, line:1654:3>
|   |   |-TextComment 0x951fe0 <line:1652:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x952000 <line:1653:3> Text=" "
|   |   |-HTMLStartTagComment 0x952020 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x952060 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9520a0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9520c0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x9520f0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x952120 <line:1654:3> Text=" "
|   `-BlockCommandComment 0x9521a0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x9521d0 <<invalid sloc>>
|-FunctionDecl 0x8cccd0 <line:1677:1, col:31> col:13 OsTaskMonInit 'void (void)' extern
| `-FullComment 0x952be0 <line:1659:3, line:1675:7>
|   |-ParagraphComment 0x952300 <line:1659:3>
|   | `-TextComment 0x9522d0 <col:3> Text=" "
|   |-VerbatimLineComment 0x952320 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x952390 <line:1660:3>
|   | `-TextComment 0x952360 <col:3> Text=" "
|   |-BlockCommandComment 0x9523b0 <col:4, col:22> Name="brief"
|   | `-ParagraphComment 0x952410 <col:10, col:22>
|   |   `-TextComment 0x9523e0 <col:10, col:22> Text=" TaskMonInit."
|   |-ParagraphComment 0x952460 <line:1662:3>
|   | `-TextComment 0x952430 <col:3> Text=" "
|   |-BlockCommandComment 0x952490 <col:4, line:1663:35> Name="par"
|   | `-ParagraphComment 0x952510 <line:1662:8, line:1663:35>
|   |   |-TextComment 0x9524c0 <line:1662:8, col:20> Text=" Description:"
|   |   `-TextComment 0x9524e0 <line:1663:3, col:35> Text=" This API is used to taskMonInit."
|   |-ParagraphComment 0x952560 <line:1665:3>
|   | `-TextComment 0x952530 <col:3> Text=" "
|   |-BlockCommandComment 0x952580 <col:4, line:1668:8> Name="attention"
|   | `-ParagraphComment 0x952750 <line:1666:3, line:1668:8>
|   |   |-TextComment 0x9525b0 <line:1666:3> Text=" "
|   |   |-HTMLStartTagComment 0x9525d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x952610 <line:1667:3> Text=" "
|   |   |-HTMLStartTagComment 0x952630 <col:4, col:7> Name="li"
|   |   |-TextComment 0x952670 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x952690 <col:13, col:17> Name="li"
|   |   |-TextComment 0x9526c0 <line:1668:3> Text=" "
|   |   `-HTMLEndTagComment 0x9526e0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x9527a0 <line:1670:3>
|   | `-TextComment 0x952770 <col:3> Text=" "
|   |-ParamCommandComment 0x9527c0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x952820 <<invalid sloc>>
|   |-ParagraphComment 0x952870 <line:1672:3>
|   | `-TextComment 0x952840 <col:3> Text=" "
|   |-BlockCommandComment 0x952890 <col:4, line:1673:3> Name="retval"
|   | `-ParagraphComment 0x952910 <line:1672:11, line:1673:3>
|   |   |-TextComment 0x9528c0 <line:1672:11, col:17> Text="  None."
|   |   `-TextComment 0x9528e0 <line:1673:3> Text=" "
|   |-BlockCommandComment 0x952930 <col:4, line:1675:3> Name="par"
|   | `-ParagraphComment 0x952b00 <line:1673:8, line:1675:3>
|   |   |-TextComment 0x952960 <line:1673:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x952980 <line:1674:3> Text=" "
|   |   |-HTMLStartTagComment 0x9529a0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x9529e0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x952a20 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x952a40 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x952a70 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x952aa0 <line:1675:3> Text=" "
|   `-BlockCommandComment 0x952b20 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x952b50 <<invalid sloc>>
|-FunctionDecl 0x8cce38 <line:1698:1, col:38> col:13 OsTaskEntry 'void (UINT32)' extern
| |-ParmVarDecl 0x8ccda8 <col:25, col:32> col:32 taskID 'UINT32':'unsigned int'
| `-FullComment 0x953580 <line:1680:3, line:1696:7>
|   |-ParagraphComment 0x952c80 <line:1680:3>
|   | `-TextComment 0x952c50 <col:3> Text=" "
|   |-VerbatimLineComment 0x952ca0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x952d10 <line:1681:3>
|   | `-TextComment 0x952ce0 <col:3> Text=" "
|   |-BlockCommandComment 0x952d30 <col:4, col:21> Name="brief"
|   | `-ParagraphComment 0x952d90 <col:10, col:21>
|   |   `-TextComment 0x952d60 <col:10, col:21> Text=" Task entry."
|   |-ParagraphComment 0x952de0 <line:1683:3>
|   | `-TextComment 0x952db0 <col:3> Text=" "
|   |-BlockCommandComment 0x952e00 <col:4, line:1684:34> Name="par"
|   | `-ParagraphComment 0x952e80 <line:1683:8, line:1684:34>
|   |   |-TextComment 0x952e30 <line:1683:8, col:20> Text=" Description:"
|   |   `-TextComment 0x952e50 <line:1684:3, col:34> Text=" This API is used to task entry."
|   |-ParagraphComment 0x952ed0 <line:1686:3>
|   | `-TextComment 0x952ea0 <col:3> Text=" "
|   |-BlockCommandComment 0x952ef0 <col:4, line:1689:8> Name="attention"
|   | `-ParagraphComment 0x9530c0 <line:1687:3, line:1689:8>
|   |   |-TextComment 0x952f20 <line:1687:3> Text=" "
|   |   |-HTMLStartTagComment 0x952f40 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x952f80 <line:1688:3> Text=" "
|   |   |-HTMLStartTagComment 0x952fa0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x952fe0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x953000 <col:13, col:17> Name="li"
|   |   |-TextComment 0x953030 <line:1689:3> Text=" "
|   |   `-HTMLEndTagComment 0x953050 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x953110 <line:1691:3>
|   | `-TextComment 0x9530e0 <col:3> Text=" "
|   |-ParamCommandComment 0x953130 <col:4, col:47> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x9531c0 <col:18, col:47>
|   |   `-TextComment 0x953190 <col:18, col:47> Text="  [IN] Type #UINT32   task id."
|   |-ParagraphComment 0x953210 <line:1693:3>
|   | `-TextComment 0x9531e0 <col:3> Text=" "
|   |-BlockCommandComment 0x953230 <col:4, line:1694:3> Name="retval"
|   | `-ParagraphComment 0x9532b0 <line:1693:11, line:1694:3>
|   |   |-TextComment 0x953260 <line:1693:11, col:17> Text="  None."
|   |   `-TextComment 0x953280 <line:1694:3> Text=" "
|   |-BlockCommandComment 0x9532d0 <col:4, line:1696:3> Name="par"
|   | `-ParagraphComment 0x9534a0 <line:1694:8, line:1696:3>
|   |   |-TextComment 0x953300 <line:1694:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x953320 <line:1695:3> Text=" "
|   |   |-HTMLStartTagComment 0x953340 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x953380 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9533c0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9533e0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x953410 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x953440 <line:1696:3> Text=" "
|   `-BlockCommandComment 0x9534c0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x9534f0 <<invalid sloc>>
|-FunctionDecl 0x8ce3a0 <line:1719:1, col:47> col:15 OsGetTaskWaterLine 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x8ccf18 <col:34, col:41> col:41 taskID 'UINT32':'unsigned int'
| `-FullComment 0x953f50 <line:1701:3, line:1717:13>
|   |-ParagraphComment 0x953620 <line:1701:3>
|   | `-TextComment 0x9535f0 <col:3> Text=" "
|   |-VerbatimLineComment 0x953640 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x9536b0 <line:1702:3>
|   | `-TextComment 0x953680 <col:3> Text=" "
|   |-BlockCommandComment 0x9536d0 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0x953730 <col:10, col:34>
|   |   `-TextComment 0x953700 <col:10, col:34> Text=" Get the task water line."
|   |-ParagraphComment 0x953780 <line:1704:3>
|   | `-TextComment 0x953750 <col:3> Text=" "
|   |-BlockCommandComment 0x9537a0 <col:4, line:1705:47> Name="par"
|   | `-ParagraphComment 0x953820 <line:1704:8, line:1705:47>
|   |   |-TextComment 0x9537d0 <line:1704:8, col:20> Text=" Description:"
|   |   `-TextComment 0x9537f0 <line:1705:3, col:47> Text=" This API is used to get the task water line."
|   |-ParagraphComment 0x953870 <line:1707:3>
|   | `-TextComment 0x953840 <col:3> Text=" "
|   |-BlockCommandComment 0x953890 <col:4, line:1710:8> Name="attention"
|   | `-ParagraphComment 0x953a60 <line:1708:3, line:1710:8>
|   |   |-TextComment 0x9538c0 <line:1708:3> Text=" "
|   |   |-HTMLStartTagComment 0x9538e0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x953920 <line:1709:3> Text=" "
|   |   |-HTMLStartTagComment 0x953940 <col:4, col:7> Name="li"
|   |   |-TextComment 0x953980 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x9539a0 <col:13, col:17> Name="li"
|   |   |-TextComment 0x9539d0 <line:1710:3> Text=" "
|   |   `-HTMLEndTagComment 0x9539f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x953ab0 <line:1712:3>
|   | `-TextComment 0x953a80 <col:3> Text=" "
|   |-ParamCommandComment 0x953ad0 <col:4, col:44> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0x953b60 <col:18, col:44>
|   |   `-TextComment 0x953b30 <col:18, col:44> Text=" [IN] Type #UINT32 task id."
|   |-ParagraphComment 0x953bb0 <line:1714:3>
|   | `-TextComment 0x953b80 <col:3> Text=" "
|   |-BlockCommandComment 0x953bd0 <col:4, line:1715:3> Name="retval"
|   | `-ParagraphComment 0x953c50 <line:1714:11, line:1715:3>
|   |   |-TextComment 0x953c00 <line:1714:11, col:36> Text="  UINT32  Task water line."
|   |   `-TextComment 0x953c20 <line:1715:3> Text=" "
|   |-BlockCommandComment 0x953c70 <col:4, line:1717:3> Name="par"
|   | `-ParagraphComment 0x953e40 <line:1715:8, line:1717:3>
|   |   |-TextComment 0x953ca0 <line:1715:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x953cc0 <line:1716:3> Text=" "
|   |   |-HTMLStartTagComment 0x953ce0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x953d20 <col:8, col:11> Name="li"
|   |   |-TextComment 0x953d60 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x953d80 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x953db0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x953de0 <line:1717:3> Text=" "
|   `-BlockCommandComment 0x953e60 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x953ec0 <col:8, col:13>
|       `-TextComment 0x953e90 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8ce578 <line:1740:1, col:51> col:15 OsConvertTskStatus 'UINT8 *(UINT16)' extern
| |-ParmVarDecl 0x8ce488 <col:34, col:41> col:41 taskStatus 'UINT16':'unsigned short'
| `-FullComment 0x954940 <line:1722:3, line:1738:13>
|   |-ParagraphComment 0x953ff0 <line:1722:3>
|   | `-TextComment 0x953fc0 <col:3> Text=" "
|   |-VerbatimLineComment 0x954010 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x954080 <line:1723:3>
|   | `-TextComment 0x954050 <col:3> Text=" "
|   |-BlockCommandComment 0x9540a0 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0x954100 <col:10, col:40>
|   |   `-TextComment 0x9540d0 <col:10, col:40> Text=" Convert task status to string."
|   |-ParagraphComment 0x954150 <line:1725:3>
|   | `-TextComment 0x954120 <col:3> Text=" "
|   |-BlockCommandComment 0x954170 <col:4, line:1726:53> Name="par"
|   | `-ParagraphComment 0x9541f0 <line:1725:8, line:1726:53>
|   |   |-TextComment 0x9541a0 <line:1725:8, col:20> Text=" Description:"
|   |   `-TextComment 0x9541c0 <line:1726:3, col:53> Text=" This API is used to convert task status to string."
|   |-ParagraphComment 0x954240 <line:1728:3>
|   | `-TextComment 0x954210 <col:3> Text=" "
|   |-BlockCommandComment 0x954260 <col:4, line:1731:8> Name="attention"
|   | `-ParagraphComment 0x954430 <line:1729:3, line:1731:8>
|   |   |-TextComment 0x954290 <line:1729:3> Text=" "
|   |   |-HTMLStartTagComment 0x9542b0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9542f0 <line:1730:3> Text=" "
|   |   |-HTMLStartTagComment 0x954310 <col:4, col:7> Name="li"
|   |   |-TextComment 0x954350 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x954370 <col:13, col:17> Name="li"
|   |   |-TextComment 0x9543a0 <line:1731:3> Text=" "
|   |   `-HTMLEndTagComment 0x9543c0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x9544a0 <line:1733:3>
|   | `-TextComment 0x954450 <col:3> Text=" "
|   |-ParamCommandComment 0x9544c0 <col:4, col:52> [in] implicitly Param="taskStatus" ParamIndex=0
|   | `-ParagraphComment 0x954550 <col:22, col:52>
|   |   `-TextComment 0x954520 <col:22, col:52> Text=" [IN] Type #UINT16 task status."
|   |-ParagraphComment 0x9545a0 <line:1735:3>
|   | `-TextComment 0x954570 <col:3> Text=" "
|   |-BlockCommandComment 0x9545c0 <col:4, line:1736:3> Name="retval"
|   | `-ParagraphComment 0x954640 <line:1735:11, line:1736:3>
|   |   |-TextComment 0x9545f0 <line:1735:11, col:28> Text="  UINT8 *  String."
|   |   `-TextComment 0x954610 <line:1736:3> Text=" "
|   |-BlockCommandComment 0x954660 <col:4, line:1738:3> Name="par"
|   | `-ParagraphComment 0x954830 <line:1736:8, line:1738:3>
|   |   |-TextComment 0x954690 <line:1736:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9546b0 <line:1737:3> Text=" "
|   |   |-HTMLStartTagComment 0x9546d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x954710 <col:8, col:11> Name="li"
|   |   |-TextComment 0x954750 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x954770 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x9547a0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x9547d0 <line:1738:3> Text=" "
|   `-BlockCommandComment 0x954850 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x9548b0 <col:8, col:13>
|       `-TextComment 0x954880 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8ce6e0 <line:1761:1, col:35> col:15 used OsGetAllTskInfo 'UINT32 (void)' extern
| `-FullComment 0x9552e0 <line:1743:3, line:1759:13>
|   |-ParagraphComment 0x9549e0 <line:1743:3>
|   | `-TextComment 0x9549b0 <col:3> Text=" "
|   |-VerbatimLineComment 0x954a00 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0x954a70 <line:1744:3>
|   | `-TextComment 0x954a40 <col:3> Text=" "
|   |-BlockCommandComment 0x954a90 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0x954af0 <col:10, col:35>
|   |   `-TextComment 0x954ac0 <col:10, col:35> Text=" Get all task information."
|   |-ParagraphComment 0x954b40 <line:1746:3>
|   | `-TextComment 0x954b10 <col:3> Text=" "
|   |-BlockCommandComment 0x954b60 <col:4, line:1747:48> Name="par"
|   | `-ParagraphComment 0x954be0 <line:1746:8, line:1747:48>
|   |   |-TextComment 0x954b90 <line:1746:8, col:20> Text=" Description:"
|   |   `-TextComment 0x954bb0 <line:1747:3, col:48> Text=" This API is used to get all task information."
|   |-ParagraphComment 0x954c30 <line:1749:3>
|   | `-TextComment 0x954c00 <col:3> Text=" "
|   |-BlockCommandComment 0x954c50 <col:4, line:1752:8> Name="attention"
|   | `-ParagraphComment 0x954e20 <line:1750:3, line:1752:8>
|   |   |-TextComment 0x954c80 <line:1750:3> Text=" "
|   |   |-HTMLStartTagComment 0x954ca0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x954ce0 <line:1751:3> Text=" "
|   |   |-HTMLStartTagComment 0x954d00 <col:4, col:7> Name="li"
|   |   |-TextComment 0x954d40 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x954d60 <col:13, col:17> Name="li"
|   |   |-TextComment 0x954d90 <line:1752:3> Text=" "
|   |   `-HTMLEndTagComment 0x954db0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x954e70 <line:1754:3>
|   | `-TextComment 0x954e40 <col:3> Text=" "
|   |-ParamCommandComment 0x954e90 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x954ef0 <<invalid sloc>>
|   |-ParagraphComment 0x954f40 <line:1756:3>
|   | `-TextComment 0x954f10 <col:3> Text=" "
|   |-BlockCommandComment 0x954f60 <col:4, line:1757:3> Name="retval"
|   | `-ParagraphComment 0x954fe0 <line:1756:11, line:1757:3>
|   |   |-TextComment 0x954f90 <line:1756:11, col:41> Text="  UINT32  All task information."
|   |   `-TextComment 0x954fb0 <line:1757:3> Text=" "
|   |-BlockCommandComment 0x955000 <col:4, line:1759:3> Name="par"
|   | `-ParagraphComment 0x9551d0 <line:1757:8, line:1759:3>
|   |   |-TextComment 0x955030 <line:1757:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x955050 <line:1758:3> Text=" "
|   |   |-HTMLStartTagComment 0x955070 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x9550b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9550f0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x955110 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x955140 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x955170 <line:1759:3> Text=" "
|   `-BlockCommandComment 0x9551f0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x955250 <col:8, col:13>
|       `-TextComment 0x955220 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8ce9c0 <line:1763:1, col:83> col:14 OsTskUserStackInit 'void *(void *, void *, UINT32)' extern
| |-ParmVarDecl 0x8ce798 <main/los_compiler.h:327:23, main/los_task.h:1763:39> col:39 stackPtr 'void *'
| |-ParmVarDecl 0x8ce818 <main/los_compiler.h:327:23, main/los_task.h:1763:55> col:55 userSP 'void *'
| `-ParmVarDecl 0x8ce890 <col:63, col:70> col:70 userStackSize 'UINT32':'unsigned int'
|-FunctionDecl 0x8cebe8 <line:1765:1, col:53> col:15 OsPmEnterHandlerSet 'UINT32 (void (*)(void))' extern
| `-ParmVarDecl 0x8ceb20 <main/los_compiler.h:327:23, main/los_task.h:1765:52> col:42 func 'void (*)(void)'
|-FunctionDecl 0x8ced88 <main/los_compiler.h:158:22, main/los_task.h:1770:1> line:1767:26 OsCurrTaskGet 'LosTaskCB *(void)' static inline
| `-CompoundStmt 0x8ceea0 <line:1768:1, line:1770:1>
|   `-ReturnStmt 0x8cee90 <line:1769:5, col:22>
|     `-ImplicitCastExpr 0x8cee78 <col:12, col:22> 'LosTaskCB *' <LValueToRValue>
|       `-MemberExpr 0x8cee48 <col:12, col:22> 'LosTaskCB *' lvalue .runTask 0x8cb1c8
|         `-DeclRefExpr 0x8cee28 <col:12> 'LosTask':'LosTask' lvalue Var 0x8cc320 'g_losTask' 'LosTask':'LosTask'
|-FunctionDecl 0x8cef50 <line:1772:1, col:36> col:13 LOS_TaskResRecycle 'void (void)' extern
|-FunctionDecl 0x8d1898 <main/los_mux.h:207:1, col:46> col:15 LOS_MuxCreate 'UINT32 (UINT32 *)' extern
| |-ParmVarDecl 0x8cf2c8 <col:29, col:37> col:37 muxHandle 'UINT32 *'
| `-FullComment 0x955e20 <line:186:3, line:205:21>
|   |-ParagraphComment 0x955380 <line:186:3>
|   | `-TextComment 0x955350 <col:3> Text=" "
|   |-VerbatimLineComment 0x9553a0 <col:4, col:20> Text=" los_mux"
|   |-ParagraphComment 0x955410 <line:187:3>
|   | `-TextComment 0x9553e0 <col:3> Text=" "
|   |-BlockCommandComment 0x955430 <col:4, col:25> Name="brief"
|   | `-ParagraphComment 0x955490 <col:10, col:25>
|   |   `-TextComment 0x955460 <col:10, col:25> Text=" Create a mutex."
|   |-ParagraphComment 0x9554e0 <line:189:3>
|   | `-TextComment 0x9554b0 <col:3> Text=" "
|   |-BlockCommandComment 0x955500 <col:4, line:192:3> Name="par"
|   | `-ParagraphComment 0x9555d0 <line:189:8, line:192:3>
|   |   |-TextComment 0x955530 <line:189:8, col:20> Text=" Description:"
|   |   |-TextComment 0x955550 <line:190:3, col:118> Text=" This API is used to create a mutex. A mutex handle is assigned to muxHandle when the mutex is created successfully."
|   |   |-TextComment 0x955570 <line:191:3, col:78> Text=" Return LOS_OK on creating successful, return specific error code otherwise."
|   |   `-TextComment 0x955590 <line:192:3> Text=" "
|   |-BlockCommandComment 0x9555f0 <col:4, line:195:8> Name="attention"
|   | `-ParagraphComment 0x9557c0 <line:193:3, line:195:8>
|   |   |-TextComment 0x955620 <line:193:3> Text=" "
|   |   |-HTMLStartTagComment 0x955640 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x955680 <line:194:3> Text=" "
|   |   |-HTMLStartTagComment 0x9556a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9556e0 <col:8, col:114> Text="The total number of mutexes is pre-configured. If there are no available mutexes, the mutex creation fails."
|   |   |-HTMLEndTagComment 0x955700 <col:115, col:119> Name="li"
|   |   |-TextComment 0x955730 <line:195:3> Text=" "
|   |   `-HTMLEndTagComment 0x955750 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x955810 <line:197:3>
|   | `-TextComment 0x9557e0 <col:3> Text=" "
|   |-ParamCommandComment 0x955830 <col:4, line:198:38> [in] implicitly Param="muxHandle" ParamIndex=0
|   | `-ParagraphComment 0x9558e0 <line:197:20, line:198:38>
|   |   |-TextComment 0x955890 <line:197:20, col:110> Text="   [OUT] Handle pointer of the successfully created mutex. The value of handle should be in"
|   |   `-TextComment 0x9558b0 <line:198:3, col:38> Text=" [0, LOSCFG_BASE_IPC_MUX_LIMIT - 1]."
|   |-ParagraphComment 0x955930 <line:200:3>
|   | `-TextComment 0x955900 <col:3> Text=" "
|   |-BlockCommandComment 0x955950 <col:4, line:201:3> Name="retval"
|   | `-ParagraphComment 0x9559d0 <line:200:11, line:201:3>
|   |   |-TextComment 0x955980 <line:200:11, col:75> Text=" #LOS_ERRNO_MUX_PTR_NULL           The muxHandle pointer is NULL."
|   |   `-TextComment 0x9559a0 <line:201:3> Text=" "
|   |-BlockCommandComment 0x9559f0 <col:4, line:202:3> Name="retval"
|   | `-ParagraphComment 0x955a70 <line:201:11, line:202:3>
|   |   |-TextComment 0x955a20 <line:201:11, col:64> Text=" #LOS_ERRNO_MUX_ALL_BUSY           No available mutex."
|   |   `-TextComment 0x955a40 <line:202:3> Text=" "
|   |-BlockCommandComment 0x955a90 <col:4, line:203:3> Name="retval"
|   | `-ParagraphComment 0x955b10 <line:202:11, line:203:3>
|   |   |-TextComment 0x955ac0 <line:202:11, col:79> Text=" #LOS_OK                           The mutex is successfully created."
|   |   `-TextComment 0x955ae0 <line:203:3> Text=" "
|   |-BlockCommandComment 0x955b30 <col:4, line:205:3> Name="par"
|   | `-ParagraphComment 0x955d00 <line:203:8, line:205:3>
|   |   |-TextComment 0x955b60 <line:203:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x955b80 <line:204:3> Text=" "
|   |   |-HTMLStartTagComment 0x955ba0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x955be0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x955c20 <col:12, col:72> Text="los_mux.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x955c40 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x955c70 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x955ca0 <line:205:3> Text=" "
|   `-BlockCommandComment 0x955d20 <col:4, col:21> Name="see"
|     `-ParagraphComment 0x955d80 <col:8, col:21>
|       `-TextComment 0x955d50 <col:8, col:21> Text=" LOS_MuxDelete"
|-FunctionDecl 0x8d1a08 <line:232:1, col:45> col:15 LOS_MuxDelete 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x8d1978 <col:29, col:36> col:36 muxHandle 'UINT32':'unsigned int'
| `-FullComment 0x957a50 <line:210:3, line:230:21>
|   |-ParagraphComment 0x955ec0 <line:210:3>
|   | `-TextComment 0x955e90 <col:3> Text=" "
|   |-VerbatimLineComment 0x955ee0 <col:4, col:20> Text=" los_mux"
|   |-ParagraphComment 0x955f50 <line:211:3>
|   | `-TextComment 0x955f20 <col:3> Text=" "
|   |-BlockCommandComment 0x955f70 <col:4, col:25> Name="brief"
|   | `-ParagraphComment 0x955fd0 <col:10, col:25>
|   |   `-TextComment 0x955fa0 <col:10, col:25> Text=" Delete a mutex."
|   |-ParagraphComment 0x956020 <line:213:3>
|   | `-TextComment 0x955ff0 <col:3> Text=" "
|   |-BlockCommandComment 0x956040 <col:4, line:216:3> Name="par"
|   | `-ParagraphComment 0x956110 <line:213:8, line:216:3>
|   |   |-TextComment 0x956070 <line:213:8, col:20> Text=" Description:"
|   |   |-TextComment 0x956090 <line:214:3, col:115> Text=" This API is used to delete a specified mutex. Return LOS_OK on deleting successfully, return specific error code"
|   |   |-TextComment 0x9560b0 <line:215:3, col:13> Text=" otherwise."
|   |   `-TextComment 0x9560d0 <line:216:3> Text=" "
|   |-BlockCommandComment 0x956130 <col:4, line:220:8> Name="attention"
|   | `-ParagraphComment 0x9563d0 <line:217:3, line:220:8>
|   |   |-TextComment 0x956160 <line:217:3> Text=" "
|   |   |-HTMLStartTagComment 0x956180 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9561c0 <line:218:3> Text=" "
|   |   |-HTMLStartTagComment 0x9561e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x956220 <col:8, col:52> Text="The specific mutex should be created firstly."
|   |   |-HTMLEndTagComment 0x956240 <col:53, col:57> Name="li"
|   |   |-TextComment 0x956270 <line:219:3> Text=" "
|   |   |-HTMLStartTagComment 0x956290 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9562d0 <col:8, col:79> Text="The mutex can be deleted successfully only if no other tasks pend on it."
|   |   |-HTMLEndTagComment 0x9562f0 <col:80, col:84> Name="li"
|   |   |-TextComment 0x956320 <line:220:3> Text=" "
|   |   `-HTMLEndTagComment 0x956340 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x956420 <line:222:3>
|   | `-TextComment 0x9563f0 <col:3> Text=" "
|   |-ParamCommandComment 0x956440 <col:4, line:223:38> [in] implicitly Param="muxHandle" ParamIndex=0
|   | `-ParagraphComment 0x957510 <line:222:20, line:223:38>
|   |   |-TextComment 0x9574c0 <line:222:20, col:94> Text="   [IN] Handle of the mutex to be deleted. The value of handle should be in"
|   |   `-TextComment 0x9574e0 <line:223:3, col:38> Text=" [0, LOSCFG_BASE_IPC_MUX_LIMIT - 1]."
|   |-ParagraphComment 0x957560 <line:225:3>
|   | `-TextComment 0x957530 <col:3> Text=" "
|   |-BlockCommandComment 0x957580 <col:4, line:226:3> Name="retval"
|   | `-ParagraphComment 0x957600 <line:225:11, line:226:3>
|   |   |-TextComment 0x9575b0 <line:225:11, col:76> Text=" #LOS_ERRNO_MUX_INVALID            Invalid handle or mutex in use."
|   |   `-TextComment 0x9575d0 <line:226:3> Text=" "
|   |-BlockCommandComment 0x957620 <col:4, line:227:3> Name="retval"
|   | `-ParagraphComment 0x9576a0 <line:226:11, line:227:3>
|   |   |-TextComment 0x957650 <line:226:11, col:72> Text=" #LOS_ERRNO_MUX_PENDED             Tasks pended on this mutex."
|   |   `-TextComment 0x957670 <line:227:3> Text=" "
|   |-BlockCommandComment 0x9576c0 <col:4, line:228:3> Name="retval"
|   | `-ParagraphComment 0x957740 <line:227:11, line:228:3>
|   |   |-TextComment 0x9576f0 <line:227:11, col:79> Text=" #LOS_OK                           The mutex is successfully deleted."
|   |   `-TextComment 0x957710 <line:228:3> Text=" "
|   |-BlockCommandComment 0x957760 <col:4, line:230:3> Name="par"
|   | `-ParagraphComment 0x957930 <line:228:8, line:230:3>
|   |   |-TextComment 0x957790 <line:228:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9577b0 <line:229:3> Text=" "
|   |   |-HTMLStartTagComment 0x9577d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x957810 <col:8, col:11> Name="li"
|   |   |-TextComment 0x957850 <col:12, col:72> Text="los_mux.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x957870 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x9578a0 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x9578d0 <line:230:3> Text=" "
|   `-BlockCommandComment 0x957950 <col:4, col:21> Name="see"
|     `-ParagraphComment 0x9579b0 <col:8, col:21>
|       `-TextComment 0x957980 <col:8, col:21> Text=" LOS_MuxCreate"
|-FunctionDecl 0x8d1bf8 <line:267:1, col:59> col:15 LOS_MuxPend 'UINT32 (UINT32, UINT32)' extern
| |-ParmVarDecl 0x8d1ae8 <col:27, col:34> col:34 muxHandle 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8d1b60 <col:45, col:52> col:52 timeout 'UINT32':'unsigned int'
| `-FullComment 0x958c40 <line:235:3, line:265:35>
|   |-ParagraphComment 0x957af0 <line:235:3>
|   | `-TextComment 0x957ac0 <col:3> Text=" "
|   |-VerbatimLineComment 0x957b10 <col:4, col:20> Text=" los_mux"
|   |-ParagraphComment 0x957b80 <line:236:3>
|   | `-TextComment 0x957b50 <col:3> Text=" "
|   |-BlockCommandComment 0x957ba0 <col:4, col:31> Name="brief"
|   | `-ParagraphComment 0x957c00 <col:10, col:31>
|   |   `-TextComment 0x957bd0 <col:10, col:31> Text=" Wait to lock a mutex."
|   |-ParagraphComment 0x957c50 <line:238:3>
|   | `-TextComment 0x957c20 <col:3> Text=" "
|   |-BlockCommandComment 0x957c70 <col:4, line:240:3> Name="par"
|   | `-ParagraphComment 0x957d20 <line:238:8, line:240:3>
|   |   |-TextComment 0x957ca0 <line:238:8, col:20> Text=" Description:"
|   |   |-TextComment 0x957cc0 <line:239:3, col:75> Text=" This API is used to wait for a specified period of time to lock a mutex."
|   |   `-TextComment 0x957ce0 <line:240:3> Text=" "
|   |-BlockCommandComment 0x957d40 <col:4, line:249:8> Name="attention"
|   | `-ParagraphComment 0x9582a0 <line:241:3, line:249:8>
|   |   |-TextComment 0x957d70 <line:241:3> Text=" "
|   |   |-HTMLStartTagComment 0x957d90 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x957dd0 <line:242:3> Text=" "
|   |   |-HTMLStartTagComment 0x957df0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x957e30 <col:8, col:52> Text="The specific mutex should be created firstly."
|   |   |-HTMLEndTagComment 0x957e50 <col:53, col:57> Name="li"
|   |   |-TextComment 0x957e80 <line:243:3> Text=" "
|   |   |-HTMLStartTagComment 0x957ea0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x957ee0 <col:8, col:117> Text="The function fails if the mutex that is waited on is already locked by another thread when the task scheduling"
|   |   |-TextComment 0x957f00 <line:244:3, col:15> Text=" is disabled."
|   |   |-HTMLEndTagComment 0x957f20 <col:16, col:20> Name="li"
|   |   |-TextComment 0x957f50 <line:245:3> Text=" "
|   |   |-HTMLStartTagComment 0x957f70 <col:4, col:7> Name="li"
|   |   |-TextComment 0x957fb0 <col:8, col:50> Text="Do not wait on a mutex during an interrupt."
|   |   |-HTMLEndTagComment 0x957fd0 <col:51, col:55> Name="li"
|   |   |-TextComment 0x958000 <line:246:3> Text=" "
|   |   |-HTMLStartTagComment 0x958020 <col:4, col:7> Name="li"
|   |   |-TextComment 0x958060 <col:8, col:116> Text="The priority inheritance protocol is supported. If a higher-priority thread is waiting on a mutex, it changes"
|   |   |-TextComment 0x958080 <line:247:3, col:78> Text=" the priority of the thread that owns the mutex to avoid priority inversion."
|   |   |-HTMLEndTagComment 0x9580a0 <col:79, col:83> Name="li"
|   |   |-TextComment 0x9580d0 <line:248:3> Text=" "
|   |   |-HTMLStartTagComment 0x9580f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x958130 <col:8, col:73> Text="A recursive mutex can be locked more than once by the same thread."
|   |   |-HTMLEndTagComment 0x958150 <col:74, col:78> Name="li"
|   |   |-TextComment 0x958180 <line:249:3> Text=" "
|   |   `-HTMLEndTagComment 0x9581a0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x9582f0 <line:251:3>
|   | `-TextComment 0x9582c0 <col:3> Text=" "
|   |-ParamCommandComment 0x958310 <col:4, line:253:3> [in] implicitly Param="muxHandle" ParamIndex=0
|   | `-ParagraphComment 0x9583f0 <line:251:20, line:253:3>
|   |   |-TextComment 0x958370 <line:251:20, col:95> Text="    [IN] Handle of the mutex to be waited on.  The value of handle should be"
|   |   |-TextComment 0x958390 <line:252:3, col:41> Text=" in [0, LOSCFG_BASE_IPC_MUX_LIMIT - 1]."
|   |   `-TextComment 0x9583b0 <line:253:3> Text=" "
|   |-ParamCommandComment 0x958410 <col:4, col:95> [in] implicitly Param="timeout" ParamIndex=1
|   | `-ParagraphComment 0x9584a0 <col:18, col:95>
|   |   `-TextComment 0x958470 <col:18, col:95> Text="      [IN] Waiting time. The value range is [0, LOS_WAIT_FOREVER](unit: Tick)."
|   |-ParagraphComment 0x9584f0 <line:255:3>
|   | `-TextComment 0x9584c0 <col:3> Text=" "
|   |-BlockCommandComment 0x958510 <col:4, line:257:3> Name="retval"
|   | `-ParagraphComment 0x9585c0 <line:255:11, line:257:3>
|   |   |-TextComment 0x958540 <line:255:11, col:117> Text=" #LOS_ERRNO_MUX_INVALID            The mutex state (for example, the mutex does not exist or is not in use)"
|   |   |-TextComment 0x958560 <line:256:3, col:89> Text="                                           is not applicable for the current operation."
|   |   `-TextComment 0x958580 <line:257:3> Text=" "
|   |-BlockCommandComment 0x9585e0 <col:4, line:259:3> Name="retval"
|   | `-ParagraphComment 0x958690 <line:257:11, line:259:3>
|   |   |-TextComment 0x958610 <line:257:11, col:116> Text=" #LOS_ERRNO_MUX_UNAVAILABLE        The mutex fails to be locked because it is locked by another thread and"
|   |   |-TextComment 0x958630 <line:258:3, col:77> Text=" a period of time is not set for waiting for the mutex to become available."
|   |   `-TextComment 0x958650 <line:259:3> Text=" "
|   |-BlockCommandComment 0x9586b0 <col:4, line:260:3> Name="retval"
|   | `-ParagraphComment 0x958730 <line:259:11, line:260:3>
|   |   |-TextComment 0x9586e0 <line:259:11, col:89> Text=" #LOS_ERRNO_MUX_IN_INTERR        The mutex is being locked during an interrupt."
|   |   `-TextComment 0x958700 <line:260:3> Text=" "
|   |-BlockCommandComment 0x958750 <col:4, line:261:3> Name="retval"
|   | `-ParagraphComment 0x9587d0 <line:260:11, line:261:3>
|   |   |-TextComment 0x958780 <line:260:11, col:105> Text=" #LOS_ERRNO_MUX_PEND_IN_LOCK       The mutex is waited on when the task scheduling is disabled."
|   |   `-TextComment 0x9587a0 <line:261:3> Text=" "
|   |-BlockCommandComment 0x9587f0 <col:4, line:262:3> Name="retval"
|   | `-ParagraphComment 0x958870 <line:261:11, line:262:3>
|   |   |-TextComment 0x958820 <line:261:11, col:73> Text=" #LOS_ERRNO_MUX_TIMEOUT            The mutex waiting times out."
|   |   `-TextComment 0x958840 <line:262:3> Text=" "
|   |-BlockCommandComment 0x958890 <col:4, line:263:3> Name="retval"
|   | `-ParagraphComment 0x958910 <line:262:11, line:263:3>
|   |   |-TextComment 0x9588c0 <line:262:11, col:78> Text=" #LOS_OK                           The mutex is successfully locked."
|   |   `-TextComment 0x9588e0 <line:263:3> Text=" "
|   |-BlockCommandComment 0x958930 <col:4, line:265:3> Name="par"
|   | `-ParagraphComment 0x958b00 <line:263:8, line:265:3>
|   |   |-TextComment 0x958960 <line:263:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x958980 <line:264:3> Text=" "
|   |   |-HTMLStartTagComment 0x9589a0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x9589e0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x958a20 <col:12, col:72> Text="los_mux.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x958a40 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x958a70 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x958aa0 <line:265:3> Text=" "
|   `-BlockCommandComment 0x958b20 <col:4, col:35> Name="see"
|     `-ParagraphComment 0x958b80 <col:8, col:35>
|       `-TextComment 0x958b50 <col:8, col:35> Text=" LOS_MuxCreate | LOS_MuxPost"
|-FunctionDecl 0x8d1d78 <line:293:1, col:43> col:15 LOS_MuxPost 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x8d1ce8 <col:27, col:34> col:34 muxHandle 'UINT32':'unsigned int'
| `-FullComment 0x959940 <line:270:3, line:291:35>
|   |-ParagraphComment 0x958ce0 <line:270:3>
|   | `-TextComment 0x958cb0 <col:3> Text=" "
|   |-VerbatimLineComment 0x958d00 <col:4, col:20> Text=" los_mux"
|   |-ParagraphComment 0x958d70 <line:271:3>
|   | `-TextComment 0x958d40 <col:3> Text=" "
|   |-BlockCommandComment 0x958d90 <col:4, col:26> Name="brief"
|   | `-ParagraphComment 0x958df0 <col:10, col:26>
|   |   `-TextComment 0x958dc0 <col:10, col:26> Text=" Release a mutex."
|   |-ParagraphComment 0x958e40 <line:273:3>
|   | `-TextComment 0x958e10 <col:3> Text=" "
|   |-BlockCommandComment 0x958e60 <col:4, line:275:3> Name="par"
|   | `-ParagraphComment 0x958f10 <line:273:8, line:275:3>
|   |   |-TextComment 0x958e90 <line:273:8, col:20> Text=" Description:"
|   |   |-TextComment 0x958eb0 <line:274:3, col:49> Text=" This API is used to release a specified mutex."
|   |   `-TextComment 0x958ed0 <line:275:3> Text=" "
|   |-BlockCommandComment 0x958f30 <col:4, line:280:8> Name="attention"
|   | `-ParagraphComment 0x9592a0 <line:276:3, line:280:8>
|   |   |-TextComment 0x958f60 <line:276:3> Text=" "
|   |   |-HTMLStartTagComment 0x958f80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x958fc0 <line:277:3> Text=" "
|   |   |-HTMLStartTagComment 0x958fe0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x959020 <col:8, col:52> Text="The specific mutex should be created firstly."
|   |   |-HTMLEndTagComment 0x959040 <col:53, col:57> Name="li"
|   |   |-TextComment 0x959070 <line:278:3> Text=" "
|   |   |-HTMLStartTagComment 0x959090 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9590d0 <col:8, col:50> Text="Do not release a mutex during an interrupt."
|   |   |-HTMLEndTagComment 0x9590f0 <col:51, col:55> Name="li"
|   |   |-TextComment 0x959120 <line:279:3> Text=" "
|   |   |-HTMLStartTagComment 0x959140 <col:4, col:7> Name="li"
|   |   |-TextComment 0x959180 <col:8, col:108> Text="If a recursive mutex is locked for many times, it must be unlocked for the same times to be released."
|   |   |-HTMLEndTagComment 0x9591a0 <col:109, col:113> Name="li"
|   |   |-TextComment 0x9591d0 <line:280:3> Text=" "
|   |   `-HTMLEndTagComment 0x9591f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x9592f0 <line:282:3>
|   | `-TextComment 0x9592c0 <col:3> Text=" "
|   |-ParamCommandComment 0x959310 <col:4, line:283:38> [in] implicitly Param="muxHandle" ParamIndex=0
|   | `-ParagraphComment 0x9593c0 <line:282:20, line:283:38>
|   |   |-TextComment 0x959370 <line:282:20, col:96> Text="    [IN] Handle of the mutex to be released. The value of handle should be in"
|   |   `-TextComment 0x959390 <line:283:3, col:38> Text=" [0, LOSCFG_BASE_IPC_MUX_LIMIT - 1]."
|   |-ParagraphComment 0x959410 <line:285:3>
|   | `-TextComment 0x9593e0 <col:3> Text=" "
|   |-BlockCommandComment 0x959430 <col:4, line:287:3> Name="retval"
|   | `-ParagraphComment 0x9594f0 <line:285:11, line:287:3>
|   |   |-TextComment 0x959460 <line:285:11, col:116> Text=" #LOS_ERRNO_MUX_INVALID            The mutex state (for example, the mutex does not exist or is not in use"
|   |   |-TextComment 0x959480 <line:286:3, col:73> Text=" or owned by other thread) is not applicable for the current operation."
|   |   `-TextComment 0x9594a0 <line:287:3> Text=" "
|   |-BlockCommandComment 0x959510 <col:4, line:288:3> Name="retval"
|   | `-ParagraphComment 0x959590 <line:287:11, line:288:3>
|   |   |-TextComment 0x959540 <line:287:11, col:91> Text=" #LOS_ERRNO_MUX_IN_INTERR        The mutex is being released during an interrupt."
|   |   `-TextComment 0x959560 <line:288:3> Text=" "
|   |-BlockCommandComment 0x9595b0 <col:4, line:289:3> Name="retval"
|   | `-ParagraphComment 0x959630 <line:288:11, line:289:3>
|   |   |-TextComment 0x9595e0 <line:288:11, col:80> Text=" #LOS_OK                           The mutex is successfully released."
|   |   `-TextComment 0x959600 <line:289:3> Text=" "
|   |-BlockCommandComment 0x959650 <col:4, line:291:3> Name="par"
|   | `-ParagraphComment 0x959820 <line:289:8, line:291:3>
|   |   |-TextComment 0x959680 <line:289:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9596a0 <line:290:3> Text=" "
|   |   |-HTMLStartTagComment 0x9596c0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x959700 <col:8, col:11> Name="li"
|   |   |-TextComment 0x959740 <col:12, col:72> Text="los_mux.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x959760 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x959790 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x9597c0 <line:291:3> Text=" "
|   `-BlockCommandComment 0x959840 <col:4, col:35> Name="see"
|     `-ParagraphComment 0x9598a0 <col:8, col:35>
|       `-TextComment 0x959870 <col:8, col:35> Text=" LOS_MuxCreate | LOS_MuxPend"
|-RecordDecl 0x8d1e48 <line:299:9, line:306:1> line:299:9 struct definition
| |-FullComment 0x959ab0 <line:296:3, line:297:16>
| | |-ParagraphComment 0x9599e0 <line:296:3>
| | | `-TextComment 0x9599b0 <col:3> Text=" "
| | |-VerbatimLineComment 0x959a00 <col:4, col:20> Text=" los_mux"
| | `-ParagraphComment 0x959a70 <line:297:3, col:16>
| |   `-TextComment 0x959a40 <col:3, col:16> Text=" Mutex object."
| |-FieldDecl 0x8d1f00 <line:300:5, col:11> col:11 muxStat 'UINT8':'unsigned char'
| | `-FullComment 0x959b80 <col:30, col:63>
| |   `-ParagraphComment 0x959b50 <col:30, col:63>
| |     `-TextComment 0x959b20 <col:30, col:63> Text=" State OS_MUX_UNUSED,OS_MUX_USED  "
| |-FieldDecl 0x8d1f88 <line:301:5, col:12> col:12 muxCount 'UINT16':'unsigned short'
| | `-FullComment 0x959c50 <col:30, col:55>
| |   `-ParagraphComment 0x959c20 <col:30, col:55>
| |     `-TextComment 0x959bf0 <col:30, col:55> Text=" Times of locking a mutex "
| |-FieldDecl 0x8d2018 <line:302:5, col:12> col:12 muxID 'UINT32':'unsigned int'
| | `-FullComment 0x959d20 <col:30, col:40>
| |   `-ParagraphComment 0x959cf0 <col:30, col:40>
| |     `-TextComment 0x959cc0 <col:30, col:40> Text=" Handle ID "
| |-FieldDecl 0x8d20a8 <line:303:5, col:17> col:17 muxList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| | `-FullComment 0x959df0 <col:30, col:48>
| |   `-ParagraphComment 0x959dc0 <col:30, col:48>
| |     `-TextComment 0x959d90 <col:30, col:48> Text=" Mutex linked list "
| |-FieldDecl 0x8d2138 <line:304:5, col:16> col:16 owner 'LosTaskCB *'
| | `-FullComment 0x959ec0 <col:30, col:73>
| |   `-ParagraphComment 0x959e90 <col:30, col:73>
| |     `-TextComment 0x959e60 <col:30, col:73> Text=" The current thread that is locking a mutex "
| `-FieldDecl 0x8d21c8 <line:305:5, col:12> col:12 priority 'UINT16':'unsigned short'
|   `-FullComment 0x959f90 <col:30, col:77>
|     `-ParagraphComment 0x959f60 <col:30, col:77>
|       `-TextComment 0x959f30 <col:30, col:77> Text=" Priority of the thread that is locking a mutex "
|-TypedefDecl 0x8d22a8 <line:299:1, line:306:3> col:3 referenced LosMuxCB 'struct LosMuxCB':'LosMuxCB'
| |-ElaboratedType 0x8d2250 'struct LosMuxCB' sugar
| | `-RecordType 0x8d1ed0 'LosMuxCB'
| |   `-Record 0x8d1e48 ''
| `-FullComment 0x95a100 <line:296:3, line:297:16>
|   |-ParagraphComment 0x95a030 <line:296:3>
|   | `-TextComment 0x95a000 <col:3> Text=" "
|   |-VerbatimLineComment 0x95a050 <col:4, col:20> Text=" los_mux"
|   `-ParagraphComment 0x95a0c0 <line:297:3, col:16>
|     `-TextComment 0x95a090 <col:3, col:16> Text=" Mutex object."
|-VarDecl 0x8d23f8 <line:320:1, col:18> col:18 g_allMux 'LosMuxCB *' extern
|-FunctionDecl 0x8d2550 <line:346:1, col:29> col:15 OsMuxInit 'UINT32 (void)' extern
| `-FullComment 0x95aa80 <line:329:3, line:344:21>
|   |-ParagraphComment 0x95a1a0 <line:329:3>
|   | `-TextComment 0x95a170 <col:3> Text=" "
|   |-VerbatimLineComment 0x95a1c0 <col:4, col:20> Text=" los_mux"
|   |-ParagraphComment 0x95a230 <line:330:3>
|   | `-TextComment 0x95a200 <col:3> Text=" "
|   |-BlockCommandComment 0x95a250 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0x95a2b0 <col:10, col:32>
|   |   `-TextComment 0x95a280 <col:10, col:32> Text=" Initializes the mutex."
|   |-ParagraphComment 0x95a300 <line:332:3>
|   | `-TextComment 0x95a2d0 <col:3> Text=" "
|   |-BlockCommandComment 0x95a320 <col:4, line:334:3> Name="par"
|   | `-ParagraphComment 0x95a3d0 <line:332:8, line:334:3>
|   |   |-TextComment 0x95a350 <line:332:8, col:20> Text=" Description:"
|   |   |-TextComment 0x95a370 <line:333:3, col:45> Text=" This API is used to initializes the mutex."
|   |   `-TextComment 0x95a390 <line:334:3> Text=" "
|   |-BlockCommandComment 0x95a3f0 <col:4, line:337:8> Name="attention"
|   | `-ParagraphComment 0x95a5c0 <line:335:3, line:337:8>
|   |   |-TextComment 0x95a420 <line:335:3> Text=" "
|   |   |-HTMLStartTagComment 0x95a440 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x95a480 <line:336:3> Text=" "
|   |   |-HTMLStartTagComment 0x95a4a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x95a4e0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x95a500 <col:13, col:17> Name="li"
|   |   |-TextComment 0x95a530 <line:337:3> Text=" "
|   |   `-HTMLEndTagComment 0x95a550 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x95a610 <line:339:3>
|   | `-TextComment 0x95a5e0 <col:3> Text=" "
|   |-ParamCommandComment 0x95a630 <col:4, col:15> [in] implicitly Param="None."
|   | `-ParagraphComment 0x95a690 <<invalid sloc>>
|   |-ParagraphComment 0x95a6e0 <line:341:3>
|   | `-TextComment 0x95a6b0 <col:3> Text=" "
|   |-BlockCommandComment 0x95a700 <col:4, line:342:3> Name="retval"
|   | `-ParagraphComment 0x95a780 <line:341:11, line:342:3>
|   |   |-TextComment 0x95a730 <line:341:11, col:44> Text=" UINT32     Initialization result."
|   |   `-TextComment 0x95a750 <line:342:3> Text=" "
|   |-BlockCommandComment 0x95a7a0 <col:4, line:344:3> Name="par"
|   | `-ParagraphComment 0x95a970 <line:342:8, line:344:3>
|   |   |-TextComment 0x95a7d0 <line:342:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x95a7f0 <line:343:3> Text=" "
|   |   |-HTMLStartTagComment 0x95a810 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x95a850 <col:8, col:11> Name="li"
|   |   |-TextComment 0x95a890 <col:12, col:72> Text="los_mux.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x95a8b0 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x95a8e0 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x95a910 <line:344:3> Text=" "
|   `-BlockCommandComment 0x95a990 <col:4, col:21> Name="see"
|     `-ParagraphComment 0x95a9f0 <col:8, col:21>
|       `-TextComment 0x95a9c0 <col:8, col:21> Text=" LOS_MuxDelete"
|-RecordDecl 0x8d4608 <main/los_queue.h:360:9, line:371:1> line:360:16 struct tagQueueInfo definition
| |-FullComment 0x95abf0 <line:357:3, line:358:53>
| | |-ParagraphComment 0x95ab20 <line:357:3>
| | | `-TextComment 0x95aaf0 <col:3> Text=" "
| | |-VerbatimLineComment 0x95ab40 <col:4, col:22> Text=" los_queue"
| | `-ParagraphComment 0x95abb0 <line:358:3, col:53>
| |   `-TextComment 0x95ab80 <col:3, col:53> Text=" Structure of the block for queue information query"
| |-FieldDecl 0x8d46c0 <line:361:5, col:12> col:12 queueID 'UINT32':'unsigned int'
| | `-FullComment 0x95acc0 <col:25, col:34>
| |   `-ParagraphComment 0x95ac90 <col:25, col:34>
| |     `-TextComment 0x95ac60 <col:25, col:34> Text=" Queue ID "
| |-FieldDecl 0x8d4748 <line:362:5, col:12> col:12 queueLen 'UINT16':'unsigned short'
| | `-FullComment 0x95ad90 <col:26, col:39>
| |   `-ParagraphComment 0x95ad60 <col:26, col:39>
| |     `-TextComment 0x95ad30 <col:26, col:39> Text=" Queue length "
| |-FieldDecl 0x8d47d8 <line:363:5, col:12> col:12 queueSize 'UINT16':'unsigned short'
| | `-FullComment 0x95ae60 <col:27, col:37>
| |   `-ParagraphComment 0x95ae30 <col:27, col:37>
| |     `-TextComment 0x95ae00 <col:27, col:37> Text=" Node size "
| |-FieldDecl 0x8d4868 <line:364:5, col:12> col:12 queueHead 'UINT16':'unsigned short'
| | `-FullComment 0x95af30 <col:27, col:37>
| |   `-ParagraphComment 0x95af00 <col:27, col:37>
| |     `-TextComment 0x95aed0 <col:27, col:37> Text=" Node head "
| |-FieldDecl 0x8d48f8 <line:365:5, col:12> col:12 queueTail 'UINT16':'unsigned short'
| | `-FullComment 0x95b000 <col:27, col:37>
| |   `-ParagraphComment 0x95afd0 <col:27, col:37>
| |     `-TextComment 0x95afa0 <col:27, col:37> Text=" Node tail "
| |-FieldDecl 0x8d4988 <line:366:5, col:12> col:12 writableCnt 'UINT16':'unsigned short'
| | `-FullComment 0x95b0d0 <col:29, col:57>
| |   `-ParagraphComment 0x95b0a0 <col:29, col:57>
| |     `-TextComment 0x95b070 <col:29, col:57> Text=" Count of writable resources "
| |-FieldDecl 0x8d4a18 <line:367:5, col:12> col:12 readableCnt 'UINT16':'unsigned short'
| | `-FullComment 0x95b1a0 <col:29, col:57>
| |   `-ParagraphComment 0x95b170 <col:29, col:57>
| |     `-TextComment 0x95b140 <col:29, col:57> Text=" Count of readable resources "
| |-FieldDecl 0x8d4c28 <line:368:5, col:47> col:12 waitReadTask 'UINT32 [1]'
| | `-FullComment 0x95b270 <col:54, col:75>
| |   `-ParagraphComment 0x95b240 <col:54, col:75>
| |     `-TextComment 0x95b210 <col:54, col:75> Text=" Resource reading task"
| |-FieldDecl 0x8d4dc0 <line:369:5, col:48> col:12 waitWriteTask 'UINT32 [1]'
| | `-FullComment 0x95b340 <col:55, col:77>
| |   `-ParagraphComment 0x95b310 <col:55, col:77>
| |     `-TextComment 0x95b2e0 <col:55, col:77> Text=" Resource writing task "
| `-FieldDecl 0x8d4f50 <line:370:5, col:46> col:12 waitMemTask 'UINT32 [1]'
|   `-FullComment 0x95b410 <col:53, col:65>
|     `-ParagraphComment 0x95b3e0 <col:53, col:65>
|       `-TextComment 0x95b3b0 <col:53, col:65> Text=" Memory task "
|-TypedefDecl 0x8d5028 <line:360:1, line:371:3> col:3 referenced QUEUE_INFO_S 'struct tagQueueInfo':'struct tagQueueInfo'
| |-ElaboratedType 0x8d4fd0 'struct tagQueueInfo' sugar
| | `-RecordType 0x8d4690 'struct tagQueueInfo'
| |   `-Record 0x8d4608 'tagQueueInfo'
| `-FullComment 0x95d5c0 <line:357:3, line:358:53>
|   |-ParagraphComment 0x95b4b0 <line:357:3>
|   | `-TextComment 0x95b480 <col:3> Text=" "
|   |-VerbatimLineComment 0x95d510 <col:4, col:22> Text=" los_queue"
|   `-ParagraphComment 0x95d580 <line:358:3, col:53>
|     `-TextComment 0x95d550 <col:3, col:53> Text=" Structure of the block for queue information query"
|-FunctionDecl 0x8d7da8 <line:400:1, line:404:48> line:400:15 LOS_QueueCreate 'UINT32 (const CHAR *, UINT16, UINT32 *, UINT32, UINT16)' extern
| |-ParmVarDecl 0x8d50d0 <col:31, col:43> col:43 queueName 'const CHAR *'
| |-ParmVarDecl 0x8d5148 <line:401:31, col:38> col:38 len 'UINT16':'unsigned short'
| |-ParmVarDecl 0x8d51c0 <line:402:31, col:39> col:39 queueID 'UINT32 *'
| |-ParmVarDecl 0x8d7be0 <line:403:31, col:38> col:38 flags 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8d7c58 <line:404:31, col:38> col:38 maxMsgSize 'UINT16':'unsigned short'
| `-FullComment 0x95e620 <line:374:3, line:398:23>
|   |-ParagraphComment 0x95d660 <line:374:3>
|   | `-TextComment 0x95d630 <col:3> Text=" "
|   |-VerbatimLineComment 0x95d680 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x95d6f0 <line:375:3>
|   | `-TextComment 0x95d6c0 <col:3> Text=" "
|   |-BlockCommandComment 0x95d710 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0x95d770 <col:10, col:33>
|   |   `-TextComment 0x95d740 <col:10, col:33> Text=" Create a message queue."
|   |-ParagraphComment 0x95d7c0 <line:377:3>
|   | `-TextComment 0x95d790 <col:3> Text=" "
|   |-BlockCommandComment 0x95d7e0 <col:4, line:379:3> Name="par"
|   | `-ParagraphComment 0x95d890 <line:377:8, line:379:3>
|   |   |-TextComment 0x95d810 <line:377:8, col:20> Text=" Description:"
|   |   |-TextComment 0x95d830 <line:378:3, col:46> Text=" This API is used to create a message queue."
|   |   `-TextComment 0x95d850 <line:379:3> Text=" "
|   |-BlockCommandComment 0x95d8b0 <col:4, line:383:3> Name="attention"
|   | `-ParagraphComment 0x95dab0 <line:380:3, line:383:3>
|   |   |-TextComment 0x95d8e0 <line:380:3> Text=" "
|   |   |-HTMLStartTagComment 0x95d900 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x95d940 <line:381:3> Text=" "
|   |   |-HTMLStartTagComment 0x95d960 <col:4, col:7> Name="li"
|   |   |-TextComment 0x95d9a0 <col:8, col:96> Text="There are LOSCFG_BASE_IPC_QUEUE_LIMIT queues available, change it's value when necessary."
|   |   |-HTMLEndTagComment 0x95d9c0 <col:97, col:101> Name="li"
|   |   |-TextComment 0x95d9f0 <line:382:3> Text=" "
|   |   |-HTMLEndTagComment 0x95da10 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x95da40 <line:383:3> Text=" "
|   |-ParamCommandComment 0x95dad0 <col:4, line:384:3> [in] implicitly Param="queueName" ParamIndex=0
|   | `-ParagraphComment 0x95db80 <line:383:20, line:384:3>
|   |   |-TextComment 0x95db30 <line:383:20, col:92> Text="        [IN]    Message queue name. Reserved parameter, not used for now."
|   |   `-TextComment 0x95db50 <line:384:3> Text=" "
|   |-ParamCommandComment 0x95dba0 <col:4, line:385:3> [in] implicitly Param="len" ParamIndex=1
|   | `-ParagraphComment 0x95dc50 <line:384:14, line:385:3>
|   |   |-TextComment 0x95dc00 <line:384:14, col:79> Text="              [IN]    Queue length. The value range is [1,0xffff]."
|   |   `-TextComment 0x95dc20 <line:385:3> Text=" "
|   |-ParamCommandComment 0x95dc70 <col:4, line:386:3> [in] implicitly Param="queueID" ParamIndex=2
|   | `-ParagraphComment 0x95dd20 <line:385:18, line:386:3>
|   |   |-TextComment 0x95dcd0 <line:385:18, col:98> Text="          [OUT]   ID of the queue control structure that is successfully created."
|   |   `-TextComment 0x95dcf0 <line:386:3> Text=" "
|   |-ParamCommandComment 0x95dd40 <col:4, line:387:3> [in] implicitly Param="flags" ParamIndex=3
|   | `-ParagraphComment 0x95ddf0 <line:386:16, line:387:3>
|   |   |-TextComment 0x95dda0 <line:386:16, col:84> Text="            [IN]    Queue mode. Reserved parameter, not used for now."
|   |   `-TextComment 0x95ddc0 <line:387:3> Text=" "
|   |-ParamCommandComment 0x95de10 <col:4, col:78> [in] implicitly Param="maxMsgSize" ParamIndex=4
|   | `-ParagraphComment 0x95dea0 <col:21, col:78>
|   |   `-TextComment 0x95de70 <col:21, col:78> Text="       [IN]    Node size. The value range is [1,0xffff-4]."
|   |-ParagraphComment 0x95def0 <line:389:3>
|   | `-TextComment 0x95dec0 <col:3> Text=" "
|   |-BlockCommandComment 0x95df10 <col:4, line:390:3> Name="retval"
|   | `-ParagraphComment 0x95df90 <line:389:11, line:390:3>
|   |   |-TextComment 0x95df40 <line:389:11, col:93> Text="   #LOS_OK                               The message queue is successfully created."
|   |   `-TextComment 0x95df60 <line:390:3> Text=" "
|   |-BlockCommandComment 0x95dfb0 <col:4, line:391:3> Name="retval"
|   | `-ParagraphComment 0x95e030 <line:390:11, line:391:3>
|   |   |-TextComment 0x95dfe0 <line:390:11, col:111> Text="   #LOS_ERRNO_QUEUE_CB_UNAVAILABLE       The upper limit of the number of created queues is exceeded."
|   |   `-TextComment 0x95e000 <line:391:3> Text=" "
|   |-BlockCommandComment 0x95e050 <col:4, line:392:3> Name="retval"
|   | `-ParagraphComment 0x95e0d0 <line:391:11, line:392:3>
|   |   |-TextComment 0x95e080 <line:391:11, col:90> Text="   #LOS_ERRNO_QUEUE_CREATE_NO_MEMORY     Insufficient memory for queue creation."
|   |   `-TextComment 0x95e0a0 <line:392:3> Text=" "
|   |-BlockCommandComment 0x95e0f0 <col:4, line:393:3> Name="retval"
|   | `-ParagraphComment 0x95e170 <line:392:11, line:393:3>
|   |   |-TextComment 0x95e120 <line:392:11, col:81> Text="   #LOS_ERRNO_QUEUE_CREAT_PTR_NULL       Null pointer, queueID is NULL."
|   |   `-TextComment 0x95e140 <line:393:3> Text=" "
|   |-BlockCommandComment 0x95e190 <col:4, line:395:3> Name="retval"
|   | `-ParagraphComment 0x95e240 <line:393:11, line:395:3>
|   |   |-TextComment 0x95e1c0 <line:393:11, col:111> Text="   #LOS_ERRNO_QUEUE_PARA_ISZERO          The queue length or message node size passed in during queue"
|   |   |-TextComment 0x95e1e0 <line:394:3, col:17> Text=" creation is 0."
|   |   `-TextComment 0x95e200 <line:395:3> Text=" "
|   |-BlockCommandComment 0x95e260 <col:4, line:396:3> Name="retval"
|   | `-ParagraphComment 0x95e2e0 <line:395:11, line:396:3>
|   |   |-TextComment 0x95e290 <line:395:11, col:102> Text="   #LOS_ERRNO_QUEUE_SIZE_TOO_BIG         The parameter maxMsgSize is larger than 0xffff - 4."
|   |   `-TextComment 0x95e2b0 <line:396:3> Text=" "
|   |-BlockCommandComment 0x95e300 <col:4, line:398:3> Name="par"
|   | `-ParagraphComment 0x95e4d0 <line:396:8, line:398:3>
|   |   |-TextComment 0x95e330 <line:396:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x95e350 <line:397:3> Text=" "
|   |   |-HTMLStartTagComment 0x95e370 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x95e3b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x95e3f0 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x95e410 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x95e440 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x95e470 <line:398:3> Text=" "
|   `-BlockCommandComment 0x95e4f0 <col:4, col:23> Name="see"
|     `-ParagraphComment 0x95e550 <col:8, col:23>
|       `-TextComment 0x95e520 <col:8, col:23> Text=" LOS_QueueDelete"
|-FunctionDecl 0x8d8158 <line:449:1, line:452:47> line:449:15 LOS_QueueReadCopy 'UINT32 (UINT32, void *, UINT32 *, UINT32)' extern
| |-ParmVarDecl 0x8d7ea8 <col:33, col:40> col:40 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8d7f28 <main/los_compiler.h:327:23, main/los_queue.h:450:39> col:39 bufferAddr 'void *'
| |-ParmVarDecl 0x8d7fa0 <line:451:33, col:41> col:41 bufferSize 'UINT32 *'
| |-ParmVarDecl 0x8d8018 <line:452:33, col:40> col:40 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x95fdd0 <line:407:3, line:447:44>
|   |-ParagraphComment 0x95e6c0 <line:407:3>
|   | `-TextComment 0x95e690 <col:3> Text=" "
|   |-VerbatimLineComment 0x95e6e0 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x95e750 <line:408:3>
|   | `-TextComment 0x95e720 <col:3> Text=" "
|   |-BlockCommandComment 0x95e770 <col:4, col:23> Name="brief"
|   | `-ParagraphComment 0x95e7d0 <col:10, col:23>
|   |   `-TextComment 0x95e7a0 <col:10, col:23> Text=" Read a queue."
|   |-ParagraphComment 0x95e820 <line:410:3>
|   | `-TextComment 0x95e7f0 <col:3> Text=" "
|   |-BlockCommandComment 0x95e840 <col:4, line:413:3> Name="par"
|   | `-ParagraphComment 0x95e910 <line:410:8, line:413:3>
|   |   |-TextComment 0x95e870 <line:410:8, col:20> Text=" Description:"
|   |   |-TextComment 0x95e890 <line:411:3, col:107> Text=" This API is used to read data in a specified queue, and store the obtained data to the address specified"
|   |   |-TextComment 0x95e8b0 <line:412:3, col:87> Text=" by bufferAddr. The address and the size of the data to be read are defined by users."
|   |   `-TextComment 0x95e8d0 <line:413:3> Text=" "
|   |-BlockCommandComment 0x95e930 <col:4, line:422:8> Name="attention"
|   | `-ParagraphComment 0x95ef30 <line:414:3, line:422:8>
|   |   |-TextComment 0x95e960 <line:414:3> Text=" "
|   |   |-HTMLStartTagComment 0x95e980 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x95e9c0 <line:415:3> Text=" "
|   |   |-HTMLStartTagComment 0x95e9e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x95ea20 <col:8, col:52> Text="The specific queue should be created firstly."
|   |   |-HTMLEndTagComment 0x95ea40 <col:53, col:57> Name="li"
|   |   |-TextComment 0x95ea70 <line:416:3> Text=" "
|   |   |-HTMLStartTagComment 0x95ea90 <col:4, col:7> Name="li"
|   |   |-TextComment 0x95ead0 <col:8, col:113> Text="Queue reading adopts the fist in first out (FIFO) mode. The data that is first stored in the queue is read"
|   |   |-TextComment 0x95eaf0 <line:417:3, col:9> Text=" first."
|   |   |-HTMLEndTagComment 0x95eb10 <col:10, col:14> Name="li"
|   |   |-TextComment 0x95eb40 <line:418:3> Text=" "
|   |   |-HTMLStartTagComment 0x95eb60 <col:4, col:7> Name="li"
|   |   |-TextComment 0x95eba0 <col:8, col:43> Text="bufferAddr stores the obtained data."
|   |   |-HTMLEndTagComment 0x95ebc0 <col:44, col:48> Name="li"
|   |   |-TextComment 0x95ebf0 <line:419:3> Text=" "
|   |   |-HTMLStartTagComment 0x95ec10 <col:4, col:7> Name="li"
|   |   |-TextComment 0x95ec50 <col:8, col:77> Text="Do not read or write a queue in unblocking modes such as an interrupt."
|   |   |-HTMLEndTagComment 0x95ec70 <col:78, col:82> Name="li"
|   |   |-TextComment 0x95eca0 <line:420:3> Text=" "
|   |   |-HTMLStartTagComment 0x95ecc0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x95ed00 <col:8, col:73> Text="This API cannot be called before the Huawei LiteOS is initialized."
|   |   |-HTMLEndTagComment 0x95ed20 <col:74, col:78> Name="li"
|   |   |-TextComment 0x95ed50 <line:421:3> Text=" "
|   |   |-HTMLStartTagComment 0x95ed70 <col:4, col:7> Name="li"
|   |   |-TextComment 0x95edb0 <col:8, col:47> Text="The argument timeOut is a relative time."
|   |   |-HTMLEndTagComment 0x95edd0 <col:48, col:52> Name="li"
|   |   |-TextComment 0x95ee00 <line:422:3> Text=" "
|   |   `-HTMLEndTagComment 0x95ee20 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x95ef80 <line:424:3>
|   | `-TextComment 0x95ef50 <col:3> Text=" "
|   |-ParamCommandComment 0x95efa0 <col:4, line:426:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x95f080 <line:424:18, line:426:3>
|   |   |-TextComment 0x95f000 <line:424:18, col:89> Text="        [IN]     Queue ID created by LOS_QueueCreate. The value range is"
|   |   |-TextComment 0x95f020 <line:425:3, col:35> Text=" [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x95f040 <line:426:3> Text=" "
|   |-ParamCommandComment 0x95f0a0 <col:4, line:428:3> [in] implicitly Param="bufferAddr" ParamIndex=1
|   | `-ParagraphComment 0x95f180 <line:426:21, line:428:3>
|   |   |-TextComment 0x95f100 <line:426:21, col:114> Text="     [OUT]    Starting address that stores the obtained data. The starting address must not be"
|   |   |-TextComment 0x95f120 <line:427:3, col:8> Text=" null."
|   |   `-TextComment 0x95f140 <line:428:3> Text=" "
|   |-ParamCommandComment 0x95f1a0 <col:4, line:429:3> [in] implicitly Param="bufferSize" ParamIndex=2
|   | `-ParagraphComment 0x95f250 <line:428:21, line:429:3>
|   |   |-TextComment 0x95f200 <line:428:21, col:119> Text="     [IN/OUT] Where to maintain the buffer expected-size before read, and the real-size after read."
|   |   `-TextComment 0x95f220 <line:429:3> Text=" "
|   |-ParamCommandComment 0x95f270 <col:4, col:99> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0x95f300 <col:18, col:99>
|   |   `-TextComment 0x95f2d0 <col:18, col:99> Text="        [IN]     Expiry time. The value range is [0,LOS_WAIT_FOREVER](unit: Tick)."
|   |-ParagraphComment 0x95f350 <line:431:3>
|   | `-TextComment 0x95f320 <col:3> Text=" "
|   |-BlockCommandComment 0x95f370 <col:4, line:432:3> Name="retval"
|   | `-ParagraphComment 0x95f3f0 <line:431:11, line:432:3>
|   |   |-TextComment 0x95f3a0 <line:431:11, col:81> Text="   #LOS_OK                              The queue is successfully read."
|   |   `-TextComment 0x95f3c0 <line:432:3> Text=" "
|   |-BlockCommandComment 0x95f410 <col:4, line:433:3> Name="retval"
|   | `-ParagraphComment 0x95f490 <line:432:11, line:433:3>
|   |   |-TextComment 0x95f440 <line:432:11, col:104> Text="   #LOS_ERRNO_QUEUE_INVALID             The handle of the queue that is being read is invalid."
|   |   `-TextComment 0x95f460 <line:433:3> Text=" "
|   |-BlockCommandComment 0x95f4b0 <col:4, line:434:3> Name="retval"
|   | `-ParagraphComment 0x95f550 <line:433:11, line:434:3>
|   |   |-TextComment 0x95f4e0 <line:433:11, col:101> Text="   #LOS_ERRNO_QUEUE_READ_PTR_NULL       The pointer passed in during queue reading is null."
|   |   `-TextComment 0x95f520 <line:434:3> Text=" "
|   |-BlockCommandComment 0x95f570 <col:4, line:435:3> Name="retval"
|   | `-ParagraphComment 0x95f5f0 <line:434:11, line:435:3>
|   |   |-TextComment 0x95f5a0 <line:434:11, col:102> Text="   #LOS_ERRNO_QUEUE_READSIZE_ISZERO     The buffer size passed in during queue reading is 0."
|   |   `-TextComment 0x95f5c0 <line:435:3> Text=" "
|   |-BlockCommandComment 0x95f610 <col:4, line:437:3> Name="retval"
|   | `-ParagraphComment 0x95f6c0 <line:435:11, line:437:3>
|   |   |-TextComment 0x95f640 <line:435:11, col:112> Text="   #LOS_ERRNO_QUEUE_READ_IN_INTERRUPT   The queue cannot be read during an interrupt when the time for"
|   |   |-TextComment 0x95f660 <line:436:3, col:43> Text=" waiting to processing the queue expires."
|   |   `-TextComment 0x95f680 <line:437:3> Text=" "
|   |-BlockCommandComment 0x95f6e0 <col:4, line:438:3> Name="retval"
|   | `-ParagraphComment 0x95f760 <line:437:11, line:438:3>
|   |   |-TextComment 0x95f710 <line:437:11, col:86> Text="   #LOS_ERRNO_QUEUE_NOT_CREATE          The queue to be read is not created."
|   |   `-TextComment 0x95f730 <line:438:3> Text=" "
|   |-BlockCommandComment 0x95f780 <col:4, line:440:3> Name="retval"
|   | `-ParagraphComment 0x95f830 <line:438:11, line:440:3>
|   |   |-TextComment 0x95f7b0 <line:438:11, col:114> Text="   #LOS_ERRNO_QUEUE_ISEMPTY             No resource is in the queue that is being read when the time for"
|   |   |-TextComment 0x95f7d0 <line:439:3, col:43> Text=" waiting to processing the queue expires."
|   |   `-TextComment 0x95f7f0 <line:440:3> Text=" "
|   |-BlockCommandComment 0x95f850 <col:4, line:442:3> Name="retval"
|   | `-ParagraphComment 0x95f900 <line:440:11, line:442:3>
|   |   |-TextComment 0x95f880 <line:440:11, col:113> Text="   #LOS_ERRNO_QUEUE_PEND_IN_LOCK        The task is forbidden to be blocked on a queue when the task is"
|   |   |-TextComment 0x95f8a0 <line:441:3, col:10> Text=" locked."
|   |   `-TextComment 0x95f8c0 <line:442:3> Text=" "
|   |-BlockCommandComment 0x95f920 <col:4, line:443:3> Name="retval"
|   | `-ParagraphComment 0x95f9a0 <line:442:11, line:443:3>
|   |   |-TextComment 0x95f950 <line:442:11, col:107> Text="   #LOS_ERRNO_QUEUE_TIMEOUT             The time set for waiting to processing the queue expires."
|   |   `-TextComment 0x95f970 <line:443:3> Text=" "
|   |-BlockCommandComment 0x95f9c0 <col:4, line:445:3> Name="retval"
|   | `-ParagraphComment 0x95fa70 <line:443:11, line:445:3>
|   |   |-TextComment 0x95f9f0 <line:443:11, col:109> Text="   #LOS_ERRNO_QUEUE_READ_SIZE_TOO_SMALL The buffer size passed in during queue reading is less than"
|   |   |-TextComment 0x95fa10 <line:444:3, col:18> Text=" the queue size."
|   |   `-TextComment 0x95fa30 <line:445:3> Text=" "
|   |-BlockCommandComment 0x95fa90 <col:4, line:447:3> Name="par"
|   | `-ParagraphComment 0x95fc60 <line:445:8, line:447:3>
|   |   |-TextComment 0x95fac0 <line:445:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x95fae0 <line:446:3> Text=" "
|   |   |-HTMLStartTagComment 0x95fb00 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x95fb40 <col:8, col:11> Name="li"
|   |   |-TextComment 0x95fb80 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x95fba0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x95fbd0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x95fc00 <line:447:3> Text=" "
|   `-BlockCommandComment 0x95fc80 <col:4, col:44> Name="see"
|     `-ParagraphComment 0x95fce0 <col:8, col:44>
|       `-TextComment 0x95fcb0 <col:8, col:44> Text=" LOS_QueueWriteCopy | LOS_QueueCreate"
|-FunctionDecl 0x8d8508 <line:495:1, line:498:48> line:495:15 LOS_QueueWriteCopy 'UINT32 (UINT32, void *, UINT32, UINT32)' extern
| |-ParmVarDecl 0x8d8258 <col:34, col:41> col:41 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8d82d8 <main/los_compiler.h:327:23, main/los_queue.h:496:40> col:40 bufferAddr 'void *'
| |-ParmVarDecl 0x8d8350 <line:497:34, col:41> col:41 bufferSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8d83c8 <line:498:34, col:41> col:41 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x961460 <line:455:3, line:493:43>
|   |-ParagraphComment 0x95fe70 <line:455:3>
|   | `-TextComment 0x95fe40 <col:3> Text=" "
|   |-VerbatimLineComment 0x95fe90 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x95ff00 <line:456:3>
|   | `-TextComment 0x95fed0 <col:3> Text=" "
|   |-BlockCommandComment 0x95ff20 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0x95ff80 <col:10, col:34>
|   |   `-TextComment 0x95ff50 <col:10, col:34> Text=" Write data into a queue."
|   |-ParagraphComment 0x95ffd0 <line:458:3>
|   | `-TextComment 0x95ffa0 <col:3> Text=" "
|   |-BlockCommandComment 0x95fff0 <col:4, line:461:3> Name="par"
|   | `-ParagraphComment 0x9600c0 <line:458:8, line:461:3>
|   |   |-TextComment 0x960020 <line:458:8, col:20> Text=" Description:"
|   |   |-TextComment 0x960040 <line:459:3, col:112> Text=" This API is used to write the data of the size specified by bufferSize and stored at the address specified by"
|   |   |-TextComment 0x960060 <line:460:3, col:27> Text=" bufferAddr into a queue."
|   |   `-TextComment 0x960080 <line:461:3> Text=" "
|   |-BlockCommandComment 0x9600e0 <col:4, line:469:8> Name="attention"
|   | `-ParagraphComment 0x960610 <line:462:3, line:469:8>
|   |   |-TextComment 0x960110 <line:462:3> Text=" "
|   |   |-HTMLStartTagComment 0x960130 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x960170 <line:463:3> Text=" "
|   |   |-HTMLStartTagComment 0x960190 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9601d0 <col:8, col:52> Text="The specific queue should be created firstly."
|   |   |-HTMLEndTagComment 0x9601f0 <col:53, col:57> Name="li"
|   |   |-TextComment 0x960220 <line:464:3> Text=" "
|   |   |-HTMLStartTagComment 0x960240 <col:4, col:7> Name="li"
|   |   |-TextComment 0x960280 <col:8, col:74> Text="Do not read or write a queue in unblocking modes such as interrupt."
|   |   |-HTMLEndTagComment 0x9602a0 <col:75, col:79> Name="li"
|   |   |-TextComment 0x9602d0 <line:465:3> Text=" "
|   |   |-HTMLStartTagComment 0x9602f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x960330 <col:8, col:73> Text="This API cannot be called before the Huawei LiteOS is initialized."
|   |   |-HTMLEndTagComment 0x960350 <col:74, col:78> Name="li"
|   |   |-TextComment 0x960380 <line:466:3> Text=" "
|   |   |-HTMLStartTagComment 0x9603a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9603e0 <col:8, col:110> Text="The data to be written is of the size specified by bufferSize and is stored at the address specified by"
|   |   |-TextComment 0x960400 <line:467:3, col:14> Text=" BufferAddr."
|   |   |-HTMLEndTagComment 0x960420 <col:15, col:19> Name="li"
|   |   |-TextComment 0x960450 <line:468:3> Text=" "
|   |   |-HTMLStartTagComment 0x960470 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9604b0 <col:8, col:47> Text="The argument timeOut is a relative time."
|   |   |-HTMLEndTagComment 0x9604d0 <col:48, col:52> Name="li"
|   |   |-TextComment 0x960500 <line:469:3> Text=" "
|   |   `-HTMLEndTagComment 0x960520 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x960660 <line:471:3>
|   | `-TextComment 0x960630 <col:3> Text=" "
|   |-ParamCommandComment 0x960680 <col:4, line:473:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x960760 <line:471:18, line:473:3>
|   |   |-TextComment 0x9606e0 <line:471:18, col:92> Text="        [IN]        Queue ID created by LOS_QueueCreate. The value range is"
|   |   |-TextComment 0x960700 <line:472:3, col:35> Text=" [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x960720 <line:473:3> Text=" "
|   |-ParamCommandComment 0x960780 <col:4, line:475:3> [in] implicitly Param="bufferAddr" ParamIndex=1
|   | `-ParagraphComment 0x960860 <line:473:21, line:475:3>
|   |   |-TextComment 0x9607e0 <line:473:21, col:114> Text="     [IN]        Starting address that stores the data to be written.The starting address must"
|   |   |-TextComment 0x960800 <line:474:3, col:15> Text=" not be null."
|   |   `-TextComment 0x960820 <line:475:3> Text=" "
|   |-ParamCommandComment 0x960880 <col:4, line:476:3> [in] implicitly Param="bufferSize" ParamIndex=2
|   | `-ParagraphComment 0x960930 <line:475:21, line:476:3>
|   |   |-TextComment 0x9608e0 <line:475:21, col:110> Text="     [IN]        Passed-in buffer size. The value range is [1,USHRT_MAX - sizeof(UINT32)]."
|   |   `-TextComment 0x960900 <line:476:3> Text=" "
|   |-ParamCommandComment 0x960950 <col:4, col:102> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0x9609e0 <col:18, col:102>
|   |   `-TextComment 0x9609b0 <col:18, col:102> Text="        [IN]        Expiry time. The value range is [0,LOS_WAIT_FOREVER](unit: Tick)."
|   |-ParagraphComment 0x960a30 <line:478:3>
|   | `-TextComment 0x960a00 <col:3> Text=" "
|   |-BlockCommandComment 0x960a50 <col:4, line:479:3> Name="retval"
|   | `-ParagraphComment 0x960ad0 <line:478:11, line:479:3>
|   |   |-TextComment 0x960a80 <line:478:11, col:101> Text="   #LOS_OK                                 The data is successfully written into the queue."
|   |   `-TextComment 0x960aa0 <line:479:3> Text=" "
|   |-BlockCommandComment 0x960af0 <col:4, line:480:3> Name="retval"
|   | `-ParagraphComment 0x960b70 <line:479:11, line:480:3>
|   |   |-TextComment 0x960b20 <line:479:11, col:112> Text="   #LOS_ERRNO_QUEUE_INVALID                The queue handle passed in during queue writing is invalid."
|   |   `-TextComment 0x960b40 <line:480:3> Text=" "
|   |-BlockCommandComment 0x960b90 <col:4, line:481:3> Name="retval"
|   | `-ParagraphComment 0x960c10 <line:480:11, line:481:3>
|   |   |-TextComment 0x960bc0 <line:480:11, col:104> Text="   #LOS_ERRNO_QUEUE_WRITE_PTR_NULL         The pointer passed in during queue writing is null."
|   |   `-TextComment 0x960be0 <line:481:3> Text=" "
|   |-BlockCommandComment 0x960c30 <col:4, line:482:3> Name="retval"
|   | `-ParagraphComment 0x960cb0 <line:481:11, line:482:3>
|   |   |-TextComment 0x960c60 <line:481:11, col:105> Text="   #LOS_ERRNO_QUEUE_WRITESIZE_ISZERO       The buffer size passed in during queue writing is 0."
|   |   `-TextComment 0x960c80 <line:482:3> Text=" "
|   |-BlockCommandComment 0x960cd0 <col:4, line:484:3> Name="retval"
|   | `-ParagraphComment 0x960d80 <line:482:11, line:484:3>
|   |   |-TextComment 0x960d00 <line:482:11, col:114> Text="   #LOS_ERRNO_QUEUE_WRITE_IN_INTERRUPT     The queue cannot be written during an interrupt when the time"
|   |   |-TextComment 0x960d20 <line:483:3, col:47> Text=" for waiting to processing the queue expires."
|   |   `-TextComment 0x960d40 <line:484:3> Text=" "
|   |-BlockCommandComment 0x960da0 <col:4, line:485:3> Name="retval"
|   | `-ParagraphComment 0x960e20 <line:484:11, line:485:3>
|   |   |-TextComment 0x960dd0 <line:484:11, col:109> Text="   #LOS_ERRNO_QUEUE_NOT_CREATE             The queue into which the data is written is not created."
|   |   `-TextComment 0x960df0 <line:485:3> Text=" "
|   |-BlockCommandComment 0x960e40 <col:4, line:487:3> Name="retval"
|   | `-ParagraphComment 0x960ef0 <line:485:11, line:487:3>
|   |   |-TextComment 0x960e70 <line:485:11, col:114> Text="   #LOS_ERRNO_QUEUE_WRITE_SIZE_TOO_BIG     The buffer size passed in during queue writing is bigger than"
|   |   |-TextComment 0x960e90 <line:486:3, col:18> Text=" the queue size."
|   |   `-TextComment 0x960eb0 <line:487:3> Text=" "
|   |-BlockCommandComment 0x960f10 <col:4, line:488:3> Name="retval"
|   | `-ParagraphComment 0x960f90 <line:487:11, line:488:3>
|   |   |-TextComment 0x960f40 <line:487:11, col:100> Text="   #LOS_ERRNO_QUEUE_ISFULL                 No free node is available during queue writing."
|   |   `-TextComment 0x960f60 <line:488:3> Text=" "
|   |-BlockCommandComment 0x960fb0 <col:4, line:490:3> Name="retval"
|   | `-ParagraphComment 0x961060 <line:488:11, line:490:3>
|   |   |-TextComment 0x960fe0 <line:488:11, col:104> Text="   #LOS_ERRNO_QUEUE_PEND_IN_LOCK           The task is forbidden to be blocked on a queue when"
|   |   |-TextComment 0x961000 <line:489:3, col:22> Text=" the task is locked."
|   |   `-TextComment 0x961020 <line:490:3> Text=" "
|   |-BlockCommandComment 0x961080 <col:4, line:491:3> Name="retval"
|   | `-ParagraphComment 0x961100 <line:490:11, line:491:3>
|   |   |-TextComment 0x9610b0 <line:490:11, col:110> Text="   #LOS_ERRNO_QUEUE_TIMEOUT                The time set for waiting to processing the queue expires."
|   |   `-TextComment 0x9610d0 <line:491:3> Text=" "
|   |-BlockCommandComment 0x961120 <col:4, line:493:3> Name="par"
|   | `-ParagraphComment 0x9612f0 <line:491:8, line:493:3>
|   |   |-TextComment 0x961150 <line:491:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x961170 <line:492:3> Text=" "
|   |   |-HTMLStartTagComment 0x961190 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x9611d0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x961210 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x961230 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x961260 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x961290 <line:493:3> Text=" "
|   `-BlockCommandComment 0x961310 <col:4, col:43> Name="see"
|     `-ParagraphComment 0x961370 <col:8, col:43>
|       `-TextComment 0x961340 <col:8, col:43> Text=" LOS_QueueReadCopy | LOS_QueueCreate"
|-FunctionDecl 0x8d8820 <line:544:1, line:547:43> line:544:15 LOS_QueueRead 'UINT32 (UINT32, void *, UINT32, UINT32)' extern
| |-ParmVarDecl 0x8d8608 <col:29, col:36> col:36 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8d8688 <main/los_compiler.h:327:23, main/los_queue.h:545:35> col:35 bufferAddr 'void *'
| |-ParmVarDecl 0x8d8700 <line:546:29, col:36> col:36 bufferSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8d8778 <line:547:29, col:36> col:36 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x962cf0 <line:501:3, line:542:40>
|   |-ParagraphComment 0x961500 <line:501:3>
|   | `-TextComment 0x9614d0 <col:3> Text=" "
|   |-VerbatimLineComment 0x961530 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x9615a0 <line:502:3>
|   | `-TextComment 0x961570 <col:3> Text=" "
|   |-BlockCommandComment 0x9615c0 <col:4, col:23> Name="brief"
|   | `-ParagraphComment 0x961620 <col:10, col:23>
|   |   `-TextComment 0x9615f0 <col:10, col:23> Text=" Read a queue."
|   |-ParagraphComment 0x961670 <line:504:3>
|   | `-TextComment 0x961640 <col:3> Text=" "
|   |-BlockCommandComment 0x961690 <col:4, line:507:3> Name="par"
|   | `-ParagraphComment 0x961760 <line:504:8, line:507:3>
|   |   |-TextComment 0x9616c0 <line:504:8, col:20> Text=" Description:"
|   |   |-TextComment 0x9616e0 <line:505:3, col:110> Text=" This API is used to read the address of data in a specified queue, and store it to the address specified by"
|   |   |-TextComment 0x961700 <line:506:3, col:14> Text=" bufferAddr."
|   |   `-TextComment 0x961720 <line:507:3> Text=" "
|   |-BlockCommandComment 0x961780 <col:4, line:519:8> Name="attention"
|   | `-ParagraphComment 0x961f50 <line:508:3, line:519:8>
|   |   |-TextComment 0x9617b0 <line:508:3> Text=" "
|   |   |-HTMLStartTagComment 0x9617d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x961810 <line:509:3> Text=" "
|   |   |-HTMLStartTagComment 0x961830 <col:4, col:7> Name="li"
|   |   |-TextComment 0x961870 <col:8, col:52> Text="The specific queue should be created firstly."
|   |   |-HTMLEndTagComment 0x961890 <col:53, col:57> Name="li"
|   |   |-TextComment 0x9618c0 <line:510:3> Text=" "
|   |   |-HTMLStartTagComment 0x9618e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x961920 <col:8, col:108> Text="Queue reading adopts the fist in first out (FIFO) mode. The data that is first stored in the queue is"
|   |   |-TextComment 0x961940 <line:511:3, col:14> Text=" read first."
|   |   |-HTMLEndTagComment 0x961960 <col:15, col:19> Name="li"
|   |   |-TextComment 0x961990 <line:512:3> Text=" "
|   |   |-HTMLStartTagComment 0x9619b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9619f0 <col:8, col:51> Text="bufferAddr stores the obtained data address."
|   |   |-HTMLEndTagComment 0x961a10 <col:52, col:56> Name="li"
|   |   |-TextComment 0x961a40 <line:513:3> Text=" "
|   |   |-HTMLStartTagComment 0x961a60 <col:4, col:7> Name="li"
|   |   |-TextComment 0x961aa0 <col:8, col:77> Text="Do not read or write a queue in unblocking modes such as an interrupt."
|   |   |-HTMLEndTagComment 0x961ac0 <col:78, col:82> Name="li"
|   |   |-TextComment 0x961af0 <line:514:3> Text=" "
|   |   |-HTMLStartTagComment 0x961b10 <col:4, col:7> Name="li"
|   |   |-TextComment 0x961b50 <col:8, col:73> Text="This API cannot be called before the Huawei LiteOS is initialized."
|   |   |-HTMLEndTagComment 0x961b70 <col:74, col:78> Name="li"
|   |   |-TextComment 0x961ba0 <line:515:3> Text=" "
|   |   |-HTMLStartTagComment 0x961bc0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x961c00 <col:8, col:47> Text="The argument timeOut is a relative time."
|   |   |-HTMLEndTagComment 0x961c20 <col:48, col:52> Name="li"
|   |   |-TextComment 0x961c50 <line:516:3> Text=" "
|   |   |-HTMLStartTagComment 0x961c70 <col:4, col:7> Name="li"
|   |   |-TextComment 0x961cb0 <col:8, col:96> Text="The bufferSize is not really used in LOS_QueueRead, because the interface is only used to"
|   |   |-TextComment 0x961cd0 <line:517:3, col:30> Text=" obtain the address of data."
|   |   |-HTMLEndTagComment 0x961cf0 <col:31, col:35> Name="li"
|   |   |-TextComment 0x961d20 <line:518:3> Text=" "
|   |   |-HTMLStartTagComment 0x961d40 <col:4, col:7> Name="li"
|   |   |-TextComment 0x961d80 <col:8, col:92> Text="The buffer which the bufferAddr pointing to must be greater than or equal to 4 bytes."
|   |   |-HTMLEndTagComment 0x961da0 <col:93, col:97> Name="li"
|   |   |-TextComment 0x961dd0 <line:519:3> Text=" "
|   |   `-HTMLEndTagComment 0x961df0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x961fa0 <line:521:3>
|   | `-TextComment 0x961f70 <col:3> Text=" "
|   |-ParamCommandComment 0x961fc0 <col:4, line:523:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x9620a0 <line:521:18, line:523:3>
|   |   |-TextComment 0x962020 <line:521:18, col:92> Text="        [IN]        Queue ID created by LOS_QueueCreate. The value range is"
|   |   |-TextComment 0x962040 <line:522:3, col:35> Text=" [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x962060 <line:523:3> Text=" "
|   |-ParamCommandComment 0x9620c0 <col:4, line:525:3> [in] implicitly Param="bufferAddr" ParamIndex=1
|   | `-ParagraphComment 0x9621a0 <line:523:21, line:525:3>
|   |   |-TextComment 0x962120 <line:523:21, col:110> Text="     [OUT]       Starting address that stores the obtained data. The starting address must"
|   |   |-TextComment 0x962140 <line:524:3, col:15> Text=" not be null."
|   |   `-TextComment 0x962160 <line:525:3> Text=" "
|   |-ParamCommandComment 0x9621c0 <col:4, line:526:3> [in] implicitly Param="bufferSize" ParamIndex=2
|   | `-ParagraphComment 0x962270 <line:525:21, line:526:3>
|   |   |-TextComment 0x962220 <line:525:21, col:115> Text="     [IN]        Passed-in buffer size, which must not be 0. The value range is [1,0xffffffff]."
|   |   `-TextComment 0x962240 <line:526:3> Text=" "
|   |-ParamCommandComment 0x962290 <col:4, col:102> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0x962320 <col:18, col:102>
|   |   `-TextComment 0x9622f0 <col:18, col:102> Text="        [IN]        Expiry time. The value range is [0,LOS_WAIT_FOREVER](unit: Tick)."
|   |-ParagraphComment 0x962370 <line:528:3>
|   | `-TextComment 0x962340 <col:3> Text=" "
|   |-BlockCommandComment 0x962390 <col:4, line:529:3> Name="retval"
|   | `-ParagraphComment 0x962410 <line:528:11, line:529:3>
|   |   |-TextComment 0x9623c0 <line:528:11, col:82> Text="   #LOS_OK                               The queue is successfully read."
|   |   `-TextComment 0x9623e0 <line:529:3> Text=" "
|   |-BlockCommandComment 0x962430 <col:4, line:530:3> Name="retval"
|   | `-ParagraphComment 0x9624b0 <line:529:11, line:530:3>
|   |   |-TextComment 0x962460 <line:529:11, col:105> Text="   #LOS_ERRNO_QUEUE_INVALID              The handle of the queue that is being read is invalid."
|   |   `-TextComment 0x962480 <line:530:3> Text=" "
|   |-BlockCommandComment 0x9624d0 <col:4, line:531:3> Name="retval"
|   | `-ParagraphComment 0x962550 <line:530:11, line:531:3>
|   |   |-TextComment 0x962500 <line:530:11, col:102> Text="   #LOS_ERRNO_QUEUE_READ_PTR_NULL        The pointer passed in during queue reading is null."
|   |   `-TextComment 0x962520 <line:531:3> Text=" "
|   |-BlockCommandComment 0x962570 <col:4, line:532:3> Name="retval"
|   | `-ParagraphComment 0x9625f0 <line:531:11, line:532:3>
|   |   |-TextComment 0x9625a0 <line:531:11, col:103> Text="   #LOS_ERRNO_QUEUE_READSIZE_ISZERO      The buffer size passed in during queue reading is 0."
|   |   `-TextComment 0x9625c0 <line:532:3> Text=" "
|   |-BlockCommandComment 0x962610 <col:4, line:534:3> Name="retval"
|   | `-ParagraphComment 0x9626c0 <line:532:11, line:534:3>
|   |   |-TextComment 0x962640 <line:532:11, col:113> Text="   #LOS_ERRNO_QUEUE_READ_IN_INTERRUPT    The queue cannot be read during an interrupt when the time for"
|   |   |-TextComment 0x962660 <line:533:3, col:43> Text=" waiting to processing the queue expires."
|   |   `-TextComment 0x962680 <line:534:3> Text=" "
|   |-BlockCommandComment 0x9626e0 <col:4, line:535:3> Name="retval"
|   | `-ParagraphComment 0x962760 <line:534:11, line:535:3>
|   |   |-TextComment 0x962710 <line:534:11, col:87> Text="   #LOS_ERRNO_QUEUE_NOT_CREATE           The queue to be read is not created."
|   |   `-TextComment 0x962730 <line:535:3> Text=" "
|   |-BlockCommandComment 0x962780 <col:4, line:537:3> Name="retval"
|   | `-ParagraphComment 0x962830 <line:535:11, line:537:3>
|   |   |-TextComment 0x9627b0 <line:535:11, col:115> Text="   #LOS_ERRNO_QUEUE_ISEMPTY              No resource is in the queue that is being read when the time for"
|   |   |-TextComment 0x9627d0 <line:536:3, col:43> Text=" waiting to processing the queue expires."
|   |   `-TextComment 0x9627f0 <line:537:3> Text=" "
|   |-BlockCommandComment 0x962850 <col:4, line:539:3> Name="retval"
|   | `-ParagraphComment 0x962900 <line:537:11, line:539:3>
|   |   |-TextComment 0x962880 <line:537:11, col:114> Text="   #LOS_ERRNO_QUEUE_PEND_IN_LOCK         The task is forbidden to be blocked on a queue when the task is"
|   |   |-TextComment 0x9628a0 <line:538:3, col:10> Text=" locked."
|   |   `-TextComment 0x9628c0 <line:539:3> Text=" "
|   |-BlockCommandComment 0x962920 <col:4, line:540:3> Name="retval"
|   | `-ParagraphComment 0x9629a0 <line:539:11, line:540:3>
|   |   |-TextComment 0x962950 <line:539:11, col:108> Text="   #LOS_ERRNO_QUEUE_TIMEOUT              The time set for waiting to processing the queue expires."
|   |   `-TextComment 0x962970 <line:540:3> Text=" "
|   |-BlockCommandComment 0x9629c0 <col:4, line:542:3> Name="par"
|   | `-ParagraphComment 0x962b90 <line:540:8, line:542:3>
|   |   |-TextComment 0x9629f0 <line:540:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x962a10 <line:541:3> Text=" "
|   |   |-HTMLStartTagComment 0x962a30 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x962a70 <col:8, col:11> Name="li"
|   |   |-TextComment 0x962ab0 <col:12, col:74> Text="los_queue.h: The header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x962ad0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x962b00 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x962b30 <line:542:3> Text=" "
|   `-BlockCommandComment 0x962bb0 <col:4, col:40> Name="see"
|     `-ParagraphComment 0x962c10 <col:8, col:40>
|       `-TextComment 0x962be0 <col:8, col:40> Text=" LOS_QueueWrite | LOS_QueueCreate"
|-FunctionDecl 0x8d8b30 <line:591:1, line:594:44> line:591:15 LOS_QueueWrite 'UINT32 (UINT32, void *, UINT32, UINT32)' extern
| |-ParmVarDecl 0x8d8918 <col:30, col:37> col:37 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8d8998 <main/los_compiler.h:327:23, main/los_queue.h:592:36> col:36 bufferAddr 'void *'
| |-ParmVarDecl 0x8d8a10 <line:593:30, col:37> col:37 bufferSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8d8a88 <line:594:30, col:37> col:37 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x964480 <line:550:3, line:589:39>
|   |-ParagraphComment 0x962d90 <line:550:3>
|   | `-TextComment 0x962d60 <col:3> Text=" "
|   |-VerbatimLineComment 0x962db0 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x962e20 <line:551:3>
|   | `-TextComment 0x962df0 <col:3> Text=" "
|   |-BlockCommandComment 0x962e40 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0x962ea0 <col:10, col:34>
|   |   `-TextComment 0x962e70 <col:10, col:34> Text=" Write data into a queue."
|   |-ParagraphComment 0x962ef0 <line:553:3>
|   | `-TextComment 0x962ec0 <col:3> Text=" "
|   |-BlockCommandComment 0x962f10 <col:4, line:555:3> Name="par"
|   | `-ParagraphComment 0x962fc0 <line:553:8, line:555:3>
|   |   |-TextComment 0x962f40 <line:553:8, col:20> Text=" Description:"
|   |   |-TextComment 0x962f60 <line:554:3, col:86> Text=" This API is used to write the address of data specified by bufferAddr into a queue."
|   |   `-TextComment 0x962f80 <line:555:3> Text=" "
|   |-BlockCommandComment 0x962fe0 <col:4, line:565:8> Name="attention"
|   | `-ParagraphComment 0x963630 <line:556:3, line:565:8>
|   |   |-TextComment 0x963010 <line:556:3> Text=" "
|   |   |-HTMLStartTagComment 0x963030 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x963070 <line:557:3> Text=" "
|   |   |-HTMLStartTagComment 0x963090 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9630d0 <col:8, col:52> Text="The specific queue should be created firstly."
|   |   |-HTMLEndTagComment 0x9630f0 <col:53, col:57> Name="li"
|   |   |-TextComment 0x963120 <line:558:3> Text=" "
|   |   |-HTMLStartTagComment 0x963140 <col:4, col:7> Name="li"
|   |   |-TextComment 0x963180 <col:8, col:77> Text="Do not read or write a queue in unblocking modes such as an interrupt."
|   |   |-HTMLEndTagComment 0x9631a0 <col:78, col:82> Name="li"
|   |   |-TextComment 0x9631d0 <line:559:3> Text=" "
|   |   |-HTMLStartTagComment 0x9631f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x963230 <col:8, col:73> Text="This API cannot be called before the Huawei LiteOS is initialized."
|   |   |-HTMLEndTagComment 0x963250 <col:74, col:78> Name="li"
|   |   |-TextComment 0x963280 <line:560:3> Text=" "
|   |   |-HTMLStartTagComment 0x9632a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9632e0 <col:8, col:105> Text="The address of the data of the size specified by bufferSize and stored at the address specified by"
|   |   |-TextComment 0x963300 <line:561:3, col:31> Text=" BufferAddr is to be written."
|   |   |-HTMLEndTagComment 0x963320 <col:32, col:36> Name="li"
|   |   |-TextComment 0x963350 <line:562:3> Text=" "
|   |   |-HTMLStartTagComment 0x963370 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9633b0 <col:8, col:47> Text="The argument timeOut is a relative time."
|   |   |-HTMLEndTagComment 0x9633d0 <col:48, col:52> Name="li"
|   |   |-TextComment 0x963400 <line:563:3> Text=" "
|   |   |-HTMLStartTagComment 0x963420 <col:4, col:7> Name="li"
|   |   |-TextComment 0x963460 <col:8, col:115> Text="The bufferSize is not really used in LOS_QueueWrite, because the interface is only used to write the address"
|   |   |-TextComment 0x963480 <line:564:3, col:48> Text=" of data specified by bufferAddr into a queue."
|   |   |-HTMLEndTagComment 0x9634a0 <col:49, col:53> Name="li"
|   |   |-TextComment 0x9634d0 <line:565:3> Text=" "
|   |   `-HTMLEndTagComment 0x9634f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x963680 <line:567:3>
|   | `-TextComment 0x963650 <col:3> Text=" "
|   |-ParamCommandComment 0x9636a0 <col:4, line:569:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x963780 <line:567:18, line:569:3>
|   |   |-TextComment 0x963700 <line:567:18, col:92> Text="        [IN]        Queue ID created by LOS_QueueCreate. The value range is"
|   |   |-TextComment 0x963720 <line:568:3, col:35> Text=" [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x963740 <line:569:3> Text=" "
|   |-ParamCommandComment 0x9637a0 <col:4, line:571:3> [in] implicitly Param="bufferAddr" ParamIndex=1
|   | `-ParagraphComment 0x963880 <line:569:21, line:571:3>
|   |   |-TextComment 0x963800 <line:569:21, col:110> Text="     [IN]        Starting address that stores the data to be written. The starting address"
|   |   |-TextComment 0x963820 <line:570:3, col:20> Text=" must not be null."
|   |   `-TextComment 0x963840 <line:571:3> Text=" "
|   |-ParamCommandComment 0x9638a0 <col:4, line:572:3> [in] implicitly Param="bufferSize" ParamIndex=2
|   | `-ParagraphComment 0x963950 <line:571:21, line:572:3>
|   |   |-TextComment 0x963900 <line:571:21, col:115> Text="     [IN]        Passed-in buffer size, which must not be 0. The value range is [1,0xffffffff]."
|   |   `-TextComment 0x963920 <line:572:3> Text=" "
|   |-ParamCommandComment 0x963970 <col:4, col:102> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0x963a00 <col:18, col:102>
|   |   `-TextComment 0x9639d0 <col:18, col:102> Text="        [IN]        Expiry time. The value range is [0,LOS_WAIT_FOREVER](unit: Tick)."
|   |-ParagraphComment 0x963a50 <line:574:3>
|   | `-TextComment 0x963a20 <col:3> Text=" "
|   |-BlockCommandComment 0x963a70 <col:4, line:575:3> Name="retval"
|   | `-ParagraphComment 0x963af0 <line:574:11, line:575:3>
|   |   |-TextComment 0x963aa0 <line:574:11, col:100> Text="   #LOS_OK                                The data is successfully written into the queue."
|   |   `-TextComment 0x963ac0 <line:575:3> Text=" "
|   |-BlockCommandComment 0x963b10 <col:4, line:576:3> Name="retval"
|   | `-ParagraphComment 0x963b90 <line:575:11, line:576:3>
|   |   |-TextComment 0x963b40 <line:575:11, col:111> Text="   #LOS_ERRNO_QUEUE_INVALID               The queue handle passed in during queue writing is invalid."
|   |   `-TextComment 0x963b60 <line:576:3> Text=" "
|   |-BlockCommandComment 0x963bb0 <col:4, line:577:3> Name="retval"
|   | `-ParagraphComment 0x963c30 <line:576:11, line:577:3>
|   |   |-TextComment 0x963be0 <line:576:11, col:103> Text="   #LOS_ERRNO_QUEUE_WRITE_PTR_NULL        The pointer passed in during queue writing is null."
|   |   `-TextComment 0x963c00 <line:577:3> Text=" "
|   |-BlockCommandComment 0x963c50 <col:4, line:578:3> Name="retval"
|   | `-ParagraphComment 0x963cd0 <line:577:11, line:578:3>
|   |   |-TextComment 0x963c80 <line:577:11, col:104> Text="   #LOS_ERRNO_QUEUE_WRITESIZE_ISZERO      The buffer size passed in during queue writing is 0."
|   |   `-TextComment 0x963ca0 <line:578:3> Text=" "
|   |-BlockCommandComment 0x963cf0 <col:4, line:580:3> Name="retval"
|   | `-ParagraphComment 0x963da0 <line:578:11, line:580:3>
|   |   |-TextComment 0x963d20 <line:578:11, col:117> Text="   #LOS_ERRNO_QUEUE_WRITE_IN_INTERRUPT    The queue cannot be written during an interrupt when the time for"
|   |   |-TextComment 0x963d40 <line:579:3, col:43> Text=" waiting to processing the queue expires."
|   |   `-TextComment 0x963d60 <line:580:3> Text=" "
|   |-BlockCommandComment 0x963dc0 <col:4, line:581:3> Name="retval"
|   | `-ParagraphComment 0x963e40 <line:580:11, line:581:3>
|   |   |-TextComment 0x963df0 <line:580:11, col:108> Text="   #LOS_ERRNO_QUEUE_NOT_CREATE            The queue into which the data is written is not created."
|   |   `-TextComment 0x963e10 <line:581:3> Text=" "
|   |-BlockCommandComment 0x963e60 <col:4, line:583:3> Name="retval"
|   | `-ParagraphComment 0x963f10 <line:581:11, line:583:3>
|   |   |-TextComment 0x963e90 <line:581:11, col:113> Text="   #LOS_ERRNO_QUEUE_WRITE_SIZE_TOO_BIG    The buffer size passed in during queue writing is bigger than"
|   |   |-TextComment 0x963eb0 <line:582:3, col:18> Text=" the queue size."
|   |   `-TextComment 0x963ed0 <line:583:3> Text=" "
|   |-BlockCommandComment 0x963f30 <col:4, line:584:3> Name="retval"
|   | `-ParagraphComment 0x963fb0 <line:583:11, line:584:3>
|   |   |-TextComment 0x963f60 <line:583:11, col:99> Text="   #LOS_ERRNO_QUEUE_ISFULL                No free node is available during queue writing."
|   |   `-TextComment 0x963f80 <line:584:3> Text=" "
|   |-BlockCommandComment 0x963fd0 <col:4, line:586:3> Name="retval"
|   | `-ParagraphComment 0x964080 <line:584:11, line:586:3>
|   |   |-TextComment 0x964000 <line:584:11, col:115> Text="   #LOS_ERRNO_QUEUE_PEND_IN_LOCK          The task is forbidden to be blocked on a queue when the task is"
|   |   |-TextComment 0x964020 <line:585:3, col:10> Text=" locked."
|   |   `-TextComment 0x964040 <line:586:3> Text=" "
|   |-BlockCommandComment 0x9640a0 <col:4, line:587:3> Name="retval"
|   | `-ParagraphComment 0x964120 <line:586:11, line:587:3>
|   |   |-TextComment 0x9640d0 <line:586:11, col:109> Text="   #LOS_ERRNO_QUEUE_TIMEOUT               The time set for waiting to processing the queue expires."
|   |   `-TextComment 0x9640f0 <line:587:3> Text=" "
|   |-BlockCommandComment 0x964140 <col:4, line:589:3> Name="par"
|   | `-ParagraphComment 0x964310 <line:587:8, line:589:3>
|   |   |-TextComment 0x964170 <line:587:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x964190 <line:588:3> Text=" "
|   |   |-HTMLStartTagComment 0x9641b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x9641f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x964230 <col:12, col:74> Text="los_queue.h: The header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x964250 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x964280 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x9642b0 <line:589:3> Text=" "
|   `-BlockCommandComment 0x964330 <col:4, col:39> Name="see"
|     `-ParagraphComment 0x964390 <col:8, col:39>
|       `-TextComment 0x964360 <col:8, col:39> Text=" LOS_QueueRead | LOS_QueueCreate"
|-FunctionDecl 0x8d8f60 <line:638:1, line:641:48> line:638:15 LOS_QueueWriteHead 'UINT32 (UINT32, void *, UINT32, UINT32)' extern
| |-ParmVarDecl 0x8d8d48 <col:34, col:41> col:41 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8d8dc8 <main/los_compiler.h:327:23, main/los_queue.h:639:40> col:40 bufferAddr 'void *'
| |-ParmVarDecl 0x8d8e40 <line:640:34, col:41> col:41 bufferSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8d8eb8 <line:641:34, col:41> col:41 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x965b70 <line:597:3, line:636:39>
|   |-ParagraphComment 0x964520 <line:597:3>
|   | `-TextComment 0x9644f0 <col:3> Text=" "
|   |-VerbatimLineComment 0x964540 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x9645b0 <line:598:3>
|   | `-TextComment 0x964580 <col:3> Text=" "
|   |-BlockCommandComment 0x9645d0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x964630 <col:10, col:41>
|   |   `-TextComment 0x964600 <col:10, col:41> Text=" Write data into a queue header."
|   |-ParagraphComment 0x964680 <line:600:3>
|   | `-TextComment 0x964650 <col:3> Text=" "
|   |-BlockCommandComment 0x9646a0 <col:4, line:603:3> Name="par"
|   | `-ParagraphComment 0x964770 <line:600:8, line:603:3>
|   |   |-TextComment 0x9646d0 <line:600:8, col:20> Text=" Description:"
|   |   |-TextComment 0x9646f0 <line:601:3, col:112> Text=" This API is used to write the data of the size specified by bufferSize and stored at the address specified by"
|   |   |-TextComment 0x964710 <line:602:3, col:34> Text=" bufferAddr into a queue header."
|   |   `-TextComment 0x964730 <line:603:3> Text=" "
|   |-BlockCommandComment 0x964790 <col:4, line:612:8> Name="attention"
|   | `-ParagraphComment 0x964d00 <line:604:3, line:612:8>
|   |   |-TextComment 0x9647c0 <line:604:3> Text=" "
|   |   |-HTMLStartTagComment 0x9647e0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x964820 <line:605:3> Text=" "
|   |   |-HTMLStartTagComment 0x964840 <col:4, col:7> Name="li"
|   |   |-TextComment 0x964880 <col:8, col:77> Text="Do not read or write a queue in unblocking modes such as an interrupt."
|   |   |-HTMLEndTagComment 0x9648a0 <col:78, col:82> Name="li"
|   |   |-TextComment 0x9648d0 <line:606:3> Text=" "
|   |   |-HTMLStartTagComment 0x9648f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x964930 <col:8, col:73> Text="This API cannot be called before the Huawei LiteOS is initialized."
|   |   |-HTMLEndTagComment 0x964950 <col:74, col:78> Name="li"
|   |   |-TextComment 0x964980 <line:607:3> Text=" "
|   |   |-HTMLStartTagComment 0x9649a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9649e0 <col:8, col:105> Text="The address of the data of the size specified by bufferSize and stored at the address specified by"
|   |   |-TextComment 0x964a00 <line:608:3, col:31> Text=" BufferAddr is to be written."
|   |   |-HTMLEndTagComment 0x964a20 <col:32, col:36> Name="li"
|   |   |-TextComment 0x964a50 <line:609:3> Text=" "
|   |   |-HTMLStartTagComment 0x964a70 <col:4, col:7> Name="li"
|   |   |-TextComment 0x964ab0 <col:8, col:47> Text="The argument timeOut is a relative time."
|   |   |-HTMLEndTagComment 0x964ad0 <col:48, col:52> Name="li"
|   |   |-TextComment 0x964b00 <line:610:3> Text=" "
|   |   |-HTMLStartTagComment 0x964b20 <col:4, col:7> Name="li"
|   |   |-TextComment 0x964b60 <col:8, col:118> Text="LOS_QueueRead and LOS_QueueWriteHead are a set of interfaces, and the two groups of interfaces need to be used."
|   |   |-TextComment 0x964b80 <line:611:3> Text=" "
|   |   |-HTMLStartTagComment 0x964ba0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x964be0 <line:612:3> Text=" "
|   |   `-HTMLEndTagComment 0x964c00 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x964d50 <line:614:3>
|   | `-TextComment 0x964d20 <col:3> Text=" "
|   |-ParamCommandComment 0x964d70 <col:4, line:616:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x964e50 <line:614:18, line:616:3>
|   |   |-TextComment 0x964dd0 <line:614:18, col:92> Text="        [IN]        Queue ID created by LOS_QueueCreate. The value range is"
|   |   |-TextComment 0x964df0 <line:615:3, col:35> Text=" [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x964e10 <line:616:3> Text=" "
|   |-ParamCommandComment 0x964e70 <col:4, line:618:3> [in] implicitly Param="bufferAddr" ParamIndex=1
|   | `-ParagraphComment 0x964f50 <line:616:21, line:618:3>
|   |   |-TextComment 0x964ed0 <line:616:21, col:110> Text="     [OUT]       Starting address that stores the data to be written. The starting address"
|   |   |-TextComment 0x964ef0 <line:617:3, col:20> Text=" must not be null."
|   |   `-TextComment 0x964f10 <line:618:3> Text=" "
|   |-ParamCommandComment 0x964f70 <col:4, line:619:3> [in] implicitly Param="bufferSize" ParamIndex=2
|   | `-ParagraphComment 0x965020 <line:618:21, line:619:3>
|   |   |-TextComment 0x964fd0 <line:618:21, col:115> Text="     [IN]        Passed-in buffer size, which must not be 0. The value range is [1,0xffffffff]."
|   |   `-TextComment 0x964ff0 <line:619:3> Text=" "
|   |-ParamCommandComment 0x965040 <col:4, col:102> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0x9650d0 <col:18, col:102>
|   |   `-TextComment 0x9650a0 <col:18, col:102> Text="        [IN]        Expiry time. The value range is [0,LOS_WAIT_FOREVER](unit: Tick)."
|   |-ParagraphComment 0x965120 <line:621:3>
|   | `-TextComment 0x9650f0 <col:3> Text=" "
|   |-BlockCommandComment 0x965140 <col:4, line:622:3> Name="retval"
|   | `-ParagraphComment 0x9651c0 <line:621:11, line:622:3>
|   |   |-TextComment 0x965170 <line:621:11, col:101> Text="   #LOS_OK                                 The data is successfully written into the queue."
|   |   `-TextComment 0x965190 <line:622:3> Text=" "
|   |-BlockCommandComment 0x9651e0 <col:4, line:623:3> Name="retval"
|   | `-ParagraphComment 0x965260 <line:622:11, line:623:3>
|   |   |-TextComment 0x965210 <line:622:11, col:112> Text="   #LOS_ERRNO_QUEUE_INVALID                The queue handle passed in during queue writing is invalid."
|   |   `-TextComment 0x965230 <line:623:3> Text=" "
|   |-BlockCommandComment 0x965280 <col:4, line:624:3> Name="retval"
|   | `-ParagraphComment 0x965300 <line:623:11, line:624:3>
|   |   |-TextComment 0x9652b0 <line:623:11, col:104> Text="   #LOS_ERRNO_QUEUE_WRITE_PTR_NULL         The pointer passed in during queue writing is null."
|   |   `-TextComment 0x9652d0 <line:624:3> Text=" "
|   |-BlockCommandComment 0x965320 <col:4, line:625:3> Name="retval"
|   | `-ParagraphComment 0x9653a0 <line:624:11, line:625:3>
|   |   |-TextComment 0x965350 <line:624:11, col:105> Text="   #LOS_ERRNO_QUEUE_WRITESIZE_ISZERO       The buffer size passed in during queue writing is 0."
|   |   `-TextComment 0x965370 <line:625:3> Text=" "
|   |-BlockCommandComment 0x9653c0 <col:4, line:627:3> Name="retval"
|   | `-ParagraphComment 0x965470 <line:625:11, line:627:3>
|   |   |-TextComment 0x9653f0 <line:625:11, col:118> Text="   #LOS_ERRNO_QUEUE_WRITE_IN_INTERRUPT     The queue cannot be written during an interrupt when the time for"
|   |   |-TextComment 0x965410 <line:626:3, col:43> Text=" waiting to processing the queue expires."
|   |   `-TextComment 0x965430 <line:627:3> Text=" "
|   |-BlockCommandComment 0x965490 <col:4, line:628:3> Name="retval"
|   | `-ParagraphComment 0x965510 <line:627:11, line:628:3>
|   |   |-TextComment 0x9654c0 <line:627:11, col:109> Text="   #LOS_ERRNO_QUEUE_NOT_CREATE             The queue into which the data is written is not created."
|   |   `-TextComment 0x9654e0 <line:628:3> Text=" "
|   |-BlockCommandComment 0x965550 <col:4, line:630:3> Name="retval"
|   | `-ParagraphComment 0x965600 <line:628:11, line:630:3>
|   |   |-TextComment 0x965580 <line:628:11, col:114> Text="   #LOS_ERRNO_QUEUE_WRITE_SIZE_TOO_BIG     The buffer size passed in during queue writing is bigger than"
|   |   |-TextComment 0x9655a0 <line:629:3, col:18> Text=" the queue size."
|   |   `-TextComment 0x9655c0 <line:630:3> Text=" "
|   |-BlockCommandComment 0x965620 <col:4, line:631:3> Name="retval"
|   | `-ParagraphComment 0x9656a0 <line:630:11, line:631:3>
|   |   |-TextComment 0x965650 <line:630:11, col:100> Text="   #LOS_ERRNO_QUEUE_ISFULL                 No free node is available during queue writing."
|   |   `-TextComment 0x965670 <line:631:3> Text=" "
|   |-BlockCommandComment 0x9656c0 <col:4, line:633:3> Name="retval"
|   | `-ParagraphComment 0x965770 <line:631:11, line:633:3>
|   |   |-TextComment 0x9656f0 <line:631:11, col:116> Text="   #LOS_ERRNO_QUEUE_PEND_IN_LOCK           The task is forbidden to be blocked on a queue when the task is"
|   |   |-TextComment 0x965710 <line:632:3, col:10> Text=" locked."
|   |   `-TextComment 0x965730 <line:633:3> Text=" "
|   |-BlockCommandComment 0x965790 <col:4, line:634:3> Name="retval"
|   | `-ParagraphComment 0x965810 <line:633:11, line:634:3>
|   |   |-TextComment 0x9657c0 <line:633:11, col:110> Text="   #LOS_ERRNO_QUEUE_TIMEOUT                The time set for waiting to processing the queue expires."
|   |   `-TextComment 0x9657e0 <line:634:3> Text=" "
|   |-BlockCommandComment 0x965830 <col:4, line:636:3> Name="par"
|   | `-ParagraphComment 0x965a00 <line:634:8, line:636:3>
|   |   |-TextComment 0x965860 <line:634:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x965880 <line:635:3> Text=" "
|   |   |-HTMLStartTagComment 0x9658a0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x9658e0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x965920 <col:12, col:74> Text="los_queue.h: The header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x965940 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x965970 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x9659a0 <line:636:3> Text=" "
|   `-BlockCommandComment 0x965a20 <col:4, col:39> Name="see"
|     `-ParagraphComment 0x965a80 <col:8, col:39>
|       `-TextComment 0x965a50 <col:8, col:39> Text=" LOS_QueueRead | LOS_QueueCreate"
|-FunctionDecl 0x8d9270 <line:685:1, line:688:52> line:685:15 LOS_QueueWriteHeadCopy 'UINT32 (UINT32, void *, UINT32, UINT32)' extern
| |-ParmVarDecl 0x8d9058 <col:38, col:45> col:45 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8d90d8 <main/los_compiler.h:327:23, main/los_queue.h:686:44> col:44 bufferAddr 'void *'
| |-ParmVarDecl 0x8d9150 <line:687:38, col:45> col:45 bufferSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8d91c8 <line:688:38, col:45> col:45 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x967240 <line:644:3, line:683:43>
|   |-ParagraphComment 0x965c10 <line:644:3>
|   | `-TextComment 0x965be0 <col:3> Text=" "
|   |-VerbatimLineComment 0x965c30 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x965ca0 <line:645:3>
|   | `-TextComment 0x965c70 <col:3> Text=" "
|   |-BlockCommandComment 0x965cc0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x965d20 <col:10, col:41>
|   |   `-TextComment 0x965cf0 <col:10, col:41> Text=" Write data into a queue header."
|   |-ParagraphComment 0x965d70 <line:647:3>
|   | `-TextComment 0x965d40 <col:3> Text=" "
|   |-BlockCommandComment 0x965d90 <col:4, line:650:3> Name="par"
|   | `-ParagraphComment 0x965e60 <line:647:8, line:650:3>
|   |   |-TextComment 0x965dc0 <line:647:8, col:20> Text=" Description:"
|   |   |-TextComment 0x965de0 <line:648:3, col:112> Text=" This API is used to write the data of the size specified by bufferSize and stored at the address specified by"
|   |   |-TextComment 0x965e00 <line:649:3, col:34> Text=" bufferAddr into a queue header."
|   |   `-TextComment 0x965e20 <line:650:3> Text=" "
|   |-BlockCommandComment 0x965e80 <col:4, line:659:8> Name="attention"
|   | `-ParagraphComment 0x9663f0 <line:651:3, line:659:8>
|   |   |-TextComment 0x965eb0 <line:651:3> Text=" "
|   |   |-HTMLStartTagComment 0x965ed0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x965f10 <line:652:3> Text=" "
|   |   |-HTMLStartTagComment 0x965f30 <col:4, col:7> Name="li"
|   |   |-TextComment 0x965f70 <col:8, col:77> Text="Do not read or write a queue in unblocking modes such as an interrupt."
|   |   |-HTMLEndTagComment 0x965f90 <col:78, col:82> Name="li"
|   |   |-TextComment 0x965fc0 <line:653:3> Text=" "
|   |   |-HTMLStartTagComment 0x965fe0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x966020 <col:8, col:73> Text="This API cannot be called before the Huawei LiteOS is initialized."
|   |   |-HTMLEndTagComment 0x966040 <col:74, col:78> Name="li"
|   |   |-TextComment 0x966070 <line:654:3> Text=" "
|   |   |-HTMLStartTagComment 0x966090 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9660d0 <col:8, col:105> Text="The address of the data of the size specified by bufferSize and stored at the address specified by"
|   |   |-TextComment 0x9660f0 <line:655:3, col:31> Text=" BufferAddr is to be written."
|   |   |-HTMLEndTagComment 0x966110 <col:32, col:36> Name="li"
|   |   |-TextComment 0x966140 <line:656:3> Text=" "
|   |   |-HTMLStartTagComment 0x966160 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9661a0 <col:8, col:47> Text="The argument timeOut is a relative time."
|   |   |-HTMLEndTagComment 0x9661c0 <col:48, col:52> Name="li"
|   |   |-TextComment 0x9661f0 <line:657:3> Text=" "
|   |   |-HTMLStartTagComment 0x966210 <col:4, col:7> Name="li"
|   |   |-TextComment 0x966250 <col:8, col:112> Text="LOS_QueueRead and LOS_QueueWriteHead are a set of interfaces, and the two groups of interfaces need to be"
|   |   |-TextComment 0x966270 <line:658:3, col:8> Text=" used."
|   |   |-HTMLStartTagComment 0x966290 <col:9, col:12> Name="li"
|   |   |-TextComment 0x9662d0 <line:659:3> Text=" "
|   |   `-HTMLEndTagComment 0x9662f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x966440 <line:661:3>
|   | `-TextComment 0x966410 <col:3> Text=" "
|   |-ParamCommandComment 0x966460 <col:4, line:663:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x966540 <line:661:18, line:663:3>
|   |   |-TextComment 0x9664c0 <line:661:18, col:92> Text="        [IN]        Queue ID created by LOS_QueueCreate. The value range is"
|   |   |-TextComment 0x9664e0 <line:662:3, col:35> Text=" [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x966500 <line:663:3> Text=" "
|   |-ParamCommandComment 0x966560 <col:4, line:665:3> [in] implicitly Param="bufferAddr" ParamIndex=1
|   | `-ParagraphComment 0x966640 <line:663:21, line:665:3>
|   |   |-TextComment 0x9665c0 <line:663:21, col:89> Text="     [OUT]       Starting address that stores the data to be written."
|   |   |-TextComment 0x9665e0 <line:664:3, col:41> Text=" The starting address must not be null."
|   |   `-TextComment 0x966600 <line:665:3> Text=" "
|   |-ParamCommandComment 0x966660 <col:4, line:666:3> [in] implicitly Param="bufferSize" ParamIndex=2
|   | `-ParagraphComment 0x966710 <line:665:21, line:666:3>
|   |   |-TextComment 0x9666c0 <line:665:21, col:115> Text="     [IN]        Passed-in buffer size, which must not be 0. The value range is [1,0xffffffff]."
|   |   `-TextComment 0x9666e0 <line:666:3> Text=" "
|   |-ParamCommandComment 0x966730 <col:4, col:102> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0x9667c0 <col:18, col:102>
|   |   `-TextComment 0x966790 <col:18, col:102> Text="        [IN]        Expiry time. The value range is [0,LOS_WAIT_FOREVER](unit: Tick)."
|   |-ParagraphComment 0x966810 <line:668:3>
|   | `-TextComment 0x9667e0 <col:3> Text=" "
|   |-BlockCommandComment 0x966830 <col:4, line:669:3> Name="retval"
|   | `-ParagraphComment 0x9668b0 <line:668:11, line:669:3>
|   |   |-TextComment 0x966860 <line:668:11, col:101> Text="   #LOS_OK                                 The data is successfully written into the queue."
|   |   `-TextComment 0x966880 <line:669:3> Text=" "
|   |-BlockCommandComment 0x9668d0 <col:4, line:670:3> Name="retval"
|   | `-ParagraphComment 0x966950 <line:669:11, line:670:3>
|   |   |-TextComment 0x966900 <line:669:11, col:112> Text="   #LOS_ERRNO_QUEUE_INVALID                The queue handle passed in during queue writing is invalid."
|   |   `-TextComment 0x966920 <line:670:3> Text=" "
|   |-BlockCommandComment 0x966970 <col:4, line:671:3> Name="retval"
|   | `-ParagraphComment 0x9669f0 <line:670:11, line:671:3>
|   |   |-TextComment 0x9669a0 <line:670:11, col:104> Text="   #LOS_ERRNO_QUEUE_WRITE_PTR_NULL         The pointer passed in during queue writing is null."
|   |   `-TextComment 0x9669c0 <line:671:3> Text=" "
|   |-BlockCommandComment 0x966a10 <col:4, line:672:3> Name="retval"
|   | `-ParagraphComment 0x966a90 <line:671:11, line:672:3>
|   |   |-TextComment 0x966a40 <line:671:11, col:105> Text="   #LOS_ERRNO_QUEUE_WRITESIZE_ISZERO       The buffer size passed in during queue writing is 0."
|   |   `-TextComment 0x966a60 <line:672:3> Text=" "
|   |-BlockCommandComment 0x966ab0 <col:4, line:674:3> Name="retval"
|   | `-ParagraphComment 0x966b60 <line:672:11, line:674:3>
|   |   |-TextComment 0x966ae0 <line:672:11, col:118> Text="   #LOS_ERRNO_QUEUE_WRITE_IN_INTERRUPT     The queue cannot be written during an interrupt when the time for"
|   |   |-TextComment 0x966b00 <line:673:3, col:43> Text=" waiting to processing the queue expires."
|   |   `-TextComment 0x966b20 <line:674:3> Text=" "
|   |-BlockCommandComment 0x966b80 <col:4, line:675:3> Name="retval"
|   | `-ParagraphComment 0x966c00 <line:674:11, line:675:3>
|   |   |-TextComment 0x966bb0 <line:674:11, col:109> Text="   #LOS_ERRNO_QUEUE_NOT_CREATE             The queue into which the data is written is not created."
|   |   `-TextComment 0x966bd0 <line:675:3> Text=" "
|   |-BlockCommandComment 0x966c20 <col:4, line:677:3> Name="retval"
|   | `-ParagraphComment 0x966cd0 <line:675:11, line:677:3>
|   |   |-TextComment 0x966c50 <line:675:11, col:114> Text="   #LOS_ERRNO_QUEUE_WRITE_SIZE_TOO_BIG     The buffer size passed in during queue writing is bigger than"
|   |   |-TextComment 0x966c70 <line:676:3, col:18> Text=" the queue size."
|   |   `-TextComment 0x966c90 <line:677:3> Text=" "
|   |-BlockCommandComment 0x966cf0 <col:4, line:678:3> Name="retval"
|   | `-ParagraphComment 0x966d70 <line:677:11, line:678:3>
|   |   |-TextComment 0x966d20 <line:677:11, col:100> Text="   #LOS_ERRNO_QUEUE_ISFULL                 No free node is available during queue writing."
|   |   `-TextComment 0x966d40 <line:678:3> Text=" "
|   |-BlockCommandComment 0x966d90 <col:4, line:680:3> Name="retval"
|   | `-ParagraphComment 0x966e40 <line:678:11, line:680:3>
|   |   |-TextComment 0x966dc0 <line:678:11, col:116> Text="   #LOS_ERRNO_QUEUE_PEND_IN_LOCK           The task is forbidden to be blocked on a queue when the task is"
|   |   |-TextComment 0x966de0 <line:679:3, col:10> Text=" locked."
|   |   `-TextComment 0x966e00 <line:680:3> Text=" "
|   |-BlockCommandComment 0x966e60 <col:4, line:681:3> Name="retval"
|   | `-ParagraphComment 0x966ee0 <line:680:11, line:681:3>
|   |   |-TextComment 0x966e90 <line:680:11, col:110> Text="   #LOS_ERRNO_QUEUE_TIMEOUT                The time set for waiting to processing the queue expires."
|   |   `-TextComment 0x966eb0 <line:681:3> Text=" "
|   |-BlockCommandComment 0x966f00 <col:4, line:683:3> Name="par"
|   | `-ParagraphComment 0x9670d0 <line:681:8, line:683:3>
|   |   |-TextComment 0x966f30 <line:681:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x966f50 <line:682:3> Text=" "
|   |   |-HTMLStartTagComment 0x966f70 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x966fb0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x966ff0 <col:12, col:74> Text="los_queue.h: The header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x967010 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x967040 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x967070 <line:683:3> Text=" "
|   `-BlockCommandComment 0x9670f0 <col:4, col:43> Name="see"
|     `-ParagraphComment 0x967150 <col:8, col:43>
|       `-TextComment 0x967120 <col:8, col:43> Text=" LOS_QueueWrite | LOS_QueueWriteHead"
|-FunctionDecl 0x8d93f8 <line:716:1, col:45> col:15 LOS_QueueDelete 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x8d9368 <col:31, col:38> col:38 queueID 'UINT32':'unsigned int'
| `-FullComment 0x968000 <line:691:3, line:714:41>
|   |-ParagraphComment 0x9672e0 <line:691:3>
|   | `-TextComment 0x9672b0 <col:3> Text=" "
|   |-VerbatimLineComment 0x967300 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x967370 <line:692:3>
|   | `-TextComment 0x967340 <col:3> Text=" "
|   |-BlockCommandComment 0x967390 <col:4, col:25> Name="brief"
|   | `-ParagraphComment 0x9673f0 <col:10, col:25>
|   |   `-TextComment 0x9673c0 <col:10, col:25> Text=" Delete a queue."
|   |-ParagraphComment 0x967440 <line:694:3>
|   | `-TextComment 0x967410 <col:3> Text=" "
|   |-BlockCommandComment 0x967460 <col:4, line:696:3> Name="par"
|   | `-ParagraphComment 0x967510 <line:694:8, line:696:3>
|   |   |-TextComment 0x967490 <line:694:8, col:20> Text=" Description:"
|   |   |-TextComment 0x9674b0 <line:695:3, col:38> Text=" This API is used to delete a queue."
|   |   `-TextComment 0x9674d0 <line:696:3> Text=" "
|   |-BlockCommandComment 0x967560 <col:4, line:701:8> Name="attention"
|   | `-ParagraphComment 0x967820 <line:697:3, line:701:8>
|   |   |-TextComment 0x967590 <line:697:3> Text=" "
|   |   |-HTMLStartTagComment 0x9675b0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9675f0 <line:698:3> Text=" "
|   |   |-HTMLStartTagComment 0x967610 <col:4, col:7> Name="li"
|   |   |-TextComment 0x967650 <col:8, col:69> Text="This API cannot be used to delete a queue that is not created."
|   |   |-HTMLEndTagComment 0x967670 <col:70, col:74> Name="li"
|   |   |-TextComment 0x9676a0 <line:699:3> Text=" "
|   |   |-HTMLStartTagComment 0x9676c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x967700 <col:8, col:111> Text="A synchronous queue fails to be deleted if any tasks are blocked on it, or some queues are being read or"
|   |   |-TextComment 0x967720 <line:700:3, col:11> Text=" written."
|   |   |-HTMLEndTagComment 0x967740 <col:12, col:16> Name="li"
|   |   |-TextComment 0x967770 <line:701:3> Text=" "
|   |   `-HTMLEndTagComment 0x967790 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x967870 <line:703:3>
|   | `-TextComment 0x967840 <col:3> Text=" "
|   |-ParamCommandComment 0x967890 <col:4, line:704:35> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x967940 <line:703:18, line:704:35>
|   |   |-TextComment 0x9678f0 <line:703:18, col:87> Text="     [IN]      Queue ID created by LOS_QueueCreate. The value range is"
|   |   `-TextComment 0x967910 <line:704:3, col:35> Text=" [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |-ParagraphComment 0x967990 <line:706:3>
|   | `-TextComment 0x967960 <col:3> Text=" "
|   |-BlockCommandComment 0x9679b0 <col:4, line:707:3> Name="retval"
|   | `-ParagraphComment 0x967a30 <line:706:11, line:707:3>
|   |   |-TextComment 0x9679e0 <line:706:11, col:81> Text="   #LOS_OK                           The queue is successfully deleted."
|   |   `-TextComment 0x967a00 <line:707:3> Text=" "
|   |-BlockCommandComment 0x967a50 <col:4, line:708:3> Name="retval"
|   | `-ParagraphComment 0x967ad0 <line:707:11, line:708:3>
|   |   |-TextComment 0x967a80 <line:707:11, col:73> Text="   #LOS_ERRNO_QUEUE_NOT_FOUND        The queue cannot be found."
|   |   `-TextComment 0x967aa0 <line:708:3> Text=" "
|   |-BlockCommandComment 0x967af0 <col:4, line:710:3> Name="retval"
|   | `-ParagraphComment 0x967ba0 <line:708:11, line:710:3>
|   |   |-TextComment 0x967b20 <line:708:11, col:108> Text="   #LOS_ERRNO_QUEUE_NOT_CREATE       The queue handle passed in when the queue is being deleted is"
|   |   |-TextComment 0x967b40 <line:709:3, col:13> Text=" incorrect."
|   |   `-TextComment 0x967b60 <line:710:3> Text=" "
|   |-BlockCommandComment 0x967bc0 <col:4, line:711:3> Name="retval"
|   | `-ParagraphComment 0x967c40 <line:710:11, line:711:3>
|   |   |-TextComment 0x967bf0 <line:710:11, col:94> Text="   #LOS_ERRNO_QUEUE_IN_TSKUSE        The queue that blocks a task cannot be deleted."
|   |   `-TextComment 0x967c10 <line:711:3> Text=" "
|   |-BlockCommandComment 0x967c60 <col:4, line:712:3> Name="retval"
|   | `-ParagraphComment 0x967ce0 <line:711:11, line:712:3>
|   |   |-TextComment 0x967c90 <line:711:11, col:93> Text="   #LOS_ERRNO_QUEUE_IN_TSKWRITE      Queue reading and writing are not synchronous."
|   |   `-TextComment 0x967cb0 <line:712:3> Text=" "
|   |-BlockCommandComment 0x967d00 <col:4, line:714:3> Name="par"
|   | `-ParagraphComment 0x967ed0 <line:712:8, line:714:3>
|   |   |-TextComment 0x967d30 <line:712:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x967d50 <line:713:3> Text=" "
|   |   |-HTMLStartTagComment 0x967d70 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x967db0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x967df0 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x967e10 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x967e40 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x967e70 <line:714:3> Text=" "
|   `-BlockCommandComment 0x967ef0 <col:4, col:41> Name="see"
|     `-ParagraphComment 0x967f50 <col:8, col:41>
|       `-TextComment 0x967f20 <col:8, col:41> Text=" LOS_QueueCreate | LOS_QueueCreate"
|-FunctionDecl 0x8d96d8 <line:742:1, col:71> col:15 LOS_QueueInfoGet 'UINT32 (UINT32, QUEUE_INFO_S *)' extern
| |-ParmVarDecl 0x8d94d8 <col:32, col:39> col:39 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8d95c8 <col:48, col:62> col:62 queueInfo 'QUEUE_INFO_S *'
| `-FullComment 0x968ce0 <line:719:3, line:740:23>
|   |-ParagraphComment 0x9680a0 <line:719:3>
|   | `-TextComment 0x968070 <col:3> Text=" "
|   |-VerbatimLineComment 0x9680c0 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x968130 <line:720:3>
|   | `-TextComment 0x968100 <col:3> Text=" "
|   |-BlockCommandComment 0x968150 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0x9681b0 <col:10, col:35>
|   |   `-TextComment 0x968180 <col:10, col:35> Text=" Obtain queue information."
|   |-ParagraphComment 0x968200 <line:722:3>
|   | `-TextComment 0x9681d0 <col:3> Text=" "
|   |-BlockCommandComment 0x968220 <col:4, line:724:3> Name="par"
|   | `-ParagraphComment 0x9682d0 <line:722:8, line:724:3>
|   |   |-TextComment 0x968250 <line:722:8, col:20> Text=" Description:"
|   |   |-TextComment 0x968270 <line:723:3, col:48> Text=" This API is used to obtain queue information."
|   |   `-TextComment 0x968290 <line:724:3> Text=" "
|   |-BlockCommandComment 0x9682f0 <col:4, line:728:3> Name="attention"
|   | `-ParagraphComment 0x9684f0 <line:725:3, line:728:3>
|   |   |-TextComment 0x968320 <line:725:3> Text=" "
|   |   |-HTMLStartTagComment 0x968340 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x968380 <line:726:3> Text=" "
|   |   |-HTMLStartTagComment 0x9683a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9683e0 <col:8, col:52> Text="The specific queue should be created firstly."
|   |   |-HTMLEndTagComment 0x968400 <col:53, col:57> Name="li"
|   |   |-TextComment 0x968430 <line:727:3> Text=" "
|   |   |-HTMLEndTagComment 0x968450 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x968480 <line:728:3> Text=" "
|   |-ParamCommandComment 0x968510 <col:4, line:730:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x9685f0 <line:728:18, line:730:3>
|   |   |-TextComment 0x968570 <line:728:18, col:91> Text="       [IN]        Queue ID created by LOS_QueueCreate. The value range is"
|   |   |-TextComment 0x968590 <line:729:3, col:35> Text=" [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x9685b0 <line:730:3> Text=" "
|   |-ParamCommandComment 0x968610 <col:4, col:86> [in] implicitly Param="queueInfo" ParamIndex=1
|   | `-ParagraphComment 0x9686a0 <col:20, col:86>
|   |   `-TextComment 0x968670 <col:20, col:86> Text="     [OUT]       The queue information to be read must not be null."
|   |-ParagraphComment 0x9686f0 <line:732:3>
|   | `-TextComment 0x9686c0 <col:3> Text=" "
|   |-BlockCommandComment 0x968710 <col:4, line:733:3> Name="retval"
|   | `-ParagraphComment 0x968790 <line:732:11, line:733:3>
|   |   |-TextComment 0x968740 <line:732:11, col:95> Text="   #LOS_OK                            The queue information is successfully obtained."
|   |   `-TextComment 0x968760 <line:733:3> Text=" "
|   |-BlockCommandComment 0x9687b0 <col:4, line:734:3> Name="retval"
|   | `-ParagraphComment 0x968830 <line:733:11, line:734:3>
|   |   |-TextComment 0x9687e0 <line:733:11, col:108> Text="   #LOS_ERRNO_QUEUE_PTR_NULL          The pointer to the queue information to be obtained is null."
|   |   `-TextComment 0x968800 <line:734:3> Text=" "
|   |-BlockCommandComment 0x968850 <col:4, line:735:3> Name="retval"
|   | `-ParagraphComment 0x9688d0 <line:734:11, line:735:3>
|   |   |-TextComment 0x968880 <line:734:11, col:102> Text="   #LOS_ERRNO_QUEUE_INVALID           The handle of the queue that is being read is invalid."
|   |   `-TextComment 0x9688a0 <line:735:3> Text=" "
|   |-BlockCommandComment 0x9688f0 <col:4, line:736:15> Name="retval"
|   | `-ParagraphComment 0x968970 <line:735:11, line:736:15>
|   |   |-TextComment 0x968920 <line:735:11, col:110> Text="   #LOS_ERRNO_QUEUE_NOT_CREATE        The queue in which the information to be obtained is stored is"
|   |   `-TextComment 0x968940 <line:736:3, col:15> Text=" not created."
|   |-ParagraphComment 0x9689c0 <line:738:3>
|   | `-TextComment 0x968990 <col:3> Text=" "
|   |-BlockCommandComment 0x9689e0 <col:4, line:740:3> Name="par"
|   | `-ParagraphComment 0x968bb0 <line:738:8, line:740:3>
|   |   |-TextComment 0x968a10 <line:738:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x968a30 <line:739:3> Text=" "
|   |   |-HTMLStartTagComment 0x968a50 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x968a90 <col:8, col:11> Name="li"
|   |   |-TextComment 0x968ad0 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x968af0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x968b20 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x968b50 <line:740:3> Text=" "
|   `-BlockCommandComment 0x968bd0 <col:4, col:23> Name="see"
|     `-ParagraphComment 0x968c30 <col:8, col:23>
|       `-TextComment 0x968c00 <col:8, col:23> Text=" LOS_QueueCreate"
|-EnumDecl 0x8d9788 <line:744:9, line:747:1> line:744:9
| |-EnumConstantDecl 0x8d9850 <line:745:5> col:5 OS_QUEUE_READ 'int'
| `-EnumConstantDecl 0x8d98a0 <line:746:5> col:5 OS_QUEUE_WRITE 'int'
|-TypedefDecl 0x8d9948 <line:744:1, line:747:3> col:3 QueueReadWrite 'enum QueueReadWrite':'QueueReadWrite'
| `-ElaboratedType 0x8d98f0 'enum QueueReadWrite' sugar
|   `-EnumType 0x8d9830 'QueueReadWrite'
|     `-Enum 0x8d9788 ''
|-EnumDecl 0x8d99b8 <line:749:9, line:752:1> line:749:9
| |-EnumConstantDecl 0x8d9a80 <line:750:5> col:5 OS_QUEUE_HEAD 'int'
| `-EnumConstantDecl 0x8d9ad0 <line:751:5> col:5 OS_QUEUE_TAIL 'int'
|-TypedefDecl 0x8d9b78 <line:749:1, line:752:3> col:3 QueueHeadTail 'enum QueueHeadTail':'QueueHeadTail'
| `-ElaboratedType 0x8d9b20 'enum QueueHeadTail' sugar
|   `-EnumType 0x8d9a60 'QueueHeadTail'
|     `-Enum 0x8d99b8 ''
|-EnumDecl 0x8d9be8 <line:754:9, line:757:1> line:754:9
| |-EnumConstantDecl 0x8d9e00 <line:755:5> col:5 OS_QUEUE_NOT_POINT 'int'
| `-EnumConstantDecl 0x8d9e50 <line:756:5> col:5 OS_QUEUE_POINT 'int'
|-TypedefDecl 0x8d9ef8 <line:754:1, line:757:3> col:3 QueuePointOrNot 'enum QueuePointOrNot':'QueuePointOrNot'
| `-ElaboratedType 0x8d9ea0 'enum QueuePointOrNot' sugar
|   `-EnumType 0x8d9c90 'QueuePointOrNot'
|     `-Enum 0x8d9be8 ''
|-RecordDecl 0x8d9f90 <line:776:9, line:788:1> line:776:9 struct definition
| |-FullComment 0x968e50 <line:773:4, line:774:37>
| | |-ParagraphComment 0x968d80 <line:773:4>
| | | `-TextComment 0x968d50 <col:4> Text=" "
| | |-VerbatimLineComment 0x968da0 <col:5, col:23> Text=" los_queue"
| | `-ParagraphComment 0x968e10 <line:774:4, col:37>
| |   `-TextComment 0x968de0 <col:4, col:37> Text=" Queue information block structure"
| |-FieldDecl 0x8da040 <line:777:5, col:12> col:12 queue 'UINT8 *'
| | `-FullComment 0x968f20 <col:28, col:54>
| |   `-ParagraphComment 0x968ef0 <col:28, col:54>
| |     `-TextComment 0x968ec0 <col:28, col:54> Text=" Pointer to a queue handle "
| |-FieldDecl 0x8da0c8 <line:778:5, col:12> col:12 queueState 'UINT16':'unsigned short'
| | `-FullComment 0x968ff0 <col:28, col:40>
| |   `-ParagraphComment 0x968fc0 <col:28, col:40>
| |     `-TextComment 0x968f90 <col:28, col:40> Text=" Queue state "
| |-FieldDecl 0x8da158 <line:779:5, col:12> col:12 queueLen 'UINT16':'unsigned short'
| | `-FullComment 0x9690c0 <col:28, col:41>
| |   `-ParagraphComment 0x969090 <col:28, col:41>
| |     `-TextComment 0x969060 <col:28, col:41> Text=" Queue length "
| |-FieldDecl 0x8da1e8 <line:780:5, col:12> col:12 queueSize 'UINT16':'unsigned short'
| | `-FullComment 0x969190 <col:28, col:38>
| |   `-ParagraphComment 0x969160 <col:28, col:38>
| |     `-TextComment 0x969130 <col:28, col:38> Text=" Node size "
| |-FieldDecl 0x8da278 <line:781:5, col:12> col:12 queueID 'UINT16':'unsigned short'
| | `-FullComment 0x969260 <col:28, col:36>
| |   `-ParagraphComment 0x969230 <col:28, col:36>
| |     `-TextComment 0x969200 <col:28, col:36> Text=" queueID "
| |-FieldDecl 0x8da308 <line:782:5, col:12> col:12 queueHead 'UINT16':'unsigned short'
| | `-FullComment 0x969330 <col:28, col:38>
| |   `-ParagraphComment 0x969300 <col:28, col:38>
| |     `-TextComment 0x9692d0 <col:28, col:38> Text=" Node head "
| |-FieldDecl 0x8da398 <line:783:5, col:12> col:12 queueTail 'UINT16':'unsigned short'
| | `-FullComment 0x969400 <col:28, col:38>
| |   `-ParagraphComment 0x9693d0 <col:28, col:38>
| |     `-TextComment 0x9693a0 <col:28, col:38> Text=" Node tail "
| |-FieldDecl 0x8da4e8 <line:784:5, col:45> col:12 readWriteableCnt 'UINT16 [2]'
| | `-FullComment 0x9694d0 <col:52, col:116>
| |   `-ParagraphComment 0x9694a0 <col:52, col:116>
| |     `-TextComment 0x969470 <col:52, col:116> Text=" Count of readable or writable resources, 0:readable, 1:writable "
| |-FieldDecl 0x8da638 <line:785:5, col:47> col:17 readWriteList 'LOS_DL_LIST [2]'
| | `-FullComment 0x9695d0 <col:54, line:786:78>
| |   `-ParagraphComment 0x9695a0 <line:785:54, line:786:78>
| |     |-TextComment 0x969540 <line:785:54, col:103> Text=" Pointer to the linked list to be read or written,"
| |     `-TextComment 0x969570 <line:786:1, col:78> Text="                                                      0:readlist, 1:writelist "
| `-FieldDecl 0x8da6c8 <line:787:5, col:17> col:17 memList 'LOS_DL_LIST':'struct LOS_DL_LIST'
|   `-FullComment 0x9696a0 <col:30, col:64>
|     `-ParagraphComment 0x969670 <col:30, col:64>
|       `-TextComment 0x969640 <col:30, col:64> Text=" Pointer to the memory linked list "
|-TypedefDecl 0x8da7a8 <line:776:1, line:788:3> col:3 referenced LosQueueCB 'struct LosQueueCB':'LosQueueCB'
| |-ElaboratedType 0x8da750 'struct LosQueueCB' sugar
| | `-RecordType 0x8da010 'LosQueueCB'
| |   `-Record 0x8d9f90 ''
| `-FullComment 0x969810 <line:773:4, line:774:37>
|   |-ParagraphComment 0x969740 <line:773:4>
|   | `-TextComment 0x969710 <col:4> Text=" "
|   |-VerbatimLineComment 0x969760 <col:5, col:23> Text=" los_queue"
|   `-ParagraphComment 0x9697d0 <line:774:4, col:37>
|     `-TextComment 0x9697a0 <col:4, col:37> Text=" Queue information block structure"
|-VarDecl 0x8da988 <line:819:1, col:20> col:20 g_allQueue 'LosQueueCB *' extern
| `-FullComment 0x969980 <line:816:4, line:817:36>
|   |-ParagraphComment 0x9698b0 <line:816:4, col:5>
|   | `-TextComment 0x969880 <col:4, col:5> Text="  "
|   |-VerbatimLineComment 0x9698d0 <col:6, col:24> Text=" los_queue"
|   `-ParagraphComment 0x969940 <line:817:4, col:36>
|     `-TextComment 0x969910 <col:4, col:36> Text="  Queue information control block"
|-FunctionDecl 0x8dacb0 <line:856:1, col:77> col:14 OsQueueMailAlloc 'void *(UINT32, void *, UINT32)' extern
| |-ParmVarDecl 0x8daa88 <col:31, col:38> col:38 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8dab08 <main/los_compiler.h:327:23, main/los_queue.h:856:53> col:53 mailPool 'void *'
| |-ParmVarDecl 0x8dab80 <col:63, col:70> col:70 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x96a720 <line:834:3, line:854:23>
|   |-ParagraphComment 0x969a20 <line:834:3>
|   | `-TextComment 0x9699f0 <col:3> Text=" "
|   |-VerbatimLineComment 0x969a40 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x969ab0 <line:835:3>
|   | `-TextComment 0x969a80 <col:3> Text=" "
|   |-BlockCommandComment 0x969ad0 <col:4, col:47> Name="brief"
|   | `-ParagraphComment 0x969b30 <col:10, col:47>
|   |   `-TextComment 0x969b00 <col:10, col:47> Text=" Alloc a stationary memory for a mail."
|   |-ParagraphComment 0x969b80 <line:837:3>
|   | `-TextComment 0x969b50 <col:3> Text=" "
|   |-BlockCommandComment 0x969ba0 <col:4, line:839:3> Name="par"
|   | `-ParagraphComment 0x969c50 <line:837:8, line:839:3>
|   |   |-TextComment 0x969bd0 <line:837:8, col:20> Text=" Description:"
|   |   |-TextComment 0x969bf0 <line:838:3, col:81> Text=" This API is used to alloc a stationary memory for a mail according to queueID."
|   |   `-TextComment 0x969c10 <line:839:3> Text=" "
|   |-BlockCommandComment 0x969c70 <col:4, line:844:8> Name="attention"
|   | `-ParagraphComment 0x969fe0 <line:840:3, line:844:8>
|   |   |-TextComment 0x969ca0 <line:840:3> Text=" "
|   |   |-HTMLStartTagComment 0x969cc0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x969d00 <line:841:3> Text=" "
|   |   |-HTMLStartTagComment 0x969d20 <col:4, col:7> Name="li"
|   |   |-TextComment 0x969d60 <col:8, col:65> Text="Do not alloc memory in unblocking modes such as interrupt."
|   |   |-HTMLEndTagComment 0x969d80 <col:66, col:70> Name="li"
|   |   |-TextComment 0x969db0 <line:842:3> Text=" "
|   |   |-HTMLStartTagComment 0x969dd0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x969e10 <col:8, col:73> Text="This API cannot be called before the Huawei LiteOS is initialized."
|   |   |-HTMLEndTagComment 0x969e30 <col:74, col:78> Name="li"
|   |   |-TextComment 0x969e60 <line:843:3> Text=" "
|   |   |-HTMLStartTagComment 0x969e80 <col:4, col:7> Name="li"
|   |   |-TextComment 0x969ec0 <col:8, col:47> Text="The argument timeOut is a relative time."
|   |   |-HTMLEndTagComment 0x969ee0 <col:48, col:52> Name="li"
|   |   |-TextComment 0x969f10 <line:844:3> Text=" "
|   |   `-HTMLEndTagComment 0x969f30 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x96a030 <line:846:3>
|   | `-TextComment 0x96a000 <col:3> Text=" "
|   |-ParamCommandComment 0x96a050 <col:4, line:847:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x96a100 <line:846:18, line:847:3>
|   |   |-TextComment 0x96a0b0 <line:846:18, col:98> Text="        [IN]        Queue ID. The value range is [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x96a0d0 <line:847:3> Text=" "
|   |-ParamCommandComment 0x96a120 <col:4, line:848:3> [in] implicitly Param="mailPool" ParamIndex=1
|   | `-ParagraphComment 0x96a1d0 <line:847:19, line:848:3>
|   |   |-TextComment 0x96a180 <line:847:19, col:74> Text="       [IN]        The memory poll that stores the mail."
|   |   `-TextComment 0x96a1a0 <line:848:3> Text=" "
|   |-ParamCommandComment 0x96a1f0 <col:4, col:90> [in] implicitly Param="timeOut" ParamIndex=2
|   | `-ParagraphComment 0x96a280 <col:18, col:90>
|   |   `-TextComment 0x96a250 <col:18, col:90> Text="        [IN]        Expiry time. The value range is [0,LOS_WAIT_FOREVER]."
|   |-ParagraphComment 0x96a2d0 <line:850:3>
|   | `-TextComment 0x96a2a0 <col:3> Text=" "
|   |-BlockCommandComment 0x96a2f0 <col:4, line:851:3> Name="retval"
|   | `-ParagraphComment 0x96a370 <line:850:11, line:851:3>
|   |   |-TextComment 0x96a320 <line:850:11, col:70> Text="   #NULL                    The memory allocation is failed."
|   |   `-TextComment 0x96a340 <line:851:3> Text=" "
|   |-BlockCommandComment 0x96a390 <col:4, line:852:3> Name="retval"
|   | `-ParagraphComment 0x96a410 <line:851:11, line:852:3>
|   |   |-TextComment 0x96a3c0 <line:851:11, col:66> Text="   #mem                     The address of alloc memory."
|   |   `-TextComment 0x96a3e0 <line:852:3> Text=" "
|   |-BlockCommandComment 0x96a430 <col:4, line:854:3> Name="par"
|   | `-ParagraphComment 0x96a600 <line:852:8, line:854:3>
|   |   |-TextComment 0x96a460 <line:852:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x96a480 <line:853:3> Text=" "
|   |   |-HTMLStartTagComment 0x96a4a0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x96a4e0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x96a520 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x96a540 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x96a570 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x96a5a0 <line:854:3> Text=" "
|   `-BlockCommandComment 0x96a620 <col:4, col:23> Name="see"
|     `-ParagraphComment 0x96a680 <col:8, col:23>
|       `-TextComment 0x96a650 <col:8, col:23> Text=" OsQueueMailFree"
|-FunctionDecl 0x8dd738 <line:882:1, col:76> col:15 OsQueueMailFree 'UINT32 (UINT32, void *, void *)' extern
| |-ParmVarDecl 0x8dd510 <col:31, col:38> col:38 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8dd590 <main/los_compiler.h:327:23, main/los_queue.h:882:53> col:53 mailPool 'void *'
| |-ParmVarDecl 0x8dd610 <main/los_compiler.h:327:23, main/los_queue.h:882:69> col:69 mailMem 'void *'
| `-FullComment 0x96b4a0 <line:859:3, line:880:24>
|   |-ParagraphComment 0x96a7c0 <line:859:3>
|   | `-TextComment 0x96a790 <col:3> Text=" "
|   |-VerbatimLineComment 0x96a7e0 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x96a850 <line:860:3>
|   | `-TextComment 0x96a820 <col:3> Text=" "
|   |-BlockCommandComment 0x96a870 <col:4, col:45> Name="brief"
|   | `-ParagraphComment 0x96a8d0 <col:10, col:45>
|   |   `-TextComment 0x96a8a0 <col:10, col:45> Text=" Free a stationary memory of a mail."
|   |-ParagraphComment 0x96a920 <line:862:3>
|   | `-TextComment 0x96a8f0 <col:3> Text=" "
|   |-BlockCommandComment 0x96a940 <col:4, line:864:3> Name="par"
|   | `-ParagraphComment 0x96a9f0 <line:862:8, line:864:3>
|   |   |-TextComment 0x96a970 <line:862:8, col:20> Text=" Description:"
|   |   |-TextComment 0x96a990 <line:863:3, col:80> Text=" This API is used to free a stationary memory for a mail according to queueID."
|   |   `-TextComment 0x96a9b0 <line:864:3> Text=" "
|   |-BlockCommandComment 0x96aa10 <col:4, line:867:8> Name="attention"
|   | `-ParagraphComment 0x96abe0 <line:865:3, line:867:8>
|   |   |-TextComment 0x96aa40 <line:865:3> Text=" "
|   |   |-HTMLStartTagComment 0x96aa60 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x96aaa0 <line:866:3> Text=" "
|   |   |-HTMLStartTagComment 0x96aac0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x96ab00 <col:8, col:73> Text="This API cannot be called before the Huawei LiteOS is initialized."
|   |   |-HTMLEndTagComment 0x96ab20 <col:74, col:78> Name="li"
|   |   |-TextComment 0x96ab50 <line:867:3> Text=" "
|   |   `-HTMLEndTagComment 0x96ab70 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x96ac30 <line:869:3>
|   | `-TextComment 0x96ac00 <col:3> Text=" "
|   |-ParamCommandComment 0x96ac50 <col:4, line:870:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x96ad00 <line:869:18, line:870:3>
|   |   |-TextComment 0x96acb0 <line:869:18, col:99> Text="         [IN]        Queue ID. The value range is [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x96acd0 <line:870:3> Text=" "
|   |-ParamCommandComment 0x96ad20 <col:4, line:871:3> [in] implicitly Param="mailPool" ParamIndex=1
|   | `-ParagraphComment 0x96add0 <line:870:19, line:871:3>
|   |   |-TextComment 0x96ad80 <line:870:19, col:67> Text="        [IN]        The mail memory poll address."
|   |   `-TextComment 0x96ada0 <line:871:3> Text=" "
|   |-ParamCommandComment 0x96adf0 <col:4, col:68> [in] implicitly Param="mailMem" ParamIndex=2
|   | `-ParagraphComment 0x96ae80 <col:18, col:68>
|   |   `-TextComment 0x96ae50 <col:18, col:68> Text="         [IN]        The mail memory block address."
|   |-ParagraphComment 0x96aed0 <line:873:3>
|   | `-TextComment 0x96aea0 <col:3> Text=" "
|   |-BlockCommandComment 0x96aef0 <col:4, line:874:3> Name="retval"
|   | `-ParagraphComment 0x96af70 <line:873:11, line:874:3>
|   |   |-TextComment 0x96af20 <line:873:11, col:94> Text="   #LOS_OK                                 0x00000000: The memory free successfully."
|   |   `-TextComment 0x96af40 <line:874:3> Text=" "
|   |-BlockCommandComment 0x96af90 <col:4, line:876:3> Name="retval"
|   | `-ParagraphComment 0x96b040 <line:874:11, line:876:3>
|   |   |-TextComment 0x96afc0 <line:874:11, col:118> Text="   #OS_ERRNO_QUEUE_MAIL_HANDLE_INVALID     0x02000619: The handle of the queue passed-in when the memory for"
|   |   |-TextComment 0x96afe0 <line:875:1, col:101> Text="                                                                 the queue is being freed is invalid."
|   |   `-TextComment 0x96b000 <line:876:3> Text=" "
|   |-BlockCommandComment 0x96b060 <col:4, line:877:3> Name="retval"
|   | `-ParagraphComment 0x96b0e0 <line:876:11, line:877:3>
|   |   |-TextComment 0x96b090 <line:876:11, col:111> Text="   #OS_ERRNO_QUEUE_MAIL_PTR_INVALID        0x0200061a: The pointer to the memory to be freed is null."
|   |   `-TextComment 0x96b0b0 <line:877:3> Text=" "
|   |-BlockCommandComment 0x96b100 <col:4, line:878:3> Name="retval"
|   | `-ParagraphComment 0x96b180 <line:877:11, line:878:3>
|   |   |-TextComment 0x96b130 <line:877:11, col:108> Text="   #OS_ERRNO_QUEUE_MAIL_FREE_ERROR         0x0200061b: The memory for the queue fails to be freed."
|   |   `-TextComment 0x96b150 <line:878:3> Text=" "
|   |-BlockCommandComment 0x96b1a0 <col:4, line:880:3> Name="par"
|   | `-ParagraphComment 0x96b370 <line:878:8, line:880:3>
|   |   |-TextComment 0x96b1d0 <line:878:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x96b1f0 <line:879:3> Text=" "
|   |   |-HTMLStartTagComment 0x96b210 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x96b250 <col:8, col:11> Name="li"
|   |   |-TextComment 0x96b290 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x96b2b0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x96b2e0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x96b310 <line:880:3> Text=" "
|   `-BlockCommandComment 0x96b390 <col:4, col:24> Name="see"
|     `-ParagraphComment 0x96b3f0 <col:8, col:24>
|       `-TextComment 0x96b3c0 <col:8, col:24> Text=" OsQueueMailAlloc"
|-FunctionDecl 0x8dd8b0 <line:902:1, col:31> col:15 OsQueueInit 'UINT32 (void)' extern
| `-FullComment 0x96be40 <line:885:3, line:900:13>
|   |-ParagraphComment 0x96b540 <line:885:3>
|   | `-TextComment 0x96b510 <col:3> Text=" "
|   |-VerbatimLineComment 0x96b580 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x96b5f0 <line:886:3>
|   | `-TextComment 0x96b5c0 <col:3> Text=" "
|   |-BlockCommandComment 0x96b610 <col:4, col:31> Name="brief"
|   | `-ParagraphComment 0x96b670 <col:10, col:31>
|   |   `-TextComment 0x96b640 <col:10, col:31> Text=" Initialization queue."
|   |-ParagraphComment 0x96b6c0 <line:888:3>
|   | `-TextComment 0x96b690 <col:3> Text=" "
|   |-BlockCommandComment 0x96b6e0 <col:4, line:890:3> Name="par"
|   | `-ParagraphComment 0x96b790 <line:888:8, line:890:3>
|   |   |-TextComment 0x96b710 <line:888:8, col:20> Text=" Description:"
|   |   |-TextComment 0x96b730 <line:889:3, col:44> Text=" This API is used to initialization queue."
|   |   `-TextComment 0x96b750 <line:890:3> Text=" "
|   |-BlockCommandComment 0x96b7b0 <col:4, line:893:8> Name="attention"
|   | `-ParagraphComment 0x96b980 <line:891:3, line:893:8>
|   |   |-TextComment 0x96b7e0 <line:891:3> Text=" "
|   |   |-HTMLStartTagComment 0x96b800 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x96b840 <line:892:3> Text=" "
|   |   |-HTMLStartTagComment 0x96b860 <col:4, col:7> Name="li"
|   |   |-TextComment 0x96b8a0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x96b8c0 <col:13, col:17> Name="li"
|   |   |-TextComment 0x96b8f0 <line:893:3> Text=" "
|   |   `-HTMLEndTagComment 0x96b910 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x96b9d0 <line:895:3>
|   | `-TextComment 0x96b9a0 <col:3> Text=" "
|   |-ParamCommandComment 0x96b9f0 <col:4, col:15> [in] implicitly Param="None."
|   | `-ParagraphComment 0x96ba50 <<invalid sloc>>
|   |-ParagraphComment 0x96baa0 <line:897:3>
|   | `-TextComment 0x96ba70 <col:3> Text=" "
|   |-BlockCommandComment 0x96bac0 <col:4, line:898:3> Name="retval"
|   | `-ParagraphComment 0x96bb40 <line:897:11, line:898:3>
|   |   |-TextComment 0x96baf0 <line:897:11, col:43> Text="   UINT32  Initialization result."
|   |   `-TextComment 0x96bb10 <line:898:3> Text=" "
|   |-BlockCommandComment 0x96bb60 <col:4, line:900:3> Name="par"
|   | `-ParagraphComment 0x96bd30 <line:898:8, line:900:3>
|   |   |-TextComment 0x96bb90 <line:898:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x96bbb0 <line:899:3> Text=" "
|   |   |-HTMLStartTagComment 0x96bbd0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x96bc10 <col:8, col:11> Name="li"
|   |   |-TextComment 0x96bc50 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x96bc70 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x96bca0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x96bcd0 <line:900:3> Text=" "
|   `-BlockCommandComment 0x96bd50 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x96bdb0 <col:8, col:13>
|       `-TextComment 0x96bd80 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8ddcc8 <line:926:1, line:927:44> line:926:15 OsQueueOperate 'UINT32 (UINT32, UINT32, void *, UINT32 *, UINT32)' extern
| |-ParmVarDecl 0x8dd988 <col:30, col:37> col:37 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8dda00 <col:46, col:53> col:53 operateType 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8dda80 <main/los_compiler.h:327:23, main/los_queue.h:926:72> col:72 bufferAddr 'void *'
| |-ParmVarDecl 0x8ddaf8 <col:84, col:92> col:92 bufferSize 'UINT32 *'
| |-ParmVarDecl 0x8ddb70 <line:927:30, col:37> col:37 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x96cb50 <line:905:3, line:924:13>
|   |-ParagraphComment 0x96bee0 <line:905:3>
|   | `-TextComment 0x96beb0 <col:3> Text=" "
|   |-VerbatimLineComment 0x96bf00 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x96bf70 <line:906:3>
|   | `-TextComment 0x96bf40 <col:3> Text=" "
|   |-BlockCommandComment 0x96bf90 <col:4, col:42> Name="brief"
|   | `-ParagraphComment 0x96bff0 <col:10, col:42>
|   |   `-TextComment 0x96bfc0 <col:10, col:42> Text=" Handle when read or write queue."
|   |-ParagraphComment 0x96c040 <line:908:3>
|   | `-TextComment 0x96c010 <col:3> Text=" "
|   |-BlockCommandComment 0x96c060 <col:4, line:910:3> Name="par"
|   | `-ParagraphComment 0x96c110 <line:908:8, line:910:3>
|   |   |-TextComment 0x96c090 <line:908:8, col:20> Text=" Description:"
|   |   |-TextComment 0x96c0b0 <line:909:3, col:55> Text=" This API is used to handle when read or write queue."
|   |   `-TextComment 0x96c0d0 <line:910:3> Text=" "
|   |-BlockCommandComment 0x96c130 <col:4, line:913:8> Name="attention"
|   | `-ParagraphComment 0x96c300 <line:911:3, line:913:8>
|   |   |-TextComment 0x96c160 <line:911:3> Text=" "
|   |   |-HTMLStartTagComment 0x96c180 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x96c1c0 <line:912:3> Text=" "
|   |   |-HTMLStartTagComment 0x96c1e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x96c220 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x96c240 <col:13, col:17> Name="li"
|   |   |-TextComment 0x96c270 <line:913:3> Text=" "
|   |   `-HTMLEndTagComment 0x96c290 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x96c350 <line:915:3>
|   | `-TextComment 0x96c320 <col:3> Text=" "
|   |-ParamCommandComment 0x96c370 <col:4, line:916:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x96c420 <line:915:18, line:916:3>
|   |   |-TextComment 0x96c3d0 <line:915:18, col:45> Text="        [IN]       Queue id."
|   |   `-TextComment 0x96c3f0 <line:916:3> Text=" "
|   |-ParamCommandComment 0x96c440 <col:4, line:917:3> [in] implicitly Param="operateType" ParamIndex=1
|   | `-ParagraphComment 0x96c4f0 <line:916:22, line:917:3>
|   |   |-TextComment 0x96c4a0 <line:916:22, col:48> Text="    [IN]       Operate type"
|   |   `-TextComment 0x96c4c0 <line:917:3> Text=" "
|   |-ParamCommandComment 0x96c510 <col:4, line:918:3> [in] implicitly Param="bufferAddr" ParamIndex=2
|   | `-ParagraphComment 0x96c5c0 <line:917:21, line:918:3>
|   |   |-TextComment 0x96c570 <line:917:21, col:51> Text="     [IN]       Buffer address."
|   |   `-TextComment 0x96c590 <line:918:3> Text=" "
|   |-ParamCommandComment 0x96c5e0 <col:4, line:919:3> [in] implicitly Param="bufferSize" ParamIndex=3
|   | `-ParagraphComment 0x96c690 <line:918:21, line:919:3>
|   |   |-TextComment 0x96c640 <line:918:21, col:48> Text="     [IN]       Buffer size."
|   |   `-TextComment 0x96c660 <line:919:3> Text=" "
|   |-ParamCommandComment 0x96c6b0 <col:4, col:44> [in] implicitly Param="timeOut" ParamIndex=4
|   | `-ParagraphComment 0x96c740 <col:18, col:44>
|   |   `-TextComment 0x96c710 <col:18, col:44> Text="        [IN]       Timeout."
|   |-ParagraphComment 0x96c790 <line:921:3>
|   | `-TextComment 0x96c760 <col:3> Text=" "
|   |-BlockCommandComment 0x96c7b0 <col:4, line:922:3> Name="retval"
|   | `-ParagraphComment 0x96c830 <line:921:11, line:922:3>
|   |   |-TextComment 0x96c7e0 <line:921:11, col:35> Text="   UINT32  Handle result."
|   |   `-TextComment 0x96c800 <line:922:3> Text=" "
|   |-BlockCommandComment 0x96c850 <col:4, line:924:3> Name="par"
|   | `-ParagraphComment 0x96ca20 <line:922:8, line:924:3>
|   |   |-TextComment 0x96c880 <line:922:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x96c8a0 <line:923:3> Text=" "
|   |   |-HTMLStartTagComment 0x96c8c0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x96c900 <col:8, col:11> Name="li"
|   |   |-TextComment 0x96c940 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x96c960 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x96c990 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x96c9c0 <line:924:3> Text=" "
|   `-BlockCommandComment 0x96ca40 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x96caa0 <col:8, col:13>
|       `-TextComment 0x96ca70 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8de1c8 <main/los_sem.h:192:1, col:60> col:15 LOS_SemCreate 'UINT32 (UINT16, UINT32 *)' extern
| |-ParmVarDecl 0x8de038 <col:29, col:36> col:36 count 'UINT16':'unsigned short'
| |-ParmVarDecl 0x8de0b0 <col:43, col:51> col:51 semHandle 'UINT32 *'
| `-FullComment 0x96d840 <line:169:3, line:190:21>
|   |-ParagraphComment 0x96cbf0 <line:169:3>
|   | `-TextComment 0x96cbc0 <col:3> Text=" "
|   |-VerbatimLineComment 0x96cc10 <col:4, col:20> Text=" los_sem"
|   |-ParagraphComment 0x96cc80 <line:170:3>
|   | `-TextComment 0x96cc50 <col:3> Text=" "
|   |-BlockCommandComment 0x96cca0 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0x96cd00 <col:10, col:38>
|   |   `-TextComment 0x96ccd0 <col:10, col:38> Text=" Create a Counting semaphore."
|   |-ParagraphComment 0x96cd50 <line:172:3>
|   | `-TextComment 0x96cd20 <col:3> Text=" "
|   |-BlockCommandComment 0x96cd70 <col:4, line:175:3> Name="par"
|   | `-ParagraphComment 0x96ce40 <line:172:8, line:175:3>
|   |   |-TextComment 0x96cda0 <line:172:8, col:20> Text=" Description:"
|   |   |-TextComment 0x96cdc0 <line:173:3, col:115> Text=" This API is used to create a semaphore control structure according to the initial number of available semaphores"
|   |   |-TextComment 0x96cde0 <line:174:3, col:76> Text=" specified by count and return the ID of this semaphore control structure."
|   |   `-TextComment 0x96ce00 <line:175:3> Text=" "
|   |-BlockCommandComment 0x96ce60 <col:4, line:178:8> Name="attention"
|   | `-ParagraphComment 0x96d030 <line:176:3, line:178:8>
|   |   |-TextComment 0x96ce90 <line:176:3> Text=" "
|   |   |-HTMLStartTagComment 0x96ceb0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x96cef0 <line:177:3> Text=" "
|   |   |-HTMLStartTagComment 0x96cf10 <col:4, col:7> Name="li"
|   |   |-TextComment 0x96cf50 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x96cf70 <col:13, col:17> Name="li"
|   |   |-TextComment 0x96cfa0 <line:178:3> Text=" "
|   |   `-HTMLEndTagComment 0x96cfc0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x96d080 <line:180:3>
|   | `-TextComment 0x96d050 <col:3> Text=" "
|   |-ParamCommandComment 0x96d0a0 <col:4, line:181:3> [in] implicitly Param="count" ParamIndex=0
|   | `-ParagraphComment 0x96d150 <line:180:16, line:181:3>
|   |   |-TextComment 0x96d100 <line:180:16, col:118> Text="       [IN]  Initial number of available semaphores. The value range is [0, OS_SEM_COUNTING_MAX_COUNT)."
|   |   `-TextComment 0x96d120 <line:181:3> Text=" "
|   |-ParamCommandComment 0x96d170 <col:4, col:86> [in] implicitly Param="semHandle" ParamIndex=1
|   | `-ParagraphComment 0x96d200 <col:20, col:86>
|   |   `-TextComment 0x96d1d0 <col:20, col:86> Text="   [OUT] ID of the semaphore control structure that is initialized."
|   |-ParagraphComment 0x96d250 <line:183:3>
|   | `-TextComment 0x96d220 <col:3> Text=" "
|   |-BlockCommandComment 0x96d270 <col:4, line:184:3> Name="retval"
|   | `-ParagraphComment 0x96d2f0 <line:183:11, line:184:3>
|   |   |-TextComment 0x96d2a0 <line:183:11, col:77> Text=" #LOS_ERRNO_SEM_PTR_NULL     The passed-in semHandle value is NULL."
|   |   `-TextComment 0x96d2c0 <line:184:3> Text=" "
|   |-BlockCommandComment 0x96d310 <col:4, line:186:3> Name="retval"
|   | `-ParagraphComment 0x96d3c0 <line:184:11, line:186:3>
|   |   |-TextComment 0x96d340 <line:184:11, col:112> Text=" #LOS_ERRNO_SEM_OVERFLOW     The passed-in count value is greater than the maximum number of available"
|   |   |-TextComment 0x96d360 <line:185:3, col:14> Text=" semaphores."
|   |   `-TextComment 0x96d380 <line:186:3> Text=" "
|   |-BlockCommandComment 0x96d3e0 <col:4, line:187:3> Name="retval"
|   | `-ParagraphComment 0x96d460 <line:186:11, line:187:3>
|   |   |-TextComment 0x96d410 <line:186:11, col:83> Text=" #LOS_ERRNO_SEM_ALL_BUSY     No semaphore control structure is available."
|   |   `-TextComment 0x96d430 <line:187:3> Text=" "
|   |-BlockCommandComment 0x96d480 <col:4, line:188:3> Name="retval"
|   | `-ParagraphComment 0x96d500 <line:187:11, line:188:3>
|   |   |-TextComment 0x96d4b0 <line:187:11, col:59> Text=" #LOS_OK   The semaphore is successfully created."
|   |   `-TextComment 0x96d4d0 <line:188:3> Text=" "
|   |-BlockCommandComment 0x96d520 <col:4, line:190:3> Name="par"
|   | `-ParagraphComment 0x96d710 <line:188:8, line:190:3>
|   |   |-TextComment 0x96d550 <line:188:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x96d590 <line:189:3> Text=" "
|   |   |-HTMLStartTagComment 0x96d5b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x96d5f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x96d630 <col:12, col:72> Text="los_sem.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x96d650 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x96d680 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x96d6b0 <line:190:3> Text=" "
|   `-BlockCommandComment 0x96d730 <col:4, col:21> Name="see"
|     `-ParagraphComment 0x96d790 <col:8, col:21>
|       `-TextComment 0x96d760 <col:8, col:21> Text=" LOS_SemDelete"
|-FunctionDecl 0x8de3c8 <line:218:1, col:66> col:15 LOS_BinarySemCreate 'UINT32 (UINT16, UINT32 *)' extern
| |-ParmVarDecl 0x8de2b8 <col:35, col:42> col:42 count 'UINT16':'unsigned short'
| |-ParmVarDecl 0x8de330 <col:49, col:57> col:57 semHandle 'UINT32 *'
| `-FullComment 0x96e510 <line:195:3, line:216:21>
|   |-ParagraphComment 0x96d8e0 <line:195:3>
|   | `-TextComment 0x96d8b0 <col:3> Text=" "
|   |-VerbatimLineComment 0x96d900 <col:4, col:20> Text=" los_sem"
|   |-ParagraphComment 0x96d970 <line:196:3>
|   | `-TextComment 0x96d940 <col:3> Text=" "
|   |-BlockCommandComment 0x96d990 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0x96d9f0 <col:10, col:36>
|   |   `-TextComment 0x96d9c0 <col:10, col:36> Text=" Create a binary semaphore."
|   |-ParagraphComment 0x96da40 <line:198:3>
|   | `-TextComment 0x96da10 <col:3> Text=" "
|   |-BlockCommandComment 0x96da60 <col:4, line:201:3> Name="par"
|   | `-ParagraphComment 0x96db30 <line:198:8, line:201:3>
|   |   |-TextComment 0x96da90 <line:198:8, col:20> Text=" Description:"
|   |   |-TextComment 0x96dab0 <line:199:3, col:111> Text=" This API is used to create a binary semaphore control structure according to the initial number of available"
|   |   |-TextComment 0x96dad0 <line:200:3, col:87> Text=" semaphores specified by count and return the ID of this semaphore control structure."
|   |   `-TextComment 0x96daf0 <line:201:3> Text=" "
|   |-BlockCommandComment 0x96db50 <col:4, line:204:8> Name="attention"
|   | `-ParagraphComment 0x96dd20 <line:202:3, line:204:8>
|   |   |-TextComment 0x96db80 <line:202:3> Text=" "
|   |   |-HTMLStartTagComment 0x96dba0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x96dbe0 <line:203:3> Text=" "
|   |   |-HTMLStartTagComment 0x96dc00 <col:4, col:7> Name="li"
|   |   |-TextComment 0x96dc40 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x96dc60 <col:13, col:17> Name="li"
|   |   |-TextComment 0x96dc90 <line:204:3> Text=" "
|   |   `-HTMLEndTagComment 0x96dcb0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x96dd70 <line:206:3>
|   | `-TextComment 0x96dd40 <col:3> Text=" "
|   |-ParamCommandComment 0x96dd90 <col:4, line:207:3> [in] implicitly Param="count" ParamIndex=0
|   | `-ParagraphComment 0x96de40 <line:206:16, line:207:3>
|   |   |-TextComment 0x96ddf0 <line:206:16, col:95> Text="        [IN]  Initial number of available semaphores. The value range is [0, 1]."
|   |   `-TextComment 0x96de10 <line:207:3> Text=" "
|   |-ParamCommandComment 0x96de60 <col:4, col:87> [in] implicitly Param="semHandle" ParamIndex=1
|   | `-ParagraphComment 0x96def0 <col:20, col:87>
|   |   `-TextComment 0x96dec0 <col:20, col:87> Text="    [OUT] ID of the semaphore control structure that is initialized."
|   |-ParagraphComment 0x96df40 <line:209:3>
|   | `-TextComment 0x96df10 <col:3> Text=" "
|   |-BlockCommandComment 0x96df60 <col:4, line:210:3> Name="retval"
|   | `-ParagraphComment 0x96dfe0 <line:209:11, line:210:3>
|   |   |-TextComment 0x96df90 <line:209:11, col:77> Text=" #LOS_ERRNO_SEM_PTR_NULL     The passed-in semHandle value is NULL."
|   |   `-TextComment 0x96dfb0 <line:210:3> Text=" "
|   |-BlockCommandComment 0x96e000 <col:4, line:212:3> Name="retval"
|   | `-ParagraphComment 0x96e0b0 <line:210:11, line:212:3>
|   |   |-TextComment 0x96e030 <line:210:11, col:112> Text=" #LOS_ERRNO_SEM_OVERFLOW     The passed-in count value is greater than the maximum number of available"
|   |   |-TextComment 0x96e050 <line:211:3, col:14> Text=" semaphores."
|   |   `-TextComment 0x96e070 <line:212:3> Text=" "
|   |-BlockCommandComment 0x96e0d0 <col:4, line:213:3> Name="retval"
|   | `-ParagraphComment 0x96e150 <line:212:11, line:213:3>
|   |   |-TextComment 0x96e100 <line:212:11, col:83> Text=" #LOS_ERRNO_SEM_ALL_BUSY     No semaphore control structure is available."
|   |   `-TextComment 0x96e120 <line:213:3> Text=" "
|   |-BlockCommandComment 0x96e170 <col:4, line:214:3> Name="retval"
|   | `-ParagraphComment 0x96e1f0 <line:213:11, line:214:3>
|   |   |-TextComment 0x96e1a0 <line:213:11, col:59> Text=" #LOS_OK   The semaphore is successfully created."
|   |   `-TextComment 0x96e1c0 <line:214:3> Text=" "
|   |-BlockCommandComment 0x96e210 <col:4, line:216:3> Name="par"
|   | `-ParagraphComment 0x96e3e0 <line:214:8, line:216:3>
|   |   |-TextComment 0x96e240 <line:214:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x96e260 <line:215:3> Text=" "
|   |   |-HTMLStartTagComment 0x96e280 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x96e2c0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x96e300 <col:12, col:72> Text="los_sem.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x96e320 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x96e350 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x96e380 <line:216:3> Text=" "
|   `-BlockCommandComment 0x96e400 <col:4, col:21> Name="see"
|     `-ParagraphComment 0x96e460 <col:8, col:21>
|       `-TextComment 0x96e430 <col:8, col:21> Text=" LOS_SemDelete"
|-FunctionDecl 0x8e3f40 <line:242:1, col:45> col:15 LOS_SemDelete 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x8e3eb0 <col:29, col:36> col:36 semHandle 'UINT32':'unsigned int'
| `-FullComment 0x96f060 <line:221:3, line:240:21>
|   |-ParagraphComment 0x96e5b0 <line:221:3>
|   | `-TextComment 0x96e580 <col:3> Text=" "
|   |-VerbatimLineComment 0x96e5d0 <col:4, col:20> Text=" los_sem"
|   |-ParagraphComment 0x96e640 <line:222:3>
|   | `-TextComment 0x96e610 <col:3> Text=" "
|   |-BlockCommandComment 0x96e660 <col:4, col:29> Name="brief"
|   | `-ParagraphComment 0x96e6c0 <col:10, col:29>
|   |   `-TextComment 0x96e690 <col:10, col:29> Text=" Delete a semaphore."
|   |-ParagraphComment 0x96e710 <line:224:3>
|   | `-TextComment 0x96e6e0 <col:3> Text=" "
|   |-BlockCommandComment 0x96e730 <col:4, line:226:3> Name="par"
|   | `-ParagraphComment 0x96e7e0 <line:224:8, line:226:3>
|   |   |-TextComment 0x96e760 <line:224:8, col:20> Text=" Description:"
|   |   |-TextComment 0x96e780 <line:225:3, col:98> Text=" This API is used to delete a semaphore control structure that has an ID specified by semHandle."
|   |   `-TextComment 0x96e7a0 <line:226:3> Text=" "
|   |-BlockCommandComment 0x96e800 <col:4, line:229:8> Name="attention"
|   | `-ParagraphComment 0x96e9d0 <line:227:3, line:229:8>
|   |   |-TextComment 0x96e830 <line:227:3> Text=" "
|   |   |-HTMLStartTagComment 0x96e850 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x96e890 <line:228:3> Text=" "
|   |   |-HTMLStartTagComment 0x96e8b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x96e8f0 <col:8, col:51> Text="The specified sem id must be created first. "
|   |   |-HTMLEndTagComment 0x96e910 <col:52, col:56> Name="li"
|   |   |-TextComment 0x96e940 <line:229:3> Text=" "
|   |   `-HTMLEndTagComment 0x96e960 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x96ea20 <line:231:3>
|   | `-TextComment 0x96e9f0 <col:3> Text=" "
|   |-ParamCommandComment 0x96ea40 <col:4, line:232:57> [in] implicitly Param="semHandle" ParamIndex=0
|   | `-ParagraphComment 0x96eaf0 <line:231:20, line:232:57>
|   |   |-TextComment 0x96eaa0 <line:231:20, col:103> Text="   [IN] ID of the semaphore control structure to be deleted. The ID of the semaphore"
|   |   `-TextComment 0x96eac0 <line:232:3, col:57> Text=" control structure is obtained from semaphore creation."
|   |-ParagraphComment 0x96eb40 <line:234:3>
|   | `-TextComment 0x96eb10 <col:3> Text=" "
|   |-BlockCommandComment 0x96eb60 <col:4, line:235:3> Name="retval"
|   | `-ParagraphComment 0x96ebe0 <line:234:11, line:235:3>
|   |   |-TextComment 0x96eb90 <line:234:11, col:76> Text=" #LOS_ERRNO_SEM_INVALID  The passed-in semHandle value is invalid."
|   |   `-TextComment 0x96ebb0 <line:235:3> Text=" "
|   |-BlockCommandComment 0x96ec00 <col:4, line:237:3> Name="retval"
|   | `-ParagraphComment 0x96ecb0 <line:235:11, line:237:3>
|   |   |-TextComment 0x96ec30 <line:235:11, col:112> Text=" #LOS_ERRNO_SEM_PENDED   The queue of the tasks that are waiting on the semaphore control structure is"
|   |   |-TextComment 0x96ec50 <line:236:3, col:12> Text=" not null."
|   |   `-TextComment 0x96ec70 <line:237:3> Text=" "
|   |-BlockCommandComment 0x96ecd0 <col:4, line:238:3> Name="retval"
|   | `-ParagraphComment 0x96ed50 <line:237:11, line:238:3>
|   |   |-TextComment 0x96ed00 <line:237:11, col:77> Text=" #LOS_OK   The semaphore control structure is successfully deleted."
|   |   `-TextComment 0x96ed20 <line:238:3> Text=" "
|   |-BlockCommandComment 0x96ed70 <col:4, line:240:3> Name="par"
|   | `-ParagraphComment 0x96ef40 <line:238:8, line:240:3>
|   |   |-TextComment 0x96eda0 <line:238:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x96edc0 <line:239:3> Text=" "
|   |   |-HTMLStartTagComment 0x96ede0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x96ee20 <col:8, col:11> Name="li"
|   |   |-TextComment 0x96ee60 <col:12, col:72> Text="los_sem.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x96ee80 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x96eeb0 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x96eee0 <line:240:3> Text=" "
|   `-BlockCommandComment 0x96ef60 <col:4, col:21> Name="see"
|     `-ParagraphComment 0x96efc0 <col:8, col:21>
|       `-TextComment 0x96ef90 <col:8, col:21> Text=" LOS_SemCreate"
|-FunctionDecl 0x8e4138 <line:272:1, col:59> col:15 LOS_SemPend 'UINT32 (UINT32, UINT32)' extern
| |-ParmVarDecl 0x8e4028 <col:27, col:34> col:34 semHandle 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8e40a0 <col:45, col:52> col:52 timeout 'UINT32':'unsigned int'
| `-FullComment 0x96fee0 <line:245:3, line:270:35>
|   |-ParagraphComment 0x96f100 <line:245:3>
|   | `-TextComment 0x96f0d0 <col:3> Text=" "
|   |-VerbatimLineComment 0x96f120 <col:4, col:20> Text=" los_sem"
|   |-ParagraphComment 0x96f190 <line:246:3>
|   | `-TextComment 0x96f160 <col:3> Text=" "
|   |-BlockCommandComment 0x96f1b0 <col:4, col:30> Name="brief"
|   | `-ParagraphComment 0x96f210 <col:10, col:30>
|   |   `-TextComment 0x96f1e0 <col:10, col:30> Text=" Request a semaphore."
|   |-ParagraphComment 0x96f260 <line:248:3>
|   | `-TextComment 0x96f230 <col:3> Text=" "
|   |-BlockCommandComment 0x96f280 <col:4, line:251:3> Name="par"
|   | `-ParagraphComment 0x96f350 <line:248:8, line:251:3>
|   |   |-TextComment 0x96f2b0 <line:248:8, col:20> Text=" Description:"
|   |   |-TextComment 0x96f2d0 <line:249:3, col:117> Text=" This API is used to request a semaphore based on the semaphore control structure ID specified by semHandle and the"
|   |   |-TextComment 0x96f2f0 <line:250:3, col:47> Text=" parameter that specifies the timeout period."
|   |   `-TextComment 0x96f310 <line:251:3> Text=" "
|   |-BlockCommandComment 0x96f370 <col:4, line:254:8> Name="attention"
|   | `-ParagraphComment 0x96f540 <line:252:3, line:254:8>
|   |   |-TextComment 0x96f3a0 <line:252:3> Text=" "
|   |   |-HTMLStartTagComment 0x96f3c0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x96f400 <line:253:3> Text=" "
|   |   |-HTMLStartTagComment 0x96f420 <col:4, col:7> Name="li"
|   |   |-TextComment 0x96f460 <col:8, col:51> Text="The specified sem id must be created first. "
|   |   |-HTMLEndTagComment 0x96f480 <col:52, col:56> Name="li"
|   |   |-TextComment 0x96f4b0 <line:254:3> Text=" "
|   |   `-HTMLEndTagComment 0x96f4d0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x96f5a0 <line:256:3>
|   | `-TextComment 0x96f560 <col:3> Text=" "
|   |-ParamCommandComment 0x96f5c0 <col:4, line:258:3> [in] implicitly Param="semHandle" ParamIndex=0
|   | `-ParagraphComment 0x96f6a0 <line:256:20, line:258:3>
|   |   |-TextComment 0x96f620 <line:256:20, col:113> Text="   [IN] ID of the semaphore control structure to be requested. The ID of the semaphore control"
|   |   |-TextComment 0x96f640 <line:257:3, col:49> Text=" structure is obtained from semaphore creation."
|   |   `-TextComment 0x96f660 <line:258:3> Text=" "
|   |-ParamCommandComment 0x96f6c0 <col:4, line:260:50> [in] implicitly Param="timeout" ParamIndex=1
|   | `-ParagraphComment 0x96f7a0 <line:258:18, line:260:50>
|   |   |-TextComment 0x96f720 <line:258:18, col:109> Text="     [IN] Timeout interval for waiting on the semaphore. The value range is [0, 0xFFFFFFFF]."
|   |   |-TextComment 0x96f740 <line:259:3, col:95> Text=" If the value is set to 0, the semaphore is not waited on. If the value is set to 0xFFFFFFFF,"
|   |   `-TextComment 0x96f760 <line:260:3, col:50> Text=" the semaphore is waited on forever(unit: Tick)."
|   |-ParagraphComment 0x96f7f0 <line:262:3>
|   | `-TextComment 0x96f7c0 <col:3> Text=" "
|   |-BlockCommandComment 0x96f810 <col:4, line:263:3> Name="retval"
|   | `-ParagraphComment 0x96f890 <line:262:11, line:263:3>
|   |   |-TextComment 0x96f840 <line:262:11, col:84> Text=" #LOS_ERRNO_SEM_INVALID          The passed-in semHandle value is invalid."
|   |   `-TextComment 0x96f860 <line:263:3> Text=" "
|   |-BlockCommandComment 0x96f8b0 <col:4, line:264:3> Name="retval"
|   | `-ParagraphComment 0x96f930 <line:263:11, line:264:3>
|   |   |-TextComment 0x96f8e0 <line:263:11, col:84> Text=" #LOS_ERRNO_SEM_UNAVAILABLE      There is no available semaphore resource."
|   |   `-TextComment 0x96f900 <line:264:3> Text=" "
|   |-BlockCommandComment 0x96f950 <col:4, line:265:3> Name="retval"
|   | `-ParagraphComment 0x96f9d0 <line:264:11, line:265:3>
|   |   |-TextComment 0x96f980 <line:264:11, col:101> Text=" #LOS_ERRNO_SEM_PEND_INTERR      The API is called during an interrupt, which is forbidden."
|   |   `-TextComment 0x96f9a0 <line:265:3> Text=" "
|   |-BlockCommandComment 0x96f9f0 <col:4, line:266:3> Name="retval"
|   | `-ParagraphComment 0x96fa70 <line:265:11, line:266:3>
|   |   |-TextComment 0x96fa20 <line:265:11, col:119> Text=" #LOS_ERRNO_SEM_PEND_IN_LOCK     The task is unable to request a semaphore because task scheduling is locked."
|   |   `-TextComment 0x96fa40 <line:266:3> Text=" "
|   |-BlockCommandComment 0x96fa90 <col:4, line:267:3> Name="retval"
|   | `-ParagraphComment 0x96fb10 <line:266:11, line:267:3>
|   |   |-TextComment 0x96fac0 <line:266:11, col:75> Text=" #LOS_ERRNO_SEM_TIMEOUT	 The request for the semaphore times out."
|   |   `-TextComment 0x96fae0 <line:267:3> Text=" "
|   |-BlockCommandComment 0x96fb30 <col:4, line:268:3> Name="retval"
|   | `-ParagraphComment 0x96fbb0 <line:267:11, line:268:3>
|   |   |-TextComment 0x96fb60 <line:267:11, col:52> Text=" #LOS_OK   The semaphore request succeeds."
|   |   `-TextComment 0x96fb80 <line:268:3> Text=" "
|   |-BlockCommandComment 0x96fbd0 <col:4, line:270:3> Name="par"
|   | `-ParagraphComment 0x96fda0 <line:268:8, line:270:3>
|   |   |-TextComment 0x96fc00 <line:268:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x96fc20 <line:269:3> Text=" "
|   |   |-HTMLStartTagComment 0x96fc40 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x96fc80 <col:8, col:11> Name="li"
|   |   |-TextComment 0x96fcc0 <col:12, col:72> Text="los_sem.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x96fce0 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x96fd10 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x96fd40 <line:270:3> Text=" "
|   `-BlockCommandComment 0x96fdc0 <col:4, col:35> Name="see"
|     `-ParagraphComment 0x96fe20 <col:8, col:35>
|       `-TextComment 0x96fdf0 <col:8, col:35> Text=" LOS_SemPost | LOS_SemCreate"
|-FunctionDecl 0x8e42b8 <line:295:1, col:43> col:15 LOS_SemPost 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x8e4228 <col:27, col:34> col:34 semHandle 'UINT32':'unsigned int'
| `-FullComment 0x970a00 <line:275:3, line:293:35>
|   |-ParagraphComment 0x96ff80 <line:275:3>
|   | `-TextComment 0x96ff50 <col:3> Text=" "
|   |-VerbatimLineComment 0x96ffa0 <col:4, col:20> Text=" los_sem"
|   |-ParagraphComment 0x970010 <line:276:3>
|   | `-TextComment 0x96ffe0 <col:3> Text=" "
|   |-BlockCommandComment 0x970030 <col:4, col:30> Name="brief"
|   | `-ParagraphComment 0x970090 <col:10, col:30>
|   |   `-TextComment 0x970060 <col:10, col:30> Text=" Release a semaphore."
|   |-ParagraphComment 0x9700e0 <line:278:3>
|   | `-TextComment 0x9700b0 <col:3> Text=" "
|   |-BlockCommandComment 0x970100 <col:4, line:280:3> Name="par"
|   | `-ParagraphComment 0x9701b0 <line:278:8, line:280:3>
|   |   |-TextComment 0x970130 <line:278:8, col:20> Text=" Description:"
|   |   |-TextComment 0x970150 <line:279:3, col:108> Text=" This API is used to release a semaphore that has a semaphore control structure ID specified by semHandle."
|   |   `-TextComment 0x970170 <line:280:3> Text=" "
|   |-BlockCommandComment 0x9701d0 <col:4, line:283:8> Name="attention"
|   | `-ParagraphComment 0x9703a0 <line:281:3, line:283:8>
|   |   |-TextComment 0x970200 <line:281:3> Text=" "
|   |   |-HTMLStartTagComment 0x970220 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x970260 <line:282:3> Text=" "
|   |   |-HTMLStartTagComment 0x970280 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9702c0 <col:8, col:51> Text="The specified sem id must be created first. "
|   |   |-HTMLEndTagComment 0x9702e0 <col:52, col:56> Name="li"
|   |   |-TextComment 0x970310 <line:283:3> Text=" "
|   |   `-HTMLEndTagComment 0x970330 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x9703f0 <line:285:3>
|   | `-TextComment 0x9703c0 <col:3> Text=" "
|   |-ParamCommandComment 0x970410 <col:4, line:286:49> [in] implicitly Param="semHandle" ParamIndex=0
|   | `-ParagraphComment 0x9704c0 <line:285:20, line:286:49>
|   |   |-TextComment 0x970470 <line:285:20, col:111> Text="   [IN] ID of the semaphore control structure to be released.The ID of the semaphore control"
|   |   `-TextComment 0x970490 <line:286:3, col:49> Text=" structure is obtained from semaphore creation."
|   |-ParagraphComment 0x970510 <line:288:3>
|   | `-TextComment 0x9704e0 <col:3> Text=" "
|   |-BlockCommandComment 0x970530 <col:4, line:289:3> Name="retval"
|   | `-ParagraphComment 0x9705b0 <line:288:11, line:289:3>
|   |   |-TextComment 0x970560 <line:288:11, col:80> Text=" #LOS_ERRNO_SEM_INVALID      The passed-in semHandle value is invalid."
|   |   `-TextComment 0x970580 <line:289:3> Text=" "
|   |-BlockCommandComment 0x9705d0 <col:4, line:290:3> Name="retval"
|   | `-ParagraphComment 0x970650 <line:289:11, line:290:3>
|   |   |-TextComment 0x970600 <line:289:11, col:105> Text=" #LOS_ERRNO_SEM_OVERFLOW     The times of semaphore release exceed the maximum times permitted."
|   |   `-TextComment 0x970620 <line:290:3> Text=" "
|   |-BlockCommandComment 0x970670 <col:4, line:291:3> Name="retval"
|   | `-ParagraphComment 0x9706f0 <line:290:11, line:291:3>
|   |   |-TextComment 0x9706a0 <line:290:11, col:78> Text=" #LOS_OK                     The semaphore is successfully released."
|   |   `-TextComment 0x9706c0 <line:291:3> Text=" "
|   |-BlockCommandComment 0x970710 <col:4, line:293:3> Name="par"
|   | `-ParagraphComment 0x9708e0 <line:291:8, line:293:3>
|   |   |-TextComment 0x970740 <line:291:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x970760 <line:292:3> Text=" "
|   |   |-HTMLStartTagComment 0x970780 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x9707c0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x970800 <col:12, col:72> Text="los_sem.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x970820 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x970850 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x970880 <line:293:3> Text=" "
|   `-BlockCommandComment 0x970900 <col:4, col:35> Name="see"
|     `-ParagraphComment 0x970960 <col:8, col:35>
|       `-TextComment 0x970930 <col:8, col:35> Text=" LOS_SemPend | LOS_SemCreate"
|-FunctionDecl 0x8e4528 <line:297:1, col:63> col:15 LOS_SemGetValue 'UINT32 (UINT32, INT32 *)' extern
| |-ParmVarDecl 0x8e4370 <col:31, col:38> col:38 semHandle 'UINT32':'unsigned int'
| `-ParmVarDecl 0x8e4418 <col:49, col:56> col:56 currVal 'INT32 *'
|-RecordDecl 0x8e4608 <line:303:9, line:309:1> line:303:9 struct definition
| |-FullComment 0x970b70 <line:300:3, line:301:31>
| | |-ParagraphComment 0x970aa0 <line:300:3>
| | | `-TextComment 0x970a70 <col:3> Text=" "
| | |-VerbatimLineComment 0x970ac0 <col:4, col:20> Text=" los_sem"
| | `-ParagraphComment 0x970b30 <line:301:3, col:31>
| |   `-TextComment 0x970b00 <col:3, col:31> Text=" Semaphore control structure."
| |-FieldDecl 0x8e46c0 <line:304:5, col:12> col:12 semStat 'UINT16':'unsigned short'
| | `-FullComment 0x970c40 <col:30, col:46>
| |   `-ParagraphComment 0x970c10 <col:30, col:46>
| |     `-TextComment 0x970be0 <col:30, col:46> Text=" Semaphore state "
| |-FieldDecl 0x8e4748 <line:305:5, col:12> col:12 semCount 'UINT16':'unsigned short'
| | `-FullComment 0x970d10 <col:30, col:61>
| |   `-ParagraphComment 0x970ce0 <col:30, col:61>
| |     `-TextComment 0x970cb0 <col:30, col:61> Text=" Number of available semaphores "
| |-FieldDecl 0x8e47d8 <line:306:5, col:12> col:12 maxSemCount 'UINT16':'unsigned short'
| | `-FullComment 0x970de0 <col:30, col:65>
| |   `-ParagraphComment 0x970db0 <col:30, col:65>
| |     `-TextComment 0x970d80 <col:30, col:65> Text=" Max number of available semaphores "
| |-FieldDecl 0x8e4868 <line:307:5, col:12> col:12 semID 'UINT16':'unsigned short'
| | `-FullComment 0x970eb0 <col:30, col:61>
| |   `-ParagraphComment 0x970e80 <col:30, col:61>
| |     `-TextComment 0x970e50 <col:30, col:61> Text=" Semaphore control structure ID "
| `-FieldDecl 0x8e48f8 <line:308:5, col:17> col:17 semList 'LOS_DL_LIST':'struct LOS_DL_LIST'
|   `-FullComment 0x970f80 <col:30, col:77>
|     `-ParagraphComment 0x970f50 <col:30, col:77>
|       `-TextComment 0x970f20 <col:30, col:77> Text=" Queue of tasks that are waiting on a semaphore "
|-TypedefDecl 0x8e49d8 <line:303:1, line:309:3> col:3 referenced LosSemCB 'struct LosSemCB':'LosSemCB'
| |-ElaboratedType 0x8e4980 'struct LosSemCB' sugar
| | `-RecordType 0x8e4690 'LosSemCB'
| |   `-Record 0x8e4608 ''
| `-FullComment 0x9710f0 <line:300:3, line:301:31>
|   |-ParagraphComment 0x971020 <line:300:3>
|   | `-TextComment 0x970ff0 <col:3> Text=" "
|   |-VerbatimLineComment 0x971040 <col:4, col:20> Text=" los_sem"
|   `-ParagraphComment 0x9710b0 <line:301:3, col:31>
|     `-TextComment 0x971080 <col:3, col:31> Text=" Semaphore control structure."
|-VarDecl 0x8e4b88 <line:335:1, col:18> col:18 g_allSem 'LosSemCB *' extern
|-FunctionDecl 0x8e4ce0 <line:361:1, col:29> col:15 OsSemInit 'UINT32 (void)' extern
| `-FullComment 0x971ab0 <line:344:3, line:359:13>
|   |-ParagraphComment 0x971190 <line:344:3>
|   | `-TextComment 0x971160 <col:3> Text=" "
|   |-VerbatimLineComment 0x9711b0 <col:4, col:20> Text=" los_sem"
|   |-ParagraphComment 0x971220 <line:345:3>
|   | `-TextComment 0x9711f0 <col:3> Text=" "
|   |-BlockCommandComment 0x971240 <col:4, col:55> Name="brief"
|   | `-ParagraphComment 0x9712a0 <col:10, col:55>
|   |   `-TextComment 0x971270 <col:10, col:55> Text=" Initialize the  Semaphore doubly linked list."
|   |-ParagraphComment 0x9712f0 <line:347:3>
|   | `-TextComment 0x9712c0 <col:3> Text=" "
|   |-BlockCommandComment 0x971310 <col:4, line:349:3> Name="par"
|   | `-ParagraphComment 0x9713c0 <line:347:8, line:349:3>
|   |   |-TextComment 0x971340 <line:347:8, col:20> Text=" Description:"
|   |   |-TextComment 0x971360 <line:348:3, col:68> Text=" This API is used to initialize the  Semaphore doubly linked list."
|   |   `-TextComment 0x971380 <line:349:3> Text=" "
|   |-BlockCommandComment 0x9713e0 <col:4, line:352:8> Name="attention"
|   | `-ParagraphComment 0x9715f0 <line:350:3, line:352:8>
|   |   |-TextComment 0x971410 <line:350:3> Text=" "
|   |   |-HTMLStartTagComment 0x971430 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x971470 <line:351:3> Text=" "
|   |   |-HTMLStartTagComment 0x971490 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9714d0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x9714f0 <col:13, col:17> Name="li"
|   |   |-TextComment 0x971520 <line:352:3> Text=" "
|   |   `-HTMLEndTagComment 0x971540 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x971640 <line:354:3>
|   | `-TextComment 0x971610 <col:3> Text=" "
|   |-ParamCommandComment 0x971660 <col:4, col:15> [in] implicitly Param="None."
|   | `-ParagraphComment 0x9716c0 <<invalid sloc>>
|   |-ParagraphComment 0x971710 <line:356:3>
|   | `-TextComment 0x9716e0 <col:3> Text=" "
|   |-BlockCommandComment 0x971730 <col:4, line:357:3> Name="retval"
|   | `-ParagraphComment 0x9717b0 <line:356:11, line:357:3>
|   |   |-TextComment 0x971760 <line:356:11, col:42> Text=" UINT32   Initialization result."
|   |   `-TextComment 0x971780 <line:357:3> Text=" "
|   |-BlockCommandComment 0x9717d0 <col:4, line:359:3> Name="par"
|   | `-ParagraphComment 0x9719a0 <line:357:8, line:359:3>
|   |   |-TextComment 0x971800 <line:357:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x971820 <line:358:3> Text=" "
|   |   |-HTMLStartTagComment 0x971840 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x971880 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9718c0 <col:12, col:72> Text="los_sem.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9718e0 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x971910 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x971940 <line:359:3> Text=" "
|   `-BlockCommandComment 0x9719c0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x971a20 <col:8, col:13>
|       `-TextComment 0x9719f0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8e6558 <line:383:1, col:68> col:8 OsSemCreate 'UINT32 (UINT16, UINT16, UINT32 *)'
| |-ParmVarDecl 0x8e4db8 <col:20, col:27> col:27 count 'UINT16':'unsigned short'
| |-ParmVarDecl 0x8e4e30 <col:34, col:41> col:41 maxCount 'UINT16':'unsigned short'
| |-ParmVarDecl 0x8e6430 <col:51, col:59> col:59 semHandle 'UINT32 *'
| `-FullComment 0x972610 <line:364:3, line:381:13>
|   |-ParagraphComment 0x971b50 <line:364:3>
|   | `-TextComment 0x971b20 <col:3> Text=" "
|   |-VerbatimLineComment 0x971b70 <col:4, col:20> Text=" los_sem"
|   |-ParagraphComment 0x971be0 <line:365:3>
|   | `-TextComment 0x971bb0 <col:3> Text=" "
|   |-BlockCommandComment 0x971c00 <col:4, col:27> Name="brief"
|   | `-ParagraphComment 0x971c60 <col:10, col:27>
|   |   `-TextComment 0x971c30 <col:10, col:27> Text=" Create Semaphore."
|   |-ParagraphComment 0x971cb0 <line:367:3>
|   | `-TextComment 0x971c80 <col:3> Text=" "
|   |-BlockCommandComment 0x971cd0 <col:4, line:369:3> Name="par"
|   | `-ParagraphComment 0x971d80 <line:367:8, line:369:3>
|   |   |-TextComment 0x971d00 <line:367:8, col:20> Text=" Description:"
|   |   |-TextComment 0x971d20 <line:368:3, col:40> Text=" This API is used to create Semaphore."
|   |   `-TextComment 0x971d40 <line:369:3> Text=" "
|   |-BlockCommandComment 0x971da0 <col:4, line:372:8> Name="attention"
|   | `-ParagraphComment 0x971f70 <line:370:3, line:372:8>
|   |   |-TextComment 0x971dd0 <line:370:3> Text=" "
|   |   |-HTMLStartTagComment 0x971df0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x971e30 <line:371:3> Text=" "
|   |   |-HTMLStartTagComment 0x971e50 <col:4, col:7> Name="li"
|   |   |-TextComment 0x971e90 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x971eb0 <col:13, col:17> Name="li"
|   |   |-TextComment 0x971ee0 <line:372:3> Text=" "
|   |   `-HTMLEndTagComment 0x971f00 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x971fc0 <line:374:3>
|   | `-TextComment 0x971f90 <col:3> Text=" "
|   |-ParamCommandComment 0x971fe0 <col:4, line:375:3> [in] implicitly Param="count" ParamIndex=0
|   | `-ParagraphComment 0x972090 <line:374:17, line:375:3>
|   |   |-TextComment 0x972040 <line:374:17, col:56> Text="      [IN]Type  #UINT16 Semaphore count."
|   |   `-TextComment 0x972060 <line:375:3> Text=" "
|   |-ParamCommandComment 0x9720b0 <col:4, line:376:3> [in] implicitly Param="maxCount" ParamIndex=1
|   | `-ParagraphComment 0x972160 <line:375:20, line:376:3>
|   |   |-TextComment 0x972110 <line:375:20, col:60> Text="   [IN]Type  #UINT16 Max semaphore count."
|   |   `-TextComment 0x972130 <line:376:3> Text=" "
|   |-ParamCommandComment 0x972180 <col:4, col:61> [in] implicitly Param="semHandle" ParamIndex=2
|   | `-ParagraphComment 0x972210 <col:21, col:61>
|   |   `-TextComment 0x9721e0 <col:21, col:61> Text="  [OUT]Type #UINT32 * Index of semaphore."
|   |-ParagraphComment 0x972260 <line:378:3>
|   | `-TextComment 0x972230 <col:3> Text=" "
|   |-BlockCommandComment 0x972280 <col:4, line:379:3> Name="retval"
|   | `-ParagraphComment 0x972300 <line:378:11, line:379:3>
|   |   |-TextComment 0x9722b0 <line:378:11, col:34> Text=" UINT32   Create result."
|   |   `-TextComment 0x9722d0 <line:379:3> Text=" "
|   |-BlockCommandComment 0x972320 <col:4, line:381:3> Name="par"
|   | `-ParagraphComment 0x9724f0 <line:379:8, line:381:3>
|   |   |-TextComment 0x972350 <line:379:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x972370 <line:380:3> Text=" "
|   |   |-HTMLStartTagComment 0x972390 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x9723d0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x972410 <col:12, col:72> Text="los_sem.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x972430 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x972460 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x972490 <line:381:3> Text=" "
|   `-BlockCommandComment 0x972510 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x972570 <col:8, col:13>
|       `-TextComment 0x972540 <col:8, col:13> Text=" None."
|-EnumDecl 0x8e6968 <main/los_swtmr.h:220:1, line:223:1> line:220:6 enSwTmrRousesType
| |-EnumConstantDecl 0x8e6a30 <line:221:5> col:5 OS_SWTMR_ROUSES_IGNORE 'int'
| `-EnumConstantDecl 0x8e6a80 <line:222:5> col:5 OS_SWTMR_ROUSES_ALLOW 'int'
|-EnumDecl 0x8e6ad0 <line:225:1, line:228:1> line:225:6 enSwTmrAlignSensitive
| |-EnumConstantDecl 0x8e6b90 <line:226:5> col:5 OS_SWTMR_ALIGN_SENSITIVE 'int'
| `-EnumConstantDecl 0x8e6be0 <line:227:5> col:5 OS_SWTMR_ALIGN_INSENSITIVE 'int'
|-EnumDecl 0x8e6c58 <line:235:1, line:242:1> line:235:6 EnSwTmrType
| |-FullComment 0x972780 <line:232:3, line:233:22>
| | |-ParagraphComment 0x9726b0 <line:232:3>
| | | `-TextComment 0x972680 <col:3> Text=" "
| | |-VerbatimLineComment 0x9726d0 <col:4, col:22> Text=" los_swtmr"
| | `-ParagraphComment 0x972740 <line:233:3, col:22>
| |   `-TextComment 0x972710 <col:3, col:22> Text=" Software timer mode"
| |-EnumConstantDecl 0x8e6d20 <line:236:5> col:5 LOS_SWTMR_MODE_ONCE 'int'
| |-EnumConstantDecl 0x8e6d70 <line:237:5> col:5 LOS_SWTMR_MODE_PERIOD 'int'
| |-EnumConstantDecl 0x8e6dc0 <line:238:5> col:5 LOS_SWTMR_MODE_NO_SELFDELETE 'int'
| `-EnumConstantDecl 0x8e6e10 <line:239:5> col:5 LOS_SWTMR_MODE_OPP 'int'
|-TypedefDecl 0x8e6fc0 <line:264:1, col:44> col:16 referenced SWTMR_PROC_FUNC 'void (*)(UINT32)'
| |-PointerType 0x8e6f60 'void (*)(UINT32)'
| | `-ParenType 0x8e6f00 'void (UINT32)' sugar
| |   `-FunctionProtoType 0x783f40 'void (UINT32)' cdecl
| |     |-BuiltinType 0x701a20 'void'
| |     `-TypedefType 0x7650b0 'UINT32' sugar
| |       |-Typedef 0x7649e0 'UINT32'
| |       `-BuiltinType 0x701b60 'unsigned int'
| `-FullComment 0x973180 <line:245:2, line:262:12>
|   |-ParagraphComment 0x972820 <line:245:2>
|   | `-TextComment 0x9727f0 <col:2> Text=" "
|   |-VerbatimLineComment 0x972840 <col:3, col:22> Text="  los_swtmr"
|   |-ParagraphComment 0x9728b0 <line:246:2>
|   | `-TextComment 0x972880 <col:2> Text=" "
|   |-BlockCommandComment 0x9728d0 <col:3, col:84> Name="brief"
|   | `-ParagraphComment 0x972930 <col:9, col:84>
|   |   `-TextComment 0x972900 <col:9, col:84> Text=" Define the type of a callback function that handles software timer timeout."
|   |-ParagraphComment 0x972980 <line:248:2>
|   | `-TextComment 0x972950 <col:2> Text=" "
|   |-BlockCommandComment 0x9729a0 <col:3, line:250:37> Name="par"
|   | `-ParagraphComment 0x972a50 <line:248:7, line:250:37>
|   |   |-TextComment 0x9729d0 <line:248:7, col:19> Text=" Description:"
|   |   |-TextComment 0x9729f0 <line:249:2, col:115> Text=" This API is used to define the type of a callback function that handles software timer timeout, so that it can be"
|   |   `-TextComment 0x972a10 <line:250:2, col:37> Text=" called when software timer timeout."
|   |-ParagraphComment 0x972aa0 <line:252:2>
|   | `-TextComment 0x972a70 <col:2> Text=" "
|   |-BlockCommandComment 0x972ac0 <col:3, line:255:7> Name="attention"
|   | `-ParagraphComment 0x972c90 <line:253:2, line:255:7>
|   |   |-TextComment 0x972af0 <line:253:2> Text=" "
|   |   |-HTMLStartTagComment 0x972b10 <col:3, col:6> Name="ul"
|   |   |-TextComment 0x972b50 <line:254:2> Text=" "
|   |   |-HTMLStartTagComment 0x972b70 <col:3, col:6> Name="li"
|   |   |-TextComment 0x972bb0 <col:7, col:11> Text="None."
|   |   |-HTMLEndTagComment 0x972bd0 <col:12, col:16> Name="li"
|   |   |-TextComment 0x972c00 <line:255:2> Text=" "
|   |   `-HTMLEndTagComment 0x972c20 <col:3, col:7> Name="ul"
|   |-ParagraphComment 0x972ce0 <line:257:2>
|   | `-TextComment 0x972cb0 <col:2> Text=" "
|   |-ParamCommandComment 0x972d00 <col:3, col:99> [in] implicitly Param="para" ParamIndex=0
|   | `-ParagraphComment 0x972d90 <col:15, col:99>
|   |   `-TextComment 0x972d60 <col:15, col:99> Text="     [IN] the parameter of the callback function that handles software timer timeout."
|   |-ParagraphComment 0x972de0 <line:259:2>
|   | `-TextComment 0x972db0 <col:2> Text=" "
|   |-BlockCommandComment 0x972e00 <col:3, line:260:2> Name="retval"
|   | `-ParagraphComment 0x972e80 <line:259:10, line:260:2>
|   |   |-TextComment 0x972e30 <line:259:10, col:15> Text=" None."
|   |   `-TextComment 0x972e50 <line:260:2> Text=" "
|   |-BlockCommandComment 0x972ea0 <col:3, line:262:2> Name="par"
|   | `-ParagraphComment 0x973070 <line:260:7, line:262:2>
|   |   |-TextComment 0x972ed0 <line:260:7, col:18> Text=" Dependency:"
|   |   |-TextComment 0x972ef0 <line:261:2> Text=" "
|   |   |-HTMLStartTagComment 0x972f10 <col:3, col:6> Name="ul"
|   |   |-HTMLStartTagComment 0x972f50 <col:7, col:10> Name="li"
|   |   |-TextComment 0x972f90 <col:11, col:73> Text="los_swtmr.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x972fb0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x972fe0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x973010 <line:262:2> Text=" "
|   `-BlockCommandComment 0x973090 <col:3, col:12> Name="see"
|     `-ParagraphComment 0x9730f0 <col:7, col:12>
|       `-TextComment 0x9730c0 <col:7, col:12> Text=" None."
|-RecordDecl 0x8e7048 <line:270:9, line:286:1> line:270:16 struct tagSwTmrCtrl definition
| |-FullComment 0x9732f0 <line:267:3, line:268:35>
| | |-ParagraphComment 0x973220 <line:267:3>
| | | `-TextComment 0x9731f0 <col:3> Text=" "
| | |-VerbatimLineComment 0x973240 <col:4, col:22> Text=" los_swtmr"
| | `-ParagraphComment 0x9732b0 <line:268:3, col:35>
| |   `-TextComment 0x973280 <col:3, col:35> Text=" Software timer control structure"
| |-FieldDecl 0x8e71a0 <line:271:5, col:26> col:26 pstNext 'struct tagSwTmrCtrl *'
| |-FieldDecl 0x8e7200 <line:272:5, col:25> col:25 ucState 'UINT8':'unsigned char'
| |-FieldDecl 0x8e7260 <line:273:5, col:25> col:25 ucMode 'UINT8':'unsigned char'
| |-FieldDecl 0x8e72c0 <line:274:5, col:25> col:25 ucOverrun 'UINT8':'unsigned char'
| |-FieldDecl 0x8e7320 <line:276:5, col:25> col:25 ucRouses 'UINT8':'unsigned char'
| |-FieldDecl 0x8e7380 <line:277:5, col:25> col:25 ucSensitive 'UINT8':'unsigned char'
| |-FieldDecl 0x8e73e0 <line:279:5, col:25> col:25 usTimerID 'UINT32':'unsigned int'
| |-FieldDecl 0x8eca50 <line:280:5, col:25> col:25 uwInterval 'UINT32':'unsigned int'
| |-FieldDecl 0x8ecab0 <line:281:5, col:25> col:25 uwArg 'UINT32':'unsigned int'
| |-FieldDecl 0x8ecb30 <line:283:5, col:25> col:25 pfnHandler 'SWTMR_PROC_FUNC':'void (*)(UINT32)'
| |-FieldDecl 0x8ecb90 <line:284:5, col:25> col:25 stSortList 'SortLinkList':'SortLinkList'
| `-FieldDecl 0x8ecbf0 <line:285:5, col:25> col:25 startTime 'UINT64':'unsigned long long'
|-TypedefDecl 0x8ecc98 <line:270:1, line:286:3> col:3 referenced SWTMR_CTRL_S 'struct tagSwTmrCtrl':'struct tagSwTmrCtrl'
| |-ElaboratedType 0x8ecc40 'struct tagSwTmrCtrl' sugar
| | `-RecordType 0x8e70d0 'struct tagSwTmrCtrl'
| |   `-Record 0x8e7048 'tagSwTmrCtrl'
| `-FullComment 0x973460 <line:267:3, line:268:35>
|   |-ParagraphComment 0x973390 <line:267:3>
|   | `-TextComment 0x973360 <col:3> Text=" "
|   |-VerbatimLineComment 0x9733b0 <col:4, col:22> Text=" los_swtmr"
|   `-ParagraphComment 0x973420 <line:268:3, col:35>
|     `-TextComment 0x9733f0 <col:3, col:35> Text=" Software timer control structure"
|-FunctionDecl 0x8ecdd0 <line:310:1, col:44> col:15 LOS_SwtmrStart 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x8ecd40 <col:30, col:37> col:37 swtmrID 'UINT32':'unsigned int'
| `-FullComment 0x974010 <line:290:3, line:308:39>
|   |-ParagraphComment 0x973500 <line:290:3>
|   | `-TextComment 0x9734d0 <col:3> Text=" "
|   |-VerbatimLineComment 0x973520 <col:4, col:22> Text=" los_swtmr"
|   |-ParagraphComment 0x973590 <line:291:3>
|   | `-TextComment 0x973560 <col:3> Text=" "
|   |-BlockCommandComment 0x9735c0 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0x973620 <col:10, col:33>
|   |   `-TextComment 0x9735f0 <col:10, col:33> Text=" Start a software timer."
|   |-ParagraphComment 0x973670 <line:293:3>
|   | `-TextComment 0x973640 <col:3> Text=" "
|   |-BlockCommandComment 0x973690 <col:4, line:295:3> Name="par"
|   | `-ParagraphComment 0x973740 <line:293:8, line:295:3>
|   |   |-TextComment 0x9736c0 <line:293:8, col:20> Text=" Description:"
|   |   |-TextComment 0x9736e0 <line:294:3, col:70> Text=" This API is used to start a software timer that has a specified ID."
|   |   `-TextComment 0x973700 <line:295:3> Text=" "
|   |-BlockCommandComment 0x973760 <col:4, line:298:8> Name="attention"
|   | `-ParagraphComment 0x973930 <line:296:3, line:298:8>
|   |   |-TextComment 0x973790 <line:296:3> Text=" "
|   |   |-HTMLStartTagComment 0x9737b0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9737f0 <line:297:3> Text=" "
|   |   |-HTMLStartTagComment 0x973810 <col:4, col:7> Name="li"
|   |   |-TextComment 0x973850 <col:8, col:47> Text="The specific timer must be created first"
|   |   |-HTMLEndTagComment 0x973870 <col:48, col:52> Name="li"
|   |   |-TextComment 0x9738a0 <line:298:3> Text=" "
|   |   `-HTMLEndTagComment 0x9738c0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x973980 <line:300:3>
|   | `-TextComment 0x973950 <col:3> Text=" "
|   |-ParamCommandComment 0x9739a0 <col:4, col:70> [in] implicitly Param="swtmrID" ParamIndex=0
|   | `-ParagraphComment 0x973a30 <col:19, col:70>
|   |   `-TextComment 0x973a00 <col:19, col:70> Text="  [IN] Software timer ID created by LOS_SwtmrCreate."
|   |-ParagraphComment 0x973a80 <line:302:3>
|   | `-TextComment 0x973a50 <col:3> Text=" "
|   |-BlockCommandComment 0x973aa0 <col:4, line:303:3> Name="retval"
|   | `-ParagraphComment 0x973b20 <line:302:11, line:303:3>
|   |   |-TextComment 0x973ad0 <line:302:11, col:71> Text=" #LOS_ERRNO_SWTMR_ID_INVALID       Invalid software timer ID."
|   |   `-TextComment 0x973af0 <line:303:3> Text=" "
|   |-BlockCommandComment 0x973b40 <col:4, line:304:3> Name="retval"
|   | `-ParagraphComment 0x973bc0 <line:303:11, line:304:3>
|   |   |-TextComment 0x973b70 <line:303:11, col:79> Text=" #LOS_ERRNO_SWTMR_NOT_CREATED      The software timer is not created."
|   |   `-TextComment 0x973b90 <line:304:3> Text=" "
|   |-BlockCommandComment 0x973be0 <col:4, line:305:3> Name="retval"
|   | `-ParagraphComment 0x973c60 <line:304:11, line:305:3>
|   |   |-TextComment 0x973c10 <line:304:11, col:74> Text=" #LOS_ERRNO_SWTMR_STATUS_INVALID   Invalid software timer state."
|   |   `-TextComment 0x973c30 <line:305:3> Text=" "
|   |-BlockCommandComment 0x973c80 <col:4, line:306:3> Name="retval"
|   | `-ParagraphComment 0x973d00 <line:305:11, line:306:3>
|   |   |-TextComment 0x973cb0 <line:305:11, col:88> Text=" #LOS_OK                           The software timer is successfully started."
|   |   `-TextComment 0x973cd0 <line:306:3> Text=" "
|   |-BlockCommandComment 0x973d20 <col:4, line:308:3> Name="par"
|   | `-ParagraphComment 0x973ef0 <line:306:8, line:308:3>
|   |   |-TextComment 0x973d50 <line:306:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x973d70 <line:307:3> Text=" "
|   |   |-HTMLStartTagComment 0x973d90 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x973dd0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x973e10 <col:12, col:74> Text="los_swtmr.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x973e30 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x973e60 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x973e90 <line:308:3> Text=" "
|   `-BlockCommandComment 0x973f10 <col:4, col:39> Name="see"
|     `-ParagraphComment 0x973f70 <col:8, col:39>
|       `-TextComment 0x973f40 <col:8, col:39> Text=" LOS_SwtmrStop | LOS_SwtmrCreate"
|-FunctionDecl 0x8ecf48 <line:334:1, col:43> col:15 LOS_SwtmrStop 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x8eceb8 <col:29, col:36> col:36 swtmrID 'UINT32':'unsigned int'
| `-FullComment 0x974c60 <line:313:3, line:332:40>
|   |-ParagraphComment 0x9740b0 <line:313:3>
|   | `-TextComment 0x974080 <col:3> Text=" "
|   |-VerbatimLineComment 0x9740d0 <col:4, col:22> Text=" los_swtmr"
|   |-ParagraphComment 0x974140 <line:314:3>
|   | `-TextComment 0x974110 <col:3> Text=" "
|   |-BlockCommandComment 0x974160 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0x9741c0 <col:10, col:32>
|   |   `-TextComment 0x974190 <col:10, col:32> Text=" Stop a software timer."
|   |-ParagraphComment 0x974210 <line:316:3>
|   | `-TextComment 0x9741e0 <col:3> Text=" "
|   |-BlockCommandComment 0x974230 <col:4, line:318:3> Name="par"
|   | `-ParagraphComment 0x9742e0 <line:316:8, line:318:3>
|   |   |-TextComment 0x974260 <line:316:8, col:20> Text=" Description:"
|   |   |-TextComment 0x974280 <line:317:3, col:69> Text=" This API is used to stop a software timer that has a specified ID."
|   |   `-TextComment 0x9742a0 <line:318:3> Text=" "
|   |-BlockCommandComment 0x974300 <col:4, line:321:8> Name="attention"
|   | `-ParagraphComment 0x9744d0 <line:319:3, line:321:8>
|   |   |-TextComment 0x974330 <line:319:3> Text=" "
|   |   |-HTMLStartTagComment 0x974350 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x974390 <line:320:3> Text=" "
|   |   |-HTMLStartTagComment 0x9743b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9743f0 <col:8, col:64> Text="The specific timer should be created and started firstly."
|   |   |-HTMLEndTagComment 0x974410 <col:65, col:69> Name="li"
|   |   |-TextComment 0x974440 <line:321:3> Text=" "
|   |   `-HTMLEndTagComment 0x974460 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x974520 <line:323:3>
|   | `-TextComment 0x9744f0 <col:3> Text=" "
|   |-ParamCommandComment 0x974540 <col:4, col:70> [in] implicitly Param="swtmrID" ParamIndex=0
|   | `-ParagraphComment 0x9745d0 <col:19, col:70>
|   |   `-TextComment 0x9745a0 <col:19, col:70> Text="  [IN] Software timer ID created by LOS_SwtmrCreate."
|   |-ParagraphComment 0x974620 <line:325:3>
|   | `-TextComment 0x9745f0 <col:3> Text=" "
|   |-BlockCommandComment 0x974640 <col:4, line:326:3> Name="retval"
|   | `-ParagraphComment 0x9746c0 <line:325:11, line:326:3>
|   |   |-TextComment 0x974670 <line:325:11, col:71> Text=" #LOS_ERRNO_SWTMR_ID_INVALID       Invalid software timer ID."
|   |   `-TextComment 0x974690 <line:326:3> Text=" "
|   |-BlockCommandComment 0x9746e0 <col:4, line:327:3> Name="retval"
|   | `-ParagraphComment 0x974760 <line:326:11, line:327:3>
|   |   |-TextComment 0x974710 <line:326:11, col:79> Text=" #LOS_ERRNO_SWTMR_NOT_CREATED      The software timer is not created."
|   |   `-TextComment 0x974730 <line:327:3> Text=" "
|   |-BlockCommandComment 0x974780 <col:4, line:328:3> Name="retval"
|   | `-ParagraphComment 0x974800 <line:327:11, line:328:3>
|   |   |-TextComment 0x9747b0 <line:327:11, col:79> Text=" #LOS_ERRNO_SWTMR_NOT_STARTED      The software timer is not started."
|   |   `-TextComment 0x9747d0 <line:328:3> Text=" "
|   |-BlockCommandComment 0x974820 <col:4, line:329:3> Name="retval"
|   | `-ParagraphComment 0x9748a0 <line:328:11, line:329:3>
|   |   |-TextComment 0x974850 <line:328:11, col:74> Text=" #LOS_ERRNO_SWTMR_STATUS_INVALID   Invalid software timer state."
|   |   `-TextComment 0x974870 <line:329:3> Text=" "
|   |-BlockCommandComment 0x9748c0 <col:4, line:330:3> Name="retval"
|   | `-ParagraphComment 0x974940 <line:329:11, line:330:3>
|   |   |-TextComment 0x9748f0 <line:329:11, col:88> Text=" #LOS_OK                           The software timer is successfully stopped."
|   |   `-TextComment 0x974910 <line:330:3> Text=" "
|   |-BlockCommandComment 0x974960 <col:4, line:332:3> Name="par"
|   | `-ParagraphComment 0x974b30 <line:330:8, line:332:3>
|   |   |-TextComment 0x974990 <line:330:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9749b0 <line:331:3> Text=" "
|   |   |-HTMLStartTagComment 0x9749d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x974a10 <col:8, col:11> Name="li"
|   |   |-TextComment 0x974a50 <col:12, col:74> Text="los_swtmr.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x974a70 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x974aa0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x974ad0 <line:332:3> Text=" "
|   `-BlockCommandComment 0x974b50 <col:4, col:40> Name="see"
|     `-ParagraphComment 0x974bb0 <col:8, col:40>
|       `-TextComment 0x974b80 <col:8, col:40> Text=" LOS_SwtmrStart | LOS_SwtmrCreate"
|-FunctionDecl 0x8ed138 <line:360:1, col:60> col:15 LOS_SwtmrTimeGet 'UINT32 (UINT32, UINT32 *)' extern
| |-ParmVarDecl 0x8ed028 <col:32, col:39> col:39 swtmrID 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8ed0a0 <col:48, col:56> col:56 tick 'UINT32 *'
| `-FullComment 0x9759c0 <line:337:3, line:358:23>
|   |-ParagraphComment 0x974d00 <line:337:3>
|   | `-TextComment 0x974cd0 <col:3> Text=" "
|   |-VerbatimLineComment 0x974d20 <col:4, col:22> Text=" los_swtmr"
|   |-ParagraphComment 0x974d90 <line:338:3>
|   | `-TextComment 0x974d60 <col:3> Text=" "
|   |-BlockCommandComment 0x974db0 <col:4, col:78> Name="brief"
|   | `-ParagraphComment 0x974e10 <col:10, col:78>
|   |   `-TextComment 0x974de0 <col:10, col:78> Text=" Obtain the number of remaining Ticks configured on a software timer."
|   |-ParagraphComment 0x974e60 <line:340:3>
|   | `-TextComment 0x974e30 <col:3> Text=" "
|   |-BlockCommandComment 0x974e80 <col:4, line:343:3> Name="par"
|   | `-ParagraphComment 0x974f50 <line:340:8, line:343:3>
|   |   |-TextComment 0x974eb0 <line:340:8, col:20> Text=" Description:"
|   |   |-TextComment 0x974ed0 <line:341:3, col:111> Text=" This API is used to obtain the number of remaining Ticks configured on the software timer of which the ID is"
|   |   |-TextComment 0x974ef0 <line:342:3, col:26> Text=" specified by usSwTmrID."
|   |   `-TextComment 0x974f10 <line:343:3> Text=" "
|   |-BlockCommandComment 0x974f70 <col:4, line:346:8> Name="attention"
|   | `-ParagraphComment 0x975140 <line:344:3, line:346:8>
|   |   |-TextComment 0x974fa0 <line:344:3> Text=" "
|   |   |-HTMLStartTagComment 0x974fc0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x975000 <line:345:3> Text=" "
|   |   |-HTMLStartTagComment 0x975020 <col:4, col:7> Name="li"
|   |   |-TextComment 0x975060 <col:8, col:94> Text="The specific timer should be created and started successfully, error happens otherwise."
|   |   |-HTMLEndTagComment 0x975080 <col:95, col:99> Name="li"
|   |   |-TextComment 0x9750b0 <line:346:3> Text=" "
|   |   `-HTMLEndTagComment 0x9750d0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x975190 <line:348:3>
|   | `-TextComment 0x975160 <col:3> Text=" "
|   |-ParamCommandComment 0x9751b0 <col:4, line:349:3> [in] implicitly Param="swtmrID" ParamIndex=0
|   | `-ParagraphComment 0x975260 <line:348:19, line:349:3>
|   |   |-TextComment 0x975210 <line:348:19, col:71> Text="  [IN]  Software timer ID created by LOS_SwtmrCreate."
|   |   `-TextComment 0x975230 <line:349:3> Text=" "
|   |-ParamCommandComment 0x975280 <col:4, col:85> [in] implicitly Param="tick" ParamIndex=1
|   | `-ParagraphComment 0x975310 <col:16, col:85>
|   |   `-TextComment 0x9752e0 <col:16, col:85> Text="     [OUT] Number of remaining Ticks configured on the software timer."
|   |-ParagraphComment 0x975360 <line:351:3>
|   | `-TextComment 0x975330 <col:3> Text=" "
|   |-BlockCommandComment 0x975380 <col:4, line:352:3> Name="retval"
|   | `-ParagraphComment 0x975400 <line:351:11, line:352:3>
|   |   |-TextComment 0x9753b0 <line:351:11, col:70> Text=" #LOS_ERRNO_SWTMR_ID_INVALID      Invalid software timer ID."
|   |   `-TextComment 0x9753d0 <line:352:3> Text=" "
|   |-BlockCommandComment 0x975420 <col:4, line:353:3> Name="retval"
|   | `-ParagraphComment 0x9754a0 <line:352:11, line:353:3>
|   |   |-TextComment 0x975450 <line:352:11, col:78> Text=" #LOS_ERRNO_SWTMR_NOT_CREATED     The software timer is not created."
|   |   `-TextComment 0x975470 <line:353:3> Text=" "
|   |-BlockCommandComment 0x9754c0 <col:4, line:354:3> Name="retval"
|   | `-ParagraphComment 0x975540 <line:353:11, line:354:3>
|   |   |-TextComment 0x9754f0 <line:353:11, col:78> Text=" #LOS_ERRNO_SWTMR_NOT_STARTED     The software timer is not started."
|   |   `-TextComment 0x975510 <line:354:3> Text=" "
|   |-BlockCommandComment 0x975560 <col:4, line:355:3> Name="retval"
|   | `-ParagraphComment 0x975600 <line:354:11, line:355:3>
|   |   |-TextComment 0x975590 <line:354:11, col:73> Text=" #LOS_ERRNO_SWTMR_STATUS_INVALID  Invalid software timer state."
|   |   `-TextComment 0x9755d0 <line:355:3> Text=" "
|   |-BlockCommandComment 0x975620 <col:4, line:356:3> Name="retval"
|   | `-ParagraphComment 0x9756a0 <line:355:11, line:356:3>
|   |   |-TextComment 0x975650 <line:355:11, col:99> Text=" #LOS_OK                          The number of remaining Ticks is successfully obtained."
|   |   `-TextComment 0x975670 <line:356:3> Text=" "
|   |-BlockCommandComment 0x9756c0 <col:4, line:358:3> Name="par"
|   | `-ParagraphComment 0x975890 <line:356:8, line:358:3>
|   |   |-TextComment 0x9756f0 <line:356:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x975710 <line:357:3> Text=" "
|   |   |-HTMLStartTagComment 0x975730 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x975770 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9757b0 <col:12, col:74> Text="los_swtmr.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9757d0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x975800 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x975830 <line:358:3> Text=" "
|   `-BlockCommandComment 0x9758b0 <col:4, col:23> Name="see"
|     `-ParagraphComment 0x975910 <col:8, col:23>
|       `-TextComment 0x9758e0 <col:8, col:23> Text=" LOS_SwtmrCreate"
|-FunctionDecl 0x8ed678 <line:396:1, line:402:46> line:396:15 LOS_SwtmrCreate 'UINT32 (UINT32, UINT8, SWTMR_PROC_FUNC, UINT32 *, UINT32, UINT8, UINT8)' extern
| |-ParmVarDecl 0x8ed228 <col:31, col:38> col:38 interval 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8ed2a0 <line:397:31, col:37> col:37 mode 'UINT8':'unsigned char'
| |-ParmVarDecl 0x8ed318 <line:398:31, col:47> col:47 handler 'SWTMR_PROC_FUNC':'void (*)(UINT32)'
| |-ParmVarDecl 0x8ed390 <line:399:31, col:39> col:39 swtmrID 'UINT32 *'
| |-ParmVarDecl 0x8ed408 <line:400:31, col:38> col:38 arg 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8ed480 <line:401:31, col:37> col:37 rouses 'UINT8':'unsigned char'
| `-ParmVarDecl 0x8ed4f8 <line:402:31, col:37> col:37 sensitive 'UINT8':'unsigned char'
|-FunctionDecl 0x8ed818 <line:432:1, col:45> col:15 LOS_SwtmrDelete 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0x8ed788 <col:31, col:38> col:38 swtmrID 'UINT32':'unsigned int'
| `-FullComment 0x976560 <line:412:3, line:430:23>
|   |-ParagraphComment 0x975a60 <line:412:3>
|   | `-TextComment 0x975a30 <col:3> Text=" "
|   |-VerbatimLineComment 0x975a80 <col:4, col:22> Text=" los_swtmr"
|   |-ParagraphComment 0x975af0 <line:413:3>
|   | `-TextComment 0x975ac0 <col:3> Text=" "
|   |-BlockCommandComment 0x975b10 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0x975b70 <col:10, col:34>
|   |   `-TextComment 0x975b40 <col:10, col:34> Text=" Delete a software timer."
|   |-ParagraphComment 0x975bc0 <line:415:3>
|   | `-TextComment 0x975b90 <col:3> Text=" "
|   |-BlockCommandComment 0x975be0 <col:4, line:417:3> Name="par"
|   | `-ParagraphComment 0x975c90 <line:415:8, line:417:3>
|   |   |-TextComment 0x975c10 <line:415:8, col:20> Text=" Description:"
|   |   |-TextComment 0x975c30 <line:416:3, col:47> Text=" This API is used to delete a software timer."
|   |   `-TextComment 0x975c50 <line:417:3> Text=" "
|   |-BlockCommandComment 0x975cb0 <col:4, line:420:8> Name="attention"
|   | `-ParagraphComment 0x975e80 <line:418:3, line:420:8>
|   |   |-TextComment 0x975ce0 <line:418:3> Text=" "
|   |   |-HTMLStartTagComment 0x975d00 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x975d40 <line:419:3> Text=" "
|   |   |-HTMLStartTagComment 0x975d60 <col:4, col:7> Name="li"
|   |   |-TextComment 0x975da0 <col:8, col:69> Text="The specific timer should be created and then stopped firstly."
|   |   |-HTMLEndTagComment 0x975dc0 <col:70, col:74> Name="li"
|   |   |-TextComment 0x975df0 <line:420:3> Text=" "
|   |   `-HTMLEndTagComment 0x975e10 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x975ed0 <line:422:3>
|   | `-TextComment 0x975ea0 <col:3> Text=" "
|   |-ParamCommandComment 0x975ef0 <col:4, col:73> [in] implicitly Param="swtmrID" ParamIndex=0
|   | `-ParagraphComment 0x975f80 <col:19, col:73>
|   |   `-TextComment 0x975f50 <col:19, col:73> Text="     [IN] Software timer ID created by LOS_SwtmrCreate."
|   |-ParagraphComment 0x975fd0 <line:424:3>
|   | `-TextComment 0x975fa0 <col:3> Text=" "
|   |-BlockCommandComment 0x975ff0 <col:4, line:425:3> Name="retval"
|   | `-ParagraphComment 0x976070 <line:424:11, line:425:3>
|   |   |-TextComment 0x976020 <line:424:11, col:72> Text=" #LOS_ERRNO_SWTMR_ID_INVALID        Invalid software timer ID."
|   |   `-TextComment 0x976040 <line:425:3> Text=" "
|   |-BlockCommandComment 0x976090 <col:4, line:426:3> Name="retval"
|   | `-ParagraphComment 0x976110 <line:425:11, line:426:3>
|   |   |-TextComment 0x9760c0 <line:425:11, col:80> Text=" #LOS_ERRNO_SWTMR_NOT_CREATED       The software timer is not created."
|   |   `-TextComment 0x9760e0 <line:426:3> Text=" "
|   |-BlockCommandComment 0x976130 <col:4, line:427:3> Name="retval"
|   | `-ParagraphComment 0x9761b0 <line:426:11, line:427:3>
|   |   |-TextComment 0x976160 <line:426:11, col:75> Text=" #LOS_ERRNO_SWTMR_STATUS_INVALID    Invalid software timer state."
|   |   `-TextComment 0x976180 <line:427:3> Text=" "
|   |-BlockCommandComment 0x9761d0 <col:4, line:428:3> Name="retval"
|   | `-ParagraphComment 0x976250 <line:427:11, line:428:3>
|   |   |-TextComment 0x976200 <line:427:11, col:89> Text=" #LOS_OK                            The software timer is successfully deleted."
|   |   `-TextComment 0x976220 <line:428:3> Text=" "
|   |-BlockCommandComment 0x976270 <col:4, line:430:3> Name="par"
|   | `-ParagraphComment 0x976440 <line:428:8, line:430:3>
|   |   |-TextComment 0x9762a0 <line:428:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9762c0 <line:429:3> Text=" "
|   |   |-HTMLStartTagComment 0x9762e0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x976320 <col:8, col:11> Name="li"
|   |   |-TextComment 0x976360 <col:12, col:74> Text="los_swtmr.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x976380 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x9763b0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x9763e0 <line:430:3> Text=" "
|   `-BlockCommandComment 0x976460 <col:4, col:23> Name="see"
|     `-ParagraphComment 0x9764c0 <col:8, col:23>
|       `-TextComment 0x976490 <col:8, col:23> Text=" LOS_SwtmrCreate"
|-EnumDecl 0x8ed8e8 <line:438:1, line:442:1> line:438:6 SwtmrState
| |-FullComment 0x9766d0 <line:435:3, line:436:23>
| | |-ParagraphComment 0x976600 <line:435:3>
| | | `-TextComment 0x9765d0 <col:3> Text=" "
| | |-VerbatimLineComment 0x976620 <col:4, col:22> Text=" los_swtmr"
| | `-ParagraphComment 0x976690 <line:436:3, col:23>
| |   `-TextComment 0x976660 <col:3, col:23> Text=" Software timer state"
| |-EnumConstantDecl 0x8ed9b0 <line:439:5> col:5 OS_SWTMR_STATUS_UNUSED 'int'
| | `-FullComment 0x9767a0 <col:45, col:77>
| |   `-ParagraphComment 0x976770 <col:45, col:77>
| |     `-TextComment 0x976740 <col:45, col:77> Text=" The software timer is not used. "
| |-EnumConstantDecl 0x8eda50 <line:440:5> col:5 OS_SWTMR_STATUS_CREATED 'int'
| | `-FullComment 0x976870 <col:45, col:76>
| |   `-ParagraphComment 0x976840 <col:45, col:76>
| |     `-TextComment 0x976810 <col:45, col:76> Text=" The software timer is created. "
| `-EnumConstantDecl 0x8edaf8 <line:441:5> col:5 OS_SWTMR_STATUS_TICKING 'int'
|   `-FullComment 0x976940 <col:45, col:75>
|     `-ParagraphComment 0x976910 <col:45, col:75>
|       `-TextComment 0x9768e0 <col:45, col:75> Text=" The software timer is timing. "
|-RecordDecl 0x8edb78 <line:448:9, line:453:1> line:448:9 struct definition
| |-FullComment 0x976ab0 <line:445:3, line:446:73>
| | |-ParagraphComment 0x9769e0 <line:445:3>
| | | `-TextComment 0x9769b0 <col:3> Text=" "
| | |-VerbatimLineComment 0x976a00 <col:4, col:22> Text=" los_swtmr"
| | `-ParagraphComment 0x976a70 <line:446:3, col:73>
| |   `-TextComment 0x976a40 <col:3, col:73> Text=" Structure of the callback function that handles software timer timeout"
| |-FieldDecl 0x8edc30 <line:449:5, col:25> col:25 handler 'SWTMR_PROC_FUNC':'void (*)(UINT32)'
| | `-FullComment 0x976b80 <col:45, col:99>
| |   `-ParagraphComment 0x976b50 <col:45, col:99>
| |     `-TextComment 0x976b20 <col:45, col:99> Text=" Callback function that handles software timer timeout "
| |-FieldDecl 0x8edcb8 <line:450:5, col:25> col:25 arg 'UINT32':'unsigned int'
| | `-FullComment 0x976c70 <col:45, line:451:91>
| |   `-ParagraphComment 0x976c40 <line:450:45, line:451:91>
| |     |-TextComment 0x976bf0 <line:450:45, col:91> Text=" Parameter passed in when the callback function"
| |     `-TextComment 0x976c10 <line:451:1, col:91> Text="                                             that handles software timer timeout is called "
| `-FieldDecl 0x8edd48 <line:452:5, col:25> col:25 swtmrID 'UINT32':'unsigned int'
|   `-FullComment 0x976d40 <col:45, col:93>
|     `-ParagraphComment 0x976d10 <col:45, col:93>
|       `-TextComment 0x976ce0 <col:45, col:93> Text=" The id used to obtain the software timer handle "
|-TypedefDecl 0x8ede28 <line:448:1, line:453:3> col:3 SwtmrHandlerItem 'struct SwtmrHandlerItem':'SwtmrHandlerItem'
| |-ElaboratedType 0x8eddd0 'struct SwtmrHandlerItem' sugar
| | `-RecordType 0x8edc00 'SwtmrHandlerItem'
| |   `-Record 0x8edb78 ''
| `-FullComment 0x976eb0 <line:445:3, line:446:73>
|   |-ParagraphComment 0x976de0 <line:445:3>
|   | `-TextComment 0x976db0 <col:3> Text=" "
|   |-VerbatimLineComment 0x976e00 <col:4, col:22> Text=" los_swtmr"
|   `-ParagraphComment 0x976e70 <line:446:3, col:73>
|     `-TextComment 0x976e40 <col:3, col:73> Text=" Structure of the callback function that handles software timer timeout"
|-VarDecl 0x8edef8 <line:455:1, col:22> col:22 g_swtmrCBArray 'SWTMR_CTRL_S *' extern
|-FunctionDecl 0x8ee020 <line:479:1, col:31> col:15 OsSwtmrInit 'UINT32 (void)' extern
| `-FullComment 0x9779b0 <line:460:3, line:477:13>
|   |-ParagraphComment 0x976f50 <line:460:3>
|   | `-TextComment 0x976f20 <col:3> Text=" "
|   |-VerbatimLineComment 0x976f70 <col:4, col:22> Text=" los_swtmr"
|   |-ParagraphComment 0x976fe0 <line:461:3>
|   | `-TextComment 0x976fb0 <col:3> Text=" "
|   |-BlockCommandComment 0x977000 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0x977060 <col:10, col:40>
|   |   `-TextComment 0x977030 <col:10, col:40> Text=" Initialization software timer."
|   |-ParagraphComment 0x9770b0 <line:463:3>
|   | `-TextComment 0x977080 <col:3> Text=" "
|   |-BlockCommandComment 0x9770d0 <col:4, line:467:3> Name="par"
|   | `-ParagraphComment 0x9772f0 <line:463:8, line:467:3>
|   |   |-TextComment 0x977100 <line:463:8, col:20> Text=" Description:"
|   |   |-TextComment 0x977120 <line:464:3> Text=" "
|   |   |-HTMLStartTagComment 0x977140 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x977180 <line:465:3> Text=" "
|   |   |-HTMLStartTagComment 0x9771a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9771e0 <col:8, col:51> Text="This API is used to initialization software."
|   |   |-HTMLEndTagComment 0x977200 <col:52, col:56> Name="li"
|   |   |-TextComment 0x977230 <line:466:3> Text=" "
|   |   |-HTMLEndTagComment 0x977250 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x977280 <line:467:3> Text=" "
|   |-BlockCommandComment 0x977310 <col:4, line:470:8> Name="attention"
|   | `-ParagraphComment 0x9774e0 <line:468:3, line:470:8>
|   |   |-TextComment 0x977340 <line:468:3> Text=" "
|   |   |-HTMLStartTagComment 0x977360 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9773a0 <line:469:3> Text=" "
|   |   |-HTMLStartTagComment 0x9773c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x977400 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x977420 <col:13, col:17> Name="li"
|   |   |-TextComment 0x977450 <line:470:3> Text=" "
|   |   `-HTMLEndTagComment 0x977470 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x977530 <line:472:3>
|   | `-TextComment 0x977500 <col:3> Text=" "
|   |-ParamCommandComment 0x977550 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x9775b0 <<invalid sloc>>
|   |-ParagraphComment 0x977610 <line:474:3>
|   | `-TextComment 0x9775e0 <col:3> Text=" "
|   |-BlockCommandComment 0x977630 <col:4, line:475:3> Name="retval"
|   | `-ParagraphComment 0x9776b0 <line:474:11, line:475:3>
|   |   |-TextComment 0x977660 <line:474:11, col:16> Text=" None."
|   |   `-TextComment 0x977680 <line:475:3> Text=" "
|   |-BlockCommandComment 0x9776d0 <col:4, line:477:3> Name="par"
|   | `-ParagraphComment 0x9778a0 <line:475:8, line:477:3>
|   |   |-TextComment 0x977700 <line:475:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x977720 <line:476:3> Text=" "
|   |   |-HTMLStartTagComment 0x977740 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x977780 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9777c0 <col:12, col:74> Text="los_swtmr.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9777e0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x977810 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x977840 <line:477:3> Text=" "
|   `-BlockCommandComment 0x9778c0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x977920 <col:8, col:13>
|       `-TextComment 0x9778f0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8ee180 <line:501:1, col:41> col:15 OsSwtmrGetNextTimeout 'UINT32 (void)' extern
| `-FullComment 0x9784a0 <line:482:3, line:499:13>
|   |-ParagraphComment 0x977a50 <line:482:3>
|   | `-TextComment 0x977a20 <col:3> Text=" "
|   |-VerbatimLineComment 0x977a70 <col:4, col:22> Text=" los_swtmr"
|   |-ParagraphComment 0x977ae0 <line:483:3>
|   | `-TextComment 0x977ab0 <col:3> Text=" "
|   |-BlockCommandComment 0x977b00 <col:4, col:27> Name="brief"
|   | `-ParagraphComment 0x977b60 <col:10, col:27>
|   |   `-TextComment 0x977b30 <col:10, col:27> Text=" Get next timeout."
|   |-ParagraphComment 0x977bb0 <line:485:3>
|   | `-TextComment 0x977b80 <col:3> Text=" "
|   |-BlockCommandComment 0x977bd0 <col:4, line:489:3> Name="par"
|   | `-ParagraphComment 0x977df0 <line:485:8, line:489:3>
|   |   |-TextComment 0x977c00 <line:485:8, col:20> Text=" Description:"
|   |   |-TextComment 0x977c20 <line:486:3> Text=" "
|   |   |-HTMLStartTagComment 0x977c40 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x977c80 <line:487:3> Text=" "
|   |   |-HTMLStartTagComment 0x977ca0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x977ce0 <col:8, col:44> Text="This API is used to get next timeout."
|   |   |-HTMLEndTagComment 0x977d00 <col:45, col:49> Name="li"
|   |   |-TextComment 0x977d30 <line:488:3> Text=" "
|   |   |-HTMLEndTagComment 0x977d50 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x977d80 <line:489:3> Text=" "
|   |-BlockCommandComment 0x977e10 <col:4, line:492:8> Name="attention"
|   | `-ParagraphComment 0x977fe0 <line:490:3, line:492:8>
|   |   |-TextComment 0x977e40 <line:490:3> Text=" "
|   |   |-HTMLStartTagComment 0x977e60 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x977ea0 <line:491:3> Text=" "
|   |   |-HTMLStartTagComment 0x977ec0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x977f00 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x977f20 <col:13, col:17> Name="li"
|   |   |-TextComment 0x977f50 <line:492:3> Text=" "
|   |   `-HTMLEndTagComment 0x977f70 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x978030 <line:494:3>
|   | `-TextComment 0x978000 <col:3> Text=" "
|   |-ParamCommandComment 0x978050 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x9780b0 <<invalid sloc>>
|   |-ParagraphComment 0x978100 <line:496:3>
|   | `-TextComment 0x9780d0 <col:3> Text=" "
|   |-BlockCommandComment 0x978120 <col:4, line:497:3> Name="retval"
|   | `-ParagraphComment 0x9781a0 <line:496:11, line:497:3>
|   |   |-TextComment 0x978150 <line:496:11, col:16> Text=" None."
|   |   `-TextComment 0x978170 <line:497:3> Text=" "
|   |-BlockCommandComment 0x9781c0 <col:4, line:499:3> Name="par"
|   | `-ParagraphComment 0x978390 <line:497:8, line:499:3>
|   |   |-TextComment 0x9781f0 <line:497:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x978210 <line:498:3> Text=" "
|   |   |-HTMLStartTagComment 0x978230 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x978270 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9782b0 <col:12, col:74> Text="los_swtmr.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9782d0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x978300 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x978330 <line:499:3> Text=" "
|   `-BlockCommandComment 0x9783b0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x978410 <col:8, col:13>
|       `-TextComment 0x9783e0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8ee2c0 <line:503:1, col:54> col:13 OsSwtmrResponseTimeReset 'void (UINT64)' extern
| `-ParmVarDecl 0x8ee230 <col:38, col:45> col:45 startTime 'UINT64':'unsigned long long'
|-VarDecl 0x8ee378 <main/los_sched.h:49:1, col:15> col:15 g_taskScheduled 'UINT32':'unsigned int' extern
|-TypedefDecl 0x8ee4e8 <line:50:1, col:31> col:16 referenced SchedScan 'BOOL (*)(void)'
| `-PointerType 0x8ee490 'BOOL (*)(void)'
|   `-ParenType 0x8ee460 'BOOL (void)' sugar
|     `-FunctionProtoType 0x8c54d0 'BOOL (void)' cdecl
|       `-TypedefType 0x772cf0 'BOOL' sugar
|         |-Typedef 0x764ce8 'BOOL'
|         `-BuiltinType 0x701b60 'unsigned int'
|-FunctionDecl 0x8ee5e0 <main/los_compiler.h:327:23, main/los_sched.h:52:55> col:6 OsSchedResetSchedResponseTime 'void (UINT64)'
| `-ParmVarDecl 0x8ee550 <col:36, col:43> col:43 responseTime 'UINT64':'unsigned long long'
|-FunctionDecl 0x8ee788 <main/los_compiler.h:327:23, main/los_sched.h:54:54> col:6 OsSchedSetIdleTaskSchedParam 'void (LosTaskCB *)'
| `-ParmVarDecl 0x8ee698 <col:35, col:46> col:46 idleTask 'LosTaskCB *'
|-FunctionDecl 0x8ee958 <line:56:1, col:47> col:8 OsSchedSwtmrScanRegister 'UINT32 (SchedScan)'
| `-ParmVarDecl 0x8ee860 <col:33, col:43> col:43 func 'SchedScan':'BOOL (*)(void)'
|-FunctionDecl 0x8f0c78 <main/los_compiler.h:327:23, main/los_sched.h:58:34> col:6 OsSchedUpdateExpireTime 'void (void)'
|-FunctionDecl 0x8f0db8 <line:60:1, col:49> col:8 OsSchedGetNextExpireTime 'UINT64 (UINT64)'
| `-ParmVarDecl 0x8f0d28 <col:33, col:40> col:40 startTime 'UINT64':'unsigned long long'
|-FunctionDecl 0x8f0f00 <main/los_compiler.h:327:23, main/los_sched.h:62:42> col:6 OsSchedTaskDeQueue 'void (LosTaskCB *)'
| `-ParmVarDecl 0x8f0e70 <col:25, col:36> col:36 taskCB 'LosTaskCB *'
|-FunctionDecl 0x8f1048 <main/los_compiler.h:327:23, main/los_sched.h:64:42> col:6 OsSchedTaskEnQueue 'void (LosTaskCB *)'
| `-ParmVarDecl 0x8f0fb8 <col:25, col:36> col:36 taskCB 'LosTaskCB *'
|-FunctionDecl 0x8f1288 <main/los_compiler.h:327:23, main/los_sched.h:66:55> col:6 OsSchedTaskWait 'void (LOS_DL_LIST *, UINT32)'
| |-ParmVarDecl 0x8f1100 <col:22, col:35> col:35 list 'LOS_DL_LIST *'
| `-ParmVarDecl 0x8f1178 <col:41, col:48> col:48 timeout 'UINT32':'unsigned int'
|-FunctionDecl 0x8f13d8 <main/los_compiler.h:327:23, main/los_sched.h:68:44> col:6 OsSchedTaskWake 'void (LosTaskCB *)'
| `-ParmVarDecl 0x8f1348 <col:22, col:33> col:33 resumedTask 'LosTaskCB *'
|-FunctionDecl 0x8f1618 <line:70:1, col:68> col:6 OsSchedModifyTaskSchedParam 'BOOL (LosTaskCB *, UINT16)'
| |-ParmVarDecl 0x8f1490 <col:34, col:45> col:45 taskCB 'LosTaskCB *'
| `-ParmVarDecl 0x8f1508 <col:53, col:60> col:60 priority 'UINT16':'unsigned short'
|-FunctionDecl 0x8f1868 <main/los_compiler.h:327:23, main/los_sched.h:72:50> col:6 OsSchedDelay 'void (LosTaskCB *, UINT32)'
| |-ParmVarDecl 0x8f16d8 <col:19, col:30> col:30 runTask 'LosTaskCB *'
| `-ParmVarDecl 0x8f1750 <col:39, col:46> col:46 tick 'UINT32':'unsigned int'
|-FunctionDecl 0x8f19b0 <main/los_compiler.h:327:23, main/los_sched.h:74:23> col:6 OsSchedYield 'void (void)'
|-FunctionDecl 0x8f1af0 <main/los_compiler.h:327:23, main/los_sched.h:76:39> col:6 OsSchedTaskExit 'void (LosTaskCB *)'
| `-ParmVarDecl 0x8f1a60 <col:22, col:33> col:33 taskCB 'LosTaskCB *'
|-FunctionDecl 0x8f1c90 <main/los_compiler.h:327:23, main/los_sched.h:78:38> col:6 OsSchedSuspend 'void (LosTaskCB *)'
| `-ParmVarDecl 0x8f1c00 <col:21, col:32> col:32 taskCB 'LosTaskCB *'
|-FunctionDecl 0x8f1e38 <line:80:1, col:37> col:6 OsSchedResume 'BOOL (LosTaskCB *)'
| `-ParmVarDecl 0x8f1d48 <col:20, col:31> col:31 taskCB 'LosTaskCB *'
|-FunctionDecl 0x8f1f78 <main/los_compiler.h:327:23, main/los_sched.h:82:22> col:6 OsSchedTick 'void (void)'
|-FunctionDecl 0x8f20b0 <line:84:1, col:24> col:8 OsSchedInit 'UINT32 (void)'
|-FunctionDecl 0x8f21e8 <main/los_compiler.h:327:23, main/los_sched.h:86:23> col:6 OsSchedStart 'void (void)'
|-FunctionDecl 0x8f2320 <line:88:1, col:28> col:6 OsSchedTaskSwitch 'BOOL (void)'
|-FunctionDecl 0x8f2458 <line:90:1, col:29> col:12 OsGetTopTask 'LosTaskCB *(void)'
|-FunctionDecl 0x8f2590 <main/los_compiler.h:158:22, main/los_sched.h:95:1> line:92:22 OsGetCurrSchedTimeCycle 'UINT64 (void)' static inline
| `-CompoundStmt 0x8f2718 <line:93:1, line:95:1>
|   `-ReturnStmt 0x8f26e0 <line:94:5, col:28>
|     `-CallExpr 0x8f26c0 <col:12, col:28> 'UINT64':'unsigned long long'
|       `-ImplicitCastExpr 0x8f26a8 <col:12> 'UINT64 (*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x8f2630 <col:12> 'UINT64 (void)' Function 0x8ad198 'LOS_SysCycleGet' 'UINT64 (void)'
|-FunctionDecl 0x8f27c8 <line:113:1, col:45> col:15 LOS_SchedTickTimeoutNsGet 'UINT64 (void)' extern
| `-FullComment 0x978ca0 <line:98:3, line:111:7>
|   |-ParagraphComment 0x978540 <line:98:3>
|   | `-TextComment 0x978510 <col:3> Text=" "
|   |-VerbatimLineComment 0x978560 <col:4, col:22> Text=" los_sched"
|   |-ParagraphComment 0x9785d0 <line:99:3>
|   | `-TextComment 0x9785a0 <col:3> Text=" "
|   |-BlockCommandComment 0x9785f0 <col:4, col:90> Name="brief"
|   | `-ParagraphComment 0x978650 <col:10, col:90>
|   |   `-TextComment 0x978620 <col:10, col:90> Text=" Get the time, in nanoseconds, remaining before the next tick interrupt response."
|   |-ParagraphComment 0x9786a0 <line:101:3>
|   | `-TextComment 0x978670 <col:3> Text=" "
|   |-BlockCommandComment 0x9786c0 <col:4, line:102:103> Name="par"
|   | `-ParagraphComment 0x978740 <line:101:8, line:102:103>
|   |   |-TextComment 0x9786f0 <line:101:8, col:20> Text=" Description:"
|   |   `-TextComment 0x978710 <line:102:3, col:103> Text=" This API is used to get the time, in nanoseconds, remaining before the next tick interrupt response."
|   |-ParagraphComment 0x978790 <line:104:3>
|   | `-TextComment 0x978760 <col:3> Text=" "
|   |-BlockCommandComment 0x9787b0 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x978810 <col:14, col:19>
|   |   `-TextComment 0x9787e0 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x978860 <line:106:3>
|   | `-TextComment 0x978830 <col:3> Text=" "
|   |-ParamCommandComment 0x978880 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x9788e0 <<invalid sloc>>
|   |-ParagraphComment 0x978930 <line:108:3>
|   | `-TextComment 0x978900 <col:3> Text=" "
|   |-BlockCommandComment 0x978950 <col:4, line:109:3> Name="retval"
|   | `-ParagraphComment 0x9789d0 <line:108:11, line:109:3>
|   |   |-TextComment 0x978980 <line:108:11, col:33> Text=" #time, in nanoseconds."
|   |   `-TextComment 0x9789a0 <line:109:3> Text=" "
|   |-BlockCommandComment 0x9789f0 <col:4, line:111:3> Name="par"
|   | `-ParagraphComment 0x978bc0 <line:109:8, line:111:3>
|   |   |-TextComment 0x978a20 <line:109:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x978a40 <line:110:3> Text=" "
|   |   |-HTMLStartTagComment 0x978a60 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x978aa0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x978ae0 <col:12, col:74> Text="los_sched.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x978b00 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x978b30 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x978b60 <line:111:3> Text=" "
|   `-BlockCommandComment 0x978be0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x978c10 <<invalid sloc>>
|-FunctionDecl 0x8f2930 <line:131:1, col:38> col:13 LOS_SchedTickHandler 'void (void)' extern
| `-FullComment 0x9794a0 <line:116:3, line:129:7>
|   |-ParagraphComment 0x978d40 <line:116:3>
|   | `-TextComment 0x978d10 <col:3> Text=" "
|   |-VerbatimLineComment 0x978d60 <col:4, col:22> Text=" los_sched"
|   |-ParagraphComment 0x978dd0 <line:117:3>
|   | `-TextComment 0x978da0 <col:3> Text=" "
|   |-BlockCommandComment 0x978df0 <col:4, col:53> Name="brief"
|   | `-ParagraphComment 0x978e50 <col:10, col:53>
|   |   `-TextComment 0x978e20 <col:10, col:53> Text=" The system-provided tick interrupt handler."
|   |-ParagraphComment 0x978ea0 <line:119:3>
|   | `-TextComment 0x978e70 <col:3> Text=" "
|   |-BlockCommandComment 0x978ec0 <col:4, line:120:62> Name="par"
|   | `-ParagraphComment 0x978f40 <line:119:8, line:120:62>
|   |   |-TextComment 0x978ef0 <line:119:8, col:20> Text=" Description:"
|   |   `-TextComment 0x978f10 <line:120:3, col:62> Text=" This API is used to wake up a task that is blocked by time."
|   |-ParagraphComment 0x978f90 <line:122:3>
|   | `-TextComment 0x978f60 <col:3> Text=" "
|   |-BlockCommandComment 0x978fb0 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x979010 <col:14, col:19>
|   |   `-TextComment 0x978fe0 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x979060 <line:124:3>
|   | `-TextComment 0x979030 <col:3> Text=" "
|   |-ParamCommandComment 0x979080 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x9790e0 <<invalid sloc>>
|   |-ParagraphComment 0x979130 <line:126:3>
|   | `-TextComment 0x979100 <col:3> Text=" "
|   |-BlockCommandComment 0x979150 <col:4, line:127:3> Name="retval"
|   | `-ParagraphComment 0x9791d0 <line:126:11, line:127:3>
|   |   |-TextComment 0x979180 <line:126:11, col:16> Text=" None."
|   |   `-TextComment 0x9791a0 <line:127:3> Text=" "
|   |-BlockCommandComment 0x9791f0 <col:4, line:129:3> Name="par"
|   | `-ParagraphComment 0x9793c0 <line:127:8, line:129:3>
|   |   |-TextComment 0x979220 <line:127:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x979240 <line:128:3> Text=" "
|   |   |-HTMLStartTagComment 0x979260 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x9792a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9792e0 <col:12, col:74> Text="los_sched.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x979300 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x979330 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x979360 <line:129:3> Text=" "
|   `-BlockCommandComment 0x9793e0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x979410 <<invalid sloc>>
|-FunctionDecl 0x8f2a90 <line:149:1, col:30> col:13 LOS_Schedule 'void (void)' extern
| `-FullComment 0x97acd0 <line:134:3, line:147:7>
|   |-ParagraphComment 0x979540 <line:134:3>
|   | `-TextComment 0x979510 <col:3> Text=" "
|   |-VerbatimLineComment 0x979560 <col:4, col:22> Text=" los_sched"
|   |-ParagraphComment 0x97a600 <line:135:3>
|   | `-TextComment 0x9795a0 <col:3> Text=" "
|   |-BlockCommandComment 0x97a620 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0x97a680 <col:10, col:36>
|   |   `-TextComment 0x97a650 <col:10, col:36> Text=" Trigger a system dispatch."
|   |-ParagraphComment 0x97a6d0 <line:137:3>
|   | `-TextComment 0x97a6a0 <col:3> Text=" "
|   |-BlockCommandComment 0x97a6f0 <col:4, line:138:49> Name="par"
|   | `-ParagraphComment 0x97a770 <line:137:8, line:138:49>
|   |   |-TextComment 0x97a720 <line:137:8, col:20> Text=" Description:"
|   |   `-TextComment 0x97a740 <line:138:3, col:49> Text=" This API is used to trigger a system dispatch."
|   |-ParagraphComment 0x97a7c0 <line:140:3>
|   | `-TextComment 0x97a790 <col:3> Text=" "
|   |-BlockCommandComment 0x97a7e0 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0x97a840 <col:14, col:19>
|   |   `-TextComment 0x97a810 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0x97a890 <line:142:3>
|   | `-TextComment 0x97a860 <col:3> Text=" "
|   |-ParamCommandComment 0x97a8b0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x97a910 <<invalid sloc>>
|   |-ParagraphComment 0x97a960 <line:144:3>
|   | `-TextComment 0x97a930 <col:3> Text=" "
|   |-BlockCommandComment 0x97a980 <col:4, line:145:3> Name="retval"
|   | `-ParagraphComment 0x97aa00 <line:144:11, line:145:3>
|   |   |-TextComment 0x97a9b0 <line:144:11, col:16> Text=" None."
|   |   `-TextComment 0x97a9d0 <line:145:3> Text=" "
|   |-BlockCommandComment 0x97aa20 <col:4, line:147:3> Name="par"
|   | `-ParagraphComment 0x97abf0 <line:145:8, line:147:3>
|   |   |-TextComment 0x97aa50 <line:145:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x97aa70 <line:146:3> Text=" "
|   |   |-HTMLStartTagComment 0x97aa90 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x97aad0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x97ab10 <col:12, col:74> Text="los_sched.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x97ab30 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x97ab60 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x97ab90 <line:147:3> Text=" "
|   `-BlockCommandComment 0x97ac10 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x97ac40 <<invalid sloc>>
|-FunctionDecl 0x8f3d18 <main/los_memory.h:102:1, col:39> col:15 LOS_MemDeInit 'UINT32 (void *)' extern
| |-ParmVarDecl 0x8f3c20 <main/los_compiler.h:327:23, main/los_memory.h:102:35> col:35 pool 'void *'
| `-FullComment 0x97b6c0 <line:84:3, line:100:13>
|   |-ParagraphComment 0x97ad70 <line:84:3>
|   | `-TextComment 0x97ad40 <col:3> Text=" "
|   |-VerbatimLineComment 0x97ad90 <col:4, col:23> Text=" los_memory"
|   |-ParagraphComment 0x97ae00 <line:85:3>
|   | `-TextComment 0x97add0 <col:3> Text=" "
|   |-BlockCommandComment 0x97ae20 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0x97ae80 <col:10, col:38>
|   |   `-TextComment 0x97ae50 <col:10, col:38> Text=" Deinitialize dynamic memory."
|   |-ParagraphComment 0x97aed0 <line:87:3>
|   | `-TextComment 0x97aea0 <col:3> Text=" "
|   |-BlockCommandComment 0x97aef0 <col:4, line:90:8> Name="par"
|   | `-ParagraphComment 0x97b0e0 <line:87:8, line:90:8>
|   |   |-TextComment 0x97af20 <line:87:8, col:20> Text=" Description:"
|   |   |-TextComment 0x97af40 <line:88:3> Text=" "
|   |   |-HTMLStartTagComment 0x97af60 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x97afa0 <line:89:3> Text=" "
|   |   |-HTMLStartTagComment 0x97afc0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97b000 <col:8, col:83> Text="This API is used to deinitialize the dynamic memory of a doubly linked list."
|   |   |-HTMLEndTagComment 0x97b020 <col:84, col:88> Name="li"
|   |   |-TextComment 0x97b050 <line:90:3> Text=" "
|   |   `-HTMLEndTagComment 0x97b070 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x97b130 <line:92:3>
|   | `-TextComment 0x97b100 <col:3> Text=" "
|   |-ParamCommandComment 0x97b150 <col:4, col:56> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x97b1e0 <col:15, col:56>
|   |   `-TextComment 0x97b1b0 <col:15, col:56> Text="          [IN] Starting address of memory."
|   |-ParagraphComment 0x97b230 <line:94:3>
|   | `-TextComment 0x97b200 <col:3> Text=" "
|   |-BlockCommandComment 0x97b250 <col:4, line:95:3> Name="retval"
|   | `-ParagraphComment 0x97b2d0 <line:94:11, line:95:3>
|   |   |-TextComment 0x97b280 <line:94:11, col:68> Text=" #OS_ERROR   The dynamic memory fails to be deinitialized."
|   |   `-TextComment 0x97b2a0 <line:95:3> Text=" "
|   |-BlockCommandComment 0x97b2f0 <col:4, line:96:3> Name="retval"
|   | `-ParagraphComment 0x97b370 <line:95:11, line:96:3>
|   |   |-TextComment 0x97b320 <line:95:11, col:72> Text=" #LOS_OK     The dynamic memory is successfully deinitialized."
|   |   `-TextComment 0x97b340 <line:96:3> Text=" "
|   |-BlockCommandComment 0x97b390 <col:4, line:100:3> Name="par"
|   | `-ParagraphComment 0x97b5b0 <line:96:8, line:100:3>
|   |   |-TextComment 0x97b3c0 <line:96:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x97b3e0 <line:97:3> Text=" "
|   |   |-HTMLStartTagComment 0x97b400 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x97b440 <line:98:3> Text=" "
|   |   |-HTMLStartTagComment 0x97b460 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97b4a0 <col:8, col:71> Text="los_memory.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x97b4c0 <col:72, col:76> Name="li"
|   |   |-TextComment 0x97b4f0 <line:99:3> Text=" "
|   |   |-HTMLEndTagComment 0x97b510 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x97b540 <line:100:3> Text=" "
|   `-BlockCommandComment 0x97b5d0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x97b630 <col:8, col:13>
|       `-TextComment 0x97b600 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8f3e80 <line:120:1, col:35> col:15 LOS_MemPoolList 'UINT32 (void)' extern
| `-FullComment 0x97bef0 <line:105:3, line:118:13>
|   |-ParagraphComment 0x97b760 <line:105:3>
|   | `-TextComment 0x97b730 <col:3> Text=" "
|   |-VerbatimLineComment 0x97b780 <col:4, col:23> Text=" los_memory"
|   |-ParagraphComment 0x97b7f0 <line:106:3>
|   | `-TextComment 0x97b7c0 <col:3> Text=" "
|   |-BlockCommandComment 0x97b810 <col:4, col:44> Name="brief"
|   | `-ParagraphComment 0x97b870 <col:10, col:44>
|   |   `-TextComment 0x97b840 <col:10, col:44> Text=" Print information about all pools."
|   |-ParagraphComment 0x97b8c0 <line:108:3>
|   | `-TextComment 0x97b890 <col:3> Text=" "
|   |-BlockCommandComment 0x97b8e0 <col:4, line:111:8> Name="par"
|   | `-ParagraphComment 0x97bad0 <line:108:8, line:111:8>
|   |   |-TextComment 0x97b910 <line:108:8, col:20> Text=" Description:"
|   |   |-TextComment 0x97b930 <line:109:3> Text=" "
|   |   |-HTMLStartTagComment 0x97b950 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x97b990 <line:110:3> Text=" "
|   |   |-HTMLStartTagComment 0x97b9b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97b9f0 <col:8, col:61> Text="This API is used to print information about all pools."
|   |   |-HTMLEndTagComment 0x97ba10 <col:62, col:66> Name="li"
|   |   |-TextComment 0x97ba40 <line:111:3> Text=" "
|   |   `-HTMLEndTagComment 0x97ba60 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x97bb20 <line:113:3>
|   | `-TextComment 0x97baf0 <col:3> Text=" "
|   |-BlockCommandComment 0x97bb40 <col:4, line:114:3> Name="retval"
|   | `-ParagraphComment 0x97bbc0 <line:113:11, line:114:3>
|   |   |-TextComment 0x97bb70 <line:113:11, col:37> Text=" #UINT32   The pool number."
|   |   `-TextComment 0x97bb90 <line:114:3> Text=" "
|   |-BlockCommandComment 0x97bbe0 <col:4, line:118:3> Name="par"
|   | `-ParagraphComment 0x97be00 <line:114:8, line:118:3>
|   |   |-TextComment 0x97bc10 <line:114:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x97bc30 <line:115:3> Text=" "
|   |   |-HTMLStartTagComment 0x97bc50 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x97bc90 <line:116:3> Text=" "
|   |   |-HTMLStartTagComment 0x97bcb0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97bcf0 <col:8, col:71> Text="los_memory.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x97bd10 <col:72, col:76> Name="li"
|   |   |-TextComment 0x97bd40 <line:117:3> Text=" "
|   |   |-HTMLEndTagComment 0x97bd60 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x97bd90 <line:118:3> Text=" "
|   `-BlockCommandComment 0x97be20 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x97be80 <col:8, col:13>
|       `-TextComment 0x97be50 <col:8, col:13> Text=" None."
|-RecordDecl 0x8f3f48 <line:192:9, line:201:1> line:192:9 struct definition
| |-FullComment 0x97c060 <line:189:3, line:190:43>
| | |-ParagraphComment 0x97bf90 <line:189:3>
| | | `-TextComment 0x97bf60 <col:3> Text=" "
| | |-VerbatimLineComment 0x97bfb0 <col:4, col:23> Text=" los_memory"
| | `-ParagraphComment 0x97c020 <line:190:3, col:43>
| |   `-TextComment 0x97bff0 <col:3, col:43> Text=" Memory pool extern information structure"
| |-FieldDecl 0x8f4000 <line:193:5, col:12> col:12 totalUsedSize 'UINT32':'unsigned int'
| |-FieldDecl 0x8f4060 <line:194:5, col:12> col:12 totalFreeSize 'UINT32':'unsigned int'
| |-FieldDecl 0x8f40c0 <line:195:5, col:12> col:12 maxFreeNodeSize 'UINT32':'unsigned int'
| |-FieldDecl 0x8f4120 <line:196:5, col:12> col:12 usedNodeNum 'UINT32':'unsigned int'
| |-FieldDecl 0x8f4180 <line:197:5, col:12> col:12 freeNodeNum 'UINT32':'unsigned int'
| `-FieldDecl 0x8f41e0 <line:199:5, col:12> col:12 usageWaterLine 'UINT32':'unsigned int'
|-TypedefDecl 0x8f4288 <line:192:1, line:201:3> col:3 referenced LOS_MEM_POOL_STATUS 'struct LOS_MEM_POOL_STATUS':'LOS_MEM_POOL_STATUS'
| |-ElaboratedType 0x8f4230 'struct LOS_MEM_POOL_STATUS' sugar
| | `-RecordType 0x8f3fd0 'LOS_MEM_POOL_STATUS'
| |   `-Record 0x8f3f48 ''
| `-FullComment 0x97c1d0 <line:189:3, line:190:43>
|   |-ParagraphComment 0x97c100 <line:189:3>
|   | `-TextComment 0x97c0d0 <col:3> Text=" "
|   |-VerbatimLineComment 0x97c120 <col:4, col:23> Text=" los_memory"
|   `-ParagraphComment 0x97c190 <line:190:3, col:43>
|     `-TextComment 0x97c160 <col:3, col:43> Text=" Memory pool extern information structure"
|-FunctionDecl 0x8f44c8 <line:232:1, col:50> col:15 LOS_MemInit 'UINT32 (void *, UINT32)' extern
| |-ParmVarDecl 0x8f4338 <main/los_compiler.h:327:23, main/los_memory.h:232:33> col:33 pool 'void *'
| |-ParmVarDecl 0x8f43b0 <col:39, col:46> col:46 size 'UINT32':'unsigned int'
| `-FullComment 0x97d1d0 <line:204:3, line:230:13>
|   |-ParagraphComment 0x97c270 <line:204:3>
|   | `-TextComment 0x97c240 <col:3> Text=" "
|   |-VerbatimLineComment 0x97c290 <col:4, col:23> Text=" los_memory"
|   |-ParagraphComment 0x97c300 <line:205:3>
|   | `-TextComment 0x97c2d0 <col:3> Text=" "
|   |-BlockCommandComment 0x97c320 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0x97c380 <col:10, col:36>
|   |   `-TextComment 0x97c350 <col:10, col:36> Text=" Initialize dynamic memory."
|   |-ParagraphComment 0x97c3d0 <line:207:3>
|   | `-TextComment 0x97c3a0 <col:3> Text=" "
|   |-BlockCommandComment 0x97c3f0 <col:4, line:211:3> Name="par"
|   | `-ParagraphComment 0x97c660 <line:207:8, line:211:3>
|   |   |-TextComment 0x97c420 <line:207:8, col:20> Text=" Description:"
|   |   |-TextComment 0x97c440 <line:208:3> Text=" "
|   |   |-HTMLStartTagComment 0x97c460 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x97c4a0 <line:209:3> Text=" "
|   |   |-HTMLStartTagComment 0x97c4c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97c500 <col:8, col:81> Text="This API is used to initialize the dynamic memory of a doubly linked list."
|   |   |-HTMLEndTagComment 0x97c520 <col:82, col:86> Name="li"
|   |   |-TextComment 0x97c550 <line:210:3> Text=" "
|   |   |-HTMLEndTagComment 0x97c570 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x97c5a0 <line:211:3> Text=" "
|   |-BlockCommandComment 0x97c680 <col:4, line:219:8> Name="attention"
|   | `-ParagraphComment 0x97cb10 <line:212:3, line:219:8>
|   |   |-TextComment 0x97c6b0 <line:212:3> Text=" "
|   |   |-HTMLStartTagComment 0x97c6d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x97c710 <line:213:3> Text=" "
|   |   |-HTMLStartTagComment 0x97c730 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97c770 <col:8, col:75> Text="The size parameter value should match the following two conditions :"
|   |   |-TextComment 0x97c790 <line:214:3, col:52> Text=" 1) Be less than or equal to the Memory pool size;"
|   |   |-TextComment 0x97c7b0 <line:215:3, col:55> Text=" 2) Be greater than the size of OS_MEM_MIN_POOL_SIZE."
|   |   |-HTMLEndTagComment 0x97c7d0 <col:56, col:60> Name="li"
|   |   |-TextComment 0x97c800 <line:216:3> Text=" "
|   |   |-HTMLStartTagComment 0x97c820 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97c860 <col:8, col:101> Text="Call this API when dynamic memory needs to be initialized during the startup of Huawei LiteOS."
|   |   |-HTMLEndTagComment 0x97c880 <col:102, col:106> Name="li"
|   |   |-TextComment 0x97c8b0 <line:217:3> Text=" "
|   |   |-HTMLStartTagComment 0x97c8d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97c910 <col:8, col:53> Text="The parameter input must be four byte-aligned."
|   |   |-HTMLEndTagComment 0x97c930 <col:54, col:58> Name="li"
|   |   |-TextComment 0x97c960 <line:218:3> Text=" "
|   |   |-HTMLStartTagComment 0x97c980 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97c9c0 <col:8, col:78> Text="The init area [pool, pool + size] should not conflict with other pools."
|   |   |-HTMLEndTagComment 0x97c9e0 <col:79, col:83> Name="li"
|   |   |-TextComment 0x97ca10 <line:219:3> Text=" "
|   |   `-HTMLEndTagComment 0x97ca30 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x97cb60 <line:221:3>
|   | `-TextComment 0x97cb30 <col:3> Text=" "
|   |-ParamCommandComment 0x97cb80 <col:4, line:222:3> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x97cc30 <line:221:15, line:222:3>
|   |   |-TextComment 0x97cbe0 <line:221:15, col:55> Text="         [IN] Starting address of memory."
|   |   `-TextComment 0x97cc00 <line:222:3> Text=" "
|   |-ParamCommandComment 0x97cc50 <col:4, col:40> [in] implicitly Param="size" ParamIndex=1
|   | `-ParagraphComment 0x97cce0 <col:15, col:40>
|   |   `-TextComment 0x97ccb0 <col:15, col:40> Text="         [IN] Memory size."
|   |-ParagraphComment 0x97cd30 <line:224:3>
|   | `-TextComment 0x97cd00 <col:3> Text=" "
|   |-BlockCommandComment 0x97cd50 <col:4, line:225:3> Name="retval"
|   | `-ParagraphComment 0x97cdd0 <line:224:11, line:225:3>
|   |   |-TextComment 0x97cd80 <line:224:11, col:66> Text=" #OS_ERROR   The dynamic memory fails to be initialized."
|   |   `-TextComment 0x97cda0 <line:225:3> Text=" "
|   |-BlockCommandComment 0x97cdf0 <col:4, line:226:3> Name="retval"
|   | `-ParagraphComment 0x97ce70 <line:225:11, line:226:3>
|   |   |-TextComment 0x97ce20 <line:225:11, col:70> Text=" #LOS_OK     The dynamic memory is successfully initialized."
|   |   `-TextComment 0x97ce40 <line:226:3> Text=" "
|   |-BlockCommandComment 0x97ce90 <col:4, line:230:3> Name="par"
|   | `-ParagraphComment 0x97d0b0 <line:226:8, line:230:3>
|   |   |-TextComment 0x97cec0 <line:226:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x97cee0 <line:227:3> Text=" "
|   |   |-HTMLStartTagComment 0x97cf00 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x97cf40 <line:228:3> Text=" "
|   |   |-HTMLStartTagComment 0x97cf60 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97cfa0 <col:8, col:71> Text="los_memory.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x97cfc0 <col:72, col:76> Name="li"
|   |   |-TextComment 0x97cff0 <line:229:3> Text=" "
|   |   |-HTMLEndTagComment 0x97d010 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x97d040 <line:230:3> Text=" "
|   `-BlockCommandComment 0x97d0d0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x97d130 <col:8, col:13>
|       `-TextComment 0x97d100 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8f4750 <line:260:1, col:50> col:14 LOS_MemAlloc 'void *(void *, UINT32)' extern
| |-ParmVarDecl 0x8f45c0 <main/los_compiler.h:327:23, main/los_memory.h:260:33> col:33 pool 'void *'
| |-ParmVarDecl 0x8f4638 <col:39, col:46> col:46 size 'UINT32':'unsigned int'
| `-FullComment 0x97e060 <line:235:3, line:258:56>
|   |-ParagraphComment 0x97d270 <line:235:3>
|   | `-TextComment 0x97d240 <col:3> Text=" "
|   |-VerbatimLineComment 0x97d290 <col:4, col:23> Text=" los_memory"
|   |-ParagraphComment 0x97d300 <line:236:3>
|   | `-TextComment 0x97d2d0 <col:3> Text=" "
|   |-BlockCommandComment 0x97d320 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0x97d380 <col:10, col:34>
|   |   `-TextComment 0x97d350 <col:10, col:34> Text=" Allocate dynamic memory."
|   |-ParagraphComment 0x97d3d0 <line:238:3>
|   | `-TextComment 0x97d3a0 <col:3> Text=" "
|   |-BlockCommandComment 0x97d3f0 <col:4, line:242:3> Name="par"
|   | `-ParagraphComment 0x97d610 <line:238:8, line:242:3>
|   |   |-TextComment 0x97d420 <line:238:8, col:20> Text=" Description:"
|   |   |-TextComment 0x97d440 <line:239:3> Text=" "
|   |   |-HTMLStartTagComment 0x97d460 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x97d4a0 <line:240:3> Text=" "
|   |   |-HTMLStartTagComment 0x97d4c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97d500 <col:8, col:82> Text="This API is used to allocate a memory block of which the size is specified."
|   |   |-HTMLEndTagComment 0x97d520 <col:83, col:87> Name="li"
|   |   |-TextComment 0x97d550 <line:241:3> Text=" "
|   |   |-HTMLEndTagComment 0x97d570 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x97d5a0 <line:242:3> Text=" "
|   |-BlockCommandComment 0x97d630 <col:4, line:248:8> Name="attention"
|   | `-ParagraphComment 0x97d9c0 <line:243:3, line:248:8>
|   |   |-TextComment 0x97d660 <line:243:3> Text=" "
|   |   |-HTMLStartTagComment 0x97d680 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x97d6c0 <line:244:3> Text=" "
|   |   |-HTMLStartTagComment 0x97d6e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97d720 <col:8, col:73> Text="The input pool parameter must be initialized via func LOS_MemInit."
|   |   |-HTMLEndTagComment 0x97d740 <col:74, col:78> Name="li"
|   |   |-TextComment 0x97d770 <line:245:3> Text=" "
|   |   |-HTMLStartTagComment 0x97d790 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97d7d0 <col:8, col:117> Text="The size of the input parameter size can not be greater than the memory pool size that specified at the second"
|   |   |-TextComment 0x97d7f0 <line:246:3, col:34> Text=" input parameter of LOS_MemInit."
|   |   |-HTMLEndTagComment 0x97d810 <col:35, col:39> Name="li"
|   |   |-TextComment 0x97d840 <line:247:3> Text=" "
|   |   |-HTMLStartTagComment 0x97d860 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97d8a0 <col:8, col:70> Text="The size of the input parameter size must be four byte-aligned."
|   |   |-HTMLEndTagComment 0x97d8c0 <col:71, col:75> Name="li"
|   |   |-TextComment 0x97d8f0 <line:248:3> Text=" "
|   |   `-HTMLEndTagComment 0x97d910 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x97da10 <line:250:3>
|   | `-TextComment 0x97d9e0 <col:3> Text=" "
|   |-ParamCommandComment 0x97da30 <col:4, line:251:3> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x97dae0 <line:250:16, line:251:3>
|   |   |-TextComment 0x97da90 <line:250:16, col:98> Text="    [IN] Pointer to the memory pool that contains the memory block to be allocated."
|   |   `-TextComment 0x97dab0 <line:251:3> Text=" "
|   |-ParamCommandComment 0x97db00 <col:4, col:78> [in] implicitly Param="size" ParamIndex=1
|   | `-ParagraphComment 0x97db90 <col:16, col:78>
|   |   `-TextComment 0x97db60 <col:16, col:78> Text="    [IN] Size of the memory block to be allocated (unit: byte)."
|   |-ParagraphComment 0x97dbe0 <line:253:3>
|   | `-TextComment 0x97dbb0 <col:3> Text=" "
|   |-BlockCommandComment 0x97dc00 <col:4, line:254:3> Name="retval"
|   | `-ParagraphComment 0x97dc80 <line:253:11, line:254:3>
|   |   |-TextComment 0x97dc30 <line:253:11, col:59> Text=" #NULL          The memory fails to be allocated."
|   |   `-TextComment 0x97dc50 <line:254:3> Text=" "
|   |-BlockCommandComment 0x97dca0 <col:4, line:256:3> Name="retval"
|   | `-ParagraphComment 0x97dd50 <line:254:11, line:256:3>
|   |   |-TextComment 0x97dcd0 <line:254:11, col:118> Text=" #VOID*         The memory is successfully allocated with the starting address of the allocated memory block"
|   |   |-TextComment 0x97dcf0 <line:255:3, col:35> Text="                        returned."
|   |   `-TextComment 0x97dd10 <line:256:3> Text=" "
|   |-BlockCommandComment 0x97dd70 <col:4, line:258:3> Name="par"
|   | `-ParagraphComment 0x97df40 <line:256:8, line:258:3>
|   |   |-TextComment 0x97dda0 <line:256:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x97ddc0 <line:257:3> Text=" "
|   |   |-HTMLStartTagComment 0x97dde0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x97de20 <col:8, col:11> Name="li"
|   |   |-TextComment 0x97de60 <col:12, col:75> Text="los_memory.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x97de80 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0x97deb0 <col:81, col:85> Name="ul"
|   |   `-TextComment 0x97dee0 <line:258:3> Text=" "
|   `-BlockCommandComment 0x97df60 <col:4, col:56> Name="see"
|     `-ParagraphComment 0x97dfc0 <col:8, col:56>
|       `-TextComment 0x97df90 <col:8, col:56> Text=" LOS_MemRealloc | LOS_MemAllocAlign | LOS_MemFree"
|-FunctionDecl 0x8f49d8 <line:284:1, col:48> col:15 LOS_MemFree 'UINT32 (void *, void *)' extern
| |-ParmVarDecl 0x8f4840 <main/los_compiler.h:327:23, main/los_memory.h:284:33> col:33 pool 'void *'
| |-ParmVarDecl 0x8f48c0 <main/los_compiler.h:327:23, main/los_memory.h:284:45> col:45 ptr 'void *'
| `-FullComment 0x97ed50 <line:263:3, line:282:57>
|   |-ParagraphComment 0x97e100 <line:263:3>
|   | `-TextComment 0x97e0d0 <col:3> Text=" "
|   |-VerbatimLineComment 0x97e120 <col:4, col:23> Text=" los_memory"
|   |-ParagraphComment 0x97e190 <line:264:3>
|   | `-TextComment 0x97e160 <col:3> Text=" "
|   |-BlockCommandComment 0x97e1b0 <col:4, col:30> Name="brief"
|   | `-ParagraphComment 0x97e210 <col:10, col:30>
|   |   `-TextComment 0x97e1e0 <col:10, col:30> Text=" Free dynamic memory."
|   |-ParagraphComment 0x97e260 <line:266:3>
|   | `-TextComment 0x97e230 <col:3> Text=" "
|   |-BlockCommandComment 0x97e280 <col:4, line:268:3> Name="par"
|   | `-ParagraphComment 0x97e3d0 <line:266:8, line:268:3>
|   |   |-TextComment 0x97e2b0 <line:266:8, col:20> Text=" Description:"
|   |   |-TextComment 0x97e2d0 <line:267:3> Text=" "
|   |   |-HTMLStartTagComment 0x97e2f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97e330 <col:8, col:81> Text="This API is used to free specified dynamic memory that has been allocated."
|   |   |-HTMLEndTagComment 0x97e350 <col:82, col:86> Name="li"
|   |   `-TextComment 0x97e380 <line:268:3> Text=" "
|   |-BlockCommandComment 0x97e3f0 <col:4, line:272:8> Name="attention"
|   | `-ParagraphComment 0x97e6b0 <line:269:3, line:272:8>
|   |   |-TextComment 0x97e420 <line:269:3> Text=" "
|   |   |-HTMLStartTagComment 0x97e440 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x97e480 <line:270:3> Text=" "
|   |   |-HTMLStartTagComment 0x97e4a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97e4e0 <col:8, col:73> Text="The input pool parameter must be initialized via func LOS_MemInit."
|   |   |-HTMLEndTagComment 0x97e500 <col:74, col:78> Name="li"
|   |   |-TextComment 0x97e530 <line:271:3> Text=" "
|   |   |-HTMLStartTagComment 0x97e550 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97e590 <col:8, col:104> Text="The input ptr parameter must be allocated by LOS_MemAlloc or LOS_MemAllocAlign or LOS_MemRealloc."
|   |   |-HTMLEndTagComment 0x97e5b0 <col:105, col:109> Name="li"
|   |   |-TextComment 0x97e5e0 <line:272:3> Text=" "
|   |   `-HTMLEndTagComment 0x97e620 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x97e700 <line:274:3>
|   | `-TextComment 0x97e6d0 <col:3> Text=" "
|   |-ParamCommandComment 0x97e720 <col:4, line:275:3> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x97e7d0 <line:274:16, line:275:3>
|   |   |-TextComment 0x97e780 <line:274:16, col:100> Text="  [IN] Pointer to the memory pool that contains the dynamic memory block to be freed."
|   |   `-TextComment 0x97e7a0 <line:275:3> Text=" "
|   |-ParamCommandComment 0x97e7f0 <col:4, col:71> [in] implicitly Param="ptr" ParamIndex=1
|   | `-ParagraphComment 0x97e880 <col:15, col:71>
|   |   `-TextComment 0x97e850 <col:15, col:71> Text="   [IN] Starting address of the memory block to be freed."
|   |-ParagraphComment 0x97e8d0 <line:277:3>
|   | `-TextComment 0x97e8a0 <col:3> Text=" "
|   |-BlockCommandComment 0x97e8f0 <col:4, line:279:3> Name="retval"
|   | `-ParagraphComment 0x97e9a0 <line:277:11, line:279:3>
|   |   |-TextComment 0x97e920 <line:277:11, col:115> Text=" #LOS_NOK          The memory block fails to be freed because the starting address of the memory block is"
|   |   |-TextComment 0x97e940 <line:278:3, col:71> Text="                           invalid, or the memory overwriting occurs."
|   |   `-TextComment 0x97e960 <line:279:3> Text=" "
|   |-BlockCommandComment 0x97e9c0 <col:4, line:280:3> Name="retval"
|   | `-ParagraphComment 0x97ea40 <line:279:11, line:280:3>
|   |   |-TextComment 0x97e9f0 <line:279:11, col:68> Text=" #LOS_OK           The memory block is successfully freed."
|   |   `-TextComment 0x97ea10 <line:280:3> Text=" "
|   |-BlockCommandComment 0x97ea60 <col:4, line:282:3> Name="par"
|   | `-ParagraphComment 0x97ec30 <line:280:8, line:282:3>
|   |   |-TextComment 0x97ea90 <line:280:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x97eab0 <line:281:3> Text=" "
|   |   |-HTMLStartTagComment 0x97ead0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x97eb10 <col:8, col:11> Name="li"
|   |   |-TextComment 0x97eb50 <col:12, col:75> Text="los_memory.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x97eb70 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0x97eba0 <col:81, col:85> Name="ul"
|   |   `-TextComment 0x97ebd0 <line:282:3> Text=" "
|   `-BlockCommandComment 0x97ec50 <col:4, col:57> Name="see"
|     `-ParagraphComment 0x97ecb0 <col:8, col:57>
|       `-TextComment 0x97ec80 <col:8, col:57> Text=" LOS_MemAlloc | LOS_MemRealloc | LOS_MemAllocAlign"
|-FunctionDecl 0x8f4cd8 <line:318:1, col:63> col:14 LOS_MemRealloc 'void *(void *, void *, UINT32)' extern
| |-ParmVarDecl 0x8f4ad0 <main/los_compiler.h:327:23, main/los_memory.h:318:35> col:35 pool 'void *'
| |-ParmVarDecl 0x8f4b50 <main/los_compiler.h:327:23, main/los_memory.h:318:47> col:47 ptr 'void *'
| |-ParmVarDecl 0x8f4c30 <col:52, col:59> col:59 size 'UINT32':'unsigned int'
| `-FullComment 0x97fe20 <line:287:3, line:316:54>
|   |-ParagraphComment 0x97edf0 <line:287:3>
|   | `-TextComment 0x97edc0 <col:3> Text=" "
|   |-VerbatimLineComment 0x97ee10 <col:4, col:23> Text=" los_memory"
|   |-ParagraphComment 0x97ee80 <line:288:3>
|   | `-TextComment 0x97ee50 <col:3> Text=" "
|   |-BlockCommandComment 0x97eea0 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0x97ef00 <col:10, col:37>
|   |   `-TextComment 0x97eed0 <col:10, col:37> Text=" Re-allocate a memory block."
|   |-ParagraphComment 0x97ef50 <line:290:3>
|   | `-TextComment 0x97ef20 <col:3> Text=" "
|   |-BlockCommandComment 0x97ef70 <col:4, line:297:3> Name="par"
|   | `-ParagraphComment 0x97f210 <line:290:8, line:297:3>
|   |   |-TextComment 0x97efa0 <line:290:8, col:20> Text=" Description:"
|   |   |-TextComment 0x97efc0 <line:291:3> Text=" "
|   |   |-HTMLStartTagComment 0x97efe0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x97f020 <line:292:3> Text=" "
|   |   |-HTMLStartTagComment 0x97f040 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97f080 <col:8, col:116> Text="This API is used to allocate a new memory block of which the size is specified by size if the original memory"
|   |   |-TextComment 0x97f0a0 <line:293:3, col:112> Text=" block size is insufficient. The new memory block will copy the data in the original memory block of which the"
|   |   |-TextComment 0x97f0c0 <line:294:3, col:114> Text=" address is specified by ptr. The size of the new memory block determines the maximum size of data to be copied."
|   |   |-TextComment 0x97f0e0 <line:295:3, col:68> Text=" After the new memory block is created, the original one is freed."
|   |   |-HTMLEndTagComment 0x97f100 <col:69, col:73> Name="li"
|   |   |-TextComment 0x97f130 <line:296:3> Text=" "
|   |   |-HTMLEndTagComment 0x97f150 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x97f180 <line:297:3> Text=" "
|   |-BlockCommandComment 0x97f230 <col:4, line:306:8> Name="attention"
|   | `-ParagraphComment 0x97f6e0 <line:298:3, line:306:8>
|   |   |-TextComment 0x97f260 <line:298:3> Text=" "
|   |   |-HTMLStartTagComment 0x97f280 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x97f2c0 <line:299:3> Text=" "
|   |   |-HTMLStartTagComment 0x97f2e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97f320 <col:8, col:73> Text="The input pool parameter must be initialized via func LOS_MemInit."
|   |   |-HTMLEndTagComment 0x97f340 <col:74, col:78> Name="li"
|   |   |-TextComment 0x97f370 <line:300:3> Text=" "
|   |   |-HTMLStartTagComment 0x97f390 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97f3d0 <col:8, col:86> Text="The input ptr parameter must be allocated by LOS_MemAlloc or LOS_MemAllocAlign."
|   |   |-HTMLEndTagComment 0x97f3f0 <col:87, col:91> Name="li"
|   |   |-TextComment 0x97f420 <line:301:3> Text=" "
|   |   |-HTMLStartTagComment 0x97f440 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97f480 <col:8, col:117> Text="The size of the input parameter size can not be greater than the memory pool size that specified at the second"
|   |   |-TextComment 0x97f4a0 <line:302:3, col:34> Text=" input parameter of LOS_MemInit."
|   |   |-HTMLEndTagComment 0x97f4c0 <col:35, col:39> Name="li"
|   |   |-TextComment 0x97f4f0 <line:303:3> Text=" "
|   |   |-HTMLStartTagComment 0x97f510 <col:4, col:7> Name="li"
|   |   |-TextComment 0x97f550 <col:8, col:115> Text="The size of the input parameter size must be aligned as follows: 1) if the ptr is allocated by LOS_MemAlloc,"
|   |   |-TextComment 0x97f570 <line:304:3, col:117> Text=" it must be four byte-aligned; 2) if the ptr is allocated by LOS_MemAllocAlign, it must be aligned with the size of"
|   |   |-TextComment 0x97f590 <line:305:3, col:53> Text=" the input parameter boundary of LOS_MemAllocAlign."
|   |   |-HTMLEndTagComment 0x97f5b0 <col:54, col:58> Name="li"
|   |   |-TextComment 0x97f5e0 <line:306:3> Text=" "
|   |   `-HTMLEndTagComment 0x97f600 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x97f730 <line:308:3>
|   | `-TextComment 0x97f700 <col:3> Text=" "
|   |-ParamCommandComment 0x97f750 <col:4, line:309:3> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x97f800 <line:308:16, line:309:3>
|   |   |-TextComment 0x97f7b0 <line:308:16, col:101> Text="     [IN] Pointer to the memory pool that contains the original and new memory blocks."
|   |   `-TextComment 0x97f7d0 <line:309:3> Text=" "
|   |-ParamCommandComment 0x97f820 <col:4, line:310:3> [in] implicitly Param="ptr" ParamIndex=1
|   | `-ParagraphComment 0x97f8d0 <line:309:15, line:310:3>
|   |   |-TextComment 0x97f880 <line:309:15, col:62> Text="      [IN] Address of the original memory block."
|   |   `-TextComment 0x97f8a0 <line:310:3> Text=" "
|   |-ParamCommandComment 0x97f8f0 <col:4, col:54> [in] implicitly Param="size" ParamIndex=2
|   | `-ParagraphComment 0x97f980 <col:16, col:54>
|   |   `-TextComment 0x97f950 <col:16, col:54> Text="     [IN] Size of the new memory block."
|   |-ParagraphComment 0x97f9d0 <line:312:3>
|   | `-TextComment 0x97f9a0 <col:3> Text=" "
|   |-BlockCommandComment 0x97f9f0 <col:4, line:313:3> Name="retval"
|   | `-ParagraphComment 0x97fa70 <line:312:11, line:313:3>
|   |   |-TextComment 0x97fa20 <line:312:11, col:56> Text=" #NULL    The memory fails to be re-allocated."
|   |   `-TextComment 0x97fa40 <line:313:3> Text=" "
|   |-BlockCommandComment 0x97fa90 <col:4, line:314:3> Name="retval"
|   | `-ParagraphComment 0x97fb10 <line:313:11, line:314:3>
|   |   |-TextComment 0x97fac0 <line:313:11, col:119> Text=" #VOID*   The memory is successfully re-allocated with the starting address of the new memory block returned."
|   |   `-TextComment 0x97fae0 <line:314:3> Text=" "
|   |-BlockCommandComment 0x97fb30 <col:4, line:316:3> Name="par"
|   | `-ParagraphComment 0x97fd00 <line:314:8, line:316:3>
|   |   |-TextComment 0x97fb60 <line:314:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x97fb80 <line:315:3> Text=" "
|   |   |-HTMLStartTagComment 0x97fba0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x97fbe0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x97fc20 <col:12, col:75> Text="los_memory.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x97fc40 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0x97fc70 <col:81, col:85> Name="ul"
|   |   `-TextComment 0x97fca0 <line:316:3> Text=" "
|   `-BlockCommandComment 0x97fd20 <col:4, col:54> Name="see"
|     `-ParagraphComment 0x97fd80 <col:8, col:54>
|       `-TextComment 0x97fd50 <col:8, col:54> Text=" LOS_MemAlloc | LOS_MemAllocAlign | LOS_MemFree"
|-FunctionDecl 0x8f4ff0 <line:347:1, col:72> col:14 LOS_MemAllocAlign 'void *(void *, UINT32, UINT32)' extern
| |-ParmVarDecl 0x8f4dd0 <main/los_compiler.h:327:23, main/los_memory.h:347:38> col:38 pool 'void *'
| |-ParmVarDecl 0x8f4e48 <col:44, col:51> col:51 size 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8f4ec0 <col:57, col:64> col:64 boundary 'UINT32':'unsigned int'
| `-FullComment 0x980e00 <line:321:3, line:345:51>
|   |-ParagraphComment 0x97fec0 <line:321:3>
|   | `-TextComment 0x97fe90 <col:3> Text=" "
|   |-VerbatimLineComment 0x97fee0 <col:4, col:23> Text=" los_memory"
|   |-ParagraphComment 0x97ff50 <line:322:3>
|   | `-TextComment 0x97ff20 <col:3> Text=" "
|   |-BlockCommandComment 0x97ff70 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0x97ffd0 <col:10, col:34>
|   |   `-TextComment 0x97ffa0 <col:10, col:34> Text=" Allocate aligned memory."
|   |-ParagraphComment 0x980020 <line:324:3>
|   | `-TextComment 0x97fff0 <col:3> Text=" "
|   |-BlockCommandComment 0x980040 <col:4, line:329:3> Name="par"
|   | `-ParagraphComment 0x980290 <line:324:8, line:329:3>
|   |   |-TextComment 0x980070 <line:324:8, col:20> Text=" Description:"
|   |   |-TextComment 0x980090 <line:325:3> Text=" "
|   |   |-HTMLStartTagComment 0x9800b0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9800f0 <line:326:3> Text=" "
|   |   |-HTMLStartTagComment 0x980110 <col:4, col:7> Name="li"
|   |   |-TextComment 0x980150 <col:8, col:118> Text="This API is used to allocate memory blocks of specified size and of which the starting addresses are aligned on"
|   |   |-TextComment 0x980170 <line:327:3, col:24> Text=" a specified boundary."
|   |   |-HTMLEndTagComment 0x980190 <col:25, col:29> Name="li"
|   |   |-TextComment 0x9801c0 <line:328:3> Text=" "
|   |   |-HTMLEndTagComment 0x9801e0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x980210 <line:329:3> Text=" "
|   |-BlockCommandComment 0x9802b0 <col:4, line:335:8> Name="attention"
|   | `-ParagraphComment 0x9806c0 <line:330:3, line:335:8>
|   |   |-TextComment 0x9802e0 <line:330:3> Text=" "
|   |   |-HTMLStartTagComment 0x980300 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x980340 <line:331:3> Text=" "
|   |   |-HTMLStartTagComment 0x980360 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9803a0 <col:8, col:73> Text="The input pool parameter must be initialized via func LOS_MemInit."
|   |   |-HTMLEndTagComment 0x9803c0 <col:74, col:78> Name="li"
|   |   |-TextComment 0x9803f0 <line:332:3> Text=" "
|   |   |-HTMLStartTagComment 0x980410 <col:4, col:7> Name="li"
|   |   |-TextComment 0x980450 <col:8, col:117> Text="The size of the input parameter size can not be greater than the memory pool size that specified at the second"
|   |   |-TextComment 0x980470 <line:333:3, col:34> Text=" input parameter of LOS_MemInit."
|   |   |-HTMLEndTagComment 0x980490 <col:35, col:39> Name="li"
|   |   |-TextComment 0x9804c0 <line:334:3> Text=" "
|   |   |-HTMLStartTagComment 0x9804e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x980520 <col:8, col:89> Text="The alignment parameter value must be a power of 2 with the minimum value being 4."
|   |   |-HTMLEndTagComment 0x980540 <col:90, col:94> Name="li"
|   |   |-TextComment 0x980570 <line:335:3> Text=" "
|   |   `-HTMLEndTagComment 0x980590 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x980710 <line:337:3>
|   | `-TextComment 0x9806e0 <col:3> Text=" "
|   |-ParamCommandComment 0x980730 <col:4, line:338:3> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x9807e0 <line:337:16, line:338:3>
|   |   |-TextComment 0x980790 <line:337:16, col:101> Text="      [IN] Pointer to the memory pool that contains the memory blocks to be allocated."
|   |   `-TextComment 0x9807b0 <line:338:3> Text=" "
|   |-ParamCommandComment 0x980800 <col:4, line:339:3> [in] implicitly Param="size" ParamIndex=1
|   | `-ParagraphComment 0x9808b0 <line:338:16, line:339:3>
|   |   |-TextComment 0x980860 <line:338:16, col:61> Text="      [IN] Size of the memory to be allocated."
|   |   `-TextComment 0x980880 <line:339:3> Text=" "
|   |-ParamCommandComment 0x9808d0 <col:4, col:66> [in] implicitly Param="boundary" ParamIndex=2
|   | `-ParagraphComment 0x980960 <col:20, col:66>
|   |   `-TextComment 0x980930 <col:20, col:66> Text="  [IN] Boundary on which the memory is aligned."
|   |-ParagraphComment 0x9809b0 <line:341:3>
|   | `-TextComment 0x980980 <col:3> Text=" "
|   |-BlockCommandComment 0x9809d0 <col:4, line:342:3> Name="retval"
|   | `-ParagraphComment 0x980a50 <line:341:11, line:342:3>
|   |   |-TextComment 0x980a00 <line:341:11, col:53> Text=" #NULL    The memory fails to be allocated."
|   |   `-TextComment 0x980a20 <line:342:3> Text=" "
|   |-BlockCommandComment 0x980a70 <col:4, line:343:3> Name="retval"
|   | `-ParagraphComment 0x980af0 <line:342:11, line:343:3>
|   |   |-TextComment 0x980aa0 <line:342:11, col:116> Text=" #VOID*   The memory is successfully allocated with the starting address of the allocated memory returned."
|   |   `-TextComment 0x980ac0 <line:343:3> Text=" "
|   |-BlockCommandComment 0x980b10 <col:4, line:345:3> Name="par"
|   | `-ParagraphComment 0x980ce0 <line:343:8, line:345:3>
|   |   |-TextComment 0x980b40 <line:343:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x980b60 <line:344:3> Text=" "
|   |   |-HTMLStartTagComment 0x980b80 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x980bc0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x980c00 <col:12, col:75> Text="los_memory.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x980c20 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0x980c50 <col:81, col:85> Name="ul"
|   |   `-TextComment 0x980c80 <line:345:3> Text=" "
|   `-BlockCommandComment 0x980d00 <col:4, col:51> Name="see"
|     `-ParagraphComment 0x980d60 <col:8, col:51>
|       `-TextComment 0x980d30 <col:8, col:51> Text=" LOS_MemAlloc | LOS_MemRealloc | LOS_MemFree"
|-FunctionDecl 0x8f51e8 <line:370:1, col:50> col:15 LOS_MemPoolSizeGet 'UINT32 (const void *)' extern
| |-ParmVarDecl 0x8f50f0 <col:34, col:46> col:46 pool 'const void *'
| `-FullComment 0x9819c0 <line:350:3, line:368:13>
|   |-ParagraphComment 0x980ea0 <line:350:3>
|   | `-TextComment 0x980e70 <col:3> Text=" "
|   |-VerbatimLineComment 0x980ec0 <col:4, col:23> Text=" los_memory"
|   |-ParagraphComment 0x980f30 <line:351:3>
|   | `-TextComment 0x980f00 <col:3> Text=" "
|   |-BlockCommandComment 0x980f50 <col:4, col:45> Name="brief"
|   | `-ParagraphComment 0x980fb0 <col:10, col:45>
|   |   `-TextComment 0x980f80 <col:10, col:45> Text=" Get the size of memory pool's size."
|   |-ParagraphComment 0x981000 <line:353:3>
|   | `-TextComment 0x980fd0 <col:3> Text=" "
|   |-BlockCommandComment 0x981020 <col:4, line:357:3> Name="par"
|   | `-ParagraphComment 0x981240 <line:353:8, line:357:3>
|   |   |-TextComment 0x981050 <line:353:8, col:20> Text=" Description:"
|   |   |-TextComment 0x981070 <line:354:3> Text=" "
|   |   |-HTMLStartTagComment 0x981090 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9810d0 <line:355:3> Text=" "
|   |   |-HTMLStartTagComment 0x9810f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x981130 <col:8, col:67> Text="This API is used to get the size of memory pool' total size."
|   |   |-HTMLEndTagComment 0x981150 <col:68, col:72> Name="li"
|   |   |-TextComment 0x981180 <line:356:3> Text=" "
|   |   |-HTMLEndTagComment 0x9811a0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x9811d0 <line:357:3> Text=" "
|   |-BlockCommandComment 0x981260 <col:4, line:360:8> Name="attention"
|   | `-ParagraphComment 0x981430 <line:358:3, line:360:8>
|   |   |-TextComment 0x981290 <line:358:3> Text=" "
|   |   |-HTMLStartTagComment 0x9812b0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9812f0 <line:359:3> Text=" "
|   |   |-HTMLStartTagComment 0x981310 <col:4, col:7> Name="li"
|   |   |-TextComment 0x981350 <col:8, col:73> Text="The input pool parameter must be initialized via func LOS_MemInit."
|   |   |-HTMLEndTagComment 0x981370 <col:74, col:78> Name="li"
|   |   |-TextComment 0x9813a0 <line:360:3> Text=" "
|   |   `-HTMLEndTagComment 0x9813c0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x981480 <line:362:3>
|   | `-TextComment 0x981450 <col:3> Text=" "
|   |-ParamCommandComment 0x9814a0 <col:4, col:68> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x981530 <col:16, col:68>
|   |   `-TextComment 0x981500 <col:16, col:68> Text="           [IN] A pointer pointed to the memory pool."
|   |-ParagraphComment 0x981580 <line:364:3>
|   | `-TextComment 0x981550 <col:3> Text=" "
|   |-BlockCommandComment 0x9815a0 <col:4, line:365:3> Name="retval"
|   | `-ParagraphComment 0x981620 <line:364:11, line:365:3>
|   |   |-TextComment 0x9815d0 <line:364:11, col:63> Text=" #LOS_NOK        The incoming parameter pool is NULL."
|   |   `-TextComment 0x9815f0 <line:365:3> Text=" "
|   |-BlockCommandComment 0x981640 <col:4, line:366:3> Name="retval"
|   | `-ParagraphComment 0x9816c0 <line:365:11, line:366:3>
|   |   |-TextComment 0x981670 <line:365:11, col:55> Text=" #UINT32         The size of the memory pool."
|   |   `-TextComment 0x981690 <line:366:3> Text=" "
|   |-BlockCommandComment 0x9816e0 <col:4, line:368:3> Name="par"
|   | `-ParagraphComment 0x9818b0 <line:366:8, line:368:3>
|   |   |-TextComment 0x981710 <line:366:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x981730 <line:367:3> Text=" "
|   |   |-HTMLStartTagComment 0x981750 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x981790 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9817d0 <col:12, col:75> Text="los_memory.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9817f0 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0x981820 <col:81, col:85> Name="ul"
|   |   `-TextComment 0x981850 <line:368:3> Text=" "
|   `-BlockCommandComment 0x9818d0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x981930 <col:8, col:13>
|       `-TextComment 0x981900 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8f5360 <line:393:1, col:45> col:15 LOS_MemTotalUsedGet 'UINT32 (void *)' extern
| |-ParmVarDecl 0x8f52d0 <main/los_compiler.h:327:23, main/los_memory.h:393:41> col:41 pool 'void *'
| `-FullComment 0x982580 <line:373:3, line:391:13>
|   |-ParagraphComment 0x981a60 <line:373:3>
|   | `-TextComment 0x981a30 <col:3> Text=" "
|   |-VerbatimLineComment 0x981a80 <col:4, col:23> Text=" los_memory"
|   |-ParagraphComment 0x981af0 <line:374:3>
|   | `-TextComment 0x981ac0 <col:3> Text=" "
|   |-BlockCommandComment 0x981b10 <col:4, col:46> Name="brief"
|   | `-ParagraphComment 0x981b70 <col:10, col:46>
|   |   `-TextComment 0x981b40 <col:10, col:46> Text=" Get the size of memory totally used."
|   |-ParagraphComment 0x981bc0 <line:376:3>
|   | `-TextComment 0x981b90 <col:3> Text=" "
|   |-BlockCommandComment 0x981be0 <col:4, line:380:3> Name="par"
|   | `-ParagraphComment 0x981e00 <line:376:8, line:380:3>
|   |   |-TextComment 0x981c10 <line:376:8, col:20> Text=" Description:"
|   |   |-TextComment 0x981c30 <line:377:3> Text=" "
|   |   |-HTMLStartTagComment 0x981c50 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x981c90 <line:378:3> Text=" "
|   |   |-HTMLStartTagComment 0x981cb0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x981cf0 <col:8, col:78> Text="This API is used to get the size of memory totally used in memory pool."
|   |   |-HTMLEndTagComment 0x981d10 <col:79, col:83> Name="li"
|   |   |-TextComment 0x981d40 <line:379:3> Text=" "
|   |   |-HTMLEndTagComment 0x981d60 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x981d90 <line:380:3> Text=" "
|   |-BlockCommandComment 0x981e20 <col:4, line:383:8> Name="attention"
|   | `-ParagraphComment 0x981ff0 <line:381:3, line:383:8>
|   |   |-TextComment 0x981e50 <line:381:3> Text=" "
|   |   |-HTMLStartTagComment 0x981e70 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x981eb0 <line:382:3> Text=" "
|   |   |-HTMLStartTagComment 0x981ed0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x981f10 <col:8, col:73> Text="The input pool parameter must be initialized via func LOS_MemInit."
|   |   |-HTMLEndTagComment 0x981f30 <col:74, col:78> Name="li"
|   |   |-TextComment 0x981f60 <line:383:3> Text=" "
|   |   `-HTMLEndTagComment 0x981f80 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x982040 <line:385:3>
|   | `-TextComment 0x982010 <col:3> Text=" "
|   |-ParamCommandComment 0x982060 <col:4, col:68> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x9820f0 <col:16, col:68>
|   |   `-TextComment 0x9820c0 <col:16, col:68> Text="           [IN] A pointer pointed to the memory pool."
|   |-ParagraphComment 0x982140 <line:387:3>
|   | `-TextComment 0x982110 <col:3> Text=" "
|   |-BlockCommandComment 0x982160 <col:4, line:388:3> Name="retval"
|   | `-ParagraphComment 0x9821e0 <line:387:11, line:388:3>
|   |   |-TextComment 0x982190 <line:387:11, col:63> Text=" #LOS_NOK        The incoming parameter pool is NULL."
|   |   `-TextComment 0x9821b0 <line:388:3> Text=" "
|   |-BlockCommandComment 0x982200 <col:4, line:389:3> Name="retval"
|   | `-ParagraphComment 0x982280 <line:388:11, line:389:3>
|   |   |-TextComment 0x982230 <line:388:11, col:60> Text=" #UINT32         The size of the memory pool used."
|   |   `-TextComment 0x982250 <line:389:3> Text=" "
|   |-BlockCommandComment 0x9822a0 <col:4, line:391:3> Name="par"
|   | `-ParagraphComment 0x982470 <line:389:8, line:391:3>
|   |   |-TextComment 0x9822d0 <line:389:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9822f0 <line:390:3> Text=" "
|   |   |-HTMLStartTagComment 0x982310 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x982350 <col:8, col:11> Name="li"
|   |   |-TextComment 0x982390 <col:12, col:75> Text="los_memory.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9823b0 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0x9823e0 <col:81, col:85> Name="ul"
|   |   `-TextComment 0x982410 <line:391:3> Text=" "
|   `-BlockCommandComment 0x982490 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x9824f0 <col:8, col:13>
|       `-TextComment 0x9824c0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8f5658 <line:417:1, col:73> col:15 LOS_MemInfoGet 'UINT32 (void *, LOS_MEM_POOL_STATUS *)' extern
| |-ParmVarDecl 0x8f5450 <main/los_compiler.h:327:23, main/los_memory.h:417:36> col:36 pool 'void *'
| |-ParmVarDecl 0x8f5548 <col:42, col:63> col:63 poolStatus 'LOS_MEM_POOL_STATUS *'
| `-FullComment 0x983240 <line:396:3, line:415:13>
|   |-ParagraphComment 0x982640 <line:396:3>
|   | `-TextComment 0x9825f0 <col:3> Text=" "
|   |-VerbatimLineComment 0x982660 <col:4, col:23> Text=" los_memory"
|   |-ParagraphComment 0x9826d0 <line:397:3>
|   | `-TextComment 0x9826a0 <col:3> Text=" "
|   |-BlockCommandComment 0x9826f0 <col:4, col:45> Name="brief"
|   | `-ParagraphComment 0x982750 <col:10, col:45>
|   |   `-TextComment 0x982720 <col:10, col:45> Text=" Get the information of memory pool."
|   |-ParagraphComment 0x9827a0 <line:399:3>
|   | `-TextComment 0x982770 <col:3> Text=" "
|   |-BlockCommandComment 0x9827c0 <col:4, line:403:3> Name="par"
|   | `-ParagraphComment 0x9829e0 <line:399:8, line:403:3>
|   |   |-TextComment 0x9827f0 <line:399:8, col:20> Text=" Description:"
|   |   |-TextComment 0x982810 <line:400:3> Text=" "
|   |   |-HTMLStartTagComment 0x982830 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x982870 <line:401:3> Text=" "
|   |   |-HTMLStartTagComment 0x982890 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9828d0 <col:8, col:62> Text="This API is used to get the information of memory pool."
|   |   |-HTMLEndTagComment 0x9828f0 <col:63, col:67> Name="li"
|   |   |-TextComment 0x982920 <line:402:3> Text=" "
|   |   |-HTMLEndTagComment 0x982940 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x982970 <line:403:3> Text=" "
|   |-BlockCommandComment 0x982a00 <col:4, line:406:8> Name="attention"
|   | `-ParagraphComment 0x982bd0 <line:404:3, line:406:8>
|   |   |-TextComment 0x982a30 <line:404:3> Text=" "
|   |   |-HTMLStartTagComment 0x982a50 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x982a90 <line:405:3> Text=" "
|   |   |-HTMLStartTagComment 0x982ab0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x982af0 <col:8, col:73> Text="The input pool parameter must be initialized via func LOS_MemInit."
|   |   |-HTMLEndTagComment 0x982b10 <col:74, col:78> Name="li"
|   |   |-TextComment 0x982b40 <line:406:3> Text=" "
|   |   `-HTMLEndTagComment 0x982b60 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x982c20 <line:408:3>
|   | `-TextComment 0x982bf0 <col:3> Text=" "
|   |-ParamCommandComment 0x982c40 <col:4, line:409:3> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x982cf0 <line:408:16, line:409:3>
|   |   |-TextComment 0x982ca0 <line:408:16, col:74> Text="                 [IN] A pointer pointed to the memory pool."
|   |   `-TextComment 0x982cc0 <line:409:3> Text=" "
|   |-ParamCommandComment 0x982d10 <col:4, col:74> [in] implicitly Param="poolStatus" ParamIndex=1
|   | `-ParagraphComment 0x982da0 <col:22, col:74>
|   |   `-TextComment 0x982d70 <col:22, col:74> Text="           [IN] A pointer for storage the pool status"
|   |-ParagraphComment 0x982df0 <line:411:3>
|   | `-TextComment 0x982dc0 <col:3> Text=" "
|   |-BlockCommandComment 0x982e10 <col:4, line:412:3> Name="retval"
|   | `-ParagraphComment 0x982e90 <line:411:11, line:412:3>
|   |   |-TextComment 0x982e40 <line:411:11, col:77> Text=" #LOS_NOK           The incoming parameter pool is NULL or invalid."
|   |   `-TextComment 0x982e60 <line:412:3> Text=" "
|   |-BlockCommandComment 0x982eb0 <col:4, line:413:3> Name="retval"
|   | `-ParagraphComment 0x982f30 <line:412:11, line:413:3>
|   |   |-TextComment 0x982ee0 <line:412:11, col:64> Text=" #LOS_OK            Success to get memory information."
|   |   `-TextComment 0x982f00 <line:413:3> Text=" "
|   |-BlockCommandComment 0x982f50 <col:4, line:415:3> Name="par"
|   | `-ParagraphComment 0x983120 <line:413:8, line:415:3>
|   |   |-TextComment 0x982f80 <line:413:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x982fa0 <line:414:3> Text=" "
|   |   |-HTMLStartTagComment 0x982fc0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x983000 <col:8, col:11> Name="li"
|   |   |-TextComment 0x983040 <col:12, col:75> Text="los_memory.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x983060 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0x983090 <col:81, col:85> Name="ul"
|   |   `-TextComment 0x9830c0 <line:415:3> Text=" "
|   `-BlockCommandComment 0x983140 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x9831a0 <col:8, col:13>
|       `-TextComment 0x983170 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8f57e0 <line:440:1, col:45> col:15 LOS_MemFreeNodeShow 'UINT32 (void *)' extern
| |-ParmVarDecl 0x8f5750 <main/los_compiler.h:327:23, main/los_memory.h:440:41> col:41 pool 'void *'
| `-FullComment 0x983e00 <line:420:3, line:438:13>
|   |-ParagraphComment 0x9832e0 <line:420:3>
|   | `-TextComment 0x9832b0 <col:3> Text=" "
|   |-VerbatimLineComment 0x983300 <col:4, col:23> Text=" los_memory"
|   |-ParagraphComment 0x983370 <line:421:3>
|   | `-TextComment 0x983340 <col:3> Text=" "
|   |-BlockCommandComment 0x983390 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0x9833f0 <col:10, col:52>
|   |   `-TextComment 0x9833c0 <col:10, col:52> Text=" Get the number of free node in every size."
|   |-ParagraphComment 0x983440 <line:423:3>
|   | `-TextComment 0x983410 <col:3> Text=" "
|   |-BlockCommandComment 0x983460 <col:4, line:427:3> Name="par"
|   | `-ParagraphComment 0x983680 <line:423:8, line:427:3>
|   |   |-TextComment 0x983490 <line:423:8, col:20> Text=" Description:"
|   |   |-TextComment 0x9834b0 <line:424:3> Text=" "
|   |   |-HTMLStartTagComment 0x9834d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x983510 <line:425:3> Text=" "
|   |   |-HTMLStartTagComment 0x983530 <col:4, col:7> Name="li"
|   |   |-TextComment 0x983570 <col:8, col:69> Text="This API is used to get the number of free node in every size."
|   |   |-HTMLEndTagComment 0x983590 <col:70, col:74> Name="li"
|   |   |-TextComment 0x9835c0 <line:426:3> Text=" "
|   |   |-HTMLEndTagComment 0x9835e0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x983610 <line:427:3> Text=" "
|   |-BlockCommandComment 0x9836a0 <col:4, line:430:8> Name="attention"
|   | `-ParagraphComment 0x983870 <line:428:3, line:430:8>
|   |   |-TextComment 0x9836d0 <line:428:3> Text=" "
|   |   |-HTMLStartTagComment 0x9836f0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x983730 <line:429:3> Text=" "
|   |   |-HTMLStartTagComment 0x983750 <col:4, col:7> Name="li"
|   |   |-TextComment 0x983790 <col:8, col:73> Text="The input pool parameter must be initialized via func LOS_MemInit."
|   |   |-HTMLEndTagComment 0x9837b0 <col:74, col:78> Name="li"
|   |   |-TextComment 0x9837e0 <line:430:3> Text=" "
|   |   `-HTMLEndTagComment 0x983800 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x9838c0 <line:432:3>
|   | `-TextComment 0x983890 <col:3> Text=" "
|   |-ParamCommandComment 0x9838e0 <col:4, col:72> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x983970 <col:16, col:72>
|   |   `-TextComment 0x983940 <col:16, col:72> Text="               [IN] A pointer pointed to the memory pool."
|   |-ParagraphComment 0x9839c0 <line:434:3>
|   | `-TextComment 0x983990 <col:3> Text=" "
|   |-BlockCommandComment 0x9839e0 <col:4, line:435:3> Name="retval"
|   | `-ParagraphComment 0x983a60 <line:434:11, line:435:3>
|   |   |-TextComment 0x983a10 <line:434:11, col:66> Text=" #LOS_NOK           The incoming parameter pool is NULL."
|   |   `-TextComment 0x983a30 <line:435:3> Text=" "
|   |-BlockCommandComment 0x983a80 <col:4, line:436:3> Name="retval"
|   | `-ParagraphComment 0x983b00 <line:435:11, line:436:3>
|   |   |-TextComment 0x983ab0 <line:435:11, col:85> Text=" #UINT32            The address of the last used node that casts to UINT32."
|   |   `-TextComment 0x983ad0 <line:436:3> Text=" "
|   |-BlockCommandComment 0x983b20 <col:4, line:438:3> Name="par"
|   | `-ParagraphComment 0x983cf0 <line:436:8, line:438:3>
|   |   |-TextComment 0x983b50 <line:436:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x983b70 <line:437:3> Text=" "
|   |   |-HTMLStartTagComment 0x983b90 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x983bd0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x983c10 <col:12, col:75> Text="los_memory.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x983c30 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0x983c60 <col:81, col:85> Name="ul"
|   |   `-TextComment 0x983c90 <line:438:3> Text=" "
|   `-BlockCommandComment 0x983d10 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x983d70 <col:8, col:13>
|       `-TextComment 0x983d40 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8f5960 <line:466:1, col:53> col:15 used LOS_MemIntegrityCheck 'UINT32 (const void *)' extern
| |-ParmVarDecl 0x8f58d0 <col:37, col:49> col:49 pool 'const void *'
| `-FullComment 0x984b90 <line:443:3, line:464:13>
|   |-ParagraphComment 0x983ea0 <line:443:3>
|   | `-TextComment 0x983e70 <col:3> Text=" "
|   |-VerbatimLineComment 0x983ec0 <col:4, col:23> Text=" los_memory"
|   |-ParagraphComment 0x983f30 <line:444:3>
|   | `-TextComment 0x983f00 <col:3> Text=" "
|   |-BlockCommandComment 0x983f50 <col:4, col:42> Name="brief"
|   | `-ParagraphComment 0x983fb0 <col:10, col:42>
|   |   `-TextComment 0x983f80 <col:10, col:42> Text=" Check the memory pool integrity."
|   |-ParagraphComment 0x984000 <line:446:3>
|   | `-TextComment 0x983fd0 <col:3> Text=" "
|   |-BlockCommandComment 0x984020 <col:4, line:450:3> Name="par"
|   | `-ParagraphComment 0x984240 <line:446:8, line:450:3>
|   |   |-TextComment 0x984050 <line:446:8, col:20> Text=" Description:"
|   |   |-TextComment 0x984070 <line:447:3> Text=" "
|   |   |-HTMLStartTagComment 0x984090 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9840d0 <line:448:3> Text=" "
|   |   |-HTMLStartTagComment 0x9840f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x984130 <col:8, col:59> Text="This API is used to check the memory pool integrity."
|   |   |-HTMLEndTagComment 0x984150 <col:60, col:64> Name="li"
|   |   |-TextComment 0x984180 <line:449:3> Text=" "
|   |   |-HTMLEndTagComment 0x9841a0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x9841d0 <line:450:3> Text=" "
|   |-BlockCommandComment 0x984260 <col:4, line:456:8> Name="attention"
|   | `-ParagraphComment 0x9845f0 <line:451:3, line:456:8>
|   |   |-TextComment 0x984290 <line:451:3> Text=" "
|   |   |-HTMLStartTagComment 0x9842b0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9842f0 <line:452:3> Text=" "
|   |   |-HTMLStartTagComment 0x984310 <col:4, col:7> Name="li"
|   |   |-TextComment 0x984350 <col:8, col:73> Text="The input pool parameter must be initialized via func LOS_MemInit."
|   |   |-HTMLEndTagComment 0x984370 <col:74, col:78> Name="li"
|   |   |-TextComment 0x9843a0 <line:453:3> Text=" "
|   |   |-HTMLStartTagComment 0x9843c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x984400 <col:8, col:117> Text="LOS_MemIntegrityCheck will be called by malloc function when the macro of LOSCFG_BASE_MEM_NODE_INTEGRITY_CHECK"
|   |   |-TextComment 0x984420 <line:454:3, col:24> Text=" is defined in LiteOS."
|   |   |-HTMLEndTagComment 0x984440 <col:25, col:29> Name="li"
|   |   |-TextComment 0x984470 <line:455:3> Text=" "
|   |   |-HTMLStartTagComment 0x984490 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9844d0 <col:8, col:68> Text="LOS_MemIntegrityCheck function can be called by user anytime."
|   |   |-HTMLEndTagComment 0x9844f0 <col:69, col:73> Name="li"
|   |   |-TextComment 0x984520 <line:456:3> Text=" "
|   |   `-HTMLEndTagComment 0x984540 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x984650 <line:458:3>
|   | `-TextComment 0x984610 <col:3> Text=" "
|   |-ParamCommandComment 0x984670 <col:4, col:71> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x984700 <col:16, col:71>
|   |   `-TextComment 0x9846d0 <col:16, col:71> Text="              [IN] A pointer pointed to the memory pool."
|   |-ParagraphComment 0x984750 <line:460:3>
|   | `-TextComment 0x984720 <col:3> Text=" "
|   |-BlockCommandComment 0x984770 <col:4, line:461:3> Name="retval"
|   | `-ParagraphComment 0x9847f0 <line:460:11, line:461:3>
|   |   |-TextComment 0x9847a0 <line:460:11, col:65> Text=" #LOS_NOK           The memory pool (pool) is impaired."
|   |   `-TextComment 0x9847c0 <line:461:3> Text=" "
|   |-BlockCommandComment 0x984810 <col:4, line:462:3> Name="retval"
|   | `-ParagraphComment 0x984890 <line:461:11, line:462:3>
|   |   |-TextComment 0x984840 <line:461:11, col:67> Text=" #LOS_OK            The memory pool (pool) is integrated."
|   |   `-TextComment 0x984860 <line:462:3> Text=" "
|   |-BlockCommandComment 0x9848b0 <col:4, line:464:3> Name="par"
|   | `-ParagraphComment 0x984a80 <line:462:8, line:464:3>
|   |   |-TextComment 0x9848e0 <line:462:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x984900 <line:463:3> Text=" "
|   |   |-HTMLStartTagComment 0x984920 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x984960 <col:8, col:11> Name="li"
|   |   |-TextComment 0x9849a0 <col:12, col:75> Text="los_memory.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x9849c0 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0x9849f0 <col:81, col:85> Name="ul"
|   |   `-TextComment 0x984a20 <line:464:3> Text=" "
|   `-BlockCommandComment 0x984aa0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x984b00 <col:8, col:13>
|       `-TextComment 0x984ad0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8f5ae0 <line:493:1, col:43> col:13 LOS_MemUnlockEnable 'void (void *)' extern
| |-ParmVarDecl 0x8f5a50 <main/los_compiler.h:327:23, main/los_memory.h:493:39> col:39 pool 'void *'
| `-FullComment 0x985860 <line:469:3, line:491:13>
|   |-ParagraphComment 0x984c30 <line:469:3>
|   | `-TextComment 0x984c00 <col:3> Text=" "
|   |-VerbatimLineComment 0x984c50 <col:4, col:23> Text=" los_memory"
|   |-ParagraphComment 0x984cc0 <line:470:3>
|   | `-TextComment 0x984c90 <col:3> Text=" "
|   |-BlockCommandComment 0x984ce0 <col:4, col:81> Name="brief"
|   | `-ParagraphComment 0x984d40 <col:10, col:81>
|   |   `-TextComment 0x984d10 <col:10, col:81> Text=" Enable memory pool to support no internal lock during using interfaces."
|   |-ParagraphComment 0x984d90 <line:472:3>
|   | `-TextComment 0x984d60 <col:3> Text=" "
|   |-BlockCommandComment 0x984db0 <col:4, line:477:3> Name="par"
|   | `-ParagraphComment 0x985070 <line:472:8, line:477:3>
|   |   |-TextComment 0x984de0 <line:472:8, col:20> Text=" Description:"
|   |   |-TextComment 0x984e00 <line:473:3> Text=" "
|   |   |-HTMLStartTagComment 0x984e20 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x984e60 <line:474:3> Text=" "
|   |   |-HTMLStartTagComment 0x984e80 <col:4, col:7> Name="li"
|   |   |-TextComment 0x984ec0 <col:8, col:98> Text="This API is used to enable memory pool to support no internal lock during using interfaces,"
|   |   |-HTMLEndTagComment 0x984ee0 <col:99, col:103> Name="li"
|   |   |-TextComment 0x984f10 <line:475:3> Text=" "
|   |   |-HTMLStartTagComment 0x984f30 <col:4, col:7> Name="li"
|   |   |-TextComment 0x984f70 <col:8, col:83> Text="such as LOS_MemAlloc/LOS_MemAllocAlign/LOS_MemRealloc/LOS_MemFree and so on."
|   |   |-TextComment 0x984f90 <line:476:3> Text=" "
|   |   |-HTMLEndTagComment 0x984fb0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x984fe0 <line:477:3> Text=" "
|   |-BlockCommandComment 0x985090 <col:4, line:482:8> Name="attention"
|   | `-ParagraphComment 0x985320 <line:478:3, line:482:8>
|   |   |-TextComment 0x9850c0 <line:478:3> Text=" "
|   |   |-HTMLStartTagComment 0x9850e0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x985120 <line:479:3> Text=" "
|   |   |-HTMLStartTagComment 0x985140 <col:4, col:7> Name="li"
|   |   |-TextComment 0x985180 <col:8, col:88> Text="The memory pool does not support multi-threaded concurrent application scenarios."
|   |   |-TextComment 0x9851a0 <line:480:3> Text=" "
|   |   |-HTMLStartTagComment 0x9851c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x985200 <col:8, col:90> Text="If you want to use this function, you need to call this interface before the memory"
|   |   |-TextComment 0x985220 <line:481:3, col:61> Text=" pool is used, it cannot be called during the trial period."
|   |   |-HTMLEndTagComment 0x985240 <col:62, col:66> Name="li"
|   |   |-TextComment 0x985270 <line:482:3> Text=" "
|   |   `-HTMLEndTagComment 0x985290 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x985370 <line:484:3>
|   | `-TextComment 0x985340 <col:3> Text=" "
|   |-ParamCommandComment 0x985390 <col:4, col:55> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x985420 <col:15, col:55>
|   |   `-TextComment 0x9853f0 <col:15, col:55> Text="         [IN] Starting address of memory."
|   |-ParagraphComment 0x985470 <line:486:3>
|   | `-TextComment 0x985440 <col:3> Text=" "
|   |-BlockCommandComment 0x985490 <col:4, line:487:3> Name="retval"
|   | `-ParagraphComment 0x985510 <line:486:11, line:487:3>
|   |   |-TextComment 0x9854c0 <line:486:11, col:16> Text=" node."
|   |   `-TextComment 0x9854e0 <line:487:3> Text=" "
|   |-BlockCommandComment 0x985530 <col:4, line:491:3> Name="par"
|   | `-ParagraphComment 0x985750 <line:487:8, line:491:3>
|   |   |-TextComment 0x985560 <line:487:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x985580 <line:488:3> Text=" "
|   |   |-HTMLStartTagComment 0x9855a0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x9855e0 <line:489:3> Text=" "
|   |   |-HTMLStartTagComment 0x985600 <col:4, col:7> Name="li"
|   |   |-TextComment 0x985640 <col:8, col:71> Text="los_memory.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x985660 <col:72, col:76> Name="li"
|   |   |-TextComment 0x985690 <line:490:3> Text=" "
|   |   |-HTMLEndTagComment 0x9856b0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x9856e0 <line:491:3> Text=" "
|   `-BlockCommandComment 0x985770 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x9857d0 <col:8, col:13>
|       `-TextComment 0x9857a0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x837430 <line:495:1, col:35> col:15 OsMemSystemInit 'UINT32 (void)' extern
|-FunctionDecl 0x8376f8 <line:496:1, col:82> col:13 OsTaskMemUsed 'void (void *, UINT32 *, UINT32)' extern
| |-ParmVarDecl 0x8374e8 <main/los_compiler.h:327:23, main/los_memory.h:496:33> col:33 pool 'void *'
| |-ParmVarDecl 0x837560 <col:39, col:47> col:47 tskMemInfoBuf 'UINT32 *'
| `-ParmVarDecl 0x8375d8 <col:62, col:69> col:69 tskMemInfoCnt 'UINT32':'unsigned int'
|-RecordDecl 0x837808 <main/los_membox.h:57:9, line:59:1> line:57:16 struct tagMEMBOX_NODE definition
| |-FullComment 0x9859d0 <line:54:3, line:55:44>
| | |-ParagraphComment 0x985900 <line:54:3>
| | | `-TextComment 0x9858d0 <col:3> Text=" "
| | |-VerbatimLineComment 0x985920 <col:4, col:23> Text=" los_membox"
| | `-ParagraphComment 0x985990 <line:55:3, col:44>
| |   `-TextComment 0x985960 <col:3, col:44> Text=" Structure of a free node in a memory pool"
| `-FieldDecl 0x837960 <line:58:5, col:28> col:28 pstNext 'struct tagMEMBOX_NODE *'
|   `-FullComment 0x985aa0 <col:41, col:95>
|     `-ParagraphComment 0x985a70 <col:41, col:95>
|       `-TextComment 0x985a40 <col:41, col:95> Text=" Free node's pointer to the next node in a memory pool "
|-TypedefDecl 0x837a38 <line:57:1, line:59:3> col:3 referenced LOS_MEMBOX_NODE 'struct tagMEMBOX_NODE':'struct tagMEMBOX_NODE'
| |-ElaboratedType 0x8379e0 'struct tagMEMBOX_NODE' sugar
| | `-RecordType 0x837890 'struct tagMEMBOX_NODE'
| |   `-Record 0x837808 'tagMEMBOX_NODE'
| `-FullComment 0x985c10 <line:54:3, line:55:44>
|   |-ParagraphComment 0x985b40 <line:54:3>
|   | `-TextComment 0x985b10 <col:3> Text=" "
|   |-VerbatimLineComment 0x985b60 <col:4, col:23> Text=" los_membox"
|   `-ParagraphComment 0x985bd0 <line:55:3, col:44>
|     `-TextComment 0x985ba0 <col:3, col:44> Text=" Structure of a free node in a memory pool"
|-RecordDecl 0x837ad0 <line:65:9, line:73:1> line:65:16 struct LOS_MEMBOX_INFO definition
| |-FullComment 0x985d80 <line:62:3, line:63:36>
| | |-ParagraphComment 0x985cb0 <line:62:3>
| | | `-TextComment 0x985c80 <col:3> Text=" "
| | |-VerbatimLineComment 0x985cd0 <col:4, col:23> Text=" los_membox"
| | `-ParagraphComment 0x985d40 <line:63:3, col:36>
| |   `-TextComment 0x985d10 <col:3, col:36> Text=" Memory pool information structure"
| |-FieldDecl 0x837b80 <line:66:5, col:12> col:12 uwBlkSize 'UINT32':'unsigned int'
| | `-FullComment 0x985e50 <col:38, col:49>
| |   `-ParagraphComment 0x985e20 <col:38, col:49>
| |     `-TextComment 0x985df0 <col:38, col:49> Text=" Block size "
| |-FieldDecl 0x837c08 <line:67:5, col:12> col:12 uwBlkNum 'UINT32':'unsigned int'
| | `-FullComment 0x985f20 <col:38, col:51>
| |   `-ParagraphComment 0x985ef0 <col:38, col:51>
| |     `-TextComment 0x985ec0 <col:38, col:51> Text=" Block number "
| |-FieldDecl 0x837c98 <line:68:5, col:12> col:12 uwBlkCnt 'UINT32':'unsigned int'
| | `-FullComment 0x985ff0 <col:38, col:69>
| |   `-ParagraphComment 0x985fc0 <col:38, col:69>
| |     `-TextComment 0x985f90 <col:38, col:69> Text=" The number of allocated blocks "
| `-FieldDecl 0x837d50 <line:72:5, col:21> col:21 stFreeList 'LOS_MEMBOX_NODE':'struct tagMEMBOX_NODE'
|   `-FullComment 0x9860c0 <col:38, col:48>
|     `-ParagraphComment 0x986090 <col:38, col:48>
|       `-TextComment 0x986060 <col:38, col:48> Text=" Free list "
|-TypedefDecl 0x837e28 <line:65:1, line:73:3> col:3 referenced LOS_MEMBOX_INFO 'struct LOS_MEMBOX_INFO':'struct LOS_MEMBOX_INFO'
| |-ElaboratedType 0x837dd0 'struct LOS_MEMBOX_INFO' sugar
| | `-RecordType 0x837b50 'struct LOS_MEMBOX_INFO'
| |   `-Record 0x837ad0 'LOS_MEMBOX_INFO'
| `-FullComment 0x986230 <line:62:3, line:63:36>
|   |-ParagraphComment 0x986160 <line:62:3>
|   | `-TextComment 0x986130 <col:3> Text=" "
|   |-VerbatimLineComment 0x986180 <col:4, col:23> Text=" los_membox"
|   `-ParagraphComment 0x9861f0 <line:63:3, col:36>
|     `-TextComment 0x9861c0 <col:3, col:36> Text=" Memory pool information structure"
|-TypedefDecl 0x837ed0 <line:75:1, col:25> col:25 OS_MEMBOX_S 'LOS_MEMBOX_INFO':'struct LOS_MEMBOX_INFO'
| `-TypedefType 0x837ea0 'LOS_MEMBOX_INFO' sugar
|   |-Typedef 0x837e28 'LOS_MEMBOX_INFO'
|   `-ElaboratedType 0x837dd0 'struct LOS_MEMBOX_INFO' sugar
|     `-RecordType 0x837b50 'struct LOS_MEMBOX_INFO'
|       `-Record 0x837ad0 'LOS_MEMBOX_INFO'
|-FunctionDecl 0x8381e8 <line:121:1, col:73> col:15 LOS_MemboxInit 'UINT32 (void *, UINT32, UINT32)' extern
| |-ParmVarDecl 0x837fd0 <main/los_compiler.h:327:23, main/los_membox.h:121:36> col:36 pool 'void *'
| |-ParmVarDecl 0x838048 <col:42, col:49> col:49 poolSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0x8380c0 <col:59, col:66> col:66 blkSize 'UINT32':'unsigned int'
| `-FullComment 0x989090 <line:95:3, line:119:13>
|   |-ParagraphComment 0x9862d0 <line:95:3>
|   | `-TextComment 0x9862a0 <col:3> Text=" "
|   |-VerbatimLineComment 0x9862f0 <col:4, col:23> Text=" los_membox"
|   |-ParagraphComment 0x986360 <line:96:3>
|   | `-TextComment 0x986330 <col:3> Text=" "
|   |-BlockCommandComment 0x986380 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0x9863e0 <col:10, col:35>
|   |   `-TextComment 0x9863b0 <col:10, col:35> Text=" Initialize a memory pool."
|   |-ParagraphComment 0x986430 <line:98:3>
|   | `-TextComment 0x986400 <col:3> Text=" "
|   |-BlockCommandComment 0x986450 <col:4, line:102:3> Name="par"
|   | `-ParagraphComment 0x9886c0 <line:98:8, line:102:3>
|   |   |-TextComment 0x986480 <line:98:8, col:20> Text=" Description:"
|   |   |-TextComment 0x9864a0 <line:99:3> Text=" "
|   |   |-HTMLStartTagComment 0x9864c0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x986500 <line:100:3> Text=" "
|   |   |-HTMLStartTagComment 0x986520 <col:4, col:7> Name="li"
|   |   |-TextComment 0x986560 <col:8, col:52> Text="This API is used to initialize a memory pool."
|   |   |-HTMLEndTagComment 0x986580 <col:53, col:57> Name="li"
|   |   |-TextComment 0x9865b0 <line:101:3> Text=" "
|   |   |-HTMLEndTagComment 0x9865d0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x986600 <line:102:3> Text=" "
|   |-BlockCommandComment 0x9886e0 <col:4, line:107:8> Name="attention"
|   | `-ParagraphComment 0x988900 <line:103:3, line:107:8>
|   |   |-TextComment 0x988710 <line:103:3> Text=" "
|   |   |-HTMLStartTagComment 0x988730 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x988770 <line:104:3> Text=" "
|   |   |-HTMLStartTagComment 0x988790 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9887d0 <col:8, col:79> Text="The poolSize parameter value should match the following two conditions :"
|   |   |-TextComment 0x9887f0 <line:105:3, col:52> Text=" 1) Be less than or equal to the Memory pool size;"
|   |   |-TextComment 0x988810 <line:106:3, col:50> Text=" 2) Be greater than the size of LOS_MEMBOX_INFO."
|   |   |-HTMLEndTagComment 0x988830 <col:51, col:55> Name="li"
|   |   |-TextComment 0x988860 <line:107:3> Text=" "
|   |   `-HTMLEndTagComment 0x988880 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x988950 <line:109:3>
|   | `-TextComment 0x988920 <col:3> Text=" "
|   |-ParamCommandComment 0x988970 <col:4, line:110:3> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x988a20 <line:109:15, line:110:3>
|   |   |-TextComment 0x9889d0 <line:109:15, col:44> Text="     [IN] Memory pool address."
|   |   `-TextComment 0x9889f0 <line:110:3> Text=" "
|   |-ParamCommandComment 0x988a40 <col:4, line:111:3> [in] implicitly Param="poolSize" ParamIndex=1
|   | `-ParagraphComment 0x988af0 <line:110:19, line:111:3>
|   |   |-TextComment 0x988aa0 <line:110:19, col:41> Text=" [IN] Memory pool size."
|   |   `-TextComment 0x988ac0 <line:111:3> Text=" "
|   |-ParamCommandComment 0x988b10 <col:4, col:42> [in] implicitly Param="blkSize" ParamIndex=2
|   | `-ParagraphComment 0x988ba0 <col:18, col:42>
|   |   `-TextComment 0x988b70 <col:18, col:42> Text="  [IN] Memory block size."
|   |-ParagraphComment 0x988bf0 <line:113:3>
|   | `-TextComment 0x988bc0 <col:3> Text=" "
|   |-BlockCommandComment 0x988c10 <col:4, line:114:3> Name="retval"
|   | `-ParagraphComment 0x988c90 <line:113:11, line:114:3>
|   |   |-TextComment 0x988c40 <line:113:11, col:62> Text=" #LOS_NOK   The memory pool fails to be initialized."
|   |   `-TextComment 0x988c60 <line:114:3> Text=" "
|   |-BlockCommandComment 0x988cb0 <col:4, line:115:3> Name="retval"
|   | `-ParagraphComment 0x988d30 <line:114:11, line:115:3>
|   |   |-TextComment 0x988ce0 <line:114:11, col:66> Text=" #LOS_OK    The memory pool is successfully initialized."
|   |   `-TextComment 0x988d00 <line:115:3> Text=" "
|   |-BlockCommandComment 0x988d50 <col:4, line:119:3> Name="par"
|   | `-ParagraphComment 0x988f70 <line:115:8, line:119:3>
|   |   |-TextComment 0x988d80 <line:115:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x988da0 <line:116:3> Text=" "
|   |   |-HTMLStartTagComment 0x988dc0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x988e00 <line:117:3> Text=" "
|   |   |-HTMLStartTagComment 0x988e20 <col:4, col:7> Name="li"
|   |   |-TextComment 0x988e60 <col:8, col:71> Text="los_membox.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x988e80 <col:72, col:76> Name="li"
|   |   |-TextComment 0x988eb0 <line:118:3> Text=" "
|   |   |-HTMLEndTagComment 0x988ed0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x988f00 <line:119:3> Text=" "
|   `-BlockCommandComment 0x988f90 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x988ff0 <col:8, col:13>
|       `-TextComment 0x988fc0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8fbc20 <line:146:1, col:40> col:14 LOS_MemboxAlloc 'void *(void *)' extern
| |-ParmVarDecl 0x8382e0 <main/los_compiler.h:327:23, main/los_membox.h:146:36> col:36 pool 'void *'
| `-FullComment 0x989ca0 <line:124:3, line:144:22>
|   |-ParagraphComment 0x989130 <line:124:3>
|   | `-TextComment 0x989100 <col:3> Text=" "
|   |-VerbatimLineComment 0x989150 <col:4, col:23> Text=" los_membox"
|   |-ParagraphComment 0x9891c0 <line:125:3>
|   | `-TextComment 0x989190 <col:3> Text=" "
|   |-BlockCommandComment 0x9891e0 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0x989240 <col:10, col:33>
|   |   `-TextComment 0x989210 <col:10, col:33> Text=" Request a memory block."
|   |-ParagraphComment 0x989290 <line:127:3>
|   | `-TextComment 0x989260 <col:3> Text=" "
|   |-BlockCommandComment 0x9892b0 <col:4, line:131:3> Name="par"
|   | `-ParagraphComment 0x9894d0 <line:127:8, line:131:3>
|   |   |-TextComment 0x9892e0 <line:127:8, col:20> Text=" Description:"
|   |   |-TextComment 0x989300 <line:128:3> Text=" "
|   |   |-HTMLStartTagComment 0x989320 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x989360 <line:129:3> Text=" "
|   |   |-HTMLStartTagComment 0x989380 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9893c0 <col:8, col:50> Text="This API is used to request a memory block."
|   |   |-HTMLEndTagComment 0x9893e0 <col:51, col:55> Name="li"
|   |   |-TextComment 0x989410 <line:130:3> Text=" "
|   |   |-HTMLEndTagComment 0x989430 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x989460 <line:131:3> Text=" "
|   |-BlockCommandComment 0x9894f0 <col:4, line:134:8> Name="attention"
|   | `-ParagraphComment 0x9896c0 <line:132:3, line:134:8>
|   |   |-TextComment 0x989520 <line:132:3> Text=" "
|   |   |-HTMLStartTagComment 0x989540 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x989580 <line:133:3> Text=" "
|   |   |-HTMLStartTagComment 0x9895a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x9895e0 <col:8, col:76> Text="The input pool parameter must be initialized via func LOS_MemboxInit."
|   |   |-HTMLEndTagComment 0x989600 <col:77, col:81> Name="li"
|   |   |-TextComment 0x989630 <line:134:3> Text=" "
|   |   `-HTMLEndTagComment 0x989650 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x989710 <line:136:3>
|   | `-TextComment 0x9896e0 <col:3> Text=" "
|   |-ParamCommandComment 0x989730 <col:4, col:43> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x9897c0 <col:15, col:43>
|   |   `-TextComment 0x989790 <col:15, col:43> Text="    [IN] Memory pool address."
|   |-ParagraphComment 0x989810 <line:138:3>
|   | `-TextComment 0x9897e0 <col:3> Text=" "
|   |-BlockCommandComment 0x989830 <col:4, line:139:3> Name="retval"
|   | `-ParagraphComment 0x9898b0 <line:138:11, line:139:3>
|   |   |-TextComment 0x989860 <line:138:11, col:82> Text=" #VOID*      The request is accepted, and return a memory block address."
|   |   `-TextComment 0x989880 <line:139:3> Text=" "
|   |-BlockCommandComment 0x9898d0 <col:4, line:140:3> Name="retval"
|   | `-ParagraphComment 0x989950 <line:139:11, line:140:3>
|   |   |-TextComment 0x989900 <line:139:11, col:41> Text=" #NULL       The request fails."
|   |   `-TextComment 0x989920 <line:140:3> Text=" "
|   |-BlockCommandComment 0x989970 <col:4, line:144:3> Name="par"
|   | `-ParagraphComment 0x989b90 <line:140:8, line:144:3>
|   |   |-TextComment 0x9899a0 <line:140:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x9899c0 <line:141:3> Text=" "
|   |   |-HTMLStartTagComment 0x9899e0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x989a20 <line:142:3> Text=" "
|   |   |-HTMLStartTagComment 0x989a40 <col:4, col:7> Name="li"
|   |   |-TextComment 0x989a80 <col:8, col:71> Text="los_membox.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x989aa0 <col:72, col:76> Name="li"
|   |   |-TextComment 0x989ad0 <line:143:3> Text=" "
|   |   |-HTMLEndTagComment 0x989af0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x989b20 <line:144:3> Text=" "
|   `-BlockCommandComment 0x989bb0 <col:4, col:22> Name="see"
|     `-ParagraphComment 0x989c10 <col:8, col:22>
|       `-TextComment 0x989be0 <col:8, col:22> Text=" LOS_MemboxFree"
|-FunctionDecl 0x8fbe28 <line:173:1, col:51> col:15 LOS_MemboxFree 'UINT32 (void *, void *)' extern
| |-ParmVarDecl 0x8fbd10 <main/los_compiler.h:327:23, main/los_membox.h:173:36> col:36 pool 'void *'
| |-ParmVarDecl 0x8fbd90 <main/los_compiler.h:327:23, main/los_membox.h:173:48> col:48 box 'void *'
| `-FullComment 0x98aa80 <line:149:3, line:171:23>
|   |-ParagraphComment 0x989d40 <line:149:3>
|   | `-TextComment 0x989d10 <col:3> Text=" "
|   |-VerbatimLineComment 0x989d60 <col:4, col:23> Text=" los_membox"
|   |-ParagraphComment 0x989dd0 <line:150:3>
|   | `-TextComment 0x989da0 <col:3> Text=" "
|   |-BlockCommandComment 0x989df0 <col:4, col:30> Name="brief"
|   | `-ParagraphComment 0x989e50 <col:10, col:30>
|   |   `-TextComment 0x989e20 <col:10, col:30> Text=" Free a memory block."
|   |-ParagraphComment 0x989ea0 <line:152:3>
|   | `-TextComment 0x989e70 <col:3> Text=" "
|   |-BlockCommandComment 0x989ec0 <col:4, line:156:3> Name="par"
|   | `-ParagraphComment 0x98a0e0 <line:152:8, line:156:3>
|   |   |-TextComment 0x989ef0 <line:152:8, col:20> Text=" Description:"
|   |   |-TextComment 0x989f10 <line:153:3> Text=" "
|   |   |-HTMLStartTagComment 0x989f30 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x989f70 <line:154:3> Text=" "
|   |   |-HTMLStartTagComment 0x989f90 <col:4, col:7> Name="li"
|   |   |-TextComment 0x989fd0 <col:8, col:47> Text="This API is used to free a memory block."
|   |   |-HTMLEndTagComment 0x989ff0 <col:48, col:52> Name="li"
|   |   |-TextComment 0x98a020 <line:155:3> Text=" "
|   |   |-HTMLEndTagComment 0x98a040 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x98a070 <line:156:3> Text=" "
|   |-BlockCommandComment 0x98a100 <col:4, line:160:8> Name="attention"
|   | `-ParagraphComment 0x98a3a0 <line:157:3, line:160:8>
|   |   |-TextComment 0x98a130 <line:157:3> Text=" "
|   |   |-HTMLStartTagComment 0x98a150 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x98a190 <line:158:3> Text=" "
|   |   |-HTMLStartTagComment 0x98a1b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x98a1f0 <col:8, col:76> Text="The input pool parameter must be initialized via func LOS_MemboxInit."
|   |   |-HTMLEndTagComment 0x98a210 <col:77, col:81> Name="li"
|   |   |-TextComment 0x98a240 <line:159:3> Text=" "
|   |   |-HTMLStartTagComment 0x98a260 <col:4, col:7> Name="li"
|   |   |-TextComment 0x98a2a0 <col:8, col:68> Text="The input box parameter must be allocated by LOS_MemboxAlloc."
|   |   |-HTMLEndTagComment 0x98a2c0 <col:69, col:73> Name="li"
|   |   |-TextComment 0x98a2f0 <line:160:3> Text=" "
|   |   `-HTMLEndTagComment 0x98a310 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x98a3f0 <line:162:3>
|   | `-TextComment 0x98a3c0 <col:3> Text=" "
|   |-ParamCommandComment 0x98a410 <col:4, line:163:3> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x98a4c0 <line:162:15, line:163:3>
|   |   |-TextComment 0x98a470 <line:162:15, col:44> Text="     [IN] Memory pool address."
|   |   `-TextComment 0x98a490 <line:163:3> Text=" "
|   |-ParamCommandComment 0x98a4e0 <col:4, col:45> [in] implicitly Param="box" ParamIndex=1
|   | `-ParagraphComment 0x98a570 <col:14, col:45>
|   |   `-TextComment 0x98a540 <col:14, col:45> Text="      [IN] Memory block address."
|   |-ParagraphComment 0x98a5c0 <line:165:3>
|   | `-TextComment 0x98a590 <col:3> Text=" "
|   |-BlockCommandComment 0x98a5e0 <col:4, line:166:3> Name="retval"
|   | `-ParagraphComment 0x98a680 <line:165:11, line:166:3>
|   |   |-TextComment 0x98a610 <line:165:11, col:58> Text=" #LOS_NOK   This memory block fails to be freed."
|   |   `-TextComment 0x98a630 <line:166:3> Text=" "
|   |-BlockCommandComment 0x98a6a0 <col:4, line:167:3> Name="retval"
|   | `-ParagraphComment 0x98a720 <line:166:11, line:167:3>
|   |   |-TextComment 0x98a6d0 <line:166:11, col:62> Text=" #LOS_OK    This memory block is successfully freed."
|   |   `-TextComment 0x98a6f0 <line:167:3> Text=" "
|   |-BlockCommandComment 0x98a740 <col:4, line:171:3> Name="par"
|   | `-ParagraphComment 0x98a960 <line:167:8, line:171:3>
|   |   |-TextComment 0x98a770 <line:167:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x98a790 <line:168:3> Text=" "
|   |   |-HTMLStartTagComment 0x98a7b0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x98a7f0 <line:169:3> Text=" "
|   |   |-HTMLStartTagComment 0x98a810 <col:4, col:7> Name="li"
|   |   |-TextComment 0x98a850 <col:8, col:71> Text="los_membox.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x98a870 <col:72, col:76> Name="li"
|   |   |-TextComment 0x98a8a0 <line:170:3> Text=" "
|   |   |-HTMLEndTagComment 0x98a8c0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x98a8f0 <line:171:3> Text=" "
|   `-BlockCommandComment 0x98a980 <col:4, col:23> Name="see"
|     `-ParagraphComment 0x98a9e0 <col:8, col:23>
|       `-TextComment 0x98a9b0 <col:8, col:23> Text=" LOS_MemboxAlloc"
|-FunctionDecl 0x8fc078 <line:199:1, col:48> col:13 LOS_MemboxClr 'void (void *, void *)' extern
| |-ParmVarDecl 0x8fbf20 <main/los_compiler.h:327:23, main/los_membox.h:199:33> col:33 pool 'void *'
| |-ParmVarDecl 0x8fbfa0 <main/los_compiler.h:327:23, main/los_membox.h:199:45> col:45 box 'void *'
| `-FullComment 0x98b790 <line:176:3, line:197:13>
|   |-ParagraphComment 0x98ab20 <line:176:3>
|   | `-TextComment 0x98aaf0 <col:3> Text=" "
|   |-VerbatimLineComment 0x98ab40 <col:4, col:23> Text=" los_membox"
|   |-ParagraphComment 0x98abb0 <line:177:3>
|   | `-TextComment 0x98ab80 <col:3> Text=" "
|   |-BlockCommandComment 0x98abd0 <col:4, col:31> Name="brief"
|   | `-ParagraphComment 0x98ac30 <col:10, col:31>
|   |   `-TextComment 0x98ac00 <col:10, col:31> Text=" Clear a memory block."
|   |-ParagraphComment 0x98ac80 <line:179:3>
|   | `-TextComment 0x98ac50 <col:3> Text=" "
|   |-BlockCommandComment 0x98aca0 <col:4, line:183:3> Name="par"
|   | `-ParagraphComment 0x98aec0 <line:179:8, line:183:3>
|   |   |-TextComment 0x98acd0 <line:179:8, col:20> Text=" Description:"
|   |   |-TextComment 0x98acf0 <line:180:3> Text=" "
|   |   |-HTMLStartTagComment 0x98ad10 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x98ad50 <line:181:3> Text=" "
|   |   |-HTMLStartTagComment 0x98ad70 <col:4, col:7> Name="li"
|   |   |-TextComment 0x98adb0 <col:8, col:62> Text="This API is used to set the memory block value to be 0."
|   |   |-HTMLEndTagComment 0x98add0 <col:63, col:67> Name="li"
|   |   |-TextComment 0x98ae00 <line:182:3> Text=" "
|   |   |-HTMLEndTagComment 0x98ae20 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x98ae50 <line:183:3> Text=" "
|   |-BlockCommandComment 0x98aee0 <col:4, line:187:8> Name="attention"
|   | `-ParagraphComment 0x98b180 <line:184:3, line:187:8>
|   |   |-TextComment 0x98af10 <line:184:3> Text=" "
|   |   |-HTMLStartTagComment 0x98af30 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x98af70 <line:185:3> Text=" "
|   |   |-HTMLStartTagComment 0x98af90 <col:4, col:7> Name="li"
|   |   |-TextComment 0x98afd0 <col:8, col:76> Text="The input pool parameter must be initialized via func LOS_MemboxInit."
|   |   |-HTMLEndTagComment 0x98aff0 <col:77, col:81> Name="li"
|   |   |-TextComment 0x98b020 <line:186:3> Text=" "
|   |   |-HTMLStartTagComment 0x98b040 <col:4, col:7> Name="li"
|   |   |-TextComment 0x98b080 <col:8, col:68> Text="The input box parameter must be allocated by LOS_MemboxAlloc."
|   |   |-HTMLEndTagComment 0x98b0a0 <col:69, col:73> Name="li"
|   |   |-TextComment 0x98b0d0 <line:187:3> Text=" "
|   |   `-HTMLEndTagComment 0x98b0f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x98b1d0 <line:189:3>
|   | `-TextComment 0x98b1a0 <col:3> Text=" "
|   |-ParamCommandComment 0x98b1f0 <col:4, line:190:3> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x98b2a0 <line:189:15, line:190:3>
|   |   |-TextComment 0x98b250 <line:189:15, col:43> Text="    [IN] Memory pool address."
|   |   `-TextComment 0x98b270 <line:190:3> Text=" "
|   |-ParamCommandComment 0x98b2c0 <col:4, col:44> [in] implicitly Param="box" ParamIndex=1
|   | `-ParagraphComment 0x98b350 <col:14, col:44>
|   |   `-TextComment 0x98b320 <col:14, col:44> Text="     [IN] Memory block address."
|   |-ParagraphComment 0x98b3a0 <line:192:3>
|   | `-TextComment 0x98b370 <col:3> Text=" "
|   |-BlockCommandComment 0x98b3c0 <col:4, line:193:3> Name="retval"
|   | `-ParagraphComment 0x98b440 <line:192:11, line:193:3>
|   |   |-TextComment 0x98b3f0 <line:192:11, col:15> Text=" VOID"
|   |   `-TextComment 0x98b410 <line:193:3> Text=" "
|   |-BlockCommandComment 0x98b460 <col:4, line:197:3> Name="par"
|   | `-ParagraphComment 0x98b680 <line:193:8, line:197:3>
|   |   |-TextComment 0x98b490 <line:193:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x98b4b0 <line:194:3> Text=" "
|   |   |-HTMLStartTagComment 0x98b4d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x98b510 <line:195:3> Text=" "
|   |   |-HTMLStartTagComment 0x98b530 <col:4, col:7> Name="li"
|   |   |-TextComment 0x98b570 <col:8, col:71> Text="los_membox.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x98b590 <col:72, col:76> Name="li"
|   |   |-TextComment 0x98b5c0 <line:196:3> Text=" "
|   |   |-HTMLEndTagComment 0x98b5e0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x98b610 <line:197:3> Text=" "
|   `-BlockCommandComment 0x98b6a0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x98b700 <col:8, col:13>
|       `-TextComment 0x98b6d0 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8fc200 <line:223:1, col:35> col:13 LOS_ShowBox 'void (void *)' extern
| |-ParmVarDecl 0x8fc170 <main/los_compiler.h:327:23, main/los_membox.h:223:31> col:31 pool 'void *'
| `-FullComment 0x98c300 <line:202:3, line:221:13>
|   |-ParagraphComment 0x98b830 <line:202:3>
|   | `-TextComment 0x98b800 <col:3> Text=" "
|   |-VerbatimLineComment 0x98b850 <col:4, col:23> Text=" los_membox"
|   |-ParagraphComment 0x98b8c0 <line:203:3>
|   | `-TextComment 0x98b890 <col:3> Text=" "
|   |-BlockCommandComment 0x98b8e0 <col:4, col:27> Name="brief"
|   | `-ParagraphComment 0x98b940 <col:10, col:27>
|   |   `-TextComment 0x98b910 <col:10, col:27> Text=" show membox info."
|   |-ParagraphComment 0x98b990 <line:205:3>
|   | `-TextComment 0x98b960 <col:3> Text=" "
|   |-BlockCommandComment 0x98b9b0 <col:4, line:209:3> Name="par"
|   | `-ParagraphComment 0x98bbd0 <line:205:8, line:209:3>
|   |   |-TextComment 0x98b9e0 <line:205:8, col:20> Text=" Description:"
|   |   |-TextComment 0x98ba00 <line:206:3> Text=" "
|   |   |-HTMLStartTagComment 0x98ba20 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x98ba60 <line:207:3> Text=" "
|   |   |-HTMLStartTagComment 0x98ba80 <col:4, col:7> Name="li"
|   |   |-TextComment 0x98bac0 <col:8, col:53> Text="This API is used to show the memory pool info."
|   |   |-HTMLEndTagComment 0x98bae0 <col:54, col:58> Name="li"
|   |   |-TextComment 0x98bb10 <line:208:3> Text=" "
|   |   |-HTMLEndTagComment 0x98bb30 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x98bb60 <line:209:3> Text=" "
|   |-BlockCommandComment 0x98bbf0 <col:4, line:212:8> Name="attention"
|   | `-ParagraphComment 0x98bdc0 <line:210:3, line:212:8>
|   |   |-TextComment 0x98bc20 <line:210:3> Text=" "
|   |   |-HTMLStartTagComment 0x98bc40 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x98bc80 <line:211:3> Text=" "
|   |   |-HTMLStartTagComment 0x98bca0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x98bce0 <col:8, col:76> Text="The input pool parameter must be initialized via func LOS_MemboxInit."
|   |   |-HTMLEndTagComment 0x98bd00 <col:77, col:81> Name="li"
|   |   |-TextComment 0x98bd30 <line:212:3> Text=" "
|   |   `-HTMLEndTagComment 0x98bd50 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x98be10 <line:214:3>
|   | `-TextComment 0x98bde0 <col:3> Text=" "
|   |-ParamCommandComment 0x98be30 <col:4, col:43> [in] implicitly Param="pool" ParamIndex=0
|   | `-ParagraphComment 0x98bec0 <col:15, col:43>
|   |   `-TextComment 0x98be90 <col:15, col:43> Text="    [IN] Memory pool address."
|   |-ParagraphComment 0x98bf10 <line:216:3>
|   | `-TextComment 0x98bee0 <col:3> Text=" "
|   |-BlockCommandComment 0x98bf30 <col:4, line:217:3> Name="retval"
|   | `-ParagraphComment 0x98bfb0 <line:216:11, line:217:3>
|   |   |-TextComment 0x98bf60 <line:216:11, col:15> Text=" VOID"
|   |   `-TextComment 0x98bf80 <line:217:3> Text=" "
|   |-BlockCommandComment 0x98bfd0 <col:4, line:221:3> Name="par"
|   | `-ParagraphComment 0x98c1f0 <line:217:8, line:221:3>
|   |   |-TextComment 0x98c000 <line:217:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x98c020 <line:218:3> Text=" "
|   |   |-HTMLStartTagComment 0x98c040 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x98c080 <line:219:3> Text=" "
|   |   |-HTMLStartTagComment 0x98c0a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x98c0e0 <col:8, col:71> Text="los_membox.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x98c100 <col:72, col:76> Name="li"
|   |   |-TextComment 0x98c130 <line:220:3> Text=" "
|   |   |-HTMLEndTagComment 0x98c150 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x98c180 <line:221:3> Text=" "
|   `-BlockCommandComment 0x98c210 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x98c270 <col:8, col:13>
|       `-TextComment 0x98c240 <col:8, col:13> Text=" None."
|-FunctionDecl 0x8fc598 <line:250:1, col:106> col:15 LOS_MemboxStatisticsGet 'UINT32 (const void *, UINT32 *, UINT32 *, UINT32 *)' extern
| |-ParmVarDecl 0x8fc2f0 <col:39, col:51> col:51 boxMem 'const void *'
| |-ParmVarDecl 0x8fc368 <col:59, col:67> col:67 maxBlk 'UINT32 *'
| |-ParmVarDecl 0x8fc3e0 <col:75, col:83> col:83 blkCnt 'UINT32 *'
| |-ParmVarDecl 0x8fc458 <col:91, col:99> col:99 blkSize 'UINT32 *'
| `-FullComment 0x98d180 <line:226:3, line:248:51>
|   |-ParagraphComment 0x98c3a0 <line:226:3>
|   | `-TextComment 0x98c370 <col:3> Text=" "
|   |-VerbatimLineComment 0x98c3c0 <col:4, col:23> Text=" los_membox"
|   |-ParagraphComment 0x98c430 <line:227:3>
|   | `-TextComment 0x98c400 <col:3> Text=" "
|   |-BlockCommandComment 0x98c450 <col:4, col:39> Name="brief"
|   | `-ParagraphComment 0x98c4b0 <col:10, col:39>
|   |   `-TextComment 0x98c480 <col:10, col:39> Text=" calculate membox information."
|   |-ParagraphComment 0x98c500 <line:229:3>
|   | `-TextComment 0x98c4d0 <col:3> Text=" "
|   |-BlockCommandComment 0x98c520 <col:4, line:233:3> Name="par"
|   | `-ParagraphComment 0x98c750 <line:229:8, line:233:3>
|   |   |-TextComment 0x98c550 <line:229:8, col:20> Text=" Description:"
|   |   |-TextComment 0x98c570 <line:230:3> Text=" "
|   |   |-HTMLStartTagComment 0x98c590 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x98c5d0 <line:231:3> Text=" "
|   |   |-HTMLStartTagComment 0x98c5f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x98c630 <col:8, col:56> Text="This API is used to calculate membox information."
|   |   |-HTMLEndTagComment 0x98c650 <col:57, col:61> Name="li"
|   |   |-TextComment 0x98c690 <line:232:3> Text=" "
|   |   |-HTMLEndTagComment 0x98c6b0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x98c6e0 <line:233:3> Text=" "
|   |-BlockCommandComment 0x98c770 <col:4, line:237:8> Name="attention"
|   | `-ParagraphComment 0x98c960 <line:234:3, line:237:8>
|   |   |-TextComment 0x98c7a0 <line:234:3> Text=" "
|   |   |-HTMLStartTagComment 0x98c7c0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x98c800 <line:235:3> Text=" "
|   |   |-HTMLStartTagComment 0x98c820 <col:4, col:7> Name="li"
|   |   |-TextComment 0x98c860 <col:8, col:108> Text="One parameter of this interface is a pointer, it should be a correct value, otherwise, the system may"
|   |   |-TextComment 0x98c880 <line:236:3, col:15> Text=" be abnormal."
|   |   |-HTMLEndTagComment 0x98c8a0 <col:16, col:20> Name="li"
|   |   |-TextComment 0x98c8d0 <line:237:3> Text=" "
|   |   `-HTMLEndTagComment 0x98c8f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x98c9b0 <line:239:3>
|   | `-TextComment 0x98c980 <col:3> Text=" "
|   |-ParamCommandComment 0x98c9d0 <col:4, line:240:3> [in] implicitly Param="boxMem" ParamIndex=0
|   | `-ParagraphComment 0x98ca80 <line:239:18, line:240:3>
|   |   |-TextComment 0x98ca30 <line:239:18, col:78> Text="        [IN]  Type  #VOID*   Pointer to the calculate membox."
|   |   `-TextComment 0x98ca50 <line:240:3> Text=" "
|   |-ParamCommandComment 0x98caa0 <col:4, line:241:3> [in] implicitly Param="maxBlk" ParamIndex=1
|   | `-ParagraphComment 0x98cb50 <line:240:18, line:241:3>
|   |   |-TextComment 0x98cb00 <line:240:18, col:69> Text="       [OUT] Type  #UINT32* Record membox max block."
|   |   `-TextComment 0x98cb20 <line:241:3> Text=" "
|   |-ParamCommandComment 0x98cb70 <col:4, line:242:3> [in] implicitly Param="blkCnt" ParamIndex=2
|   | `-ParagraphComment 0x98cc20 <line:241:18, line:242:3>
|   |   |-TextComment 0x98cbd0 <line:241:18, col:88> Text="       [OUT] Type  #UINT32* Record membox block count alreay allocated."
|   |   `-TextComment 0x98cbf0 <line:242:3> Text=" "
|   |-ParamCommandComment 0x98cc40 <col:4, col:70> [in] implicitly Param="blkSize" ParamIndex=3
|   | `-ParagraphComment 0x98ccd0 <col:19, col:70>
|   |   `-TextComment 0x98cca0 <col:19, col:70> Text="      [OUT] Type  #UINT32* Record membox block size."
|   |-ParagraphComment 0x98cd20 <line:244:3>
|   | `-TextComment 0x98ccf0 <col:3> Text=" "
|   |-BlockCommandComment 0x98cd40 <col:4, line:245:3> Name="retval"
|   | `-ParagraphComment 0x98cdc0 <line:244:11, line:245:3>
|   |   |-TextComment 0x98cd70 <line:244:11, col:60> Text=" #LOS_OK        The heap status calculate success."
|   |   `-TextComment 0x98cd90 <line:245:3> Text=" "
|   |-BlockCommandComment 0x98cde0 <col:4, line:246:3> Name="retval"
|   | `-ParagraphComment 0x98ce60 <line:245:11, line:246:3>
|   |   |-TextComment 0x98ce10 <line:245:11, col:71> Text=" #LOS_NOK       The membox  status calculate with some error."
|   |   `-TextComment 0x98ce30 <line:246:3> Text=" "
|   |-BlockCommandComment 0x98ce80 <col:4, line:248:3> Name="par"
|   | `-ParagraphComment 0x98d050 <line:246:8, line:248:3>
|   |   |-TextComment 0x98ceb0 <line:246:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x98ced0 <line:247:3> Text=" "
|   |   |-HTMLStartTagComment 0x98cef0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x98cf30 <col:8, col:11> Name="li"
|   |   |-TextComment 0x98cf70 <col:12, col:75> Text="los_memory.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x98cf90 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0x98cfc0 <col:81, col:85> Name="ul"
|   |   `-TextComment 0x98cff0 <line:248:3> Text=" "
|   `-BlockCommandComment 0x98d070 <col:4, col:51> Name="see"
|     `-ParagraphComment 0x98d0d0 <col:8, col:51>
|       `-TextComment 0x98d0a0 <col:8, col:51> Text=" LOS_MemAlloc | LOS_MemRealloc | LOS_MemFree"
|-VarDecl 0x8fc728 prev 0x87e2d0 <main/los_interrupt.c:45:1, col:21> col:8 used g_intCount 'UINT32':'unsigned int' cinit
| `-ImplicitCastExpr 0x8fc7b0 <col:21> 'UINT32':'unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x8fc790 <col:21> 'int' 0
|-VarDecl 0x8fc918 <main/los_compiler.h:158:22, main/los_interrupt.c:51:106> col:77 used g_hwiForm 'HWI_PROC_FUNC [32]' static cinit
| |-InitListExpr 0x8fca70 <col:104, col:106> 'HWI_PROC_FUNC [32]'
| | |-array_filler: ImplicitValueInitExpr 0x8fcad0 <<invalid sloc>> 'HWI_PROC_FUNC':'void (*)(void)'
| | `-ImplicitCastExpr 0x8fcab0 <col:105> 'HWI_PROC_FUNC':'void (*)(void)' <NullToPointer>
| |   `-IntegerLiteral 0x8fc9f8 <col:105> 'int' 0
| `-AlignedAttr 0x8fc998 <col:37, col:73> aligned
|   `-ConstantExpr 0x8fc980 <main/los_config.h:635:62> 'int'
|     `-IntegerLiteral 0x8fc7c8 <col:62> 'int' 256
|-VarDecl 0x8fcb98 <main/los_compiler.h:158:22, main/los_interrupt.c:84:58> col:22 used g_hwiHandlerForm 'HWI_PROC_FUNC [32]' static cinit
| `-InitListExpr 0x906248 <col:56, col:58> 'HWI_PROC_FUNC [32]'
|   |-array_filler: ImplicitValueInitExpr 0x9062a8 <<invalid sloc>> 'HWI_PROC_FUNC':'void (*)(void)'
|   `-ImplicitCastExpr 0x906288 <col:57> 'HWI_PROC_FUNC':'void (*)(void)' <NullToPointer>
|     `-IntegerLiteral 0x8fcc00 <col:57> 'int' 0
|-FunctionDecl 0x9063d8 prev 0x87e4d8 <main/los_compiler.h:327:23, main/los_interrupt.c:96:1> line:90:6 used OsSetVector 'void (UINT32, HWI_PROC_FUNC)'
| |-ParmVarDecl 0x9062c8 <col:18, col:25> col:25 used num 'UINT32':'unsigned int'
| |-ParmVarDecl 0x906340 <col:30, col:44> col:44 used vector 'HWI_PROC_FUNC':'void (*)(void)'
| `-CompoundStmt 0x9068d0 <line:91:1, line:96:1>
|   `-IfStmt 0x9068b8 <line:92:5, line:95:5>
|     |-BinaryOperator 0x9065d0 <line:92:9, main/los_arch_interrupt.h:120:82> 'int' '<'
|     | |-ParenExpr 0x906518 <main/los_interrupt.c:92:9, col:33> 'unsigned int'
|     | | `-BinaryOperator 0x9064f8 <col:10, main/los_arch_interrupt.h:114:47> 'unsigned int' '+'
|     | |   |-ImplicitCastExpr 0x9064c8 <main/los_interrupt.c:92:10> 'UINT32':'unsigned int' <LValueToRValue>
|     | |   | `-DeclRefExpr 0x906488 <col:10> 'UINT32':'unsigned int' lvalue ParmVar 0x9062c8 'num' 'UINT32':'unsigned int'
|     | |   `-ImplicitCastExpr 0x9064e0 <main/los_arch_interrupt.h:114:47> 'unsigned int' <IntegralCast>
|     | |     `-IntegerLiteral 0x9064a8 <col:47> 'int' 0
|     | `-ImplicitCastExpr 0x9065b8 <line:120:47, col:82> 'unsigned int' <IntegralCast>
|     |   `-ParenExpr 0x906598 <col:47, col:82> 'int'
|     |     `-BinaryOperator 0x906578 <line:114:47, main/target_config.h:65:61> 'int' '+'
|     |       |-IntegerLiteral 0x906538 <main/los_arch_interrupt.h:114:47> 'int' 0
|     |       `-IntegerLiteral 0x906558 <main/target_config.h:65:61> 'int' 32
|     `-CompoundStmt 0x906898 <main/los_interrupt.c:92:52, line:95:5>
|       |-BinaryOperator 0x906738 <line:93:9, col:46> 'HWI_PROC_FUNC':'void (*)(void)' '='
|       | |-ArraySubscriptExpr 0x9066e0 <col:9, col:42> 'HWI_PROC_FUNC':'void (*)(void)' lvalue
|       | | |-ImplicitCastExpr 0x9066c8 <col:9> 'HWI_PROC_FUNC *' <ArrayToPointerDecay>
|       | | | `-DeclRefExpr 0x9065f0 <col:9> 'HWI_PROC_FUNC [32]' lvalue Var 0x8fc918 'g_hwiForm' 'HWI_PROC_FUNC [32]'
|       | | `-BinaryOperator 0x906680 <col:19, main/los_arch_interrupt.h:114:47> 'unsigned int' '+'
|       | |   |-ImplicitCastExpr 0x906650 <main/los_interrupt.c:93:19> 'UINT32':'unsigned int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x906610 <col:19> 'UINT32':'unsigned int' lvalue ParmVar 0x9062c8 'num' 'UINT32':'unsigned int'
|       | |   `-ImplicitCastExpr 0x906668 <main/los_arch_interrupt.h:114:47> 'unsigned int' <IntegralCast>
|       | |     `-IntegerLiteral 0x906630 <col:47> 'int' 0
|       | `-ImplicitCastExpr 0x906720 <main/los_interrupt.c:93:46> 'void (*)(void)' <FunctionToPointerDecay>
|       |   `-DeclRefExpr 0x906700 <col:46> 'void (void)' Function 0x87e620 'HalInterrupt' 'void (void)'
|       `-BinaryOperator 0x906878 <line:94:9, col:53> 'HWI_PROC_FUNC':'void (*)(void)' '='
|         |-ArraySubscriptExpr 0x906820 <col:9, col:49> 'HWI_PROC_FUNC':'void (*)(void)' lvalue
|         | |-ImplicitCastExpr 0x906808 <col:9> 'HWI_PROC_FUNC *' <ArrayToPointerDecay>
|         | | `-DeclRefExpr 0x906758 <col:9> 'HWI_PROC_FUNC [32]' lvalue Var 0x8fcb98 'g_hwiHandlerForm' 'HWI_PROC_FUNC [32]'
|         | `-BinaryOperator 0x9067e8 <col:26, main/los_arch_interrupt.h:114:47> 'unsigned int' '+'
|         |   |-ImplicitCastExpr 0x9067b8 <main/los_interrupt.c:94:26> 'UINT32':'unsigned int' <LValueToRValue>
|         |   | `-DeclRefExpr 0x906778 <col:26> 'UINT32':'unsigned int' lvalue ParmVar 0x9062c8 'num' 'UINT32':'unsigned int'
|         |   `-ImplicitCastExpr 0x9067d0 <main/los_arch_interrupt.h:114:47> 'unsigned int' <IntegralCast>
|         |     `-IntegerLiteral 0x906798 <col:47> 'int' 0
|         `-ImplicitCastExpr 0x906860 <main/los_interrupt.c:94:53> 'HWI_PROC_FUNC':'void (*)(void)' <LValueToRValue>
|           `-DeclRefExpr 0x906840 <col:53> 'HWI_PROC_FUNC':'void (*)(void)' lvalue ParmVar 0x906340 'vector' 'HWI_PROC_FUNC':'void (*)(void)'
|-FunctionDecl 0x906988 <line:99:1, line:102:1> line:99:8 used HwiNumValid 'UINT32 (UINT32)'
| |-ParmVarDecl 0x9068f8 <col:20, col:27> col:27 used num 'UINT32':'unsigned int'
| `-CompoundStmt 0x906c38 <line:100:1, line:102:1>
|   `-ReturnStmt 0x906c28 <line:101:5, col:63>
|     `-ImplicitCastExpr 0x906c10 <col:12, col:63> 'UINT32':'unsigned int' <IntegralCast>
|       `-BinaryOperator 0x906bf0 <col:12, col:63> 'int' '&&'
|         |-ParenExpr 0x906ac0 <col:12, col:37> 'int'
|         | `-BinaryOperator 0x906aa0 <col:13, main/los_arch_interrupt.h:114:47> 'int' '>='
|         |   |-ImplicitCastExpr 0x906a70 <main/los_interrupt.c:101:13> 'UINT32':'unsigned int' <LValueToRValue>
|         |   | `-DeclRefExpr 0x906a30 <col:13> 'UINT32':'unsigned int' lvalue ParmVar 0x9068f8 'num' 'UINT32':'unsigned int'
|         |   `-ImplicitCastExpr 0x906a88 <main/los_arch_interrupt.h:114:47> 'unsigned int' <IntegralCast>
|         |     `-IntegerLiteral 0x906a50 <col:47> 'int' 0
|         `-ParenExpr 0x906bd0 <main/los_interrupt.c:101:42, col:63> 'int'
|           `-BinaryOperator 0x906bb0 <col:43, main/los_arch_interrupt.h:120:82> 'int' '<='
|             |-ImplicitCastExpr 0x906b80 <main/los_interrupt.c:101:43> 'UINT32':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x906ae0 <col:43> 'UINT32':'unsigned int' lvalue ParmVar 0x9068f8 'num' 'UINT32':'unsigned int'
|             `-ImplicitCastExpr 0x906b98 <main/los_arch_interrupt.h:120:47, col:82> 'unsigned int' <IntegralCast>
|               `-ParenExpr 0x906b60 <col:47, col:82> 'int'
|                 `-BinaryOperator 0x906b40 <line:114:47, main/target_config.h:65:61> 'int' '+'
|                   |-IntegerLiteral 0x906b00 <main/los_arch_interrupt.h:114:47> 'int' 0
|                   `-IntegerLiteral 0x906b20 <main/target_config.h:65:61> 'int' 32
|-FunctionDecl 0x906ce8 prev 0x783b68 <main/los_interrupt.c:108:1, line:114:1> line:108:8 used ArchIntLock 'UINT32 (void)'
| `-CompoundStmt 0x9070b0 <line:109:1, line:114:1>
|   |-DeclStmt 0x906e00 <line:110:5, col:15>
|   | `-VarDecl 0x906d98 <col:5, col:12> col:12 used ret 'UINT32':'unsigned int'
|   |-GCCAsmStmt 0x906fd8 <line:112:5, col:74>
|   | |-DeclRefExpr 0x906ed8 <col:43> 'UINT32':'unsigned int' lvalue Var 0x906d98 'ret' 'UINT32':'unsigned int'
|   | `-IntegerLiteral 0x906f58 <main/los_arch_regs.h:162:62> 'int' 5
|   `-ReturnStmt 0x9070a0 <main/los_interrupt.c:113:5, col:12>
|     `-ImplicitCastExpr 0x907088 <col:12> 'UINT32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x907068 <col:12> 'UINT32':'unsigned int' lvalue Var 0x906d98 'ret' 'UINT32':'unsigned int'
|-FunctionDecl 0x908220 prev 0x783f98 <main/los_compiler.h:327:23, main/los_interrupt.c:123:1> line:120:6 used ArchIntRestore 'void (UINT32)'
| |-ParmVarDecl 0x9070e8 <col:21, col:28> col:28 used intSave 'UINT32':'unsigned int'
| `-CompoundStmt 0x9083e0 <line:121:1, line:123:1>
|   `-GCCAsmStmt 0x908368 <line:122:5, col:68>
|     `-ImplicitCastExpr 0x908350 <col:49> 'UINT32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x908310 <col:49> 'UINT32':'unsigned int' lvalue ParmVar 0x9070e8 'intSave' 'UINT32':'unsigned int'
|-FunctionDecl 0x908490 prev 0x7840d8 <line:129:1, line:136:1> line:129:8 ArchIntUnLock 'UINT32 (void)'
| `-CompoundStmt 0x908760 <line:130:1, line:136:1>
|   |-DeclStmt 0x9085a8 <line:131:5, col:19>
|   | `-VarDecl 0x908540 <col:5, col:12> col:12 used intSave 'UINT32':'unsigned int'
|   |-GCCAsmStmt 0x908688 <line:133:5, col:71>
|   | |-DeclRefExpr 0x908608 <col:43> 'UINT32':'unsigned int' lvalue Var 0x908540 'intSave' 'UINT32':'unsigned int'
|   | `-IntegerLiteral 0x908648 <col:58> 'int' 0
|   `-ReturnStmt 0x908750 <line:135:5, col:12>
|     `-ImplicitCastExpr 0x908738 <col:12> 'UINT32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x908718 <col:12> 'UINT32':'unsigned int' lvalue Var 0x908540 'intSave' 'UINT32':'unsigned int'
|-FunctionDecl 0x908820 <main/los_compiler.h:158:22, main/los_interrupt.c:149:1> line:142:22 ArchIntLocked 'UINT32 (void)' static inline
| `-CompoundStmt 0x908b10 <line:143:1, line:149:1>
|   |-DeclStmt 0x908938 <line:144:5, col:19>
|   | `-VarDecl 0x9088d0 <col:5, col:12> col:12 used intSave 'UINT32':'unsigned int'
|   |-GCCAsmStmt 0x9089d8 <line:146:5, col:64>
|   | `-DeclRefExpr 0x908998 <col:43> 'UINT32':'unsigned int' lvalue Var 0x9088d0 'intSave' 'UINT32':'unsigned int'
|   `-ReturnStmt 0x908b00 <line:148:5, col:39>
|     `-ParenExpr 0x908ae0 <col:12, col:39> 'unsigned int'
|       `-BinaryOperator 0x908ac0 <col:13, main/los_arch_regs.h:52:62> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x908a90 <main/los_interrupt.c:148:13> 'UINT32':'unsigned int' <LValueToRValue>
|         | `-DeclRefExpr 0x908a50 <col:13> 'UINT32':'unsigned int' lvalue Var 0x9088d0 'intSave' 'UINT32':'unsigned int'
|         `-ImplicitCastExpr 0x908aa8 <main/los_arch_regs.h:52:62> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x908a70 <col:62> 'int' 15
|-FunctionDecl 0x908bd8 <main/los_compiler.h:158:22, main/los_interrupt.c:164:1> line:155:15 used HwiPending 'UINT32 (HWI_HANDLE_T)' static
| |-ParmVarDecl 0x908b48 <col:26, col:39> col:39 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0x90a2e0 <line:156:1, line:164:1>
|   |-IfStmt 0x9090c0 <line:157:5, line:159:5>
|   | |-UnaryOperator 0x908d40 <line:157:9, col:28> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x908d00 <col:10, col:28> 'UINT32':'unsigned int'
|   | |   |-ImplicitCastExpr 0x908ce8 <col:10> 'UINT32 (*)(UINT32)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x908c80 <col:10> 'UINT32 (UINT32)' Function 0x906988 'HwiNumValid' 'UINT32 (UINT32)'
|   | |   `-ImplicitCastExpr 0x908d28 <col:22> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x908ca0 <col:22> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x908b48 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|   | `-CompoundStmt 0x9090a8 <col:31, line:159:5>
|   |   `-ReturnStmt 0x909098 <line:158:9, main/los_error.h:89:87>
|   |     `-ParenExpr 0x909078 <col:13, col:87> 'unsigned int'
|   |       `-BinaryOperator 0x909058 <line:69:61, line:89:86> 'unsigned int' '|'
|   |         |-BinaryOperator 0x908fe0 <line:69:61, line:89:76> 'unsigned int' '|'
|   |         | |-BinaryOperator 0x908ec8 <line:69:61, line:51:80> 'unsigned int' '|'
|   |         | | |-ParenExpr 0x908df0 <line:69:61, col:80> 'UINT32':'unsigned int'
|   |         | | | `-BinaryOperator 0x908dd0 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | | |   |-CStyleCastExpr 0x908d88 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | | |   | `-IntegerLiteral 0x908d58 <col:70> 'int' 2
|   |         | | |   `-IntegerLiteral 0x908db0 <col:78> 'int' 24
|   |         | | `-ParenExpr 0x908ea8 <line:51:61, col:80> 'UINT32':'unsigned int'
|   |         | |   `-BinaryOperator 0x908e88 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | |     |-CStyleCastExpr 0x908e40 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | |     | `-IntegerLiteral 0x908e10 <col:70> 'int' 0
|   |         | |     `-IntegerLiteral 0x908e68 <col:78> 'int' 16
|   |         | `-ParenExpr 0x908fc0 <line:89:52, col:76> 'UINT32':'unsigned int'
|   |         |   `-BinaryOperator 0x908fa0 <col:53, col:75> 'UINT32':'unsigned int' '<<'
|   |         |     |-CStyleCastExpr 0x908f58 <col:53, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         |     | `-ParenExpr 0x908f38 <col:61, col:70> 'int'
|   |         |     |   `-DeclRefExpr 0x908ee8 <main/los_arch_interrupt.h:130:66> 'int' EnumConstant 0x8a7bc0 'LOS_MOD_HWI' 'int'
|   |         |     `-IntegerLiteral 0x908f80 <main/los_error.h:89:75> 'int' 8
|   |         `-ImplicitCastExpr 0x909040 <col:80, col:86> 'unsigned int' <IntegralCast>
|   |           `-ParenExpr 0x909020 <col:80, col:86> 'int'
|   |             `-IntegerLiteral 0x909000 <main/los_arch_interrupt.h:130:79> 'int' 0
|   |-GCCAsmStmt 0x90a240 <main/los_interrupt.c:161:5, col:75>
|   | `-BinaryOperator 0x9091c0 <col:60, col:68> 'unsigned int' '<<'
|   |   |-IntegerLiteral 0x909168 <col:60> 'unsigned int' 1
|   |   `-ImplicitCastExpr 0x9091a8 <col:68> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x909188 <col:68> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x908b48 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|   `-ReturnStmt 0x90a2d0 <line:163:5, main/los_compiler.h:350:23>
|     `-IntegerLiteral 0x90a2b0 <col:23> 'unsigned int' 0
|-FunctionDecl 0x90a3a8 prev 0x783ca8 <main/los_interrupt.c:166:1, line:178:1> line:166:8 used HwiUnmask 'UINT32 (HWI_HANDLE_T)'
| |-ParmVarDecl 0x90a318 <col:18, col:31> col:31 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0x90aca0 <line:167:1, line:178:1>
|   |-DeclStmt 0x90a4c8 <line:168:5, col:15>
|   | `-VarDecl 0x90a460 <col:5, col:12> col:12 used ier 'UINT32':'unsigned int'
|   |-IfStmt 0x90a8f8 <line:170:5, line:172:5>
|   | |-UnaryOperator 0x90a578 <line:170:9, col:28> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x90a538 <col:10, col:28> 'UINT32':'unsigned int'
|   | |   |-ImplicitCastExpr 0x90a520 <col:10> 'UINT32 (*)(UINT32)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x90a4e0 <col:10> 'UINT32 (UINT32)' Function 0x906988 'HwiNumValid' 'UINT32 (UINT32)'
|   | |   `-ImplicitCastExpr 0x90a560 <col:22> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x90a500 <col:22> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x90a318 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|   | `-CompoundStmt 0x90a8e0 <col:31, line:172:5>
|   |   `-ReturnStmt 0x90a8d0 <line:171:9, main/los_error.h:89:87>
|   |     `-ParenExpr 0x90a8b0 <col:13, col:87> 'unsigned int'
|   |       `-BinaryOperator 0x90a890 <line:69:61, line:89:86> 'unsigned int' '|'
|   |         |-BinaryOperator 0x90a818 <line:69:61, line:89:76> 'unsigned int' '|'
|   |         | |-BinaryOperator 0x90a700 <line:69:61, line:51:80> 'unsigned int' '|'
|   |         | | |-ParenExpr 0x90a628 <line:69:61, col:80> 'UINT32':'unsigned int'
|   |         | | | `-BinaryOperator 0x90a608 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | | |   |-CStyleCastExpr 0x90a5c0 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | | |   | `-IntegerLiteral 0x90a590 <col:70> 'int' 2
|   |         | | |   `-IntegerLiteral 0x90a5e8 <col:78> 'int' 24
|   |         | | `-ParenExpr 0x90a6e0 <line:51:61, col:80> 'UINT32':'unsigned int'
|   |         | |   `-BinaryOperator 0x90a6c0 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | |     |-CStyleCastExpr 0x90a678 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | |     | `-IntegerLiteral 0x90a648 <col:70> 'int' 0
|   |         | |     `-IntegerLiteral 0x90a6a0 <col:78> 'int' 16
|   |         | `-ParenExpr 0x90a7f8 <line:89:52, col:76> 'UINT32':'unsigned int'
|   |         |   `-BinaryOperator 0x90a7d8 <col:53, col:75> 'UINT32':'unsigned int' '<<'
|   |         |     |-CStyleCastExpr 0x90a790 <col:53, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         |     | `-ParenExpr 0x90a770 <col:61, col:70> 'int'
|   |         |     |   `-DeclRefExpr 0x90a720 <main/los_arch_interrupt.h:130:66> 'int' EnumConstant 0x8a7bc0 'LOS_MOD_HWI' 'int'
|   |         |     `-IntegerLiteral 0x90a7b8 <main/los_error.h:89:75> 'int' 8
|   |         `-ImplicitCastExpr 0x90a878 <col:80, col:86> 'unsigned int' <IntegralCast>
|   |           `-ParenExpr 0x90a858 <col:80, col:86> 'int'
|   |             `-IntegerLiteral 0x90a838 <main/los_arch_interrupt.h:130:79> 'int' 0
|   |-GCCAsmStmt 0x90a9d8 <main/los_interrupt.c:174:5, col:70>
|   | `-DeclRefExpr 0x90a998 <col:53> 'UINT32':'unsigned int' lvalue Var 0x90a460 'ier' 'UINT32':'unsigned int'
|   |-GCCAsmStmt 0x90ac00 <line:175:5, col:92>
|   | `-BinaryOperator 0x90abe0 <col:61, col:90> 'unsigned int' '|'
|   |   |-ImplicitCastExpr 0x90abc8 <col:61> 'UINT32':'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x90aad8 <col:61> 'UINT32':'unsigned int' lvalue Var 0x90a460 'ier' 'UINT32':'unsigned int'
|   |   `-ParenExpr 0x90aba8 <col:67, col:90> 'UINT32':'unsigned int'
|   |     `-BinaryOperator 0x90ab88 <col:68, col:84> 'UINT32':'unsigned int' '<<'
|   |       |-CStyleCastExpr 0x90ab28 <col:68, col:76> 'UINT32':'unsigned int' <NoOp>
|   |       | `-IntegerLiteral 0x90aaf8 <col:76> 'unsigned int' 1
|   |       `-ImplicitCastExpr 0x90ab70 <col:84> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x90ab50 <col:84> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x90a318 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|   `-ReturnStmt 0x90ac90 <line:177:5, main/los_compiler.h:350:23>
|     `-IntegerLiteral 0x90ac70 <col:23> 'unsigned int' 0
|-FunctionDecl 0x90ad78 prev 0x783df0 <main/los_interrupt.c:180:1, line:192:1> line:180:8 used HwiMask 'UINT32 (HWI_HANDLE_T)'
| |-ParmVarDecl 0x90ace8 <col:16, col:29> col:29 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0x90b640 <line:181:1, line:192:1>
|   |-DeclStmt 0x90ae98 <line:182:5, col:15>
|   | `-VarDecl 0x90ae30 <col:5, col:12> col:12 used ier 'UINT32':'unsigned int'
|   |-IfStmt 0x90b2f0 <line:184:5, line:186:5>
|   | |-UnaryOperator 0x90af48 <line:184:9, col:28> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x90af08 <col:10, col:28> 'UINT32':'unsigned int'
|   | |   |-ImplicitCastExpr 0x90aef0 <col:10> 'UINT32 (*)(UINT32)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x90aeb0 <col:10> 'UINT32 (UINT32)' Function 0x906988 'HwiNumValid' 'UINT32 (UINT32)'
|   | |   `-ImplicitCastExpr 0x90af30 <col:22> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x90aed0 <col:22> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x90ace8 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|   | `-CompoundStmt 0x90b2d8 <col:31, line:186:5>
|   |   `-ReturnStmt 0x90b2c8 <line:185:9, main/los_error.h:89:87>
|   |     `-ParenExpr 0x90b2a8 <col:13, col:87> 'unsigned int'
|   |       `-BinaryOperator 0x90b288 <line:69:61, line:89:86> 'unsigned int' '|'
|   |         |-BinaryOperator 0x90b1e8 <line:69:61, line:89:76> 'unsigned int' '|'
|   |         | |-BinaryOperator 0x90b0d0 <line:69:61, line:51:80> 'unsigned int' '|'
|   |         | | |-ParenExpr 0x90aff8 <line:69:61, col:80> 'UINT32':'unsigned int'
|   |         | | | `-BinaryOperator 0x90afd8 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | | |   |-CStyleCastExpr 0x90af90 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | | |   | `-IntegerLiteral 0x90af60 <col:70> 'int' 2
|   |         | | |   `-IntegerLiteral 0x90afb8 <col:78> 'int' 24
|   |         | | `-ParenExpr 0x90b0b0 <line:51:61, col:80> 'UINT32':'unsigned int'
|   |         | |   `-BinaryOperator 0x90b090 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | |     |-CStyleCastExpr 0x90b048 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | |     | `-IntegerLiteral 0x90b018 <col:70> 'int' 0
|   |         | |     `-IntegerLiteral 0x90b070 <col:78> 'int' 16
|   |         | `-ParenExpr 0x90b1c8 <line:89:52, col:76> 'UINT32':'unsigned int'
|   |         |   `-BinaryOperator 0x90b1a8 <col:53, col:75> 'UINT32':'unsigned int' '<<'
|   |         |     |-CStyleCastExpr 0x90b160 <col:53, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         |     | `-ParenExpr 0x90b140 <col:61, col:70> 'int'
|   |         |     |   `-DeclRefExpr 0x90b0f0 <main/los_arch_interrupt.h:130:66> 'int' EnumConstant 0x8a7bc0 'LOS_MOD_HWI' 'int'
|   |         |     `-IntegerLiteral 0x90b188 <main/los_error.h:89:75> 'int' 8
|   |         `-ImplicitCastExpr 0x90b270 <col:80, col:86> 'unsigned int' <IntegralCast>
|   |           `-ParenExpr 0x90b250 <col:80, col:86> 'int'
|   |             `-IntegerLiteral 0x90b208 <main/los_arch_interrupt.h:130:79> 'int' 0
|   |-GCCAsmStmt 0x90b398 <main/los_interrupt.c:188:5, col:70>
|   | `-DeclRefExpr 0x90b358 <col:53> 'UINT32':'unsigned int' lvalue Var 0x90ae30 'ier' 'UINT32':'unsigned int'
|   |-GCCAsmStmt 0x90b5a0 <line:189:5, col:93>
|   | `-BinaryOperator 0x90b580 <col:61, col:91> 'unsigned int' '&'
|   |   |-ImplicitCastExpr 0x90b568 <col:61> 'UINT32':'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x90b460 <col:61> 'UINT32':'unsigned int' lvalue Var 0x90ae30 'ier' 'UINT32':'unsigned int'
|   |   `-UnaryOperator 0x90b550 <col:67, col:91> 'UINT32':'unsigned int' prefix '~' cannot overflow
|   |     `-ParenExpr 0x90b530 <col:68, col:91> 'UINT32':'unsigned int'
|   |       `-BinaryOperator 0x90b510 <col:69, col:85> 'UINT32':'unsigned int' '<<'
|   |         |-CStyleCastExpr 0x90b4b0 <col:69, col:77> 'UINT32':'unsigned int' <NoOp>
|   |         | `-IntegerLiteral 0x90b480 <col:77> 'unsigned int' 1
|   |         `-ImplicitCastExpr 0x90b4f8 <col:85> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|   |           `-DeclRefExpr 0x90b4d8 <col:85> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x90ace8 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|   `-ReturnStmt 0x90b630 <line:191:5, main/los_compiler.h:350:23>
|     `-IntegerLiteral 0x90b610 <col:23> 'unsigned int' 0
|-FunctionDecl 0x90b710 <line:158:22, main/los_interrupt.c:213:1> line:201:15 used HwiNumGet 'UINT32 (void)' static
| `-CompoundStmt 0x90bf10 <line:202:1, line:213:1>
|   |-DeclStmt 0x90b828 <line:203:5, col:15>
|   | `-VarDecl 0x90b7c0 <col:5, col:12> col:12 used ier 'UINT32':'unsigned int'
|   |-DeclStmt 0x90b8b8 <line:204:5, col:21>
|   | `-VarDecl 0x90b850 <col:5, col:12> col:12 used intenable 'UINT32':'unsigned int'
|   |-DeclStmt 0x90b948 <line:205:5, col:19>
|   | `-VarDecl 0x90b8e0 <col:5, col:12> col:12 used intSave 'UINT32':'unsigned int'
|   |-GCCAsmStmt 0x90b9f0 <line:207:5, col:70>
|   | `-DeclRefExpr 0x90b9b0 <col:53> 'UINT32':'unsigned int' lvalue Var 0x90b7c0 'ier' 'UINT32':'unsigned int'
|   |-GCCAsmStmt 0x90baf8 <line:208:5, col:76>
|   | `-DeclRefExpr 0x90bab8 <col:53> 'UINT32':'unsigned int' lvalue Var 0x90b850 'intenable' 'UINT32':'unsigned int'
|   |-BinaryOperator 0x90bc20 <line:210:5, col:21> 'UINT32':'unsigned int' '='
|   | |-DeclRefExpr 0x90bb70 <col:5> 'UINT32':'unsigned int' lvalue Var 0x90b8e0 'intSave' 'UINT32':'unsigned int'
|   | `-BinaryOperator 0x90bc00 <col:15, col:21> 'unsigned int' '&'
|   |   |-ImplicitCastExpr 0x90bbd0 <col:15> 'UINT32':'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x90bb90 <col:15> 'UINT32':'unsigned int' lvalue Var 0x90b7c0 'ier' 'UINT32':'unsigned int'
|   |   `-ImplicitCastExpr 0x90bbe8 <col:21> 'UINT32':'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x90bbb0 <col:21> 'UINT32':'unsigned int' lvalue Var 0x90b850 'intenable' 'UINT32':'unsigned int'
|   `-ReturnStmt 0x90bf00 <line:212:5, col:38>
|     `-ImplicitCastExpr 0x90bee8 <col:13, col:38> 'UINT32':'unsigned int' <IntegralCast>
|       `-BinaryOperator 0x90bec8 <col:13, col:38> 'int' '-'
|         |-CallExpr 0x90be50 <col:13, col:34> 'int'
|         | |-ImplicitCastExpr 0x90be38 <col:13> 'int (*)(int)' <BuiltinFnToFnPtr>
|         | | `-DeclRefExpr 0x90bdd0 <col:13> '<builtin fn type>' Function 0x90bc40 '__builtin_ffs' 'int (int)'
|         | `-ImplicitCastExpr 0x90be90 <col:27> 'int' <IntegralCast>
|         |   `-ImplicitCastExpr 0x90be78 <col:27> 'UINT32':'unsigned int' <LValueToRValue>
|         |     `-DeclRefExpr 0x90bdf0 <col:27> 'UINT32':'unsigned int' lvalue Var 0x90b8e0 'intSave' 'UINT32':'unsigned int'
|         `-IntegerLiteral 0x90bea8 <col:38> 'int' 1
|-FunctionDecl 0x90bc40 <col:13> col:13 implicit used __builtin_ffs 'int (int)' extern
| |-ParmVarDecl 0x90bce0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x90bd50 <col:13> Implicit
| `-ConstAttr 0x90bda8 <col:13> Implicit
|-FunctionDecl 0x90bff8 <main/los_compiler.h:158:22, main/los_interrupt.c:228:1> line:219:15 used HwiClear 'UINT32 (HWI_HANDLE_T)' static
| |-ParmVarDecl 0x90bf68 <col:24, col:37> col:37 used vector 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0x90c678 <line:220:1, line:228:1>
|   |-IfStmt 0x90c4b8 <line:221:5, line:223:5>
|   | |-UnaryOperator 0x90c138 <line:221:9, col:28> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x90c0f8 <col:10, col:28> 'UINT32':'unsigned int'
|   | |   |-ImplicitCastExpr 0x90c0e0 <col:10> 'UINT32 (*)(UINT32)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x90c0a0 <col:10> 'UINT32 (UINT32)' Function 0x906988 'HwiNumValid' 'UINT32 (UINT32)'
|   | |   `-ImplicitCastExpr 0x90c120 <col:22> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x90c0c0 <col:22> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x90bf68 'vector' 'HWI_HANDLE_T':'unsigned int'
|   | `-CompoundStmt 0x90c4a0 <col:31, line:223:5>
|   |   `-ReturnStmt 0x90c490 <line:222:9, main/los_error.h:89:87>
|   |     `-ParenExpr 0x90c470 <col:13, col:87> 'unsigned int'
|   |       `-BinaryOperator 0x90c450 <line:69:61, line:89:86> 'unsigned int' '|'
|   |         |-BinaryOperator 0x90c3d8 <line:69:61, line:89:76> 'unsigned int' '|'
|   |         | |-BinaryOperator 0x90c2c0 <line:69:61, line:51:80> 'unsigned int' '|'
|   |         | | |-ParenExpr 0x90c1e8 <line:69:61, col:80> 'UINT32':'unsigned int'
|   |         | | | `-BinaryOperator 0x90c1c8 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | | |   |-CStyleCastExpr 0x90c180 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | | |   | `-IntegerLiteral 0x90c150 <col:70> 'int' 2
|   |         | | |   `-IntegerLiteral 0x90c1a8 <col:78> 'int' 24
|   |         | | `-ParenExpr 0x90c2a0 <line:51:61, col:80> 'UINT32':'unsigned int'
|   |         | |   `-BinaryOperator 0x90c280 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | |     |-CStyleCastExpr 0x90c238 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | |     | `-IntegerLiteral 0x90c208 <col:70> 'int' 0
|   |         | |     `-IntegerLiteral 0x90c260 <col:78> 'int' 16
|   |         | `-ParenExpr 0x90c3b8 <line:89:52, col:76> 'UINT32':'unsigned int'
|   |         |   `-BinaryOperator 0x90c398 <col:53, col:75> 'UINT32':'unsigned int' '<<'
|   |         |     |-CStyleCastExpr 0x90c350 <col:53, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         |     | `-ParenExpr 0x90c330 <col:61, col:70> 'int'
|   |         |     |   `-DeclRefExpr 0x90c2e0 <main/los_arch_interrupt.h:130:66> 'int' EnumConstant 0x8a7bc0 'LOS_MOD_HWI' 'int'
|   |         |     `-IntegerLiteral 0x90c378 <main/los_error.h:89:75> 'int' 8
|   |         `-ImplicitCastExpr 0x90c438 <col:80, col:86> 'unsigned int' <IntegralCast>
|   |           `-ParenExpr 0x90c418 <col:80, col:86> 'int'
|   |             `-IntegerLiteral 0x90c3f8 <main/los_arch_interrupt.h:130:79> 'int' 0
|   |-GCCAsmStmt 0x90c5d8 <main/los_interrupt.c:225:5, col:77>
|   | `-BinaryOperator 0x90c5b8 <col:62, col:70> 'unsigned int' '<<'
|   |   |-IntegerLiteral 0x90c560 <col:62> 'unsigned int' 1
|   |   `-ImplicitCastExpr 0x90c5a0 <col:70> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x90c580 <col:70> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x90bf68 'vector' 'HWI_HANDLE_T':'unsigned int'
|   `-ReturnStmt 0x90c668 <line:227:5, main/los_compiler.h:350:23>
|     `-IntegerLiteral 0x90c648 <col:23> 'unsigned int' 0
|-VarDecl 0x90c6b0 prev 0x783780 <main/los_interrupt.c:230:1, line:236:1> line:230:18 used g_archHwiOps 'HwiControllerOps':'HwiControllerOps' cinit
| `-InitListExpr 0x90c9e0 <col:33, line:236:1> 'HwiControllerOps':'HwiControllerOps'
|   |-ImplicitCastExpr 0x90ca78 <line:231:23> 'UINT32 (*)(HWI_HANDLE_T)' <FunctionToPointerDecay>
|   | `-DeclRefExpr 0x90c718 <col:23> 'UINT32 (HWI_HANDLE_T)' Function 0x908bd8 'HwiPending' 'UINT32 (HWI_HANDLE_T)'
|   |-ImplicitCastExpr 0x90cb00 <line:235:23> 'UINT32 (*)(HWI_HANDLE_T)' <FunctionToPointerDecay>
|   | `-DeclRefExpr 0x90c898 <col:23> 'UINT32 (HWI_HANDLE_T)' Function 0x90bff8 'HwiClear' 'UINT32 (HWI_HANDLE_T)'
|   |-ImplicitCastExpr 0x90ca90 <line:232:23> 'UINT32 (*)(HWI_HANDLE_T)' <FunctionToPointerDecay>
|   | `-DeclRefExpr 0x90c778 <col:23> 'UINT32 (HWI_HANDLE_T)' Function 0x90a3a8 'HwiUnmask' 'UINT32 (HWI_HANDLE_T)'
|   |-ImplicitCastExpr 0x90caa8 <line:233:23> 'UINT32 (*)(HWI_HANDLE_T)' <FunctionToPointerDecay>
|   | `-DeclRefExpr 0x90c7d8 <col:23> 'UINT32 (HWI_HANDLE_T)' Function 0x90ad78 'HwiMask' 'UINT32 (HWI_HANDLE_T)'
|   |-ImplicitValueInitExpr 0x90cb18 <<invalid sloc>> 'UINT32 (*)(HWI_HANDLE_T, UINT8)'
|   `-ImplicitCastExpr 0x90cae8 <line:234:23> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|     `-DeclRefExpr 0x90c838 <col:23> 'UINT32 (void)' Function 0x90b710 'HwiNumGet' 'UINT32 (void)'
|-FunctionDecl 0x90cbc0 prev 0x783a30 <main/los_compiler.h:126:23, main/los_interrupt.c:241:1> line:238:15 ArchIsIntActive 'UINT32 (void)' inline
| `-CompoundStmt 0x90cd38 <line:239:1, line:241:1>
|   `-ReturnStmt 0x90cd28 <line:240:5, col:27>
|     `-ImplicitCastExpr 0x90cd10 <col:12, col:27> 'UINT32':'unsigned int' <IntegralCast>
|       `-ParenExpr 0x90ccf0 <col:12, col:27> 'int'
|         `-BinaryOperator 0x90ccd0 <col:13, col:26> 'int' '>'
|           |-ImplicitCastExpr 0x90cca0 <col:13> 'UINT32':'unsigned int' <LValueToRValue>
|           | `-DeclRefExpr 0x90cc60 <col:13> 'UINT32':'unsigned int' lvalue Var 0x8fc728 'g_intCount' 'UINT32':'unsigned int'
|           `-ImplicitCastExpr 0x90ccb8 <col:26> 'unsigned int' <IntegralCast>
|             `-IntegerLiteral 0x90cc80 <col:26> 'int' 0
|-FunctionDecl 0x90cde8 prev 0x87e758 <main/los_compiler.h:327:23, main/los_interrupt.c:254:1> line:250:6 used HalHwiDefaultHandler 'void (void)'
| `-CompoundStmt 0x90d920 <line:251:1, line:254:1>
|   |-DoStmt 0x90d8b8 <main/los_debug.h:134:49, line:138:11>
|   | |-CompoundStmt 0x90d880 <line:134:52, line:137:54>
|   | | `-IfStmt 0x90d868 <line:135:5, line:137:5>
|   | |   |-UnaryOperator 0x90cff8 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x90cfd0 <col:10, col:31> 'INT32':'int'
|   | |   |   |-ImplicitCastExpr 0x90cfb8 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x90ce88 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   | |   |   `-ParenExpr 0x90cf68 <line:92:29, col:50> 'int'
|   | |   |     `-BinaryOperator 0x90cf48 <line:90:29, line:92:49> 'int' '+'
|   | |   |       |-ParenExpr 0x90cf08 <line:90:29, col:47> 'int'
|   | |   |       | `-BinaryOperator 0x90cee8 <line:88:29, line:90:46> 'int' '+'
|   | |   |       |   |-IntegerLiteral 0x90cea8 <line:88:29> 'int' 0
|   | |   |       |   `-IntegerLiteral 0x90cec8 <line:90:46> 'int' 1
|   | |   |       `-IntegerLiteral 0x90cf28 <line:92:49> 'int' 1
|   | |   `-CompoundStmt 0x90d850 <line:135:34, line:137:5>
|   | |     `-CallExpr 0x90d200 <line:136:9, col:27> 'int'
|   | |       |-ImplicitCastExpr 0x90d1e8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x90d010 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   | |       |-ImplicitCastExpr 0x90d820 <main/los_interrupt.c:252:15> 'const char *' <NoOp>
|   | |       | `-ImplicitCastExpr 0x90d238 <col:15> 'char *' <ArrayToPointerDecay>
|   | |       |   `-StringLiteral 0x90d068 <col:15> 'char [14]' lvalue "%s irqnum:%u\n"
|   | |       |-ImplicitCastExpr 0x90d838 <col:33> 'const char *' <ArrayToPointerDecay>
|   | |       | `-PredefinedExpr 0x90d138 <col:33> 'const char [21]' lvalue __FUNCTION__
|   | |       |   `-StringLiteral 0x90d108 <col:33> 'const char [21]' lvalue "HalHwiDefaultHandler"
|   | |       `-CallExpr 0x90d188 <col:47, col:57> 'UINT32':'unsigned int'
|   | |         `-ImplicitCastExpr 0x90d170 <col:47> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   | |           `-DeclRefExpr 0x90d150 <col:47> 'UINT32 (void)' Function 0x90b710 'HwiNumGet' 'UINT32 (void)'
|   | `-IntegerLiteral 0x90d898 <main/los_debug.h:138:10> 'int' 0
|   `-WhileStmt 0x90d908 <main/los_interrupt.c:253:5, col:16>
|     |-IntegerLiteral 0x90d8d8 <col:12> 'int' 1
|     `-CompoundStmt 0x90d8f8 <col:15, col:16>
|-FunctionDecl 0x90d9e0 <main/los_compiler.h:138:23, main/los_interrupt.c:260:1> line:256:11 used HalPreInterruptHandler 'void (UINT32)'
| |-ParmVarDecl 0x90d950 <col:34, col:41> col:41 used arg 'UINT32':'unsigned int'
| |-CompoundStmt 0x90db60 <line:257:1, line:260:1>
| | |-CStyleCastExpr 0x90db28 <line:258:5, col:11> 'void' <ToVoid>
| | | `-ImplicitCastExpr 0x90db10 <col:11> 'UINT32':'unsigned int' <LValueToRValue> part_of_explicit_cast
| | |   `-DeclRefExpr 0x90dae0 <col:11> 'UINT32':'unsigned int' lvalue ParmVar 0x90d950 'arg' 'UINT32':'unsigned int'
| | `-ReturnStmt 0x90db50 <line:259:5>
| `-WeakAttr 0x90da88 <main/los_compiler.h:138:38>
|-FunctionDecl 0x90dc20 <col:23, main/los_interrupt.c:266:1> line:262:11 used HalAftInterruptHandler 'void (UINT32)'
| |-ParmVarDecl 0x90db90 <col:34, col:41> col:41 used arg 'UINT32':'unsigned int'
| |-CompoundStmt 0x90dda0 <line:263:1, line:266:1>
| | |-CStyleCastExpr 0x90dd68 <line:264:5, col:11> 'void' <ToVoid>
| | | `-ImplicitCastExpr 0x90dd50 <col:11> 'UINT32':'unsigned int' <LValueToRValue> part_of_explicit_cast
| | |   `-DeclRefExpr 0x90dd20 <col:11> 'UINT32':'unsigned int' lvalue ParmVar 0x90db90 'arg' 'UINT32':'unsigned int'
| | `-ReturnStmt 0x90dd90 <line:265:5>
| `-WeakAttr 0x90dcc8 <main/los_compiler.h:138:38>
|-FunctionDecl 0x90de58 prev 0x87e620 <line:327:23, main/los_interrupt.c:309:1> line:275:6 used HalInterrupt 'void (void)'
| `-CompoundStmt 0x90e7d8 <line:276:1, line:309:1>
|   |-DeclStmt 0x90df70 <line:277:5, col:20>
|   | `-VarDecl 0x90df08 <col:5, col:12> col:12 used hwiIndex 'UINT32':'unsigned int'
|   |-DeclStmt 0x90e000 <line:278:5, col:19>
|   | `-VarDecl 0x90df98 <col:5, col:12> col:12 used intSave 'UINT32':'unsigned int'
|   |-BinaryOperator 0x90e090 <line:280:5, col:27> 'UINT32':'unsigned int' '='
|   | |-DeclRefExpr 0x90e018 <col:5> 'UINT32':'unsigned int' lvalue Var 0x90df98 'intSave' 'UINT32':'unsigned int'
|   | `-CallExpr 0x90e070 <main/los_interrupt.h:92:21, main/los_interrupt.c:280:27> 'UINT32':'unsigned int'
|   |   `-ImplicitCastExpr 0x90e058 <main/los_interrupt.h:92:21> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x90e038 <col:21> 'UINT32 (void)' Function 0x906ce8 'ArchIntLock' 'UINT32 (void)'
|   |-UnaryOperator 0x90e0d0 <main/los_interrupt.c:281:5, col:15> 'UINT32':'unsigned int' postfix '++'
|   | `-DeclRefExpr 0x90e0b0 <col:5> 'UINT32':'unsigned int' lvalue Var 0x8fc728 'g_intCount' 'UINT32':'unsigned int'
|   |-CallExpr 0x90e170 <main/los_interrupt.h:96:24, main/los_interrupt.c:282:27> 'void'
|   | |-ImplicitCastExpr 0x90e158 <main/los_interrupt.h:96:24> 'void (*)(UINT32)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x90e0e8 <col:24> 'void (UINT32)' Function 0x908220 'ArchIntRestore' 'void (UINT32)'
|   | `-ImplicitCastExpr 0x90e198 <main/los_interrupt.c:282:20> 'UINT32':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x90e108 <col:20> 'UINT32':'unsigned int' lvalue Var 0x90df98 'intSave' 'UINT32':'unsigned int'
|   |-BinaryOperator 0x90e228 <line:284:5, col:26> 'UINT32':'unsigned int' '='
|   | |-DeclRefExpr 0x90e1b0 <col:5> 'UINT32':'unsigned int' lvalue Var 0x90df08 'hwiIndex' 'UINT32':'unsigned int'
|   | `-CallExpr 0x90e208 <col:16, col:26> 'UINT32':'unsigned int'
|   |   `-ImplicitCastExpr 0x90e1f0 <col:16> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x90e1d0 <col:16> 'UINT32 (void)' Function 0x90b710 'HwiNumGet' 'UINT32 (void)'
|   |-CallExpr 0x90e2a0 <line:285:5, col:22> 'UINT32':'unsigned int'
|   | |-ImplicitCastExpr 0x90e288 <col:5> 'UINT32 (*)(HWI_HANDLE_T)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x90e248 <col:5> 'UINT32 (HWI_HANDLE_T)' Function 0x90bff8 'HwiClear' 'UINT32 (HWI_HANDLE_T)'
|   | `-ImplicitCastExpr 0x90e2c8 <col:14> 'UINT32':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x90e268 <col:14> 'UINT32':'unsigned int' lvalue Var 0x90df08 'hwiIndex' 'UINT32':'unsigned int'
|   |-NullStmt 0x90e2e0 <line:287:50>
|   |-CallExpr 0x90e340 <line:289:5, col:36> 'void'
|   | |-ImplicitCastExpr 0x90e328 <col:5> 'void (*)(UINT32)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x90e2e8 <col:5> 'void (UINT32)' Function 0x90d9e0 'HalPreInterruptHandler' 'void (UINT32)'
|   | `-ImplicitCastExpr 0x90e368 <col:28> 'UINT32':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x90e308 <col:28> 'UINT32':'unsigned int' lvalue Var 0x90df08 'hwiIndex' 'UINT32':'unsigned int'
|   |-IfStmt 0x90e560 <line:296:5, line:298:5>
|   | |-BinaryOperator 0x90e460 <line:296:9, col:39> 'int' '!='
|   | | |-ImplicitCastExpr 0x90e430 <col:9, col:34> 'HWI_PROC_FUNC':'void (*)(void)' <LValueToRValue>
|   | | | `-ArraySubscriptExpr 0x90e3f0 <col:9, col:34> 'HWI_PROC_FUNC':'void (*)(void)' lvalue
|   | | |   |-ImplicitCastExpr 0x90e3c0 <col:9> 'HWI_PROC_FUNC *' <ArrayToPointerDecay>
|   | | |   | `-DeclRefExpr 0x90e380 <col:9> 'HWI_PROC_FUNC [32]' lvalue Var 0x8fcb98 'g_hwiHandlerForm' 'HWI_PROC_FUNC [32]'
|   | | |   `-ImplicitCastExpr 0x90e3d8 <col:26> 'UINT32':'unsigned int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x90e3a0 <col:26> 'UINT32':'unsigned int' lvalue Var 0x90df08 'hwiIndex' 'UINT32':'unsigned int'
|   | | `-ImplicitCastExpr 0x90e448 <col:39> 'HWI_PROC_FUNC':'void (*)(void)' <NullToPointer>
|   | |   `-IntegerLiteral 0x90e410 <col:39> 'int' 0
|   | `-CompoundStmt 0x90e548 <col:42, line:298:5>
|   |   `-CallExpr 0x90e528 <line:297:9, col:36> 'void'
|   |     `-ImplicitCastExpr 0x90e510 <col:9, col:34> 'HWI_PROC_FUNC':'void (*)(void)' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x90e4f0 <col:9, col:34> 'HWI_PROC_FUNC':'void (*)(void)' lvalue
|   |         |-ImplicitCastExpr 0x90e4c0 <col:9> 'HWI_PROC_FUNC *' <ArrayToPointerDecay>
|   |         | `-DeclRefExpr 0x90e480 <col:9> 'HWI_PROC_FUNC [32]' lvalue Var 0x8fcb98 'g_hwiHandlerForm' 'HWI_PROC_FUNC [32]'
|   |         `-ImplicitCastExpr 0x90e4d8 <col:26> 'UINT32':'unsigned int' <LValueToRValue>
|   |           `-DeclRefExpr 0x90e4a0 <col:26> 'UINT32':'unsigned int' lvalue Var 0x90df08 'hwiIndex' 'UINT32':'unsigned int'
|   |-CallExpr 0x90e5d0 <line:301:5, col:36> 'void'
|   | |-ImplicitCastExpr 0x90e5b8 <col:5> 'void (*)(UINT32)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x90e578 <col:5> 'void (UINT32)' Function 0x90dc20 'HalAftInterruptHandler' 'void (UINT32)'
|   | `-ImplicitCastExpr 0x90e5f8 <col:28> 'UINT32':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x90e598 <col:28> 'UINT32':'unsigned int' lvalue Var 0x90df08 'hwiIndex' 'UINT32':'unsigned int'
|   |-NullStmt 0x90e610 <line:303:49>
|   |-BinaryOperator 0x90e690 <line:305:5, col:27> 'UINT32':'unsigned int' '='
|   | |-DeclRefExpr 0x90e618 <col:5> 'UINT32':'unsigned int' lvalue Var 0x90df98 'intSave' 'UINT32':'unsigned int'
|   | `-CallExpr 0x90e670 <main/los_interrupt.h:92:21, main/los_interrupt.c:305:27> 'UINT32':'unsigned int'
|   |   `-ImplicitCastExpr 0x90e658 <main/los_interrupt.h:92:21> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x90e638 <col:21> 'UINT32 (void)' Function 0x906ce8 'ArchIntLock' 'UINT32 (void)'
|   |-UnaryOperator 0x90e6d0 <main/los_interrupt.c:306:5, col:15> 'UINT32':'unsigned int' postfix '--'
|   | `-DeclRefExpr 0x90e6b0 <col:5> 'UINT32':'unsigned int' lvalue Var 0x8fc728 'g_intCount' 'UINT32':'unsigned int'
|   |-CallExpr 0x90e740 <main/los_interrupt.h:96:24, main/los_interrupt.c:307:27> 'void'
|   | |-ImplicitCastExpr 0x90e728 <main/los_interrupt.h:96:24> 'void (*)(UINT32)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x90e6e8 <col:24> 'void (UINT32)' Function 0x908220 'ArchIntRestore' 'void (UINT32)'
|   | `-ImplicitCastExpr 0x90e768 <main/los_interrupt.c:307:20> 'UINT32':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x90e708 <col:20> 'UINT32':'unsigned int' lvalue Var 0x90df98 'intSave' 'UINT32':'unsigned int'
|   `-CallExpr 0x90e7b8 <line:308:5, col:29> 'void'
|     `-ImplicitCastExpr 0x90e7a0 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
|       `-DeclRefExpr 0x90e780 <col:5> 'void (void)' Function 0x8792d0 'HalIrqEndCheckNeedSched' 'void (void)'
|-FunctionDecl 0x90eb08 prev 0x7870c8 <line:322:1, line:363:1> line:322:8 ArchHwiCreate 'UINT32 (HWI_HANDLE_T, HWI_PRIOR_T, HWI_MODE_T, HWI_PROC_FUNC, HwiIrqParam *)'
| |-ParmVarDecl 0x90e878 <col:22, col:35> col:35 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0x90e8f0 <line:323:22, col:34> col:34 used hwiPrio 'HWI_PRIOR_T':'unsigned short'
| |-ParmVarDecl 0x90e968 <line:324:22, col:33> col:33 used hwiMode 'HWI_MODE_T':'unsigned short'
| |-ParmVarDecl 0x90e9e0 <line:325:22, col:36> col:36 used hwiHandler 'HWI_PROC_FUNC':'void (*)(void)'
| |-ParmVarDecl 0x90ea58 <line:326:22, col:35> col:35 used irqParam 'HwiIrqParam *'
| `-CompoundStmt 0x910230 <line:327:1, line:363:1>
|   |-CStyleCastExpr 0x90ec18 <line:328:5, col:11> 'void' <ToVoid>
|   | `-ImplicitCastExpr 0x90ec00 <col:11> 'HWI_MODE_T':'unsigned short' <LValueToRValue> part_of_explicit_cast
|   |   `-DeclRefExpr 0x90ebd0 <col:11> 'HWI_MODE_T':'unsigned short' lvalue ParmVar 0x90e968 'hwiMode' 'HWI_MODE_T':'unsigned short'
|   |-DeclStmt 0x90ecb8 <line:329:5, col:19>
|   | `-VarDecl 0x90ec50 <col:5, col:12> col:12 used intSave 'UINT32':'unsigned int'
|   |-IfStmt 0x90f128 <line:331:5, line:333:5>
|   | |-BinaryOperator 0x90eda0 <line:331:9, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'int' '=='
|   | | |-ImplicitCastExpr 0x90ed70 <main/los_interrupt.c:331:9> 'HWI_PROC_FUNC':'void (*)(void)' <LValueToRValue>
|   | | | `-DeclRefExpr 0x90ecd0 <col:9> 'HWI_PROC_FUNC':'void (*)(void)' lvalue ParmVar 0x90e9e0 'hwiHandler' 'HWI_PROC_FUNC':'void (*)(void)'
|   | | `-ImplicitCastExpr 0x90ed88 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:16, col:25> 'HWI_PROC_FUNC':'void (*)(void)' <BitCast>
|   | |   `-ParenExpr 0x90ed50 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x90ed28 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x90ecf0 <col:24> 'int' 0
|   | `-CompoundStmt 0x90f110 <main/los_interrupt.c:331:29, line:333:5>
|   |   `-ReturnStmt 0x90f100 <line:332:9, main/los_error.h:89:87>
|   |     `-ParenExpr 0x90f0e0 <col:13, col:87> 'unsigned int'
|   |       `-BinaryOperator 0x90f0c0 <line:69:61, line:89:86> 'unsigned int' '|'
|   |         |-BinaryOperator 0x90f048 <line:69:61, line:89:76> 'unsigned int' '|'
|   |         | |-BinaryOperator 0x90ef30 <line:69:61, line:51:80> 'unsigned int' '|'
|   |         | | |-ParenExpr 0x90ee58 <line:69:61, col:80> 'UINT32':'unsigned int'
|   |         | | | `-BinaryOperator 0x90ee38 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | | |   |-CStyleCastExpr 0x90edf0 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | | |   | `-IntegerLiteral 0x90edc0 <col:70> 'int' 2
|   |         | | |   `-IntegerLiteral 0x90ee18 <col:78> 'int' 24
|   |         | | `-ParenExpr 0x90ef10 <line:51:61, col:80> 'UINT32':'unsigned int'
|   |         | |   `-BinaryOperator 0x90eef0 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | |     |-CStyleCastExpr 0x90eea8 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | |     | `-IntegerLiteral 0x90ee78 <col:70> 'int' 0
|   |         | |     `-IntegerLiteral 0x90eed0 <col:78> 'int' 16
|   |         | `-ParenExpr 0x90f028 <line:89:52, col:76> 'UINT32':'unsigned int'
|   |         |   `-BinaryOperator 0x90f008 <col:53, col:75> 'UINT32':'unsigned int' '<<'
|   |         |     |-CStyleCastExpr 0x90efc0 <col:53, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         |     | `-ParenExpr 0x90efa0 <col:61, col:70> 'int'
|   |         |     |   `-DeclRefExpr 0x90ef50 <main/los_arch_interrupt.h:140:66> 'int' EnumConstant 0x8a7bc0 'LOS_MOD_HWI' 'int'
|   |         |     `-IntegerLiteral 0x90efe8 <main/los_error.h:89:75> 'int' 8
|   |         `-ImplicitCastExpr 0x90f0a8 <col:80, col:86> 'unsigned int' <IntegralCast>
|   |           `-ParenExpr 0x90f088 <col:80, col:86> 'int'
|   |             `-IntegerLiteral 0x90f068 <main/los_arch_interrupt.h:140:79> 'int' 1
|   |-IfStmt 0x90f538 <main/los_interrupt.c:335:5, line:337:5>
|   | |-BinaryOperator 0x90f1b0 <line:335:9, main/target_config.h:65:61> 'int' '>='
|   | | |-ImplicitCastExpr 0x90f180 <main/los_interrupt.c:335:9> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x90f140 <col:9> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x90e878 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|   | | `-ImplicitCastExpr 0x90f198 <main/target_config.h:65:61> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x90f160 <col:61> 'int' 32
|   | `-CompoundStmt 0x90f520 <main/los_interrupt.c:335:35, line:337:5>
|   |   `-ReturnStmt 0x90f510 <line:336:9, main/los_error.h:89:87>
|   |     `-ParenExpr 0x90f4f0 <col:13, col:87> 'unsigned int'
|   |       `-BinaryOperator 0x90f4d0 <line:69:61, line:89:86> 'unsigned int' '|'
|   |         |-BinaryOperator 0x90f458 <line:69:61, line:89:76> 'unsigned int' '|'
|   |         | |-BinaryOperator 0x90f340 <line:69:61, line:51:80> 'unsigned int' '|'
|   |         | | |-ParenExpr 0x90f268 <line:69:61, col:80> 'UINT32':'unsigned int'
|   |         | | | `-BinaryOperator 0x90f248 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | | |   |-CStyleCastExpr 0x90f200 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | | |   | `-IntegerLiteral 0x90f1d0 <col:70> 'int' 2
|   |         | | |   `-IntegerLiteral 0x90f228 <col:78> 'int' 24
|   |         | | `-ParenExpr 0x90f320 <line:51:61, col:80> 'UINT32':'unsigned int'
|   |         | |   `-BinaryOperator 0x90f300 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | |     |-CStyleCastExpr 0x90f2b8 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | |     | `-IntegerLiteral 0x90f288 <col:70> 'int' 0
|   |         | |     `-IntegerLiteral 0x90f2e0 <col:78> 'int' 16
|   |         | `-ParenExpr 0x90f438 <line:89:52, col:76> 'UINT32':'unsigned int'
|   |         |   `-BinaryOperator 0x90f418 <col:53, col:75> 'UINT32':'unsigned int' '<<'
|   |         |     |-CStyleCastExpr 0x90f3d0 <col:53, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         |     | `-ParenExpr 0x90f3b0 <col:61, col:70> 'int'
|   |         |     |   `-DeclRefExpr 0x90f360 <main/los_arch_interrupt.h:130:66> 'int' EnumConstant 0x8a7bc0 'LOS_MOD_HWI' 'int'
|   |         |     `-IntegerLiteral 0x90f3f8 <main/los_error.h:89:75> 'int' 8
|   |         `-ImplicitCastExpr 0x90f4b8 <col:80, col:86> 'unsigned int' <IntegralCast>
|   |           `-ParenExpr 0x90f498 <col:80, col:86> 'int'
|   |             `-IntegerLiteral 0x90f478 <main/los_arch_interrupt.h:130:79> 'int' 0
|   |-IfStmt 0x90fa68 <main/los_interrupt.c:339:5, line:341:5>
|   | |-BinaryOperator 0x90f6c0 <line:339:9, col:65> 'int' '!='
|   | | |-ImplicitCastExpr 0x90f6a8 <col:9, col:45> 'HWI_PROC_FUNC':'void (*)(void)' <LValueToRValue>
|   | | | `-ArraySubscriptExpr 0x90f618 <col:9, col:45> 'HWI_PROC_FUNC':'void (*)(void)' lvalue
|   | | |   |-ImplicitCastExpr 0x90f600 <col:9> 'HWI_PROC_FUNC *' <ArrayToPointerDecay>
|   | | |   | `-DeclRefExpr 0x90f550 <col:9> 'HWI_PROC_FUNC [32]' lvalue Var 0x8fc918 'g_hwiForm' 'HWI_PROC_FUNC [32]'
|   | | |   `-BinaryOperator 0x90f5e0 <col:19, main/los_arch_interrupt.h:114:47> 'unsigned int' '+'
|   | | |     |-ImplicitCastExpr 0x90f5b0 <main/los_interrupt.c:339:19> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x90f570 <col:19> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x90e878 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|   | | |     `-ImplicitCastExpr 0x90f5c8 <main/los_arch_interrupt.h:114:47> 'unsigned int' <IntegralCast>
|   | | |       `-IntegerLiteral 0x90f590 <col:47> 'int' 0
|   | | `-CStyleCastExpr 0x90f680 <main/los_interrupt.c:339:50, col:65> 'HWI_PROC_FUNC':'void (*)(void)' <NoOp>
|   | |   `-ImplicitCastExpr 0x90f668 <col:65> 'void (*)(void)' <FunctionToPointerDecay> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x90f638 <col:65> 'void (void)' Function 0x90cde8 'HalHwiDefaultHandler' 'void (void)'
|   | `-CompoundStmt 0x90fa50 <col:87, line:341:5>
|   |   `-ReturnStmt 0x90fa40 <line:340:9, main/los_error.h:89:87>
|   |     `-ParenExpr 0x90fa20 <col:13, col:87> 'unsigned int'
|   |       `-BinaryOperator 0x90fa00 <line:69:61, line:89:86> 'unsigned int' '|'
|   |         |-BinaryOperator 0x90f988 <line:69:61, line:89:76> 'unsigned int' '|'
|   |         | |-BinaryOperator 0x90f870 <line:69:61, line:51:80> 'unsigned int' '|'
|   |         | | |-ParenExpr 0x90f778 <line:69:61, col:80> 'UINT32':'unsigned int'
|   |         | | | `-BinaryOperator 0x90f758 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | | |   |-CStyleCastExpr 0x90f710 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | | |   | `-IntegerLiteral 0x90f6e0 <col:70> 'int' 2
|   |         | | |   `-IntegerLiteral 0x90f738 <col:78> 'int' 24
|   |         | | `-ParenExpr 0x90f850 <line:51:61, col:80> 'UINT32':'unsigned int'
|   |         | |   `-BinaryOperator 0x90f830 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | |     |-CStyleCastExpr 0x90f7c8 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | |     | `-IntegerLiteral 0x90f798 <col:70> 'int' 0
|   |         | |     `-IntegerLiteral 0x90f7f0 <col:78> 'int' 16
|   |         | `-ParenExpr 0x90f968 <line:89:52, col:76> 'UINT32':'unsigned int'
|   |         |   `-BinaryOperator 0x90f948 <col:53, col:75> 'UINT32':'unsigned int' '<<'
|   |         |     |-CStyleCastExpr 0x90f900 <col:53, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         |     | `-ParenExpr 0x90f8e0 <col:61, col:70> 'int'
|   |         |     |   `-DeclRefExpr 0x90f890 <main/los_arch_interrupt.h:170:66> 'int' EnumConstant 0x8a7bc0 'LOS_MOD_HWI' 'int'
|   |         |     `-IntegerLiteral 0x90f928 <main/los_error.h:89:75> 'int' 8
|   |         `-ImplicitCastExpr 0x90f9e8 <col:80, col:86> 'unsigned int' <IntegralCast>
|   |           `-ParenExpr 0x90f9c8 <col:80, col:86> 'int'
|   |             `-IntegerLiteral 0x90f9a8 <main/los_arch_interrupt.h:170:79> 'int' 4
|   |-IfStmt 0x90fe78 <main/los_interrupt.c:343:5, line:345:5>
|   | |-BinaryOperator 0x90faf0 <line:343:9, main/los_arch_interrupt.h:91:47> 'int' '>'
|   | | |-ImplicitCastExpr 0x90fad8 <main/los_interrupt.c:343:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x90fac0 <col:9> 'HWI_PRIOR_T':'unsigned short' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x90fa80 <col:9> 'HWI_PRIOR_T':'unsigned short' lvalue ParmVar 0x90e8f0 'hwiPrio' 'HWI_PRIOR_T':'unsigned short'
|   | | `-IntegerLiteral 0x90faa0 <main/los_arch_interrupt.h:91:47> 'int' 7
|   | `-CompoundStmt 0x90fe60 <main/los_interrupt.c:343:39, line:345:5>
|   |   `-ReturnStmt 0x90fe50 <line:344:9, main/los_error.h:89:87>
|   |     `-ParenExpr 0x90fe30 <col:13, col:87> 'unsigned int'
|   |       `-BinaryOperator 0x90fe10 <line:69:61, line:89:86> 'unsigned int' '|'
|   |         |-BinaryOperator 0x90fd98 <line:69:61, line:89:76> 'unsigned int' '|'
|   |         | |-BinaryOperator 0x90fc80 <line:69:61, line:51:80> 'unsigned int' '|'
|   |         | | |-ParenExpr 0x90fba8 <line:69:61, col:80> 'UINT32':'unsigned int'
|   |         | | | `-BinaryOperator 0x90fb88 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | | |   |-CStyleCastExpr 0x90fb40 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | | |   | `-IntegerLiteral 0x90fb10 <col:70> 'int' 2
|   |         | | |   `-IntegerLiteral 0x90fb68 <col:78> 'int' 24
|   |         | | `-ParenExpr 0x90fc60 <line:51:61, col:80> 'UINT32':'unsigned int'
|   |         | |   `-BinaryOperator 0x90fc40 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | |     |-CStyleCastExpr 0x90fbf8 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | |     | `-IntegerLiteral 0x90fbc8 <col:70> 'int' 0
|   |         | |     `-IntegerLiteral 0x90fc20 <col:78> 'int' 16
|   |         | `-ParenExpr 0x90fd78 <line:89:52, col:76> 'UINT32':'unsigned int'
|   |         |   `-BinaryOperator 0x90fd58 <col:53, col:75> 'UINT32':'unsigned int' '<<'
|   |         |     |-CStyleCastExpr 0x90fd10 <col:53, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         |     | `-ParenExpr 0x90fcf0 <col:61, col:70> 'int'
|   |         |     |   `-DeclRefExpr 0x90fca0 <main/los_arch_interrupt.h:180:66> 'int' EnumConstant 0x8a7bc0 'LOS_MOD_HWI' 'int'
|   |         |     `-IntegerLiteral 0x90fd38 <main/los_error.h:89:75> 'int' 8
|   |         `-ImplicitCastExpr 0x90fdf8 <col:80, col:86> 'unsigned int' <IntegralCast>
|   |           `-ParenExpr 0x90fdd8 <col:80, col:86> 'int'
|   |             `-IntegerLiteral 0x90fdb8 <main/los_arch_interrupt.h:180:79> 'int' 5
|   |-BinaryOperator 0x90ff08 <main/los_interrupt.c:347:5, col:27> 'UINT32':'unsigned int' '='
|   | |-DeclRefExpr 0x90fe90 <col:5> 'UINT32':'unsigned int' lvalue Var 0x90ec50 'intSave' 'UINT32':'unsigned int'
|   | `-CallExpr 0x90fee8 <main/los_interrupt.h:92:21, main/los_interrupt.c:347:27> 'UINT32':'unsigned int'
|   |   `-ImplicitCastExpr 0x90fed0 <main/los_interrupt.h:92:21> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x90feb0 <col:21> 'UINT32 (void)' Function 0x906ce8 'ArchIntLock' 'UINT32 (void)'
|   |-CStyleCastExpr 0x90ff70 <main/los_interrupt.c:355:5, col:11> 'void' <ToVoid>
|   | `-ImplicitCastExpr 0x90ff58 <col:11> 'HwiIrqParam *' <LValueToRValue> part_of_explicit_cast
|   |   `-DeclRefExpr 0x90ff28 <col:11> 'HwiIrqParam *' lvalue ParmVar 0x90ea58 'irqParam' 'HwiIrqParam *'
|   |-CallExpr 0x910070 <line:356:5, col:35> 'void'
|   | |-ImplicitCastExpr 0x910058 <col:5> 'void (*)(UINT32, HWI_PROC_FUNC)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x90ff98 <col:5> 'void (UINT32, HWI_PROC_FUNC)' Function 0x9063d8 'OsSetVector' 'void (UINT32, HWI_PROC_FUNC)'
|   | |-ImplicitCastExpr 0x9100a0 <col:17> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|   | | `-DeclRefExpr 0x90ffb8 <col:17> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x90e878 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|   | `-ImplicitCastExpr 0x9100b8 <col:25> 'HWI_PROC_FUNC':'void (*)(void)' <LValueToRValue>
|   |   `-DeclRefExpr 0x90ffd8 <col:25> 'HWI_PROC_FUNC':'void (*)(void)' lvalue ParmVar 0x90e9e0 'hwiHandler' 'HWI_PROC_FUNC':'void (*)(void)'
|   |-CallExpr 0x910128 <line:358:5, col:21> 'UINT32':'unsigned int'
|   | |-ImplicitCastExpr 0x910110 <col:5> 'UINT32 (*)(HWI_HANDLE_T)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x9100d0 <col:5> 'UINT32 (HWI_HANDLE_T)' Function 0x90a3a8 'HwiUnmask' 'UINT32 (HWI_HANDLE_T)'
|   | `-ImplicitCastExpr 0x910150 <col:15> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x9100f0 <col:15> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x90e878 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|   |-CallExpr 0x9101c0 <main/los_interrupt.h:96:24, main/los_interrupt.c:360:27> 'void'
|   | |-ImplicitCastExpr 0x9101a8 <main/los_interrupt.h:96:24> 'void (*)(UINT32)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x910168 <col:24> 'void (UINT32)' Function 0x908220 'ArchIntRestore' 'void (UINT32)'
|   | `-ImplicitCastExpr 0x9101e8 <main/los_interrupt.c:360:20> 'UINT32':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x910188 <col:20> 'UINT32':'unsigned int' lvalue Var 0x90ec50 'intSave' 'UINT32':'unsigned int'
|   `-ReturnStmt 0x910220 <line:362:5, main/los_compiler.h:350:23>
|     `-IntegerLiteral 0x910200 <col:23> 'unsigned int' 0
|-FunctionDecl 0x9103c0 prev 0x786c38 <main/los_interrupt.c:373:23, line:391:1> line:373:30 ArchHwiDelete 'UINT32 (HWI_HANDLE_T, HwiIrqParam *)'
| |-ParmVarDecl 0x9102b0 <col:44, col:57> col:57 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0x910328 <col:65, col:78> col:78 used irqParam 'HwiIrqParam *'
| `-CompoundStmt 0x910cf0 <line:374:1, line:391:1>
|   |-CStyleCastExpr 0x9104b8 <line:375:5, col:11> 'void' <ToVoid>
|   | `-ImplicitCastExpr 0x9104a0 <col:11> 'HwiIrqParam *' <LValueToRValue> part_of_explicit_cast
|   |   `-DeclRefExpr 0x910470 <col:11> 'HwiIrqParam *' lvalue ParmVar 0x910328 'irqParam' 'HwiIrqParam *'
|   |-DeclStmt 0x910558 <line:376:5, col:19>
|   | `-VarDecl 0x9104f0 <col:5, col:12> col:12 used intSave 'UINT32':'unsigned int'
|   |-IfStmt 0x910968 <line:378:5, line:380:5>
|   | |-BinaryOperator 0x9105e0 <line:378:9, main/target_config.h:65:61> 'int' '>='
|   | | |-ImplicitCastExpr 0x9105b0 <main/los_interrupt.c:378:9> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x910570 <col:9> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x9102b0 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|   | | `-ImplicitCastExpr 0x9105c8 <main/target_config.h:65:61> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x910590 <col:61> 'int' 32
|   | `-CompoundStmt 0x910950 <main/los_interrupt.c:378:35, line:380:5>
|   |   `-ReturnStmt 0x910940 <line:379:9, main/los_error.h:89:87>
|   |     `-ParenExpr 0x910920 <col:13, col:87> 'unsigned int'
|   |       `-BinaryOperator 0x910900 <line:69:61, line:89:86> 'unsigned int' '|'
|   |         |-BinaryOperator 0x910888 <line:69:61, line:89:76> 'unsigned int' '|'
|   |         | |-BinaryOperator 0x910770 <line:69:61, line:51:80> 'unsigned int' '|'
|   |         | | |-ParenExpr 0x910698 <line:69:61, col:80> 'UINT32':'unsigned int'
|   |         | | | `-BinaryOperator 0x910678 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | | |   |-CStyleCastExpr 0x910630 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | | |   | `-IntegerLiteral 0x910600 <col:70> 'int' 2
|   |         | | |   `-IntegerLiteral 0x910658 <col:78> 'int' 24
|   |         | | `-ParenExpr 0x910750 <line:51:61, col:80> 'UINT32':'unsigned int'
|   |         | |   `-BinaryOperator 0x910730 <col:62, col:78> 'UINT32':'unsigned int' '<<'
|   |         | |     |-CStyleCastExpr 0x9106e8 <col:62, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         | |     | `-IntegerLiteral 0x9106b8 <col:70> 'int' 0
|   |         | |     `-IntegerLiteral 0x910710 <col:78> 'int' 16
|   |         | `-ParenExpr 0x910868 <line:89:52, col:76> 'UINT32':'unsigned int'
|   |         |   `-BinaryOperator 0x910848 <col:53, col:75> 'UINT32':'unsigned int' '<<'
|   |         |     |-CStyleCastExpr 0x910800 <col:53, col:70> 'UINT32':'unsigned int' <IntegralCast>
|   |         |     | `-ParenExpr 0x9107e0 <col:61, col:70> 'int'
|   |         |     |   `-DeclRefExpr 0x910790 <main/los_arch_interrupt.h:130:66> 'int' EnumConstant 0x8a7bc0 'LOS_MOD_HWI' 'int'
|   |         |     `-IntegerLiteral 0x910828 <main/los_error.h:89:75> 'int' 8
|   |         `-ImplicitCastExpr 0x9108e8 <col:80, col:86> 'unsigned int' <IntegralCast>
|   |           `-ParenExpr 0x9108c8 <col:80, col:86> 'int'
|   |             `-IntegerLiteral 0x9108a8 <main/los_arch_interrupt.h:130:79> 'int' 0
|   |-CallExpr 0x9109d8 <main/los_interrupt.c:382:5, col:19> 'UINT32':'unsigned int'
|   | |-ImplicitCastExpr 0x9109c0 <col:5> 'UINT32 (*)(HWI_HANDLE_T)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x910980 <col:5> 'UINT32 (HWI_HANDLE_T)' Function 0x90ad78 'HwiMask' 'UINT32 (HWI_HANDLE_T)'
|   | `-ImplicitCastExpr 0x910a00 <col:13> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x9109a0 <col:13> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x9102b0 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|   |-BinaryOperator 0x910a90 <line:384:5, col:27> 'UINT32':'unsigned int' '='
|   | |-DeclRefExpr 0x910a18 <col:5> 'UINT32':'unsigned int' lvalue Var 0x9104f0 'intSave' 'UINT32':'unsigned int'
|   | `-CallExpr 0x910a70 <main/los_interrupt.h:92:21, main/los_interrupt.c:384:27> 'UINT32':'unsigned int'
|   |   `-ImplicitCastExpr 0x910a58 <main/los_interrupt.h:92:21> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x910a38 <col:21> 'UINT32 (void)' Function 0x906ce8 'ArchIntLock' 'UINT32 (void)'
|   |-BinaryOperator 0x910c08 <main/los_interrupt.c:386:5, col:60> 'HWI_PROC_FUNC':'void (*)(void)' '='
|   | |-ArraySubscriptExpr 0x910b78 <col:5, col:41> 'HWI_PROC_FUNC':'void (*)(void)' lvalue
|   | | |-ImplicitCastExpr 0x910b60 <col:5> 'HWI_PROC_FUNC *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x910ab0 <col:5> 'HWI_PROC_FUNC [32]' lvalue Var 0x8fc918 'g_hwiForm' 'HWI_PROC_FUNC [32]'
|   | | `-BinaryOperator 0x910b40 <col:15, main/los_arch_interrupt.h:114:47> 'unsigned int' '+'
|   | |   |-ImplicitCastExpr 0x910b10 <main/los_interrupt.c:386:15> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x910ad0 <col:15> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0x9102b0 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|   | |   `-ImplicitCastExpr 0x910b28 <main/los_arch_interrupt.h:114:47> 'unsigned int' <IntegralCast>
|   | |     `-IntegerLiteral 0x910af0 <col:47> 'int' 0
|   | `-CStyleCastExpr 0x910be0 <main/los_interrupt.c:386:45, col:60> 'HWI_PROC_FUNC':'void (*)(void)' <NoOp>
|   |   `-ImplicitCastExpr 0x910bc8 <col:60> 'void (*)(void)' <FunctionToPointerDecay> part_of_explicit_cast
|   |     `-DeclRefExpr 0x910b98 <col:60> 'void (void)' Function 0x90cde8 'HalHwiDefaultHandler' 'void (void)'
|   |-CallExpr 0x910c80 <main/los_interrupt.h:96:24, main/los_interrupt.c:388:27> 'void'
|   | |-ImplicitCastExpr 0x910c68 <main/los_interrupt.h:96:24> 'void (*)(UINT32)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x910c28 <col:24> 'void (UINT32)' Function 0x908220 'ArchIntRestore' 'void (UINT32)'
|   | `-ImplicitCastExpr 0x910ca8 <main/los_interrupt.c:388:20> 'UINT32':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x910c48 <col:20> 'UINT32':'unsigned int' lvalue Var 0x9104f0 'intSave' 'UINT32':'unsigned int'
|   `-ReturnStmt 0x910ce0 <line:390:5, main/los_compiler.h:350:23>
|     `-IntegerLiteral 0x910cc0 <col:23> 'unsigned int' 0
|-VarDecl 0x910d50 prev 0x8811a0 <main/los_interrupt.c:393:1, col:23> col:9 used g_excInfo 'ExcInfo':'struct TagExcInfo' cinit
| `-InitListExpr 0x910e30 <col:21, col:23> 'ExcInfo':'struct TagExcInfo'
|   |-ImplicitCastExpr 0x910ea8 <col:22> 'UINT16':'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x910db8 <col:22> 'int' 0
|   |-ImplicitValueInitExpr 0x910ec0 <<invalid sloc>> 'UINT16':'unsigned short'
|   |-ImplicitValueInitExpr 0x910ed0 <<invalid sloc>> 'UINT32':'unsigned int'
|   |-ImplicitValueInitExpr 0x910ee0 <<invalid sloc>> 'UINT32':'unsigned int'
|   |-ImplicitValueInitExpr 0x910ef0 <<invalid sloc>> 'UINT16':'unsigned short'
|   |-ImplicitValueInitExpr 0x910f00 <<invalid sloc>> 'UINT16':'unsigned short'
|   `-ImplicitValueInitExpr 0x910f10 <<invalid sloc>> 'EXC_CONTEXT_S *'
|-FunctionDecl 0x911078 <main/los_compiler.h:158:22, main/los_interrupt.c:405:1> line:397:13 used OsExcTypeInfo 'void (const ExcInfo *)' static
| |-ParmVarDecl 0x910f88 <col:27, col:42> col:42 used excInfo 'const ExcInfo *'
| `-CompoundStmt 0x9122b8 <line:398:1, line:405:1>
|   |-DeclStmt 0x911458 <line:399:5, col:68>
|   | `-VarDecl 0x911198 <col:5, col:67> col:11 used phaseStr 'CHAR *[3]' cinit
|   |   `-InitListExpr 0x911318 <col:24, col:67> 'CHAR *[3]'
|   |     |-ImplicitCastExpr 0x911358 <col:25> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x911200 <col:25> 'char [12]' lvalue "exc in init"
|   |     |-ImplicitCastExpr 0x911378 <col:40> 'char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x911228 <col:40> 'char [12]' lvalue "exc in task"
|   |     `-ImplicitCastExpr 0x9113a0 <col:55> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x911288 <col:55> 'char [11]' lvalue "exc in hwi"
|   |-DoStmt 0x911740 <main/los_debug.h:134:49, line:138:11>
|   | |-CompoundStmt 0x911708 <line:134:52, line:137:54>
|   | | `-IfStmt 0x9116f0 <line:135:5, line:137:5>
|   | |   |-UnaryOperator 0x911550 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x911528 <col:10, col:31> 'INT32':'int'
|   | |   |   |-ImplicitCastExpr 0x911510 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x911470 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   | |   |   `-ParenExpr 0x9114f0 <line:90:29, col:47> 'int'
|   | |   |     `-BinaryOperator 0x9114d0 <line:88:29, line:90:46> 'int' '+'
|   | |   |       |-IntegerLiteral 0x911490 <line:88:29> 'int' 0
|   | |   |       `-IntegerLiteral 0x9114b0 <line:90:46> 'int' 1
|   | |   `-CompoundStmt 0x9116d8 <line:135:34, line:137:5>
|   | |     `-CallExpr 0x911648 <line:136:9, col:27> 'int'
|   | |       |-ImplicitCastExpr 0x911630 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x911568 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   | |       |-ImplicitCastExpr 0x911690 <main/los_interrupt.c:401:12> 'const char *' <NoOp>
|   | |       | `-ImplicitCastExpr 0x911678 <col:12> 'char *' <ArrayToPointerDecay>
|   | |       |   `-StringLiteral 0x911588 <col:12> 'char [16]' lvalue "Type      = %d\n"
|   | |       `-ImplicitCastExpr 0x9116c0 <col:32, col:41> 'int' <IntegralCast>
|   | |         `-ImplicitCastExpr 0x9116a8 <col:32, col:41> 'UINT16':'unsigned short' <LValueToRValue>
|   | |           `-MemberExpr 0x9115e8 <col:32, col:41> 'const UINT16':'const unsigned short' lvalue ->type 0x880e00
|   | |             `-ImplicitCastExpr 0x9115d0 <col:32> 'const ExcInfo *' <LValueToRValue>
|   | |               `-DeclRefExpr 0x9115b0 <col:32> 'const ExcInfo *' lvalue ParmVar 0x910f88 'excInfo' 'const ExcInfo *'
|   | `-IntegerLiteral 0x911720 <main/los_debug.h:138:10> 'int' 0
|   |-DoStmt 0x911c40 <line:134:49, line:138:11>
|   | |-CompoundStmt 0x911c08 <line:134:52, line:137:54>
|   | | `-IfStmt 0x911bf0 <line:135:5, line:137:5>
|   | |   |-UnaryOperator 0x911a68 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x911a40 <col:10, col:31> 'INT32':'int'
|   | |   |   |-ImplicitCastExpr 0x911800 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x911760 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   | |   |   `-ParenExpr 0x9117e0 <line:90:29, col:47> 'int'
|   | |   |     `-BinaryOperator 0x9117c0 <line:88:29, line:90:46> 'int' '+'
|   | |   |       |-IntegerLiteral 0x911780 <line:88:29> 'int' 0
|   | |   |       `-IntegerLiteral 0x9117a0 <line:90:46> 'int' 1
|   | |   `-CompoundStmt 0x911bd8 <line:135:34, line:137:5>
|   | |     `-CallExpr 0x911b60 <line:136:9, col:27> 'int'
|   | |       |-ImplicitCastExpr 0x911b48 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x911a80 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   | |       |-ImplicitCastExpr 0x911ba8 <main/los_interrupt.c:402:12> 'const char *' <NoOp>
|   | |       | `-ImplicitCastExpr 0x911b90 <col:12> 'char *' <ArrayToPointerDecay>
|   | |       |   `-StringLiteral 0x911aa0 <col:12> 'char [16]' lvalue "ThrdPid   = %d\n"
|   | |       `-ImplicitCastExpr 0x911bc0 <col:32, col:41> 'UINT32':'unsigned int' <LValueToRValue>
|   | |         `-MemberExpr 0x911b00 <col:32, col:41> 'const UINT32':'const unsigned int' lvalue ->thrdPid 0x880ec0
|   | |           `-ImplicitCastExpr 0x911ae8 <col:32> 'const ExcInfo *' <LValueToRValue>
|   | |             `-DeclRefExpr 0x911ac8 <col:32> 'const ExcInfo *' lvalue ParmVar 0x910f88 'excInfo' 'const ExcInfo *'
|   | `-IntegerLiteral 0x911c20 <main/los_debug.h:138:10> 'int' 0
|   |-DoStmt 0x911fb8 <line:134:49, line:138:11>
|   | |-CompoundStmt 0x911f80 <line:134:52, line:137:54>
|   | | `-IfStmt 0x911f68 <line:135:5, line:137:5>
|   | |   |-UnaryOperator 0x911d40 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x911d18 <col:10, col:31> 'INT32':'int'
|   | |   |   |-ImplicitCastExpr 0x911d00 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x911c60 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   | |   |   `-ParenExpr 0x911ce0 <line:90:29, col:47> 'int'
|   | |   |     `-BinaryOperator 0x911cc0 <line:88:29, line:90:46> 'int' '+'
|   | |   |       |-IntegerLiteral 0x911c80 <line:88:29> 'int' 0
|   | |   |       `-IntegerLiteral 0x911ca0 <line:90:46> 'int' 1
|   | |   `-CompoundStmt 0x911f50 <line:135:34, line:137:5>
|   | |     `-CallExpr 0x911ed8 <line:136:9, col:27> 'int'
|   | |       |-ImplicitCastExpr 0x911ec0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x911d58 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   | |       |-ImplicitCastExpr 0x911f20 <main/los_interrupt.c:403:12> 'const char *' <NoOp>
|   | |       | `-ImplicitCastExpr 0x911f08 <col:12> 'char *' <ArrayToPointerDecay>
|   | |       |   `-StringLiteral 0x911d78 <col:12> 'char [16]' lvalue "Phase     = %s\n"
|   | |       `-ImplicitCastExpr 0x911f38 <col:32, col:55> 'CHAR *' <LValueToRValue>
|   | |         `-ArraySubscriptExpr 0x911e88 <col:32, col:55> 'CHAR *' lvalue
|   | |           |-ImplicitCastExpr 0x911e58 <col:32> 'CHAR **' <ArrayToPointerDecay>
|   | |           | `-DeclRefExpr 0x911da0 <col:32> 'CHAR *[3]' lvalue Var 0x911198 'phaseStr' 'CHAR *[3]'
|   | |           `-ImplicitCastExpr 0x911e70 <col:41, col:50> 'UINT16':'unsigned short' <LValueToRValue>
|   | |             `-MemberExpr 0x911df8 <col:41, col:50> 'const UINT16':'const unsigned short' lvalue ->phase 0x880da0
|   | |               `-ImplicitCastExpr 0x911de0 <col:41> 'const ExcInfo *' <LValueToRValue>
|   | |                 `-DeclRefExpr 0x911dc0 <col:41> 'const ExcInfo *' lvalue ParmVar 0x910f88 'excInfo' 'const ExcInfo *'
|   | `-IntegerLiteral 0x911f98 <main/los_debug.h:138:10> 'int' 0
|   `-DoStmt 0x912298 <line:134:49, line:138:11>
|     |-CompoundStmt 0x912260 <line:134:52, line:137:54>
|     | `-IfStmt 0x912248 <line:135:5, line:137:5>
|     |   |-UnaryOperator 0x9120b8 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|     |   | `-CallExpr 0x912090 <col:10, col:31> 'INT32':'int'
|     |   |   |-ImplicitCastExpr 0x912078 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x911fd8 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|     |   |   `-ParenExpr 0x912058 <line:90:29, col:47> 'int'
|     |   |     `-BinaryOperator 0x912038 <line:88:29, line:90:46> 'int' '+'
|     |   |       |-IntegerLiteral 0x911ff8 <line:88:29> 'int' 0
|     |   |       `-IntegerLiteral 0x912018 <line:90:46> 'int' 1
|     |   `-CompoundStmt 0x912230 <line:135:34, line:137:5>
|     |     `-CallExpr 0x9121b8 <line:136:9, col:27> 'int'
|     |       |-ImplicitCastExpr 0x9121a0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|     |       | `-DeclRefExpr 0x9120d0 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|     |       |-ImplicitCastExpr 0x912200 <main/los_interrupt.c:404:12> 'const char *' <NoOp>
|     |       | `-ImplicitCastExpr 0x9121e8 <col:12> 'char *' <ArrayToPointerDecay>
|     |       |   `-StringLiteral 0x9120f0 <col:12> 'char [18]' lvalue "FaultAddr = 0x%x\n"
|     |       `-ImplicitCastExpr 0x912218 <col:34, col:43> 'UINT32':'unsigned int' <LValueToRValue>
|     |         `-MemberExpr 0x912158 <col:34, col:43> 'const UINT32':'const unsigned int' lvalue ->faultAddr 0x880e60
|     |           `-ImplicitCastExpr 0x912140 <col:34> 'const ExcInfo *' <LValueToRValue>
|     |             `-DeclRefExpr 0x912120 <col:34> 'const ExcInfo *' lvalue ParmVar 0x910f88 'excInfo' 'const ExcInfo *'
|     `-IntegerLiteral 0x912278 <main/los_debug.h:138:10> 'int' 0
|-FunctionDecl 0x912390 <main/los_compiler.h:158:22, main/los_interrupt.c:422:1> line:407:13 used OsExcCurTaskInfo 'void (const ExcInfo *)' static
| |-ParmVarDecl 0x912300 <col:30, col:45> col:45 used excInfo 'const ExcInfo *'
| `-CompoundStmt 0x914b40 <line:408:1, line:422:1>
|   |-DoStmt 0x912670 <main/los_debug.h:134:49, line:138:11>
|   | |-CompoundStmt 0x912638 <line:134:52, line:137:54>
|   | | `-IfStmt 0x912620 <line:135:5, line:137:5>
|   | |   |-UnaryOperator 0x912518 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x9124f0 <col:10, col:31> 'INT32':'int'
|   | |   |   |-ImplicitCastExpr 0x9124d8 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x912438 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   | |   |   `-ParenExpr 0x9124b8 <line:90:29, col:47> 'int'
|   | |   |     `-BinaryOperator 0x912498 <line:88:29, line:90:46> 'int' '+'
|   | |   |       |-IntegerLiteral 0x912458 <line:88:29> 'int' 0
|   | |   |       `-IntegerLiteral 0x912478 <line:90:46> 'int' 1
|   | |   `-CompoundStmt 0x912608 <line:135:34, line:137:5>
|   | |     `-CallExpr 0x9125b0 <line:136:9, col:27> 'int'
|   | |       |-ImplicitCastExpr 0x912598 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x912530 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   | |       `-ImplicitCastExpr 0x9125f0 <main/los_interrupt.c:409:12> 'const char *' <NoOp>
|   | |         `-ImplicitCastExpr 0x9125d8 <col:12> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x912550 <col:12> 'char [20]' lvalue "Current task info:\n"
|   | `-IntegerLiteral 0x912650 <main/los_debug.h:138:10> 'int' 0
|   `-IfStmt 0x914b18 <main/los_interrupt.c:410:5, line:421:5> has_else
|     |-BinaryOperator 0x912748 <line:410:9, main/los_arch_interrupt.h:95:47> 'int' '=='
|     | |-ImplicitCastExpr 0x912730 <main/los_interrupt.c:410:9, col:18> 'int' <IntegralCast>
|     | | `-ImplicitCastExpr 0x912718 <col:9, col:18> 'UINT16':'unsigned short' <LValueToRValue>
|     | |   `-MemberExpr 0x9126c8 <col:9, col:18> 'const UINT16':'const unsigned short' lvalue ->phase 0x880da0
|     | |     `-ImplicitCastExpr 0x9126b0 <col:9> 'const ExcInfo *' <LValueToRValue>
|     | |       `-DeclRefExpr 0x912690 <col:9> 'const ExcInfo *' lvalue ParmVar 0x912300 'excInfo' 'const ExcInfo *'
|     | `-IntegerLiteral 0x9126f8 <main/los_arch_interrupt.h:95:47> 'int' 1
|     |-CompoundStmt 0x9137c8 <main/los_interrupt.c:410:43, line:417:5>
|     | |-DeclStmt 0x912928 <line:411:9, col:64>
|     | | `-VarDecl 0x912778 <col:9, main/los_task.h:1457:97> main/los_interrupt.c:411:20 used taskCB 'LosTaskCB *' cinit
|     | |   `-ParenExpr 0x912908 <main/los_task.h:1457:57, col:97> 'LosTaskCB *'
|     | |     `-BinaryOperator 0x9128e8 <col:58, col:96> 'LosTaskCB *' '+'
|     | |       |-ParenExpr 0x912850 <col:58, col:85> 'LosTaskCB *'
|     | |       | `-CStyleCastExpr 0x912828 <col:59, col:72> 'LosTaskCB *' <NoOp>
|     | |       |   `-ImplicitCastExpr 0x912810 <col:72> 'LosTaskCB *' <LValueToRValue> part_of_explicit_cast
|     | |       |     `-DeclRefExpr 0x9127e0 <col:72> 'LosTaskCB *' lvalue Var 0x8cc648 'g_taskCBArray' 'LosTaskCB *'
|     | |       `-ParenExpr 0x9128c8 <col:89, col:96> 'UINT32':'unsigned int'
|     | |         `-CallExpr 0x9128a8 <main/los_interrupt.c:411:45, col:62> 'UINT32':'unsigned int'
|     | |           `-ImplicitCastExpr 0x912890 <col:45> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|     | |             `-DeclRefExpr 0x912870 <col:45> 'UINT32 (void)' Function 0x8c4550 'LOS_CurTaskIDGet' 'UINT32 (void)'
|     | |-DoStmt 0x912bf8 <main/los_debug.h:134:49, line:138:11>
|     | | |-CompoundStmt 0x912bc0 <line:134:52, line:137:54>
|     | | | `-IfStmt 0x912ba8 <line:135:5, line:137:5>
|     | | |   |-UnaryOperator 0x912a20 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|     | | |   | `-CallExpr 0x9129f8 <col:10, col:31> 'INT32':'int'
|     | | |   |   |-ImplicitCastExpr 0x9129e0 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|     | | |   |   | `-DeclRefExpr 0x912940 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|     | | |   |   `-ParenExpr 0x9129c0 <line:90:29, col:47> 'int'
|     | | |   |     `-BinaryOperator 0x9129a0 <line:88:29, line:90:46> 'int' '+'
|     | | |   |       |-IntegerLiteral 0x912960 <line:88:29> 'int' 0
|     | | |   |       `-IntegerLiteral 0x912980 <line:90:46> 'int' 1
|     | | |   `-CompoundStmt 0x912b90 <line:135:34, line:137:5>
|     | | |     `-CallExpr 0x912b18 <line:136:9, col:27> 'int'
|     | | |       |-ImplicitCastExpr 0x912b00 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|     | | |       | `-DeclRefExpr 0x912a38 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|     | | |       |-ImplicitCastExpr 0x912b60 <main/los_interrupt.c:412:16> 'const char *' <NoOp>
|     | | |       | `-ImplicitCastExpr 0x912b48 <col:16> 'char *' <ArrayToPointerDecay>
|     | | |       |   `-StringLiteral 0x912a58 <col:16> 'char [16]' lvalue "Task name = %s\n"
|     | | |       `-ImplicitCastExpr 0x912b78 <col:36, col:44> 'CHAR *' <LValueToRValue>
|     | | |         `-MemberExpr 0x912ab8 <col:36, col:44> 'CHAR *' lvalue ->taskName 0x8c6da8
|     | | |           `-ImplicitCastExpr 0x912aa0 <col:36> 'LosTaskCB *' <LValueToRValue>
|     | | |             `-DeclRefExpr 0x912a80 <col:36> 'LosTaskCB *' lvalue Var 0x912778 'taskCB' 'LosTaskCB *'
|     | | `-IntegerLiteral 0x912bd8 <main/los_debug.h:138:10> 'int' 0
|     | |-DoStmt 0x912ed0 <line:134:49, line:138:11>
|     | | |-CompoundStmt 0x912e98 <line:134:52, line:137:54>
|     | | | `-IfStmt 0x912e80 <line:135:5, line:137:5>
|     | | |   |-UnaryOperator 0x912cf8 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|     | | |   | `-CallExpr 0x912cd0 <col:10, col:31> 'INT32':'int'
|     | | |   |   |-ImplicitCastExpr 0x912cb8 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|     | | |   |   | `-DeclRefExpr 0x912c18 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|     | | |   |   `-ParenExpr 0x912c98 <line:90:29, col:47> 'int'
|     | | |   |     `-BinaryOperator 0x912c78 <line:88:29, line:90:46> 'int' '+'
|     | | |   |       |-IntegerLiteral 0x912c38 <line:88:29> 'int' 0
|     | | |   |       `-IntegerLiteral 0x912c58 <line:90:46> 'int' 1
|     | | |   `-CompoundStmt 0x912e68 <line:135:34, line:137:5>
|     | | |     `-CallExpr 0x912df0 <line:136:9, col:27> 'int'
|     | | |       |-ImplicitCastExpr 0x912dd8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|     | | |       | `-DeclRefExpr 0x912d10 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|     | | |       |-ImplicitCastExpr 0x912e38 <main/los_interrupt.c:413:16> 'const char *' <NoOp>
|     | | |       | `-ImplicitCastExpr 0x912e20 <col:16> 'char *' <ArrayToPointerDecay>
|     | | |       |   `-StringLiteral 0x912d30 <col:16> 'char [16]' lvalue "Task ID   = %d\n"
|     | | |       `-ImplicitCastExpr 0x912e50 <col:36, col:44> 'UINT32':'unsigned int' <LValueToRValue>
|     | | |         `-MemberExpr 0x912d90 <col:36, col:44> 'UINT32':'unsigned int' lvalue ->taskID 0x8c6ad8
|     | | |           `-ImplicitCastExpr 0x912d78 <col:36> 'LosTaskCB *' <LValueToRValue>
|     | | |             `-DeclRefExpr 0x912d58 <col:36> 'LosTaskCB *' lvalue Var 0x912778 'taskCB' 'LosTaskCB *'
|     | | `-IntegerLiteral 0x912eb0 <main/los_debug.h:138:10> 'int' 0
|     | |-DoStmt 0x9131e8 <line:134:49, line:138:11>
|     | | |-CompoundStmt 0x9131b0 <line:134:52, line:137:54>
|     | | | `-IfStmt 0x913198 <line:135:5, line:137:5>
|     | | |   |-UnaryOperator 0x912fd0 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|     | | |   | `-CallExpr 0x912fa8 <col:10, col:31> 'INT32':'int'
|     | | |   |   |-ImplicitCastExpr 0x912f90 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|     | | |   |   | `-DeclRefExpr 0x912ef0 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|     | | |   |   `-ParenExpr 0x912f70 <line:90:29, col:47> 'int'
|     | | |   |     `-BinaryOperator 0x912f50 <line:88:29, line:90:46> 'int' '+'
|     | | |   |       |-IntegerLiteral 0x912f10 <line:88:29> 'int' 0
|     | | |   |       `-IntegerLiteral 0x912f30 <line:90:46> 'int' 1
|     | | |   `-CompoundStmt 0x913180 <line:135:34, line:137:5>
|     | | |     `-CallExpr 0x913120 <line:136:9, col:27> 'int'
|     | | |       |-ImplicitCastExpr 0x913108 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|     | | |       | `-DeclRefExpr 0x912fe8 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|     | | |       |-ImplicitCastExpr 0x913168 <main/los_interrupt.c:414:16> 'const char *' <NoOp>
|     | | |       | `-ImplicitCastExpr 0x913150 <col:16> 'char *' <ArrayToPointerDecay>
|     | | |       |   `-StringLiteral 0x913008 <col:16> 'char [18]' lvalue "Task SP   = 0x%x\n"
|     | | |       `-CStyleCastExpr 0x9130c8 <col:38, col:55> 'UINTPTR':'unsigned int' <PointerToIntegral>
|     | | |         `-ImplicitCastExpr 0x9130b0 <col:47, col:55> 'void *' <LValueToRValue> part_of_explicit_cast
|     | | |           `-MemberExpr 0x913070 <col:47, col:55> 'void *' lvalue ->stackPointer 0x8c66e8
|     | | |             `-ImplicitCastExpr 0x913058 <col:47> 'LosTaskCB *' <LValueToRValue>
|     | | |               `-DeclRefExpr 0x913038 <col:47> 'LosTaskCB *' lvalue Var 0x912778 'taskCB' 'LosTaskCB *'
|     | | `-IntegerLiteral 0x9131c8 <main/los_debug.h:138:10> 'int' 0
|     | |-DoStmt 0x9134c8 <line:134:49, line:138:11>
|     | | |-CompoundStmt 0x913490 <line:134:52, line:137:54>
|     | | | `-IfStmt 0x913478 <line:135:5, line:137:5>
|     | | |   |-UnaryOperator 0x9132e8 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|     | | |   | `-CallExpr 0x9132c0 <col:10, col:31> 'INT32':'int'
|     | | |   |   |-ImplicitCastExpr 0x9132a8 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|     | | |   |   | `-DeclRefExpr 0x913208 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|     | | |   |   `-ParenExpr 0x913288 <line:90:29, col:47> 'int'
|     | | |   |     `-BinaryOperator 0x913268 <line:88:29, line:90:46> 'int' '+'
|     | | |   |       |-IntegerLiteral 0x913228 <line:88:29> 'int' 0
|     | | |   |       `-IntegerLiteral 0x913248 <line:90:46> 'int' 1
|     | | |   `-CompoundStmt 0x913460 <line:135:34, line:137:5>
|     | | |     `-CallExpr 0x9133e8 <line:136:9, col:27> 'int'
|     | | |       |-ImplicitCastExpr 0x9133d0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|     | | |       | `-DeclRefExpr 0x913300 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|     | | |       |-ImplicitCastExpr 0x913430 <main/los_interrupt.c:415:16> 'const char *' <NoOp>
|     | | |       | `-ImplicitCastExpr 0x913418 <col:16> 'char *' <ArrayToPointerDecay>
|     | | |       |   `-StringLiteral 0x913320 <col:16> 'char [18]' lvalue "Task ST   = 0x%x\n"
|     | | |       `-ImplicitCastExpr 0x913448 <col:38, col:46> 'UINT32':'unsigned int' <LValueToRValue>
|     | | |         `-MemberExpr 0x913388 <col:38, col:46> 'UINT32':'unsigned int' lvalue ->topOfStack 0x8c6a48
|     | | |           `-ImplicitCastExpr 0x913370 <col:38> 'LosTaskCB *' <LValueToRValue>
|     | | |             `-DeclRefExpr 0x913350 <col:38> 'LosTaskCB *' lvalue Var 0x912778 'taskCB' 'LosTaskCB *'
|     | | `-IntegerLiteral 0x9134a8 <main/los_debug.h:138:10> 'int' 0
|     | `-DoStmt 0x9137a8 <line:134:49, line:138:11>
|     |   |-CompoundStmt 0x913770 <line:134:52, line:137:54>
|     |   | `-IfStmt 0x913758 <line:135:5, line:137:5>
|     |   |   |-UnaryOperator 0x9135c8 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|     |   |   | `-CallExpr 0x9135a0 <col:10, col:31> 'INT32':'int'
|     |   |   |   |-ImplicitCastExpr 0x913588 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|     |   |   |   | `-DeclRefExpr 0x9134e8 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|     |   |   |   `-ParenExpr 0x913568 <line:90:29, col:47> 'int'
|     |   |   |     `-BinaryOperator 0x913548 <line:88:29, line:90:46> 'int' '+'
|     |   |   |       |-IntegerLiteral 0x913508 <line:88:29> 'int' 0
|     |   |   |       `-IntegerLiteral 0x913528 <line:90:46> 'int' 1
|     |   |   `-CompoundStmt 0x913740 <line:135:34, line:137:5>
|     |   |     `-CallExpr 0x9136c8 <line:136:9, col:27> 'int'
|     |   |       |-ImplicitCastExpr 0x9136b0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|     |   |       | `-DeclRefExpr 0x9135e0 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|     |   |       |-ImplicitCastExpr 0x913710 <main/los_interrupt.c:416:16> 'const char *' <NoOp>
|     |   |       | `-ImplicitCastExpr 0x9136f8 <col:16> 'char *' <ArrayToPointerDecay>
|     |   |       |   `-StringLiteral 0x913600 <col:16> 'char [18]' lvalue "Task SS   = 0x%x\n"
|     |   |       `-ImplicitCastExpr 0x913728 <col:38, col:46> 'UINT32':'unsigned int' <LValueToRValue>
|     |   |         `-MemberExpr 0x913668 <col:38, col:46> 'UINT32':'unsigned int' lvalue ->stackSize 0x8c69b8
|     |   |           `-ImplicitCastExpr 0x913650 <col:38> 'LosTaskCB *' <LValueToRValue>
|     |   |             `-DeclRefExpr 0x913630 <col:38> 'LosTaskCB *' lvalue Var 0x912778 'taskCB' 'LosTaskCB *'
|     |   `-IntegerLiteral 0x913788 <main/los_debug.h:138:10> 'int' 0
|     `-IfStmt 0x914af0 <main/los_interrupt.c:417:12, line:421:5> has_else
|       |-BinaryOperator 0x9138c0 <line:417:16, main/los_arch_interrupt.h:96:47> 'int' '=='
|       | |-ImplicitCastExpr 0x9138a8 <main/los_interrupt.c:417:16, col:25> 'int' <IntegralCast>
|       | | `-ImplicitCastExpr 0x913890 <col:16, col:25> 'UINT16':'unsigned short' <LValueToRValue>
|       | |   `-MemberExpr 0x913840 <col:16, col:25> 'const UINT16':'const unsigned short' lvalue ->phase 0x880da0
|       | |     `-ImplicitCastExpr 0x913828 <col:16> 'const ExcInfo *' <LValueToRValue>
|       | |       `-DeclRefExpr 0x913808 <col:16> 'const ExcInfo *' lvalue ParmVar 0x912300 'excInfo' 'const ExcInfo *'
|       | `-IntegerLiteral 0x913870 <main/los_arch_interrupt.h:96:47> 'int' 2
|       |-CompoundStmt 0x914820 <main/los_interrupt.c:417:49, line:419:5>
|       | `-DoStmt 0x914800 <main/los_debug.h:134:49, line:138:11>
|       |   |-CompoundStmt 0x9147c8 <line:134:52, line:137:54>
|       |   | `-IfStmt 0x9147b0 <line:135:5, line:137:5>
|       |   |   |-UnaryOperator 0x9139c0 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|       |   |   | `-CallExpr 0x913998 <col:10, col:31> 'INT32':'int'
|       |   |   |   |-ImplicitCastExpr 0x913980 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|       |   |   |   | `-DeclRefExpr 0x9138e0 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|       |   |   |   `-ParenExpr 0x913960 <line:90:29, col:47> 'int'
|       |   |   |     `-BinaryOperator 0x913940 <line:88:29, line:90:46> 'int' '+'
|       |   |   |       |-IntegerLiteral 0x913900 <line:88:29> 'int' 0
|       |   |   |       `-IntegerLiteral 0x913920 <line:90:46> 'int' 1
|       |   |   `-CompoundStmt 0x914798 <line:135:34, line:137:5>
|       |   |     `-CallExpr 0x914740 <line:136:9, col:27> 'int'
|       |   |       |-ImplicitCastExpr 0x914728 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x9139d8 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|       |   |       `-ImplicitCastExpr 0x914780 <main/los_interrupt.c:418:16> 'const char *' <NoOp>
|       |   |         `-ImplicitCastExpr 0x914768 <col:16> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x9146d0 <col:16> 'char [37]' lvalue "Exception occur in interrupt phase!\n"
|       |   `-IntegerLiteral 0x9147e0 <main/los_debug.h:138:10> 'int' 0
|       `-CompoundStmt 0x914ad8 <main/los_interrupt.c:419:12, line:421:5>
|         `-DoStmt 0x914ab8 <main/los_debug.h:134:49, line:138:11>
|           |-CompoundStmt 0x914a80 <line:134:52, line:137:54>
|           | `-IfStmt 0x914a68 <line:135:5, line:137:5>
|           |   |-UnaryOperator 0x914918 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|           |   | `-CallExpr 0x9148f0 <col:10, col:31> 'INT32':'int'
|           |   |   |-ImplicitCastExpr 0x9148d8 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|           |   |   | `-DeclRefExpr 0x914838 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|           |   |   `-ParenExpr 0x9148b8 <line:90:29, col:47> 'int'
|           |   |     `-BinaryOperator 0x914898 <line:88:29, line:90:46> 'int' '+'
|           |   |       |-IntegerLiteral 0x914858 <line:88:29> 'int' 0
|           |   |       `-IntegerLiteral 0x914878 <line:90:46> 'int' 1
|           |   `-CompoundStmt 0x914a50 <line:135:34, line:137:5>
|           |     `-CallExpr 0x9149f8 <line:136:9, col:27> 'int'
|           |       |-ImplicitCastExpr 0x9149e0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|           |       | `-DeclRefExpr 0x914930 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|           |       `-ImplicitCastExpr 0x914a38 <main/los_interrupt.c:420:16> 'const char *' <NoOp>
|           |         `-ImplicitCastExpr 0x914a20 <col:16> 'char *' <ArrayToPointerDecay>
|           |           `-StringLiteral 0x914988 <col:16> 'char [39]' lvalue "Exception occur in system init phase!\n"
|           `-IntegerLiteral 0x914a98 <main/los_debug.h:138:10> 'int' 0
|-FunctionDecl 0x914c00 <main/los_compiler.h:158:22, main/los_interrupt.c:439:1> line:424:13 used OsExcRegInfo 'void (const ExcInfo *)' static
| |-ParmVarDecl 0x914b70 <col:26, col:41> col:41 used excInfo 'const ExcInfo *'
| `-CompoundStmt 0x805008 <line:425:1, line:439:1>
|   |-DeclStmt 0x914d20 <line:426:5, col:16>
|   | `-VarDecl 0x914cb8 <col:5, col:11> col:11 used index 'INT32':'int'
|   |-DoStmt 0x914f70 <main/los_debug.h:134:49, line:138:11>
|   | |-CompoundStmt 0x914f38 <line:134:52, line:137:54>
|   | | `-IfStmt 0x914f20 <line:135:5, line:137:5>
|   | |   |-UnaryOperator 0x914e18 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x914df0 <col:10, col:31> 'INT32':'int'
|   | |   |   |-ImplicitCastExpr 0x914dd8 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x914d38 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   | |   |   `-ParenExpr 0x914db8 <line:90:29, col:47> 'int'
|   | |   |     `-BinaryOperator 0x914d98 <line:88:29, line:90:46> 'int' '+'
|   | |   |       |-IntegerLiteral 0x914d58 <line:88:29> 'int' 0
|   | |   |       `-IntegerLiteral 0x914d78 <line:90:46> 'int' 1
|   | |   `-CompoundStmt 0x914f08 <line:135:34, line:137:5>
|   | |     `-CallExpr 0x914eb0 <line:136:9, col:27> 'int'
|   | |       |-ImplicitCastExpr 0x914e98 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x914e30 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   | |       `-ImplicitCastExpr 0x914ef0 <main/los_interrupt.c:427:12> 'const char *' <NoOp>
|   | |         `-ImplicitCastExpr 0x914ed8 <col:12> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x914e50 <col:12> 'char [21]' lvalue "Exception reg dump:\n"
|   | `-IntegerLiteral 0x914f50 <main/los_debug.h:138:10> 'int' 0
|   |-DoStmt 0x915298 <line:134:49, line:138:11>
|   | |-CompoundStmt 0x915260 <line:134:52, line:137:54>
|   | | `-IfStmt 0x915248 <line:135:5, line:137:5>
|   | |   |-UnaryOperator 0x915070 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x915048 <col:10, col:31> 'INT32':'int'
|   | |   |   |-ImplicitCastExpr 0x915030 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x914f90 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   | |   |   `-ParenExpr 0x915010 <line:90:29, col:47> 'int'
|   | |   |     `-BinaryOperator 0x914ff0 <line:88:29, line:90:46> 'int' '+'
|   | |   |       |-IntegerLiteral 0x914fb0 <line:88:29> 'int' 0
|   | |   |       `-IntegerLiteral 0x914fd0 <line:90:46> 'int' 1
|   | |   `-CompoundStmt 0x915230 <line:135:34, line:137:5>
|   | |     `-CallExpr 0x9151b8 <line:136:9, col:27> 'int'
|   | |       |-ImplicitCastExpr 0x9151a0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x915088 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   | |       |-ImplicitCastExpr 0x915200 <main/los_interrupt.c:428:12> 'const char *' <NoOp>
|   | |       | `-ImplicitCastExpr 0x9151e8 <col:12> 'char *' <ArrayToPointerDecay>
|   | |       |   `-StringLiteral 0x9150a8 <col:12> 'char [21]' lvalue "sar          = 0x%x\n"
|   | |       `-ImplicitCastExpr 0x915218 <col:37, col:55> 'UINT32':'unsigned int' <LValueToRValue>
|   | |         `-MemberExpr 0x915158 <col:37, col:55> 'UINT32':'unsigned int' lvalue ->sar 0x87dc90
|   | |           `-ImplicitCastExpr 0x915140 <col:37, col:46> 'EXC_CONTEXT_S *' <LValueToRValue>
|   | |             `-MemberExpr 0x915110 <col:37, col:46> 'EXC_CONTEXT_S *const' lvalue ->context 0x880fe0
|   | |               `-ImplicitCastExpr 0x9150f8 <col:37> 'const ExcInfo *' <LValueToRValue>
|   | |                 `-DeclRefExpr 0x9150d8 <col:37> 'const ExcInfo *' lvalue ParmVar 0x914b70 'excInfo' 'const ExcInfo *'
|   | `-IntegerLiteral 0x915278 <main/los_debug.h:138:10> 'int' 0
|   |-DoStmt 0x9155c0 <line:134:49, line:138:11>
|   | |-CompoundStmt 0x915588 <line:134:52, line:137:54>
|   | | `-IfStmt 0x915570 <line:135:5, line:137:5>
|   | |   |-UnaryOperator 0x915398 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x915370 <col:10, col:31> 'INT32':'int'
|   | |   |   |-ImplicitCastExpr 0x915358 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x9152b8 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   | |   |   `-ParenExpr 0x915338 <line:90:29, col:47> 'int'
|   | |   |     `-BinaryOperator 0x915318 <line:88:29, line:90:46> 'int' '+'
|   | |   |       |-IntegerLiteral 0x9152d8 <line:88:29> 'int' 0
|   | |   |       `-IntegerLiteral 0x9152f8 <line:90:46> 'int' 1
|   | |   `-CompoundStmt 0x915558 <line:135:34, line:137:5>
|   | |     `-CallExpr 0x9154e0 <line:136:9, col:27> 'int'
|   | |       |-ImplicitCastExpr 0x9154c8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x9153b0 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   | |       |-ImplicitCastExpr 0x915528 <main/los_interrupt.c:429:12> 'const char *' <NoOp>
|   | |       | `-ImplicitCastExpr 0x915510 <col:12> 'char *' <ArrayToPointerDecay>
|   | |       |   `-StringLiteral 0x9153d0 <col:12> 'char [21]' lvalue "excCause     = 0x%x\n"
|   | |       `-ImplicitCastExpr 0x915540 <col:37, col:55> 'UINT32':'unsigned int' <LValueToRValue>
|   | |         `-MemberExpr 0x915480 <col:37, col:55> 'UINT32':'unsigned int' lvalue ->excCause 0x87dcf0
|   | |           `-ImplicitCastExpr 0x915468 <col:37, col:46> 'EXC_CONTEXT_S *' <LValueToRValue>
|   | |             `-MemberExpr 0x915438 <col:37, col:46> 'EXC_CONTEXT_S *const' lvalue ->context 0x880fe0
|   | |               `-ImplicitCastExpr 0x915420 <col:37> 'const ExcInfo *' <LValueToRValue>
|   | |                 `-DeclRefExpr 0x915400 <col:37> 'const ExcInfo *' lvalue ParmVar 0x914b70 'excInfo' 'const ExcInfo *'
|   | `-IntegerLiteral 0x9155a0 <main/los_debug.h:138:10> 'int' 0
|   |-DoStmt 0x9158e8 <line:134:49, line:138:11>
|   | |-CompoundStmt 0x9158b0 <line:134:52, line:137:54>
|   | | `-IfStmt 0x915898 <line:135:5, line:137:5>
|   | |   |-UnaryOperator 0x9156c0 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x915698 <col:10, col:31> 'INT32':'int'
|   | |   |   |-ImplicitCastExpr 0x915680 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x9155e0 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   | |   |   `-ParenExpr 0x915660 <line:90:29, col:47> 'int'
|   | |   |     `-BinaryOperator 0x915640 <line:88:29, line:90:46> 'int' '+'
|   | |   |       |-IntegerLiteral 0x915600 <line:88:29> 'int' 0
|   | |   |       `-IntegerLiteral 0x915620 <line:90:46> 'int' 1
|   | |   `-CompoundStmt 0x915880 <line:135:34, line:137:5>
|   | |     `-CallExpr 0x915808 <line:136:9, col:27> 'int'
|   | |       |-ImplicitCastExpr 0x9157f0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x9156d8 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   | |       |-ImplicitCastExpr 0x915850 <main/los_interrupt.c:430:12> 'const char *' <NoOp>
|   | |       | `-ImplicitCastExpr 0x915838 <col:12> 'char *' <ArrayToPointerDecay>
|   | |       |   `-StringLiteral 0x9156f8 <col:12> 'char [21]' lvalue "excVaddr     = 0x%x\n"
|   | |       `-ImplicitCastExpr 0x915868 <col:37, col:55> 'UINT32':'unsigned int' <LValueToRValue>
|   | |         `-MemberExpr 0x9157a8 <col:37, col:55> 'UINT32':'unsigned int' lvalue ->excVaddr 0x87dd50
|   | |           `-ImplicitCastExpr 0x915790 <col:37, col:46> 'EXC_CONTEXT_S *' <LValueToRValue>
|   | |             `-MemberExpr 0x915760 <col:37, col:46> 'EXC_CONTEXT_S *const' lvalue ->context 0x880fe0
|   | |               `-ImplicitCastExpr 0x915748 <col:37> 'const ExcInfo *' <LValueToRValue>
|   | |                 `-DeclRefExpr 0x915728 <col:37> 'const ExcInfo *' lvalue ParmVar 0x914b70 'excInfo' 'const ExcInfo *'
|   | `-IntegerLiteral 0x9158c8 <main/los_debug.h:138:10> 'int' 0
|   |-DoStmt 0x915c10 <line:134:49, line:138:11>
|   | |-CompoundStmt 0x915bd8 <line:134:52, line:137:54>
|   | | `-IfStmt 0x915bc0 <line:135:5, line:137:5>
|   | |   |-UnaryOperator 0x9159e8 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x9159c0 <col:10, col:31> 'INT32':'int'
|   | |   |   |-ImplicitCastExpr 0x9159a8 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x915908 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   | |   |   `-ParenExpr 0x915988 <line:90:29, col:47> 'int'
|   | |   |     `-BinaryOperator 0x915968 <line:88:29, line:90:46> 'int' '+'
|   | |   |       |-IntegerLiteral 0x915928 <line:88:29> 'int' 0
|   | |   |       `-IntegerLiteral 0x915948 <line:90:46> 'int' 1
|   | |   `-CompoundStmt 0x915ba8 <line:135:34, line:137:5>
|   | |     `-CallExpr 0x915b30 <line:136:9, col:27> 'int'
|   | |       |-ImplicitCastExpr 0x915b18 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x915a00 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   | |       |-ImplicitCastExpr 0x915b78 <main/los_interrupt.c:431:12> 'const char *' <NoOp>
|   | |       | `-ImplicitCastExpr 0x915b60 <col:12> 'char *' <ArrayToPointerDecay>
|   | |       |   `-StringLiteral 0x915a20 <col:12> 'char [21]' lvalue "lbeg         = 0x%x\n"
|   | |       `-ImplicitCastExpr 0x915b90 <col:37, col:55> 'UINT32':'unsigned int' <LValueToRValue>
|   | |         `-MemberExpr 0x915ad0 <col:37, col:55> 'UINT32':'unsigned int' lvalue ->lbeg 0x87ddb0
|   | |           `-ImplicitCastExpr 0x915ab8 <col:37, col:46> 'EXC_CONTEXT_S *' <LValueToRValue>
|   | |             `-MemberExpr 0x915a88 <col:37, col:46> 'EXC_CONTEXT_S *const' lvalue ->context 0x880fe0
|   | |               `-ImplicitCastExpr 0x915a70 <col:37> 'const ExcInfo *' <LValueToRValue>
|   | |                 `-DeclRefExpr 0x915a50 <col:37> 'const ExcInfo *' lvalue ParmVar 0x914b70 'excInfo' 'const ExcInfo *'
|   | `-IntegerLiteral 0x915bf0 <main/los_debug.h:138:10> 'int' 0
|   |-DoStmt 0x915f38 <line:134:49, line:138:11>
|   | |-CompoundStmt 0x915f00 <line:134:52, line:137:54>
|   | | `-IfStmt 0x915ee8 <line:135:5, line:137:5>
|   | |   |-UnaryOperator 0x915d10 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x915ce8 <col:10, col:31> 'INT32':'int'
|   | |   |   |-ImplicitCastExpr 0x915cd0 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x915c30 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   | |   |   `-ParenExpr 0x915cb0 <line:90:29, col:47> 'int'
|   | |   |     `-BinaryOperator 0x915c90 <line:88:29, line:90:46> 'int' '+'
|   | |   |       |-IntegerLiteral 0x915c50 <line:88:29> 'int' 0
|   | |   |       `-IntegerLiteral 0x915c70 <line:90:46> 'int' 1
|   | |   `-CompoundStmt 0x915ed0 <line:135:34, line:137:5>
|   | |     `-CallExpr 0x915e58 <line:136:9, col:27> 'int'
|   | |       |-ImplicitCastExpr 0x915e40 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x915d28 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   | |       |-ImplicitCastExpr 0x915ea0 <main/los_interrupt.c:432:12> 'const char *' <NoOp>
|   | |       | `-ImplicitCastExpr 0x915e88 <col:12> 'char *' <ArrayToPointerDecay>
|   | |       |   `-StringLiteral 0x915d48 <col:12> 'char [21]' lvalue "lend         = 0x%x\n"
|   | |       `-ImplicitCastExpr 0x915eb8 <col:37, col:55> 'UINT32':'unsigned int' <LValueToRValue>
|   | |         `-MemberExpr 0x915df8 <col:37, col:55> 'UINT32':'unsigned int' lvalue ->lend 0x87de10
|   | |           `-ImplicitCastExpr 0x915de0 <col:37, col:46> 'EXC_CONTEXT_S *' <LValueToRValue>
|   | |             `-MemberExpr 0x915db0 <col:37, col:46> 'EXC_CONTEXT_S *const' lvalue ->context 0x880fe0
|   | |               `-ImplicitCastExpr 0x915d98 <col:37> 'const ExcInfo *' <LValueToRValue>
|   | |                 `-DeclRefExpr 0x915d78 <col:37> 'const ExcInfo *' lvalue ParmVar 0x914b70 'excInfo' 'const ExcInfo *'
|   | `-IntegerLiteral 0x915f18 <main/los_debug.h:138:10> 'int' 0
|   |-DoStmt 0x916260 <line:134:49, line:138:11>
|   | |-CompoundStmt 0x916228 <line:134:52, line:137:54>
|   | | `-IfStmt 0x916210 <line:135:5, line:137:5>
|   | |   |-UnaryOperator 0x916038 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x916010 <col:10, col:31> 'INT32':'int'
|   | |   |   |-ImplicitCastExpr 0x915ff8 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x915f58 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   | |   |   `-ParenExpr 0x915fd8 <line:90:29, col:47> 'int'
|   | |   |     `-BinaryOperator 0x915fb8 <line:88:29, line:90:46> 'int' '+'
|   | |   |       |-IntegerLiteral 0x915f78 <line:88:29> 'int' 0
|   | |   |       `-IntegerLiteral 0x915f98 <line:90:46> 'int' 1
|   | |   `-CompoundStmt 0x9161f8 <line:135:34, line:137:5>
|   | |     `-CallExpr 0x916180 <line:136:9, col:27> 'int'
|   | |       |-ImplicitCastExpr 0x916168 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x916050 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   | |       |-ImplicitCastExpr 0x9161c8 <main/los_interrupt.c:433:12> 'const char *' <NoOp>
|   | |       | `-ImplicitCastExpr 0x9161b0 <col:12> 'char *' <ArrayToPointerDecay>
|   | |       |   `-StringLiteral 0x916070 <col:12> 'char [21]' lvalue "lcount       = 0x%x\n"
|   | |       `-ImplicitCastExpr 0x9161e0 <col:37, col:55> 'UINT32':'unsigned int' <LValueToRValue>
|   | |         `-MemberExpr 0x916120 <col:37, col:55> 'UINT32':'unsigned int' lvalue ->lcount 0x87de70
|   | |           `-ImplicitCastExpr 0x916108 <col:37, col:46> 'EXC_CONTEXT_S *' <LValueToRValue>
|   | |             `-MemberExpr 0x9160d8 <col:37, col:46> 'EXC_CONTEXT_S *const' lvalue ->context 0x880fe0
|   | |               `-ImplicitCastExpr 0x9160c0 <col:37> 'const ExcInfo *' <LValueToRValue>
|   | |                 `-DeclRefExpr 0x9160a0 <col:37> 'const ExcInfo *' lvalue ParmVar 0x914b70 'excInfo' 'const ExcInfo *'
|   | `-IntegerLiteral 0x916240 <main/los_debug.h:138:10> 'int' 0
|   |-DoStmt 0x916588 <line:134:49, line:138:11>
|   | |-CompoundStmt 0x916550 <line:134:52, line:137:54>
|   | | `-IfStmt 0x916538 <line:135:5, line:137:5>
|   | |   |-UnaryOperator 0x916360 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x916338 <col:10, col:31> 'INT32':'int'
|   | |   |   |-ImplicitCastExpr 0x916320 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x916280 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   | |   |   `-ParenExpr 0x916300 <line:90:29, col:47> 'int'
|   | |   |     `-BinaryOperator 0x9162e0 <line:88:29, line:90:46> 'int' '+'
|   | |   |       |-IntegerLiteral 0x9162a0 <line:88:29> 'int' 0
|   | |   |       `-IntegerLiteral 0x9162c0 <line:90:46> 'int' 1
|   | |   `-CompoundStmt 0x916520 <line:135:34, line:137:5>
|   | |     `-CallExpr 0x9164a8 <line:136:9, col:27> 'int'
|   | |       |-ImplicitCastExpr 0x916490 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x916378 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   | |       |-ImplicitCastExpr 0x9164f0 <main/los_interrupt.c:434:12> 'const char *' <NoOp>
|   | |       | `-ImplicitCastExpr 0x9164d8 <col:12> 'char *' <ArrayToPointerDecay>
|   | |       |   `-StringLiteral 0x916398 <col:12> 'char [21]' lvalue "pc           = 0x%x\n"
|   | |       `-ImplicitCastExpr 0x916508 <col:37, col:55> 'UINT32':'unsigned int' <LValueToRValue>
|   | |         `-MemberExpr 0x916448 <col:37, col:55> 'UINT32':'unsigned int' lvalue ->pc 0x879e20
|   | |           `-ImplicitCastExpr 0x916430 <col:37, col:46> 'EXC_CONTEXT_S *' <LValueToRValue>
|   | |             `-MemberExpr 0x916400 <col:37, col:46> 'EXC_CONTEXT_S *const' lvalue ->context 0x880fe0
|   | |               `-ImplicitCastExpr 0x9163e8 <col:37> 'const ExcInfo *' <LValueToRValue>
|   | |                 `-DeclRefExpr 0x9163c8 <col:37> 'const ExcInfo *' lvalue ParmVar 0x914b70 'excInfo' 'const ExcInfo *'
|   | `-IntegerLiteral 0x916568 <main/los_debug.h:138:10> 'int' 0
|   |-DoStmt 0x804a70 <line:134:49, line:138:11>
|   | |-CompoundStmt 0x804a38 <line:134:52, line:137:54>
|   | | `-IfStmt 0x804a20 <line:135:5, line:137:5>
|   | |   |-UnaryOperator 0x916688 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x916660 <col:10, col:31> 'INT32':'int'
|   | |   |   |-ImplicitCastExpr 0x916648 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x9165a8 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   | |   |   `-ParenExpr 0x916628 <line:90:29, col:47> 'int'
|   | |   |     `-BinaryOperator 0x916608 <line:88:29, line:90:46> 'int' '+'
|   | |   |       |-IntegerLiteral 0x9165c8 <line:88:29> 'int' 0
|   | |   |       `-IntegerLiteral 0x9165e8 <line:90:46> 'int' 1
|   | |   `-CompoundStmt 0x804a08 <line:135:34, line:137:5>
|   | |     `-CallExpr 0x804990 <line:136:9, col:27> 'int'
|   | |       |-ImplicitCastExpr 0x804978 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x9166a0 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   | |       |-ImplicitCastExpr 0x8049d8 <main/los_interrupt.c:435:12> 'const char *' <NoOp>
|   | |       | `-ImplicitCastExpr 0x8049c0 <col:12> 'char *' <ArrayToPointerDecay>
|   | |       |   `-StringLiteral 0x804880 <col:12> 'char [21]' lvalue "ps           = 0x%x\n"
|   | |       `-ImplicitCastExpr 0x8049f0 <col:37, col:55> 'UINT32':'unsigned int' <LValueToRValue>
|   | |         `-MemberExpr 0x804930 <col:37, col:55> 'UINT32':'unsigned int' lvalue ->ps 0x879e80
|   | |           `-ImplicitCastExpr 0x804918 <col:37, col:46> 'EXC_CONTEXT_S *' <LValueToRValue>
|   | |             `-MemberExpr 0x8048e8 <col:37, col:46> 'EXC_CONTEXT_S *const' lvalue ->context 0x880fe0
|   | |               `-ImplicitCastExpr 0x8048d0 <col:37> 'const ExcInfo *' <LValueToRValue>
|   | |                 `-DeclRefExpr 0x8048b0 <col:37> 'const ExcInfo *' lvalue ParmVar 0x914b70 'excInfo' 'const ExcInfo *'
|   | `-IntegerLiteral 0x804a50 <main/los_debug.h:138:10> 'int' 0
|   `-ForStmt 0x804fd0 <main/los_interrupt.c:436:5, line:438:5>
|     |-BinaryOperator 0x804ad0 <line:436:10, col:18> 'INT32':'int' '='
|     | |-DeclRefExpr 0x804a90 <col:10> 'INT32':'int' lvalue Var 0x914cb8 'index' 'INT32':'int'
|     | `-IntegerLiteral 0x804ab0 <col:18> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x804b48 <col:21, main/los_arch_regs.h:151:62> 'int' '<'
|     | |-ImplicitCastExpr 0x804b30 <main/los_interrupt.c:436:21> 'INT32':'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x804af0 <col:21> 'INT32':'int' lvalue Var 0x914cb8 'index' 'INT32':'int'
|     | `-IntegerLiteral 0x804b10 <main/los_arch_regs.h:151:62> 'int' 16
|     |-UnaryOperator 0x804b88 <main/los_interrupt.c:436:48, col:53> 'INT32':'int' postfix '++'
|     | `-DeclRefExpr 0x804b68 <col:48> 'INT32':'int' lvalue Var 0x914cb8 'index' 'INT32':'int'
|     `-CompoundStmt 0x804fb8 <col:57, line:438:5>
|       `-DoStmt 0x804f98 <main/los_debug.h:134:49, line:138:11>
|         |-CompoundStmt 0x804f60 <line:134:52, line:137:54>
|         | `-IfStmt 0x804f48 <line:135:5, line:137:5>
|         |   |-UnaryOperator 0x804c80 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|         |   | `-CallExpr 0x804c58 <col:10, col:31> 'INT32':'int'
|         |   |   |-ImplicitCastExpr 0x804c40 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|         |   |   | `-DeclRefExpr 0x804ba0 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|         |   |   `-ParenExpr 0x804c20 <line:90:29, col:47> 'int'
|         |   |     `-BinaryOperator 0x804c00 <line:88:29, line:90:46> 'int' '+'
|         |   |       |-IntegerLiteral 0x804bc0 <line:88:29> 'int' 0
|         |   |       `-IntegerLiteral 0x804be0 <line:90:46> 'int' 1
|         |   `-CompoundStmt 0x804f30 <line:135:34, line:137:5>
|         |     `-CallExpr 0x804e98 <line:136:9, col:27> 'int'
|         |       |-ImplicitCastExpr 0x804e80 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x804c98 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|         |       |-ImplicitCastExpr 0x804ee8 <main/los_interrupt.c:437:16> 'const char *' <NoOp>
|         |       | `-ImplicitCastExpr 0x804ed0 <col:16> 'char *' <ArrayToPointerDecay>
|         |       |   `-StringLiteral 0x804cf8 <col:16> 'char [22]' lvalue "regA%d        = 0x%x\n"
|         |       |-ImplicitCastExpr 0x804f00 <col:42> 'INT32':'int' <LValueToRValue>
|         |       | `-DeclRefExpr 0x804d28 <col:42> 'INT32':'int' lvalue Var 0x914cb8 'index' 'INT32':'int'
|         |       `-ImplicitCastExpr 0x804f18 <col:49, col:77> 'UINT32':'unsigned int' <LValueToRValue>
|         |         `-ArraySubscriptExpr 0x804e48 <col:49, col:77> 'UINT32':'unsigned int' lvalue
|         |           |-ImplicitCastExpr 0x804e18 <col:49, col:67> 'UINT32 *' <ArrayToPointerDecay>
|         |           | `-MemberExpr 0x804dc8 <col:49, col:67> 'UINT32 [16]' lvalue ->regA 0x879f68
|         |           |   `-ImplicitCastExpr 0x804db0 <col:49, col:58> 'EXC_CONTEXT_S *' <LValueToRValue>
|         |           |     `-MemberExpr 0x804d80 <col:49, col:58> 'EXC_CONTEXT_S *const' lvalue ->context 0x880fe0
|         |           |       `-ImplicitCastExpr 0x804d68 <col:49> 'const ExcInfo *' <LValueToRValue>
|         |           |         `-DeclRefExpr 0x804d48 <col:49> 'const ExcInfo *' lvalue ParmVar 0x914b70 'excInfo' 'const ExcInfo *'
|         |           `-ImplicitCastExpr 0x804e30 <col:72> 'INT32':'int' <LValueToRValue>
|         |             `-DeclRefExpr 0x804df8 <col:72> 'INT32':'int' lvalue Var 0x914cb8 'index' 'INT32':'int'
|         `-IntegerLiteral 0x804f78 <main/los_debug.h:138:10> 'int' 0
|-FunctionDecl 0x805108 <main/los_compiler.h:158:22, main/los_interrupt.c:498:1> line:460:13 used OsExcMemPoolCheckInfo 'void (void)' static
| `-CompoundStmt 0x805f80 <line:461:1, line:498:1>
|   |-DoStmt 0x805418 <main/los_debug.h:134:49, line:138:11>
|   | |-CompoundStmt 0x8053e0 <line:134:52, line:137:54>
|   | | `-IfStmt 0x8053c8 <line:135:5, line:137:5>
|   | |   |-UnaryOperator 0x805288 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x805260 <col:10, col:31> 'INT32':'int'
|   | |   |   |-ImplicitCastExpr 0x805248 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x8051a8 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   | |   |   `-ParenExpr 0x805228 <line:90:29, col:47> 'int'
|   | |   |     `-BinaryOperator 0x805208 <line:88:29, line:90:46> 'int' '+'
|   | |   |       |-IntegerLiteral 0x8051c8 <line:88:29> 'int' 0
|   | |   |       `-IntegerLiteral 0x8051e8 <line:90:46> 'int' 1
|   | |   `-CompoundStmt 0x8053b0 <line:135:34, line:137:5>
|   | |     `-CallExpr 0x805358 <line:136:9, col:27> 'int'
|   | |       |-ImplicitCastExpr 0x805340 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x8052a0 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   | |       `-ImplicitCastExpr 0x805398 <main/los_interrupt.c:462:12> 'const char *' <NoOp>
|   | |         `-ImplicitCastExpr 0x805380 <col:12> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x8052f8 <col:12> 'char [23]' lvalue "\r\nmemory pools check:\n"
|   | `-IntegerLiteral 0x8053f8 <main/los_debug.h:138:10> 'int' 0
|   |-DeclStmt 0x805a00 <main/los_interrupt.c:492:5, col:61>
|   | `-VarDecl 0x805448 <col:5, col:60> col:12 used ret 'UINT32':'unsigned int' cinit
|   |   `-CallExpr 0x8059c0 <col:18, col:60> 'UINT32':'unsigned int'
|   |     |-ImplicitCastExpr 0x8059a8 <col:18> 'UINT32 (*)(const void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x8054b0 <col:18> 'UINT32 (const void *)' Function 0x8f5960 'LOS_MemIntegrityCheck' 'UINT32 (const void *)'
|   |     `-ImplicitCastExpr 0x8059e8 <main/target_config.h:101:61, col:92> 'const void *' <BitCast>
|   |       `-CStyleCastExpr 0x805920 <col:61, col:92> 'CHAR *' <IntegralToPointer>
|   |         `-CStyleCastExpr 0x805558 <col:69, col:92> 'UINTPTR':'unsigned int' <PointerToIntegral>
|   |           `-ParenExpr 0x805538 <col:78, col:92> 'UINTPTR *'
|   |             `-UnaryOperator 0x8054f0 <col:79, col:80> 'UINTPTR *' prefix '&' cannot overflow
|   |               `-DeclRefExpr 0x8054d0 <col:80> 'UINTPTR':'unsigned int' lvalue Var 0x779e10 '__heap_start' 'UINTPTR':'unsigned int'
|   |-IfStmt 0x805d10 <main/los_interrupt.c:493:5, line:495:5>
|   | |-BinaryOperator 0x805a70 <line:493:9, main/los_compiler.h:350:23> 'int' '=='
|   | | |-ImplicitCastExpr 0x805a58 <main/los_interrupt.c:493:9> 'UINT32':'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x805a18 <col:9> 'UINT32':'unsigned int' lvalue Var 0x805448 'ret' 'UINT32':'unsigned int'
|   | | `-IntegerLiteral 0x805a38 <main/los_compiler.h:350:23> 'unsigned int' 0
|   | `-CompoundStmt 0x805cf8 <main/los_interrupt.c:493:24, line:495:5>
|   |   `-DoStmt 0x805cd8 <main/los_debug.h:134:49, line:138:11>
|   |     |-CompoundStmt 0x805ca0 <line:134:52, line:137:54>
|   |     | `-IfStmt 0x805c88 <line:135:5, line:137:5>
|   |     |   |-UnaryOperator 0x805b70 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   |     |   | `-CallExpr 0x805b48 <col:10, col:31> 'INT32':'int'
|   |     |   |   |-ImplicitCastExpr 0x805b30 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   |     |   |   | `-DeclRefExpr 0x805a90 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   |     |   |   `-ParenExpr 0x805b10 <line:90:29, col:47> 'int'
|   |     |   |     `-BinaryOperator 0x805af0 <line:88:29, line:90:46> 'int' '+'
|   |     |   |       |-IntegerLiteral 0x805ab0 <line:88:29> 'int' 0
|   |     |   |       `-IntegerLiteral 0x805ad0 <line:90:46> 'int' 1
|   |     |   `-CompoundStmt 0x805c70 <line:135:34, line:137:5>
|   |     |     `-CallExpr 0x805c18 <line:136:9, col:27> 'int'
|   |     |       |-ImplicitCastExpr 0x805c00 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     |       | `-DeclRefExpr 0x805b88 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   |     |       `-ImplicitCastExpr 0x805c58 <main/los_interrupt.c:494:16> 'const char *' <NoOp>
|   |     |         `-ImplicitCastExpr 0x805c40 <col:16> 'char *' <ArrayToPointerDecay>
|   |     |           `-StringLiteral 0x805ba8 <col:16> 'char [40]' lvalue "system heap memcheck over, all passed!\n"
|   |     `-IntegerLiteral 0x805cb8 <main/los_debug.h:138:10> 'int' 0
|   `-DoStmt 0x805f60 <line:134:49, line:138:11>
|     |-CompoundStmt 0x805f28 <line:134:52, line:137:54>
|     | `-IfStmt 0x805f10 <line:135:5, line:137:5>
|     |   |-UnaryOperator 0x805e08 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|     |   | `-CallExpr 0x805de0 <col:10, col:31> 'INT32':'int'
|     |   |   |-ImplicitCastExpr 0x805dc8 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x805d28 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|     |   |   `-ParenExpr 0x805da8 <line:90:29, col:47> 'int'
|     |   |     `-BinaryOperator 0x805d88 <line:88:29, line:90:46> 'int' '+'
|     |   |       |-IntegerLiteral 0x805d48 <line:88:29> 'int' 0
|     |   |       `-IntegerLiteral 0x805d68 <line:90:46> 'int' 1
|     |   `-CompoundStmt 0x805ef8 <line:135:34, line:137:5>
|     |     `-CallExpr 0x805ea0 <line:136:9, col:27> 'int'
|     |       |-ImplicitCastExpr 0x805e88 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|     |       | `-DeclRefExpr 0x805e20 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|     |       `-ImplicitCastExpr 0x805ee0 <main/los_interrupt.c:497:12> 'const char *' <NoOp>
|     |         `-ImplicitCastExpr 0x805ec8 <col:12> 'char *' <ArrayToPointerDecay>
|     |           `-StringLiteral 0x805e40 <col:12> 'char [24]' lvalue "memory pool check end!\n"
|     `-IntegerLiteral 0x805f40 <main/los_debug.h:138:10> 'int' 0
|-FunctionDecl 0x806050 <main/los_compiler.h:158:22, main/los_interrupt.c:514:1> line:501:13 used OsExcInfoDisplay 'void (const ExcInfo *)' static
| |-ParmVarDecl 0x805fc0 <col:30, col:45> col:45 used excInfo 'const ExcInfo *'
| `-CompoundStmt 0x806680 <line:502:1, line:514:1>
|   |-DoStmt 0x806388 <main/los_debug.h:134:49, line:138:11>
|   | |-CompoundStmt 0x806350 <line:134:52, line:137:54>
|   | | `-IfStmt 0x806338 <line:135:5, line:137:5>
|   | |   |-UnaryOperator 0x8061d8 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   | |   | `-CallExpr 0x8061b0 <col:10, col:31> 'INT32':'int'
|   | |   |   |-ImplicitCastExpr 0x806198 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   | |   |   | `-DeclRefExpr 0x8060f8 <col:10> 'INT32 (INT32)' Function 0x8847f8 'OsLogLevelCheck' 'INT32 (INT32)'
|   | |   |   `-ParenExpr 0x806178 <line:90:29, col:47> 'int'
|   | |   |     `-BinaryOperator 0x806158 <line:88:29, line:90:46> 'int' '+'
|   | |   |       |-IntegerLiteral 0x806118 <line:88:29> 'int' 0
|   | |   |       `-IntegerLiteral 0x806138 <line:90:46> 'int' 1
|   | |   `-CompoundStmt 0x806320 <line:135:34, line:137:5>
|   | |     `-CallExpr 0x8062c8 <line:136:9, col:27> 'int'
|   | |       |-ImplicitCastExpr 0x8062b0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x8061f0 <col:9> 'int (const char *, ...)' Function 0x884610 'printf' 'int (const char *, ...)'
|   | |       `-ImplicitCastExpr 0x806308 <main/los_interrupt.c:504:12> 'const char *' <NoOp>
|   | |         `-ImplicitCastExpr 0x8062f0 <col:12> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x806248 <col:12> 'char [50]' lvalue "*************Exception Information**************\n"
|   | `-IntegerLiteral 0x806368 <main/los_debug.h:138:10> 'int' 0
|   |-CallExpr 0x806460 <main/los_interrupt.c:505:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x806448 <col:5> 'void (*)(const ExcInfo *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x8063a8 <col:5> 'void (const ExcInfo *)' Function 0x911078 'OsExcTypeInfo' 'void (const ExcInfo *)'
|   | `-ImplicitCastExpr 0x806488 <col:19> 'const ExcInfo *' <LValueToRValue>
|   |   `-DeclRefExpr 0x8063c8 <col:19> 'const ExcInfo *' lvalue ParmVar 0x805fc0 'excInfo' 'const ExcInfo *'
|   |-CallExpr 0x8064f8 <line:506:5, col:29> 'void'
|   | |-ImplicitCastExpr 0x8064e0 <col:5> 'void (*)(const ExcInfo *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x8064a0 <col:5> 'void (const ExcInfo *)' Function 0x912390 'OsExcCurTaskInfo' 'void (const ExcInfo *)'
|   | `-ImplicitCastExpr 0x806520 <col:22> 'const ExcInfo *' <LValueToRValue>
|   |   `-DeclRefExpr 0x8064c0 <col:22> 'const ExcInfo *' lvalue ParmVar 0x805fc0 'excInfo' 'const ExcInfo *'
|   |-CallExpr 0x806590 <line:507:5, col:25> 'void'
|   | |-ImplicitCastExpr 0x806578 <col:5> 'void (*)(const ExcInfo *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x806538 <col:5> 'void (const ExcInfo *)' Function 0x914c00 'OsExcRegInfo' 'void (const ExcInfo *)'
|   | `-ImplicitCastExpr 0x8065b8 <col:18> 'const ExcInfo *' <LValueToRValue>
|   |   `-DeclRefExpr 0x806558 <col:18> 'const ExcInfo *' lvalue ParmVar 0x805fc0 'excInfo' 'const ExcInfo *'
|   |-CallExpr 0x806608 <line:511:5, col:21> 'UINT32':'unsigned int'
|   | `-ImplicitCastExpr 0x8065f0 <col:5> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x8065d0 <col:5> 'UINT32 (void)' Function 0x8ce6e0 'OsGetAllTskInfo' 'UINT32 (void)'
|   `-CallExpr 0x806660 <line:512:5, col:27> 'void'
|     `-ImplicitCastExpr 0x806648 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
|       `-DeclRefExpr 0x806628 <col:5> 'void (void)' Function 0x805108 'OsExcMemPoolCheckInfo' 'void (void)'
|-FunctionDecl 0x806f30 prev 0x87ea98 <main/los_compiler.h:327:23, main/los_interrupt.c:540:1> line:516:6 HalExcHandleEntry 'void (UINTPTR, EXC_CONTEXT_S *, UINT32)'
| |-ParmVarDecl 0x8066d0 <col:24, col:32> col:32 used faultAddr 'UINTPTR':'unsigned int'
| |-ParmVarDecl 0x806748 <col:43, col:58> col:58 used excBufAddr 'EXC_CONTEXT_S *'
| |-ParmVarDecl 0x8067c0 <col:70, col:77> col:77 used type 'UINT32':'unsigned int'
| `-CompoundStmt 0x807fc0 <line:517:1, line:540:1>
|   |-UnaryOperator 0x807038 <line:518:5, col:22> 'UINT16':'unsigned short' postfix '++' cannot overflow
|   | `-MemberExpr 0x807008 <col:5, col:15> 'UINT16':'unsigned short' lvalue .nestCnt 0x880f20
|   |   `-DeclRefExpr 0x806fe8 <col:5> 'ExcInfo':'struct TagExcInfo' lvalue Var 0x910d50 'g_excInfo' 'ExcInfo':'struct TagExcInfo'
|   |-BinaryOperator 0x8070d8 <line:519:5, col:27> 'UINT32':'unsigned int' '='
|   | |-MemberExpr 0x807070 <col:5, col:15> 'UINT32':'unsigned int' lvalue .faultAddr 0x880e60
|   | | `-DeclRefExpr 0x807050 <col:5> 'ExcInfo':'struct TagExcInfo' lvalue Var 0x910d50 'g_excInfo' 'ExcInfo':'struct TagExcInfo'
|   | `-ImplicitCastExpr 0x8070c0 <col:27> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x8070a0 <col:27> 'UINTPTR':'unsigned int' lvalue ParmVar 0x8066d0 'faultAddr' 'UINTPTR':'unsigned int'
|   |-BinaryOperator 0x807218 <line:520:5, col:22> 'UINT16':'unsigned short' '='
|   | |-MemberExpr 0x807198 <col:5, col:15> 'UINT16':'unsigned short' lvalue .type 0x880e00
|   | | `-DeclRefExpr 0x807178 <col:5> 'ExcInfo':'struct TagExcInfo' lvalue Var 0x910d50 'g_excInfo' 'ExcInfo':'struct TagExcInfo'
|   | `-ImplicitCastExpr 0x807200 <col:22> 'UINT16':'unsigned short' <IntegralCast>
|   |   `-ImplicitCastExpr 0x8071e8 <col:22> 'UINT32':'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x8071c8 <col:22> 'UINT32':'unsigned int' lvalue ParmVar 0x8067c0 'type' 'UINT32':'unsigned int'
|   |-DeclStmt 0x807318 <line:522:5, col:42>
|   | `-VarDecl 0x807248 <col:5, col:35> col:16 used taskCB 'LosTaskCB *' cinit
|   |   `-ImplicitCastExpr 0x807300 <col:25, col:35> 'LosTaskCB *' <LValueToRValue>
|   |     `-MemberExpr 0x8072d0 <col:25, col:35> 'LosTaskCB *' lvalue .runTask 0x8cb1c8
|   |       `-DeclRefExpr 0x8072b0 <col:25> 'LosTask':'LosTask' lvalue Var 0x8cc320 'g_losTask' 'LosTask':'LosTask'
|   |-IfStmt 0x807c98 <line:524:5, line:533:5> has_else
|   | |-BinaryOperator 0x8075e0 <line:524:9, col:69> 'int' '||'
|   | | |-ParenExpr 0x807420 <col:9, col:24> 'int'
|   | | | `-BinaryOperator 0x807400 <col:10, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x8073d0 <main/los_interrupt.c:524:10> 'LosTaskCB *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x807330 <col:10> 'LosTaskCB *' lvalue Var 0x807248 'taskCB' 'LosTaskCB *'
|   | | |   `-ImplicitCastExpr 0x8073e8 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:16, col:25> 'LosTaskCB *' <BitCast>
|   | | |     `-ParenExpr 0x8073b0 <col:16, col:25> 'void *'
|   | | |       `-CStyleCastExpr 0x807388 <col:17, col:24> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x807350 <col:24> 'int' 0
|   | | `-ParenExpr 0x8075c0 <main/los_interrupt.c:524:29, col:69> 'int'
|   | |   `-BinaryOperator 0x8075a0 <col:30, main/los_task.h:1457:97> 'int' '=='
|   | |     |-ImplicitCastExpr 0x807588 <main/los_interrupt.c:524:30> 'LosTaskCB *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x807440 <col:30> 'LosTaskCB *' lvalue Var 0x807248 'taskCB' 'LosTaskCB *'
|   | |     `-ParenExpr 0x807568 <main/los_task.h:1457:57, col:97> 'LosTaskCB *'
|   | |       `-BinaryOperator 0x807548 <col:58, col:96> 'LosTaskCB *' '+'
|   | |         |-ParenExpr 0x8074d0 <col:58, col:85> 'LosTaskCB *'
|   | |         | `-CStyleCastExpr 0x8074a8 <col:59, col:72> 'LosTaskCB *' <NoOp>
|   | |         |   `-ImplicitCastExpr 0x807490 <col:72> 'LosTaskCB *' <LValueToRValue> part_of_explicit_cast
|   | |         |     `-DeclRefExpr 0x807460 <col:72> 'LosTaskCB *' lvalue Var 0x8cc648 'g_taskCBArray' 'LosTaskCB *'
|   | |         `-ImplicitCastExpr 0x807530 <col:89, col:96> 'UINT32':'unsigned int' <LValueToRValue>
|   | |           `-ParenExpr 0x807510 <col:89, col:96> 'UINT32':'unsigned int' lvalue
|   | |             `-DeclRefExpr 0x8074f0 <main/los_interrupt.c:524:56> 'UINT32':'unsigned int' lvalue Var 0x8cc468 'g_taskMaxNum' 'UINT32':'unsigned int'
|   | |-CompoundStmt 0x807790 <col:72, line:527:5>
|   | | |-BinaryOperator 0x807688 <line:525:9, main/los_arch_interrupt.h:94:47> 'UINT16':'unsigned short' '='
|   | | | |-MemberExpr 0x807620 <main/los_interrupt.c:525:9, col:19> 'UINT16':'unsigned short' lvalue .phase 0x880da0
|   | | | | `-DeclRefExpr 0x807600 <col:9> 'ExcInfo':'struct TagExcInfo' lvalue Var 0x910d50 'g_excInfo' 'ExcInfo':'struct TagExcInfo'
|   | | | `-ImplicitCastExpr 0x807670 <main/los_arch_interrupt.h:94:47> 'UINT16':'unsigned short' <IntegralCast>
|   | | |   `-IntegerLiteral 0x807650 <col:47> 'int' 0
|   | | `-BinaryOperator 0x807770 <main/los_interrupt.c:526:9, main/los_compiler.h:347:42> 'UINT32':'unsigned int' '='
|   | |   |-MemberExpr 0x8076c8 <main/los_interrupt.c:526:9, col:19> 'UINT32':'unsigned int' lvalue .thrdPid 0x880ec0
|   | |   | `-DeclRefExpr 0x8076a8 <col:9> 'ExcInfo':'struct TagExcInfo' lvalue Var 0x910d50 'g_excInfo' 'ExcInfo':'struct TagExcInfo'
|   | |   `-ParenExpr 0x807750 <main/los_compiler.h:347:23, col:42> 'UINT32':'unsigned int'
|   | |     `-CStyleCastExpr 0x807728 <col:24, col:32> 'UINT32':'unsigned int' <NoOp>
|   | |       `-IntegerLiteral 0x8076f8 <col:32> 'unsigned int' 4294967295
|   | `-IfStmt 0x807c70 <main/los_interrupt.c:527:12, line:533:5> has_else
|   |   |-BinaryOperator 0x807880 <line:527:16, main/los_compiler.h:347:42> 'int' '!='
|   |   | |-CallExpr 0x8077e8 <main/los_interrupt.c:527:16, col:26> 'UINT32':'unsigned int'
|   |   | | `-ImplicitCastExpr 0x8077d0 <col:16> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   |   | |   `-DeclRefExpr 0x8077b0 <col:16> 'UINT32 (void)' Function 0x90b710 'HwiNumGet' 'UINT32 (void)'
|   |   | `-ParenExpr 0x807860 <main/los_compiler.h:347:23, col:42> 'UINT32':'unsigned int'
|   |   |   `-CStyleCastExpr 0x807838 <col:24, col:32> 'UINT32':'unsigned int' <NoOp>
|   |   |     `-IntegerLiteral 0x807808 <col:32> 'unsigned int' 4294967295
|   |   |-CompoundStmt 0x807a10 <main/los_interrupt.c:527:44, line:530:5>
|   |   | |-BinaryOperator 0x807928 <line:528:9, main/los_arch_interrupt.h:96:47> 'UINT16':'unsigned short' '='
|   |   | | |-MemberExpr 0x8078c0 <main/los_interrupt.c:528:9, col:19> 'UINT16':'unsigned short' lvalue .phase 0x880da0
|   |   | | | `-DeclRefExpr 0x8078a0 <col:9> 'ExcInfo':'struct TagExcInfo' lvalue Var 0x910d50 'g_excInfo' 'ExcInfo':'struct TagExcInfo'
|   |   | | `-ImplicitCastExpr 0x807910 <main/los_arch_interrupt.h:96:47> 'UINT16':'unsigned short' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x8078f0 <col:47> 'int' 2
|   |   | `-BinaryOperator 0x8079f0 <main/los_interrupt.c:529:9, col:39> 'UINT32':'unsigned int' '='
|   |   |   |-MemberExpr 0x807968 <col:9, col:19> 'UINT32':'unsigned int' lvalue .thrdPid 0x880ec0
|   |   |   | `-DeclRefExpr 0x807948 <col:9> 'ExcInfo':'struct TagExcInfo' lvalue Var 0x910d50 'g_excInfo' 'ExcInfo':'struct TagExcInfo'
|   |   |   `-CallExpr 0x8079d0 <col:29, col:39> 'UINT32':'unsigned int'
|   |   |     `-ImplicitCastExpr 0x8079b8 <col:29> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   |   |       `-DeclRefExpr 0x807998 <col:29> 'UINT32 (void)' Function 0x90b710 'HwiNumGet' 'UINT32 (void)'
|   |   `-CompoundStmt 0x807c50 <line:530:12, line:533:5>
|   |     |-BinaryOperator 0x807ab8 <line:531:9, main/los_arch_interrupt.h:95:47> 'UINT16':'unsigned short' '='
|   |     | |-MemberExpr 0x807a50 <main/los_interrupt.c:531:9, col:19> 'UINT16':'unsigned short' lvalue .phase 0x880da0
|   |     | | `-DeclRefExpr 0x807a30 <col:9> 'ExcInfo':'struct TagExcInfo' lvalue Var 0x910d50 'g_excInfo' 'ExcInfo':'struct TagExcInfo'
|   |     | `-ImplicitCastExpr 0x807aa0 <main/los_arch_interrupt.h:95:47> 'UINT16':'unsigned short' <IntegralCast>
|   |     |   `-IntegerLiteral 0x807a80 <col:47> 'int' 1
|   |     `-BinaryOperator 0x807bd8 <main/los_interrupt.c:532:9, col:48> 'UINT32':'unsigned int' '='
|   |       |-MemberExpr 0x807af8 <col:9, col:19> 'UINT32':'unsigned int' lvalue .thrdPid 0x880ec0
|   |       | `-DeclRefExpr 0x807ad8 <col:9> 'ExcInfo':'struct TagExcInfo' lvalue Var 0x910d50 'g_excInfo' 'ExcInfo':'struct TagExcInfo'
|   |       `-ImplicitCastExpr 0x807bc0 <col:29, col:48> 'UINT32':'unsigned int' <LValueToRValue>
|   |         `-MemberExpr 0x807b90 <col:29, col:48> 'UINT32':'unsigned int' lvalue ->taskID 0x8c6ad8
|   |           `-ImplicitCastExpr 0x807b78 <col:29, col:39> 'LosTaskCB *' <LValueToRValue>
|   |             `-MemberExpr 0x807b48 <col:29, col:39> 'LosTaskCB *' lvalue .runTask 0x8cb1c8
|   |               `-DeclRefExpr 0x807b28 <col:29> 'LosTask':'LosTask' lvalue Var 0x8cc320 'g_losTask' 'LosTask':'LosTask'
|   |-BinaryOperator 0x807d48 <line:535:5, col:25> 'EXC_CONTEXT_S *' '='
|   | |-MemberExpr 0x807ce0 <col:5, col:15> 'EXC_CONTEXT_S *' lvalue .context 0x880fe0
|   | | `-DeclRefExpr 0x807cc0 <col:5> 'ExcInfo':'struct TagExcInfo' lvalue Var 0x910d50 'g_excInfo' 'ExcInfo':'struct TagExcInfo'
|   | `-ImplicitCastExpr 0x807d30 <col:25> 'EXC_CONTEXT_S *' <LValueToRValue>
|   |   `-DeclRefExpr 0x807d10 <col:25> 'EXC_CONTEXT_S *' lvalue ParmVar 0x806748 'excBufAddr' 'EXC_CONTEXT_S *'
|   |-CallExpr 0x807df0 <line:537:5, col:30> 'void'
|   | |-ImplicitCastExpr 0x807dd8 <col:5> 'void (*)(EXC_TYPE)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x807d68 <col:5> 'void (EXC_TYPE)' Function 0x8819f0 'OsDoExcHook' 'void (EXC_TYPE)'
|   | `-ImplicitCastExpr 0x807e18 <col:17> 'EXC_TYPE':'EXC_TYPE' <IntegralCast>
|   |   `-DeclRefExpr 0x807d88 <col:17> 'int' EnumConstant 0x8813f0 'EXC_INTERRUPT' 'int'
|   |-CallExpr 0x807ef8 <line:538:5, col:32> 'void'
|   | |-ImplicitCastExpr 0x807ee0 <col:5> 'void (*)(const ExcInfo *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x807e30 <col:5> 'void (const ExcInfo *)' Function 0x806050 'OsExcInfoDisplay' 'void (const ExcInfo *)'
|   | `-ImplicitCastExpr 0x807f20 <col:22, col:23> 'const ExcInfo *' <NoOp>
|   |   `-UnaryOperator 0x807ec8 <col:22, col:23> 'ExcInfo *' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x807e50 <col:23> 'ExcInfo':'struct TagExcInfo' lvalue Var 0x910d50 'g_excInfo' 'ExcInfo':'struct TagExcInfo'
|   `-CallExpr 0x807fa0 <line:539:5, col:17> 'void'
|     `-ImplicitCastExpr 0x807f88 <col:5> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|       `-DeclRefExpr 0x807f38 <col:5> 'void (void) __attribute__((noreturn))' Function 0x8796a0 'ArchSysExit' 'void (void) __attribute__((noreturn))'
|-VarDecl 0x808028 prev 0x7837f8 <main/los_compiler.h:138:23, main/los_interrupt.c:543:33> col:13 __stack_chk_guard 'UINT32':'unsigned int' cinit
| |-IntegerLiteral 0x8080e8 <col:33> 'unsigned int' 3490319871
| `-WeakAttr 0x808090 <main/los_compiler.h:138:38>
|-FunctionDecl 0x8081a0 prev 0x7838f8 <col:23, main/los_interrupt.c:550:1> line:545:11 __stack_chk_fail 'void (void)'
| |-CompoundStmt 0x808620 <line:546:1, line:550:1>
| | `-CallExpr 0x8085c0 <line:548:5, line:549:42> 'void'
| |   |-ImplicitCastExpr 0x8085a8 <line:548:5> 'void (*)(const CHAR *, ...) __attribute__((noreturn))' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0x808298 <col:5> 'void (const CHAR *, ...) __attribute__((noreturn))' Function 0x8c2b80 'LOS_Panic' 'void (const CHAR *, ...) __attribute__((noreturn))'
| |   |-ImplicitCastExpr 0x808608 <col:15> 'const CHAR *' <NoOp>
| |   | `-ImplicitCastExpr 0x8085f0 <col:15> 'char *' <ArrayToPointerDecay>
| |   |   `-StringLiteral 0x8082f8 <col:15> 'char [53]' lvalue "stack-protector: Kernel stack is corrupted in: 0x%x\n"
| |   `-CallExpr 0x808508 <line:549:15, col:41> 'void *'
| |     |-ImplicitCastExpr 0x8084f0 <col:15> 'void *(*)(unsigned int)' <BuiltinFnToFnPtr>
| |     | `-DeclRefExpr 0x8084b0 <col:15> '<builtin fn type>' Function 0x808348 '__builtin_return_address' 'void *(unsigned int)'
| |     `-ImplicitCastExpr 0x808530 <col:40> 'unsigned int' <IntegralCast>
| |       `-IntegerLiteral 0x8084d0 <col:40> 'int' 0
| `-WeakAttr 0x808240 <main/los_compiler.h:138:38>
|-FunctionDecl 0x808348 <main/los_interrupt.c:549:15> col:15 implicit used __builtin_return_address 'void *(unsigned int)' extern
| |-ParmVarDecl 0x8083e8 <<invalid sloc>> <invalid sloc> 'unsigned int'
| `-NoThrowAttr 0x808458 <col:15> Implicit
`-FunctionDecl 0x8086d0 prev 0x87ebe8 <main/los_compiler.h:327:23, main/los_interrupt.c:568:1> line:559:6 HalHwiInit 'void (void)'
  `-CompoundStmt 0x808ce0 <line:560:1, line:568:1>
    |-CallExpr 0x8087a8 <line:561:5, col:30> 'void'
    | `-ImplicitCastExpr 0x808790 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x808770 <col:5> 'void (void)' Function 0x879408 'EnableExceptionInterface' 'void (void)'
    |-ForStmt 0x808b50 <line:562:5, line:565:5>
    | |-DeclStmt 0x808878 <line:562:10, col:22>
    | | `-VarDecl 0x8087d8 <col:10, col:21> col:17 used i 'UINT32':'unsigned int' cinit
    | |   `-ImplicitCastExpr 0x808860 <col:21> 'UINT32':'unsigned int' <IntegralCast>
    | |     `-IntegerLiteral 0x808840 <col:21> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x808900 <col:24, main/target_config.h:65:61> 'int' '<'
    | | |-ImplicitCastExpr 0x8088d0 <main/los_interrupt.c:562:24> 'UINT32':'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x808890 <col:24> 'UINT32':'unsigned int' lvalue Var 0x8087d8 'i' 'UINT32':'unsigned int'
    | | `-ImplicitCastExpr 0x8088e8 <main/target_config.h:65:61> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x8088b0 <col:61> 'int' 32
    | |-UnaryOperator 0x808940 <main/los_interrupt.c:562:44, col:45> 'UINT32':'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x808920 <col:44> 'UINT32':'unsigned int' lvalue Var 0x8087d8 'i' 'UINT32':'unsigned int'
    | `-CompoundStmt 0x808b30 <col:49, line:565:5>
    |   |-BinaryOperator 0x808a78 <line:563:9, col:44> 'HWI_PROC_FUNC':'void (*)(void)' '='
    |   | |-ArraySubscriptExpr 0x808a20 <col:9, col:40> 'HWI_PROC_FUNC':'void (*)(void)' lvalue
    |   | | |-ImplicitCastExpr 0x808a08 <col:9> 'HWI_PROC_FUNC *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x808958 <col:9> 'HWI_PROC_FUNC [32]' lvalue Var 0x8fc918 'g_hwiForm' 'HWI_PROC_FUNC [32]'
    |   | | `-BinaryOperator 0x8089e8 <col:19, main/los_arch_interrupt.h:114:47> 'unsigned int' '+'
    |   | |   |-ImplicitCastExpr 0x8089b8 <main/los_interrupt.c:563:19> 'UINT32':'unsigned int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x808978 <col:19> 'UINT32':'unsigned int' lvalue Var 0x8087d8 'i' 'UINT32':'unsigned int'
    |   | |   `-ImplicitCastExpr 0x8089d0 <main/los_arch_interrupt.h:114:47> 'unsigned int' <IntegralCast>
    |   | |     `-IntegerLiteral 0x808998 <col:47> 'int' 0
    |   | `-ImplicitCastExpr 0x808a60 <main/los_interrupt.c:563:44> 'void (*)(void)' <FunctionToPointerDecay>
    |   |   `-DeclRefExpr 0x808a40 <col:44> 'void (void)' Function 0x90cde8 'HalHwiDefaultHandler' 'void (void)'
    |   `-CallExpr 0x808af0 <line:564:9, col:18> 'UINT32':'unsigned int'
    |     |-ImplicitCastExpr 0x808ad8 <col:9> 'UINT32 (*)(HWI_HANDLE_T)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x808a98 <col:9> 'UINT32 (HWI_HANDLE_T)' Function 0x90ad78 'HwiMask' 'UINT32 (HWI_HANDLE_T)'
    |     `-ImplicitCastExpr 0x808b18 <col:17> 'UINT32':'unsigned int' <LValueToRValue>
    |       `-DeclRefExpr 0x808ab8 <col:17> 'UINT32':'unsigned int' lvalue Var 0x8087d8 'i' 'UINT32':'unsigned int'
    |-GCCAsmStmt 0x808c60 <main/los_compiler.h:362:23, main/los_interrupt.c:566:63>
    | `-ParenExpr 0x808c40 <main/los_arch_interrupt.h:68:47, col:70> 'UINTPTR':'unsigned int'
    |   `-CStyleCastExpr 0x808c18 <col:48, line:66:47> 'UINTPTR':'unsigned int' <PointerToIntegral>
    |     `-UnaryOperator 0x808bf0 <line:68:57, line:66:47> 'CHAR **' prefix '&' cannot overflow
    |       `-DeclRefExpr 0x808bd0 <col:47> 'CHAR *' lvalue Var 0x87e0f8 '_init_start' 'CHAR *'
    `-ReturnStmt 0x808cd0 <main/los_interrupt.c:567:5>

TranslationUnitDecl 0xc26a98 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0xc27330 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0xc27030 '__int128'
|-TypedefDecl 0xc273a0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0xc27050 'unsigned __int128'
|-TypedefDecl 0xc276a8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0xc27480 'struct __NSConstantString_tag'
|   `-Record 0xc273f8 '__NSConstantString_tag'
|-TypedefDecl 0xc27740 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0xc27700 'char *'
|   `-BuiltinType 0xc26b30 'char'
`-TypedefDecl 0xc27a38 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
  `-ConstantArrayType 0xc279e0 'struct __va_list_tag [1]' 1 
    `-RecordType 0xc27820 'struct __va_list_tag'
      `-Record 0xc27798 '__va_list_tag'

TranslationUnitDecl 0xeb3cd8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0xeb4570 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0xeb4270 '__int128'
|-TypedefDecl 0xeb45e0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0xeb4290 'unsigned __int128'
|-TypedefDecl 0xeb48e8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0xeb46c0 'struct __NSConstantString_tag'
|   `-Record 0xeb4638 '__NSConstantString_tag'
|-TypedefDecl 0xeb4980 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0xeb4940 'char *'
|   `-BuiltinType 0xeb3d70 'char'
|-TypedefDecl 0xeb4c78 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0xeb4c20 'struct __va_list_tag [1]' 1 
|   `-RecordType 0xeb4a60 'struct __va_list_tag'
|     `-Record 0xeb49d8 '__va_list_tag'
|-TypedefDecl 0xf1c060 <main/los_compiler.h:308:1, col:32> col:32 referenced UINT8 'unsigned char'
| `-BuiltinType 0xeb3e30 'unsigned char'
|-TypedefDecl 0xf1c0d0 <line:309:1, col:32> col:32 referenced UINT16 'unsigned short'
| `-BuiltinType 0xeb3e50 'unsigned short'
|-TypedefDecl 0xf1c140 <line:310:1, col:32> col:32 referenced UINT32 'unsigned int'
| `-BuiltinType 0xeb3e70 'unsigned int'
|-TypedefDecl 0xf1c1b0 <line:311:1, col:32> col:32 INT8 'signed char'
| `-BuiltinType 0xeb3d90 'signed char'
|-TypedefDecl 0xf1c220 <line:312:1, col:32> col:32 INT16 'short'
| `-BuiltinType 0xeb3db0 'short'
|-TypedefDecl 0xf1c290 <line:313:1, col:32> col:32 referenced INT32 'int'
| `-BuiltinType 0xeb3dd0 'int'
|-TypedefDecl 0xf1c300 <line:314:1, col:32> col:32 FLOAT 'float'
| `-BuiltinType 0xeb3ed0 'float'
|-TypedefDecl 0xf1c370 <line:315:1, col:32> col:32 DOUBLE 'double'
| `-BuiltinType 0xeb3ef0 'double'
|-TypedefDecl 0xf1c3d8 <line:316:1, col:32> col:32 referenced CHAR 'char'
| `-BuiltinType 0xeb3d70 'char'
|-TypedefDecl 0xf1c448 <line:318:1, col:32> col:32 referenced BOOL 'unsigned int'
| `-BuiltinType 0xeb3e70 'unsigned int'
|-TypedefDecl 0xf1c4b8 <line:319:1, col:32> col:32 referenced UINT64 'unsigned long long'
| `-BuiltinType 0xeb3eb0 'unsigned long long'
|-TypedefDecl 0xf1c528 <line:320:1, col:32> col:32 referenced INT64 'long long'
| `-BuiltinType 0xeb3e10 'long long'
|-TypedefDecl 0xf1c598 <line:321:1, col:32> col:32 referenced UINTPTR 'unsigned int'
| `-BuiltinType 0xeb3e70 'unsigned int'
|-TypedefDecl 0xf1c608 <line:322:1, col:32> col:32 INTPTR 'int'
| `-BuiltinType 0xeb3dd0 'int'
|-TypedefDecl 0xf1c690 <line:324:1, col:24> col:24 Atomic 'volatile INT32':'volatile int'
| `-QualType 0xf1c664 'volatile INT32' volatile
|   `-TypedefType 0xf1c660 'INT32' sugar
|     |-Typedef 0xf1c290 'INT32'
|     `-BuiltinType 0xeb3dd0 'int'
|-TypedefDecl 0xf1c720 <line:325:1, col:24> col:24 Atomic64 'volatile INT64':'volatile long long'
| `-QualType 0xf1c6f4 'volatile INT64' volatile
|   `-TypedefType 0xf1c6f0 'INT64' sugar
|     |-Typedef 0xf1c528 'INT64'
|     `-BuiltinType 0xeb3e10 'long long'
|-FunctionDecl 0xf1c9c8 <line:407:1, line:410:1> line:407:22 LOS_Align 'UINT32 (UINT32, UINT32)' static inline
| |-ParmVarDecl 0xf1c840 <col:32, col:39> col:39 used addr 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf1c8b8 <col:45, col:52> col:52 used boundary 'UINT32':'unsigned int'
| |-CompoundStmt 0xf242d0 <line:408:1, line:410:1>
| | `-ReturnStmt 0xf242c0 <line:409:5, col:93>
| |   `-BinaryOperator 0xf242a0 <col:12, col:93> 'unsigned int' '&'
| |     |-ParenExpr 0xf241b8 <col:12, col:75> 'unsigned int'
| |     | `-BinaryOperator 0xf24198 <col:13, col:74> 'unsigned int' '+'
| |     |   |-ImplicitCastExpr 0xf24180 <col:13> 'UINT32':'unsigned int' <LValueToRValue>
| |     |   | `-DeclRefExpr 0xf1cac0 <col:13> 'UINT32':'unsigned int' lvalue ParmVar 0xf1c840 'addr' 'UINT32':'unsigned int'
| |     |   `-ParenExpr 0xf24160 <col:20, col:74> 'unsigned int'
| |     |     `-ConditionalOperator 0xf1cd68 <col:21, col:73> 'unsigned int'
| |     |       |-ParenExpr 0xf1cc60 <col:21, col:52> 'int'
| |     |       | `-BinaryOperator 0xf1cc40 <col:22, col:48> 'int' '>'
| |     |       |   |-ParenExpr 0xf1cbe8 <col:22, col:44> 'unsigned int'
| |     |       |   | `-BinaryOperator 0xf1cbc8 <col:23, col:43> 'unsigned int' '+'
| |     |       |   |   |-ImplicitCastExpr 0xf1cbb0 <col:23> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |   | `-DeclRefExpr 0xf1cae0 <col:23> 'UINT32':'unsigned int' lvalue ParmVar 0xf1c840 'addr' 'UINT32':'unsigned int'
| |     |       |   |   `-ParenExpr 0xf1cb90 <col:30, col:43> 'unsigned int'
| |     |       |   |     `-BinaryOperator 0xf1cb70 <col:31, col:42> 'unsigned int' '-'
| |     |       |   |       |-ImplicitCastExpr 0xf1cb40 <col:31> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |       | `-DeclRefExpr 0xf1cb00 <col:31> 'UINT32':'unsigned int' lvalue ParmVar 0xf1c8b8 'boundary' 'UINT32':'unsigned int'
| |     |       |   |       `-ImplicitCastExpr 0xf1cb58 <col:42> 'unsigned int' <IntegralCast>
| |     |       |   |         `-IntegerLiteral 0xf1cb20 <col:42> 'int' 1
| |     |       |   `-ImplicitCastExpr 0xf1cc28 <col:48> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |     `-DeclRefExpr 0xf1cc08 <col:48> 'UINT32':'unsigned int' lvalue ParmVar 0xf1c840 'addr' 'UINT32':'unsigned int'
| |     |       |-ParenExpr 0xf1cd10 <col:56, col:69> 'unsigned int'
| |     |       | `-BinaryOperator 0xf1ccf0 <col:57, col:68> 'unsigned int' '-'
| |     |       |   |-ImplicitCastExpr 0xf1ccc0 <col:57> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   | `-DeclRefExpr 0xf1cc80 <col:57> 'UINT32':'unsigned int' lvalue ParmVar 0xf1c8b8 'boundary' 'UINT32':'unsigned int'
| |     |       |   `-ImplicitCastExpr 0xf1ccd8 <col:68> 'unsigned int' <IntegralCast>
| |     |       |     `-IntegerLiteral 0xf1cca0 <col:68> 'int' 1
| |     |       `-ImplicitCastExpr 0xf1cd50 <col:73> 'unsigned int' <IntegralCast>
| |     |         `-IntegerLiteral 0xf1cd30 <col:73> 'int' 0
| |     `-UnaryOperator 0xf24288 <col:79, col:93> 'unsigned int' prefix '~' cannot overflow
| |       `-ParenExpr 0xf24268 <col:80, col:93> 'unsigned int'
| |         `-BinaryOperator 0xf24248 <col:81, col:92> 'unsigned int' '-'
| |           |-ImplicitCastExpr 0xf24218 <col:81> 'UINT32':'unsigned int' <LValueToRValue>
| |           | `-DeclRefExpr 0xf241d8 <col:81> 'UINT32':'unsigned int' lvalue ParmVar 0xf1c8b8 'boundary' 'UINT32':'unsigned int'
| |           `-ImplicitCastExpr 0xf24230 <col:92> 'unsigned int' <IntegralCast>
| |             `-IntegerLiteral 0xf241f8 <col:92> 'int' 1
| `-FullComment 0xfb8bc0 <line:388:3, line:405:7>
|   |-ParagraphComment 0xfb81e0 <line:388:3>
|   | `-TextComment 0xfb81b0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfb8200 <col:4, col:21> Text=" los_base"
|   |-ParagraphComment 0xfb8270 <line:389:3>
|   | `-TextComment 0xfb8240 <col:3> Text=" "
|   |-BlockCommandComment 0xfb8290 <col:4, col:70> Name="brief"
|   | `-ParagraphComment 0xfb82f0 <col:10, col:70>
|   |   `-TextComment 0xfb82c0 <col:10, col:70> Text=" Align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0xfb8340 <line:391:3>
|   | `-TextComment 0xfb8310 <col:3> Text=" "
|   |-BlockCommandComment 0xfb8360 <col:4, line:392:83> Name="par"
|   | `-ParagraphComment 0xfb83e0 <line:391:8, line:392:83>
|   |   |-TextComment 0xfb8390 <line:391:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfb83b0 <line:392:3, col:83> Text=" This API is used to align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0xfb8430 <line:394:3>
|   | `-TextComment 0xfb8400 <col:3> Text=" "
|   |-BlockCommandComment 0xfb8450 <col:4, line:397:8> Name="attention"
|   | `-ParagraphComment 0xfb8620 <line:395:3, line:397:8>
|   |   |-TextComment 0xfb8480 <line:395:3> Text=" "
|   |   |-HTMLStartTagComment 0xfb84a0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfb84e0 <line:396:3> Text=" "
|   |   |-HTMLStartTagComment 0xfb8500 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfb8540 <col:8, col:50> Text="the value of boundary usually is 4,8,16,32."
|   |   |-HTMLEndTagComment 0xfb8560 <col:51, col:55> Name="li"
|   |   |-TextComment 0xfb8590 <line:397:3> Text=" "
|   |   `-HTMLEndTagComment 0xfb85b0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfb8670 <line:399:3>
|   | `-TextComment 0xfb8640 <col:3> Text=" "
|   |-ParamCommandComment 0xfb8690 <col:4, line:400:3> [in] implicitly Param="addr" ParamIndex=0
|   | `-ParagraphComment 0xfb8740 <line:399:15, line:400:3>
|   |   |-TextComment 0xfb86f0 <line:399:15, col:61> Text="     [IN]  The variable what you want to align."
|   |   `-TextComment 0xfb8710 <line:400:3> Text=" "
|   |-ParamCommandComment 0xfb8760 <col:4, col:63> [in] implicitly Param="boundary" ParamIndex=1
|   | `-ParagraphComment 0xfb87f0 <col:19, col:63>
|   |   `-TextComment 0xfb87c0 <col:19, col:63> Text=" [IN]  The align size what you want to align."
|   |-ParagraphComment 0xfb8840 <line:402:3>
|   | `-TextComment 0xfb8810 <col:3> Text=" "
|   |-BlockCommandComment 0xfb8860 <col:4, line:403:3> Name="retval"
|   | `-ParagraphComment 0xfb88e0 <line:402:11, line:403:3>
|   |   |-TextComment 0xfb8890 <line:402:11, col:55> Text=" #UINT32 The variable what have been aligned."
|   |   `-TextComment 0xfb88b0 <line:403:3> Text=" "
|   |-BlockCommandComment 0xfb8900 <col:4, line:405:3> Name="par"
|   | `-ParagraphComment 0xfb8ad0 <line:403:8, line:405:3>
|   |   |-TextComment 0xfb8930 <line:403:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfb8950 <line:404:3> Text=" "
|   |   |-HTMLStartTagComment 0xfb8970 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfb89b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfb89f0 <col:12, col:73> Text="los_base.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfb8a10 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfb8a40 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfb8a70 <line:405:3> Text=" "
|   `-BlockCommandComment 0xfb8af0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfb8b20 <<invalid sloc>>
|-FunctionDecl 0xf243c8 <line:423:1, line:438:1> line:423:20 used maybe_release_fence 'void (int)' static inline
| |-ParmVarDecl 0xf24300 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0xf24980 <line:424:1, line:438:1>
|   `-SwitchStmt 0xf244a8 <line:425:5, line:437:5>
|     |-ImplicitCastExpr 0xf24490 <line:425:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0xf24470 <col:13> 'int' lvalue ParmVar 0xf24300 'model' 'int'
|     `-CompoundStmt 0xf24938 <col:20, line:437:5>
|       |-CaseStmt 0xf24500 <line:426:9, line:427:52>
|       | |-ConstantExpr 0xf244e8 <<built-in>:14:26> 'int'
|       | | `-IntegerLiteral 0xf244c8 <col:26> 'int' 3
|       | `-CallExpr 0xf24710 <main/los_compiler.h:427:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xf246f8 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xf24690 <col:13> '<builtin fn type>' Function 0xf24528 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xf246b0 <<built-in>:14:26> 'int' 3
|       |-BreakStmt 0xf24738 <main/los_compiler.h:428:13>
|       |-CaseStmt 0xf24778 <line:429:9, line:430:52>
|       | |-ConstantExpr 0xf24760 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0xf24740 <col:26> 'int' 4
|       | `-CallExpr 0xf247f8 <main/los_compiler.h:430:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xf247e0 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xf247a0 <col:13> '<builtin fn type>' Function 0xf24528 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xf247c0 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0xf24820 <main/los_compiler.h:431:13>
|       |-CaseStmt 0xf24860 <line:432:9, line:433:52>
|       | |-ConstantExpr 0xf24848 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0xf24828 <col:26> 'int' 5
|       | `-CallExpr 0xf248e0 <main/los_compiler.h:433:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xf248c8 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xf24888 <col:13> '<builtin fn type>' Function 0xf24528 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xf248a8 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0xf24908 <main/los_compiler.h:434:13>
|       `-DefaultStmt 0xf24918 <line:435:9, line:436:13>
|         `-BreakStmt 0xf24910 <col:13>
|-FunctionDecl 0xf24528 <line:427:13> col:13 implicit used __atomic_thread_fence 'void (int)' extern
| |-ParmVarDecl 0xf245c8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0xf24638 <col:13> Implicit
|-FunctionDecl 0xf24a40 <line:440:1, line:455:1> line:440:20 used maybe_acquire_fence 'void (int)' static inline
| |-ParmVarDecl 0xf249b0 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0xf24e68 <line:441:1, line:455:1>
|   `-SwitchStmt 0xf24b20 <line:442:5, line:454:5>
|     |-ImplicitCastExpr 0xf24b08 <line:442:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0xf24ae8 <col:13> 'int' lvalue ParmVar 0xf249b0 'model' 'int'
|     `-CompoundStmt 0xf24e20 <col:20, line:454:5>
|       |-CaseStmt 0xf24b78 <line:443:9, line:444:52>
|       | |-ConstantExpr 0xf24b60 <<built-in>:13:26> 'int'
|       | | `-IntegerLiteral 0xf24b40 <col:26> 'int' 2
|       | `-CallExpr 0xf24bf8 <main/los_compiler.h:444:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xf24be0 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xf24ba0 <col:13> '<builtin fn type>' Function 0xf24528 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xf24bc0 <<built-in>:13:26> 'int' 2
|       |-BreakStmt 0xf24c20 <main/los_compiler.h:445:13>
|       |-CaseStmt 0xf24c60 <line:446:9, line:447:52>
|       | |-ConstantExpr 0xf24c48 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0xf24c28 <col:26> 'int' 4
|       | `-CallExpr 0xf24ce0 <main/los_compiler.h:447:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xf24cc8 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xf24c88 <col:13> '<builtin fn type>' Function 0xf24528 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xf24ca8 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0xf24d08 <main/los_compiler.h:448:13>
|       |-CaseStmt 0xf24d48 <line:449:9, line:450:52>
|       | |-ConstantExpr 0xf24d30 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0xf24d10 <col:26> 'int' 5
|       | `-CallExpr 0xf24dc8 <main/los_compiler.h:450:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xf24db0 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xf24d70 <col:13> '<builtin fn type>' Function 0xf24528 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xf24d90 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0xf24df0 <main/los_compiler.h:451:13>
|       `-DefaultStmt 0xf24e00 <line:452:9, line:453:13>
|         `-BreakStmt 0xf24df8 <col:13>
|-FunctionDecl 0xf25008 <line:458:1, line:472:1> line:458:21 used __libatomic_flag_for_address 'BOOL *(void *)' static inline
| |-ParmVarDecl 0xf24eb8 <col:50, col:56> col:56 used addr 'void *'
| `-CompoundStmt 0xf28780 <line:459:1, line:472:1>
|   |-DeclStmt 0xf26c70 <line:460:5, col:99>
|   | `-VarDecl 0xf266f8 <col:5, col:98> col:17 used flag_table 'BOOL [16]' static cinit
|   |   `-InitListExpr 0xf26a30 <col:51, col:98> 'BOOL [16]'
|   |     |-ImplicitCastExpr 0xf26af0 <col:52> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xf26760 <col:52> 'int' 0
|   |     |-ImplicitCastExpr 0xf26b08 <col:55> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xf26780 <col:55> 'int' 0
|   |     |-ImplicitCastExpr 0xf26b20 <col:58> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xf267a0 <col:58> 'int' 0
|   |     |-ImplicitCastExpr 0xf26b38 <col:61> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xf267c0 <col:61> 'int' 0
|   |     |-ImplicitCastExpr 0xf26b50 <col:64> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xf267e0 <col:64> 'int' 0
|   |     |-ImplicitCastExpr 0xf26b68 <col:67> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xf26800 <col:67> 'int' 0
|   |     |-ImplicitCastExpr 0xf26b80 <col:70> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xf26820 <col:70> 'int' 0
|   |     |-ImplicitCastExpr 0xf26b98 <col:73> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xf26840 <col:73> 'int' 0
|   |     |-ImplicitCastExpr 0xf26bb0 <col:76> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xf26860 <col:76> 'int' 0
|   |     |-ImplicitCastExpr 0xf26bc8 <col:79> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xf26880 <col:79> 'int' 0
|   |     |-ImplicitCastExpr 0xf26be0 <col:82> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xf268a0 <col:82> 'int' 0
|   |     |-ImplicitCastExpr 0xf26bf8 <col:85> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xf268c0 <col:85> 'int' 0
|   |     |-ImplicitCastExpr 0xf26c10 <col:88> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xf268e0 <col:88> 'int' 0
|   |     |-ImplicitCastExpr 0xf26c28 <col:91> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xf26900 <col:91> 'int' 0
|   |     |-ImplicitCastExpr 0xf26c40 <col:94> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xf26920 <col:94> 'int' 0
|   |     `-ImplicitCastExpr 0xf26c58 <col:97> 'BOOL':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0xf26940 <col:97> 'int' 0
|   |-DeclStmt 0xf26e00 <line:461:5, col:41>
|   | `-VarDecl 0xf26cc0 <col:5, col:37> col:13 used p 'UINTPTR':'unsigned int' cinit
|   |   `-CStyleCastExpr 0xf26dd8 <col:17, col:37> 'UINTPTR':'unsigned int' <PointerToIntegral>
|   |     `-CStyleCastExpr 0xf26da0 <col:26, col:37> 'UINTPTR *' <BitCast>
|   |       `-ImplicitCastExpr 0xf26d88 <col:37> 'void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0xf26d28 <col:37> 'void *' lvalue ParmVar 0xf24eb8 'addr' 'void *'
|   |-CompoundAssignOperator 0xf26f88 <line:462:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0xf26e18 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0xf26cc0 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0xf26f68 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0xf26eb0 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0xf26e90 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0xf26e78 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0xf26e38 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0xf26cc0 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0xf26e58 <col:16> 'int' 2
|   |   `-ParenExpr 0xf26f48 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0xf26f28 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0xf26f10 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0xf26ed0 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0xf26cc0 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0xf26ef0 <col:27> 'int' 4
|   |-CompoundAssignOperator 0xf27128 <line:463:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0xf26fb8 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0xf26cc0 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0xf27108 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0xf27050 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0xf27030 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0xf27018 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0xf26fd8 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0xf26cc0 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0xf26ff8 <col:16> 'int' 7
|   |   `-ParenExpr 0xf270e8 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0xf270c8 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0xf270b0 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0xf27070 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0xf26cc0 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0xf27090 <col:27> 'int' 5
|   |-CompoundAssignOperator 0xf272c8 <line:464:5, col:30> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0xf27158 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0xf26cc0 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0xf272a8 <col:10, col:30> 'unsigned int' '+'
|   |   |-ParenExpr 0xf271f0 <col:10, col:18> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0xf271d0 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0xf271b8 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0xf27178 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0xf26cc0 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0xf27198 <col:16> 'int' 17
|   |   `-ParenExpr 0xf27288 <col:22, col:30> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0xf27268 <col:23, col:28> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0xf27250 <col:23> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0xf27210 <col:23> 'UINTPTR':'unsigned int' lvalue Var 0xf26cc0 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0xf27230 <col:28> 'int' 13
|   |-IfStmt 0xf27488 <line:466:5, line:468:5>
|   | |-BinaryOperator 0xf27368 <line:466:9, col:26> 'int' '>'
|   | | |-UnaryExprOrTypeTraitExpr 0xf27310 <col:9, col:22> 'unsigned long' sizeof 'void *'
|   | | `-ImplicitCastExpr 0xf27350 <col:26> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0xf27330 <col:26> 'int' 4
|   | `-CompoundStmt 0xf27470 <col:29, line:468:5>
|   |   `-CompoundAssignOperator 0xf27440 <line:467:9, col:22> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0xf27388 <col:9> 'UINTPTR':'unsigned int' lvalue Var 0xf26cc0 'p' 'UINTPTR':'unsigned int'
|   |     `-ParenExpr 0xf27420 <col:14, col:22> 'UINTPTR':'unsigned int'
|   |       `-BinaryOperator 0xf27400 <col:15, col:20> 'UINTPTR':'unsigned int' '>>'
|   |         |-ImplicitCastExpr 0xf273e8 <col:15> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |         | `-DeclRefExpr 0xf273a8 <col:15> 'UINTPTR':'unsigned int' lvalue Var 0xf26cc0 'p' 'UINTPTR':'unsigned int'
|   |         `-IntegerLiteral 0xf273c8 <col:20> 'int' 31
|   |-CompoundAssignOperator 0xf275b8 <line:470:5, col:34> 'UINTPTR':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0xf274a0 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0xf26cc0 'p' 'UINTPTR':'unsigned int'
|   | `-ImplicitCastExpr 0xf275a0 <col:10, col:34> 'unsigned int' <IntegralCast>
|   |   `-ParenExpr 0xf27580 <col:10, col:34> 'int'
|   |     `-BinaryOperator 0xf27560 <line:457:29, line:470:33> 'int' '-'
|   |       |-ParenExpr 0xf27520 <line:457:29, col:36> 'int'
|   |       | `-BinaryOperator 0xf27500 <col:30, col:35> 'int' '<<'
|   |       |   |-IntegerLiteral 0xf274c0 <col:30> 'int' 1
|   |       |   `-IntegerLiteral 0xf274e0 <col:35> 'int' 4
|   |       `-IntegerLiteral 0xf27540 <line:470:33> 'int' 1
|   `-ReturnStmt 0xf28770 <line:471:5, col:25>
|     `-BinaryOperator 0xf28750 <col:12, col:25> 'BOOL *' '+'
|       |-ImplicitCastExpr 0xf27628 <col:12> 'BOOL *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0xf275e8 <col:12> 'BOOL [16]' lvalue Var 0xf266f8 'flag_table' 'BOOL [16]'
|       `-ImplicitCastExpr 0xf27640 <col:25> 'UINTPTR':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0xf27608 <col:25> 'UINTPTR':'unsigned int' lvalue Var 0xf26cc0 'p' 'UINTPTR':'unsigned int'
|-FunctionDecl 0xf28938 <line:474:1, line:482:1> line:474:20 used get_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0xf287e8 <col:29, col:35> col:35 used addr 'void *'
| |-ParmVarDecl 0xf28868 <col:41, col:45> col:45 used model 'int'
| `-CompoundStmt 0xf28ff0 <line:475:1, line:482:1>
|   |-DeclStmt 0xf28b50 <line:476:5, col:57>
|   | `-VarDecl 0xf289f8 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0xf28b10 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0xf28af8 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0xf28a60 <col:22> 'BOOL *(void *)' Function 0xf25008 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0xf28b38 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0xf28a80 <col:52> 'void *' lvalue ParmVar 0xf287e8 'addr' 'void *'
|   |-CallExpr 0xf28bc0 <line:478:5, col:31> 'void'
|   | |-ImplicitCastExpr 0xf28ba8 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xf28b68 <col:5> 'void (int)' Function 0xf243c8 'maybe_release_fence' 'void (int)'
|   | `-ImplicitCastExpr 0xf28be8 <col:26> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xf28b88 <col:26> 'int' lvalue ParmVar 0xf28868 'model' 'int'
|   `-WhileStmt 0xf28fd8 <line:479:5, line:481:5>
|     |-BinaryOperator 0xf28f98 <line:479:12, col:66> 'int' '=='
|     | |-ImplicitCastExpr 0xf28f80 <col:12, col:61> 'int' <IntegralCast>
|     | | `-CallExpr 0xf28f00 <col:12, col:61> '_Bool'
|     | |   |-ImplicitCastExpr 0xf28ee8 <col:12> '_Bool (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|     | |   | `-DeclRefExpr 0xf28e40 <col:12> '<builtin fn type>' Function 0xf28c68 '__atomic_test_and_set' '_Bool (volatile void *, int)'
|     | |   |-ImplicitCastExpr 0xf28f48 <col:35> 'volatile void *' <BitCast>
|     | |   | `-ImplicitCastExpr 0xf28f30 <col:35> 'BOOL *' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0xf28e60 <col:35> 'BOOL *' lvalue Var 0xf289f8 'lock_ptr' 'BOOL *'
|     | |   `-IntegerLiteral 0xf28e80 <<built-in>:13:26> 'int' 2
|     | `-IntegerLiteral 0xf28f60 <main/los_compiler.h:479:66> 'int' 1
|     `-CompoundStmt 0xf28fc0 <col:69, line:481:5>
|       `-NullStmt 0xf28fb8 <line:480:9>
|-FunctionDecl 0xf28c68 <line:479:12> col:12 implicit used __atomic_test_and_set '_Bool (volatile void *, int)' extern
| |-ParmVarDecl 0xf28d08 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0xf28d70 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0xf28de8 <col:12> Implicit
|-FunctionDecl 0xf29148 <line:484:1, line:490:1> line:484:20 used free_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0xf29030 <col:30, col:36> col:36 used addr 'void *'
| |-ParmVarDecl 0xf290b0 <col:42, col:46> col:46 used model 'int'
| `-CompoundStmt 0xf296e8 <line:485:1, line:490:1>
|   |-DeclStmt 0xf29308 <line:486:5, col:57>
|   | `-VarDecl 0xf29208 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0xf292c8 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0xf292b0 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0xf29270 <col:22> 'BOOL *(void *)' Function 0xf25008 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0xf292f0 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0xf29290 <col:52> 'void *' lvalue ParmVar 0xf29030 'addr' 'void *'
|   |-CallExpr 0xf295f0 <line:488:5, col:47> 'void'
|   | |-ImplicitCastExpr 0xf295d8 <col:5> 'void (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0xf29530 <col:5> '<builtin fn type>' Function 0xf29358 '__atomic_clear' 'void (volatile void *, int)'
|   | |-ImplicitCastExpr 0xf29638 <col:21> 'volatile void *' <BitCast>
|   | | `-ImplicitCastExpr 0xf29620 <col:21> 'BOOL *' <LValueToRValue>
|   | |   `-DeclRefExpr 0xf29550 <col:21> 'BOOL *' lvalue Var 0xf29208 'lock_ptr' 'BOOL *'
|   | `-IntegerLiteral 0xf29570 <<built-in>:14:26> 'int' 3
|   `-CallExpr 0xf296a8 <main/los_compiler.h:489:5, col:31> 'void'
|     |-ImplicitCastExpr 0xf29690 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0xf29650 <col:5> 'void (int)' Function 0xf24a40 'maybe_acquire_fence' 'void (int)'
|     `-ImplicitCastExpr 0xf296d0 <col:26> 'int' <LValueToRValue>
|       `-DeclRefExpr 0xf29670 <col:26> 'int' lvalue ParmVar 0xf290b0 'model' 'int'
|-FunctionDecl 0xf29358 <line:488:5> col:5 implicit used __atomic_clear 'void (volatile void *, int)' extern
| |-ParmVarDecl 0xf293f8 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0xf29460 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0xf294d8 <col:5> Implicit
|-FunctionDecl 0xf2a948 <line:492:1, line:501:1> line:492:23 __atomic_load_8 'UINT64 (const volatile void *, int)' static inline
| |-ParmVarDecl 0xf2a7b0 <col:39, col:60> col:60 used mem 'const volatile void *'
| |-ParmVarDecl 0xf2a830 <col:65, col:69> col:69 used model 'int'
| `-CompoundStmt 0xf2aef8 <line:493:1, line:501:1>
|   |-DeclStmt 0xf2aa70 <line:494:5, col:15>
|   | `-VarDecl 0xf2aa08 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0xf2ab80 <line:496:5, col:29>
|   | `-VarDecl 0xf2aaa0 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0xf2ab58 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0xf2ab40 <col:26> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0xf2ab08 <col:26> 'const volatile void *' lvalue ParmVar 0xf2a7b0 'mem' 'const volatile void *'
|   |-CallExpr 0xf2ac40 <line:497:5, col:26> 'void'
|   | |-ImplicitCastExpr 0xf2ac28 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xf2ab98 <col:5> 'void (void *, int)' Function 0xf28938 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0xf2ac70 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0xf2abb8 <col:15> 'void *' lvalue Var 0xf2aaa0 'memP' 'void *'
|   | `-ImplicitCastExpr 0xf2ac88 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xf2abd8 <col:21> 'int' lvalue ParmVar 0xf2a830 'model' 'int'
|   |-BinaryOperator 0xf2adb8 <line:498:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0xf2aca0 <col:5> 'UINT64':'unsigned long long' lvalue Var 0xf2aa08 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0xf2ada0 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0xf2ad88 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0xf2ad60 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0xf2ad48 <col:22> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0xf2ad18 <col:22> 'const volatile void *' lvalue ParmVar 0xf2a7b0 'mem' 'const volatile void *'
|   |-CallExpr 0xf2ae50 <line:499:5, col:27> 'void'
|   | |-ImplicitCastExpr 0xf2ae38 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xf2add8 <col:5> 'void (void *, int)' Function 0xf29148 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0xf2ae80 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0xf2adf8 <col:16> 'void *' lvalue Var 0xf2aaa0 'memP' 'void *'
|   | `-ImplicitCastExpr 0xf2ae98 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xf2ae18 <col:22> 'int' lvalue ParmVar 0xf2a830 'model' 'int'
|   `-ReturnStmt 0xf2aee8 <line:500:5, col:12>
|     `-ImplicitCastExpr 0xf2aed0 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0xf2aeb0 <col:12> 'UINT64':'unsigned long long' lvalue Var 0xf2aa08 'ret' 'UINT64':'unsigned long long'
|-FunctionDecl 0xf2b168 <line:503:1, line:509:1> line:503:20 __atomic_store_8 'void (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0xf2af50 <col:37, col:52> col:52 used mem 'volatile void *'
| |-ParmVarDecl 0xf2afc8 <col:57, col:64> col:64 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xf2b048 <col:69, col:73> col:73 used model 'int'
| `-CompoundStmt 0xf2b5c0 <line:504:1, line:509:1>
|   |-DeclStmt 0xf2b318 <line:505:5, col:29>
|   | `-VarDecl 0xf2b238 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0xf2b2f0 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0xf2b2d8 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0xf2b2a0 <col:26> 'volatile void *' lvalue ParmVar 0xf2af50 'mem' 'volatile void *'
|   |-CallExpr 0xf2b3a8 <line:506:5, col:26> 'void'
|   | |-ImplicitCastExpr 0xf2b390 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xf2b330 <col:5> 'void (void *, int)' Function 0xf28938 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0xf2b3d8 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0xf2b350 <col:15> 'void *' lvalue Var 0xf2b238 'memP' 'void *'
|   | `-ImplicitCastExpr 0xf2b3f0 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xf2b370 <col:21> 'int' lvalue ParmVar 0xf2b048 'model' 'int'
|   |-BinaryOperator 0xf2b4c8 <line:507:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0xf2b478 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0xf2b450 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0xf2b438 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0xf2b408 <col:16> 'volatile void *' lvalue ParmVar 0xf2af50 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0xf2b4b0 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0xf2b490 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0xf2afc8 'val' 'UINT64':'unsigned long long'
|   `-CallExpr 0xf2b560 <line:508:5, col:27> 'void'
|     |-ImplicitCastExpr 0xf2b548 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0xf2b4e8 <col:5> 'void (void *, int)' Function 0xf29148 'free_lock' 'void (void *, int)'
|     |-ImplicitCastExpr 0xf2b590 <col:16> 'void *' <LValueToRValue>
|     | `-DeclRefExpr 0xf2b508 <col:16> 'void *' lvalue Var 0xf2b238 'memP' 'void *'
|     `-ImplicitCastExpr 0xf2b5a8 <col:22> 'int' <LValueToRValue>
|       `-DeclRefExpr 0xf2b528 <col:22> 'int' lvalue ParmVar 0xf2b048 'model' 'int'
|-FunctionDecl 0xf2b838 <line:511:1, line:521:1> line:511:22 __atomic_exchange_8 'UINT64 (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0xf2b608 <col:42, col:57> col:57 used mem 'volatile void *'
| |-ParmVarDecl 0xf2b680 <col:62, col:69> col:69 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xf2b700 <col:74, col:78> col:78 used model 'int'
| `-CompoundStmt 0xf2be78 <line:512:1, line:521:1>
|   |-DeclStmt 0xf2b968 <line:513:5, col:15>
|   | `-VarDecl 0xf2b900 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0xf2ba78 <line:515:5, col:29>
|   | `-VarDecl 0xf2b998 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0xf2ba50 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0xf2ba38 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0xf2ba00 <col:26> 'volatile void *' lvalue ParmVar 0xf2b608 'mem' 'volatile void *'
|   |-CallExpr 0xf2bb08 <line:516:5, col:26> 'void'
|   | |-ImplicitCastExpr 0xf2baf0 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xf2ba90 <col:5> 'void (void *, int)' Function 0xf28938 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0xf2bb38 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0xf2bab0 <col:15> 'void *' lvalue Var 0xf2b998 'memP' 'void *'
|   | `-ImplicitCastExpr 0xf2bb50 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xf2bad0 <col:21> 'int' lvalue ParmVar 0xf2b700 'model' 'int'
|   |-BinaryOperator 0xf2bc28 <line:517:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0xf2bb68 <col:5> 'UINT64':'unsigned long long' lvalue Var 0xf2b900 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0xf2bc10 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0xf2bbf8 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0xf2bbd0 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0xf2bbb8 <col:22> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0xf2bb88 <col:22> 'volatile void *' lvalue ParmVar 0xf2b608 'mem' 'volatile void *'
|   |-BinaryOperator 0xf2bd08 <line:518:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0xf2bcb8 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0xf2bc90 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0xf2bc78 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0xf2bc48 <col:16> 'volatile void *' lvalue ParmVar 0xf2b608 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0xf2bcf0 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0xf2bcd0 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0xf2b680 'val' 'UINT64':'unsigned long long'
|   |-CallExpr 0xf2bda0 <line:519:5, col:27> 'void'
|   | |-ImplicitCastExpr 0xf2bd88 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xf2bd28 <col:5> 'void (void *, int)' Function 0xf29148 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0xf2bdd0 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0xf2bd48 <col:16> 'void *' lvalue Var 0xf2b998 'memP' 'void *'
|   | `-ImplicitCastExpr 0xf2bde8 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xf2bd68 <col:22> 'int' lvalue ParmVar 0xf2b700 'model' 'int'
|   `-ReturnStmt 0xf2be38 <line:520:5, col:12>
|     `-ImplicitCastExpr 0xf2be20 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0xf2be00 <col:12> 'UINT64':'unsigned long long' lvalue Var 0xf2b900 'ret' 'UINT64':'unsigned long long'
|-VarDecl 0xf2bed0 <main/target_config.h:100:1, col:16> col:16 __heap_start 'UINTPTR':'unsigned int' extern
|-VarDecl 0xf2c658 <main/los_config.h:419:1, col:15> col:15 m_aucSysMem0 'UINT8 *' extern
|-TypedefDecl 0xf34008 <main/los_interrupt.h:44:1, col:16> col:16 referenced HWI_HANDLE_T 'UINT32':'unsigned int'
| `-TypedefType 0xf1c810 'UINT32' sugar
|   |-Typedef 0xf1c140 'UINT32'
|   `-BuiltinType 0xeb3e70 'unsigned int'
|-TypedefDecl 0xf34090 <line:46:1, col:16> col:16 referenced HWI_PRIOR_T 'UINT16':'unsigned short'
| `-TypedefType 0xf34060 'UINT16' sugar
|   |-Typedef 0xf1c0d0 'UINT16'
|   `-BuiltinType 0xeb3e50 'unsigned short'
|-TypedefDecl 0xf340f8 <line:48:1, col:16> col:16 referenced HWI_MODE_T 'UINT16':'unsigned short'
| `-TypedefType 0xf34060 'UINT16' sugar
|   |-Typedef 0xf1c0d0 'UINT16'
|   `-BuiltinType 0xeb3e50 'unsigned short'
|-TypedefDecl 0xf34160 <line:50:1, col:16> col:16 HWI_ARG_T 'UINT32':'unsigned int'
| `-TypedefType 0xf1c810 'UINT32' sugar
|   |-Typedef 0xf1c140 'UINT32'
|   `-BuiltinType 0xeb3e70 'unsigned int'
|-TypedefDecl 0xf34318 <line:55:1, col:35> col:16 referenced HWI_PROC_FUNC 'void (*)(void)'
| `-PointerType 0xf342c0 'void (*)(void)'
|   `-ParenType 0xf34260 'void (void)' sugar
|     `-FunctionProtoType 0xf34230 'void (void)' cdecl
|       `-BuiltinType 0xeb3d30 'void'
|-RecordDecl 0xf34370 <line:57:9, line:61:1> line:57:16 struct tagIrqParam definition
| |-FieldDecl 0xf34428 <line:58:5, col:9> col:9 swIrq 'int'
| | `-FullComment 0xfb8c90 <col:28, col:49>
| |   `-ParagraphComment 0xfb8c60 <col:28, col:49>
| |     `-TextComment 0xfb8c30 <col:28, col:49> Text=" The interrupt number "
| |-FieldDecl 0xf344c0 <main/los_compiler.h:327:23, main/los_interrupt.h:59:11> col:11 pDevId 'void *'
| | `-FullComment 0xfb8d60 <col:28, col:85>
| |   `-ParagraphComment 0xfb8d30 <col:28, col:85>
| |     `-TextComment 0xfb8d00 <col:28, col:85> Text=" The pointer to the device ID that launches the interrupt "
| `-FieldDecl 0xf34598 <line:60:5, col:17> col:17 pName 'const CHAR *'
|   `-FullComment 0xfb8e30 <col:28, col:47>
|     `-ParagraphComment 0xfb8e00 <col:28, col:47>
|       `-TextComment 0xfb8dd0 <col:28, col:47> Text=" The interrupt name "
|-TypedefDecl 0xf34678 <line:57:1, line:61:3> col:3 referenced HwiIrqParam 'struct tagIrqParam':'struct tagIrqParam'
| `-ElaboratedType 0xf34620 'struct tagIrqParam' sugar
|   `-RecordType 0xf343f0 'struct tagIrqParam'
|     `-Record 0xf34370 'tagIrqParam'
|-RecordDecl 0xf346e8 <line:63:9, line:70:1> line:63:9 struct definition
| |-FieldDecl 0xf34950 <line:64:5, col:45> col:14 referenced triggerIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0xf34a50 <line:65:5, col:43> col:14 referenced clearIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0xf34b50 <line:66:5, col:44> col:14 referenced enableIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0xf3a790 <line:67:5, col:45> col:14 referenced disableIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0xf3aa18 <line:68:5, col:65> col:14 referenced setIrqPriority 'UINT32 (*)(HWI_HANDLE_T, UINT8)'
| `-FieldDecl 0xf3abf8 <line:69:5, col:32> col:14 referenced getCurIrqNum 'UINT32 (*)(void)'
|-TypedefDecl 0xf3aca8 <line:63:1, line:70:3> col:3 referenced HwiControllerOps 'struct HwiControllerOps':'HwiControllerOps'
| `-ElaboratedType 0xf3ac50 'struct HwiControllerOps' sugar
|   `-RecordType 0xf34770 'HwiControllerOps'
|     `-Record 0xf346e8 ''
|-VarDecl 0xf3ad50 <line:72:1, col:25> col:25 used g_archHwiOps 'HwiControllerOps':'HwiControllerOps' extern
|-VarDecl 0xf3adc8 <line:75:1, col:15> col:15 __stack_chk_guard 'UINT32':'unsigned int' extern
|-FunctionDecl 0xf3aec8 <line:77:1, col:34> col:13 __stack_chk_fail 'void (void)' extern
|-FunctionDecl 0xf3b000 <line:79:1, col:28> col:8 ArchIsIntActive 'UINT32 (void)'
|-FunctionDecl 0xf3b138 <line:91:1, col:24> col:8 ArchIntLock 'UINT32 (void)'
|-FunctionDecl 0xf3b278 <line:93:1, col:37> col:8 HwiUnmask 'UINT32 (HWI_HANDLE_T)'
| `-ParmVarDecl 0xf3b1e8 <col:18, col:31> col:31 hwiNum 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xf3b3c0 <line:94:1, col:35> col:8 HwiMask 'UINT32 (HWI_HANDLE_T)'
| `-ParmVarDecl 0xf3b330 <col:16, col:29> col:29 hwiNum 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xf3b568 <main/los_compiler.h:327:23, main/los_interrupt.h:95:35> col:6 ArchIntRestore 'void (UINT32)'
| `-ParmVarDecl 0xf3b478 <col:21, col:28> col:28 intSave 'UINT32':'unsigned int'
|-FunctionDecl 0xf3df20 <line:98:1, col:26> col:8 ArchIntUnLock 'UINT32 (void)'
|-FunctionDecl 0xf3e1f8 <line:127:1, col:64> col:8 ArchHwiDelete 'UINT32 (HWI_HANDLE_T, HwiIrqParam *)'
| |-ParmVarDecl 0xf3dff8 <col:22, col:35> col:35 hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0xf3e0e8 <col:43, col:56> col:56 irqParam 'HwiIrqParam *'
| `-FullComment 0xfbb460 <line:104:3, line:125:13>
|   |-ParagraphComment 0xfb8ed0 <line:104:3>
|   | `-TextComment 0xfb8ea0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfb8ef0 <col:4, col:27> Text="  los_interrupt"
|   |-ParagraphComment 0xfb8f60 <line:105:3>
|   | `-TextComment 0xfb8f30 <col:3> Text=" "
|   |-BlockCommandComment 0xfb8f80 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0xfb8fe0 <col:10, col:36>
|   |   `-TextComment 0xfb8fb0 <col:10, col:36> Text=" Delete hardware interrupt."
|   |-ParagraphComment 0xfb9030 <line:107:3>
|   | `-TextComment 0xfb9000 <col:3> Text=" "
|   |-BlockCommandComment 0xfb9050 <col:4, line:108:49> Name="par"
|   | `-ParagraphComment 0xfb90d0 <line:107:8, line:108:49>
|   |   |-TextComment 0xfb9080 <line:107:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfb90a0 <line:108:3, col:49> Text=" This API is used to delete hardware interrupt."
|   |-ParagraphComment 0xfb9120 <line:110:3>
|   | `-TextComment 0xfb90f0 <col:3> Text=" "
|   |-BlockCommandComment 0xfb9140 <col:4, line:116:8> Name="attention"
|   | `-ParagraphComment 0xfbadf0 <line:111:3, line:116:8>
|   |   |-TextComment 0xfba9e0 <line:111:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbaa00 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfbaa40 <line:112:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbaa60 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfbaaa0 <col:8, col:124> Text="The hardware interrupt module is usable only when the configuration item for hardware interrupt tailoring is enabled."
|   |   |-HTMLEndTagComment 0xfbaac0 <col:125, col:129> Name="li"
|   |   |-TextComment 0xfbaaf0 <line:113:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbab10 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfbab50 <col:8, col:144> Text="Hardware interrupt number value range: [OS_USER_HWI_MIN,OS_USER_HWI_MAX]. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   |-HTMLEndTagComment 0xfbab70 <col:145, col:149> Name="li"
|   |   |-TextComment 0xfbaba0 <line:114:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbabc0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfbac00 <col:8, col:85> Text="OS_HWI_MAX_NUM specifies the maximum number of interrupts that can be created."
|   |   |-HTMLEndTagComment 0xfbac20 <col:86, col:90> Name="li"
|   |   |-TextComment 0xfbac50 <line:115:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbac70 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfbacb0 <col:8, col:93> Text="Before executing an interrupt on a platform, refer to the chip manual of the platform."
|   |   |-HTMLEndTagComment 0xfbacd0 <col:94, col:98> Name="li"
|   |   |-TextComment 0xfbad00 <line:116:3> Text=" "
|   |   `-HTMLEndTagComment 0xfbad20 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfbae40 <line:118:3>
|   | `-TextComment 0xfbae10 <col:3> Text=" "
|   |-ParamCommandComment 0xfbae60 <col:4, line:119:3> [in] implicitly Param="hwiNum" ParamIndex=0
|   | `-ParagraphComment 0xfbaf10 <line:118:18, line:119:3>
|   |   |-TextComment 0xfbaec0 <line:118:18, col:134> Text="   [IN] Type#HWI_HANDLE_T: hardware interrupt number. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   `-TextComment 0xfbaee0 <line:119:3> Text=" "
|   |-ParamCommandComment 0xfbaf30 <col:4, line:121:3> [in] implicitly Param="irqParam" ParamIndex=1
|   | `-ParagraphComment 0xfbb010 <line:119:20, line:121:3>
|   |   |-TextComment 0xfbaf90 <line:119:20, col:89> Text=" [IN] Type #HwiIrqParam *. ID of hardware interrupt which will base on"
|   |   |-TextComment 0xfbafb0 <line:120:3, col:85> Text="                                                when delete the hardware interrupt."
|   |   `-TextComment 0xfbafd0 <line:121:3> Text=" "
|   |-BlockCommandComment 0xfbb030 <col:4, line:122:3> Name="retval"
|   | `-ParagraphComment 0xfbb0b0 <line:121:11, line:122:3>
|   |   |-TextComment 0xfbb060 <line:121:11, col:87> Text=" #OS_ERRNO_HWI_NUM_INVALID              0x02000900: Invalid interrupt number."
|   |   `-TextComment 0xfbb080 <line:122:3> Text=" "
|   |-BlockCommandComment 0xfbb0d0 <col:4, line:123:3> Name="retval"
|   | `-ParagraphComment 0xfbb150 <line:122:11, line:123:3>
|   |   |-TextComment 0xfbb100 <line:122:11, col:99> Text=" #LOS_OK                                0         : The interrupt is successfully delete."
|   |   `-TextComment 0xfbb120 <line:123:3> Text=" "
|   |-BlockCommandComment 0xfbb170 <col:4, line:125:3> Name="par"
|   | `-ParagraphComment 0xfbb340 <line:123:8, line:125:3>
|   |   |-TextComment 0xfbb1a0 <line:123:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfbb1c0 <line:124:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbb1e0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfbb220 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfbb260 <col:12, col:78> Text="los_interrupt.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfbb280 <col:79, col:83> Name="li"
|   |   |-HTMLEndTagComment 0xfbb2b0 <col:84, col:88> Name="ul"
|   |   `-TextComment 0xfbb2e0 <line:125:3> Text=" "
|   `-BlockCommandComment 0xfbb360 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xfbb3c0 <col:8, col:13>
|       `-TextComment 0xfbb390 <col:8, col:13> Text=" None."
|-FunctionDecl 0xf3e688 <line:160:1, line:164:43> line:160:8 ArchHwiCreate 'UINT32 (HWI_HANDLE_T, HWI_PRIOR_T, HWI_MODE_T, HWI_PROC_FUNC, HwiIrqParam *)'
| |-ParmVarDecl 0xf3e2e8 <col:22, col:35> col:35 hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0xf3e380 <line:161:22, col:34> col:34 hwiPrio 'HWI_PRIOR_T':'unsigned short'
| |-ParmVarDecl 0xf3e420 <line:162:22, col:33> col:33 mode 'HWI_MODE_T':'unsigned short'
| |-ParmVarDecl 0xf3e4c0 <line:163:22, col:36> col:36 handler 'HWI_PROC_FUNC':'void (*)(void)'
| |-ParmVarDecl 0xf3e538 <line:164:22, col:35> col:35 irqParam 'HwiIrqParam *'
| `-FullComment 0xfbc6d0 <line:130:3, line:158:13>
|   |-ParagraphComment 0xfbb500 <line:130:3>
|   | `-TextComment 0xfbb4d0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfbb520 <col:4, col:27> Text="  los_interrupt"
|   |-ParagraphComment 0xfbb590 <line:131:3>
|   | `-TextComment 0xfbb560 <col:3> Text=" "
|   |-BlockCommandComment 0xfbb5b0 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0xfbb610 <col:10, col:38>
|   |   `-TextComment 0xfbb5e0 <col:10, col:38> Text=" Create a hardware interrupt."
|   |-ParagraphComment 0xfbb660 <line:133:3>
|   | `-TextComment 0xfbb630 <col:3> Text=" "
|   |-BlockCommandComment 0xfbb680 <col:4, line:134:106> Name="par"
|   | `-ParagraphComment 0xfbb700 <line:133:8, line:134:106>
|   |   |-TextComment 0xfbb6b0 <line:133:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfbb6d0 <line:134:3, col:106> Text=" This API is used to configure a hardware interrupt and register a hardware interrupt handling function."
|   |-ParagraphComment 0xfbb750 <line:136:3>
|   | `-TextComment 0xfbb720 <col:3> Text=" "
|   |-BlockCommandComment 0xfbb770 <col:4, line:142:8> Name="attention"
|   | `-ParagraphComment 0xfbbbc0 <line:137:3, line:142:8>
|   |   |-TextComment 0xfbb7a0 <line:137:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbb7c0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfbb800 <line:138:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbb820 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfbb860 <col:8, col:124> Text="The hardware interrupt module is usable only when the configuration item for hardware interrupt tailoring is enabled."
|   |   |-HTMLEndTagComment 0xfbb880 <col:125, col:129> Name="li"
|   |   |-TextComment 0xfbb8b0 <line:139:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbb8d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfbb910 <col:8, col:144> Text="Hardware interrupt number value range: [OS_USER_HWI_MIN,OS_USER_HWI_MAX]. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   |-HTMLEndTagComment 0xfbb930 <col:145, col:149> Name="li"
|   |   |-TextComment 0xfbb960 <line:140:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbb980 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfbb9c0 <col:8, col:85> Text="OS_HWI_MAX_NUM specifies the maximum number of interrupts that can be created."
|   |   |-HTMLEndTagComment 0xfbb9f0 <col:86, col:90> Name="li"
|   |   |-TextComment 0xfbba20 <line:141:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbba40 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfbba80 <col:8, col:93> Text="Before executing an interrupt on a platform, refer to the chip manual of the platform."
|   |   |-HTMLEndTagComment 0xfbbaa0 <col:94, col:98> Name="li"
|   |   |-TextComment 0xfbbad0 <line:142:3> Text=" "
|   |   `-HTMLEndTagComment 0xfbbaf0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfbbc10 <line:144:3>
|   | `-TextComment 0xfbbbe0 <col:3> Text=" "
|   |-ParamCommandComment 0xfbbc30 <col:4, line:145:3> [in] implicitly Param="hwiNum" ParamIndex=0
|   | `-ParagraphComment 0xfbbce0 <line:144:18, line:145:3>
|   |   |-TextComment 0xfbbc90 <line:144:18, col:134> Text="   [IN] Type#HWI_HANDLE_T: hardware interrupt number. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   `-TextComment 0xfbbcb0 <line:145:3> Text=" "
|   |-ParamCommandComment 0xfbbd00 <col:4, line:146:3> [in] implicitly Param="hwiPrio" ParamIndex=1
|   | `-ParagraphComment 0xfbbdb0 <line:145:19, line:146:3>
|   |   |-TextComment 0xfbbd60 <line:145:19, col:106> Text="  [IN] Type#HWI_PRIOR_T: hardware interrupt priority. Ignore this parameter temporarily."
|   |   `-TextComment 0xfbbd80 <line:146:3> Text=" "
|   |-ParamCommandComment 0xfbbdd0 <col:4, line:147:3> [in] implicitly Param="mode" ParamIndex=2
|   | `-ParagraphComment 0xfbbe80 <line:146:16, line:147:3>
|   |   |-TextComment 0xfbbe30 <line:146:16, col:101> Text="     [IN] Type#HWI_MODE_T: hardware interrupt mode. Ignore this parameter temporarily."
|   |   `-TextComment 0xfbbe50 <line:147:3> Text=" "
|   |-ParamCommandComment 0xfbbea0 <col:4, line:148:3> [in] implicitly Param="handler" ParamIndex=3
|   | `-ParagraphComment 0xfbbf50 <line:147:19, line:148:3>
|   |   |-TextComment 0xfbbf00 <line:147:19, col:107> Text="  [IN] Type#HWI_PROC_FUNC: interrupt handler used when a hardware interrupt is triggered."
|   |   `-TextComment 0xfbbf20 <line:148:3> Text=" "
|   |-ParamCommandComment 0xfbbf70 <col:4, line:149:95> [in] implicitly Param="irqParam" ParamIndex=4
|   | `-ParagraphComment 0xfbc020 <line:148:20, line:149:95>
|   |   |-TextComment 0xfbbfd0 <line:148:20, col:75> Text=" [IN] Type#HwiIrqParam: input parameter of the interrupt"
|   |   `-TextComment 0xfbbff0 <line:149:3, col:95> Text="                                         handler used when a hardware interrupt is triggered."
|   |-ParagraphComment 0xfbc070 <line:151:3>
|   | `-TextComment 0xfbc040 <col:3> Text=" "
|   |-BlockCommandComment 0xfbc090 <col:4, line:152:3> Name="retval"
|   | `-ParagraphComment 0xfbc110 <line:151:11, line:152:3>
|   |   |-TextComment 0xfbc0c0 <line:151:11, col:108> Text=" #OS_ERRNO_HWI_PROC_FUNC_NULL               0x02000901: Null hardware interrupt handling function."
|   |   `-TextComment 0xfbc0e0 <line:152:3> Text=" "
|   |-BlockCommandComment 0xfbc130 <col:4, line:153:3> Name="retval"
|   | `-ParagraphComment 0xfbc1b0 <line:152:11, line:153:3>
|   |   |-TextComment 0xfbc160 <line:152:11, col:91> Text=" #OS_ERRNO_HWI_NUM_INVALID                  0x02000900: Invalid interrupt number."
|   |   `-TextComment 0xfbc180 <line:153:3> Text=" "
|   |-BlockCommandComment 0xfbc1d0 <col:4, line:154:3> Name="retval"
|   | `-ParagraphComment 0xfbc250 <line:153:11, line:154:3>
|   |   |-TextComment 0xfbc200 <line:153:11, col:118> Text=" #OS_ERRNO_HWI_NO_MEMORY                    0x02000903: Insufficient memory for hardware interrupt creation."
|   |   `-TextComment 0xfbc220 <line:154:3> Text=" "
|   |-BlockCommandComment 0xfbc270 <col:4, line:155:3> Name="retval"
|   | `-ParagraphComment 0xfbc2f0 <line:154:11, line:155:3>
|   |   |-TextComment 0xfbc2a0 <line:154:11, col:127> Text=" #OS_ERRNO_HWI_ALREADY_CREATED              0x02000904: The interrupt handler being created has already been created."
|   |   `-TextComment 0xfbc2c0 <line:155:3> Text=" "
|   |-BlockCommandComment 0xfbc310 <col:4, line:156:3> Name="retval"
|   | `-ParagraphComment 0xfbc390 <line:155:11, line:156:3>
|   |   |-TextComment 0xfbc340 <line:155:11, col:104> Text=" #LOS_OK                                    0         : The interrupt is successfully created."
|   |   `-TextComment 0xfbc360 <line:156:3> Text=" "
|   |-BlockCommandComment 0xfbc3b0 <col:4, line:158:3> Name="par"
|   | `-ParagraphComment 0xfbc580 <line:156:8, line:158:3>
|   |   |-TextComment 0xfbc3e0 <line:156:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfbc400 <line:157:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbc420 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfbc460 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfbc4a0 <col:12, col:78> Text="los_interrupt.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfbc4c0 <col:79, col:83> Name="li"
|   |   |-HTMLEndTagComment 0xfbc4f0 <col:84, col:88> Name="ul"
|   |   `-TextComment 0xfbc520 <line:158:3> Text=" "
|   `-BlockCommandComment 0xfbc5a0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xfbc600 <col:8, col:13>
|       `-TextComment 0xfbc5d0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xf3e7f0 <main/los_compiler.h:158:22, main/los_interrupt.h:172:1> line:166:22 ArchIntTrigger 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0xf3e760 <col:37, col:50> col:50 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0xf3ebf8 <line:167:1, line:172:1>
|   |-IfStmt 0xf3eb08 <line:168:5, line:170:5>
|   | |-BinaryOperator 0xf3e998 <line:168:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xf3e968 <main/los_interrupt.h:168:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0xf3e8b8 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .triggerIrq 0xf34950
|   | | |   `-DeclRefExpr 0xf3e898 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xf3ad50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xf3e980 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0xf3e948 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xf3e920 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xf3e8e8 <col:31> 'int' 0
|   | `-CompoundStmt 0xf3eaf0 <main/los_interrupt.h:168:42, line:170:5>
|   |   `-ReturnStmt 0xf3eae0 <line:169:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xf3eab8 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xf3ea98 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xf3ea50 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xf3ea30 <col:33> 'int' 1
|   `-ReturnStmt 0xf3ebe8 <main/los_interrupt.h:171:5, col:42>
|     `-CallExpr 0xf3eba8 <col:12, col:42> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0xf3eb90 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0xf3eb40 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .triggerIrq 0xf34950
|       |   `-DeclRefExpr 0xf3eb20 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xf3ad50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0xf3ebd0 <col:36> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0xf3eb70 <col:36> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0xf3e760 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xf3ecb8 <main/los_compiler.h:158:22, main/los_interrupt.h:180:1> line:174:22 ArchIntEnable 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0xf3ec28 <col:36, col:49> col:49 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0xf3f9b0 <line:175:1, line:180:1>
|   |-IfStmt 0xf3f8c0 <line:176:5, line:178:5>
|   | |-BinaryOperator 0xf3ee60 <line:176:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xf3ee30 <main/los_interrupt.h:176:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0xf3ed80 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .enableIrq 0xf34b50
|   | | |   `-DeclRefExpr 0xf3ed60 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xf3ad50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xf3ee48 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0xf3ee10 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xf3ede8 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xf3edb0 <col:31> 'int' 0
|   | `-CompoundStmt 0xf3f8a8 <main/los_interrupt.h:176:41, line:178:5>
|   |   `-ReturnStmt 0xf3f898 <line:177:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xf3f870 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xf3eee8 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xf3eea0 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xf3ee80 <col:33> 'int' 1
|   `-ReturnStmt 0xf3f9a0 <main/los_interrupt.h:179:5, col:41>
|     `-CallExpr 0xf3f960 <col:12, col:41> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0xf3f948 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0xf3f8f8 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .enableIrq 0xf34b50
|       |   `-DeclRefExpr 0xf3f8d8 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xf3ad50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0xf3f988 <col:35> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0xf3f928 <col:35> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0xf3ec28 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xf3fa70 <main/los_compiler.h:158:22, main/los_interrupt.h:188:1> line:182:22 ArchIntDisable 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0xf3f9e0 <col:37, col:50> col:50 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0xf3fe00 <line:183:1, line:188:1>
|   |-IfStmt 0xf3fd10 <line:184:5, line:186:5>
|   | |-BinaryOperator 0xf3fc18 <line:184:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xf3fbe8 <main/los_interrupt.h:184:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0xf3fb38 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .disableIrq 0xf3a790
|   | | |   `-DeclRefExpr 0xf3fb18 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xf3ad50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xf3fc00 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0xf3fbc8 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xf3fba0 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xf3fb68 <col:31> 'int' 0
|   | `-CompoundStmt 0xf3fcf8 <main/los_interrupt.h:184:42, line:186:5>
|   |   `-ReturnStmt 0xf3fce8 <line:185:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xf3fcc0 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xf3fca0 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xf3fc58 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xf3fc38 <col:33> 'int' 1
|   `-ReturnStmt 0xf3fdf0 <main/los_interrupt.h:187:5, col:42>
|     `-CallExpr 0xf3fdb0 <col:12, col:42> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0xf3fd98 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0xf3fd48 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .disableIrq 0xf3a790
|       |   `-DeclRefExpr 0xf3fd28 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xf3ad50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0xf3fdd8 <col:36> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0xf3fd78 <col:36> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0xf3f9e0 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xf3fec0 <main/los_compiler.h:158:22, main/los_interrupt.h:196:1> line:190:22 ArchIntClear 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0xf3fe30 <col:35, col:48> col:48 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0xf40250 <line:191:1, line:196:1>
|   |-IfStmt 0xf40160 <line:192:5, line:194:5>
|   | |-BinaryOperator 0xf40068 <line:192:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xf40038 <main/los_interrupt.h:192:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0xf3ff88 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .clearIrq 0xf34a50
|   | | |   `-DeclRefExpr 0xf3ff68 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xf3ad50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xf40050 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0xf40018 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xf3fff0 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xf3ffb8 <col:31> 'int' 0
|   | `-CompoundStmt 0xf40148 <main/los_interrupt.h:192:40, line:194:5>
|   |   `-ReturnStmt 0xf40138 <line:193:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xf40110 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xf400f0 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xf400a8 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xf40088 <col:33> 'int' 1
|   `-ReturnStmt 0xf40240 <main/los_interrupt.h:195:5, col:40>
|     `-CallExpr 0xf40200 <col:12, col:40> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0xf401e8 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0xf40198 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .clearIrq 0xf34a50
|       |   `-DeclRefExpr 0xf40178 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xf3ad50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0xf40228 <col:34> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0xf401c8 <col:34> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0xf3fe30 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xf40408 <main/los_compiler.h:158:22, main/los_interrupt.h:204:1> line:198:22 ArchIntSetPriority 'UINT32 (HWI_HANDLE_T, HWI_PRIOR_T)' static inline
| |-ParmVarDecl 0xf40280 <col:41, col:54> col:54 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0xf402f8 <col:62, col:74> col:74 used priority 'HWI_PRIOR_T':'unsigned short'
| `-CompoundStmt 0xf407f8 <line:199:1, line:204:1>
|   |-IfStmt 0xf406b0 <line:200:5, line:202:5>
|   | |-BinaryOperator 0xf405b8 <line:200:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xf40588 <main/los_interrupt.h:200:9, col:22> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <LValueToRValue>
|   | | | `-MemberExpr 0xf404d8 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' lvalue .setIrqPriority 0xf3aa18
|   | | |   `-DeclRefExpr 0xf404b8 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xf3ad50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xf405a0 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <BitCast>
|   | |   `-ParenExpr 0xf40568 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xf40540 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xf40508 <col:31> 'int' 0
|   | `-CompoundStmt 0xf40698 <main/los_interrupt.h:200:46, line:202:5>
|   |   `-ReturnStmt 0xf40688 <line:201:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xf40660 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xf40640 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xf405f8 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xf405d8 <col:33> 'int' 1
|   `-ReturnStmt 0xf407e8 <main/los_interrupt.h:203:5, col:56>
|     `-CallExpr 0xf40770 <col:12, col:56> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0xf40758 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <LValueToRValue>
|       | `-MemberExpr 0xf406e8 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' lvalue .setIrqPriority 0xf3aa18
|       |   `-DeclRefExpr 0xf406c8 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xf3ad50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       |-ImplicitCastExpr 0xf407a0 <col:40> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0xf40718 <col:40> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0xf40280 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|       `-ImplicitCastExpr 0xf407d0 <col:48> 'UINT8':'unsigned char' <IntegralCast>
|         `-ImplicitCastExpr 0xf407b8 <col:48> 'HWI_PRIOR_T':'unsigned short' <LValueToRValue>
|           `-DeclRefExpr 0xf40738 <col:48> 'HWI_PRIOR_T':'unsigned short' lvalue ParmVar 0xf402f8 'priority' 'HWI_PRIOR_T':'unsigned short'
|-FunctionDecl 0xf420f8 <main/los_compiler.h:158:22, main/los_interrupt.h:212:1> line:206:22 ArchIntCurIrqNum 'UINT32 (void)' static inline
| `-CompoundStmt 0xf42440 <line:207:1, line:212:1>
|   |-IfStmt 0xf42390 <line:208:5, line:210:5>
|   | |-BinaryOperator 0xf42298 <line:208:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xf42268 <main/los_interrupt.h:208:9, col:22> 'UINT32 (*)(void)' <LValueToRValue>
|   | | | `-MemberExpr 0xf421b8 <col:9, col:22> 'UINT32 (*)(void)' lvalue .getCurIrqNum 0xf3abf8
|   | | |   `-DeclRefExpr 0xf42198 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xf3ad50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xf42280 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(void)' <BitCast>
|   | |   `-ParenExpr 0xf42248 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xf42220 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xf421e8 <col:31> 'int' 0
|   | `-CompoundStmt 0xf42378 <main/los_interrupt.h:208:44, line:210:5>
|   |   `-ReturnStmt 0xf42368 <line:209:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xf42340 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xf42320 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xf422d8 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xf422b8 <col:33> 'int' 1
|   `-ReturnStmt 0xf42430 <main/los_interrupt.h:211:5, col:38>
|     `-CallExpr 0xf42410 <col:12, col:38> 'UINT32':'unsigned int'
|       `-ImplicitCastExpr 0xf423f8 <col:12, col:25> 'UINT32 (*)(void)' <LValueToRValue>
|         `-MemberExpr 0xf423c8 <col:12, col:25> 'UINT32 (*)(void)' lvalue .getCurIrqNum 0xf3abf8
|           `-DeclRefExpr 0xf423a8 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xf3ad50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|-FunctionDecl 0xf425b8 <main/los_compiler.h:158:22, main/los_interrupt.h:217:1> line:214:33 ArchIntOpsGet 'HwiControllerOps *(void)' static inline
| `-CompoundStmt 0xf426c8 <line:215:1, line:217:1>
|   `-ReturnStmt 0xf42690 <line:216:5, col:13>
|     `-UnaryOperator 0xf42678 <col:12, col:13> 'HwiControllerOps *' prefix '&' cannot overflow
|       `-DeclRefExpr 0xf42658 <col:13> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xf3ad50 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|-FunctionDecl 0xf42910 <main/los_compiler.h:327:23, main/los_context.h:68:71> col:7 ArchTskStackInit 'void *(UINT32, UINT32, void *)'
| |-ParmVarDecl 0xf426f0 <col:24, col:31> col:31 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf42768 <col:39, col:46> col:46 stackSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf427e8 <main/los_compiler.h:327:23, main/los_context.h:68:63> col:63 topStack 'void *'
| `-FullComment 0xfbd480 <line:50:3, line:66:13>
|   |-ParagraphComment 0xfbc770 <line:50:3>
|   | `-TextComment 0xfbc740 <col:3> Text=" "
|   |-VerbatimLineComment 0xfbc790 <col:4, col:25> Text="  los_context"
|   |-ParagraphComment 0xfbc800 <line:51:3>
|   | `-TextComment 0xfbc7d0 <col:3> Text=" "
|   |-BlockCommandComment 0xfbc820 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0xfbc880 <col:10, col:37>
|   |   `-TextComment 0xfbc850 <col:10, col:37> Text=": Task stack initialization."
|   |-ParagraphComment 0xfbc8d0 <line:53:3>
|   | `-TextComment 0xfbc8a0 <col:3> Text=" "
|   |-BlockCommandComment 0xfbc8f0 <col:4, line:54:49> Name="par"
|   | `-ParagraphComment 0xfbc970 <line:53:8, line:54:49>
|   |   |-TextComment 0xfbc920 <line:53:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfbc940 <line:54:3, col:49> Text=" This API is used to initialize the task stack."
|   |-ParagraphComment 0xfbc9c0 <line:56:3>
|   | `-TextComment 0xfbc990 <col:3> Text=" "
|   |-BlockCommandComment 0xfbcc40 <col:4, line:57:26> Name="attention"
|   | `-ParagraphComment 0xfbcde0 <line:56:14, line:57:26>
|   |   |-TextComment 0xfbcc70 <line:56:14> Text=":"
|   |   |-TextComment 0xfbcc90 <line:57:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbccb0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfbccf0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfbcd30 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0xfbcd50 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0xfbcd80 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0xfbce30 <line:59:3>
|   | `-TextComment 0xfbce00 <col:3> Text=" "
|   |-ParamCommandComment 0xfbce50 <col:4, line:60:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xfbcf00 <line:59:18, line:60:3>
|   |   |-TextComment 0xfbceb0 <line:59:18, col:47> Text="     [IN] Type#UINT32: TaskID."
|   |   `-TextComment 0xfbced0 <line:60:3> Text=" "
|   |-ParamCommandComment 0xfbcf20 <col:4, line:61:3> [in] implicitly Param="stackSize" ParamIndex=1
|   | `-ParagraphComment 0xfbcfd0 <line:60:21, line:61:3>
|   |   |-TextComment 0xfbcf80 <line:60:21, col:64> Text="  [IN] Type#UINT32: Total size of the stack."
|   |   `-TextComment 0xfbcfa0 <line:61:3> Text=" "
|   |-ParamCommandComment 0xfbcff0 <col:4, col:60> [in] implicitly Param="topStack" ParamIndex=2
|   | `-ParagraphComment 0xfbd080 <col:20, col:60>
|   |   `-TextComment 0xfbd050 <col:20, col:60> Text="   [IN] Type#VOID *: Top of task's stack."
|   |-ParagraphComment 0xfbd0d0 <line:63:3>
|   | `-TextComment 0xfbd0a0 <col:3> Text=" "
|   |-BlockCommandComment 0xfbd0f0 <col:4, line:64:3> Name="retval"
|   | `-ParagraphComment 0xfbd170 <line:63:11, line:64:3>
|   |   |-TextComment 0xfbd120 <line:63:11, col:39> Text=": context Type#TaskContext *."
|   |   `-TextComment 0xfbd140 <line:64:3> Text=" "
|   |-BlockCommandComment 0xfbd190 <col:4, line:66:3> Name="par"
|   | `-ParagraphComment 0xfbd360 <line:64:8, line:66:3>
|   |   |-TextComment 0xfbd1c0 <line:64:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfbd1e0 <line:65:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbd200 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfbd240 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfbd280 <col:12, col:76> Text="los_context.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfbd2a0 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0xfbd2d0 <col:82, col:86> Name="ul"
|   |   `-TextComment 0xfbd300 <line:66:3> Text=" "
|   `-BlockCommandComment 0xfbd380 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xfbd3e0 <col:8, col:13>
|       `-TextComment 0xfbd3b0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xf42a60 <main/los_compiler.h:327:23, main/los_context.h:69:34> col:6 HalIrqEndCheckNeedSched 'void (void)'
|-FunctionDecl 0xf42b98 <main/los_compiler.h:327:23, main/los_context.h:70:35> col:6 EnableExceptionInterface 'void (void)'
|-FunctionDecl 0xf42cd0 <main/los_compiler.h:327:23, main/los_context.h:71:31> col:6 HalTaskContextSwitch 'void (void)'
|-FunctionDecl 0xf42e58 <main/los_compiler.h:146:23, main/los_context.h:89:54> col:38 ArchSysExit 'void (void) __attribute__((noreturn))'
| `-FullComment 0xfbde20 <line:73:3, line:87:13>
|   |-ParagraphComment 0xfbd520 <line:73:3>
|   | `-TextComment 0xfbd4f0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfbd540 <col:4, col:25> Text="  los_context"
|   |-ParagraphComment 0xfbd5b0 <line:74:3>
|   | `-TextComment 0xfbd580 <col:3> Text=" "
|   |-BlockCommandComment 0xfbd5d0 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0xfbd630 <col:10, col:32>
|   |   `-TextComment 0xfbd600 <col:10, col:32> Text=": Function to sys exit."
|   |-ParagraphComment 0xfbd680 <line:76:3>
|   | `-TextComment 0xfbd650 <col:3> Text=" "
|   |-BlockCommandComment 0xfbd6a0 <col:4, line:77:32> Name="par"
|   | `-ParagraphComment 0xfbd720 <line:76:8, line:77:32>
|   |   |-TextComment 0xfbd6d0 <line:76:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfbd6f0 <line:77:3, col:32> Text=" This API is used to sys exit."
|   |-ParagraphComment 0xfbd770 <line:79:3>
|   | `-TextComment 0xfbd740 <col:3> Text=" "
|   |-BlockCommandComment 0xfbd790 <col:4, line:80:26> Name="attention"
|   | `-ParagraphComment 0xfbd930 <line:79:14, line:80:26>
|   |   |-TextComment 0xfbd7c0 <line:79:14> Text=":"
|   |   |-TextComment 0xfbd7e0 <line:80:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbd800 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfbd840 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfbd880 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0xfbd8a0 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0xfbd8d0 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0xfbd980 <line:82:3>
|   | `-TextComment 0xfbd950 <col:3> Text=" "
|   |-ParamCommandComment 0xfbd9a0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xfbda00 <<invalid sloc>>
|   |-ParagraphComment 0xfbda50 <line:84:3>
|   | `-TextComment 0xfbda20 <col:3> Text=" "
|   |-BlockCommandComment 0xfbda70 <col:4, line:85:3> Name="retval"
|   | `-ParagraphComment 0xfbdaf0 <line:84:11, line:85:3>
|   |   |-TextComment 0xfbdaa0 <line:84:11, col:17> Text=": None."
|   |   `-TextComment 0xfbdac0 <line:85:3> Text=" "
|   |-BlockCommandComment 0xfbdb10 <col:4, line:87:3> Name="par"
|   | `-ParagraphComment 0xfbdd10 <line:85:8, line:87:3>
|   |   |-TextComment 0xfbdb40 <line:85:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfbdb60 <line:86:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbdb80 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfbdbc0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfbdc00 <col:12, col:76> Text="los_context.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfbdc50 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0xfbdc80 <col:82, col:86> Name="ul"
|   |   `-TextComment 0xfbdcb0 <line:87:3> Text=" "
|   `-BlockCommandComment 0xfbdd30 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xfbdd90 <col:8, col:13>
|       `-TextComment 0xfbdd60 <col:8, col:13> Text=" None."
|-FunctionDecl 0xf42fc0 <main/los_compiler.h:327:23, main/los_context.h:108:27> col:6 ArchTaskSchedule 'void (void)'
| `-FullComment 0xfbe790 <line:92:3, line:106:13>
|   |-ParagraphComment 0xfbdec0 <line:92:3>
|   | `-TextComment 0xfbde90 <col:3> Text=" "
|   |-VerbatimLineComment 0xfbdee0 <col:4, col:25> Text="  los_context"
|   |-ParagraphComment 0xfbdf50 <line:93:3>
|   | `-TextComment 0xfbdf20 <col:3> Text=" "
|   |-BlockCommandComment 0xfbdf70 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0xfbdfd0 <col:10, col:36>
|   |   `-TextComment 0xfbdfa0 <col:10, col:36> Text=": Task scheduling Function."
|   |-ParagraphComment 0xfbe020 <line:95:3>
|   | `-TextComment 0xfbdff0 <col:3> Text=" "
|   |-BlockCommandComment 0xfbe040 <col:4, line:96:39> Name="par"
|   | `-ParagraphComment 0xfbe0c0 <line:95:8, line:96:39>
|   |   |-TextComment 0xfbe070 <line:95:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfbe090 <line:96:3, col:39> Text=" This API is used to scheduling task."
|   |-ParagraphComment 0xfbe110 <line:98:3>
|   | `-TextComment 0xfbe0e0 <col:3> Text=" "
|   |-BlockCommandComment 0xfbe130 <col:4, line:99:26> Name="attention"
|   | `-ParagraphComment 0xfbe2d0 <line:98:14, line:99:26>
|   |   |-TextComment 0xfbe160 <line:98:14> Text=":"
|   |   |-TextComment 0xfbe180 <line:99:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbe1a0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfbe1e0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfbe220 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0xfbe240 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0xfbe270 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0xfbe320 <line:101:3>
|   | `-TextComment 0xfbe2f0 <col:3> Text=" "
|   |-ParamCommandComment 0xfbe340 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xfbe3a0 <<invalid sloc>>
|   |-ParagraphComment 0xfbe3f0 <line:103:3>
|   | `-TextComment 0xfbe3c0 <col:3> Text=" "
|   |-BlockCommandComment 0xfbe410 <col:4, line:104:3> Name="retval"
|   | `-ParagraphComment 0xfbe490 <line:103:11, line:104:3>
|   |   |-TextComment 0xfbe440 <line:103:11, col:17> Text=": None."
|   |   `-TextComment 0xfbe460 <line:104:3> Text=" "
|   |-BlockCommandComment 0xfbe4b0 <col:4, line:106:3> Name="par"
|   | `-ParagraphComment 0xfbe680 <line:104:8, line:106:3>
|   |   |-TextComment 0xfbe4e0 <line:104:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfbe500 <line:105:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbe520 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfbe560 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfbe5a0 <col:12, col:76> Text="los_context.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfbe5c0 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0xfbe5f0 <col:82, col:86> Name="ul"
|   |   `-TextComment 0xfbe620 <line:106:3> Text=" "
|   `-BlockCommandComment 0xfbe6a0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xfbe700 <col:8, col:13>
|       `-TextComment 0xfbe6d0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xf44118 <line:110:1, col:30> col:8 ArchStartSchedule 'UINT32 (void)'
|-FunctionDecl 0xf44490 <main/los_compiler.h:327:23, main/los_context.h:111:97> col:7 ArchSignalContextInit 'void *(void *, void *, UINTPTR, UINT32)'
| |-ParmVarDecl 0xf441d0 <main/los_compiler.h:327:23, main/los_context.h:111:35> col:35 stackPointer 'void *'
| |-ParmVarDecl 0xf44250 <main/los_compiler.h:327:23, main/los_context.h:111:55> col:55 stackTop 'void *'
| |-ParmVarDecl 0xf442c8 <col:65, col:73> col:73 sigHandler 'UINTPTR':'unsigned int'
| `-ParmVarDecl 0xf44340 <col:85, col:92> col:92 param 'UINT32':'unsigned int'
|-RecordDecl 0xf445d8 <main/los_list.h:52:9, line:55:1> line:52:16 struct LOS_DL_LIST definition
| |-FullComment 0xfbe900 <line:49:3, line:50:47>
| | |-ParagraphComment 0xfbe830 <line:49:3>
| | | `-TextComment 0xfbe800 <col:3> Text=" "
| | |-VerbatimLineComment 0xfbe850 <col:4, col:21> Text=" los_list"
| | `-ParagraphComment 0xfbe8c0 <line:50:3, col:47>
| |   `-TextComment 0xfbe890 <col:3, col:47> Text=" Structure of a node in a doubly linked list."
| |-FieldDecl 0xf44730 <line:53:5, col:25> col:25 referenced pstPrev 'struct LOS_DL_LIST *'
| | `-FullComment 0xfbe9d0 <col:38, col:82>
| |   `-ParagraphComment 0xfbe9a0 <col:38, col:82>
| |     `-TextComment 0xfbe970 <col:38, col:82> Text=" Current node's pointer to the previous node "
| `-FieldDecl 0xf447d0 <line:54:5, col:25> col:25 referenced pstNext 'struct LOS_DL_LIST *'
|   `-FullComment 0xfbeaa0 <col:38, col:78>
|     `-ParagraphComment 0xfbea70 <col:38, col:78>
|       `-TextComment 0xfbea40 <col:38, col:78> Text=" Current node's pointer to the next node "
|-TypedefDecl 0xf448a8 <line:52:1, line:55:3> col:3 referenced LOS_DL_LIST 'struct LOS_DL_LIST':'struct LOS_DL_LIST'
| |-ElaboratedType 0xf44850 'struct LOS_DL_LIST' sugar
| | `-RecordType 0xf44660 'struct LOS_DL_LIST'
| |   `-Record 0xf445d8 'LOS_DL_LIST'
| `-FullComment 0xfbec10 <line:49:3, line:50:47>
|   |-ParagraphComment 0xfbeb40 <line:49:3>
|   | `-TextComment 0xfbeb10 <col:3> Text=" "
|   |-VerbatimLineComment 0xfbeb60 <col:4, col:21> Text=" los_list"
|   `-ParagraphComment 0xfbebd0 <line:50:3, col:47>
|     `-TextComment 0xfbeba0 <col:3, col:47> Text=" Structure of a node in a doubly linked list."
|-FunctionDecl 0xf44a88 <main/los_compiler.h:130:23, main/los_list.h:79:1> line:75:43 used LOS_ListInit 'void (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xf44998 <col:56, col:69> col:69 used list 'LOS_DL_LIST *'
| |-CompoundStmt 0xf44d08 <line:76:1, line:79:1>
| | |-BinaryOperator 0xf44bd0 <line:77:5, col:21> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xf44b68 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xf447d0
| | | | `-ImplicitCastExpr 0xf44b50 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0xf44b30 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xf44998 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xf44bb8 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| | |   `-DeclRefExpr 0xf44b98 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0xf44998 'list' 'LOS_DL_LIST *'
| | `-BinaryOperator 0xf44c90 <line:78:5, col:21> 'struct LOS_DL_LIST *' '='
| |   |-MemberExpr 0xf44c28 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xf44730
| |   | `-ImplicitCastExpr 0xf44c10 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| |   |   `-DeclRefExpr 0xf44bf0 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xf44998 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0xf44c78 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0xf44c58 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0xf44998 'list' 'LOS_DL_LIST *'
| `-FullComment 0xfbf5b0 <line:58:3, line:73:7>
|   |-ParagraphComment 0xfbecd0 <line:58:3>
|   | `-TextComment 0xfbeca0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfbecf0 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xfbed60 <line:59:3>
|   | `-TextComment 0xfbed30 <col:3> Text=" "
|   |-BlockCommandComment 0xfbed80 <col:4, col:42> Name="brief"
|   | `-ParagraphComment 0xfbede0 <col:10, col:42>
|   |   `-TextComment 0xfbedb0 <col:10, col:42> Text=" Initialize a doubly linked list."
|   |-ParagraphComment 0xfbee30 <line:61:3>
|   | `-TextComment 0xfbee00 <col:3> Text=" "
|   |-BlockCommandComment 0xfbee50 <col:4, line:63:3> Name="par"
|   | `-ParagraphComment 0xfbef00 <line:61:8, line:63:3>
|   |   |-TextComment 0xfbee80 <line:61:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfbeea0 <line:62:3, col:55> Text=" This API is used to initialize a doubly linked list."
|   |   `-TextComment 0xfbeec0 <line:63:3> Text=" "
|   |-BlockCommandComment 0xfbef20 <col:4, line:66:8> Name="attention"
|   | `-ParagraphComment 0xfbf0f0 <line:64:3, line:66:8>
|   |   |-TextComment 0xfbef50 <line:64:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbef70 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfbefb0 <line:65:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbefd0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfbf010 <col:8, col:71> Text="The parameter passed in should be ensured to be a legal pointer."
|   |   |-HTMLEndTagComment 0xfbf030 <col:72, col:76> Name="li"
|   |   |-TextComment 0xfbf060 <line:66:3> Text=" "
|   |   `-HTMLEndTagComment 0xfbf080 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfbf140 <line:68:3>
|   | `-TextComment 0xfbf110 <col:3> Text=" "
|   |-ParamCommandComment 0xfbf160 <col:4, col:52> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0xfbf1f0 <col:15, col:52>
|   |   `-TextComment 0xfbf1c0 <col:15, col:52> Text="    [IN] Node in a doubly linked list."
|   |-ParagraphComment 0xfbf240 <line:70:3>
|   | `-TextComment 0xfbf210 <col:3> Text=" "
|   |-BlockCommandComment 0xfbf260 <col:4, line:71:3> Name="retval"
|   | `-ParagraphComment 0xfbf2e0 <line:70:11, line:71:3>
|   |   |-TextComment 0xfbf290 <line:70:11, col:16> Text=" None."
|   |   `-TextComment 0xfbf2b0 <line:71:3> Text=" "
|   |-BlockCommandComment 0xfbf300 <col:4, line:73:3> Name="par"
|   | `-ParagraphComment 0xfbf4d0 <line:71:8, line:73:3>
|   |   |-TextComment 0xfbf330 <line:71:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfbf350 <line:72:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbf370 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfbf3b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfbf3f0 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfbf410 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfbf440 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfbf470 <line:73:3> Text=" "
|   `-BlockCommandComment 0xfbf4f0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfbf520 <<invalid sloc>>
|-FunctionDecl 0xf44ec8 <main/los_compiler.h:130:23, main/los_list.h:128:1> line:122:43 used LOS_ListAdd 'void (LOS_DL_LIST *, LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xf44d38 <col:55, col:68> col:68 used list 'LOS_DL_LIST *'
| |-ParmVarDecl 0xf44db0 <col:74, col:87> col:87 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0xf4fbf8 <line:123:1, line:128:1>
| | |-BinaryOperator 0xf45060 <line:124:5, col:27> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xf44fb0 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xf447d0
| | | | `-ImplicitCastExpr 0xf44f98 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0xf44f78 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xf44db0 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xf45048 <col:21, col:27> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0xf45018 <col:21, col:27> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xf447d0
| | |     `-ImplicitCastExpr 0xf45000 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0xf44fe0 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0xf44d38 'list' 'LOS_DL_LIST *'
| | |-BinaryOperator 0xf4f9e0 <line:125:5, col:21> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xf4f978 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xf44730
| | | | `-ImplicitCastExpr 0xf4f960 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0xf4f940 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xf44db0 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xf4f9c8 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| | |   `-DeclRefExpr 0xf4f9a8 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0xf44d38 'list' 'LOS_DL_LIST *'
| | |-BinaryOperator 0xf4fae8 <line:126:5, col:30> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xf4fa80 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xf44730
| | | | `-ImplicitCastExpr 0xf4fa68 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0xf4fa38 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xf447d0
| | | |     `-ImplicitCastExpr 0xf4fa20 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0xf4fa00 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xf44d38 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xf4fad0 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |   `-DeclRefExpr 0xf4fab0 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0xf44db0 'node' 'LOS_DL_LIST *'
| | `-BinaryOperator 0xf4fba8 <line:127:5, col:21> 'struct LOS_DL_LIST *' '='
| |   |-MemberExpr 0xf4fb40 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xf447d0
| |   | `-ImplicitCastExpr 0xf4fb28 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| |   |   `-DeclRefExpr 0xf4fb08 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xf44d38 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0xf4fb90 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0xf4fb70 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0xf44db0 'node' 'LOS_DL_LIST *'
| `-FullComment 0xfc0040 <line:104:3, line:120:22>
|   |-ParagraphComment 0xfbf650 <line:104:3>
|   | `-TextComment 0xfbf620 <col:3> Text=" "
|   |-VerbatimLineComment 0xfbf670 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xfbf6e0 <line:105:3>
|   | `-TextComment 0xfbf6b0 <col:3> Text=" "
|   |-BlockCommandComment 0xfbf700 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0xfbf760 <col:10, col:52>
|   |   `-TextComment 0xfbf730 <col:10, col:52> Text=" Insert a new node to a doubly linked list."
|   |-ParagraphComment 0xfbf7b0 <line:107:3>
|   | `-TextComment 0xfbf780 <col:3> Text=" "
|   |-BlockCommandComment 0xfbf7d0 <col:4, line:109:3> Name="par"
|   | `-ParagraphComment 0xfbf880 <line:107:8, line:109:3>
|   |   |-TextComment 0xfbf800 <line:107:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfbf820 <line:108:3, col:65> Text=" This API is used to insert a new node to a doubly linked list."
|   |   `-TextComment 0xfbf840 <line:109:3> Text=" "
|   |-BlockCommandComment 0xfbf8a0 <col:4, line:112:8> Name="attention"
|   | `-ParagraphComment 0xfbfa70 <line:110:3, line:112:8>
|   |   |-TextComment 0xfbf8d0 <line:110:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbf8f0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfbf930 <line:111:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbf950 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfbf990 <col:8, col:71> Text="The parameters passed in should be ensured to be legal pointers."
|   |   |-HTMLEndTagComment 0xfbf9b0 <col:72, col:76> Name="li"
|   |   |-TextComment 0xfbf9e0 <line:112:3> Text=" "
|   |   `-HTMLEndTagComment 0xfbfa00 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfbfac0 <line:114:3>
|   | `-TextComment 0xfbfa90 <col:3> Text=" "
|   |-ParamCommandComment 0xfbfae0 <col:4, line:115:3> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0xfbfb90 <line:114:15, line:115:3>
|   |   |-TextComment 0xfbfb40 <line:114:15, col:75> Text="    [IN]   Doubly linked list where the new node is inserted."
|   |   `-TextComment 0xfbfb60 <line:115:3> Text=" "
|   |-ParamCommandComment 0xfbfbb0 <col:4, col:49> [in] implicitly Param="node" ParamIndex=1
|   | `-ParagraphComment 0xfbfc40 <col:15, col:49>
|   |   `-TextComment 0xfbfc10 <col:15, col:49> Text="    [IN]   New node to be inserted."
|   |-ParagraphComment 0xfbfca0 <line:117:3>
|   | `-TextComment 0xfbfc70 <col:3> Text=" "
|   |-BlockCommandComment 0xfbfcc0 <col:4, line:118:3> Name="retval"
|   | `-ParagraphComment 0xfbfd40 <line:117:11, line:118:3>
|   |   |-TextComment 0xfbfcf0 <line:117:11, col:15> Text=" None"
|   |   `-TextComment 0xfbfd10 <line:118:3> Text=" "
|   |-BlockCommandComment 0xfbfd60 <col:4, line:120:3> Name="par"
|   | `-ParagraphComment 0xfbff30 <line:118:8, line:120:3>
|   |   |-TextComment 0xfbfd90 <line:118:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfbfdb0 <line:119:3> Text=" "
|   |   |-HTMLStartTagComment 0xfbfdd0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfbfe10 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfbfe50 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfbfe70 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfbfea0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfbfed0 <line:120:3> Text=" "
|   `-BlockCommandComment 0xfbff50 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xfbffb0 <col:8, col:22>
|       `-TextComment 0xfbff80 <col:8, col:22> Text=" LOS_ListDelete"
|-FunctionDecl 0xf4fd48 <main/los_compiler.h:130:23, main/los_list.h:152:1> line:149:43 LOS_ListTailInsert 'void (LOS_DL_LIST *, LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xf4fc38 <col:62, col:75> col:75 used list 'LOS_DL_LIST *'
| |-ParmVarDecl 0xf4fcb0 <col:81, col:94> col:94 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0xf4ff98 <line:150:1, line:152:1>
| | `-CallExpr 0xf4ff10 <line:151:5, col:36> 'void'
| |   |-ImplicitCastExpr 0xf4fef8 <col:5> 'void (*)(LOS_DL_LIST *, LOS_DL_LIST *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0xf4fdf8 <col:5> 'void (LOS_DL_LIST *, LOS_DL_LIST *)' Function 0xf44ec8 'LOS_ListAdd' 'void (LOS_DL_LIST *, LOS_DL_LIST *)'
| |   |-ImplicitCastExpr 0xf4ff40 <col:17, col:23> 'struct LOS_DL_LIST *' <LValueToRValue>
| |   | `-MemberExpr 0xf4fe50 <col:17, col:23> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xf44730
| |   |   `-ImplicitCastExpr 0xf4fe38 <col:17> 'LOS_DL_LIST *' <LValueToRValue>
| |   |     `-DeclRefExpr 0xf4fe18 <col:17> 'LOS_DL_LIST *' lvalue ParmVar 0xf4fc38 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0xf4ff58 <col:32> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0xf4fe80 <col:32> 'LOS_DL_LIST *' lvalue ParmVar 0xf4fcb0 'node' 'LOS_DL_LIST *'
| `-FullComment 0xfc0ac0 <line:131:3, line:147:40>
|   |-ParagraphComment 0xfc00e0 <line:131:3>
|   | `-TextComment 0xfc00b0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfc0100 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xfc0170 <line:132:3>
|   | `-TextComment 0xfc0140 <col:3> Text=" "
|   |-BlockCommandComment 0xfc0190 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0xfc01f0 <col:10, col:60>
|   |   `-TextComment 0xfc01c0 <col:10, col:60> Text=" Insert a node to the tail of a doubly linked list."
|   |-ParagraphComment 0xfc0240 <line:134:3>
|   | `-TextComment 0xfc0210 <col:3> Text=" "
|   |-BlockCommandComment 0xfc0260 <col:4, line:136:3> Name="par"
|   | `-ParagraphComment 0xfc0310 <line:134:8, line:136:3>
|   |   |-TextComment 0xfc0290 <line:134:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfc02b0 <line:135:3, col:77> Text=" This API is used to insert a new node to the tail of a doubly linked list."
|   |   `-TextComment 0xfc02d0 <line:136:3> Text=" "
|   |-BlockCommandComment 0xfc0330 <col:4, line:139:8> Name="attention"
|   | `-ParagraphComment 0xfc0500 <line:137:3, line:139:8>
|   |   |-TextComment 0xfc0360 <line:137:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc0380 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfc03c0 <line:138:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc03e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfc0420 <col:8, col:71> Text="The parameters passed in should be ensured to be legal pointers."
|   |   |-HTMLEndTagComment 0xfc0440 <col:72, col:76> Name="li"
|   |   |-TextComment 0xfc0470 <line:139:3> Text=" "
|   |   `-HTMLEndTagComment 0xfc0490 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfc0550 <line:141:3>
|   | `-TextComment 0xfc0520 <col:3> Text=" "
|   |-ParamCommandComment 0xfc0570 <col:4, line:142:3> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0xfc0620 <line:141:15, line:142:3>
|   |   |-TextComment 0xfc05d0 <line:141:15, col:74> Text="     [IN] Doubly linked list where the new node is inserted."
|   |   `-TextComment 0xfc05f0 <line:142:3> Text=" "
|   |-ParamCommandComment 0xfc0640 <col:4, col:48> [in] implicitly Param="node" ParamIndex=1
|   | `-ParagraphComment 0xfc06d0 <col:15, col:48>
|   |   `-TextComment 0xfc06a0 <col:15, col:48> Text="     [IN] New node to be inserted."
|   |-ParagraphComment 0xfc0720 <line:144:3>
|   | `-TextComment 0xfc06f0 <col:3> Text=" "
|   |-BlockCommandComment 0xfc0740 <col:4, line:145:3> Name="retval"
|   | `-ParagraphComment 0xfc07c0 <line:144:11, line:145:3>
|   |   |-TextComment 0xfc0770 <line:144:11, col:16> Text=" None."
|   |   `-TextComment 0xfc0790 <line:145:3> Text=" "
|   |-BlockCommandComment 0xfc07e0 <col:4, line:147:3> Name="par"
|   | `-ParagraphComment 0xfc09b0 <line:145:8, line:147:3>
|   |   |-TextComment 0xfc0810 <line:145:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfc0830 <line:146:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc0850 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfc0890 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfc08d0 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfc08f0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfc0920 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfc0950 <line:147:3> Text=" "
|   `-BlockCommandComment 0xfc09d0 <col:4, col:40> Name="see"
|     `-ParagraphComment 0xfc0a30 <col:8, col:40>
|       `-TextComment 0xfc0a00 <col:8, col:40> Text=" LOS_ListAdd | LOS_ListHeadInsert"
|-FunctionDecl 0xf500d0 <main/los_compiler.h:130:23, main/los_list.h:176:1> line:173:43 LOS_ListHeadInsert 'void (LOS_DL_LIST *, LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xf4ffc0 <col:62, col:75> col:75 used list 'LOS_DL_LIST *'
| |-ParmVarDecl 0xf50038 <col:81, col:94> col:94 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0xf50288 <line:174:1, line:176:1>
| | `-CallExpr 0xf501f8 <line:175:5, col:27> 'void'
| |   |-ImplicitCastExpr 0xf501e0 <col:5> 'void (*)(LOS_DL_LIST *, LOS_DL_LIST *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0xf50180 <col:5> 'void (LOS_DL_LIST *, LOS_DL_LIST *)' Function 0xf44ec8 'LOS_ListAdd' 'void (LOS_DL_LIST *, LOS_DL_LIST *)'
| |   |-ImplicitCastExpr 0xf50228 <col:17> 'LOS_DL_LIST *' <LValueToRValue>
| |   | `-DeclRefExpr 0xf501a0 <col:17> 'LOS_DL_LIST *' lvalue ParmVar 0xf4ffc0 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0xf50240 <col:23> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0xf501c0 <col:23> 'LOS_DL_LIST *' lvalue ParmVar 0xf50038 'node' 'LOS_DL_LIST *'
| `-FullComment 0xfc1550 <line:155:3, line:171:40>
|   |-ParagraphComment 0xfc0b60 <line:155:3>
|   | `-TextComment 0xfc0b30 <col:3> Text=" "
|   |-VerbatimLineComment 0xfc0b80 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xfc0bf0 <line:156:3>
|   | `-TextComment 0xfc0bc0 <col:3> Text=" "
|   |-BlockCommandComment 0xfc0c10 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0xfc0c80 <col:10, col:60>
|   |   `-TextComment 0xfc0c40 <col:10, col:60> Text=" Insert a node to the head of a doubly linked list."
|   |-ParagraphComment 0xfc0cd0 <line:158:3>
|   | `-TextComment 0xfc0ca0 <col:3> Text=" "
|   |-BlockCommandComment 0xfc0cf0 <col:4, line:160:3> Name="par"
|   | `-ParagraphComment 0xfc0da0 <line:158:8, line:160:3>
|   |   |-TextComment 0xfc0d20 <line:158:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfc0d40 <line:159:3, col:77> Text=" This API is used to insert a new node to the head of a doubly linked list."
|   |   `-TextComment 0xfc0d60 <line:160:3> Text=" "
|   |-BlockCommandComment 0xfc0dc0 <col:4, line:163:8> Name="attention"
|   | `-ParagraphComment 0xfc0f90 <line:161:3, line:163:8>
|   |   |-TextComment 0xfc0df0 <line:161:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc0e10 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfc0e50 <line:162:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc0e70 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfc0eb0 <col:8, col:71> Text="The parameters passed in should be ensured to be legal pointers."
|   |   |-HTMLEndTagComment 0xfc0ed0 <col:72, col:76> Name="li"
|   |   |-TextComment 0xfc0f00 <line:163:3> Text=" "
|   |   `-HTMLEndTagComment 0xfc0f20 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfc0fe0 <line:165:3>
|   | `-TextComment 0xfc0fb0 <col:3> Text=" "
|   |-ParamCommandComment 0xfc1000 <col:4, line:166:3> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0xfc10b0 <line:165:15, line:166:3>
|   |   |-TextComment 0xfc1060 <line:165:15, col:74> Text="     [IN] Doubly linked list where the new node is inserted."
|   |   `-TextComment 0xfc1080 <line:166:3> Text=" "
|   |-ParamCommandComment 0xfc10d0 <col:4, col:48> [in] implicitly Param="node" ParamIndex=1
|   | `-ParagraphComment 0xfc1160 <col:15, col:48>
|   |   `-TextComment 0xfc1130 <col:15, col:48> Text="     [IN] New node to be inserted."
|   |-ParagraphComment 0xfc11b0 <line:168:3>
|   | `-TextComment 0xfc1180 <col:3> Text=" "
|   |-BlockCommandComment 0xfc11d0 <col:4, line:169:3> Name="retval"
|   | `-ParagraphComment 0xfc1250 <line:168:11, line:169:3>
|   |   |-TextComment 0xfc1200 <line:168:11, col:16> Text=" None."
|   |   `-TextComment 0xfc1220 <line:169:3> Text=" "
|   |-BlockCommandComment 0xfc1270 <col:4, line:171:3> Name="par"
|   | `-ParagraphComment 0xfc1440 <line:169:8, line:171:3>
|   |   |-TextComment 0xfc12a0 <line:169:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfc12c0 <line:170:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc12e0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfc1320 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfc1360 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfc1380 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfc13b0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfc13e0 <line:171:3> Text=" "
|   `-BlockCommandComment 0xfc1460 <col:4, col:40> Name="see"
|     `-ParagraphComment 0xfc14c0 <col:8, col:40>
|       `-TextComment 0xfc1490 <col:8, col:40> Text=" LOS_ListAdd | LOS_ListTailInsert"
|-FunctionDecl 0xf50340 <main/los_compiler.h:130:23, main/los_list.h:204:1> line:198:43 used LOS_ListDelete 'void (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xf502b0 <col:58, col:71> col:71 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0xf50998 <line:199:1, line:204:1>
| | |-BinaryOperator 0xf50518 <line:200:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xf50468 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xf44730
| | | | `-ImplicitCastExpr 0xf50450 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0xf50420 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xf447d0
| | | |     `-ImplicitCastExpr 0xf50408 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0xf503e8 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xf502b0 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xf50500 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0xf504d0 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xf44730
| | |     `-ImplicitCastExpr 0xf504b8 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0xf50498 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0xf502b0 'node' 'LOS_DL_LIST *'
| | |-BinaryOperator 0xf50668 <line:201:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xf505b8 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xf447d0
| | | | `-ImplicitCastExpr 0xf505a0 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0xf50570 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xf44730
| | | |     `-ImplicitCastExpr 0xf50558 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0xf50538 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xf502b0 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xf50650 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0xf50620 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xf447d0
| | |     `-ImplicitCastExpr 0xf50608 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0xf505e8 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0xf502b0 'node' 'LOS_DL_LIST *'
| | |-BinaryOperator 0xf507c8 <line:202:5, main/los_compiler.h:341:32> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xf506c0 <main/los_list.h:202:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xf447d0
| | | | `-ImplicitCastExpr 0xf506a8 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0xf50688 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xf502b0 'node' 'LOS_DL_LIST *'
| | | `-CStyleCastExpr 0xf507a0 <col:21, main/los_compiler.h:341:32> 'LOS_DL_LIST *' <BitCast>
| | |   `-ParenExpr 0xf50780 <col:23, col:32> 'void *'
| | |     `-CStyleCastExpr 0xf50728 <col:24, col:31> 'void *' <NullToPointer>
| | |       `-IntegerLiteral 0xf506f0 <col:31> 'int' 0
| | `-BinaryOperator 0xf50950 <main/los_list.h:203:5, main/los_compiler.h:341:32> 'struct LOS_DL_LIST *' '='
| |   |-MemberExpr 0xf50820 <main/los_list.h:203:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xf44730
| |   | `-ImplicitCastExpr 0xf50808 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| |   |   `-DeclRefExpr 0xf507e8 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xf502b0 'node' 'LOS_DL_LIST *'
| |   `-CStyleCastExpr 0xf50900 <col:21, main/los_compiler.h:341:32> 'LOS_DL_LIST *' <BitCast>
| |     `-ParenExpr 0xf508e0 <col:23, col:32> 'void *'
| |       `-CStyleCastExpr 0xf50888 <col:24, col:31> 'void *' <NullToPointer>
| |         `-IntegerLiteral 0xf50850 <col:31> 'int' 0
| `-FullComment 0xfc2080 <main/los_list.h:179:3, line:196:19>
|   |-ParagraphComment 0xfc15f0 <line:179:3>
|   | `-TextComment 0xfc15c0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfc1610 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xfc1680 <line:180:3>
|   | `-TextComment 0xfc1650 <col:3> Text=" "
|   |-BlockCommandComment 0xfc16a0 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0xfc1700 <col:10, col:60>
|   |   `-TextComment 0xfc16d0 <col:10, col:60> Text=" Delete a specified node from a doubly linked list."
|   |-ParagraphComment 0xfc1750 <line:182:3>
|   | `-TextComment 0xfc1720 <col:3> Text=" "
|   |-BlockCommandComment 0xfc1770 <col:4, line:186:3> Name="par"
|   | `-ParagraphComment 0xfc1990 <line:182:8, line:186:3>
|   |   |-TextComment 0xfc17a0 <line:182:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfc17c0 <line:183:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc17e0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfc1820 <line:184:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc1840 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfc1880 <col:8, col:77> Text="This API is used to delete a specified node from a doubly linked list."
|   |   |-HTMLEndTagComment 0xfc18a0 <col:78, col:82> Name="li"
|   |   |-TextComment 0xfc18d0 <line:185:3> Text=" "
|   |   |-HTMLEndTagComment 0xfc18f0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0xfc1920 <line:186:3> Text=" "
|   |-BlockCommandComment 0xfc19b0 <col:4, line:189:8> Name="attention"
|   | `-ParagraphComment 0xfc1b80 <line:187:3, line:189:8>
|   |   |-TextComment 0xfc19e0 <line:187:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc1a00 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfc1a40 <line:188:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc1a60 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfc1aa0 <col:8, col:71> Text="The parameter passed in should be ensured to be a legal pointer."
|   |   |-HTMLEndTagComment 0xfc1ac0 <col:72, col:76> Name="li"
|   |   |-TextComment 0xfc1af0 <line:189:3> Text=" "
|   |   `-HTMLEndTagComment 0xfc1b10 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfc1bd0 <line:191:3>
|   | `-TextComment 0xfc1ba0 <col:3> Text=" "
|   |-ParamCommandComment 0xfc1bf0 <col:4, col:42> [in] implicitly Param="node" ParamIndex=0
|   | `-ParagraphComment 0xfc1c90 <col:15, col:42>
|   |   `-TextComment 0xfc1c50 <col:15, col:42> Text="    [IN] Node to be deleted."
|   |-ParagraphComment 0xfc1ce0 <line:193:3>
|   | `-TextComment 0xfc1cb0 <col:3> Text=" "
|   |-BlockCommandComment 0xfc1d00 <col:4, line:194:3> Name="retval"
|   | `-ParagraphComment 0xfc1d80 <line:193:11, line:194:3>
|   |   |-TextComment 0xfc1d30 <line:193:11, col:16> Text=" None."
|   |   `-TextComment 0xfc1d50 <line:194:3> Text=" "
|   |-BlockCommandComment 0xfc1da0 <col:4, line:196:3> Name="par"
|   | `-ParagraphComment 0xfc1f70 <line:194:8, line:196:3>
|   |   |-TextComment 0xfc1dd0 <line:194:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfc1df0 <line:195:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc1e10 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfc1e50 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfc1e90 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfc1eb0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfc1ee0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfc1f10 <line:196:3> Text=" "
|   `-BlockCommandComment 0xfc1f90 <col:4, col:19> Name="see"
|     `-ParagraphComment 0xfc1ff0 <col:8, col:19>
|       `-TextComment 0xfc1fc0 <col:8, col:19> Text=" LOS_ListAdd"
|-FunctionDecl 0xf50ac8 <main/los_compiler.h:130:23, main/los_list.h:230:1> line:227:43 used LOS_ListEmpty 'BOOL (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xf509d8 <col:57, col:70> col:70 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0xf50db8 <line:228:1, line:230:1>
| | `-ReturnStmt 0xf50cc0 <line:229:5, col:40>
| |   `-CStyleCastExpr 0xf50c98 <col:12, col:40> 'BOOL':'unsigned int' <IntegralCast>
| |     `-ParenExpr 0xf50c78 <col:18, col:40> 'int'
| |       `-BinaryOperator 0xf50c28 <col:19, col:36> 'int' '=='
| |         |-ImplicitCastExpr 0xf50bf8 <col:19, col:25> 'struct LOS_DL_LIST *' <LValueToRValue>
| |         | `-MemberExpr 0xf50ba8 <col:19, col:25> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xf447d0
| |         |   `-ImplicitCastExpr 0xf50b90 <col:19> 'LOS_DL_LIST *' <LValueToRValue>
| |         |     `-DeclRefExpr 0xf50b70 <col:19> 'LOS_DL_LIST *' lvalue ParmVar 0xf509d8 'node' 'LOS_DL_LIST *'
| |         `-ImplicitCastExpr 0xf50c10 <col:36> 'LOS_DL_LIST *' <LValueToRValue>
| |           `-DeclRefExpr 0xf50bd8 <col:36> 'LOS_DL_LIST *' lvalue ParmVar 0xf509d8 'node' 'LOS_DL_LIST *'
| `-FullComment 0xfc2c10 <line:207:3, line:225:7>
|   |-ParagraphComment 0xfc2120 <line:207:3>
|   | `-TextComment 0xfc20f0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfc2140 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xfc21b0 <line:208:3>
|   | `-TextComment 0xfc2180 <col:3> Text=" "
|   |-BlockCommandComment 0xfc21d0 <col:4, col:67> Name="brief"
|   | `-ParagraphComment 0xfc2230 <col:10, col:67>
|   |   `-TextComment 0xfc2200 <col:10, col:67> Text=" Identify whether a specified doubly linked list is empty."
|   |-ParagraphComment 0xfc2280 <line:210:3>
|   | `-TextComment 0xfc2250 <col:3> Text=" "
|   |-BlockCommandComment 0xfc22a0 <col:4, line:214:3> Name="par"
|   | `-ParagraphComment 0xfc24c0 <line:210:8, line:214:3>
|   |   |-TextComment 0xfc22d0 <line:210:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfc22f0 <line:211:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc2310 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfc2350 <line:212:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc2370 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfc23b0 <col:8, col:72> Text="This API is used to return whether a doubly linked list is empty."
|   |   |-HTMLEndTagComment 0xfc23d0 <col:73, col:77> Name="li"
|   |   |-TextComment 0xfc2400 <line:213:3> Text=" "
|   |   |-HTMLEndTagComment 0xfc2420 <col:4, col:8> Name="ul"
|   |   `-TextComment 0xfc2450 <line:214:3> Text=" "
|   |-BlockCommandComment 0xfc24e0 <col:4, line:217:8> Name="attention"
|   | `-ParagraphComment 0xfc26b0 <line:215:3, line:217:8>
|   |   |-TextComment 0xfc2510 <line:215:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc2530 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfc2570 <line:216:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc2590 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfc25d0 <col:8, col:71> Text="The parameter passed in should be ensured to be a legal pointer."
|   |   |-HTMLEndTagComment 0xfc25f0 <col:72, col:76> Name="li"
|   |   |-TextComment 0xfc2620 <line:217:3> Text=" "
|   |   `-HTMLEndTagComment 0xfc2640 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfc2700 <line:219:3>
|   | `-TextComment 0xfc26d0 <col:3> Text=" "
|   |-ParamCommandComment 0xfc2720 <col:4, col:40> [in] implicitly Param="list"
|   | `-ParagraphComment 0xfc27b0 <col:15, col:40>
|   |   `-TextComment 0xfc2780 <col:15, col:40> Text="  [IN] Doubly linked node."
|   |-ParagraphComment 0xfc2800 <line:221:3>
|   | `-TextComment 0xfc27d0 <col:3> Text=" "
|   |-BlockCommandComment 0xfc2820 <col:4, line:222:3> Name="retval"
|   | `-ParagraphComment 0xfc28a0 <line:221:11, line:222:3>
|   |   |-TextComment 0xfc2850 <line:221:11, col:48> Text=" TRUE The doubly linked list is empty."
|   |   `-TextComment 0xfc2870 <line:222:3> Text=" "
|   |-BlockCommandComment 0xfc28c0 <col:4, line:223:3> Name="retval"
|   | `-ParagraphComment 0xfc2940 <line:222:11, line:223:3>
|   |   |-TextComment 0xfc28f0 <line:222:11, col:53> Text=" FALSE The doubly linked list is not empty."
|   |   `-TextComment 0xfc2910 <line:223:3> Text=" "
|   |-BlockCommandComment 0xfc2960 <col:4, line:225:3> Name="par"
|   | `-ParagraphComment 0xfc2b30 <line:223:8, line:225:3>
|   |   |-TextComment 0xfc2990 <line:223:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfc29b0 <line:224:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc29d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfc2a10 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfc2a50 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfc2a70 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfc2aa0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfc2ad0 <line:225:3> Text=" "
|   `-BlockCommandComment 0xfc2b50 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfc2b80 <<invalid sloc>>
|-FunctionDecl 0xf50e70 <main/los_compiler.h:130:23, main/los_list.h:356:1> line:351:43 LOS_ListDelInit 'void (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xf50de0 <col:59, col:72> col:72 used list 'LOS_DL_LIST *'
| |-CompoundStmt 0xf515d8 <line:352:1, line:356:1>
| | |-BinaryOperator 0xf51048 <line:353:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xf50f98 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xf44730
| | | | `-ImplicitCastExpr 0xf50f80 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0xf50f50 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xf447d0
| | | |     `-ImplicitCastExpr 0xf50f38 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0xf50f18 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xf50de0 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xf51030 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0xf51000 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xf44730
| | |     `-ImplicitCastExpr 0xf50fe8 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0xf50fc8 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0xf50de0 'list' 'LOS_DL_LIST *'
| | |-BinaryOperator 0xf51198 <line:354:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xf510e8 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xf447d0
| | | | `-ImplicitCastExpr 0xf510d0 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0xf510a0 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xf44730
| | | |     `-ImplicitCastExpr 0xf51088 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0xf51068 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xf50de0 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xf51180 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0xf51150 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xf447d0
| | |     `-ImplicitCastExpr 0xf51138 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0xf51118 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0xf50de0 'list' 'LOS_DL_LIST *'
| | `-CallExpr 0xf51270 <line:355:5, col:22> 'void'
| |   |-ImplicitCastExpr 0xf51258 <col:5> 'void (*)(LOS_DL_LIST *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0xf511b8 <col:5> 'void (LOS_DL_LIST *)' Function 0xf44a88 'LOS_ListInit' 'void (LOS_DL_LIST *)'
| |   `-ImplicitCastExpr 0xf51298 <col:18> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0xf511d8 <col:18> 'LOS_DL_LIST *' lvalue ParmVar 0xf50de0 'list' 'LOS_DL_LIST *'
| `-FullComment 0xfc35b0 <line:334:3, line:349:7>
|   |-ParagraphComment 0xfc2cd0 <line:334:3>
|   | `-TextComment 0xfc2ca0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfc2cf0 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xfc2d60 <line:335:3>
|   | `-TextComment 0xfc2d30 <col:3> Text=" "
|   |-BlockCommandComment 0xfc2d80 <col:4, col:49> Name="brief"
|   | `-ParagraphComment 0xfc2de0 <col:10, col:49>
|   |   `-TextComment 0xfc2db0 <col:10, col:49> Text=" Delete initialize a doubly linked list."
|   |-ParagraphComment 0xfc2e30 <line:337:3>
|   | `-TextComment 0xfc2e00 <col:3> Text=" "
|   |-BlockCommandComment 0xfc2e50 <col:4, line:339:3> Name="par"
|   | `-ParagraphComment 0xfc2f00 <line:337:8, line:339:3>
|   |   |-TextComment 0xfc2e80 <line:337:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfc2ea0 <line:338:3, col:62> Text=" This API is used to delete initialize a doubly linked list."
|   |   `-TextComment 0xfc2ec0 <line:339:3> Text=" "
|   |-BlockCommandComment 0xfc2f20 <col:4, line:342:8> Name="attention"
|   | `-ParagraphComment 0xfc30f0 <line:340:3, line:342:8>
|   |   |-TextComment 0xfc2f50 <line:340:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc2f70 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfc2fb0 <line:341:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc2fd0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfc3010 <col:8, col:71> Text="The parameter passed in should be ensured to be s legal pointer."
|   |   |-HTMLEndTagComment 0xfc3030 <col:72, col:76> Name="li"
|   |   |-TextComment 0xfc3060 <line:342:3> Text=" "
|   |   `-HTMLEndTagComment 0xfc3080 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfc3140 <line:344:3>
|   | `-TextComment 0xfc3110 <col:3> Text=" "
|   |-ParamCommandComment 0xfc3160 <col:4, col:42> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0xfc31f0 <col:15, col:42>
|   |   `-TextComment 0xfc31c0 <col:15, col:42> Text="    [IN] Doubly linked list."
|   |-ParagraphComment 0xfc3240 <line:346:3>
|   | `-TextComment 0xfc3210 <col:3> Text=" "
|   |-BlockCommandComment 0xfc3260 <col:4, line:347:3> Name="retval"
|   | `-ParagraphComment 0xfc32e0 <line:346:11, line:347:3>
|   |   |-TextComment 0xfc3290 <line:346:11, col:16> Text=" None."
|   |   `-TextComment 0xfc32b0 <line:347:3> Text=" "
|   |-BlockCommandComment 0xfc3300 <col:4, line:349:3> Name="par"
|   | `-ParagraphComment 0xfc34d0 <line:347:8, line:349:3>
|   |   |-TextComment 0xfc3330 <line:347:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfc3350 <line:348:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc3370 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfc33b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfc33f0 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfc3410 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfc3440 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfc3470 <line:349:3> Text=" "
|   `-BlockCommandComment 0xfc34f0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfc3520 <<invalid sloc>>
|-RecordDecl 0xf51600 <main/los_event.h:171:9, line:175:1> line:171:16 struct tagEvent definition
| |-FullComment 0xfc3720 <line:168:3, line:169:26>
| | |-ParagraphComment 0xfc3650 <line:168:3>
| | | `-TextComment 0xfc3620 <col:3> Text=" "
| | |-VerbatimLineComment 0xfc3670 <col:4, col:22> Text=" los_event"
| | `-ParagraphComment 0xfc36e0 <line:169:3, col:26>
| |   `-TextComment 0xfc36b0 <col:3, col:26> Text=" Event control structure"
| |-FieldDecl 0xf516b0 <line:172:5, col:12> col:12 uwEventID 'UINT32':'unsigned int'
| | `-FullComment 0xfc3810 <col:34, line:173:90>
| |   `-ParagraphComment 0xfc37e0 <line:172:34, line:173:90>
| |     |-TextComment 0xfc3790 <line:172:34, col:72> Text=" Event mask in the event control block,"
| |     `-TextComment 0xfc37b0 <line:173:1, col:90> Text="                                  indicating the event that has been logically processed. "
| `-FieldDecl 0xf51738 <line:174:5, col:17> col:17 stEventList 'LOS_DL_LIST':'struct LOS_DL_LIST'
|   `-FullComment 0xfc38e0 <col:34, col:66>
|     `-ParagraphComment 0xfc38b0 <col:34, col:66>
|       `-TextComment 0xfc3880 <col:34, col:66> Text=" Event control block linked list "
|-TypedefDecl 0xf51818 <line:171:1, line:175:3> col:3 referenced EVENT_CB_S 'struct tagEvent':'struct tagEvent'
| |-ElaboratedType 0xf517c0 'struct tagEvent' sugar
| | `-RecordType 0xf51680 'struct tagEvent'
| |   `-Record 0xf51600 'tagEvent'
| `-FullComment 0xfc3a50 <line:168:3, line:169:26>
|   |-ParagraphComment 0xfc3980 <line:168:3>
|   | `-TextComment 0xfc3950 <col:3> Text=" "
|   |-VerbatimLineComment 0xfc39a0 <col:4, col:22> Text=" los_event"
|   `-ParagraphComment 0xfc3a10 <line:169:3, col:26>
|     `-TextComment 0xfc39e0 <col:3, col:26> Text=" Event control structure"
|-TypedefDecl 0xf518f0 <line:171:1, line:175:16> col:16 referenced PEVENT_CB_S 'struct tagEvent *'
| |-PointerType 0xf518a0 'struct tagEvent *'
| | `-ElaboratedType 0xf517c0 'struct tagEvent' sugar
| |   `-RecordType 0xf51680 'struct tagEvent'
| |     `-Record 0xf51600 'tagEvent'
| `-FullComment 0xfc3bc0 <line:168:3, line:169:26>
|   |-ParagraphComment 0xfc3af0 <line:168:3>
|   | `-TextComment 0xfc3ac0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfc3b10 <col:4, col:22> Text=" los_event"
|   `-ParagraphComment 0xfc3b80 <line:169:3, col:26>
|     `-TextComment 0xfc3b50 <col:3, col:26> Text=" Event control structure"
|-FunctionDecl 0xf563c8 <line:195:1, col:48> col:15 LOS_EventInit 'UINT32 (PEVENT_CB_S)' extern
| |-ParmVarDecl 0xf562d0 <col:29, col:41> col:41 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| `-FullComment 0xfc5e60 <line:177:3, line:193:22>
|   |-ParagraphComment 0xfc3c60 <line:177:3>
|   | `-TextComment 0xfc3c30 <col:3> Text=" "
|   |-VerbatimLineComment 0xfc54d0 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xfc5540 <line:178:3>
|   | `-TextComment 0xfc5510 <col:3> Text=" "
|   |-BlockCommandComment 0xfc5560 <col:4, col:44> Name="brief"
|   | `-ParagraphComment 0xfc55c0 <col:10, col:44>
|   |   `-TextComment 0xfc5590 <col:10, col:44> Text=" Initialize an event control block."
|   |-ParagraphComment 0xfc5610 <line:180:3>
|   | `-TextComment 0xfc55e0 <col:3> Text=" "
|   |-BlockCommandComment 0xfc5630 <col:4, line:182:3> Name="par"
|   | `-ParagraphComment 0xfc56e0 <line:180:8, line:182:3>
|   |   |-TextComment 0xfc5660 <line:180:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfc5680 <line:181:3, col:80> Text=" This API is used to initialize the event control block pointed to by eventCB."
|   |   `-TextComment 0xfc56a0 <line:182:3> Text=" "
|   |-BlockCommandComment 0xfc5700 <col:4, line:185:8> Name="attention"
|   | `-ParagraphComment 0xfc58d0 <line:183:3, line:185:8>
|   |   |-TextComment 0xfc5730 <line:183:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc5750 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfc5790 <line:184:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc57b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfc57f0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xfc5810 <col:13, col:17> Name="li"
|   |   |-TextComment 0xfc5840 <line:185:3> Text=" "
|   |   `-HTMLEndTagComment 0xfc5860 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfc5920 <line:187:3>
|   | `-TextComment 0xfc58f0 <col:3> Text=" "
|   |-ParamCommandComment 0xfc5940 <col:4, col:80> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0xfc59d0 <col:18, col:80>
|   |   `-TextComment 0xfc59a0 <col:18, col:80> Text=" [IN/OUT] Pointer to the event control block to be initialized."
|   |-ParagraphComment 0xfc5a20 <line:189:3>
|   | `-TextComment 0xfc59f0 <col:3> Text=" "
|   |-BlockCommandComment 0xfc5a40 <col:4, line:190:3> Name="retval"
|   | `-ParagraphComment 0xfc5ac0 <line:189:11, line:190:3>
|   |   |-TextComment 0xfc5a70 <line:189:11, col:51> Text=" #LOS_ERRNO_EVENT_PTR_NULL  Null pointer."
|   |   `-TextComment 0xfc5a90 <line:190:3> Text=" "
|   |-BlockCommandComment 0xfc5ae0 <col:4, line:191:3> Name="retval"
|   | `-ParagraphComment 0xfc5b60 <line:190:11, line:191:3>
|   |   |-TextComment 0xfc5b10 <line:190:11, col:90> Text=" #LOS_OK                    The event control block is successfully initialized."
|   |   `-TextComment 0xfc5b30 <line:191:3> Text=" "
|   |-BlockCommandComment 0xfc5b80 <col:4, line:193:3> Name="par"
|   | `-ParagraphComment 0xfc5d50 <line:191:8, line:193:3>
|   |   |-TextComment 0xfc5bb0 <line:191:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfc5bd0 <line:192:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc5bf0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfc5c30 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfc5c70 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfc5c90 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xfc5cc0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xfc5cf0 <line:193:3> Text=" "
|   `-BlockCommandComment 0xfc5d70 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xfc5dd0 <col:8, col:22>
|       `-TextComment 0xfc5da0 <col:8, col:22> Text=" LOS_EventClear"
|-FunctionDecl 0xf566e8 <line:221:1, col:75> col:15 LOS_EventPoll 'UINT32 (UINT32 *, UINT32, UINT32)' extern
| |-ParmVarDecl 0xf564d8 <col:29, col:37> col:37 eventID 'UINT32 *'
| |-ParmVarDecl 0xf56550 <col:46, col:53> col:53 eventMask 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf565c8 <col:64, col:71> col:71 mode 'UINT32':'unsigned int'
| `-FullComment 0xfc6ba0 <line:198:3, line:219:38>
|   |-ParagraphComment 0xfc5f00 <line:198:3>
|   | `-TextComment 0xfc5ed0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfc5f20 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xfc5f90 <line:199:3>
|   | `-TextComment 0xfc5f60 <col:3> Text=" "
|   |-BlockCommandComment 0xfc5fb0 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0xfc6010 <col:10, col:52>
|   |   `-TextComment 0xfc5fe0 <col:10, col:52> Text=" Obtain an event specified by the event ID."
|   |-ParagraphComment 0xfc6060 <line:201:3>
|   | `-TextComment 0xfc6030 <col:3> Text=" "
|   |-BlockCommandComment 0xfc6080 <col:4, line:204:3> Name="par"
|   | `-ParagraphComment 0xfc6150 <line:201:8, line:204:3>
|   |   |-TextComment 0xfc60b0 <line:201:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfc60d0 <line:202:3, col:112> Text=" This API is used to check whether an event expected by the user occurs according to the event ID, event mask,"
|   |   |-TextComment 0xfc60f0 <line:203:3, col:122> Text=" and event reading mode, and process the event based on the event reading mode. The event ID must point to valid memory."
|   |   `-TextComment 0xfc6110 <line:204:3> Text=" "
|   |-BlockCommandComment 0xfc6170 <col:4, line:208:8> Name="attention"
|   | `-ParagraphComment 0xfc6410 <line:205:3, line:208:8>
|   |   |-TextComment 0xfc61a0 <line:205:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc61c0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfc6200 <line:206:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc6220 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfc6260 <col:8, col:68> Text="When the mode is LOS_WAITMODE_CLR, the eventID is passed-out."
|   |   |-HTMLEndTagComment 0xfc6280 <col:69, col:73> Name="li"
|   |   |-TextComment 0xfc62b0 <line:207:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc62d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfc6310 <col:8, col:42> Text="Otherwise the eventID is passed-in."
|   |   |-HTMLEndTagComment 0xfc6330 <col:43, col:47> Name="li"
|   |   |-TextComment 0xfc6360 <line:208:3> Text=" "
|   |   `-HTMLEndTagComment 0xfc6380 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfc6460 <line:210:3>
|   | `-TextComment 0xfc6430 <col:3> Text=" "
|   |-ParamCommandComment 0xfc6480 <col:4, line:211:3> [in] implicitly Param="eventID" ParamIndex=0
|   | `-ParagraphComment 0xfc6550 <line:210:18, line:211:3>
|   |   |-TextComment 0xfc6500 <line:210:18, col:77> Text="      [IN/OUT] Pointer to the ID of the event to be checked."
|   |   `-TextComment 0xfc6520 <line:211:3> Text=" "
|   |-ParamCommandComment 0xfc6570 <col:4, line:213:3> [in] implicitly Param="eventMask" ParamIndex=1
|   | `-ParagraphComment 0xfc6650 <line:211:20, line:213:3>
|   |   |-TextComment 0xfc65d0 <line:211:20, col:112> Text="    [IN] Mask of the event expected to occur by the user, indicating the event obtained after"
|   |   |-TextComment 0xfc65f0 <line:212:3, col:68> Text=" it is logically processed that matches the ID pointed to by mode."
|   |   `-TextComment 0xfc6610 <line:213:3> Text=" "
|   |-ParamCommandComment 0xfc6670 <col:4, col:118> [in] implicitly Param="mode" ParamIndex=2
|   | `-ParagraphComment 0xfc6700 <col:15, col:118>
|   |   `-TextComment 0xfc66d0 <col:15, col:118> Text="         [IN] Event reading mode. The modes include LOS_WAITMODE_AND, LOS_WAITMODE_OR, LOS_WAITMODE_CLR."
|   |-ParagraphComment 0xfc6750 <line:215:3>
|   | `-TextComment 0xfc6720 <col:3> Text=" "
|   |-BlockCommandComment 0xfc6770 <col:4, line:216:3> Name="retval"
|   | `-ParagraphComment 0xfc67f0 <line:215:11, line:216:3>
|   |   |-TextComment 0xfc67a0 <line:215:11, col:71> Text=" 0             The event expected by the user does not occur."
|   |   `-TextComment 0xfc67c0 <line:216:3> Text=" "
|   |-BlockCommandComment 0xfc6810 <col:4, line:217:3> Name="retval"
|   | `-ParagraphComment 0xfc6890 <line:216:11, line:217:3>
|   |   |-TextComment 0xfc6840 <line:216:11, col:63> Text=" #UINT32       The event expected by the user occurs."
|   |   `-TextComment 0xfc6860 <line:217:3> Text=" "
|   |-BlockCommandComment 0xfc68b0 <col:4, line:219:3> Name="par"
|   | `-ParagraphComment 0xfc6a80 <line:217:8, line:219:3>
|   |   |-TextComment 0xfc68e0 <line:217:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfc6900 <line:218:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc6920 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfc6960 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfc69a0 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfc69c0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xfc69f0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xfc6a20 <line:219:3> Text=" "
|   `-BlockCommandComment 0xfc6aa0 <col:4, col:38> Name="see"
|     `-ParagraphComment 0xfc6b00 <col:8, col:38>
|       `-TextComment 0xfc6ad0 <col:8, col:38> Text=" LOS_EventRead | LOS_EventWrite"
|-FunctionDecl 0xf56a88 <line:255:1, col:95> col:15 LOS_EventRead 'UINT32 (PEVENT_CB_S, UINT32, UINT32, UINT32)' extern
| |-ParmVarDecl 0xf567d8 <col:29, col:41> col:41 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0xf56850 <col:50, col:57> col:57 eventMask 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf568c8 <col:68, col:75> col:75 mode 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf56940 <col:81, col:88> col:88 timeOut 'UINT32':'unsigned int'
| `-FullComment 0xfc7d50 <line:224:3, line:253:38>
|   |-ParagraphComment 0xfc6c40 <line:224:3>
|   | `-TextComment 0xfc6c10 <col:3> Text=" "
|   |-VerbatimLineComment 0xfc6c60 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xfc6cd0 <line:225:3>
|   | `-TextComment 0xfc6ca0 <col:3> Text=" "
|   |-BlockCommandComment 0xfc6cf0 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0xfc6d50 <col:10, col:24>
|   |   `-TextComment 0xfc6d20 <col:10, col:24> Text=" Read an event."
|   |-ParagraphComment 0xfc6da0 <line:227:3>
|   | `-TextComment 0xfc6d70 <col:3> Text=" "
|   |-BlockCommandComment 0xfc6dc0 <col:4, line:231:3> Name="par"
|   | `-ParagraphComment 0xfc6ef0 <line:227:8, line:231:3>
|   |   |-TextComment 0xfc6df0 <line:227:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfc6e10 <line:228:3, col:127> Text=" This API is used to block or schedule a task that reads an event of which the event control block, event mask, reading mode,"
|   |   |-TextComment 0xfc6e30 <line:229:3, col:41> Text=" and timeout information are specified."
|   |   |-TextComment 0xfc6e50 <line:230:3> Text=" "
|   |   |-HTMLEndTagComment 0xfc6e70 <col:4, col:8> Name="ul"
|   |   `-TextComment 0xfc6ea0 <line:231:3> Text=" "
|   |-BlockCommandComment 0xfc6f10 <col:4, line:235:8> Name="attention"
|   | `-ParagraphComment 0xfc7100 <line:232:3, line:235:8>
|   |   |-TextComment 0xfc6f40 <line:232:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc6f60 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfc6fa0 <line:233:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc6fc0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfc7000 <col:8, col:119> Text="An error code and an event return value can be same. To differentiate the error code and return value, bit 25 of"
|   |   |-TextComment 0xfc7020 <line:234:3, col:42> Text=" the event mask is forbidden to be used."
|   |   |-HTMLEndTagComment 0xfc7040 <col:43, col:47> Name="li"
|   |   |-TextComment 0xfc7070 <line:235:3> Text=" "
|   |   `-HTMLEndTagComment 0xfc7090 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfc7150 <line:237:3>
|   | `-TextComment 0xfc7120 <col:3> Text=" "
|   |-ParamCommandComment 0xfc7170 <col:4, line:238:3> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0xfc7220 <line:237:18, line:238:3>
|   |   |-TextComment 0xfc71d0 <line:237:18, col:124> Text="      [IN/OUT] Pointer to the event control block to be checked. This parameter must point to valid memory."
|   |   `-TextComment 0xfc71f0 <line:238:3> Text=" "
|   |-ParamCommandComment 0xfc7240 <col:4, line:240:3> [in] implicitly Param="eventMask" ParamIndex=1
|   | `-ParagraphComment 0xfc7320 <line:238:20, line:240:3>
|   |   |-TextComment 0xfc72a0 <line:238:20, col:116> Text="    [IN]     Mask of the event expected to occur by the user, indicating the event obtained after"
|   |   |-TextComment 0xfc72c0 <line:239:3, col:100> Text="                              it is logically processed that matches the ID pointed to by eventID."
|   |   `-TextComment 0xfc72e0 <line:240:3> Text=" "
|   |-ParamCommandComment 0xfc7340 <col:4, line:241:3> [in] implicitly Param="mode" ParamIndex=2
|   | `-ParagraphComment 0xfc73f0 <line:240:15, line:241:3>
|   |   |-TextComment 0xfc73a0 <line:240:15, col:51> Text="         [IN]     Event reading mode."
|   |   `-TextComment 0xfc73c0 <line:241:3> Text=" "
|   |-ParamCommandComment 0xfc7410 <col:4, col:79> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0xfc74a0 <col:18, col:79>
|   |   `-TextComment 0xfc7470 <col:18, col:79> Text="      [IN]     Timeout interval of event reading (unit: Tick)."
|   |-ParagraphComment 0xfc7500 <line:243:3>
|   | `-TextComment 0xfc74c0 <col:3> Text=" "
|   |-BlockCommandComment 0xfc7520 <col:4, line:244:3> Name="retval"
|   | `-ParagraphComment 0xfc75a0 <line:243:11, line:244:3>
|   |   |-TextComment 0xfc7550 <line:243:11, col:123> Text=" #LOS_ERRNO_EVENT_SETBIT_INVALID     Bit 25 of the event mask cannot be set because it is set to an error number."
|   |   `-TextComment 0xfc7570 <line:244:3> Text=" "
|   |-BlockCommandComment 0xfc75c0 <col:4, line:245:3> Name="retval"
|   | `-ParagraphComment 0xfc7640 <line:244:11, line:245:3>
|   |   |-TextComment 0xfc75f0 <line:244:11, col:93> Text=" #LOS_ERRNO_EVENT_EVENTMASK_INVALID  The passed-in event reading mode is incorrect."
|   |   `-TextComment 0xfc7610 <line:245:3> Text=" "
|   |-BlockCommandComment 0xfc7660 <col:4, line:246:3> Name="retval"
|   | `-ParagraphComment 0xfc76e0 <line:245:11, line:246:3>
|   |   |-TextComment 0xfc7690 <line:245:11, col:91> Text=" #LOS_ERRNO_EVENT_READ_IN_INTERRUPT  The event is being read during an interrupt."
|   |   `-TextComment 0xfc76b0 <line:246:3> Text=" "
|   |-BlockCommandComment 0xfc7700 <col:4, line:247:3> Name="retval"
|   | `-ParagraphComment 0xfc7780 <line:246:11, line:247:3>
|   |   |-TextComment 0xfc7730 <line:246:11, col:73> Text=" #LOS_ERRNO_EVENT_FLAGS_INVALID      The event mode is invalid."
|   |   `-TextComment 0xfc7750 <line:247:3> Text=" "
|   |-BlockCommandComment 0xfc77a0 <col:4, line:248:3> Name="retval"
|   | `-ParagraphComment 0xfc7820 <line:247:11, line:248:3>
|   |   |-TextComment 0xfc77d0 <line:247:11, col:80> Text=" #LOS_ERRNO_EVENT_READ_IN_LOCK       The event reading task is locked."
|   |   `-TextComment 0xfc77f0 <line:248:3> Text=" "
|   |-BlockCommandComment 0xfc7840 <col:4, line:249:3> Name="retval"
|   | `-ParagraphComment 0xfc78c0 <line:248:11, line:249:3>
|   |   |-TextComment 0xfc7870 <line:248:11, col:77> Text=" #LOS_ERRNO_EVENT_PTR_NULL           The passed-in pointer is null."
|   |   `-TextComment 0xfc7890 <line:249:3> Text=" "
|   |-BlockCommandComment 0xfc78e0 <col:4, line:250:3> Name="retval"
|   | `-ParagraphComment 0xfc7960 <line:249:11, line:250:3>
|   |   |-TextComment 0xfc7910 <line:249:11, col:93> Text=" 0                                   The event expected by the user does not occur."
|   |   `-TextComment 0xfc7930 <line:250:3> Text=" "
|   |-BlockCommandComment 0xfc7980 <col:4, line:251:3> Name="retval"
|   | `-ParagraphComment 0xfc7a00 <line:250:11, line:251:3>
|   |   |-TextComment 0xfc79b0 <line:250:11, col:85> Text=" #UINT32                             The event expected by the user occurs."
|   |   `-TextComment 0xfc79d0 <line:251:3> Text=" "
|   |-BlockCommandComment 0xfc7a20 <col:4, line:253:3> Name="par"
|   | `-ParagraphComment 0xfc7bf0 <line:251:8, line:253:3>
|   |   |-TextComment 0xfc7a50 <line:251:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfc7a70 <line:252:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc7a90 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfc7ad0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfc7b10 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfc7b30 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xfc7b60 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xfc7b90 <line:253:3> Text=" "
|   `-BlockCommandComment 0xfc7c10 <col:4, col:38> Name="see"
|     `-ParagraphComment 0xfc7c70 <col:8, col:38>
|       `-TextComment 0xfc7c40 <col:8, col:38> Text=" LOS_EventPoll | LOS_EventWrite"
|-FunctionDecl 0xf56d18 <line:282:1, col:64> col:15 LOS_EventWrite 'UINT32 (PEVENT_CB_S, UINT32)' extern
| |-ParmVarDecl 0xf56b88 <col:30, col:42> col:42 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0xf56c00 <col:51, col:58> col:58 events 'UINT32':'unsigned int'
| `-FullComment 0xfc89d0 <line:258:3, line:280:37>
|   |-ParagraphComment 0xfc7df0 <line:258:3>
|   | `-TextComment 0xfc7dc0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfc7e10 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xfc7e80 <line:259:3>
|   | `-TextComment 0xfc7e50 <col:3> Text=" "
|   |-BlockCommandComment 0xfc7ea0 <col:4, col:25> Name="brief"
|   | `-ParagraphComment 0xfc7f00 <col:10, col:25>
|   |   `-TextComment 0xfc7ed0 <col:10, col:25> Text=" Write an event."
|   |-ParagraphComment 0xfc7f50 <line:261:3>
|   | `-TextComment 0xfc7f20 <col:3> Text=" "
|   |-BlockCommandComment 0xfc7f70 <col:4, line:264:3> Name="par"
|   | `-ParagraphComment 0xfc8040 <line:261:8, line:264:3>
|   |   |-TextComment 0xfc7fa0 <line:261:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfc7fc0 <line:262:3, col:103> Text=" This API is used to write an event specified by the passed-in event mask into an event control block"
|   |   |-TextComment 0xfc7fe0 <line:263:3, col:25> Text=" pointed to by eventCB."
|   |   `-TextComment 0xfc8000 <line:264:3> Text=" "
|   |-BlockCommandComment 0xfc8060 <col:4, line:268:8> Name="attention"
|   | `-ParagraphComment 0xfc8250 <line:265:3, line:268:8>
|   |   |-TextComment 0xfc8090 <line:265:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc80b0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfc80f0 <line:266:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc8110 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfc8150 <col:8, col:109> Text="To determine whether the LOS_EventRead API returns an event or an error code, bit 25 of the event mask"
|   |   |-TextComment 0xfc8170 <line:267:3, col:27> Text=" is forbidden to be used."
|   |   |-HTMLEndTagComment 0xfc8190 <col:28, col:32> Name="li"
|   |   |-TextComment 0xfc81c0 <line:268:3> Text=" "
|   |   `-HTMLEndTagComment 0xfc81e0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfc82a0 <line:270:3>
|   | `-TextComment 0xfc8270 <col:3> Text=" "
|   |-ParamCommandComment 0xfc82c0 <col:4, line:272:3> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0xfc83a0 <line:270:18, line:272:3>
|   |   |-TextComment 0xfc8320 <line:270:18, col:100> Text="  [IN/OUT] Pointer to the event control block into which an event is to be written."
|   |   |-TextComment 0xfc8340 <line:271:3, col:45> Text=" This parameter must point to valid memory."
|   |   `-TextComment 0xfc8360 <line:272:3> Text=" "
|   |-ParamCommandComment 0xfc83c0 <col:4, col:49> [in] implicitly Param="events" ParamIndex=1
|   | `-ParagraphComment 0xfc8450 <col:17, col:49>
|   |   `-TextComment 0xfc8420 <col:17, col:49> Text="   [IN] Event mask to be written."
|   |-ParagraphComment 0xfc84a0 <line:274:3>
|   | `-TextComment 0xfc8470 <col:3> Text=" "
|   |-BlockCommandComment 0xfc84c0 <col:4, line:276:3> Name="retval"
|   | `-ParagraphComment 0xfc8580 <line:274:11, line:276:3>
|   |   |-TextComment 0xfc8500 <line:274:11, col:94> Text=" #LOS_ERRNO_EVENT_SETBIT_INVALID  Bit 25 of the event mask cannot be set to an event"
|   |   |-TextComment 0xfc8520 <line:275:3, col:38> Text=" because it is set to an error code."
|   |   `-TextComment 0xfc8540 <line:276:3> Text=" "
|   |-BlockCommandComment 0xfc85a0 <col:4, line:277:3> Name="retval"
|   | `-ParagraphComment 0xfc8620 <line:276:11, line:277:3>
|   |   |-TextComment 0xfc85d0 <line:276:11, col:57> Text=" #LOS_ERRNO_EVENT_PTR_NULL        Null pointer."
|   |   `-TextComment 0xfc85f0 <line:277:3> Text=" "
|   |-BlockCommandComment 0xfc8640 <col:4, line:278:3> Name="retval"
|   | `-ParagraphComment 0xfc86c0 <line:277:11, line:278:3>
|   |   |-TextComment 0xfc8670 <line:277:11, col:78> Text=" #LOS_OK                          The event is successfully written."
|   |   `-TextComment 0xfc8690 <line:278:3> Text=" "
|   |-BlockCommandComment 0xfc86e0 <col:4, line:280:3> Name="par"
|   | `-ParagraphComment 0xfc88b0 <line:278:8, line:280:3>
|   |   |-TextComment 0xfc8710 <line:278:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfc8730 <line:279:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc8750 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfc8790 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfc87d0 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfc87f0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xfc8820 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xfc8850 <line:280:3> Text=" "
|   `-BlockCommandComment 0xfc88d0 <col:4, col:37> Name="see"
|     `-ParagraphComment 0xfc8930 <col:8, col:37>
|       `-TextComment 0xfc8900 <col:8, col:37> Text=" LOS_EventPoll | LOS_EventRead"
|-FunctionDecl 0xf56f18 <line:307:1, col:67> col:15 LOS_EventClear 'UINT32 (PEVENT_CB_S, UINT32)' extern
| |-ParmVarDecl 0xf56e08 <col:30, col:42> col:42 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0xf56e80 <col:51, col:58> col:58 eventMask 'UINT32':'unsigned int'
| `-FullComment 0xfc96c0 <line:285:3, line:305:54>
|   |-ParagraphComment 0xfc8a70 <line:285:3>
|   | `-TextComment 0xfc8a40 <col:3> Text=" "
|   |-VerbatimLineComment 0xfc8a90 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xfc8b00 <line:286:3>
|   | `-TextComment 0xfc8ad0 <col:3> Text=" "
|   |-BlockCommandComment 0xfc8b20 <col:4, col:66> Name="brief"
|   | `-ParagraphComment 0xfc8b80 <col:10, col:66>
|   |   `-TextComment 0xfc8b50 <col:10, col:66> Text=" Clear the event of the eventCB by a specified eventMask."
|   |-ParagraphComment 0xfc8bd0 <line:288:3>
|   | `-TextComment 0xfc8ba0 <col:3> Text=" "
|   |-BlockCommandComment 0xfc8bf0 <col:4, line:293:3> Name="par"
|   | `-ParagraphComment 0xfc8e40 <line:288:8, line:293:3>
|   |   |-TextComment 0xfc8c20 <line:288:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfc8c40 <line:289:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc8c60 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfc8ca0 <line:290:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc8cc0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfc8d00 <col:8, col:117> Text="This API is used to set the ID of an event that has a specified mask and of which the information is stored in"
|   |   |-TextComment 0xfc8d20 <line:291:3, col:89> Text=" an event control block pointed to by eventCB to 0. eventCB must point to valid memory."
|   |   |-HTMLEndTagComment 0xfc8d40 <col:90, col:94> Name="li"
|   |   |-TextComment 0xfc8d70 <line:292:3> Text=" "
|   |   |-HTMLEndTagComment 0xfc8d90 <col:4, col:8> Name="ul"
|   |   `-TextComment 0xfc8dc0 <line:293:3> Text=" "
|   |-BlockCommandComment 0xfc8e60 <col:4, line:296:8> Name="attention"
|   | `-ParagraphComment 0xfc9030 <line:294:3, line:296:8>
|   |   |-TextComment 0xfc8e90 <line:294:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc8eb0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfc8ef0 <line:295:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc8f10 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfc8f50 <col:8, col:69> Text="The value of events needs to be reversed when it is passed-in."
|   |   |-HTMLEndTagComment 0xfc8f70 <col:70, col:74> Name="li"
|   |   |-TextComment 0xfc8fa0 <line:296:3> Text=" "
|   |   `-HTMLEndTagComment 0xfc8fc0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfc9080 <line:298:3>
|   | `-TextComment 0xfc9050 <col:3> Text=" "
|   |-ParamCommandComment 0xfc90a0 <col:4, line:299:3> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0xfc9150 <line:298:18, line:299:3>
|   |   |-TextComment 0xfc9100 <line:298:18, col:80> Text="     [IN/OUT] Pointer to the event control block to be cleared."
|   |   `-TextComment 0xfc9120 <line:299:3> Text=" "
|   |-ParamCommandComment 0xfc9170 <col:4, col:63> [in] implicitly Param="eventMask" ParamIndex=1
|   | `-ParagraphComment 0xfc9200 <col:20, col:63>
|   |   `-TextComment 0xfc91d0 <col:20, col:63> Text="   [IN]     Mask of the event to be cleared."
|   |-ParagraphComment 0xfc9250 <line:301:3>
|   | `-TextComment 0xfc9220 <col:3> Text=" "
|   |-BlockCommandComment 0xfc9270 <col:4, line:302:3> Name="retval"
|   | `-ParagraphComment 0xfc92f0 <line:301:11, line:302:3>
|   |   |-TextComment 0xfc92a0 <line:301:11, col:51> Text=" #LOS_ERRNO_EVENT_PTR_NULL  Null pointer."
|   |   `-TextComment 0xfc92c0 <line:302:3> Text=" "
|   |-BlockCommandComment 0xfc9310 <col:4, line:303:3> Name="retval"
|   | `-ParagraphComment 0xfc9390 <line:302:11, line:303:3>
|   |   |-TextComment 0xfc9340 <line:302:11, col:72> Text=" #LOS_OK                    The event is successfully cleared."
|   |   `-TextComment 0xfc9360 <line:303:3> Text=" "
|   |-BlockCommandComment 0xfc93b0 <col:4, line:305:3> Name="par"
|   | `-ParagraphComment 0xfc95a0 <line:303:8, line:305:3>
|   |   |-TextComment 0xfc93e0 <line:303:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfc9400 <line:304:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc9420 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfc9460 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfc94a0 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfc94c0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xfc9510 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xfc9540 <line:305:3> Text=" "
|   `-BlockCommandComment 0xfc95c0 <col:4, col:54> Name="see"
|     `-ParagraphComment 0xfc9620 <col:8, col:54>
|       `-TextComment 0xfc95f0 <col:8, col:54> Text=" LOS_EventPoll | LOS_EventRead | LOS_EventWrite"
|-FunctionDecl 0xf57098 <line:330:1, col:51> col:15 LOS_EventDestroy 'UINT32 (PEVENT_CB_S)' extern
| |-ParmVarDecl 0xf57008 <col:32, col:44> col:44 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| `-FullComment 0xfca280 <line:310:3, line:328:54>
|   |-ParagraphComment 0xfc9760 <line:310:3>
|   | `-TextComment 0xfc9730 <col:3> Text=" "
|   |-VerbatimLineComment 0xfc9780 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xfc97f0 <line:311:3>
|   | `-TextComment 0xfc97c0 <col:3> Text=" "
|   |-BlockCommandComment 0xfc9810 <col:4, col:27> Name="brief"
|   | `-ParagraphComment 0xfc9870 <col:10, col:27>
|   |   `-TextComment 0xfc9840 <col:10, col:27> Text=" Destroy an event."
|   |-ParagraphComment 0xfc98c0 <line:313:3>
|   | `-TextComment 0xfc9890 <col:3> Text=" "
|   |-BlockCommandComment 0xfc98e0 <col:4, line:317:3> Name="par"
|   | `-ParagraphComment 0xfc9b00 <line:313:8, line:317:3>
|   |   |-TextComment 0xfc9910 <line:313:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfc9930 <line:314:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc9950 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfc9990 <line:315:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc99b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfc99f0 <col:8, col:44> Text="This API is used to Destroy an event."
|   |   |-HTMLEndTagComment 0xfc9a10 <col:45, col:49> Name="li"
|   |   |-TextComment 0xfc9a40 <line:316:3> Text=" "
|   |   |-HTMLEndTagComment 0xfc9a60 <col:4, col:8> Name="ul"
|   |   `-TextComment 0xfc9a90 <line:317:3> Text=" "
|   |-BlockCommandComment 0xfc9b20 <col:4, line:320:8> Name="attention"
|   | `-ParagraphComment 0xfc9cf0 <line:318:3, line:320:8>
|   |   |-TextComment 0xfc9b50 <line:318:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc9b70 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfc9bb0 <line:319:3> Text=" "
|   |   |-HTMLStartTagComment 0xfc9bd0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfc9c10 <col:8, col:48> Text="The specific event should be a valid one."
|   |   |-HTMLEndTagComment 0xfc9c30 <col:49, col:53> Name="li"
|   |   |-TextComment 0xfc9c60 <line:320:3> Text=" "
|   |   `-HTMLEndTagComment 0xfc9c80 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfc9d40 <line:322:3>
|   | `-TextComment 0xfc9d10 <col:3> Text=" "
|   |-ParamCommandComment 0xfc9d60 <col:4, col:82> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0xfc9df0 <col:18, col:82>
|   |   `-TextComment 0xfc9dc0 <col:18, col:82> Text="     [IN/OUT] Pointer to the event control block to be Destroyed."
|   |-ParagraphComment 0xfc9e40 <line:324:3>
|   | `-TextComment 0xfc9e10 <col:3> Text=" "
|   |-BlockCommandComment 0xfc9e60 <col:4, line:325:3> Name="retval"
|   | `-ParagraphComment 0xfc9ee0 <line:324:11, line:325:3>
|   |   |-TextComment 0xfc9e90 <line:324:11, col:50> Text=" #LOS_ERRNO_EVENT_PTR_NULL Null pointer."
|   |   `-TextComment 0xfc9eb0 <line:325:3> Text=" "
|   |-BlockCommandComment 0xfc9f00 <col:4, line:326:3> Name="retval"
|   | `-ParagraphComment 0xfc9f80 <line:325:11, line:326:3>
|   |   |-TextComment 0xfc9f30 <line:325:11, col:71> Text=" #LOS_OK                   The event is successfully cleared."
|   |   `-TextComment 0xfc9f50 <line:326:3> Text=" "
|   |-BlockCommandComment 0xfc9fa0 <col:4, line:328:3> Name="par"
|   | `-ParagraphComment 0xfca170 <line:326:8, line:328:3>
|   |   |-TextComment 0xfc9fd0 <line:326:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfc9ff0 <line:327:3> Text=" "
|   |   |-HTMLStartTagComment 0xfca010 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfca050 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfca090 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfca0b0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xfca0e0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xfca110 <line:328:3> Text=" "
|   `-BlockCommandComment 0xfca190 <col:4, col:54> Name="see"
|     `-ParagraphComment 0xfca1f0 <col:8, col:54>
|       `-TextComment 0xfca1c0 <col:8, col:54> Text=" LOS_EventPoll | LOS_EventRead | LOS_EventWrite"
|-FunctionDecl 0xf57500 <line:332:1, col:97> col:15 OsEventReadOnce 'UINT32 (PEVENT_CB_S, UINT32, UINT32, UINT32)' extern
| |-ParmVarDecl 0xf57150 <col:31, col:43> col:43 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0xf571c8 <col:52, col:59> col:59 eventMask 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf573e0 <col:70, col:77> col:77 mode 'UINT32':'unsigned int'
| `-ParmVarDecl 0xf57458 <col:83, col:90> col:90 timeOut 'UINT32':'unsigned int'
|-FunctionDecl 0xf576e0 <line:333:1, col:66> col:15 OsEventWriteOnce 'UINT32 (PEVENT_CB_S, UINT32)' extern
| |-ParmVarDecl 0xf575d0 <col:32, col:44> col:44 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| `-ParmVarDecl 0xf57648 <col:53, col:60> col:60 events 'UINT32':'unsigned int'
|-TypedefDecl 0xf57ec0 <main/los_error.h:130:1, line:134:51> line:130:16 referenced LOS_ERRORHANDLE_FUNC 'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
| |-PointerType 0xf57e40 'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
| | `-ParenType 0xf57de0 'void (CHAR *, UINT32, UINT32, UINT32, void *)' sugar
| |   `-FunctionProtoType 0xf57d90 'void (CHAR *, UINT32, UINT32, UINT32, void *)' cdecl
| |     |-BuiltinType 0xeb3d30 'void'
| |     |-PointerType 0xf57a30 'CHAR *'
| |     | `-TypedefType 0xf34540 'CHAR' sugar
| |     |   |-Typedef 0xf1c3d8 'CHAR'
| |     |   `-BuiltinType 0xeb3d70 'char'
| |     |-TypedefType 0xf1c810 'UINT32' sugar
| |     | |-Typedef 0xf1c140 'UINT32'
| |     | `-BuiltinType 0xeb3e70 'unsigned int'
| |     |-TypedefType 0xf1c810 'UINT32' sugar
| |     | |-Typedef 0xf1c140 'UINT32'
| |     | `-BuiltinType 0xeb3e70 'unsigned int'
| |     |-TypedefType 0xf1c810 'UINT32' sugar
| |     | |-Typedef 0xf1c140 'UINT32'
| |     | `-BuiltinType 0xeb3e70 'unsigned int'
| |     `-PointerType 0xeb44f0 'void *'
| |       `-BuiltinType 0xeb3d30 'void'
| `-FullComment 0xfcafa0 <line:109:3, line:128:13>
|   |-ParagraphComment 0xfca320 <line:109:3>
|   | `-TextComment 0xfca2f0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfca340 <col:4, col:20> Text=" los_err"
|   |-ParagraphComment 0xfca3b0 <line:110:3>
|   | `-TextComment 0xfca380 <col:3> Text=" "
|   |-BlockCommandComment 0xfca3d0 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0xfca430 <col:10, col:60>
|   |   `-TextComment 0xfca400 <col:10, col:60> Text=" Define the pointer to the error handling function."
|   |-ParagraphComment 0xfca480 <line:112:3>
|   | `-TextComment 0xfca450 <col:3> Text=" "
|   |-BlockCommandComment 0xfca4a0 <col:4, line:114:3> Name="par"
|   | `-ParagraphComment 0xfca560 <line:112:8, line:114:3>
|   |   |-TextComment 0xfca4d0 <line:112:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfca4f0 <line:113:3, col:73> Text=" This API is used to define the pointer to the error handling function."
|   |   `-TextComment 0xfca520 <line:114:3> Text=" "
|   |-BlockCommandComment 0xfca580 <col:4, line:117:8> Name="attention"
|   | `-ParagraphComment 0xfca750 <line:115:3, line:117:8>
|   |   |-TextComment 0xfca5b0 <line:115:3> Text=" "
|   |   |-HTMLStartTagComment 0xfca5d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfca610 <line:116:3> Text=" "
|   |   |-HTMLStartTagComment 0xfca630 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfca670 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xfca690 <col:13, col:17> Name="li"
|   |   |-TextComment 0xfca6c0 <line:117:3> Text=" "
|   |   `-HTMLEndTagComment 0xfca6e0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfca7a0 <line:119:3>
|   | `-TextComment 0xfca770 <col:3> Text=" "
|   |-ParamCommandComment 0xfca7c0 <col:4, line:120:3> [in] implicitly Param="fileName" ParamIndex=0
|   | `-ParagraphComment 0xfca870 <line:119:20, line:120:3>
|   |   |-TextComment 0xfca820 <line:119:20, col:65> Text="  [IN] Log file that stores error information."
|   |   `-TextComment 0xfca840 <line:120:3> Text=" "
|   |-ParamCommandComment 0xfca890 <col:4, line:121:3> [in] implicitly Param="lineNo" ParamIndex=1
|   | `-ParagraphComment 0xfca940 <line:120:18, line:121:3>
|   |   |-TextComment 0xfca8f0 <line:120:18, col:60> Text="    [IN] Line number of the erroneous line."
|   |   `-TextComment 0xfca910 <line:121:3> Text=" "
|   |-ParamCommandComment 0xfca960 <col:4, line:122:3> [in] implicitly Param="errorNo" ParamIndex=2
|   | `-ParagraphComment 0xfcaa10 <line:121:19, line:122:3>
|   |   |-TextComment 0xfca9c0 <line:121:19, col:37> Text="   [IN] Error code."
|   |   `-TextComment 0xfca9e0 <line:122:3> Text=" "
|   |-ParamCommandComment 0xfcaa30 <col:4, line:123:3> [in] implicitly Param="paraLen" ParamIndex=3
|   | `-ParagraphComment 0xfcaae0 <line:122:19, line:123:3>
|   |   |-TextComment 0xfcaa90 <line:122:19, col:62> Text="   [IN] Length of the input parameter pPara."
|   |   `-TextComment 0xfcaab0 <line:123:3> Text=" "
|   |-ParamCommandComment 0xfcab00 <col:4, col:50> [in] implicitly Param="para" ParamIndex=4
|   | `-ParagraphComment 0xfcab90 <col:16, col:50>
|   |   `-TextComment 0xfcab60 <col:16, col:50> Text="      [IN] User label of the error."
|   |-ParagraphComment 0xfcabe0 <line:125:3>
|   | `-TextComment 0xfcabb0 <col:3> Text=" "
|   |-BlockCommandComment 0xfcac00 <col:4, line:126:3> Name="retval"
|   | `-ParagraphComment 0xfcac80 <line:125:11, line:126:3>
|   |   |-TextComment 0xfcac30 <line:125:11, col:16> Text=" None."
|   |   `-TextComment 0xfcac50 <line:126:3> Text=" "
|   |-BlockCommandComment 0xfcaca0 <col:4, line:128:3> Name="par"
|   | `-ParagraphComment 0xfcae70 <line:126:8, line:128:3>
|   |   |-TextComment 0xfcacd0 <line:126:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfcacf0 <line:127:3> Text=" "
|   |   |-HTMLStartTagComment 0xfcad10 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfcad50 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfcad90 <col:12, col:72> Text="los_err.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfcadb0 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0xfcade0 <col:78, col:82> Name="ul"
|   |   `-TextComment 0xfcae10 <line:128:3> Text=" "
|   `-BlockCommandComment 0xfcae90 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xfcaef0 <col:8, col:13>
|       `-TextComment 0xfcaec0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xf58298 <line:158:1, line:160:39> line:158:15 LOS_ErrHandle 'UINT32 (CHAR *, UINT32, UINT32, UINT32, void *)' extern
| |-ParmVarDecl 0xf57f58 <col:29, col:35> col:35 fileName 'CHAR *'
| |-ParmVarDecl 0xf57fd0 <col:45, col:52> col:52 lineNo 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf58048 <line:159:29, col:36> col:36 errorNo 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf580c0 <col:45, col:52> col:52 paraLen 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf58140 <main/los_compiler.h:327:23, main/los_error.h:160:35> col:35 para 'void *'
| `-FullComment 0xfcbcd0 <line:137:3, line:156:12>
|   |-ParagraphComment 0xfcb040 <line:137:3>
|   | `-TextComment 0xfcb010 <col:3> Text=" "
|   |-VerbatimLineComment 0xfcb060 <col:4, col:20> Text=" los_err"
|   |-ParagraphComment 0xfcb0d0 <line:138:3>
|   | `-TextComment 0xfcb0a0 <col:3> Text=" "
|   |-BlockCommandComment 0xfcb0f0 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0xfcb150 <col:10, col:34>
|   |   `-TextComment 0xfcb120 <col:10, col:34> Text=" Error handling function."
|   |-ParagraphComment 0xfcb1a0 <line:140:3>
|   | `-TextComment 0xfcb170 <col:3> Text=" "
|   |-BlockCommandComment 0xfcb1c0 <col:4, line:142:3> Name="par"
|   | `-ParagraphComment 0xfcb270 <line:140:8, line:142:3>
|   |   |-TextComment 0xfcb1f0 <line:140:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfcb210 <line:141:3, col:77> Text=" This API is used to perform different operations according to error types."
|   |   `-TextComment 0xfcb230 <line:142:3> Text=" "
|   |-BlockCommandComment 0xfcb290 <col:4, line:145:8> Name="attention"
|   | `-ParagraphComment 0xfcb460 <line:143:3, line:145:8>
|   |   |-TextComment 0xfcb2c0 <line:143:3> Text=" "
|   |   |-HTMLStartTagComment 0xfcb2e0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfcb320 <line:144:3> Text=" "
|   |   |-HTMLStartTagComment 0xfcb340 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfcb380 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0xfcb3a0 <col:12, col:16> Name="li"
|   |   |-TextComment 0xfcb3d0 <line:145:3> Text=" "
|   |   `-HTMLEndTagComment 0xfcb3f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfcb4b0 <line:147:3>
|   | `-TextComment 0xfcb480 <col:3> Text=" "
|   |-ParamCommandComment 0xfcb4d0 <col:4, line:148:3> [in] implicitly Param="fileName" ParamIndex=0
|   | `-ParagraphComment 0xfcb5a0 <line:147:20, line:148:3>
|   |   |-TextComment 0xfcb550 <line:147:20, col:65> Text="  [IN] Log file that stores error information."
|   |   `-TextComment 0xfcb570 <line:148:3> Text=" "
|   |-ParamCommandComment 0xfcb5c0 <col:4, line:149:3> [in] implicitly Param="lineNo" ParamIndex=1
|   | `-ParagraphComment 0xfcb670 <line:148:18, line:149:3>
|   |   |-TextComment 0xfcb620 <line:148:18, col:98> Text="    [IN] Line number of the erroneous line which should not be OS_ERR_MAGIC_WORD."
|   |   `-TextComment 0xfcb640 <line:149:3> Text=" "
|   |-ParamCommandComment 0xfcb690 <col:4, line:150:3> [in] implicitly Param="errorNo" ParamIndex=2
|   | `-ParagraphComment 0xfcb740 <line:149:19, line:150:3>
|   |   |-TextComment 0xfcb6f0 <line:149:19, col:37> Text="   [IN] Error code."
|   |   `-TextComment 0xfcb710 <line:150:3> Text=" "
|   |-ParamCommandComment 0xfcb760 <col:4, line:151:3> [in] implicitly Param="paraLen" ParamIndex=3
|   | `-ParagraphComment 0xfcb810 <line:150:19, line:151:3>
|   |   |-TextComment 0xfcb7c0 <line:150:19, col:62> Text="   [IN] Length of the input parameter pPara."
|   |   `-TextComment 0xfcb7e0 <line:151:3> Text=" "
|   |-ParamCommandComment 0xfcb830 <col:4, col:50> [in] implicitly Param="para" ParamIndex=4
|   | `-ParagraphComment 0xfcb8c0 <col:16, col:50>
|   |   `-TextComment 0xfcb890 <col:16, col:50> Text="      [IN] User label of the error."
|   |-ParagraphComment 0xfcb910 <line:153:3>
|   | `-TextComment 0xfcb8e0 <col:3> Text=" "
|   |-BlockCommandComment 0xfcb930 <col:4, line:154:3> Name="retval"
|   | `-ParagraphComment 0xfcb9b0 <line:153:11, line:154:3>
|   |   |-TextComment 0xfcb960 <line:153:11, col:54> Text=" LOS_OK The error is successfully processed."
|   |   `-TextComment 0xfcb980 <line:154:3> Text=" "
|   |-BlockCommandComment 0xfcb9d0 <col:4, line:156:3> Name="par"
|   | `-ParagraphComment 0xfcbba0 <line:154:8, line:156:3>
|   |   |-TextComment 0xfcba00 <line:154:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfcba20 <line:155:3> Text=" "
|   |   |-HTMLStartTagComment 0xfcba40 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfcba80 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfcbac0 <col:12, col:72> Text="los_err.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfcbae0 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0xfcbb10 <col:78, col:82> Name="ul"
|   |   `-TextComment 0xfcbb40 <line:156:3> Text=" "
|   `-BlockCommandComment 0xfcbbc0 <col:4, col:12> Name="see"
|     `-ParagraphComment 0xfcbc20 <col:8, col:12>
|       `-TextComment 0xfcbbf0 <col:8, col:12> Text=" None"
|-RecordDecl 0xf65250 <line:166:9, line:168:1> line:166:16 struct tagUserErrFunc definition
| |-FullComment 0xfcbe40 <line:163:3, line:164:37>
| | |-ParagraphComment 0xfcbd70 <line:163:3>
| | | `-TextComment 0xfcbd40 <col:3> Text=" "
| | |-VerbatimLineComment 0xfcbd90 <col:4, col:20> Text=" los_err"
| | `-ParagraphComment 0xfcbe00 <line:164:3, col:37>
| |   `-TextComment 0xfcbdd0 <col:3, col:37> Text=" Error handling function structure."
| `-FieldDecl 0xf65320 <line:167:5, col:27> col:27 pfnHook 'LOS_ERRORHANDLE_FUNC':'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
|   `-FullComment 0xfcbf10 <col:41, col:75>
|     `-ParagraphComment 0xfcbee0 <col:41, col:75>
|       `-TextComment 0xfcbeb0 <col:41, col:75> Text=" Hook function for error handling. "
|-TypedefDecl 0xf653f8 <line:166:1, line:168:3> col:3 UserErrFunc 'struct tagUserErrFunc':'struct tagUserErrFunc'
| |-ElaboratedType 0xf653a0 'struct tagUserErrFunc' sugar
| | `-RecordType 0xf652d0 'struct tagUserErrFunc'
| |   `-Record 0xf65250 'tagUserErrFunc'
| `-FullComment 0xfcc080 <line:163:3, line:164:37>
|   |-ParagraphComment 0xfcbfb0 <line:163:3>
|   | `-TextComment 0xfcbf80 <col:3> Text=" "
|   |-VerbatimLineComment 0xfcbfd0 <col:4, col:20> Text=" los_err"
|   `-ParagraphComment 0xfcc040 <line:164:3, col:37>
|     `-TextComment 0xfcc010 <col:3, col:37> Text=" Error handling function structure."
|-EnumDecl 0xf65468 <line:171:1, line:207:1> line:171:6 LOS_MODULE_ID
| |-EnumConstantDecl 0xf65568 <line:172:5, col:32> col:5 LOS_MOD_SYS 'int'
| | `-ConstantExpr 0xf65550 <col:32> 'int'
| |   `-IntegerLiteral 0xf65530 <col:32> 'int' 0
| |-EnumConstantDecl 0xf655f0 <line:173:5, col:32> col:5 LOS_MOD_MEM 'int'
| | `-ConstantExpr 0xf655d8 <col:32> 'int'
| |   `-IntegerLiteral 0xf655b8 <col:32> 'int' 1
| |-EnumConstantDecl 0xf65678 <line:174:5, col:32> col:5 LOS_MOD_TSK 'int'
| | `-ConstantExpr 0xf65660 <col:32> 'int'
| |   `-IntegerLiteral 0xf65640 <col:32> 'int' 2
| |-EnumConstantDecl 0xf65700 <line:175:5, col:32> col:5 LOS_MOD_SWTMR 'int'
| | `-ConstantExpr 0xf656e8 <col:32> 'int'
| |   `-IntegerLiteral 0xf656c8 <col:32> 'int' 3
| |-EnumConstantDecl 0xf65788 <line:176:5, col:32> col:5 LOS_MOD_TICK 'int'
| | `-ConstantExpr 0xf65770 <col:32> 'int'
| |   `-IntegerLiteral 0xf65750 <col:32> 'int' 4
| |-EnumConstantDecl 0xf65810 <line:177:5, col:32> col:5 LOS_MOD_MSG 'int'
| | `-ConstantExpr 0xf657f8 <col:32> 'int'
| |   `-IntegerLiteral 0xf657d8 <col:32> 'int' 5
| |-EnumConstantDecl 0xf65898 <line:178:5, col:32> col:5 LOS_MOD_QUE 'int'
| | `-ConstantExpr 0xf65880 <col:32> 'int'
| |   `-IntegerLiteral 0xf65860 <col:32> 'int' 6
| |-EnumConstantDecl 0xf65920 <line:179:5, col:32> col:5 LOS_MOD_SEM 'int'
| | `-ConstantExpr 0xf65908 <col:32> 'int'
| |   `-IntegerLiteral 0xf658e8 <col:32> 'int' 7
| |-EnumConstantDecl 0xf659a8 <line:180:5, col:32> col:5 LOS_MOD_MBOX 'int'
| | `-ConstantExpr 0xf65990 <col:32> 'int'
| |   `-IntegerLiteral 0xf65970 <col:32> 'int' 8
| |-EnumConstantDecl 0xf65a30 <line:181:5, col:32> col:5 LOS_MOD_HWI 'int'
| | `-ConstantExpr 0xf65a18 <col:32> 'int'
| |   `-IntegerLiteral 0xf659f8 <col:32> 'int' 9
| |-EnumConstantDecl 0xf65ab8 <line:182:5, col:32> col:5 LOS_MOD_HWWDG 'int'
| | `-ConstantExpr 0xf65aa0 <col:32> 'int'
| |   `-IntegerLiteral 0xf65a80 <col:32> 'int' 10
| |-EnumConstantDecl 0xf65b40 <line:183:5, col:32> col:5 LOS_MOD_CACHE 'int'
| | `-ConstantExpr 0xf65b28 <col:32> 'int'
| |   `-IntegerLiteral 0xf65b08 <col:32> 'int' 11
| |-EnumConstantDecl 0xf65bc8 <line:184:5, col:32> col:5 LOS_MOD_HWTMR 'int'
| | `-ConstantExpr 0xf65bb0 <col:32> 'int'
| |   `-IntegerLiteral 0xf65b90 <col:32> 'int' 12
| |-EnumConstantDecl 0xf65c50 <line:185:5, col:32> col:5 LOS_MOD_MMU 'int'
| | `-ConstantExpr 0xf65c38 <col:32> 'int'
| |   `-IntegerLiteral 0xf65c18 <col:32> 'int' 13
| |-EnumConstantDecl 0xf65cd8 <line:187:5, col:32> col:5 LOS_MOD_LOG 'int'
| | `-ConstantExpr 0xf65cc0 <col:32> 'int'
| |   `-IntegerLiteral 0xf65ca0 <col:32> 'int' 14
| |-EnumConstantDecl 0xf65d60 <line:188:5, col:32> col:5 LOS_MOD_ERR 'int'
| | `-ConstantExpr 0xf65d48 <col:32> 'int'
| |   `-IntegerLiteral 0xf65d28 <col:32> 'int' 15
| |-EnumConstantDecl 0xf65de8 <line:190:5, col:32> col:5 LOS_MOD_EXC 'int'
| | `-ConstantExpr 0xf65dd0 <col:32> 'int'
| |   `-IntegerLiteral 0xf65db0 <col:32> 'int' 16
| |-EnumConstantDecl 0xf65e70 <line:191:5, col:32> col:5 LOS_MOD_CSTK 'int'
| | `-ConstantExpr 0xf65e58 <col:32> 'int'
| |   `-IntegerLiteral 0xf65e38 <col:32> 'int' 17
| |-EnumConstantDecl 0xf65ef8 <line:193:5, col:32> col:5 LOS_MOD_MPU 'int'
| | `-ConstantExpr 0xf65ee0 <col:32> 'int'
| |   `-IntegerLiteral 0xf65ec0 <col:32> 'int' 18
| |-EnumConstantDecl 0xf65f80 <line:194:5, col:32> col:5 LOS_MOD_NMHWI 'int'
| | `-ConstantExpr 0xf65f68 <col:32> 'int'
| |   `-IntegerLiteral 0xf65f48 <col:32> 'int' 19
| |-EnumConstantDecl 0xf66008 <line:195:5, col:32> col:5 LOS_MOD_TRACE 'int'
| | `-ConstantExpr 0xf65ff0 <col:32> 'int'
| |   `-IntegerLiteral 0xf65fd0 <col:32> 'int' 20
| |-EnumConstantDecl 0xf66090 <line:196:5, col:32> col:5 LOS_MOD_IPC 'int'
| | `-ConstantExpr 0xf66078 <col:32> 'int'
| |   `-IntegerLiteral 0xf66058 <col:32> 'int' 24
| |-EnumConstantDecl 0xf66118 <line:197:5, col:32> col:5 LOS_MOD_TIMER 'int'
| | `-ConstantExpr 0xf66100 <col:32> 'int'
| |   `-IntegerLiteral 0xf660e0 <col:32> 'int' 26
| |-EnumConstantDecl 0xf661a0 <line:198:5, col:32> col:5 LOS_MOD_EVENT 'int'
| | `-ConstantExpr 0xf66188 <col:32> 'int'
| |   `-IntegerLiteral 0xf66168 <col:32> 'int' 28
| |-EnumConstantDecl 0xf66ab0 <line:199:5, col:32> col:5 LOS_MOD_MUX 'int'
| | `-ConstantExpr 0xf66210 <col:32> 'int'
| |   `-IntegerLiteral 0xf661f0 <col:32> 'int' 29
| |-EnumConstantDecl 0xf66b38 <line:200:5, col:32> col:5 LOS_MOD_CPUP 'int'
| | `-ConstantExpr 0xf66b20 <col:32> 'int'
| |   `-IntegerLiteral 0xf66b00 <col:32> 'int' 30
| |-EnumConstantDecl 0xf66bc0 <line:201:5, col:32> col:5 LOS_MOD_HOOK 'int'
| | `-ConstantExpr 0xf66ba8 <col:32> 'int'
| |   `-IntegerLiteral 0xf66b88 <col:32> 'int' 31
| |-EnumConstantDecl 0xf66c48 <line:202:5, col:32> col:5 LOS_MOD_PM 'int'
| | `-ConstantExpr 0xf66c30 <col:32> 'int'
| |   `-IntegerLiteral 0xf66c10 <col:32> 'int' 32
| |-EnumConstantDecl 0xf66cd0 <line:203:5, col:32> col:5 LOS_MOD_LMK 'int'
| | `-ConstantExpr 0xf66cb8 <col:32> 'int'
| |   `-IntegerLiteral 0xf66c98 <col:32> 'int' 33
| |-EnumConstantDecl 0xf66d58 <line:204:5, col:32> col:5 LOS_MOD_SHELL 'int'
| | `-ConstantExpr 0xf66d40 <col:32> 'int'
| |   `-IntegerLiteral 0xf66d20 <col:32> 'int' 49
| |-EnumConstantDecl 0xf66de0 <line:205:5, col:32> col:5 LOS_MOD_SIGNAL 'int'
| | `-ConstantExpr 0xf66dc8 <col:32> 'int'
| |   `-IntegerLiteral 0xf66da8 <col:32> 'int' 50
| `-EnumConstantDecl 0xf66e30 <line:206:5> col:5 LOS_MOD_BUTT 'int'
|-RecordDecl 0xf66f38 <main/los_timer.h:56:9, line:66:1> line:56:9 struct definition
| |-FieldDecl 0xf66ff0 <line:57:5, col:19> col:19 freq 'UINT32':'unsigned int'
| |-FieldDecl 0xf67050 <line:58:5, col:19> col:19 irqNum 'INT32':'int'
| |-FieldDecl 0xf670b0 <line:59:5, col:19> col:19 periodMax 'UINT64':'unsigned long long'
| |-FieldDecl 0xf672a0 <line:60:5, col:52> col:21 init 'UINT32 (*)(HWI_PROC_FUNC)'
| |-FieldDecl 0xf67490 <line:61:5, col:45> col:21 getCycle 'UINT64 (*)(UINT32 *)'
| |-FieldDecl 0xf67680 <line:62:5, col:40> col:21 reload 'UINT64 (*)(UINT64)'
| |-FieldDecl 0xf67778 <main/los_compiler.h:327:23, main/los_timer.h:63:31> col:21 lock 'void (*)(void)'
| |-FieldDecl 0xf67870 <main/los_compiler.h:327:23, main/los_timer.h:64:33> col:21 unlock 'void (*)(void)'
| `-FieldDecl 0xf678d0 <line:65:5, col:19> col:19 tickHandler 'HWI_PROC_FUNC':'void (*)(void)'
|-TypedefDecl 0xf67978 <line:56:1, line:66:3> col:3 referenced ArchTickTimer 'struct ArchTickTimer':'ArchTickTimer'
| `-ElaboratedType 0xf67920 'struct ArchTickTimer' sugar
|   `-RecordType 0xf66fc0 'ArchTickTimer'
|     `-Record 0xf66f38 ''
|-FunctionDecl 0xf6c6a0 <line:68:1, col:27> col:8 ArchEnterSleep 'UINT32 (void)'
|-FunctionDecl 0xf6c8e8 <line:84:1, col:40> col:16 ArchSysTickTimerGet 'ArchTickTimer *(void)'
| `-FullComment 0xfcc7e0 <line:71:3, line:82:13>
|   |-ParagraphComment 0xfcc120 <line:71:3>
|   | `-TextComment 0xfcc0f0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfcc140 <col:4, col:22> Text=" los_timer"
|   |-ParagraphComment 0xfcc1b0 <line:72:3>
|   | `-TextComment 0xfcc180 <col:3> Text=" "
|   |-BlockCommandComment 0xfcc1d0 <col:4, col:39> Name="brief"
|   | `-ParagraphComment 0xfcc230 <col:10, col:39>
|   |   `-TextComment 0xfcc200 <col:10, col:39> Text=" Get tick timer control block."
|   |-ParagraphComment 0xfcc280 <line:74:3>
|   | `-TextComment 0xfcc250 <col:3> Text=" "
|   |-BlockCommandComment 0xfcc2a0 <col:4, line:75:52> Name="par"
|   | `-ParagraphComment 0xfcc320 <line:74:8, line:75:52>
|   |   |-TextComment 0xfcc2d0 <line:74:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfcc2f0 <line:75:3, col:52> Text=" This API is used to get tick timer control block."
|   |-ParagraphComment 0xfcc370 <line:77:3>
|   | `-TextComment 0xfcc340 <col:3> Text=" "
|   |-ParamCommandComment 0xfcc390 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0xfcc3f0 <<invalid sloc>>
|   |-ParagraphComment 0xfcc440 <line:79:3>
|   | `-TextComment 0xfcc410 <col:3> Text=" "
|   |-BlockCommandComment 0xfcc460 <col:4, line:80:3> Name="retval"
|   | `-ParagraphComment 0xfcc4e0 <line:79:11, line:80:3>
|   |   |-TextComment 0xfcc490 <line:79:11, col:36> Text=" #tick timer control block"
|   |   `-TextComment 0xfcc4b0 <line:80:3> Text=" "
|   |-BlockCommandComment 0xfcc500 <col:4, line:82:3> Name="par"
|   | `-ParagraphComment 0xfcc6e0 <line:80:8, line:82:3>
|   |   |-TextComment 0xfcc540 <line:80:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfcc560 <line:81:3> Text=" "
|   |   |-HTMLStartTagComment 0xfcc580 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfcc5c0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfcc600 <col:12, col:74> Text="los_timer.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfcc620 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xfcc650 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xfcc680 <line:82:3> Text=" "
|   `-BlockCommandComment 0xfcc700 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xfcc760 <col:8, col:13>
|       `-TextComment 0xfcc730 <col:8, col:13> Text=" None."
|-FunctionDecl 0xf6cb38 <main/los_tick.h:100:1, col:35> col:15 LOS_SysCycleGet 'UINT64 (void)' extern
| `-FullComment 0xfcd210 <line:82:3, line:99:3>
|   |-ParagraphComment 0xfcc880 <line:82:3, col:4>
|   | `-TextComment 0xfcc850 <col:3, col:4> Text="  "
|   |-VerbatimLineComment 0xfcc8a0 <col:5, col:23> Text="  los_tick"
|   |-ParagraphComment 0xfcc910 <line:83:3, col:4>
|   | `-TextComment 0xfcc8e0 <col:3, col:4> Text="  "
|   |-BlockCommandComment 0xfcc930 <col:5, col:45> Name="brief"
|   | `-ParagraphComment 0xfcc990 <col:11, col:45>
|   |   `-TextComment 0xfcc960 <col:11, col:45> Text=": System timer cycles get function."
|   |-ParagraphComment 0xfcc9e0 <line:85:3, col:4>
|   | `-TextComment 0xfcc9b0 <col:3, col:4> Text="  "
|   |-BlockCommandComment 0xfcca00 <col:5, line:86:48> Name="par"
|   | `-ParagraphComment 0xfcca80 <line:85:9, line:86:48>
|   |   |-TextComment 0xfcca30 <line:85:9, col:21> Text=" Description:"
|   |   `-TextComment 0xfcca50 <line:86:3, col:48> Text="  This API is used to get system timer cycles."
|   |-ParagraphComment 0xfccad0 <line:88:3>
|   | `-TextComment 0xfccaa0 <col:3> Text=" "
|   |-BlockCommandComment 0xfccaf0 <col:4, line:89:26> Name="attention"
|   | `-ParagraphComment 0xfccc90 <line:88:14, line:89:26>
|   |   |-TextComment 0xfccb20 <line:88:14> Text=":"
|   |   |-TextComment 0xfccb40 <line:89:3> Text=" "
|   |   |-HTMLStartTagComment 0xfccb60 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfccba0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfccbe0 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0xfccc00 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0xfccc30 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0xfccce0 <line:91:3>
|   | `-TextComment 0xfcccb0 <col:3> Text=" "
|   |-ParamCommandComment 0xfccd00 <col:4, col:16> [in] implicitly Param=":"
|   | `-ParagraphComment 0xfccd90 <col:11, col:16>
|   |   `-TextComment 0xfccd60 <col:11, col:16> Text=" None."
|   |-ParagraphComment 0xfccde0 <line:93:3>
|   | `-TextComment 0xfccdb0 <col:3> Text=" "
|   |-BlockCommandComment 0xfcce00 <col:4, col:34> Name="retval"
|   | `-ParagraphComment 0xfcce60 <col:11, col:34>
|   |   `-TextComment 0xfcce30 <col:11, col:34> Text=": current system cycles."
|   |-ParagraphComment 0xfcceb0 <line:95:3>
|   | `-TextComment 0xfcce80 <col:3> Text=" "
|   |-BlockCommandComment 0xfcced0 <col:4, line:97:3> Name="par"
|   | `-ParagraphComment 0xfcd0a0 <line:95:8, line:97:3>
|   |   |-TextComment 0xfccf00 <line:95:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfccf20 <line:96:3> Text=" "
|   |   |-HTMLStartTagComment 0xfccf40 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfccf80 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfccfc0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfccfe0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfcd010 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfcd040 <line:97:3> Text=" "
|   |-BlockCommandComment 0xfcd0c0 <col:4, col:13> Name="see"
|   | `-ParagraphComment 0xfcd120 <col:8, col:13>
|   |   `-TextComment 0xfcd0f0 <col:8, col:13> Text=" None."
|   `-ParagraphComment 0xfcd170 <line:99:3>
|     `-TextComment 0xfcd140 <col:3> Text=" "
|-VarDecl 0xf6cc48 <line:112:1, col:18> col:18 g_ticksPerSec 'UINT32':'unsigned int' extern
| `-FullComment 0xfcd380 <line:109:3, line:110:19>
|   |-ParagraphComment 0xfcd2b0 <line:109:3>
|   | `-TextComment 0xfcd280 <col:3> Text=" "
|   |-VerbatimLineComment 0xfcd2d0 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xfcd340 <line:110:3, col:19>
|     `-TextComment 0xfcd310 <col:3, col:19> Text=" Ticks per second"
|-VarDecl 0xf6cce8 <line:118:1, col:18> col:18 g_uwCyclePerSec 'UINT32':'unsigned int' extern
| `-FullComment 0xfcd4f0 <line:115:3, line:116:20>
|   |-ParagraphComment 0xfcd420 <line:115:3>
|   | `-TextComment 0xfcd3f0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfcd440 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xfcd4b0 <line:116:3, col:20>
|     `-TextComment 0xfcd480 <col:3, col:20> Text=" Cycles per Second"
|-VarDecl 0xf6cd88 <line:124:1, col:18> col:18 g_cyclesPerTick 'UINT32':'unsigned int' extern
| `-FullComment 0xfcd690 <line:121:3, line:122:18>
|   |-ParagraphComment 0xfcd5c0 <line:121:3>
|   | `-TextComment 0xfcd590 <col:3> Text=" "
|   |-VerbatimLineComment 0xfcd5e0 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xfcd650 <line:122:3, col:18>
|     `-TextComment 0xfcd620 <col:3, col:18> Text=" Cycles per Tick"
|-VarDecl 0xf6ce28 <line:130:1, col:18> col:18 used g_sysClock 'UINT32':'unsigned int' extern
| `-FullComment 0xfcd800 <line:127:3, line:128:15>
|   |-ParagraphComment 0xfcd730 <line:127:3>
|   | `-TextComment 0xfcd700 <col:3> Text=" "
|   |-VerbatimLineComment 0xfcd750 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xfcd7c0 <line:128:3, col:15>
|     `-TextComment 0xfcd790 <col:3, col:15> Text=" System Clock"
|-RecordDecl 0xf6d068 <line:244:9, line:252:1> line:244:16 struct TagSysTime definition
| |-FullComment 0xfcd970 <line:241:3, line:242:25>
| | |-ParagraphComment 0xfcd8a0 <line:241:3>
| | | `-TextComment 0xfcd870 <col:3> Text=" "
| | |-VerbatimLineComment 0xfcd8c0 <col:4, col:21> Text=" los_tick"
| | `-ParagraphComment 0xfcd930 <line:242:3, col:25>
| |   `-TextComment 0xfcd900 <col:3, col:25> Text=" system time structure."
| |-FieldDecl 0xf6d120 <line:245:5, col:13> col:13 uwYear 'UINT16':'unsigned short'
| | `-FullComment 0xfcda40 <col:28, col:61>
| |   `-ParagraphComment 0xfcda10 <col:28, col:61>
| |     `-TextComment 0xfcd9e0 <col:28, col:61> Text=" value 1970 ~ 2038 or 1970 ~ 2100 "
| |-FieldDecl 0xf6d1a8 <line:246:5, col:13> col:13 ucMonth 'UINT8':'unsigned char'
| | `-FullComment 0xfcdb10 <col:28, col:41>
| |   `-ParagraphComment 0xfcdae0 <col:28, col:41>
| |     `-TextComment 0xfcdab0 <col:28, col:41> Text=" value 1 - 12 "
| |-FieldDecl 0xf6d238 <line:247:5, col:13> col:13 ucDay 'UINT8':'unsigned char'
| | `-FullComment 0xfcdbe0 <col:28, col:41>
| |   `-ParagraphComment 0xfcdbb0 <col:28, col:41>
| |     `-TextComment 0xfcdb80 <col:28, col:41> Text=" value 1 - 31 "
| |-FieldDecl 0xf6d2c8 <line:248:5, col:13> col:13 ucHour 'UINT8':'unsigned char'
| | `-FullComment 0xfcdcb0 <col:28, col:41>
| |   `-ParagraphComment 0xfcdc80 <col:28, col:41>
| |     `-TextComment 0xfcdc50 <col:28, col:41> Text=" value 0 - 23 "
| |-FieldDecl 0xf6d358 <line:249:5, col:13> col:13 ucMinute 'UINT8':'unsigned char'
| | `-FullComment 0xfcdd80 <col:28, col:41>
| |   `-ParagraphComment 0xfcdd50 <col:28, col:41>
| |     `-TextComment 0xfcdd20 <col:28, col:41> Text=" value 0 - 59 "
| |-FieldDecl 0xf6d3e8 <line:250:5, col:13> col:13 ucSecond 'UINT8':'unsigned char'
| | `-FullComment 0xfcde50 <col:28, col:41>
| |   `-ParagraphComment 0xfcde20 <col:28, col:41>
| |     `-TextComment 0xfcddf0 <col:28, col:41> Text=" value 0 - 59 "
| `-FieldDecl 0xf6d478 <line:251:5, col:13> col:13 ucWeek 'UINT8':'unsigned char'
|   `-FullComment 0xfcdf20 <col:28, col:41>
|     `-ParagraphComment 0xfcdef0 <col:28, col:41>
|       `-TextComment 0xfcdec0 <col:28, col:41> Text=" value 0 - 6  "
|-TypedefDecl 0xf6d558 <line:244:1, line:252:3> col:3 SYS_TIME_S 'struct TagSysTime':'struct TagSysTime'
| |-ElaboratedType 0xf6d500 'struct TagSysTime' sugar
| | `-RecordType 0xf6d0f0 'struct TagSysTime'
| |   `-Record 0xf6d068 'TagSysTime'
| `-FullComment 0xfce090 <line:241:3, line:242:25>
|   |-ParagraphComment 0xfcdfc0 <line:241:3>
|   | `-TextComment 0xfcdf90 <col:3> Text=" "
|   |-VerbatimLineComment 0xfcdfe0 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xfce050 <line:242:3, col:25>
|     `-TextComment 0xfce020 <col:3, col:25> Text=" system time structure."
|-FunctionDecl 0xf71b40 <line:254:1, col:39> col:8 OsTickTimerReload 'UINT64 (UINT64)'
| `-ParmVarDecl 0xf6d5d8 <col:26, col:33> col:33 period 'UINT64':'unsigned long long'
|-FunctionDecl 0xf71c80 <line:260:1, col:28> col:8 OsTickTimerInit 'UINT32 (void)'
|-FunctionDecl 0xf71e28 <main/los_compiler.h:327:23, main/los_tick.h:262:48> col:6 OsTickSysTimerStartTimeSet 'void (UINT64)'
| `-ParmVarDecl 0xf71d30 <col:33, col:40> col:40 currTime 'UINT64':'unsigned long long'
|-FunctionDecl 0xf71f90 <line:282:1, col:36> col:15 LOS_TickCountGet 'UINT64 (void)' extern
| `-FullComment 0xfcfa40 <line:265:3, line:280:12>
|   |-ParagraphComment 0xfce130 <line:265:3>
|   | `-TextComment 0xfce100 <col:3> Text=" "
|   |-VerbatimLineComment 0xfce150 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xfce1c0 <line:266:3>
|   | `-TextComment 0xfce190 <col:3> Text=" "
|   |-BlockCommandComment 0xfce1e0 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0xfce240 <col:10, col:37>
|   |   `-TextComment 0xfce210 <col:10, col:37> Text=" Obtain the number of Ticks."
|   |-ParagraphComment 0xfce290 <line:268:3>
|   | `-TextComment 0xfce260 <col:3> Text=" "
|   |-BlockCommandComment 0xfce2b0 <col:4, line:270:3> Name="par"
|   | `-ParagraphComment 0xfce360 <line:268:8, line:270:3>
|   |   |-TextComment 0xfce2e0 <line:268:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfce300 <line:269:3, col:50> Text=" This API is used to obtain the number of Ticks."
|   |   `-TextComment 0xfce320 <line:270:3> Text=" "
|   |-BlockCommandComment 0xfce380 <col:4, line:273:8> Name="attention"
|   | `-ParagraphComment 0xfcf580 <line:271:3, line:273:8>
|   |   |-TextComment 0xfce3b0 <line:271:3> Text=" "
|   |   |-HTMLStartTagComment 0xfce3d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfce410 <line:272:3> Text=" "
|   |   |-HTMLStartTagComment 0xfce430 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfce470 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0xfce490 <col:12, col:16> Name="li"
|   |   |-TextComment 0xfce4c0 <line:273:3> Text=" "
|   |   `-HTMLEndTagComment 0xfce4e0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfcf5d0 <line:275:3>
|   | `-TextComment 0xfcf5a0 <col:3> Text=" "
|   |-ParamCommandComment 0xfcf5f0 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0xfcf650 <<invalid sloc>>
|   |-ParagraphComment 0xfcf6a0 <line:277:3>
|   | `-TextComment 0xfcf670 <col:3> Text=" "
|   |-BlockCommandComment 0xfcf6c0 <col:4, line:278:3> Name="retval"
|   | `-ParagraphComment 0xfcf740 <line:277:11, line:278:3>
|   |   |-TextComment 0xfcf6f0 <line:277:11, col:38> Text=" UINT64 The number of Ticks."
|   |   `-TextComment 0xfcf710 <line:278:3> Text=" "
|   |-BlockCommandComment 0xfcf760 <col:4, line:280:3> Name="par"
|   | `-ParagraphComment 0xfcf930 <line:278:8, line:280:3>
|   |   |-TextComment 0xfcf790 <line:278:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfcf7b0 <line:279:3> Text=" "
|   |   |-HTMLStartTagComment 0xfcf7d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfcf810 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfcf850 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfcf870 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfcf8a0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfcf8d0 <line:280:3> Text=" "
|   `-BlockCommandComment 0xfcf950 <col:4, col:12> Name="see"
|     `-ParagraphComment 0xfcf9b0 <col:8, col:12>
|       `-TextComment 0xfcf980 <col:8, col:12> Text=" None"
|-FunctionDecl 0xf720f0 <line:302:1, col:39> col:15 LOS_CyclePerTickGet 'UINT32 (void)' extern
| `-FullComment 0xfd03c0 <line:285:3, line:300:12>
|   |-ParagraphComment 0xfcfae0 <line:285:3>
|   | `-TextComment 0xfcfab0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfcfb00 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xfcfb70 <line:286:3>
|   | `-TextComment 0xfcfb40 <col:3> Text=" "
|   |-BlockCommandComment 0xfcfb90 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0xfcfbf0 <col:10, col:52>
|   |   `-TextComment 0xfcfbc0 <col:10, col:52> Text=" Obtain the number of cycles in one second."
|   |-ParagraphComment 0xfcfc40 <line:288:3>
|   | `-TextComment 0xfcfc10 <col:3> Text=" "
|   |-BlockCommandComment 0xfcfc60 <col:4, line:290:3> Name="par"
|   | `-ParagraphComment 0xfcfd10 <line:288:8, line:290:3>
|   |   |-TextComment 0xfcfc90 <line:288:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfcfcb0 <line:289:3, col:65> Text=" This API is used to obtain the number of cycles in one second."
|   |   `-TextComment 0xfcfcd0 <line:290:3> Text=" "
|   |-BlockCommandComment 0xfcfd30 <col:4, line:293:8> Name="attention"
|   | `-ParagraphComment 0xfcff00 <line:291:3, line:293:8>
|   |   |-TextComment 0xfcfd60 <line:291:3> Text=" "
|   |   |-HTMLStartTagComment 0xfcfd80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfcfdc0 <line:292:3> Text=" "
|   |   |-HTMLStartTagComment 0xfcfde0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfcfe20 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0xfcfe40 <col:12, col:16> Name="li"
|   |   |-TextComment 0xfcfe70 <line:293:3> Text=" "
|   |   `-HTMLEndTagComment 0xfcfe90 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfcff50 <line:295:3>
|   | `-TextComment 0xfcff20 <col:3> Text=" "
|   |-ParamCommandComment 0xfcff70 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0xfcffd0 <<invalid sloc>>
|   |-ParagraphComment 0xfd0020 <line:297:3>
|   | `-TextComment 0xfcfff0 <col:3> Text=" "
|   |-BlockCommandComment 0xfd0040 <col:4, line:298:3> Name="retval"
|   | `-ParagraphComment 0xfd00c0 <line:297:11, line:298:3>
|   |   |-TextComment 0xfd0070 <line:297:11, col:58> Text=" UINT32 Number of cycles obtained in one second."
|   |   `-TextComment 0xfd0090 <line:298:3> Text=" "
|   |-BlockCommandComment 0xfd00e0 <col:4, line:300:3> Name="par"
|   | `-ParagraphComment 0xfd02b0 <line:298:8, line:300:3>
|   |   |-TextComment 0xfd0110 <line:298:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfd0130 <line:299:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd0150 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfd0190 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfd01d0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfd01f0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfd0220 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfd0250 <line:300:3> Text=" "
|   `-BlockCommandComment 0xfd02d0 <col:4, col:12> Name="see"
|     `-ParagraphComment 0xfd0330 <col:8, col:12>
|       `-TextComment 0xfd0300 <col:8, col:12> Text=" None"
|-FunctionDecl 0xf72288 <line:323:1, col:39> col:15 LOS_Tick2MS 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xf721c8 <col:27, col:34> col:34 ticks 'UINT32':'unsigned int'
| `-FullComment 0xfd0dc0 <line:305:3, line:321:19>
|   |-ParagraphComment 0xfd0460 <line:305:3>
|   | `-TextComment 0xfd0430 <col:3> Text=" "
|   |-VerbatimLineComment 0xfd0480 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xfd04f0 <line:306:3>
|   | `-TextComment 0xfd04c0 <col:3> Text=" "
|   |-BlockCommandComment 0xfd0510 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0xfd0590 <col:10, col:40>
|   |   `-TextComment 0xfd0540 <col:10, col:40> Text=" Convert Ticks to milliseconds."
|   |-ParagraphComment 0xfd05e0 <line:308:3>
|   | `-TextComment 0xfd05b0 <col:3> Text=" "
|   |-BlockCommandComment 0xfd0600 <col:4, line:310:3> Name="par"
|   | `-ParagraphComment 0xfd06b0 <line:308:8, line:310:3>
|   |   |-TextComment 0xfd0630 <line:308:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfd0650 <line:309:3, col:53> Text=" This API is used to convert Ticks to milliseconds."
|   |   `-TextComment 0xfd0670 <line:310:3> Text=" "
|   |-BlockCommandComment 0xfd06d0 <col:4, line:313:8> Name="attention"
|   | `-ParagraphComment 0xfd08a0 <line:311:3, line:313:8>
|   |   |-TextComment 0xfd0700 <line:311:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd0720 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfd0760 <line:312:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd0780 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfd07c0 <col:8, col:76> Text="The number of milliseconds obtained through the conversion is 32-bit."
|   |   |-HTMLEndTagComment 0xfd07e0 <col:77, col:81> Name="li"
|   |   |-TextComment 0xfd0810 <line:313:3> Text=" "
|   |   `-HTMLEndTagComment 0xfd0830 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfd08f0 <line:315:3>
|   | `-TextComment 0xfd08c0 <col:3> Text=" "
|   |-ParamCommandComment 0xfd0910 <col:4, col:76> [in] implicitly Param="ticks" ParamIndex=0
|   | `-ParagraphComment 0xfd09a0 <col:17, col:76>
|   |   `-TextComment 0xfd0970 <col:17, col:76> Text="  [IN] Number of Ticks. The value range is (0,OS_SYS_CLOCK)."
|   |-ParagraphComment 0xfd09f0 <line:317:3>
|   | `-TextComment 0xfd09c0 <col:3> Text=" "
|   |-BlockCommandComment 0xfd0a10 <col:4, line:319:3> Name="retval"
|   | `-ParagraphComment 0xfd0ac0 <line:317:11, line:319:3>
|   |   |-TextComment 0xfd0a40 <line:317:11, col:109> Text=" UINT32 Number of milliseconds obtained through the conversion. Ticks are successfully converted to"
|   |   |-TextComment 0xfd0a60 <line:318:3, col:16> Text=" milliseconds."
|   |   `-TextComment 0xfd0a80 <line:319:3> Text=" "
|   |-BlockCommandComment 0xfd0ae0 <col:4, line:321:3> Name="par"
|   | `-ParagraphComment 0xfd0cb0 <line:319:8, line:321:3>
|   |   |-TextComment 0xfd0b10 <line:319:8, col:20> Text="  Dependency:"
|   |   |-TextComment 0xfd0b30 <line:320:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd0b50 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfd0b90 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfd0bd0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfd0bf0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfd0c20 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfd0c50 <line:321:3> Text=" "
|   `-BlockCommandComment 0xfd0cd0 <col:4, col:19> Name="see"
|     `-ParagraphComment 0xfd0d30 <col:8, col:19>
|       `-TextComment 0xfd0d00 <col:8, col:19> Text=" LOS_MS2Tick"
|-FunctionDecl 0xf723f8 <line:344:1, col:42> col:15 LOS_MS2Tick 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xf72368 <col:27, col:34> col:34 millisec 'UINT32':'unsigned int'
| `-FullComment 0xfd17d0 <line:326:3, line:342:19>
|   |-ParagraphComment 0xfd0e60 <line:326:3>
|   | `-TextComment 0xfd0e30 <col:3> Text=" "
|   |-VerbatimLineComment 0xfd0e80 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xfd0ef0 <line:327:3>
|   | `-TextComment 0xfd0ec0 <col:3> Text=" "
|   |-BlockCommandComment 0xfd0f10 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0xfd0f70 <col:10, col:40>
|   |   `-TextComment 0xfd0f40 <col:10, col:40> Text=" Convert milliseconds to Ticks."
|   |-ParagraphComment 0xfd0fc0 <line:329:3>
|   | `-TextComment 0xfd0f90 <col:3> Text=" "
|   |-BlockCommandComment 0xfd0fe0 <col:4, line:331:3> Name="par"
|   | `-ParagraphComment 0xfd1090 <line:329:8, line:331:3>
|   |   |-TextComment 0xfd1010 <line:329:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfd1030 <line:330:3, col:53> Text=" This API is used to convert milliseconds to Ticks."
|   |   `-TextComment 0xfd1050 <line:331:3> Text=" "
|   |-BlockCommandComment 0xfd10b0 <col:4, line:335:8> Name="attention"
|   | `-ParagraphComment 0xfd12a0 <line:332:3, line:335:8>
|   |   |-TextComment 0xfd10e0 <line:332:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd1100 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfd1140 <line:333:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd1160 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfd11a0 <col:8, col:116> Text="If the parameter passed in is equal to 0xFFFFFFFF, the retval is 0xFFFFFFFF. Pay attention to the value to be"
|   |   |-TextComment 0xfd11c0 <line:334:3, col:45> Text=" converted because data possibly overflows."
|   |   |-HTMLEndTagComment 0xfd11e0 <col:46, col:50> Name="li"
|   |   |-TextComment 0xfd1210 <line:335:3> Text=" "
|   |   `-HTMLEndTagComment 0xfd1230 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfd12f0 <line:337:3>
|   | `-TextComment 0xfd12c0 <col:3> Text=" "
|   |-ParamCommandComment 0xfd1310 <col:4, col:49> [in] implicitly Param="millisec" ParamIndex=0
|   | `-ParagraphComment 0xfd13a0 <col:20, col:49>
|   |   `-TextComment 0xfd1370 <col:20, col:49> Text="  [IN] Number of milliseconds."
|   |-ParagraphComment 0xfd13f0 <line:339:3>
|   | `-TextComment 0xfd13c0 <col:3> Text=" "
|   |-BlockCommandComment 0xfd1410 <col:4, line:340:3> Name="retval"
|   | `-ParagraphComment 0xfd1490 <line:339:11, line:340:3>
|   |   |-TextComment 0xfd1440 <line:339:11, col:66> Text=" UINT32 Number of Ticks obtained through the conversion."
|   |   `-TextComment 0xfd1460 <line:340:3> Text=" "
|   |-BlockCommandComment 0xfd14b0 <col:4, line:342:3> Name="par"
|   | `-ParagraphComment 0xfd16c0 <line:340:8, line:342:3>
|   |   |-TextComment 0xfd14e0 <line:340:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfd1500 <line:341:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd1520 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfd15a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfd15e0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfd1600 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfd1630 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfd1660 <line:342:3> Text=" "
|   `-BlockCommandComment 0xfd16e0 <col:4, col:19> Name="see"
|     `-ParagraphComment 0xfd1740 <col:8, col:19>
|       `-TextComment 0xfd1710 <col:8, col:19> Text=" LOS_Tick2MS"
|-FunctionDecl 0xf726c8 <line:362:1, col:96> col:15 LOS_TickTimerRegister 'UINT32 (const ArchTickTimer *, const HWI_PROC_FUNC)' extern
| |-ParmVarDecl 0xf72538 <col:37, col:58> col:58 timer 'const ArchTickTimer *'
| |-ParmVarDecl 0xf725b0 <col:65, col:85> col:85 tickHandler 'const HWI_PROC_FUNC':'void (*const)(void)'
| `-FullComment 0xfd2080 <line:347:3, line:360:7>
|   |-ParagraphComment 0xfd1870 <line:347:3>
|   | `-TextComment 0xfd1840 <col:3> Text=" "
|   |-VerbatimLineComment 0xfd1890 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xfd1900 <line:348:3>
|   | `-TextComment 0xfd18d0 <col:3> Text=" "
|   |-BlockCommandComment 0xfd1920 <col:4, col:47> Name="brief"
|   | `-ParagraphComment 0xfd1980 <col:10, col:47>
|   |   `-TextComment 0xfd1950 <col:10, col:47> Text=" Re-initializes the system tick timer."
|   |-ParagraphComment 0xfd19d0 <line:350:3>
|   | `-TextComment 0xfd19a0 <col:3> Text=" "
|   |-BlockCommandComment 0xfd19f0 <col:4, line:352:3> Name="par"
|   | `-ParagraphComment 0xfd1aa0 <line:350:8, line:352:3>
|   |   |-TextComment 0xfd1a20 <line:350:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfd1a40 <line:351:3, col:59> Text=" This API is used to re-initialize the system Tick timer."
|   |   `-TextComment 0xfd1a60 <line:352:3> Text=" "
|   |-BlockCommandComment 0xfd1ac0 <col:4, col:13> Name="attention"
|   | `-ParagraphComment 0xfd1af0 <<invalid sloc>>
|   |-ParagraphComment 0xfd1b40 <line:354:3>
|   | `-TextComment 0xfd1b10 <col:3> Text=" "
|   |-ParamCommandComment 0xfd1b60 <col:4, line:355:3> [in] implicitly Param="timer" ParamIndex=0
|   | `-ParagraphComment 0xfd1c10 <line:354:16, line:355:3>
|   |   |-TextComment 0xfd1bc0 <line:354:16, col:51> Text="        [IN] Specify the tick timer."
|   |   `-TextComment 0xfd1be0 <line:355:3> Text=" "
|   |-ParamCommandComment 0xfd1c30 <col:4, col:79> [in] implicitly Param="tickHandler" ParamIndex=1
|   | `-ParagraphComment 0xfd1cc0 <col:22, col:79>
|   |   `-TextComment 0xfd1c90 <col:22, col:79> Text="  [IN] Tick Interrupts the execution of the hook function."
|   |-ParagraphComment 0xfd1d10 <line:357:3>
|   | `-TextComment 0xfd1ce0 <col:3> Text=" "
|   |-BlockCommandComment 0xfd1d30 <col:4, line:358:3> Name="retval"
|   | `-ParagraphComment 0xfd1db0 <line:357:11, line:358:3>
|   |   |-TextComment 0xfd1d60 <line:357:11, col:32> Text=" LOS_OK or Error code."
|   |   `-TextComment 0xfd1d80 <line:358:3> Text=" "
|   |-BlockCommandComment 0xfd1dd0 <col:4, line:360:3> Name="par"
|   | `-ParagraphComment 0xfd1fa0 <line:358:8, line:360:3>
|   |   |-TextComment 0xfd1e00 <line:358:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfd1e20 <line:359:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd1e40 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfd1e80 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfd1ec0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfd1ee0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfd1f10 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfd1f40 <line:360:3> Text=" "
|   `-BlockCommandComment 0xfd1fc0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfd1ff0 <<invalid sloc>>
|-FunctionDecl 0xf72818 <line:381:1, col:43> col:13 LOS_UDelay 'void (UINT64)' extern
| `-ParmVarDecl 0xf72788 <col:24, col:31> col:31 microseconds 'UINT64':'unsigned long long'
|-FunctionDecl 0xf72960 <line:400:1, col:39> col:13 LOS_MDelay 'void (UINT32)' extern
| `-ParmVarDecl 0xf728d0 <col:24, col:31> col:31 millisec 'UINT32':'unsigned int'
|-FunctionDecl 0xf72aa0 <line:419:1, col:35> col:15 LOS_CurrNanosec 'UINT64 (void)' extern
|-FunctionDecl 0xf72d50 <line:440:1, col:31> col:13 OsTickHandler 'void (void)' extern
| `-FullComment 0xfd2a30 <line:422:3, line:438:13>
|   |-ParagraphComment 0xfd2120 <line:422:3>
|   | `-TextComment 0xfd20f0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfd2140 <col:4, col:22> Text="  los_tick"
|   |-ParagraphComment 0xfd21b0 <line:423:3>
|   | `-TextComment 0xfd2180 <col:3> Text=" "
|   |-BlockCommandComment 0xfd21d0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xfd2230 <col:10, col:41>
|   |   `-TextComment 0xfd2200 <col:10, col:41> Text=" Handle the system tick timeout."
|   |-ParagraphComment 0xfd2280 <line:425:3>
|   | `-TextComment 0xfd2250 <col:3> Text=" "
|   |-BlockCommandComment 0xfd22a0 <col:4, line:426:78> Name="par"
|   | `-ParagraphComment 0xfd2320 <line:425:8, line:426:78>
|   |   |-TextComment 0xfd22d0 <line:425:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfd22f0 <line:426:3, col:78> Text=" This API is called when the system tick timeout and triggers the interrupt."
|   |-ParagraphComment 0xfd2370 <line:428:3>
|   | `-TextComment 0xfd2340 <col:3> Text=" "
|   |-BlockCommandComment 0xfd2390 <col:4, line:431:8> Name="attention"
|   | `-ParagraphComment 0xfd2560 <line:429:3, line:431:8>
|   |   |-TextComment 0xfd23c0 <line:429:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd23e0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfd2420 <line:430:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd2440 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfd2480 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xfd24a0 <col:13, col:17> Name="li"
|   |   |-TextComment 0xfd24d0 <line:431:3> Text=" "
|   |   `-HTMLEndTagComment 0xfd24f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfd25c0 <line:433:3>
|   | `-TextComment 0xfd2580 <col:3> Text=" "
|   |-ParamCommandComment 0xfd25e0 <col:4, col:15> [in] implicitly Param="none."
|   | `-ParagraphComment 0xfd2640 <<invalid sloc>>
|   |-ParagraphComment 0xfd2690 <line:435:3>
|   | `-TextComment 0xfd2660 <col:3> Text=" "
|   |-BlockCommandComment 0xfd26b0 <col:4, line:436:3> Name="retval"
|   | `-ParagraphComment 0xfd2730 <line:435:11, line:436:3>
|   |   |-TextComment 0xfd26e0 <line:435:11, col:16> Text=" None."
|   |   `-TextComment 0xfd2700 <line:436:3> Text=" "
|   |-BlockCommandComment 0xfd2750 <col:4, line:438:3> Name="par"
|   | `-ParagraphComment 0xfd2920 <line:436:8, line:438:3>
|   |   |-TextComment 0xfd2780 <line:436:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfd27a0 <line:437:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd27c0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfd2800 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfd2840 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfd2860 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfd2890 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfd28c0 <line:438:3> Text=" "
|   `-BlockCommandComment 0xfd2940 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xfd29a0 <col:8, col:13>
|       `-TextComment 0xfd2970 <col:8, col:13> Text=" None."
|-RecordDecl 0xf72e18 <line:446:9, line:449:1> line:446:16 struct TagCpuTick definition
| |-FullComment 0xfd2ba0 <line:443:3, line:444:33>
| | |-ParagraphComment 0xfd2ad0 <line:443:3>
| | | `-TextComment 0xfd2aa0 <col:3> Text=" "
| | |-VerbatimLineComment 0xfd2af0 <col:4, col:21> Text=" los_tick"
| | `-ParagraphComment 0xfd2b60 <line:444:3, col:33>
| |   `-TextComment 0xfd2b30 <col:3, col:33> Text=" Define the CPU Tick structure."
| |-FieldDecl 0xf72ed0 <line:447:5, col:12> col:12 cntHi 'UINT32':'unsigned int'
| `-FieldDecl 0xf72f30 <line:448:5, col:12> col:12 cntLo 'UINT32':'unsigned int'
|-TypedefDecl 0xf72fd8 <line:446:1, line:449:3> col:3 referenced CpuTick 'struct TagCpuTick':'struct TagCpuTick'
| |-ElaboratedType 0xf72f80 'struct TagCpuTick' sugar
| | `-RecordType 0xf72ea0 'struct TagCpuTick'
| |   `-Record 0xf72e18 'TagCpuTick'
| `-FullComment 0xfd2d10 <line:443:3, line:444:33>
|   |-ParagraphComment 0xfd2c40 <line:443:3>
|   | `-TextComment 0xfd2c10 <col:3> Text=" "
|   |-VerbatimLineComment 0xfd2c60 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xfd2cd0 <line:444:3, col:33>
|     `-TextComment 0xfd2ca0 <col:3, col:33> Text=" Define the CPU Tick structure."
|-FunctionDecl 0xf73428 <line:510:1, col:72> col:15 OsCpuTick2MS 'UINT32 (CpuTick *, UINT32 *, UINT32 *)' extern
| |-ParmVarDecl 0xf73218 <col:28, col:37> col:37 cpuTick 'CpuTick *'
| |-ParmVarDecl 0xf73290 <col:46, col:54> col:54 msHi 'UINT32 *'
| |-ParmVarDecl 0xf73308 <col:60, col:68> col:68 msLo 'UINT32 *'
| `-FullComment 0xfd3920 <line:490:3, line:508:13>
|   |-ParagraphComment 0xfd2db0 <line:490:3>
|   | `-TextComment 0xfd2d80 <col:3> Text=" "
|   |-VerbatimLineComment 0xfd2dd0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xfd2e40 <line:491:3>
|   | `-TextComment 0xfd2e10 <col:3> Text=" "
|   |-BlockCommandComment 0xfd2e60 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xfd2ec0 <col:10, col:41>
|   |   `-TextComment 0xfd2e90 <col:10, col:41> Text=" Convert cycles to milliseconds."
|   |-ParagraphComment 0xfd2f10 <line:493:3>
|   | `-TextComment 0xfd2ee0 <col:3> Text=" "
|   |-BlockCommandComment 0xfd2f30 <col:4, line:495:3> Name="par"
|   | `-ParagraphComment 0xfd2fe0 <line:493:8, line:495:3>
|   |   |-TextComment 0xfd2f60 <line:493:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfd2f80 <line:494:3, col:54> Text=" This API is used to convert cycles to milliseconds."
|   |   `-TextComment 0xfd2fa0 <line:495:3> Text=" "
|   |-BlockCommandComment 0xfd3000 <col:4, line:498:8> Name="attention"
|   | `-ParagraphComment 0xfd31d0 <line:496:3, line:498:8>
|   |   |-TextComment 0xfd3030 <line:496:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd3050 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfd3090 <line:497:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd30b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfd30f0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xfd3110 <col:13, col:17> Name="li"
|   |   |-TextComment 0xfd3140 <line:498:3> Text=" "
|   |   `-HTMLEndTagComment 0xfd3160 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfd3220 <line:500:3>
|   | `-TextComment 0xfd31f0 <col:3> Text=" "
|   |-ParamCommandComment 0xfd3240 <col:4, line:501:3> [in] implicitly Param="cpuTick" ParamIndex=0
|   | `-ParagraphComment 0xfd32f0 <line:500:19, line:501:3>
|   |   |-TextComment 0xfd32a0 <line:500:19, col:47> Text="  [IN]  Number of CPU cycles."
|   |   `-TextComment 0xfd32c0 <line:501:3> Text=" "
|   |-ParamCommandComment 0xfd3310 <col:4, line:502:3> [in] implicitly Param="msHi" ParamIndex=1
|   | `-ParagraphComment 0xfd33c0 <line:501:16, line:502:3>
|   |   |-TextComment 0xfd3370 <line:501:16, col:70> Text="     [OUT] Upper 32 bits of the number of milliseconds."
|   |   `-TextComment 0xfd3390 <line:502:3> Text=" "
|   |-ParamCommandComment 0xfd33e0 <col:4, col:70> [in] implicitly Param="msLo" ParamIndex=2
|   | `-ParagraphComment 0xfd3470 <col:16, col:70>
|   |   `-TextComment 0xfd3440 <col:16, col:70> Text="     [OUT] Lower 32 bits of the number of milliseconds."
|   |-ParagraphComment 0xfd34c0 <line:504:3>
|   | `-TextComment 0xfd3490 <col:3> Text=" "
|   |-BlockCommandComment 0xfd34e0 <col:4, line:505:3> Name="retval"
|   | `-ParagraphComment 0xfd3560 <line:504:11, line:505:3>
|   |   |-TextComment 0xfd3510 <line:504:11, col:68> Text=" #LOS_ERRNO_SYS_PTR_NULL    0x02000011: Invalid parameter."
|   |   `-TextComment 0xfd3530 <line:505:3> Text=" "
|   |-BlockCommandComment 0xfd3580 <col:4, line:506:3> Name="retval"
|   | `-ParagraphComment 0xfd3610 <line:505:11, line:506:3>
|   |   |-TextComment 0xfd35c0 <line:505:11, col:91> Text=" #LOS_OK                   0:  Cycles are successfully converted to microseconds."
|   |   `-TextComment 0xfd35e0 <line:506:3> Text=" "
|   |-BlockCommandComment 0xfd3630 <col:4, line:508:3> Name="par"
|   | `-ParagraphComment 0xfd3800 <line:506:8, line:508:3>
|   |   |-TextComment 0xfd3660 <line:506:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfd3680 <line:507:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd36a0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfd36e0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfd3720 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfd3740 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfd3770 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfd37a0 <line:508:3> Text=" "
|   `-BlockCommandComment 0xfd3820 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xfd3880 <col:8, col:13>
|       `-TextComment 0xfd3850 <col:8, col:13> Text=" None."
|-FunctionDecl 0xf736a8 <line:533:1, col:72> col:15 OsCpuTick2US 'UINT32 (CpuTick *, UINT32 *, UINT32 *)' extern
| |-ParmVarDecl 0xf73518 <col:28, col:37> col:37 cpuTick 'CpuTick *'
| |-ParmVarDecl 0xf73590 <col:46, col:54> col:54 usHi 'UINT32 *'
| |-ParmVarDecl 0xf73608 <col:60, col:68> col:68 usLo 'UINT32 *'
| `-FullComment 0xfd4520 <line:513:3, line:531:13>
|   |-ParagraphComment 0xfd39c0 <line:513:3>
|   | `-TextComment 0xfd3990 <col:3> Text=" "
|   |-VerbatimLineComment 0xfd39e0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xfd3a50 <line:514:3>
|   | `-TextComment 0xfd3a20 <col:3> Text=" "
|   |-BlockCommandComment 0xfd3a70 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xfd3ad0 <col:10, col:41>
|   |   `-TextComment 0xfd3aa0 <col:10, col:41> Text=" Convert cycles to microseconds."
|   |-ParagraphComment 0xfd3b20 <line:516:3>
|   | `-TextComment 0xfd3af0 <col:3> Text=" "
|   |-BlockCommandComment 0xfd3b40 <col:4, line:518:3> Name="par"
|   | `-ParagraphComment 0xfd3bf0 <line:516:8, line:518:3>
|   |   |-TextComment 0xfd3b70 <line:516:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfd3b90 <line:517:3, col:54> Text=" This API is used to convert cycles to microseconds."
|   |   `-TextComment 0xfd3bb0 <line:518:3> Text=" "
|   |-BlockCommandComment 0xfd3c10 <col:4, line:521:8> Name="attention"
|   | `-ParagraphComment 0xfd3de0 <line:519:3, line:521:8>
|   |   |-TextComment 0xfd3c40 <line:519:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd3c60 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfd3ca0 <line:520:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd3cc0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfd3d00 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xfd3d20 <col:13, col:17> Name="li"
|   |   |-TextComment 0xfd3d50 <line:521:3> Text=" "
|   |   `-HTMLEndTagComment 0xfd3d70 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfd3e30 <line:523:3>
|   | `-TextComment 0xfd3e00 <col:3> Text=" "
|   |-ParamCommandComment 0xfd3e50 <col:4, line:524:3> [in] implicitly Param="cpuTick" ParamIndex=0
|   | `-ParagraphComment 0xfd3f00 <line:523:19, line:524:3>
|   |   |-TextComment 0xfd3eb0 <line:523:19, col:47> Text="  [IN]  Number of CPU cycles."
|   |   `-TextComment 0xfd3ed0 <line:524:3> Text=" "
|   |-ParamCommandComment 0xfd3f20 <col:4, line:525:3> [in] implicitly Param="usHi" ParamIndex=1
|   | `-ParagraphComment 0xfd3fd0 <line:524:16, line:525:3>
|   |   |-TextComment 0xfd3f80 <line:524:16, col:70> Text="     [OUT] Upper 32 bits of the number of microseconds."
|   |   `-TextComment 0xfd3fa0 <line:525:3> Text=" "
|   |-ParamCommandComment 0xfd3ff0 <col:4, col:70> [in] implicitly Param="usLo" ParamIndex=2
|   | `-ParagraphComment 0xfd4080 <col:16, col:70>
|   |   `-TextComment 0xfd4050 <col:16, col:70> Text="     [OUT] Lower 32 bits of the number of microseconds."
|   |-ParagraphComment 0xfd40d0 <line:527:3>
|   | `-TextComment 0xfd40a0 <col:3> Text=" "
|   |-BlockCommandComment 0xfd40f0 <col:4, line:528:3> Name="retval"
|   | `-ParagraphComment 0xfd4170 <line:527:11, line:528:3>
|   |   |-TextComment 0xfd4120 <line:527:11, col:68> Text=" #LOS_ERRNO_SYS_PTR_NULL    0x02000011: Invalid parameter."
|   |   `-TextComment 0xfd4140 <line:528:3> Text=" "
|   |-BlockCommandComment 0xfd4190 <col:4, line:529:3> Name="retval"
|   | `-ParagraphComment 0xfd4210 <line:528:11, line:529:3>
|   |   |-TextComment 0xfd41c0 <line:528:11, col:90> Text=" #LOS_OK                   0: Cycles are successfully converted to microseconds."
|   |   `-TextComment 0xfd41e0 <line:529:3> Text=" "
|   |-BlockCommandComment 0xfd4230 <col:4, line:531:3> Name="par"
|   | `-ParagraphComment 0xfd4400 <line:529:8, line:531:3>
|   |   |-TextComment 0xfd4260 <line:529:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfd4280 <line:530:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd42a0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfd42e0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfd4320 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfd4340 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfd4370 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfd43a0 <line:531:3> Text=" "
|   `-BlockCommandComment 0xfd4420 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xfd4480 <col:8, col:13>
|       `-TextComment 0xfd4450 <col:8, col:13> Text=" None."
|-FunctionDecl 0xf73828 <main/los_compiler.h:130:23, main/los_tick.h:556:1> line:553:22 OsCycle2MS 'UINT64 (UINT64)' static inline
| |-ParmVarDecl 0xf73798 <col:33, col:40> col:40 used cycle 'UINT64':'unsigned long long'
| |-CompoundStmt 0xf73ac8 <line:554:1, line:556:1>
| | `-ReturnStmt 0xf73a88 <line:555:5, col:66>
| |   `-CStyleCastExpr 0xf73a60 <col:12, col:66> 'UINT64':'unsigned long long' <NoOp>
| |     `-ParenExpr 0xf73a40 <col:20, col:66> 'unsigned long long'
| |       `-ParenExpr 0xf739f0 <col:21, col:65> 'unsigned long long'
| |         `-BinaryOperator 0xf739d0 <col:22, col:64> 'unsigned long long' '/'
| |           |-ImplicitCastExpr 0xf739a0 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
| |           | `-DeclRefExpr 0xf738d0 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0xf73798 'cycle' 'UINT64':'unsigned long long'
| |           `-ImplicitCastExpr 0xf739b8 <col:30, col:64> 'unsigned long long' <IntegralCast>
| |             `-ParenExpr 0xf73980 <col:30, col:64> 'unsigned int'
| |               `-BinaryOperator 0xf73960 <col:31, line:461:32> 'unsigned int' '/'
| |                 |-ImplicitCastExpr 0xf73930 <line:555:31> 'UINT32':'unsigned int' <LValueToRValue>
| |                 | `-DeclRefExpr 0xf738f0 <col:31> 'UINT32':'unsigned int' lvalue Var 0xf6ce28 'g_sysClock' 'UINT32':'unsigned int'
| |                 `-ImplicitCastExpr 0xf73948 <line:461:32> 'unsigned int' <IntegralCast>
| |                   `-IntegerLiteral 0xf73910 <col:32> 'int' 1000
| `-FullComment 0xfd4ee0 <line:536:3, line:551:13>
|   |-ParagraphComment 0xfd45d0 <line:536:3>
|   | `-TextComment 0xfd4590 <col:3> Text=" "
|   |-VerbatimLineComment 0xfd45f0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xfd4660 <line:537:3>
|   | `-TextComment 0xfd4630 <col:3> Text=" "
|   |-BlockCommandComment 0xfd4680 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xfd46e0 <col:10, col:41>
|   |   `-TextComment 0xfd46b0 <col:10, col:41> Text=" Convert cycles to milliseconds."
|   |-ParagraphComment 0xfd4730 <line:539:3>
|   | `-TextComment 0xfd4700 <col:3> Text=" "
|   |-BlockCommandComment 0xfd4750 <col:4, line:541:3> Name="par"
|   | `-ParagraphComment 0xfd4800 <line:539:8, line:541:3>
|   |   |-TextComment 0xfd4780 <line:539:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfd47a0 <line:540:3, col:54> Text=" This API is used to convert cycles to milliseconds."
|   |   `-TextComment 0xfd47c0 <line:541:3> Text=" "
|   |-BlockCommandComment 0xfd4820 <col:4, line:544:8> Name="attention"
|   | `-ParagraphComment 0xfd49f0 <line:542:3, line:544:8>
|   |   |-TextComment 0xfd4850 <line:542:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd4870 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfd48b0 <line:543:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd48d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfd4910 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xfd4930 <col:13, col:17> Name="li"
|   |   |-TextComment 0xfd4960 <line:544:3> Text=" "
|   |   `-HTMLEndTagComment 0xfd4980 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfd4a40 <line:546:3>
|   | `-TextComment 0xfd4a10 <col:3> Text=" "
|   |-ParamCommandComment 0xfd4a60 <col:4, col:43> [in] implicitly Param="cycle" ParamIndex=0
|   | `-ParagraphComment 0xfd4af0 <col:17, col:43>
|   |   `-TextComment 0xfd4ac0 <col:17, col:43> Text="     [IN] Number of cycles."
|   |-ParagraphComment 0xfd4b40 <line:548:3>
|   | `-TextComment 0xfd4b10 <col:3> Text=" "
|   |-BlockCommandComment 0xfd4b60 <col:4, line:549:3> Name="retval"
|   | `-ParagraphComment 0xfd4be0 <line:548:11, line:549:3>
|   |   |-TextComment 0xfd4b90 <line:548:11, col:120> Text=" Number of milliseconds obtained through the conversion.    Cycles are successfully converted to milliseconds."
|   |   `-TextComment 0xfd4bb0 <line:549:3> Text=" "
|   |-BlockCommandComment 0xfd4c00 <col:4, line:551:3> Name="par"
|   | `-ParagraphComment 0xfd4dd0 <line:549:8, line:551:3>
|   |   |-TextComment 0xfd4c30 <line:549:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfd4c50 <line:550:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd4c70 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfd4cb0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfd4cf0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfd4d10 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfd4d40 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfd4d70 <line:551:3> Text=" "
|   `-BlockCommandComment 0xfd4df0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xfd4e50 <col:8, col:13>
|       `-TextComment 0xfd4e20 <col:8, col:13> Text=" None."
|-FunctionDecl 0xf73b80 <main/los_compiler.h:130:23, main/los_tick.h:583:1> line:576:22 OsCycle2US 'UINT64 (UINT64)' static inline
| |-ParmVarDecl 0xf73af0 <col:33, col:40> col:40 used cycle 'UINT64':'unsigned long long'
| |-CompoundStmt 0xf752f8 <line:577:1, line:583:1>
| | |-DeclStmt 0xf750c0 <line:578:5, col:51>
| | | `-VarDecl 0xf74fb0 <col:5, line:467:32> line:578:12 used tmp 'UINT64':'unsigned long long' cinit
| | |   `-ImplicitCastExpr 0xf750a8 <col:18, line:467:32> 'UINT64':'unsigned long long' <IntegralCast>
| | |     `-BinaryOperator 0xf75088 <line:578:18, line:467:32> 'unsigned int' '/'
| | |       |-ImplicitCastExpr 0xf75058 <line:578:18> 'UINT32':'unsigned int' <LValueToRValue>
| | |       | `-DeclRefExpr 0xf75018 <col:18> 'UINT32':'unsigned int' lvalue Var 0xf6ce28 'g_sysClock' 'UINT32':'unsigned int'
| | |       `-ImplicitCastExpr 0xf75070 <line:467:32> 'unsigned int' <IntegralCast>
| | |         `-IntegerLiteral 0xf75038 <col:32> 'int' 1000000
| | |-IfStmt 0xf751c8 <line:579:5, line:581:5>
| | | |-BinaryOperator 0xf75148 <line:579:9, col:16> 'int' '=='
| | | | |-ImplicitCastExpr 0xf75118 <col:9> 'UINT64':'unsigned long long' <LValueToRValue>
| | | | | `-DeclRefExpr 0xf750d8 <col:9> 'UINT64':'unsigned long long' lvalue Var 0xf74fb0 'tmp' 'UINT64':'unsigned long long'
| | | | `-ImplicitCastExpr 0xf75130 <col:16> 'unsigned long long' <IntegralCast>
| | | |   `-IntegerLiteral 0xf750f8 <col:16> 'int' 0
| | | `-CompoundStmt 0xf751b0 <col:19, line:581:5>
| | |   `-ReturnStmt 0xf751a0 <line:580:9, col:16>
| | |     `-ImplicitCastExpr 0xf75188 <col:16> 'UINT64':'unsigned long long' <IntegralCast>
| | |       `-IntegerLiteral 0xf75168 <col:16> 'int' 0
| | `-ReturnStmt 0xf752e8 <line:582:5, col:32>
| |   `-CStyleCastExpr 0xf752c0 <col:12, col:32> 'UINT64':'unsigned long long' <NoOp>
| |     `-ParenExpr 0xf752a0 <col:20, col:32> 'unsigned long long'
| |       `-BinaryOperator 0xf75250 <col:21, col:29> 'unsigned long long' '/'
| |         |-ImplicitCastExpr 0xf75220 <col:21> 'UINT64':'unsigned long long' <LValueToRValue>
| |         | `-DeclRefExpr 0xf751e0 <col:21> 'UINT64':'unsigned long long' lvalue ParmVar 0xf73af0 'cycle' 'UINT64':'unsigned long long'
| |         `-ImplicitCastExpr 0xf75238 <col:29> 'UINT64':'unsigned long long' <LValueToRValue>
| |           `-DeclRefExpr 0xf75200 <col:29> 'UINT64':'unsigned long long' lvalue Var 0xf74fb0 'tmp' 'UINT64':'unsigned long long'
| `-FullComment 0xfd58c0 <line:559:3, line:574:13>
|   |-ParagraphComment 0xfd4f80 <line:559:3>
|   | `-TextComment 0xfd4f50 <col:3> Text=" "
|   |-VerbatimLineComment 0xfd4fa0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xfd5010 <line:560:3>
|   | `-TextComment 0xfd4fe0 <col:3> Text=" "
|   |-BlockCommandComment 0xfd5030 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xfd5090 <col:10, col:41>
|   |   `-TextComment 0xfd5060 <col:10, col:41> Text=" Convert cycles to microseconds."
|   |-ParagraphComment 0xfd50e0 <line:562:3>
|   | `-TextComment 0xfd50b0 <col:3> Text=" "
|   |-BlockCommandComment 0xfd5100 <col:4, line:564:3> Name="par"
|   | `-ParagraphComment 0xfd51b0 <line:562:8, line:564:3>
|   |   |-TextComment 0xfd5130 <line:562:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfd5150 <line:563:3, col:54> Text=" This API is used to convert cycles to microseconds."
|   |   `-TextComment 0xfd5170 <line:564:3> Text=" "
|   |-BlockCommandComment 0xfd51d0 <col:4, line:567:8> Name="attention"
|   | `-ParagraphComment 0xfd53a0 <line:565:3, line:567:8>
|   |   |-TextComment 0xfd5200 <line:565:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd5220 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfd5260 <line:566:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd5280 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfd52c0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xfd52e0 <col:13, col:17> Name="li"
|   |   |-TextComment 0xfd5310 <line:567:3> Text=" "
|   |   `-HTMLEndTagComment 0xfd5330 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfd53f0 <line:569:3>
|   | `-TextComment 0xfd53c0 <col:3> Text=" "
|   |-ParamCommandComment 0xfd5410 <col:4, col:43> [in] implicitly Param="cycle" ParamIndex=0
|   | `-ParagraphComment 0xfd54a0 <col:17, col:43>
|   |   `-TextComment 0xfd5470 <col:17, col:43> Text="     [IN] Number of cycles."
|   |-ParagraphComment 0xfd54f0 <line:571:3>
|   | `-TextComment 0xfd54c0 <col:3> Text=" "
|   |-BlockCommandComment 0xfd5510 <col:4, line:572:3> Name="retval"
|   | `-ParagraphComment 0xfd5590 <line:571:11, line:572:3>
|   |   |-TextComment 0xfd5540 <line:571:11, col:117> Text=" Number of microseconds obtained through the conversion. Cycles are successfully converted to microseconds."
|   |   `-TextComment 0xfd5560 <line:572:3> Text=" "
|   |-BlockCommandComment 0xfd55e0 <col:4, line:574:3> Name="par"
|   | `-ParagraphComment 0xfd57b0 <line:572:8, line:574:3>
|   |   |-TextComment 0xfd5610 <line:572:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfd5630 <line:573:3> Text=" "
|   |   |-HTMLStartTagComment 0xfd5650 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfd5690 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfd56d0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfd56f0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfd5720 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfd5750 <line:574:3> Text=" "
|   `-BlockCommandComment 0xfd57d0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xfd5830 <col:8, col:13>
|       `-TextComment 0xfd5800 <col:8, col:13> Text=" None."
|-EnumDecl 0xf75320 <main/los_sortlink.h:44:9, line:47:1> line:44:9
| |-EnumConstantDecl 0xf75418 <line:45:5, col:25> col:5 OS_SORT_LINK_TASK 'int'
| | `-ConstantExpr 0xf75400 <col:25> 'int'
| |   `-IntegerLiteral 0xf753e0 <col:25> 'int' 1
| `-EnumConstantDecl 0xf754a0 <line:46:5, col:26> col:5 OS_SORT_LINK_SWTMR 'int'
|   `-ConstantExpr 0xf75488 <col:26> 'int'
|     `-IntegerLiteral 0xf75468 <col:26> 'int' 2
|-TypedefDecl 0xf75548 <line:44:1, line:47:3> col:3 referenced SortLinkType 'enum SortLinkType':'SortLinkType'
| `-ElaboratedType 0xf754f0 'enum SortLinkType' sugar
|   `-EnumType 0xf753c0 'SortLinkType'
|     `-Enum 0xf75320 ''
|-RecordDecl 0xf755b8 <line:49:9, line:52:1> line:49:9 struct definition
| |-FieldDecl 0xf75670 <line:50:5, col:17> col:17 referenced sortLinkNode 'LOS_DL_LIST':'struct LOS_DL_LIST'
| `-FieldDecl 0xf756d0 <line:51:5, col:17> col:17 referenced responseTime 'UINT64':'unsigned long long'
|-TypedefDecl 0xf757d8 <line:49:1, line:52:3> col:3 referenced SortLinkList 'struct SortLinkList':'SortLinkList'
| `-ElaboratedType 0xf75780 'struct SortLinkList' sugar
|   `-RecordType 0xf75640 'SortLinkList'
|     `-Record 0xf755b8 ''
|-RecordDecl 0xf75848 <line:54:9, line:56:1> line:54:9 struct definition
| `-FieldDecl 0xf75900 <line:55:5, col:17> col:17 referenced sortLink 'LOS_DL_LIST':'struct LOS_DL_LIST'
|-TypedefDecl 0xf759a8 <line:54:1, line:56:3> col:3 referenced SortLinkAttribute 'struct SortLinkAttribute':'SortLinkAttribute'
| `-ElaboratedType 0xf75950 'struct SortLinkAttribute' sugar
|   `-RecordType 0xf758d0 'SortLinkAttribute'
|     `-Record 0xf75848 ''
|-VarDecl 0xf75a50 <line:58:1, col:26> col:26 used g_taskSortLink 'SortLinkAttribute':'SortLinkAttribute' extern
|-VarDecl 0xf75ac8 <line:59:1, col:26> col:26 used g_swtmrSortLink 'SortLinkAttribute':'SortLinkAttribute' extern
|-FunctionDecl 0xf75d48 <main/los_compiler.h:158:22, main/los_sortlink.h:73:1> line:67:22 OsSortLinkGetRemainTime 'UINT64 (UINT64, const SortLinkList *)' static inline
| |-ParmVarDecl 0xf75b40 <col:46, col:53> col:53 used currTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xf75c38 <col:63, col:83> col:83 used targetSortList 'const SortLinkList *'
| `-CompoundStmt 0xf773a0 <line:68:1, line:73:1>
|   |-IfStmt 0xf75f30 <line:69:5, line:71:5>
|   | |-BinaryOperator 0xf75eb0 <line:69:9, col:37> 'int' '>='
|   | | |-ImplicitCastExpr 0xf75e80 <col:9> 'UINT64':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0xf75df8 <col:9> 'UINT64':'unsigned long long' lvalue ParmVar 0xf75b40 'currTime' 'UINT64':'unsigned long long'
|   | | `-ImplicitCastExpr 0xf75e98 <col:21, col:37> 'UINT64':'unsigned long long' <LValueToRValue>
|   | |   `-MemberExpr 0xf75e50 <col:21, col:37> 'const UINT64':'const unsigned long long' lvalue ->responseTime 0xf756d0
|   | |     `-ImplicitCastExpr 0xf75e38 <col:21> 'const SortLinkList *' <LValueToRValue>
|   | |       `-DeclRefExpr 0xf75e18 <col:21> 'const SortLinkList *' lvalue ParmVar 0xf75c38 'targetSortList' 'const SortLinkList *'
|   | `-CompoundStmt 0xf75f18 <col:51, line:71:5>
|   |   `-ReturnStmt 0xf75f08 <line:70:9, col:16>
|   |     `-ImplicitCastExpr 0xf75ef0 <col:16> 'UINT64':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0xf75ed0 <col:16> 'int' 0
|   `-ReturnStmt 0xf77390 <line:72:5, col:52>
|     `-ParenExpr 0xf77370 <col:12, col:52> 'unsigned long long'
|       `-BinaryOperator 0xf77350 <col:13, col:44> 'unsigned long long' '-'
|         |-ImplicitCastExpr 0xf77320 <col:13, col:29> 'UINT64':'unsigned long long' <LValueToRValue>
|         | `-MemberExpr 0xf75f80 <col:13, col:29> 'const UINT64':'const unsigned long long' lvalue ->responseTime 0xf756d0
|         |   `-ImplicitCastExpr 0xf75f68 <col:13> 'const SortLinkList *' <LValueToRValue>
|         |     `-DeclRefExpr 0xf75f48 <col:13> 'const SortLinkList *' lvalue ParmVar 0xf75c38 'targetSortList' 'const SortLinkList *'
|         `-ImplicitCastExpr 0xf77338 <col:44> 'UINT64':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0xf77300 <col:44> 'UINT64':'unsigned long long' lvalue ParmVar 0xf75b40 'currTime' 'UINT64':'unsigned long long'
|-FunctionDecl 0xf77518 <main/los_compiler.h:158:22, main/los_sortlink.h:79:1> line:75:20 OsDeleteNodeSortLink 'void (SortLinkList *)' static inline
| |-ParmVarDecl 0xf77428 <col:41, col:55> col:55 used sortList 'SortLinkList *'
| `-CompoundStmt 0xf77890 <line:76:1, line:79:1>
|   |-CallExpr 0xf77678 <line:77:5, col:43> 'void'
|   | |-ImplicitCastExpr 0xf77660 <col:5> 'void (*)(LOS_DL_LIST *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xf775c0 <col:5> 'void (LOS_DL_LIST *)' Function 0xf50340 'LOS_ListDelete' 'void (LOS_DL_LIST *)'
|   | `-UnaryOperator 0xf77648 <col:20, col:31> 'LOS_DL_LIST *' prefix '&' cannot overflow
|   |   `-MemberExpr 0xf77618 <col:21, col:31> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue ->sortLinkNode 0xf75670
|   |     `-ImplicitCastExpr 0xf77600 <col:21> 'SortLinkList *' <LValueToRValue>
|   |       `-DeclRefExpr 0xf775e0 <col:21> 'SortLinkList *' lvalue ParmVar 0xf77428 'sortList' 'SortLinkList *'
|   `-ParenExpr 0xf77870 <line:62:45, col:98> 'UINT64':'unsigned long long'
|     `-BinaryOperator 0xf77850 <col:46, col:97> 'UINT64':'unsigned long long' '='
|       |-MemberExpr 0xf77770 <col:46, col:76> 'UINT64':'unsigned long long' lvalue ->responseTime 0xf756d0
|       | `-ParenExpr 0xf77750 <col:46, col:73> 'SortLinkList *'
|       |   `-CStyleCastExpr 0xf77728 <col:47, col:72> 'SortLinkList *' <NoOp>
|       |     `-ImplicitCastExpr 0xf77710 <col:63, col:72> 'SortLinkList *' <LValueToRValue> part_of_explicit_cast
|       |       `-ParenExpr 0xf776f0 <col:63, col:72> 'SortLinkList *' lvalue
|       |         `-DeclRefExpr 0xf776a0 <line:78:24> 'SortLinkList *' lvalue ParmVar 0xf77428 'sortList' 'SortLinkList *'
|       `-ParenExpr 0xf77830 <line:62:91, col:97> 'UINT64':'unsigned long long'
|         `-ParenExpr 0xf77810 <line:61:35, col:46> 'UINT64':'unsigned long long'
|           `-CStyleCastExpr 0xf777e8 <col:36, col:45> 'UINT64':'unsigned long long' <IntegralCast>
|             `-UnaryOperator 0xf777c0 <col:44, col:45> 'int' prefix '-'
|               `-IntegerLiteral 0xf777a0 <col:45> 'int' 1
|-FunctionDecl 0xf77b28 <main/los_compiler.h:158:22, main/los_sortlink.h:96:1> line:81:22 used GetSortLinkNextExpireTime 'UINT64 (SortLinkAttribute *, UINT64, UINT32)' static inline
| |-ParmVarDecl 0xf77918 <col:48, col:67> col:67 used sortHeader 'SortLinkAttribute *'
| |-ParmVarDecl 0xf77990 <col:79, col:86> col:86 used startTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xf77a08 <col:97, col:104> col:104 used tickPrecision 'UINT32':'unsigned int'
| `-CompoundStmt 0xf79d70 <line:82:1, line:96:1>
|   |-DeclStmt 0xf77cd8 <line:83:5, col:46>
|   | `-VarDecl 0xf77bf0 <col:5, col:38> col:18 used head 'LOS_DL_LIST *' cinit
|   |   `-UnaryOperator 0xf77cc0 <col:25, col:38> 'LOS_DL_LIST *' prefix '&' cannot overflow
|   |     `-MemberExpr 0xf77c90 <col:26, col:38> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue ->sortLink 0xf75900
|   |       `-ImplicitCastExpr 0xf77c78 <col:26> 'SortLinkAttribute *' <LValueToRValue>
|   |         `-DeclRefExpr 0xf77c58 <col:26> 'SortLinkAttribute *' lvalue ParmVar 0xf77918 'sortHeader' 'SortLinkAttribute *'
|   |-DeclStmt 0xf77de8 <line:84:5, col:38>
|   | `-VarDecl 0xf77d00 <col:5, col:31> col:18 used list 'LOS_DL_LIST *' cinit
|   |   `-ImplicitCastExpr 0xf77dd0 <col:25, col:31> 'struct LOS_DL_LIST *' <LValueToRValue>
|   |     `-MemberExpr 0xf77da0 <col:25, col:31> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xf447d0
|   |       `-ImplicitCastExpr 0xf77d88 <col:25> 'LOS_DL_LIST *' <LValueToRValue>
|   |         `-DeclRefExpr 0xf77d68 <col:25> 'LOS_DL_LIST *' lvalue Var 0xf77bf0 'head' 'LOS_DL_LIST *'
|   |-IfStmt 0xf78018 <line:86:5, line:88:5>
|   | |-CallExpr 0xf77eb0 <line:86:9, col:27> 'BOOL':'unsigned int'
|   | | |-ImplicitCastExpr 0xf77e98 <col:9> 'BOOL (*)(LOS_DL_LIST *)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0xf77e00 <col:9> 'BOOL (LOS_DL_LIST *)' Function 0xf50ac8 'LOS_ListEmpty' 'BOOL (LOS_DL_LIST *)'
|   | | `-ImplicitCastExpr 0xf77ed8 <col:23> 'LOS_DL_LIST *' <LValueToRValue>
|   | |   `-DeclRefExpr 0xf77e20 <col:23> 'LOS_DL_LIST *' lvalue Var 0xf77bf0 'head' 'LOS_DL_LIST *'
|   | `-CompoundStmt 0xf78000 <col:30, line:88:5>
|   |   `-ReturnStmt 0xf77ff0 <line:87:9, col:42>
|   |     `-BinaryOperator 0xf77fd0 <line:65:33, line:87:42> 'unsigned long long' '-'
|   |       |-ParenExpr 0xf77f60 <line:65:33, col:44> 'UINT64':'unsigned long long'
|   |       | `-CStyleCastExpr 0xf77f38 <col:34, col:43> 'UINT64':'unsigned long long' <IntegralCast>
|   |       |   `-UnaryOperator 0xf77f10 <col:42, col:43> 'int' prefix '-'
|   |       |     `-IntegerLiteral 0xf77ef0 <col:43> 'int' 1
|   |       `-ImplicitCastExpr 0xf77fb8 <line:87:42> 'unsigned long long' <IntegralCast>
|   |         `-ImplicitCastExpr 0xf77fa0 <col:42> 'UINT32':'unsigned int' <LValueToRValue>
|   |           `-DeclRefExpr 0xf77f80 <col:42> 'UINT32':'unsigned int' lvalue ParmVar 0xf77a08 'tickPrecision' 'UINT32':'unsigned int'
|   |-DeclStmt 0xf79a58 <line:90:5, col:83>
|   | `-VarDecl 0xf78040 <col:5, main/los_list.h:277:69> main/los_sortlink.h:90:19 used listSorted 'SortLinkList *' cinit
|   |   `-ParenExpr 0xf799e0 <main/los_list.h:277:5, col:69> 'SortLinkList *'
|   |     `-CStyleCastExpr 0xf799b8 <col:6, col:68> 'SortLinkList *' <BitCast>
|   |       `-CStyleCastExpr 0xf79980 <col:14, col:68> 'void *' <BitCast>
|   |         `-ParenExpr 0xf79960 <col:22, col:68> 'CHAR *'
|   |           `-BinaryOperator 0xf78290 <col:23, line:251:69> 'CHAR *' '-'
|   |             |-CStyleCastExpr 0xf78130 <line:277:23, col:36> 'CHAR *' <BitCast>
|   |             | `-ImplicitCastExpr 0xf78118 <col:31, col:36> 'LOS_DL_LIST *' <LValueToRValue> part_of_explicit_cast
|   |             |   `-ParenExpr 0xf780f8 <col:31, col:36> 'LOS_DL_LIST *' lvalue
|   |             |     `-DeclRefExpr 0xf780a8 <main/los_sortlink.h:90:50> 'LOS_DL_LIST *' lvalue Var 0xf77d00 'list' 'LOS_DL_LIST *'
|   |             `-ParenExpr 0xf78270 <main/los_list.h:251:38, col:69> 'UINT32':'unsigned int'
|   |               `-CStyleCastExpr 0xf78248 <col:39, col:68> 'UINT32':'unsigned int' <PointerToIntegral>
|   |                 `-UnaryOperator 0xf78220 <col:47, col:68> 'LOS_DL_LIST *' prefix '&' cannot overflow
|   |                   `-ParenExpr 0xf78200 <col:48, col:68> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue
|   |                     `-MemberExpr 0xf781d0 <col:49, main/los_sortlink.h:90:70> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue ->sortLinkNode 0xf75670
|   |                       `-ParenExpr 0xf781b0 <main/los_list.h:251:49, col:59> 'SortLinkList *'
|   |                         `-CStyleCastExpr 0xf78188 <col:50, col:58> 'SortLinkList *' <NullToPointer>
|   |                           `-IntegerLiteral 0xf78158 <col:58> 'int' 0
|   |-IfStmt 0xf79cc8 <main/los_sortlink.h:91:5, line:93:5>
|   | |-BinaryOperator 0xf79bb8 <line:91:9, col:63> 'int' '<='
|   | | |-ImplicitCastExpr 0xf79ba0 <col:9, col:21> 'UINT64':'unsigned long long' <LValueToRValue>
|   | | | `-MemberExpr 0xf79aa8 <col:9, col:21> 'UINT64':'unsigned long long' lvalue ->responseTime 0xf756d0
|   | | |   `-ImplicitCastExpr 0xf79a90 <col:9> 'SortLinkList *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0xf79a70 <col:9> 'SortLinkList *' lvalue Var 0xf78040 'listSorted' 'SortLinkList *'
|   | | `-ParenExpr 0xf79b80 <col:37, col:63> 'unsigned long long'
|   | |   `-BinaryOperator 0xf79b60 <col:38, col:50> 'unsigned long long' '+'
|   | |     |-ImplicitCastExpr 0xf79b18 <col:38> 'UINT64':'unsigned long long' <LValueToRValue>
|   | |     | `-DeclRefExpr 0xf79ad8 <col:38> 'UINT64':'unsigned long long' lvalue ParmVar 0xf77990 'startTime' 'UINT64':'unsigned long long'
|   | |     `-ImplicitCastExpr 0xf79b48 <col:50> 'unsigned long long' <IntegralCast>
|   | |       `-ImplicitCastExpr 0xf79b30 <col:50> 'UINT32':'unsigned int' <LValueToRValue>
|   | |         `-DeclRefExpr 0xf79af8 <col:50> 'UINT32':'unsigned int' lvalue ParmVar 0xf77a08 'tickPrecision' 'UINT32':'unsigned int'
|   | `-CompoundStmt 0xf79cb0 <col:66, line:93:5>
|   |   `-ReturnStmt 0xf79ca0 <line:92:9, col:42>
|   |     `-ParenExpr 0xf79c80 <col:16, col:42> 'unsigned long long'
|   |       `-BinaryOperator 0xf79c60 <col:17, col:29> 'unsigned long long' '+'
|   |         |-ImplicitCastExpr 0xf79c18 <col:17> 'UINT64':'unsigned long long' <LValueToRValue>
|   |         | `-DeclRefExpr 0xf79bd8 <col:17> 'UINT64':'unsigned long long' lvalue ParmVar 0xf77990 'startTime' 'UINT64':'unsigned long long'
|   |         `-ImplicitCastExpr 0xf79c48 <col:29> 'unsigned long long' <IntegralCast>
|   |           `-ImplicitCastExpr 0xf79c30 <col:29> 'UINT32':'unsigned int' <LValueToRValue>
|   |             `-DeclRefExpr 0xf79bf8 <col:29> 'UINT32':'unsigned int' lvalue ParmVar 0xf77a08 'tickPrecision' 'UINT32':'unsigned int'
|   `-ReturnStmt 0xf79d60 <line:95:5, col:24>
|     `-ImplicitCastExpr 0xf79d48 <col:12, col:24> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-MemberExpr 0xf79d18 <col:12, col:24> 'UINT64':'unsigned long long' lvalue ->responseTime 0xf756d0
|         `-ImplicitCastExpr 0xf79d00 <col:12> 'SortLinkList *' <LValueToRValue>
|           `-DeclRefExpr 0xf79ce0 <col:12> 'SortLinkList *' lvalue Var 0xf78040 'listSorted' 'SortLinkList *'
|-FunctionDecl 0xf79f48 <main/los_compiler.h:158:22, main/los_sortlink.h:103:1> line:98:22 OsGetNextExpireTime 'UINT64 (UINT64, UINT32)' static inline
| |-ParmVarDecl 0xf79dc0 <col:42, col:49> col:49 used startTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xf79e38 <col:60, col:67> col:67 used tickPrecision 'UINT32':'unsigned int'
| `-CompoundStmt 0xf7a508 <line:99:1, line:103:1>
|   |-DeclStmt 0xf7a1e8 <line:100:5, col:97>
|   | `-VarDecl 0xf7a008 <col:5, col:96> col:12 used taskExpireTime 'UINT64':'unsigned long long' cinit
|   |   `-CallExpr 0xf7a180 <col:29, col:96> 'UINT64':'unsigned long long'
|   |     |-ImplicitCastExpr 0xf7a168 <col:29> 'UINT64 (*)(SortLinkAttribute *, UINT64, UINT32)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0xf7a070 <col:29> 'UINT64 (SortLinkAttribute *, UINT64, UINT32)' Function 0xf77b28 'GetSortLinkNextExpireTime' 'UINT64 (SortLinkAttribute *, UINT64, UINT32)'
|   |     |-UnaryOperator 0xf7a0b0 <col:55, col:56> 'SortLinkAttribute *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0xf7a090 <col:56> 'SortLinkAttribute':'SortLinkAttribute' lvalue Var 0xf75a50 'g_taskSortLink' 'SortLinkAttribute':'SortLinkAttribute'
|   |     |-ImplicitCastExpr 0xf7a1b8 <col:72> 'UINT64':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0xf7a0c8 <col:72> 'UINT64':'unsigned long long' lvalue ParmVar 0xf79dc0 'startTime' 'UINT64':'unsigned long long'
|   |     `-ImplicitCastExpr 0xf7a1d0 <col:83> 'UINT32':'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0xf7a0e8 <col:83> 'UINT32':'unsigned int' lvalue ParmVar 0xf79e38 'tickPrecision' 'UINT32':'unsigned int'
|   |-DeclStmt 0xf7a390 <line:101:5, col:99>
|   | `-VarDecl 0xf7a210 <col:5, col:98> col:12 used swtmrExpireTime 'UINT64':'unsigned long long' cinit
|   |   `-CallExpr 0xf7a328 <col:30, col:98> 'UINT64':'unsigned long long'
|   |     |-ImplicitCastExpr 0xf7a310 <col:30> 'UINT64 (*)(SortLinkAttribute *, UINT64, UINT32)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0xf7a278 <col:30> 'UINT64 (SortLinkAttribute *, UINT64, UINT32)' Function 0xf77b28 'GetSortLinkNextExpireTime' 'UINT64 (SortLinkAttribute *, UINT64, UINT32)'
|   |     |-UnaryOperator 0xf7a2b8 <col:56, col:57> 'SortLinkAttribute *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0xf7a298 <col:57> 'SortLinkAttribute':'SortLinkAttribute' lvalue Var 0xf75ac8 'g_swtmrSortLink' 'SortLinkAttribute':'SortLinkAttribute'
|   |     |-ImplicitCastExpr 0xf7a360 <col:74> 'UINT64':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0xf7a2d0 <col:74> 'UINT64':'unsigned long long' lvalue ParmVar 0xf79dc0 'startTime' 'UINT64':'unsigned long long'
|   |     `-ImplicitCastExpr 0xf7a378 <col:85> 'UINT32':'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0xf7a2f0 <col:85> 'UINT32':'unsigned int' lvalue ParmVar 0xf79e38 'tickPrecision' 'UINT32':'unsigned int'
|   `-ReturnStmt 0xf7a4f8 <line:102:5, col:66>
|     `-ConditionalOperator 0xf7a4c8 <col:12, col:66> 'unsigned long long'
|       |-ParenExpr 0xf7a438 <col:12, col:45> 'int'
|       | `-BinaryOperator 0xf7a418 <col:13, col:30> 'int' '<'
|       |   |-ImplicitCastExpr 0xf7a3e8 <col:13> 'UINT64':'unsigned long long' <LValueToRValue>
|       |   | `-DeclRefExpr 0xf7a3a8 <col:13> 'UINT64':'unsigned long long' lvalue Var 0xf7a008 'taskExpireTime' 'UINT64':'unsigned long long'
|       |   `-ImplicitCastExpr 0xf7a400 <col:30> 'UINT64':'unsigned long long' <LValueToRValue>
|       |     `-DeclRefExpr 0xf7a3c8 <col:30> 'UINT64':'unsigned long long' lvalue Var 0xf7a210 'swtmrExpireTime' 'UINT64':'unsigned long long'
|       |-ImplicitCastExpr 0xf7a498 <col:49> 'UINT64':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0xf7a458 <col:49> 'UINT64':'unsigned long long' lvalue Var 0xf7a008 'taskExpireTime' 'UINT64':'unsigned long long'
|       `-ImplicitCastExpr 0xf7a4b0 <col:66> 'UINT64':'unsigned long long' <LValueToRValue>
|         `-DeclRefExpr 0xf7a478 <col:66> 'UINT64':'unsigned long long' lvalue Var 0xf7a210 'swtmrExpireTime' 'UINT64':'unsigned long long'
|-FunctionDecl 0xf7a658 <line:105:1, col:60> col:20 OsGetSortLinkAttribute 'SortLinkAttribute *(SortLinkType)'
| `-ParmVarDecl 0xf7a560 <col:43, col:56> col:56 type 'SortLinkType':'SortLinkType'
|-FunctionDecl 0xf7a808 <line:106:1, col:56> col:8 OsSortLinkInit 'UINT32 (SortLinkAttribute *)'
| `-ParmVarDecl 0xf7a710 <col:23, col:42> col:42 sortLinkHeader 'SortLinkAttribute *'
|-FunctionDecl 0xf7bbb8 <main/los_compiler.h:327:23, main/los_sortlink.h:107:94> col:6 OsAdd2SortLink 'void (SortLinkList *, UINT64, UINT32, SortLinkType)'
| |-ParmVarDecl 0xf7a8c0 <col:21, col:35> col:35 node 'SortLinkList *'
| |-ParmVarDecl 0xf7b980 <col:41, col:48> col:48 startTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xf7b9f8 <col:59, col:66> col:66 waitTicks 'UINT32':'unsigned int'
| `-ParmVarDecl 0xf7ba70 <col:77, col:90> col:90 type 'SortLinkType':'SortLinkType'
|-FunctionDecl 0xf7bd18 <main/los_compiler.h:327:23, main/los_sortlink.h:108:41> col:6 OsDeleteSortLink 'void (SortLinkList *)'
| `-ParmVarDecl 0xf7bc88 <col:23, col:37> col:37 node 'SortLinkList *'
|-FunctionDecl 0xf7bee0 <line:109:1, col:89> col:8 OsSortLinkGetTargetExpireTime 'UINT64 (UINT64, const SortLinkList *)'
| |-ParmVarDecl 0xf7bdd0 <col:38, col:45> col:45 currTime 'UINT64':'unsigned long long'
| `-ParmVarDecl 0xf7be48 <col:55, col:75> col:75 targetSortList 'const SortLinkList *'
|-FunctionDecl 0xf7c0e8 <line:110:1, col:75> col:8 OsSortLinkGetNextExpireTime 'UINT64 (const SortLinkAttribute *)'
| `-ParmVarDecl 0xf7bff8 <col:36, col:61> col:61 sortLinkHeader 'const SortLinkAttribute *'
|-TypedefDecl 0xf7fee8 <main/los_task.h:448:1, col:43> col:17 referenced TSK_ENTRY_FUNC 'void *(*)(UINT32)'
| |-PointerType 0xf7fe80 'void *(*)(UINT32)'
| | `-ParenType 0xf7fe20 'void *(UINT32)' sugar
| |   `-FunctionProtoType 0xf7fdf0 'void *(UINT32)' cdecl
| |     |-PointerType 0xeb44f0 'void *'
| |     | `-BuiltinType 0xeb3d30 'void'
| |     `-TypedefType 0xf1c810 'UINT32' sugar
| |       |-Typedef 0xf1c140 'UINT32'
| |       `-BuiltinType 0xeb3e70 'unsigned int'
| `-FullComment 0xfd5a80 <line:444:3, line:447:1>
|   |-ParagraphComment 0xfd5960 <line:444:3>
|   | `-TextComment 0xfd5930 <col:3> Text=" "
|   |-VerbatimLineComment 0xfd5980 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xfd59f0 <line:445:3, col:46>
|   | `-TextComment 0xfd59c0 <col:3, col:46> Text=" Define the type of the task entry function."
|   `-ParagraphComment 0xfd5a40 <line:447:1>
|     `-TextComment 0xfd5a10 <col:1> Text=" "
|-RecordDecl 0xf7ff68 <line:456:9, line:464:1> line:456:16 struct tagTskInitParam definition
| |-FullComment 0xfd5c40 <line:451:3, line:454:70>
| | |-ParagraphComment 0xfd5b20 <line:451:3>
| | | `-TextComment 0xfd5af0 <col:3> Text=" "
| | |-VerbatimLineComment 0xfd5b40 <col:4, col:21> Text=" los_task"
| | |-ParagraphComment 0xfd5bb0 <line:452:3, col:65>
| | | `-TextComment 0xfd5b80 <col:3, col:65> Text=" Define the structure of the parameters used for task creation."
| | `-ParagraphComment 0xfd5c00 <line:454:3, col:70>
| |   `-TextComment 0xfd5bd0 <col:3, col:70> Text=" Information of specified parameters passed in during task creation."
| |-FieldDecl 0xf80040 <line:457:5, col:26> col:26 pfnTaskEntry 'TSK_ENTRY_FUNC':'void *(*)(UINT32)'
| | `-FullComment 0xfd5d10 <col:57, col:96>
| |   `-ParagraphComment 0xfd5ce0 <col:57, col:96>
| |     `-TextComment 0xfd5cb0 <col:57, col:96> Text=" Task entrance function                 "
| |-FieldDecl 0xf800c8 <line:458:5, col:26> col:26 usTaskPrio 'UINT16':'unsigned short'
| | `-FullComment 0xfd5de0 <col:57, col:96>
| |   `-ParagraphComment 0xfd5db0 <col:57, col:96>
| |     `-TextComment 0xfd5d80 <col:57, col:96> Text=" Task priority                          "
| |-FieldDecl 0xf80158 <line:459:5, col:26> col:26 uwArg 'UINT32':'unsigned int'
| | `-FullComment 0xfd5eb0 <col:57, col:96>
| |   `-ParagraphComment 0xfd5e80 <col:57, col:96>
| |     `-TextComment 0xfd5e50 <col:57, col:96> Text=" Task parameters                        "
| |-FieldDecl 0xf801e8 <line:460:5, col:26> col:26 stackAddr 'UINTPTR':'unsigned int'
| | `-FullComment 0xfd5f80 <col:57, col:96>
| |   `-ParagraphComment 0xfd5f50 <col:57, col:96>
| |     `-TextComment 0xfd5f20 <col:57, col:96> Text=" Task satck memory                      "
| |-FieldDecl 0xf80278 <line:461:5, col:26> col:26 uwStackSize 'UINT32':'unsigned int'
| | `-FullComment 0xfd6050 <col:57, col:96>
| |   `-ParagraphComment 0xfd6020 <col:57, col:96>
| |     `-TextComment 0xfd5ff0 <col:57, col:96> Text=" Task stack size                        "
| |-FieldDecl 0xf80308 <line:462:5, col:27> col:27 pcName 'CHAR *'
| | `-FullComment 0xfd6120 <col:57, col:96>
| |   `-ParagraphComment 0xfd60f0 <col:57, col:96>
| |     `-TextComment 0xfd60c0 <col:57, col:96> Text=" Task name                              "
| `-FieldDecl 0xf80398 <line:463:5, col:26> col:26 uwResved 'UINT32':'unsigned int'
|   `-FullComment 0xfd61f0 <col:57, col:96>
|     `-ParagraphComment 0xfd61c0 <col:57, col:96>
|       `-TextComment 0xfd6190 <col:57, col:96> Text=" Reserved                               "
|-TypedefDecl 0xf80478 <line:456:1, line:464:3> col:3 referenced TSK_INIT_PARAM_S 'struct tagTskInitParam':'struct tagTskInitParam'
| |-ElaboratedType 0xf80420 'struct tagTskInitParam' sugar
| | `-RecordType 0xf7fff0 'struct tagTskInitParam'
| |   `-Record 0xf7ff68 'tagTskInitParam'
| `-FullComment 0xfd63b0 <line:451:3, line:454:70>
|   |-ParagraphComment 0xfd6290 <line:451:3>
|   | `-TextComment 0xfd6260 <col:3> Text=" "
|   |-VerbatimLineComment 0xfd62b0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xfd6320 <line:452:3, col:65>
|   | `-TextComment 0xfd62f0 <col:3, col:65> Text=" Define the structure of the parameters used for task creation."
|   `-ParagraphComment 0xfd6370 <line:454:3, col:70>
|     `-TextComment 0xfd6340 <col:3, col:70> Text=" Information of specified parameters passed in during task creation."
|-RecordDecl 0xf80570 <line:482:9, line:500:1> line:482:16 struct tagTskInfo definition
| |-FullComment 0xfd6520 <line:479:3, line:480:30>
| | |-ParagraphComment 0xfd6450 <line:479:3>
| | | `-TextComment 0xfd6420 <col:3> Text=" "
| | |-VerbatimLineComment 0xfd6470 <col:4, col:21> Text=" los_task"
| | `-ParagraphComment 0xfd64e0 <line:480:3, col:30>
| |   `-TextComment 0xfd64b0 <col:3, col:30> Text=" Task information structure."
| |-FieldDecl 0xf806e8 <line:483:5, col:48> col:25 acName 'CHAR [32]'
| | `-FullComment 0xfd6600 <col:57, col:88>
| |   `-ParagraphComment 0xfd65c0 <col:57, col:88>
| |     `-TextComment 0xfd6590 <col:57, col:88> Text=" Task entrance function         "
| |-FieldDecl 0xf80778 <line:484:5, col:25> col:25 uwTaskID 'UINT32':'unsigned int'
| | `-FullComment 0xfd66d0 <col:57, col:88>
| |   `-ParagraphComment 0xfd66a0 <col:57, col:88>
| |     `-TextComment 0xfd6670 <col:57, col:88> Text=" Task ID                        "
| |-FieldDecl 0xf80808 <line:485:5, col:25> col:25 usTaskStatus 'UINT16':'unsigned short'
| | `-FullComment 0xfd67a0 <col:57, col:88>
| |   `-ParagraphComment 0xfd6770 <col:57, col:88>
| |     `-TextComment 0xfd6740 <col:57, col:88> Text=" Task status                    "
| |-FieldDecl 0xf80898 <line:486:5, col:25> col:25 usTaskPrio 'UINT16':'unsigned short'
| | `-FullComment 0xfd6870 <col:57, col:88>
| |   `-ParagraphComment 0xfd6840 <col:57, col:88>
| |     `-TextComment 0xfd6810 <col:57, col:88> Text=" Task priority                  "
| |-FieldDecl 0xf80930 <main/los_compiler.h:327:23, main/los_task.h:487:26> col:26 pTaskSem 'void *'
| | `-FullComment 0xfd6940 <col:57, col:88>
| |   `-ParagraphComment 0xfd6910 <col:57, col:88>
| |     `-TextComment 0xfd68e0 <col:57, col:88> Text=" Semaphore pointer              "
| |-FieldDecl 0xf809c0 <main/los_compiler.h:327:23, main/los_task.h:488:26> col:26 pTaskMux 'void *'
| | `-FullComment 0xfd6a10 <col:57, col:88>
| |   `-ParagraphComment 0xfd69e0 <col:57, col:88>
| |     `-TextComment 0xfd69b0 <col:57, col:88> Text=" Mutex pointer                  "
| |-FieldDecl 0xf80a48 <line:489:5, col:25> col:25 uwSemID 'UINT32':'unsigned int'
| | `-FullComment 0xfd6ae0 <col:57, col:88>
| |   `-ParagraphComment 0xfd6ab0 <col:57, col:88>
| |     `-TextComment 0xfd6a80 <col:57, col:88> Text=" Sem ID                         "
| |-FieldDecl 0xf80ad8 <line:490:5, col:25> col:25 uwMuxID 'UINT32':'unsigned int'
| | `-FullComment 0xfd6bb0 <col:57, col:88>
| |   `-ParagraphComment 0xfd6b80 <col:57, col:88>
| |     `-TextComment 0xfd6b50 <col:57, col:88> Text=" Mux ID                         "
| |-FieldDecl 0xf80b90 <line:491:5, col:25> col:25 uwEvent 'EVENT_CB_S':'struct tagEvent'
| | `-FullComment 0xfd6c80 <col:57, col:88>
| |   `-ParagraphComment 0xfd6c50 <col:57, col:88>
| |     `-TextComment 0xfd6c20 <col:57, col:88> Text=" Event                          "
| |-FieldDecl 0xf80c18 <line:492:5, col:25> col:25 uwEventMask 'UINT32':'unsigned int'
| | `-FullComment 0xfd6d50 <col:57, col:88>
| |   `-ParagraphComment 0xfd6d20 <col:57, col:88>
| |     `-TextComment 0xfd6cf0 <col:57, col:88> Text=" Event mask                     "
| |-FieldDecl 0xf80ca8 <line:493:5, col:25> col:25 uwStackSize 'UINT32':'unsigned int'
| | `-FullComment 0xfd6e20 <col:57, col:88>
| |   `-ParagraphComment 0xfd6df0 <col:57, col:88>
| |     `-TextComment 0xfd6dc0 <col:57, col:88> Text=" Task stack size                "
| |-FieldDecl 0xf80d38 <line:494:5, col:25> col:25 uwTopOfStack 'UINT32':'unsigned int'
| | `-FullComment 0xfd6ef0 <col:57, col:88>
| |   `-ParagraphComment 0xfd6ec0 <col:57, col:88>
| |     `-TextComment 0xfd6e90 <col:57, col:88> Text=" Task stack top                 "
| |-FieldDecl 0xf823b0 <line:495:5, col:25> col:25 uwBottomOfStack 'UINT32':'unsigned int'
| | `-FullComment 0xfd6fc0 <col:57, col:88>
| |   `-ParagraphComment 0xfd6f90 <col:57, col:88>
| |     `-TextComment 0xfd6f60 <col:57, col:88> Text=" Task stack bottom              "
| |-FieldDecl 0xf82438 <line:496:5, col:25> col:25 uwSP 'UINT32':'unsigned int'
| | `-FullComment 0xfd7090 <col:57, col:88>
| |   `-ParagraphComment 0xfd7060 <col:57, col:88>
| |     `-TextComment 0xfd7030 <col:57, col:88> Text=" Task SP pointer                "
| |-FieldDecl 0xf824c8 <line:497:5, col:25> col:25 uwCurrUsed 'UINT32':'unsigned int'
| | `-FullComment 0xfd7160 <col:57, col:88>
| |   `-ParagraphComment 0xfd7130 <col:57, col:88>
| |     `-TextComment 0xfd7100 <col:57, col:88> Text=" Current task stack usage       "
| |-FieldDecl 0xf82558 <line:498:5, col:25> col:25 uwPeakUsed 'UINT32':'unsigned int'
| | `-FullComment 0xfd7230 <col:57, col:88>
| |   `-ParagraphComment 0xfd7200 <col:57, col:88>
| |     `-TextComment 0xfd71d0 <col:57, col:88> Text=" Task stack usage peak          "
| `-FieldDecl 0xf825e8 <line:499:5, col:25> col:25 bOvf 'BOOL':'unsigned int'
|   `-FullComment 0xfd7300 <col:57, col:114>
|     `-ParagraphComment 0xfd72d0 <col:57, col:114>
|       `-TextComment 0xfd72a0 <col:57, col:114> Text=" Flag that indicates whether a task stack overflow occurs "
|-TypedefDecl 0xf826c8 <line:482:1, line:500:3> col:3 referenced TSK_INFO_S 'struct tagTskInfo':'struct tagTskInfo'
| |-ElaboratedType 0xf82670 'struct tagTskInfo' sugar
| | `-RecordType 0xf805f0 'struct tagTskInfo'
| |   `-Record 0xf80570 'tagTskInfo'
| `-FullComment 0xfd7470 <line:479:3, line:480:30>
|   |-ParagraphComment 0xfd73a0 <line:479:3>
|   | `-TextComment 0xfd7370 <col:3> Text=" "
|   |-VerbatimLineComment 0xfd73c0 <col:4, col:21> Text=" los_task"
|   `-ParagraphComment 0xfd7430 <line:480:3, col:30>
|     `-TextComment 0xfd7400 <col:3, col:30> Text=" Task information structure."
|-FunctionDecl 0xf82860 <line:540:1, col:36> col:13 LOS_Msleep 'void (UINT32)' extern
| |-ParmVarDecl 0xf827d0 <col:24, col:31> col:31 mSecs 'UINT32':'unsigned int'
| `-FullComment 0xfdacc0 <line:515:3, line:538:12>
|   |-ParagraphComment 0xfd7510 <line:515:3>
|   | `-TextComment 0xfd74e0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfd7530 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xfd75a0 <line:516:3>
|   | `-TextComment 0xfd7570 <col:3> Text=" "
|   |-BlockCommandComment 0xfd75c0 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0xfda230 <col:10, col:33>
|   |   `-TextComment 0xfda200 <col:10, col:33> Text=" Sleep the current task."
|   |-ParagraphComment 0xfda280 <line:518:3>
|   | `-TextComment 0xfda250 <col:3> Text=" "
|   |-BlockCommandComment 0xfda2a0 <col:4, line:520:55> Name="par"
|   | `-ParagraphComment 0xfda350 <line:518:8, line:520:55>
|   |   |-TextComment 0xfda2d0 <line:518:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfda2f0 <line:519:3, col:96> Text=" This API is used to delay the execution of the current task. The task is able to be scheduled"
|   |   `-TextComment 0xfda310 <line:520:3, col:55> Text=" after it is delayed for a specified number of Ticks."
|   |-ParagraphComment 0xfda3a0 <line:522:3>
|   | `-TextComment 0xfda370 <col:3> Text=" "
|   |-BlockCommandComment 0xfda3c0 <col:4, line:531:8> Name="attention"
|   | `-ParagraphComment 0xfda7d0 <line:523:3, line:531:8>
|   |   |-TextComment 0xfda3f0 <line:523:3> Text=" "
|   |   |-HTMLStartTagComment 0xfda410 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfda450 <line:524:3> Text=" "
|   |   |-HTMLStartTagComment 0xfda470 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfda4b0 <col:8, col:103> Text="The task fails to be delayed if it is being delayed during interrupt processing or it is locked."
|   |   |-HTMLEndTagComment 0xfda4d0 <col:104, col:108> Name="li"
|   |   |-TextComment 0xfda500 <line:525:3> Text=" "
|   |   |-HTMLStartTagComment 0xfda520 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfda560 <col:8, col:63> Text="If 0 is passed in and the task scheduling is not locked,"
|   |   |-TextComment 0xfda580 <line:526:3, col:85> Text=" execute the next task in the queue of tasks with the priority of the current task."
|   |   |-TextComment 0xfda5a0 <line:527:3, col:71> Text=" If no ready task with the priority of the current task is available,"
|   |   |-TextComment 0xfda5c0 <line:528:3, col:85> Text=" the task scheduling will not occur, and the current task continues to be executed."
|   |   |-HTMLEndTagComment 0xfda5e0 <col:86, col:90> Name="li"
|   |   |-TextComment 0xfda610 <line:529:3> Text=" "
|   |   |-HTMLStartTagComment 0xfda630 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfda670 <col:8, col:80> Text="The parameter passed in can not be equal to LOS_WAIT_FOREVER(0xFFFFFFFF)."
|   |   |-TextComment 0xfda690 <line:530:3, col:112> Text=" If that happens, the task will not sleep 0xFFFFFFFF milliseconds or sleep forever but sleep 0xFFFFFFFF Ticks."
|   |   |-HTMLEndTagComment 0xfda6b0 <col:113, col:117> Name="li"
|   |   |-TextComment 0xfda6e0 <line:531:3> Text=" "
|   |   `-HTMLEndTagComment 0xfda700 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfda820 <line:533:3>
|   | `-TextComment 0xfda7f0 <col:3> Text=" "
|   |-ParamCommandComment 0xfda840 <col:4, col:77> [in] implicitly Param="mSecs" ParamIndex=0
|   | `-ParagraphComment 0xfda8d0 <col:16, col:77>
|   |   `-TextComment 0xfda8a0 <col:16, col:77> Text=" [IN] Type #UINT32 Number of MS for which the task is delayed."
|   |-ParagraphComment 0xfda920 <line:535:3>
|   | `-TextComment 0xfda8f0 <col:3> Text=" "
|   |-BlockCommandComment 0xfda940 <col:4, line:536:3> Name="retval"
|   | `-ParagraphComment 0xfda9c0 <line:535:11, line:536:3>
|   |   |-TextComment 0xfda970 <line:535:11, col:15> Text=" None"
|   |   `-TextComment 0xfda990 <line:536:3> Text=" "
|   |-BlockCommandComment 0xfda9e0 <col:4, line:538:3> Name="par"
|   | `-ParagraphComment 0xfdabb0 <line:536:8, line:538:3>
|   |   |-TextComment 0xfdaa10 <line:536:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfdaa30 <line:537:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdaa50 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfdaa90 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfdaad0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfdaaf0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfdab20 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfdab50 <line:538:3> Text=" "
|   `-BlockCommandComment 0xfdabd0 <col:4, col:12> Name="see"
|     `-ParagraphComment 0xfdac30 <col:8, col:12>
|       `-TextComment 0xfdac00 <col:8, col:12> Text=" None"
|-FunctionDecl 0xf829d0 <line:562:1, col:29> col:15 LOS_Start 'UINT32 (void)' extern
| `-FullComment 0xfdb6c0 <line:543:3, line:560:7>
|   |-ParagraphComment 0xfdad60 <line:543:3>
|   | `-TextComment 0xfdad30 <col:3> Text=" "
|   |-VerbatimLineComment 0xfdad80 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xfdadf0 <line:544:3>
|   | `-TextComment 0xfdadc0 <col:3> Text=" "
|   |-BlockCommandComment 0xfdae10 <col:4, col:48> Name="brief"
|   | `-ParagraphComment 0xfdae70 <col:10, col:48>
|   |   `-TextComment 0xfdae40 <col:10, col:48> Text=" System kernel initialization function."
|   |-ParagraphComment 0xfdaec0 <line:546:3>
|   | `-TextComment 0xfdae90 <col:3> Text=" "
|   |-BlockCommandComment 0xfdaee0 <col:4, line:547:37> Name="par"
|   | `-ParagraphComment 0xfdaf60 <line:546:8, line:547:37>
|   |   |-TextComment 0xfdaf10 <line:546:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfdaf30 <line:547:3, col:37> Text=" This API is used to start liteOS ."
|   |-ParagraphComment 0xfdafb0 <line:549:3>
|   | `-TextComment 0xfdaf80 <col:3> Text=" "
|   |-BlockCommandComment 0xfdafd0 <col:4, line:552:8> Name="attention"
|   | `-ParagraphComment 0xfdb1a0 <line:550:3, line:552:8>
|   |   |-TextComment 0xfdb000 <line:550:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdb020 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfdb060 <line:551:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdb080 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfdb0c0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xfdb0e0 <col:13, col:17> Name="li"
|   |   |-TextComment 0xfdb110 <line:552:3> Text=" "
|   |   `-HTMLEndTagComment 0xfdb130 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfdb210 <line:554:3>
|   | `-TextComment 0xfdb1c0 <col:3> Text=" "
|   |-ParamCommandComment 0xfdb230 <col:4, col:16> [in] implicitly Param=":"
|   | `-ParagraphComment 0xfdb2c0 <col:11, col:16>
|   |   `-TextComment 0xfdb290 <col:11, col:16> Text=" None."
|   |-ParagraphComment 0xfdb310 <line:556:3>
|   | `-TextComment 0xfdb2e0 <col:3> Text=" "
|   |-BlockCommandComment 0xfdb330 <col:4, col:75> Name="retval"
|   | `-ParagraphComment 0xfdb390 <col:11, col:75>
|   |   `-TextComment 0xfdb360 <col:11, col:75> Text=" #LOS_OK                                  0:LiteOS start success."
|   |-ParagraphComment 0xfdb3e0 <line:558:3>
|   | `-TextComment 0xfdb3b0 <col:3> Text=" "
|   |-BlockCommandComment 0xfdb400 <col:4, line:560:3> Name="par"
|   | `-ParagraphComment 0xfdb5d0 <line:558:8, line:560:3>
|   |   |-TextComment 0xfdb430 <line:558:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfdb450 <line:559:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdb470 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfdb4b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfdb4f0 <col:12, col:75> Text="los_config.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfdb510 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0xfdb540 <col:81, col:85> Name="ul"
|   |   `-TextComment 0xfdb570 <line:560:3> Text=" "
|   `-BlockCommandComment 0xfdb5f0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfdb620 <<invalid sloc>>
|-FunctionDecl 0xf82b08 <line:563:1, col:37> col:22 LOS_Reboot 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0xf82d40 <line:564:1, col:52> col:22 LOS_Panic 'void (const CHAR *, ...) __attribute__((noreturn))' extern
| `-ParmVarDecl 0xf82bb8 <col:32, col:44> col:44 fmt 'const CHAR *'
|-FunctionDecl 0xf82eb0 <line:586:1, col:34> col:15 LOS_KernelInit 'UINT32 (void)' extern
| `-FullComment 0xfdc0a0 <line:567:3, line:584:7>
|   |-ParagraphComment 0xfdb760 <line:567:3>
|   | `-TextComment 0xfdb730 <col:3> Text=" "
|   |-VerbatimLineComment 0xfdb780 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xfdb7f0 <line:568:3>
|   | `-TextComment 0xfdb7c0 <col:3> Text=" "
|   |-BlockCommandComment 0xfdb810 <col:4, col:48> Name="brief"
|   | `-ParagraphComment 0xfdb870 <col:10, col:48>
|   |   `-TextComment 0xfdb840 <col:10, col:48> Text=" System kernel initialization function."
|   |-ParagraphComment 0xfdb8c0 <line:570:3>
|   | `-TextComment 0xfdb890 <col:3> Text=" "
|   |-BlockCommandComment 0xfdb8e0 <col:4, line:571:71> Name="par"
|   | `-ParagraphComment 0xfdb960 <line:570:8, line:571:71>
|   |   |-TextComment 0xfdb910 <line:570:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfdb930 <line:571:3, col:71> Text=" This API is used to Initialize kernel ,configure all system modules."
|   |-ParagraphComment 0xfdb9b0 <line:573:3>
|   | `-TextComment 0xfdb980 <col:3> Text=" "
|   |-BlockCommandComment 0xfdb9d0 <col:4, line:576:8> Name="attention"
|   | `-ParagraphComment 0xfdbba0 <line:574:3, line:576:8>
|   |   |-TextComment 0xfdba00 <line:574:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdba20 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfdba60 <line:575:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdba80 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfdbac0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xfdbae0 <col:13, col:17> Name="li"
|   |   |-TextComment 0xfdbb10 <line:576:3> Text=" "
|   |   `-HTMLEndTagComment 0xfdbb30 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfdbbf0 <line:578:3>
|   | `-TextComment 0xfdbbc0 <col:3> Text=" "
|   |-ParamCommandComment 0xfdbc10 <col:4, col:16> [in] implicitly Param=":"
|   | `-ParagraphComment 0xfdbca0 <col:11, col:16>
|   |   `-TextComment 0xfdbc70 <col:11, col:16> Text=" None."
|   |-ParagraphComment 0xfdbcf0 <line:580:3>
|   | `-TextComment 0xfdbcc0 <col:3> Text=" "
|   |-BlockCommandComment 0xfdbd10 <col:4, col:91> Name="retval"
|   | `-ParagraphComment 0xfdbd70 <col:11, col:91>
|   |   `-TextComment 0xfdbd40 <col:11, col:91> Text=" #LOS_OK                                  0:System kernel initialization success."
|   |-ParagraphComment 0xfdbdc0 <line:582:3>
|   | `-TextComment 0xfdbd90 <col:3> Text=" "
|   |-BlockCommandComment 0xfdbde0 <col:4, line:584:3> Name="par"
|   | `-ParagraphComment 0xfdbfb0 <line:582:8, line:584:3>
|   |   |-TextComment 0xfdbe10 <line:582:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfdbe30 <line:583:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdbe50 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfdbe90 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfdbed0 <col:12, col:75> Text="los_config.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfdbef0 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0xfdbf20 <col:81, col:85> Name="ul"
|   |   `-TextComment 0xfdbf50 <line:584:3> Text=" "
|   `-BlockCommandComment 0xfdbfd0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfdc000 <<invalid sloc>>
|-FunctionDecl 0xf83188 <line:633:1, col:81> col:15 LOS_TaskCreateOnly 'UINT32 (UINT32 *, TSK_INIT_PARAM_S *)' extern
| |-ParmVarDecl 0xf82f88 <col:34, col:42> col:42 taskID 'UINT32 *'
| |-ParmVarDecl 0xf83078 <col:50, col:68> col:68 taskInitParam 'TSK_INIT_PARAM_S *'
| `-FullComment 0xfdda70 <line:589:3, line:631:22>
|   |-ParagraphComment 0xfdc140 <line:589:3>
|   | `-TextComment 0xfdc110 <col:3> Text=" "
|   |-VerbatimLineComment 0xfdc160 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfdc1d0 <line:590:3>
|   | `-TextComment 0xfdc1a0 <col:3> Text=" "
|   |-BlockCommandComment 0xfdc220 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0xfdc280 <col:10, col:36>
|   |   `-TextComment 0xfdc250 <col:10, col:36> Text=" Create a task and suspend."
|   |-ParagraphComment 0xfdc2d0 <line:592:3>
|   | `-TextComment 0xfdc2a0 <col:3> Text=" "
|   |-BlockCommandComment 0xfdc2f0 <col:4, line:594:13> Name="par"
|   | `-ParagraphComment 0xfdc3a0 <line:592:8, line:594:13>
|   |   |-TextComment 0xfdc320 <line:592:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfdc340 <line:593:3, col:115> Text=" This API is used to create a task and suspend it. This task will not be added to the queue of ready tasks before"
|   |   `-TextComment 0xfdc360 <line:594:3, col:13> Text=" resume it."
|   |-ParagraphComment 0xfdc3f0 <line:596:3>
|   | `-TextComment 0xfdc3c0 <col:3> Text=" "
|   |-BlockCommandComment 0xfdc410 <col:4, line:613:8> Name="attention"
|   | `-ParagraphComment 0xfdcd50 <line:597:3, line:613:8>
|   |   |-TextComment 0xfdc440 <line:597:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdc460 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfdc4a0 <line:598:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdc4c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfdc500 <col:8, col:119> Text="During task creation, the task control block and task stack of the task that is previously automatically deleted"
|   |   |-TextComment 0xfdc520 <line:599:3, col:19> Text=" are deallocated."
|   |   |-HTMLEndTagComment 0xfdc540 <col:20, col:24> Name="li"
|   |   |-TextComment 0xfdc570 <line:600:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdc590 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfdc5d0 <col:8, col:62> Text="The task name is a pointer and is not allocated memory."
|   |   |-HTMLEndTagComment 0xfdc5f0 <col:63, col:67> Name="li"
|   |   |-TextComment 0xfdc620 <line:601:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdc640 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfdc680 <col:8, col:119> Text="If the size of the task stack of the task to be created is 0, configure #LOSCFG_BASE_CORE_TSK_DEFAULT_STACK_SIZE"
|   |   |-TextComment 0xfdc6a0 <line:602:3, col:117> Text=" to specify the default task stack size. The stack size should be a reasonable value, if the size is too large, may"
|   |   |-TextComment 0xfdc6c0 <line:603:3, col:27> Text=" cause memory exhaustion."
|   |   |-HTMLEndTagComment 0xfdc6e0 <col:28, col:32> Name="li"
|   |   |-TextComment 0xfdc710 <line:604:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdc730 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfdc770 <col:8, col:114> Text="The task stack size must be aligned on the boundary of 8 bytes. The size is determined by whether it is big"
|   |   |-TextComment 0xfdc790 <line:605:3, col:39> Text=" enough to avoid task stack overflow."
|   |   |-HTMLEndTagComment 0xfdc7b0 <col:40, col:44> Name="li"
|   |   |-TextComment 0xfdc7e0 <line:606:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdc800 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfdc840 <col:8, col:59> Text="Less parameter value indicates higher task priority."
|   |   |-HTMLEndTagComment 0xfdc860 <col:60, col:64> Name="li"
|   |   |-TextComment 0xfdc890 <line:607:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdc8b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfdc8f0 <col:8, col:36> Text="The task name cannot be null."
|   |   |-HTMLEndTagComment 0xfdc910 <col:37, col:41> Name="li"
|   |   |-TextComment 0xfdc940 <line:608:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdc960 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfdc9a0 <col:8, col:65> Text="The pointer to the task executing function cannot be null."
|   |   |-HTMLEndTagComment 0xfdc9c0 <col:66, col:70> Name="li"
|   |   |-TextComment 0xfdc9f0 <line:609:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdca10 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfdca50 <col:8, col:114> Text="The two parameters of this interface is pointer, it should be a correct value, otherwise, the system may be"
|   |   |-TextComment 0xfdca70 <line:610:3, col:12> Text=" abnormal."
|   |   |-HTMLEndTagComment 0xfdca90 <col:13, col:17> Name="li"
|   |   |-TextComment 0xfdcac0 <line:611:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdcae0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfdcb20 <col:8, col:115> Text="If user mode is enabled, user should input user stack pointer and size, the size must fit the stack pointer,"
|   |   |-TextComment 0xfdcb40 <line:612:3, col:47> Text=" uwStackSize remain as the kernel stack size."
|   |   |-HTMLEndTagComment 0xfdcb60 <col:48, col:52> Name="li"
|   |   |-TextComment 0xfdcb90 <line:613:3> Text=" "
|   |   `-HTMLEndTagComment 0xfdcbb0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfdcda0 <line:615:3>
|   | `-TextComment 0xfdcd70 <col:3> Text=" "
|   |-ParamCommandComment 0xfdcdc0 <col:4, line:616:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xfdce70 <line:615:18, line:616:3>
|   |   |-TextComment 0xfdce20 <line:615:18, col:55> Text="        [OUT] Type  #UINT32 * Task ID."
|   |   `-TextComment 0xfdce40 <line:616:3> Text=" "
|   |-ParamCommandComment 0xfdce90 <col:4, col:85> [in] implicitly Param="taskInitParam" ParamIndex=1
|   | `-ParagraphComment 0xfdcf20 <col:25, col:85>
|   |   `-TextComment 0xfdcef0 <col:25, col:85> Text=" [IN]  Type  #TSK_INIT_PARAM_S * Parameter for task creation."
|   |-ParagraphComment 0xfdcf70 <line:618:3>
|   | `-TextComment 0xfdcf40 <col:3> Text=" "
|   |-BlockCommandComment 0xfdcf90 <col:4, line:619:3> Name="retval"
|   | `-ParagraphComment 0xfdd010 <line:618:11, line:619:3>
|   |   |-TextComment 0xfdcfc0 <line:618:11, col:85> Text=" #LOS_ERRNO_TSK_ID_INVALID        Invalid Task ID, param puwTaskID is NULL."
|   |   `-TextComment 0xfdcfe0 <line:619:3> Text=" "
|   |-BlockCommandComment 0xfdd030 <col:4, line:620:3> Name="retval"
|   | `-ParagraphComment 0xfdd0b0 <line:619:11, line:620:3>
|   |   |-TextComment 0xfdd060 <line:619:11, col:71> Text=" #LOS_ERRNO_TSK_PTR_NULL          Param pstInitParam is NULL."
|   |   `-TextComment 0xfdd080 <line:620:3> Text=" "
|   |-BlockCommandComment 0xfdd0d0 <col:4, line:621:3> Name="retval"
|   | `-ParagraphComment 0xfdd150 <line:620:11, line:621:3>
|   |   |-TextComment 0xfdd100 <line:620:11, col:66> Text=" #LOS_ERRNO_TSK_NAME_EMPTY        The task name is NULL."
|   |   `-TextComment 0xfdd120 <line:621:3> Text=" "
|   |-BlockCommandComment 0xfdd170 <col:4, line:622:3> Name="retval"
|   | `-ParagraphComment 0xfdd1f0 <line:621:11, line:622:3>
|   |   |-TextComment 0xfdd1a0 <line:621:11, col:70> Text=" #LOS_ERRNO_TSK_ENTRY_NULL        The task entrance is NULL."
|   |   `-TextComment 0xfdd1c0 <line:622:3> Text=" "
|   |-BlockCommandComment 0xfdd230 <col:4, line:623:3> Name="retval"
|   | `-ParagraphComment 0xfdd2b0 <line:622:11, line:623:3>
|   |   |-TextComment 0xfdd260 <line:622:11, col:68> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR       Incorrect task priority."
|   |   `-TextComment 0xfdd280 <line:623:3> Text=" "
|   |-BlockCommandComment 0xfdd2d0 <col:4, line:624:3> Name="retval"
|   | `-ParagraphComment 0xfdd350 <line:623:11, line:624:3>
|   |   |-TextComment 0xfdd300 <line:623:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_LARGE   The task stack size is too large."
|   |   `-TextComment 0xfdd320 <line:624:3> Text=" "
|   |-BlockCommandComment 0xfdd370 <col:4, line:625:3> Name="retval"
|   | `-ParagraphComment 0xfdd3f0 <line:624:11, line:625:3>
|   |   |-TextComment 0xfdd3a0 <line:624:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_SMALL   The task stack size is too small."
|   |   `-TextComment 0xfdd3c0 <line:625:3> Text=" "
|   |-BlockCommandComment 0xfdd410 <col:4, line:626:3> Name="retval"
|   | `-ParagraphComment 0xfdd490 <line:625:11, line:626:3>
|   |   |-TextComment 0xfdd440 <line:625:11, col:84> Text=" #LOS_ERRNO_TSK_TCB_UNAVAILABLE   No free task control block is available."
|   |   `-TextComment 0xfdd460 <line:626:3> Text=" "
|   |-BlockCommandComment 0xfdd4b0 <col:4, line:627:3> Name="retval"
|   | `-ParagraphComment 0xfdd530 <line:626:11, line:627:3>
|   |   |-TextComment 0xfdd4e0 <line:626:11, col:82> Text=" #LOS_ERRNO_TSK_NO_MEMORY         Insufficient memory for task creation."
|   |   `-TextComment 0xfdd500 <line:627:3> Text=" "
|   |-BlockCommandComment 0xfdd550 <col:4, line:628:3> Name="retval"
|   | `-ParagraphComment 0xfdd5d0 <line:627:11, line:628:3>
|   |   |-TextComment 0xfdd580 <line:627:11, col:77> Text=" #LOS_OK                          The task is successfully created."
|   |   `-TextComment 0xfdd5a0 <line:628:3> Text=" "
|   |-BlockCommandComment 0xfdd5f0 <col:4, line:631:3> Name="par"
|   | `-ParagraphComment 0xfdd910 <line:628:8, line:631:3>
|   |   |-TextComment 0xfdd620 <line:628:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfdd640 <line:629:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdd660 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfdd6a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfdd6e0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfdd700 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfdd730 <col:79, col:83> Name="ul"
|   |   |-TextComment 0xfdd760 <line:630:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdd780 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfdd7c0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfdd800 <col:12, col:82> Text="los_config.h: the header file that contains system configuration items."
|   |   |-HTMLEndTagComment 0xfdd820 <col:83, col:87> Name="li"
|   |   |-HTMLEndTagComment 0xfdd850 <col:88, col:92> Name="ul"
|   |   `-TextComment 0xfdd880 <line:631:3> Text=" "
|   `-BlockCommandComment 0xfdd930 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xfdd990 <col:8, col:22>
|       `-TextComment 0xfdd960 <col:8, col:22> Text=" LOS_TaskDelete"
|-FunctionDecl 0xf836b0 <line:680:1, col:77> col:15 LOS_TaskCreate 'UINT32 (UINT32 *, TSK_INIT_PARAM_S *)' extern
| |-ParmVarDecl 0xf83278 <col:30, col:38> col:38 taskID 'UINT32 *'
| |-ParmVarDecl 0xf832f0 <col:46, col:64> col:64 taskInitParam 'TSK_INIT_PARAM_S *'
| `-FullComment 0xfdf420 <line:636:3, line:678:22>
|   |-ParagraphComment 0xfddb10 <line:636:3>
|   | `-TextComment 0xfddae0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfddb30 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfddba0 <line:637:3>
|   | `-TextComment 0xfddb70 <col:3> Text=" "
|   |-BlockCommandComment 0xfddbc0 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0xfddc20 <col:10, col:24>
|   |   `-TextComment 0xfddbf0 <col:10, col:24> Text=" Create a task."
|   |-ParagraphComment 0xfddc70 <line:639:3>
|   | `-TextComment 0xfddc40 <col:3> Text=" "
|   |-BlockCommandComment 0xfddc90 <col:4, line:642:65> Name="par"
|   | `-ParagraphComment 0xfddd60 <line:639:8, line:642:65>
|   |   |-TextComment 0xfddcc0 <line:639:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfddce0 <line:640:3, col:113> Text=" This API is used to create a task. If the priority of the task created after system initialized is higher than"
|   |   |-TextComment 0xfddd00 <line:641:3, col:83> Text=" the current task and task scheduling is not locked, it is scheduled for running."
|   |   `-TextComment 0xfddd20 <line:642:3, col:65> Text=" If not, the created task is added to the queue of ready tasks."
|   |-ParagraphComment 0xfdddb0 <line:644:3>
|   | `-TextComment 0xfddd80 <col:3> Text=" "
|   |-BlockCommandComment 0xfdddd0 <col:4, line:660:8> Name="attention"
|   | `-ParagraphComment 0xfde6f0 <line:645:3, line:660:8>
|   |   |-TextComment 0xfdde00 <line:645:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdde20 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfdde60 <line:646:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdde80 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfddec0 <col:8, col:111> Text="During task creation, the task control block and task stack of the task that is previously automatically"
|   |   |-TextComment 0xfddee0 <line:647:3, col:27> Text=" deleted are deallocated."
|   |   |-HTMLEndTagComment 0xfddf00 <col:28, col:32> Name="li"
|   |   |-TextComment 0xfddf30 <line:648:3> Text=" "
|   |   |-HTMLStartTagComment 0xfddf50 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfddf90 <col:8, col:62> Text="The task name is a pointer and is not allocated memory."
|   |   |-HTMLEndTagComment 0xfddfb0 <col:63, col:67> Name="li"
|   |   |-TextComment 0xfddfe0 <line:649:3> Text=" "
|   |   |-HTMLStartTagComment 0xfde000 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfde040 <col:8, col:119> Text="If the size of the task stack of the task to be created is 0, configure #LOSCFG_BASE_CORE_TSK_DEFAULT_STACK_SIZE"
|   |   |-TextComment 0xfde060 <line:650:3, col:42> Text=" to specify the default task stack size."
|   |   |-HTMLEndTagComment 0xfde080 <col:43, col:47> Name="li"
|   |   |-TextComment 0xfde0b0 <line:651:3> Text=" "
|   |   |-HTMLStartTagComment 0xfde0d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfde110 <col:8, col:114> Text="The task stack size must be aligned on the boundary of 8 bytes. The size is determined by whether it is big"
|   |   |-TextComment 0xfde130 <line:652:3, col:39> Text=" enough to avoid task stack overflow."
|   |   |-HTMLEndTagComment 0xfde150 <col:40, col:44> Name="li"
|   |   |-TextComment 0xfde180 <line:653:3> Text=" "
|   |   |-HTMLStartTagComment 0xfde1a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfde1e0 <col:8, col:59> Text="Less parameter value indicates higher task priority."
|   |   |-HTMLEndTagComment 0xfde200 <col:60, col:64> Name="li"
|   |   |-TextComment 0xfde240 <line:654:3> Text=" "
|   |   |-HTMLStartTagComment 0xfde260 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfde2a0 <col:8, col:36> Text="The task name cannot be null."
|   |   |-HTMLEndTagComment 0xfde2c0 <col:37, col:41> Name="li"
|   |   |-TextComment 0xfde2f0 <line:655:3> Text=" "
|   |   |-HTMLStartTagComment 0xfde310 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfde350 <col:8, col:65> Text="The pointer to the task executing function cannot be null."
|   |   |-HTMLEndTagComment 0xfde370 <col:66, col:70> Name="li"
|   |   |-TextComment 0xfde3a0 <line:656:3> Text=" "
|   |   |-HTMLStartTagComment 0xfde3c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfde400 <col:8, col:114> Text="The two parameters of this interface is pointer, it should be a correct value, otherwise, the system may be"
|   |   |-TextComment 0xfde420 <line:657:3, col:12> Text=" abnormal."
|   |   |-HTMLEndTagComment 0xfde440 <col:13, col:17> Name="li"
|   |   |-TextComment 0xfde470 <line:658:3> Text=" "
|   |   |-HTMLStartTagComment 0xfde490 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfde4d0 <col:8, col:115> Text="If user mode is enabled, user should input user stack pointer and size, the size must fit the stack pointer,"
|   |   |-TextComment 0xfde4f0 <line:659:3, col:47> Text=" uwStackSize remain as the kernel stack size."
|   |   |-HTMLEndTagComment 0xfde510 <col:48, col:52> Name="li"
|   |   |-TextComment 0xfde540 <line:660:3> Text=" "
|   |   `-HTMLEndTagComment 0xfde560 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfde740 <line:662:3>
|   | `-TextComment 0xfde710 <col:3> Text=" "
|   |-ParamCommandComment 0xfde760 <col:4, line:663:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xfde810 <line:662:18, line:663:3>
|   |   |-TextComment 0xfde7c0 <line:662:18, col:55> Text="        [OUT] Type  #UINT32 * Task ID."
|   |   `-TextComment 0xfde7e0 <line:663:3> Text=" "
|   |-ParamCommandComment 0xfde830 <col:4, col:85> [in] implicitly Param="taskInitParam" ParamIndex=1
|   | `-ParagraphComment 0xfde8c0 <col:25, col:85>
|   |   `-TextComment 0xfde890 <col:25, col:85> Text=" [IN]  Type  #TSK_INIT_PARAM_S * Parameter for task creation."
|   |-ParagraphComment 0xfde910 <line:665:3>
|   | `-TextComment 0xfde8e0 <col:3> Text=" "
|   |-BlockCommandComment 0xfde930 <col:4, line:666:3> Name="retval"
|   | `-ParagraphComment 0xfde9b0 <line:665:11, line:666:3>
|   |   |-TextComment 0xfde960 <line:665:11, col:85> Text=" #LOS_ERRNO_TSK_ID_INVALID        Invalid Task ID, param puwTaskID is NULL."
|   |   `-TextComment 0xfde980 <line:666:3> Text=" "
|   |-BlockCommandComment 0xfde9d0 <col:4, line:667:3> Name="retval"
|   | `-ParagraphComment 0xfdea50 <line:666:11, line:667:3>
|   |   |-TextComment 0xfdea00 <line:666:11, col:71> Text=" #LOS_ERRNO_TSK_PTR_NULL          Param pstInitParam is NULL."
|   |   `-TextComment 0xfdea20 <line:667:3> Text=" "
|   |-BlockCommandComment 0xfdea70 <col:4, line:668:3> Name="retval"
|   | `-ParagraphComment 0xfdeaf0 <line:667:11, line:668:3>
|   |   |-TextComment 0xfdeaa0 <line:667:11, col:66> Text=" #LOS_ERRNO_TSK_NAME_EMPTY        The task name is NULL."
|   |   `-TextComment 0xfdeac0 <line:668:3> Text=" "
|   |-BlockCommandComment 0xfdeb10 <col:4, line:669:3> Name="retval"
|   | `-ParagraphComment 0xfdeb90 <line:668:11, line:669:3>
|   |   |-TextComment 0xfdeb40 <line:668:11, col:70> Text=" #LOS_ERRNO_TSK_ENTRY_NULL        The task entrance is NULL."
|   |   `-TextComment 0xfdeb60 <line:669:3> Text=" "
|   |-BlockCommandComment 0xfdebb0 <col:4, line:670:3> Name="retval"
|   | `-ParagraphComment 0xfdec30 <line:669:11, line:670:3>
|   |   |-TextComment 0xfdebe0 <line:669:11, col:68> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR       Incorrect task priority."
|   |   `-TextComment 0xfdec00 <line:670:3> Text=" "
|   |-BlockCommandComment 0xfdec50 <col:4, line:671:3> Name="retval"
|   | `-ParagraphComment 0xfdecd0 <line:670:11, line:671:3>
|   |   |-TextComment 0xfdec80 <line:670:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_LARGE   The task stack size is too large."
|   |   `-TextComment 0xfdeca0 <line:671:3> Text=" "
|   |-BlockCommandComment 0xfdecf0 <col:4, line:672:3> Name="retval"
|   | `-ParagraphComment 0xfded70 <line:671:11, line:672:3>
|   |   |-TextComment 0xfded20 <line:671:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_SMALL   The task stack size is too small."
|   |   `-TextComment 0xfded40 <line:672:3> Text=" "
|   |-BlockCommandComment 0xfded90 <col:4, line:673:3> Name="retval"
|   | `-ParagraphComment 0xfdee10 <line:672:11, line:673:3>
|   |   |-TextComment 0xfdedc0 <line:672:11, col:84> Text=" #LOS_ERRNO_TSK_TCB_UNAVAILABLE   No free task control block is available."
|   |   `-TextComment 0xfdede0 <line:673:3> Text=" "
|   |-BlockCommandComment 0xfdee30 <col:4, line:674:3> Name="retval"
|   | `-ParagraphComment 0xfdeeb0 <line:673:11, line:674:3>
|   |   |-TextComment 0xfdee60 <line:673:11, col:82> Text=" #LOS_ERRNO_TSK_NO_MEMORY         Insufficient memory for task creation."
|   |   `-TextComment 0xfdee80 <line:674:3> Text=" "
|   |-BlockCommandComment 0xfdeed0 <col:4, line:675:3> Name="retval"
|   | `-ParagraphComment 0xfdef50 <line:674:11, line:675:3>
|   |   |-TextComment 0xfdef00 <line:674:11, col:77> Text=" #LOS_OK                          The task is successfully created."
|   |   `-TextComment 0xfdef20 <line:675:3> Text=" "
|   |-BlockCommandComment 0xfdef70 <col:4, line:678:3> Name="par"
|   | `-ParagraphComment 0xfdf2c0 <line:675:8, line:678:3>
|   |   |-TextComment 0xfdefa0 <line:675:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfdefc0 <line:676:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdefe0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfdf020 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfdf060 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfdf080 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfdf0b0 <col:79, col:83> Name="ul"
|   |   |-TextComment 0xfdf0e0 <line:677:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdf100 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfdf140 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfdf180 <col:12, col:82> Text="los_config.h: the header file that contains system configuration items."
|   |   |-HTMLEndTagComment 0xfdf1a0 <col:83, col:87> Name="li"
|   |   |-HTMLEndTagComment 0xfdf1d0 <col:88, col:92> Name="ul"
|   |   `-TextComment 0xfdf200 <line:678:3> Text=" "
|   `-BlockCommandComment 0xfdf2e0 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xfdf340 <col:8, col:22>
|       `-TextComment 0xfdf310 <col:8, col:22> Text=" LOS_TaskDelete"
|-FunctionDecl 0xf83828 <line:706:1, col:43> col:15 LOS_TaskResume 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xf83798 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0xfe00e0 <line:683:3, line:704:23>
|   |-ParagraphComment 0xfdf4c0 <line:683:3>
|   | `-TextComment 0xfdf490 <col:3> Text=" "
|   |-VerbatimLineComment 0xfdf4e0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfdf550 <line:684:3>
|   | `-TextComment 0xfdf520 <col:3> Text=" "
|   |-BlockCommandComment 0xfdf570 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0xfdf5d0 <col:10, col:24>
|   |   `-TextComment 0xfdf5a0 <col:10, col:24> Text=" Resume a task."
|   |-ParagraphComment 0xfdf620 <line:686:3>
|   | `-TextComment 0xfdf5f0 <col:3> Text=" "
|   |-BlockCommandComment 0xfdf640 <col:4, line:687:47> Name="par"
|   | `-ParagraphComment 0xfdf6c0 <line:686:8, line:687:47>
|   |   |-TextComment 0xfdf670 <line:686:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfdf690 <line:687:3, col:47> Text=" This API is used to resume a suspended task."
|   |-ParagraphComment 0xfdf710 <line:689:3>
|   | `-TextComment 0xfdf6e0 <col:3> Text=" "
|   |-BlockCommandComment 0xfdf730 <col:4, line:694:8> Name="attention"
|   | `-ParagraphComment 0xfdf9f0 <line:690:3, line:694:8>
|   |   |-TextComment 0xfdf760 <line:690:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdf780 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfdf7c0 <line:691:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdf7e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfdf820 <col:8, col:104> Text="If the task is delayed or blocked, resume the task without adding it to the queue of ready tasks."
|   |   |-HTMLEndTagComment 0xfdf840 <col:105, col:109> Name="li"
|   |   |-TextComment 0xfdf870 <line:692:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdf890 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfdf8d0 <col:8, col:119> Text="If the priority of the task resumed after system initialized is higher than the current task and task scheduling"
|   |   |-TextComment 0xfdf8f0 <line:693:3, col:46> Text=" is not locked, it is scheduled for running."
|   |   |-HTMLEndTagComment 0xfdf910 <col:47, col:51> Name="li"
|   |   |-TextComment 0xfdf940 <line:694:3> Text=" "
|   |   `-HTMLEndTagComment 0xfdf960 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfdfa40 <line:696:3>
|   | `-TextComment 0xfdfa10 <col:3> Text=" "
|   |-ParamCommandComment 0xfdfa60 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xfdfaf0 <col:18, col:94>
|   |   `-TextComment 0xfdfac0 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0xfdfb40 <line:698:3>
|   | `-TextComment 0xfdfb10 <col:3> Text=" "
|   |-BlockCommandComment 0xfdfb60 <col:4, line:699:3> Name="retval"
|   | `-ParagraphComment 0xfdfbe0 <line:698:11, line:699:3>
|   |   |-TextComment 0xfdfb90 <line:698:11, col:59> Text=" #LOS_ERRNO_TSK_ID_INVALID        Invalid Task ID"
|   |   `-TextComment 0xfdfbb0 <line:699:3> Text=" "
|   |-BlockCommandComment 0xfdfc00 <col:4, line:700:3> Name="retval"
|   | `-ParagraphComment 0xfdfc80 <line:699:11, line:700:3>
|   |   |-TextComment 0xfdfc30 <line:699:11, col:68> Text=" #LOS_ERRNO_TSK_NOT_CREATED       The task is not created."
|   |   `-TextComment 0xfdfc50 <line:700:3> Text=" "
|   |-BlockCommandComment 0xfdfca0 <col:4, line:701:3> Name="retval"
|   | `-ParagraphComment 0xfdfd20 <line:700:11, line:701:3>
|   |   |-TextComment 0xfdfcd0 <line:700:11, col:70> Text=" #LOS_ERRNO_TSK_NOT_SUSPENDED     The task is not suspended."
|   |   `-TextComment 0xfdfcf0 <line:701:3> Text=" "
|   |-BlockCommandComment 0xfdfd40 <col:4, line:702:3> Name="retval"
|   | `-ParagraphComment 0xfdfdc0 <line:701:11, line:702:3>
|   |   |-TextComment 0xfdfd70 <line:701:11, col:77> Text=" #LOS_OK                          The task is successfully resumed."
|   |   `-TextComment 0xfdfd90 <line:702:3> Text=" "
|   |-BlockCommandComment 0xfdfde0 <col:4, line:704:3> Name="par"
|   | `-ParagraphComment 0xfdffb0 <line:702:8, line:704:3>
|   |   |-TextComment 0xfdfe10 <line:702:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfdfe30 <line:703:3> Text=" "
|   |   |-HTMLStartTagComment 0xfdfe50 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfdfe90 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfdfed0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfdfef0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfdff20 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfdff50 <line:704:3> Text=" "
|   `-BlockCommandComment 0xfdffd0 <col:4, col:23> Name="see"
|     `-ParagraphComment 0xfe0030 <col:8, col:23>
|       `-TextComment 0xfe0000 <col:8, col:23> Text=" LOS_TaskSuspend"
|-FunctionDecl 0xf83998 <line:735:1, col:44> col:15 LOS_TaskSuspend 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xf83908 <col:31, col:38> col:38 taskID 'UINT32':'unsigned int'
| `-FullComment 0xfe0fd0 <line:709:3, line:733:22>
|   |-ParagraphComment 0xfe0180 <line:709:3>
|   | `-TextComment 0xfe0150 <col:3> Text=" "
|   |-VerbatimLineComment 0xfe01a0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfe0210 <line:710:3>
|   | `-TextComment 0xfe01e0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe0260 <col:4, col:25> Name="brief"
|   | `-ParagraphComment 0xfe02c0 <col:10, col:25>
|   |   `-TextComment 0xfe0290 <col:10, col:25> Text=" Suspend a task."
|   |-ParagraphComment 0xfe0310 <line:712:3>
|   | `-TextComment 0xfe02e0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe0330 <col:4, line:713:108> Name="par"
|   | `-ParagraphComment 0xfe03b0 <line:712:8, line:713:108>
|   |   |-TextComment 0xfe0360 <line:712:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfe0380 <line:713:3, col:108> Text=" This API is used to suspend a specified task, and the task will be removed from the queue of ready tasks."
|   |-ParagraphComment 0xfe0400 <line:715:3>
|   | `-TextComment 0xfe03d0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe0420 <col:4, line:719:8> Name="attention"
|   | `-ParagraphComment 0xfe06c0 <line:716:3, line:719:8>
|   |   |-TextComment 0xfe0450 <line:716:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe0470 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfe04b0 <line:717:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe04d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe0510 <col:8, col:63> Text="The task that is running and locked cannot be suspended."
|   |   |-HTMLEndTagComment 0xfe0530 <col:64, col:68> Name="li"
|   |   |-TextComment 0xfe0560 <line:718:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe0580 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe05c0 <col:8, col:56> Text="The idle task and swtmr task cannot be suspended."
|   |   |-HTMLEndTagComment 0xfe05e0 <col:57, col:61> Name="li"
|   |   |-TextComment 0xfe0610 <line:719:3> Text=" "
|   |   `-HTMLEndTagComment 0xfe0630 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfe0710 <line:721:3>
|   | `-TextComment 0xfe06e0 <col:3> Text=" "
|   |-ParamCommandComment 0xfe0730 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xfe07c0 <col:18, col:94>
|   |   `-TextComment 0xfe0790 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0xfe0810 <line:723:3>
|   | `-TextComment 0xfe07e0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe0830 <col:4, line:724:3> Name="retval"
|   | `-ParagraphComment 0xfe08b0 <line:723:11, line:724:3>
|   |   |-TextComment 0xfe0860 <line:723:11, col:110> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE                  Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0xfe0880 <line:724:3> Text=" "
|   |-BlockCommandComment 0xfe08d0 <col:4, line:725:3> Name="retval"
|   | `-ParagraphComment 0xfe0950 <line:724:11, line:725:3>
|   |   |-TextComment 0xfe0900 <line:724:11, col:111> Text=" #LOS_ERRNO_TSK_SUSPEND_SWTMR_NOT_ALLOWED     Check the task ID and do not operate on the swtmr task."
|   |   `-TextComment 0xfe0920 <line:725:3> Text=" "
|   |-BlockCommandComment 0xfe0970 <col:4, line:726:3> Name="retval"
|   | `-ParagraphComment 0xfe09f0 <line:725:11, line:726:3>
|   |   |-TextComment 0xfe09a0 <line:725:11, col:71> Text=" #LOS_ERRNO_TSK_ID_INVALID                    Invalid Task ID"
|   |   `-TextComment 0xfe09c0 <line:726:3> Text=" "
|   |-BlockCommandComment 0xfe0a10 <col:4, line:727:3> Name="retval"
|   | `-ParagraphComment 0xfe0a90 <line:726:11, line:727:3>
|   |   |-TextComment 0xfe0a40 <line:726:11, col:80> Text=" #LOS_ERRNO_TSK_NOT_CREATED                   The task is not created."
|   |   `-TextComment 0xfe0a60 <line:727:3> Text=" "
|   |-BlockCommandComment 0xfe0ab0 <col:4, line:728:3> Name="retval"
|   | `-ParagraphComment 0xfe0b30 <line:727:11, line:728:3>
|   |   |-TextComment 0xfe0ae0 <line:727:11, col:86> Text=" #LOS_ERRNO_TSK_ALREADY_SUSPENDED             The task is already suspended."
|   |   `-TextComment 0xfe0b00 <line:728:3> Text=" "
|   |-BlockCommandComment 0xfe0b50 <col:4, line:730:3> Name="retval"
|   | `-ParagraphComment 0xfe0c00 <line:728:11, line:730:3>
|   |   |-TextComment 0xfe0b80 <line:728:11, col:116> Text=" #LOS_ERRNO_TSK_SUSPEND_LOCKED                The task being suspended is current task and task scheduling"
|   |   |-TextComment 0xfe0ba0 <line:729:3, col:66> Text="                                                      is locked."
|   |   `-TextComment 0xfe0bc0 <line:730:3> Text=" "
|   |-BlockCommandComment 0xfe0c20 <col:4, line:731:3> Name="retval"
|   | `-ParagraphComment 0xfe0ca0 <line:730:11, line:731:3>
|   |   |-TextComment 0xfe0c50 <line:730:11, col:91> Text=" #LOS_OK                                      The task is successfully suspended."
|   |   `-TextComment 0xfe0c70 <line:731:3> Text=" "
|   |-BlockCommandComment 0xfe0cc0 <col:4, line:733:3> Name="par"
|   | `-ParagraphComment 0xfe0e90 <line:731:8, line:733:3>
|   |   |-TextComment 0xfe0cf0 <line:731:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfe0d10 <line:732:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe0d30 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfe0d70 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfe0db0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfe0dd0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfe0e00 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfe0e30 <line:733:3> Text=" "
|   `-BlockCommandComment 0xfe0eb0 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xfe0f10 <col:8, col:22>
|       `-TextComment 0xfe0ee0 <col:8, col:22> Text=" LOS_TaskResume"
|-FunctionDecl 0xf83b08 <line:763:1, col:43> col:15 LOS_TaskDelete 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xf83a78 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0xfe1e10 <line:738:3, line:761:43>
|   |-ParagraphComment 0xfe1070 <line:738:3>
|   | `-TextComment 0xfe1040 <col:3> Text=" "
|   |-VerbatimLineComment 0xfe1090 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfe1100 <line:739:3>
|   | `-TextComment 0xfe10d0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe1120 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0xfe1180 <col:10, col:24>
|   |   `-TextComment 0xfe1150 <col:10, col:24> Text=" Delete a task."
|   |-ParagraphComment 0xfe11d0 <line:741:3>
|   | `-TextComment 0xfe11a0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe11f0 <col:4, line:742:115> Name="par"
|   | `-ParagraphComment 0xfe1280 <line:741:8, line:742:115>
|   |   |-TextComment 0xfe1220 <line:741:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfe1240 <line:742:3, col:115> Text=" This API is used to delete a specified task and release the resources for its task stack and task control block."
|   |-ParagraphComment 0xfe12d0 <line:744:3>
|   | `-TextComment 0xfe12a0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe12f0 <col:4, line:750:8> Name="attention"
|   | `-ParagraphComment 0xfe1680 <line:745:3, line:750:8>
|   |   |-TextComment 0xfe1320 <line:745:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe1340 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfe1380 <line:746:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe13a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe13e0 <col:8, col:54> Text="The idle task and swtmr task cannot be deleted."
|   |   |-HTMLEndTagComment 0xfe1400 <col:55, col:59> Name="li"
|   |   |-TextComment 0xfe1430 <line:747:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe1450 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe1490 <col:8, col:59> Text="If delete current task maybe cause unexpected error."
|   |   |-HTMLEndTagComment 0xfe14b0 <col:60, col:64> Name="li"
|   |   |-TextComment 0xfe14e0 <line:748:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe1500 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe1540 <col:8, col:110> Text="If a task get a mutex is deleted or automatically deleted before release this mutex, other tasks pended"
|   |   |-TextComment 0xfe1560 <line:749:3, col:39> Text=" this mutex maybe never be shchduled."
|   |   |-HTMLEndTagComment 0xfe1580 <col:40, col:44> Name="li"
|   |   |-TextComment 0xfe15b0 <line:750:3> Text=" "
|   |   `-HTMLEndTagComment 0xfe15d0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfe16d0 <line:752:3>
|   | `-TextComment 0xfe16a0 <col:3> Text=" "
|   |-ParamCommandComment 0xfe16f0 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xfe1780 <col:18, col:94>
|   |   `-TextComment 0xfe1750 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0xfe17d0 <line:754:3>
|   | `-TextComment 0xfe17a0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe17f0 <col:4, line:755:3> Name="retval"
|   | `-ParagraphComment 0xfe1870 <line:754:11, line:755:3>
|   |   |-TextComment 0xfe1820 <line:754:11, col:110> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE                  Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0xfe1840 <line:755:3> Text=" "
|   |-BlockCommandComment 0xfe1890 <col:4, line:756:3> Name="retval"
|   | `-ParagraphComment 0xfe1910 <line:755:11, line:756:3>
|   |   |-TextComment 0xfe18c0 <line:755:11, col:111> Text=" #LOS_ERRNO_TSK_SUSPEND_SWTMR_NOT_ALLOWED     Check the task ID and do not operate on the swtmr task."
|   |   `-TextComment 0xfe18e0 <line:756:3> Text=" "
|   |-BlockCommandComment 0xfe1930 <col:4, line:757:3> Name="retval"
|   | `-ParagraphComment 0xfe19b0 <line:756:11, line:757:3>
|   |   |-TextComment 0xfe1960 <line:756:11, col:71> Text=" #LOS_ERRNO_TSK_ID_INVALID                    Invalid Task ID"
|   |   `-TextComment 0xfe1980 <line:757:3> Text=" "
|   |-BlockCommandComment 0xfe19d0 <col:4, line:758:3> Name="retval"
|   | `-ParagraphComment 0xfe1a50 <line:757:11, line:758:3>
|   |   |-TextComment 0xfe1a00 <line:757:11, col:80> Text=" #LOS_ERRNO_TSK_NOT_CREATED                   The task is not created."
|   |   `-TextComment 0xfe1a20 <line:758:3> Text=" "
|   |-BlockCommandComment 0xfe1a70 <col:4, line:759:3> Name="retval"
|   | `-ParagraphComment 0xfe1af0 <line:758:11, line:759:3>
|   |   |-TextComment 0xfe1aa0 <line:758:11, col:89> Text=" #LOS_OK                                      The task is successfully deleted."
|   |   `-TextComment 0xfe1ac0 <line:759:3> Text=" "
|   |-BlockCommandComment 0xfe1b10 <col:4, line:761:3> Name="par"
|   | `-ParagraphComment 0xfe1ce0 <line:759:8, line:761:3>
|   |   |-TextComment 0xfe1b40 <line:759:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfe1b60 <line:760:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe1b80 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfe1bc0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfe1c00 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfe1c20 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfe1c50 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfe1c80 <line:761:3> Text=" "
|   `-BlockCommandComment 0xfe1d00 <col:4, col:43> Name="see"
|     `-ParagraphComment 0xfe1d60 <col:8, col:43>
|       `-TextComment 0xfe1d30 <col:8, col:43> Text=" LOS_TaskCreate | LOS_TaskCreateOnly"
|-FunctionDecl 0xf83c78 <line:794:1, col:40> col:15 LOS_TaskDelay 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xf83be8 <col:29, col:36> col:36 tick 'UINT32':'unsigned int'
| `-FullComment 0xfe2cb0 <line:766:3, line:792:7>
|   |-ParagraphComment 0xfe1eb0 <line:766:3>
|   | `-TextComment 0xfe1e80 <col:3> Text=" "
|   |-VerbatimLineComment 0xfe1ed0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfe1f40 <line:767:3>
|   | `-TextComment 0xfe1f10 <col:3> Text=" "
|   |-BlockCommandComment 0xfe1f60 <col:4, col:23> Name="brief"
|   | `-ParagraphComment 0xfe1fc0 <col:10, col:23>
|   |   `-TextComment 0xfe1f90 <col:10, col:23> Text=" Delay a task."
|   |-ParagraphComment 0xfe2010 <line:769:3>
|   | `-TextComment 0xfe1fe0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe2030 <col:4, line:771:35> Name="par"
|   | `-ParagraphComment 0xfe20e0 <line:769:8, line:771:35>
|   |   |-TextComment 0xfe2060 <line:769:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfe2080 <line:770:3, col:116> Text=" This API is used to delay the execution of the current task. The task is able to be scheduled after it is delayed"
|   |   `-TextComment 0xfe20a0 <line:771:3, col:35> Text=" for a specified number of Ticks."
|   |-ParagraphComment 0xfe2130 <line:773:3>
|   | `-TextComment 0xfe2100 <col:3> Text=" "
|   |-BlockCommandComment 0xfe2150 <col:4, line:781:8> Name="attention"
|   | `-ParagraphComment 0xfe2550 <line:774:3, line:781:8>
|   |   |-TextComment 0xfe2180 <line:774:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe21a0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfe21e0 <line:775:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe2200 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe2240 <col:8, col:103> Text="The task fails to be delayed if it is being delayed during interrupt processing or it is locked."
|   |   |-HTMLEndTagComment 0xfe2280 <col:104, col:108> Name="li"
|   |   |-TextComment 0xfe22b0 <line:776:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe22d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe2310 <col:8, col:112> Text="If 0 is passed in and the task scheduling is not locked, execute the next task in the queue of tasks with"
|   |   |-TextComment 0xfe2330 <line:777:3, col:41> Text=" the same priority of the current task."
|   |   |-TextComment 0xfe2350 <line:778:3, col:115> Text=" If no ready task with the priority of the current task is available, the task scheduling will not occur, and the"
|   |   |-TextComment 0xfe2370 <line:779:3, col:41> Text=" current task continues to be executed."
|   |   |-HTMLEndTagComment 0xfe2390 <col:42, col:46> Name="li"
|   |   |-TextComment 0xfe23c0 <line:780:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe23e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe2420 <col:8, col:68> Text="Using the interface before system initialized is not allowed."
|   |   |-HTMLEndTagComment 0xfe2440 <col:69, col:73> Name="li"
|   |   |-TextComment 0xfe2470 <line:781:3> Text=" "
|   |   `-HTMLEndTagComment 0xfe2490 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfe25a0 <line:783:3>
|   | `-TextComment 0xfe2570 <col:3> Text=" "
|   |-ParamCommandComment 0xfe25c0 <col:4, col:80> [in] implicitly Param="tick" ParamIndex=0
|   | `-ParagraphComment 0xfe2650 <col:16, col:80>
|   |   `-TextComment 0xfe2620 <col:16, col:80> Text=" [IN] Type #UINT32 Number of Ticks for which the task is delayed."
|   |-ParagraphComment 0xfe26a0 <line:785:3>
|   | `-TextComment 0xfe2670 <col:3> Text=" "
|   |-BlockCommandComment 0xfe26c0 <col:4, line:786:3> Name="retval"
|   | `-ParagraphComment 0xfe2740 <line:785:11, line:786:3>
|   |   |-TextComment 0xfe26f0 <line:785:11, col:94> Text=" #LOS_ERRNO_TSK_DELAY_IN_INT              The task delay occurs during an interrupt."
|   |   `-TextComment 0xfe2710 <line:786:3> Text=" "
|   |-BlockCommandComment 0xfe2760 <col:4, line:787:3> Name="retval"
|   | `-ParagraphComment 0xfe27e0 <line:786:11, line:787:3>
|   |   |-TextComment 0xfe2790 <line:786:11, col:109> Text=" #LOS_ERRNO_TSK_DELAY_IN_LOCK             The task delay occurs when the task scheduling is locked."
|   |   `-TextComment 0xfe27b0 <line:787:3> Text=" "
|   |-BlockCommandComment 0xfe2800 <col:4, line:788:3> Name="retval"
|   | `-ParagraphComment 0xfe2880 <line:787:11, line:788:3>
|   |   |-TextComment 0xfe2830 <line:787:11, col:67> Text=" #LOS_ERRNO_TSK_ID_INVALID                Invalid Task ID"
|   |   `-TextComment 0xfe2850 <line:788:3> Text=" "
|   |-BlockCommandComment 0xfe28a0 <col:4, line:789:3> Name="retval"
|   | `-ParagraphComment 0xfe2920 <line:788:11, line:789:3>
|   |   |-TextComment 0xfe28d0 <line:788:11, col:112> Text=" #LOS_ERRNO_TSK_YIELD_NOT_ENOUGH_TASK     No tasks with the same priority is available for scheduling."
|   |   `-TextComment 0xfe28f0 <line:789:3> Text=" "
|   |-BlockCommandComment 0xfe2940 <col:4, line:790:3> Name="retval"
|   | `-ParagraphComment 0xfe29c0 <line:789:11, line:790:3>
|   |   |-TextComment 0xfe2970 <line:789:11, col:85> Text=" #LOS_OK                                  The task is successfully delayed."
|   |   `-TextComment 0xfe2990 <line:790:3> Text=" "
|   |-BlockCommandComment 0xfe29e0 <col:4, line:792:3> Name="par"
|   | `-ParagraphComment 0xfe2bb0 <line:790:8, line:792:3>
|   |   |-TextComment 0xfe2a10 <line:790:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfe2a30 <line:791:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe2a50 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfe2a90 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfe2ad0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfe2af0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfe2b20 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfe2b50 <line:792:3> Text=" "
|   `-BlockCommandComment 0xfe2bd0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfe2c00 <<invalid sloc>>
|-FunctionDecl 0xf83de0 <line:817:1, col:30> col:13 LOS_TaskLock 'void (void)' extern
| `-FullComment 0xfe3c50 <line:797:3, line:815:22>
|   |-ParagraphComment 0xfe2d50 <line:797:3>
|   | `-TextComment 0xfe2d20 <col:3> Text=" "
|   |-VerbatimLineComment 0xfe2d70 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfe2de0 <line:798:3>
|   | `-TextComment 0xfe2db0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe2e00 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0xfe2e60 <col:10, col:35>
|   |   `-TextComment 0xfe2e30 <col:10, col:35> Text=" Lock the task scheduling."
|   |-ParagraphComment 0xfe2eb0 <line:800:3>
|   | `-TextComment 0xfe2e80 <col:3> Text=" "
|   |-BlockCommandComment 0xfe2ed0 <col:4, line:801:112> Name="par"
|   | `-ParagraphComment 0xfe2f50 <line:800:8, line:801:112>
|   |   |-TextComment 0xfe2f00 <line:800:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfe2f20 <line:801:3, col:112> Text=" This API is used to lock the task scheduling. Task switching will not occur if the task scheduling is locked."
|   |-ParagraphComment 0xfe2fa0 <line:803:3>
|   | `-TextComment 0xfe2f70 <col:3> Text=" "
|   |-BlockCommandComment 0xfe2fc0 <col:4, line:808:8> Name="attention"
|   | `-ParagraphComment 0xfe3790 <line:804:3, line:808:8>
|   |   |-TextComment 0xfe2ff0 <line:804:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe3010 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfe3050 <line:805:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe3070 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe30b0 <col:8, col:113> Text="If the task scheduling is locked, but interrupts are not disabled, tasks are still able to be interrupted."
|   |   |-HTMLEndTagComment 0xfe30d0 <col:114, col:118> Name="li"
|   |   |-TextComment 0xfe3100 <line:806:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe3120 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe3160 <col:8, col:117> Text="One is added to the number of task scheduling locks if this API is called. The number of locks is decreased by"
|   |   |-TextComment 0xfe3180 <line:807:3, col:107> Text=" one if the task scheduling is unlocked. Therefore, this API should be used together with LOS_TaskUnlock."
|   |   |-HTMLEndTagComment 0xfe31a0 <col:108, col:112> Name="li"
|   |   |-TextComment 0xfe31d0 <line:808:3> Text=" "
|   |   `-HTMLEndTagComment 0xfe31f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfe37e0 <line:810:3>
|   | `-TextComment 0xfe37b0 <col:3> Text=" "
|   |-ParamCommandComment 0xfe3800 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xfe3860 <<invalid sloc>>
|   |-ParagraphComment 0xfe38b0 <line:812:3>
|   | `-TextComment 0xfe3880 <col:3> Text=" "
|   |-BlockCommandComment 0xfe38d0 <col:4, line:813:3> Name="retval"
|   | `-ParagraphComment 0xfe3950 <line:812:11, line:813:3>
|   |   |-TextComment 0xfe3900 <line:812:11, col:16> Text=" None."
|   |   `-TextComment 0xfe3920 <line:813:3> Text=" "
|   |-BlockCommandComment 0xfe3970 <col:4, line:815:3> Name="par"
|   | `-ParagraphComment 0xfe3b40 <line:813:8, line:815:3>
|   |   |-TextComment 0xfe39a0 <line:813:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfe39c0 <line:814:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe39e0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfe3a20 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfe3a60 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfe3a80 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfe3ab0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfe3ae0 <line:815:3> Text=" "
|   `-BlockCommandComment 0xfe3b60 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xfe3bc0 <col:8, col:22>
|       `-TextComment 0xfe3b90 <col:8, col:22> Text=" LOS_TaskUnlock"
|-FunctionDecl 0xf83f40 <line:840:1, col:32> col:13 LOS_TaskUnlock 'void (void)' extern
| `-FullComment 0xfe4640 <line:820:3, line:838:20>
|   |-ParagraphComment 0xfe3cf0 <line:820:3>
|   | `-TextComment 0xfe3cc0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfe3d10 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfe3d80 <line:821:3>
|   | `-TextComment 0xfe3d50 <col:3> Text=" "
|   |-BlockCommandComment 0xfe3da0 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0xfe3e00 <col:10, col:37>
|   |   `-TextComment 0xfe3dd0 <col:10, col:37> Text=" Unlock the task scheduling."
|   |-ParagraphComment 0xfe3e50 <line:823:3>
|   | `-TextComment 0xfe3e20 <col:3> Text=" "
|   |-BlockCommandComment 0xfe3e70 <col:4, line:825:119> Name="par"
|   | `-ParagraphComment 0xfe3f20 <line:823:8, line:825:119>
|   |   |-TextComment 0xfe3ea0 <line:823:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfe3ec0 <line:824:3, col:114> Text=" This API is used to unlock the task scheduling. Calling this API will decrease the number of task locks by one."
|   |   `-TextComment 0xfe3ee0 <line:825:3, col:119> Text=" If a task is locked more than once, the task scheduling will be unlocked only when the number of locks becomes zero."
|   |-ParagraphComment 0xfe3f70 <line:827:3>
|   | `-TextComment 0xfe3f40 <col:3> Text=" "
|   |-BlockCommandComment 0xfe3f90 <col:4, line:831:8> Name="attention"
|   | `-ParagraphComment 0xfe4180 <line:828:3, line:831:8>
|   |   |-TextComment 0xfe3fc0 <line:828:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe3fe0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfe4020 <line:829:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe4040 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe4080 <col:8, col:115> Text="The number of locks is decreased by one if this API is called. One is added to the number of task scheduling"
|   |   |-TextComment 0xfe40a0 <line:830:3, col:105> Text=" locks if the task scheduling is locked. Therefore, this API should be used together with LOS_TaskLock."
|   |   |-HTMLEndTagComment 0xfe40c0 <col:106, col:110> Name="li"
|   |   |-TextComment 0xfe40f0 <line:831:3> Text=" "
|   |   `-HTMLEndTagComment 0xfe4110 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfe41d0 <line:833:3>
|   | `-TextComment 0xfe41a0 <col:3> Text=" "
|   |-ParamCommandComment 0xfe41f0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xfe4250 <<invalid sloc>>
|   |-ParagraphComment 0xfe42a0 <line:835:3>
|   | `-TextComment 0xfe4270 <col:3> Text=" "
|   |-BlockCommandComment 0xfe42c0 <col:4, line:836:3> Name="retval"
|   | `-ParagraphComment 0xfe4340 <line:835:11, line:836:3>
|   |   |-TextComment 0xfe42f0 <line:835:11, col:16> Text=" None."
|   |   `-TextComment 0xfe4310 <line:836:3> Text=" "
|   |-BlockCommandComment 0xfe4360 <col:4, line:838:3> Name="par"
|   | `-ParagraphComment 0xfe4530 <line:836:8, line:838:3>
|   |   |-TextComment 0xfe4390 <line:836:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfe43b0 <line:837:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe43d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfe4410 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfe4450 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfe4470 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfe44a0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfe44d0 <line:838:3> Text=" "
|   `-BlockCommandComment 0xfe4550 <col:4, col:20> Name="see"
|     `-ParagraphComment 0xfe45b0 <col:8, col:20>
|       `-TextComment 0xfe4580 <col:8, col:20> Text=" LOS_TaskLock"
|-FunctionDecl 0xf84168 <line:870:1, col:60> col:15 LOS_TaskPriSet 'UINT32 (UINT32, UINT16)' extern
| |-ParmVarDecl 0xf84018 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf84090 <col:45, col:52> col:52 taskPrio 'UINT16':'unsigned short'
| `-FullComment 0xfe5630 <line:843:3, line:868:22>
|   |-ParagraphComment 0xfe46e0 <line:843:3>
|   | `-TextComment 0xfe46b0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfe4700 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfe4770 <line:844:3>
|   | `-TextComment 0xfe4740 <col:3> Text=" "
|   |-BlockCommandComment 0xfe47a0 <col:4, col:30> Name="brief"
|   | `-ParagraphComment 0xfe4800 <col:10, col:30>
|   |   `-TextComment 0xfe47d0 <col:10, col:30> Text=" Set a task priority."
|   |-ParagraphComment 0xfe4850 <line:846:3>
|   | `-TextComment 0xfe4820 <col:3> Text=" "
|   |-BlockCommandComment 0xfe4870 <col:4, line:847:60> Name="par"
|   | `-ParagraphComment 0xfe48f0 <line:846:8, line:847:60>
|   |   |-TextComment 0xfe48a0 <line:846:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfe48c0 <line:847:3, col:60> Text=" This API is used to set the priority of a specified task."
|   |-ParagraphComment 0xfe4940 <line:849:3>
|   | `-TextComment 0xfe4910 <col:3> Text=" "
|   |-BlockCommandComment 0xfe4960 <col:4, line:856:8> Name="attention"
|   | `-ParagraphComment 0xfe4dc0 <line:850:3, line:856:8>
|   |   |-TextComment 0xfe4990 <line:850:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe49b0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfe49f0 <line:851:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe4a10 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe4a50 <col:8, col:116> Text="If the set priority is higher than the priority of the current running task, task scheduling probably occurs."
|   |   |-TextComment 0xfe4a70 <line:852:3> Text=" "
|   |   |-HTMLEndTagComment 0xfe4a90 <col:4, col:8> Name="li"
|   |   |-TextComment 0xfe4ac0 <line:853:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe4ae0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe4b20 <col:8, col:94> Text="Changing the priority of the current running task also probably causes task scheduling."
|   |   |-HTMLEndTagComment 0xfe4b40 <col:95, col:99> Name="li"
|   |   |-TextComment 0xfe4b70 <line:854:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe4b90 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe4bd0 <col:8, col:102> Text="Using the interface to change the priority of software timer task and idle task is not allowed."
|   |   |-HTMLEndTagComment 0xfe4bf0 <col:103, col:107> Name="li"
|   |   |-TextComment 0xfe4c20 <line:855:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe4c40 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe4c80 <col:8, col:59> Text="Using the interface in the interrupt is not allowed."
|   |   |-HTMLEndTagComment 0xfe4ca0 <col:60, col:64> Name="li"
|   |   |-TextComment 0xfe4cd0 <line:856:3> Text=" "
|   |   `-HTMLEndTagComment 0xfe4cf0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfe4e10 <line:858:3>
|   | `-TextComment 0xfe4de0 <col:3> Text=" "
|   |-ParamCommandComment 0xfe4e30 <col:4, line:859:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xfe4ee0 <line:858:18, line:859:3>
|   |   |-TextComment 0xfe4e90 <line:858:18, col:96> Text="   [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |   `-TextComment 0xfe4eb0 <line:859:3> Text=" "
|   |-ParamCommandComment 0xfe4f00 <col:4, col:52> [in] implicitly Param="taskPrio" ParamIndex=1
|   | `-ParagraphComment 0xfe4f90 <col:20, col:52>
|   |   `-TextComment 0xfe4f60 <col:20, col:52> Text=" [IN] Type #UINT16 Task priority."
|   |-ParagraphComment 0xfe4fe0 <line:861:3>
|   | `-TextComment 0xfe4fb0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe5000 <col:4, line:862:3> Name="retval"
|   | `-ParagraphComment 0xfe5080 <line:861:11, line:862:3>
|   |   |-TextComment 0xfe5030 <line:861:11, col:95> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR    Incorrect task priority.Re-configure the task priority"
|   |   `-TextComment 0xfe5050 <line:862:3> Text=" "
|   |-BlockCommandComment 0xfe50a0 <col:4, line:863:3> Name="retval"
|   | `-ParagraphComment 0xfe5120 <line:862:11, line:863:3>
|   |   |-TextComment 0xfe50d0 <line:862:11, col:95> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE   Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0xfe50f0 <line:863:3> Text=" "
|   |-BlockCommandComment 0xfe5140 <col:4, line:864:3> Name="retval"
|   | `-ParagraphComment 0xfe51c0 <line:863:11, line:864:3>
|   |   |-TextComment 0xfe5170 <line:863:11, col:56> Text=" #LOS_ERRNO_TSK_ID_INVALID     Invalid Task ID"
|   |   `-TextComment 0xfe5190 <line:864:3> Text=" "
|   |-BlockCommandComment 0xfe51e0 <col:4, line:865:3> Name="retval"
|   | `-ParagraphComment 0xfe5260 <line:864:11, line:865:3>
|   |   |-TextComment 0xfe5210 <line:864:11, col:65> Text=" #LOS_ERRNO_TSK_NOT_CREATED    The task is not created."
|   |   `-TextComment 0xfe5230 <line:865:3> Text=" "
|   |-BlockCommandComment 0xfe5280 <col:4, line:866:3> Name="retval"
|   | `-ParagraphComment 0xfe5300 <line:865:11, line:866:3>
|   |   |-TextComment 0xfe52b0 <line:865:11, col:103> Text=" #LOS_OK                       The task priority is successfully set to a specified priority."
|   |   `-TextComment 0xfe52d0 <line:866:3> Text=" "
|   |-BlockCommandComment 0xfe5320 <col:4, line:868:3> Name="par"
|   | `-ParagraphComment 0xfe54f0 <line:866:8, line:868:3>
|   |   |-TextComment 0xfe5350 <line:866:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfe5370 <line:867:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe5390 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfe53d0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfe5410 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfe5430 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfe5460 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfe5490 <line:868:3> Text=" "
|   `-BlockCommandComment 0xfe5510 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xfe5570 <col:8, col:22>
|       `-TextComment 0xfe5540 <col:8, col:22> Text=" LOS_TaskPriSet"
|-FunctionDecl 0xf84348 <line:898:1, col:48> col:15 LOS_CurTaskPriSet 'UINT32 (UINT16)' extern
| |-ParmVarDecl 0xf84258 <col:33, col:40> col:40 taskPrio 'UINT16':'unsigned short'
| `-FullComment 0xfe64a0 <line:873:3, line:896:22>
|   |-ParagraphComment 0xfe56d0 <line:873:3>
|   | `-TextComment 0xfe56a0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfe56f0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfe5760 <line:874:3>
|   | `-TextComment 0xfe5730 <col:3> Text=" "
|   |-BlockCommandComment 0xfe57b0 <col:4, col:79> Name="brief"
|   | `-ParagraphComment 0xfe5810 <col:10, col:79>
|   |   `-TextComment 0xfe57e0 <col:10, col:79> Text=" Set the priority of the current running task to a specified priority."
|   |-ParagraphComment 0xfe5860 <line:876:3>
|   | `-TextComment 0xfe5830 <col:3> Text=" "
|   |-BlockCommandComment 0xfe5880 <col:4, line:877:92> Name="par"
|   | `-ParagraphComment 0xfe5900 <line:876:8, line:877:92>
|   |   |-TextComment 0xfe58b0 <line:876:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfe58d0 <line:877:3, col:92> Text=" This API is used to set the priority of the current running task to a specified priority."
|   |-ParagraphComment 0xfe5950 <line:879:3>
|   | `-TextComment 0xfe5920 <col:3> Text=" "
|   |-BlockCommandComment 0xfe5970 <col:4, line:884:8> Name="attention"
|   | `-ParagraphComment 0xfe5ce0 <line:880:3, line:884:8>
|   |   |-TextComment 0xfe59a0 <line:880:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe59c0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfe5a00 <line:881:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe5a20 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe5a60 <col:8, col:89> Text="Changing the priority of the current running task probably causes task scheduling."
|   |   |-HTMLEndTagComment 0xfe5a80 <col:90, col:94> Name="li"
|   |   |-TextComment 0xfe5ab0 <line:882:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe5ad0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe5b10 <col:8, col:102> Text="Using the interface to change the priority of software timer task and idle task is not allowed."
|   |   |-HTMLEndTagComment 0xfe5b30 <col:103, col:107> Name="li"
|   |   |-TextComment 0xfe5b60 <line:883:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe5b80 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe5bc0 <col:8, col:59> Text="Using the interface in the interrupt is not allowed."
|   |   |-HTMLEndTagComment 0xfe5be0 <col:60, col:64> Name="li"
|   |   |-TextComment 0xfe5c10 <line:884:3> Text=" "
|   |   `-HTMLEndTagComment 0xfe5c30 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfe5d30 <line:886:3>
|   | `-TextComment 0xfe5d00 <col:3> Text=" "
|   |-ParamCommandComment 0xfe5d50 <col:4, col:52> [in] implicitly Param="taskPrio" ParamIndex=0
|   | `-ParagraphComment 0xfe5de0 <col:20, col:52>
|   |   `-TextComment 0xfe5db0 <col:20, col:52> Text=" [IN] Type #UINT16 Task priority."
|   |-ParagraphComment 0xfe5e30 <line:888:3>
|   | `-TextComment 0xfe5e00 <col:3> Text=" "
|   |-BlockCommandComment 0xfe5e50 <col:4, line:889:3> Name="retval"
|   | `-ParagraphComment 0xfe5ed0 <line:888:11, line:889:3>
|   |   |-TextComment 0xfe5e80 <line:888:11, col:96> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR     Incorrect task priority.Re-configure the task priority"
|   |   `-TextComment 0xfe5ea0 <line:889:3> Text=" "
|   |-BlockCommandComment 0xfe5ef0 <col:4, line:890:3> Name="retval"
|   | `-ParagraphComment 0xfe5f70 <line:889:11, line:890:3>
|   |   |-TextComment 0xfe5f20 <line:889:11, col:96> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE    Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0xfe5f40 <line:890:3> Text=" "
|   |-BlockCommandComment 0xfe5f90 <col:4, line:891:3> Name="retval"
|   | `-ParagraphComment 0xfe6010 <line:890:11, line:891:3>
|   |   |-TextComment 0xfe5fc0 <line:890:11, col:57> Text=" #LOS_ERRNO_TSK_ID_INVALID      Invalid Task ID"
|   |   `-TextComment 0xfe5fe0 <line:891:3> Text=" "
|   |-BlockCommandComment 0xfe6030 <col:4, line:892:3> Name="retval"
|   | `-ParagraphComment 0xfe60b0 <line:891:11, line:892:3>
|   |   |-TextComment 0xfe6060 <line:891:11, col:66> Text=" #LOS_ERRNO_TSK_NOT_CREATED     The task is not created."
|   |   `-TextComment 0xfe6080 <line:892:3> Text=" "
|   |-BlockCommandComment 0xfe60d0 <col:4, line:894:3> Name="retval"
|   | `-ParagraphComment 0xfe6180 <line:892:11, line:894:3>
|   |   |-TextComment 0xfe6100 <line:892:11, col:117> Text=" #LOS_OK                        The priority of the current running task is successfully set to a specified"
|   |   |-TextComment 0xfe6120 <line:893:3, col:51> Text="                                        priority."
|   |   `-TextComment 0xfe6140 <line:894:3> Text=" "
|   |-BlockCommandComment 0xfe61a0 <col:4, line:896:3> Name="par"
|   | `-ParagraphComment 0xfe6370 <line:894:8, line:896:3>
|   |   |-TextComment 0xfe61d0 <line:894:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfe61f0 <line:895:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe6210 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfe6250 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfe6290 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfe62b0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfe62e0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfe6310 <line:896:3> Text=" "
|   `-BlockCommandComment 0xfe6390 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xfe63f0 <col:8, col:22>
|       `-TextComment 0xfe63c0 <col:8, col:22> Text=" LOS_TaskPriGet"
|-FunctionDecl 0xf844b0 <line:924:1, col:33> col:15 LOS_TaskYield 'UINT32 (void)' extern
| `-FullComment 0xfe6ff0 <line:901:3, line:922:7>
|   |-ParagraphComment 0xfe6540 <line:901:3>
|   | `-TextComment 0xfe6510 <col:3> Text=" "
|   |-VerbatimLineComment 0xfe6560 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfe65d0 <line:902:3>
|   | `-TextComment 0xfe65a0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe65f0 <col:4, col:73> Name="brief"
|   | `-ParagraphComment 0xfe6650 <col:10, col:73>
|   |   `-TextComment 0xfe6620 <col:10, col:73> Text=" Change the scheduling sequence of tasks with the same priority."
|   |-ParagraphComment 0xfe66a0 <line:904:3>
|   | `-TextComment 0xfe6670 <col:3> Text=" "
|   |-BlockCommandComment 0xfe66c0 <col:4, line:906:9> Name="par"
|   | `-ParagraphComment 0xfe6770 <line:904:8, line:906:9>
|   |   |-TextComment 0xfe66f0 <line:904:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfe6710 <line:905:3, col:117> Text=" This API is used to move current task in a queue of tasks with the same priority to the tail of the queue of ready"
|   |   `-TextComment 0xfe6730 <line:906:3, col:9> Text=" tasks."
|   |-ParagraphComment 0xfe67d0 <line:908:3>
|   | `-TextComment 0xfe6790 <col:3> Text=" "
|   |-BlockCommandComment 0xfe67f0 <col:4, line:912:8> Name="attention"
|   | `-ParagraphComment 0xfe69e0 <line:909:3, line:912:8>
|   |   |-TextComment 0xfe6820 <line:909:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe6840 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfe6880 <line:910:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe68a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe68e0 <col:8, col:110> Text="At least two ready tasks need to be included in the queue of ready tasks with the same priority. If the"
|   |   |-TextComment 0xfe6900 <line:911:3, col:77> Text=" less than two ready tasks are included in the queue, an error is reported."
|   |   |-HTMLEndTagComment 0xfe6920 <col:78, col:82> Name="li"
|   |   |-TextComment 0xfe6950 <line:912:3> Text=" "
|   |   `-HTMLEndTagComment 0xfe6970 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfe6a30 <line:914:3>
|   | `-TextComment 0xfe6a00 <col:3> Text=" "
|   |-ParamCommandComment 0xfe6a50 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xfe6ab0 <<invalid sloc>>
|   |-ParagraphComment 0xfe6b00 <line:916:3>
|   | `-TextComment 0xfe6ad0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe6b20 <col:4, line:917:3> Name="retval"
|   | `-ParagraphComment 0xfe6ba0 <line:916:11, line:917:3>
|   |   |-TextComment 0xfe6b50 <line:916:11, col:71> Text=" #LOS_ERRNO_TSK_ID_INVALID                    Invalid Task ID"
|   |   `-TextComment 0xfe6b70 <line:917:3> Text=" "
|   |-BlockCommandComment 0xfe6bc0 <col:4, line:918:3> Name="retval"
|   | `-ParagraphComment 0xfe6c40 <line:917:11, line:918:3>
|   |   |-TextComment 0xfe6bf0 <line:917:11, col:116> Text=" #LOS_ERRNO_TSK_YIELD_NOT_ENOUGH_TASK         No tasks with the same priority is available for scheduling."
|   |   `-TextComment 0xfe6c10 <line:918:3> Text=" "
|   |-BlockCommandComment 0xfe6c60 <col:4, line:920:3> Name="retval"
|   | `-ParagraphComment 0xfe6d10 <line:918:11, line:920:3>
|   |   |-TextComment 0xfe6c90 <line:918:11, col:110> Text=" #LOS_OK                                      The scheduling sequence of tasks with same priority is"
|   |   |-TextComment 0xfe6cb0 <line:919:3, col:77> Text="                                                      successfully changed."
|   |   `-TextComment 0xfe6cd0 <line:920:3> Text=" "
|   |-BlockCommandComment 0xfe6d30 <col:4, line:922:3> Name="par"
|   | `-ParagraphComment 0xfe6f00 <line:920:8, line:922:3>
|   |   |-TextComment 0xfe6d60 <line:920:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfe6d80 <line:921:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe6da0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfe6de0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfe6e20 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfe6e40 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfe6e70 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfe6ea0 <line:922:3> Text=" "
|   `-BlockCommandComment 0xfe6f20 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfe6f50 <<invalid sloc>>
|-FunctionDecl 0xf84940 <line:943:1, col:43> col:15 LOS_TaskPriGet 'UINT16 (UINT32)' extern
| |-ParmVarDecl 0xf84588 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0xfe7930 <line:927:3, line:941:22>
|   |-ParagraphComment 0xfe7090 <line:927:3>
|   | `-TextComment 0xfe7060 <col:3> Text=" "
|   |-VerbatimLineComment 0xfe70b0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfe7120 <line:928:3>
|   | `-TextComment 0xfe70f0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe7140 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0xfe71a0 <col:10, col:33>
|   |   `-TextComment 0xfe7170 <col:10, col:33> Text=" Obtain a task priority."
|   |-ParagraphComment 0xfe71f0 <line:930:3>
|   | `-TextComment 0xfe71c0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe7210 <col:4, line:931:63> Name="par"
|   | `-ParagraphComment 0xfe7290 <line:930:8, line:931:63>
|   |   |-TextComment 0xfe7240 <line:930:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfe7260 <line:931:3, col:63> Text=" This API is used to obtain the priority of a specified task."
|   |-ParagraphComment 0xfe72e0 <line:933:3>
|   | `-TextComment 0xfe72b0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe7300 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xfe7360 <col:14, col:19>
|   |   `-TextComment 0xfe7330 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xfe73b0 <line:935:3>
|   | `-TextComment 0xfe7380 <col:3> Text=" "
|   |-ParamCommandComment 0xfe73d0 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xfe7460 <col:18, col:94>
|   |   `-TextComment 0xfe7430 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0xfe74b0 <line:937:3>
|   | `-TextComment 0xfe7480 <col:3> Text=" "
|   |-BlockCommandComment 0xfe74d0 <col:4, line:938:3> Name="retval"
|   | `-ParagraphComment 0xfe7550 <line:937:11, line:938:3>
|   |   |-TextComment 0xfe7500 <line:937:11, col:67> Text=" #OS_INVALID      The task priority fails to be obtained."
|   |   `-TextComment 0xfe7520 <line:938:3> Text=" "
|   |-BlockCommandComment 0xfe7570 <col:4, line:939:3> Name="retval"
|   | `-ParagraphComment 0xfe75f0 <line:938:11, line:939:3>
|   |   |-TextComment 0xfe75a0 <line:938:11, col:46> Text=" #UINT16          The task priority."
|   |   `-TextComment 0xfe75c0 <line:939:3> Text=" "
|   |-BlockCommandComment 0xfe7610 <col:4, line:941:3> Name="par"
|   | `-ParagraphComment 0xfe7810 <line:939:8, line:941:3>
|   |   |-TextComment 0xfe7640 <line:939:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfe7660 <line:940:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe7680 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfe76c0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfe7700 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfe7720 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfe7750 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfe7780 <line:941:3> Text=" "
|   `-BlockCommandComment 0xfe7830 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xfe7890 <col:8, col:22>
|       `-TextComment 0xfe7860 <col:8, col:22> Text=" LOS_TaskPriSet"
|-FunctionDecl 0xf84ab0 <line:963:1, col:36> col:15 LOS_CurTaskIDGet 'UINT32 (void)' extern
| `-FullComment 0xfe8270 <line:946:3, line:961:7>
|   |-ParagraphComment 0xfe79d0 <line:946:3>
|   | `-TextComment 0xfe79a0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfe79f0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfe7a60 <line:947:3>
|   | `-TextComment 0xfe7a30 <col:3> Text=" "
|   |-BlockCommandComment 0xfe7a80 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xfe7ae0 <col:10, col:41>
|   |   `-TextComment 0xfe7ab0 <col:10, col:41> Text=" Obtain current running task ID."
|   |-ParagraphComment 0xfe7b30 <line:949:3>
|   | `-TextComment 0xfe7b00 <col:3> Text=" "
|   |-BlockCommandComment 0xfe7b50 <col:4, line:950:61> Name="par"
|   | `-ParagraphComment 0xfe7bd0 <line:949:8, line:950:61>
|   |   |-TextComment 0xfe7b80 <line:949:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfe7ba0 <line:950:3, col:61> Text=" This API is used to obtain the ID of current running task."
|   |-ParagraphComment 0xfe7c20 <line:952:3>
|   | `-TextComment 0xfe7bf0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe7c40 <col:4, line:955:8> Name="attention"
|   | `-ParagraphComment 0xfe7e10 <line:953:3, line:955:8>
|   |   |-TextComment 0xfe7c70 <line:953:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe7c90 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfe7cd0 <line:954:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe7cf0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe7d30 <col:8, col:70> Text=" This interface should not be called before system initialized."
|   |   |-HTMLEndTagComment 0xfe7d50 <col:71, col:75> Name="li"
|   |   |-TextComment 0xfe7d80 <line:955:3> Text=" "
|   |   `-HTMLEndTagComment 0xfe7da0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfe7e60 <line:957:3>
|   | `-TextComment 0xfe7e30 <col:3> Text=" "
|   |-BlockCommandComment 0xfe7e80 <col:4, line:958:3> Name="retval"
|   | `-ParagraphComment 0xfe7f00 <line:957:11, line:958:3>
|   |   |-TextComment 0xfe7eb0 <line:957:11, col:56> Text=" #LOS_ERRNO_TSK_ID_INVALID    Invalid Task ID."
|   |   `-TextComment 0xfe7ed0 <line:958:3> Text=" "
|   |-BlockCommandComment 0xfe7f20 <col:4, line:959:3> Name="retval"
|   | `-ParagraphComment 0xfe7fa0 <line:958:11, line:959:3>
|   |   |-TextComment 0xfe7f50 <line:958:11, col:48> Text=" #UINT32                      Task ID."
|   |   `-TextComment 0xfe7f70 <line:959:3> Text=" "
|   |-BlockCommandComment 0xfe7fc0 <col:4, line:961:3> Name="par"
|   | `-ParagraphComment 0xfe8190 <line:959:8, line:961:3>
|   |   |-TextComment 0xfe7ff0 <line:959:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfe8010 <line:960:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe8030 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfe8070 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfe80b0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfe80d0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfe8100 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfe8130 <line:961:3> Text=" "
|   `-BlockCommandComment 0xfe81b0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfe81e0 <<invalid sloc>>
|-FunctionDecl 0xf84c10 <line:981:1, col:37> col:15 LOS_NextTaskIDGet 'UINT32 (void)' extern
| `-FullComment 0xfe8a60 <line:966:3, line:979:7>
|   |-ParagraphComment 0xfe8310 <line:966:3>
|   | `-TextComment 0xfe82e0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfe8330 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfe83a0 <line:967:3>
|   | `-TextComment 0xfe8370 <col:3> Text=" "
|   |-BlockCommandComment 0xfe83c0 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0xfe8420 <col:10, col:38>
|   |   `-TextComment 0xfe83f0 <col:10, col:38> Text=" Obtain next running task ID."
|   |-ParagraphComment 0xfe8470 <line:969:3>
|   | `-TextComment 0xfe8440 <col:3> Text=" "
|   |-BlockCommandComment 0xfe8490 <col:4, line:970:58> Name="par"
|   | `-ParagraphComment 0xfe8510 <line:969:8, line:970:58>
|   |   |-TextComment 0xfe84c0 <line:969:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfe84e0 <line:970:3, col:58> Text=" This API is used to obtain the ID of next running task."
|   |-ParagraphComment 0xfe8560 <line:972:3>
|   | `-TextComment 0xfe8530 <col:3> Text=" "
|   |-BlockCommandComment 0xfe8580 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xfe85e0 <col:14, col:19>
|   |   `-TextComment 0xfe85b0 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xfe8630 <line:975:3>
|   | `-TextComment 0xfe8600 <col:3> Text=" "
|   |-BlockCommandComment 0xfe8650 <col:4, line:976:3> Name="retval"
|   | `-ParagraphComment 0xfe86d0 <line:975:11, line:976:3>
|   |   |-TextComment 0xfe8680 <line:975:11, col:56> Text=" #LOS_ERRNO_TSK_ID_INVALID    invalid Task ID."
|   |   `-TextComment 0xfe86a0 <line:976:3> Text=" "
|   |-BlockCommandComment 0xfe86f0 <col:4, line:977:3> Name="retval"
|   | `-ParagraphComment 0xfe8770 <line:976:11, line:977:3>
|   |   |-TextComment 0xfe8720 <line:976:11, col:48> Text=" #UINT32                      task id."
|   |   `-TextComment 0xfe8740 <line:977:3> Text=" "
|   |-BlockCommandComment 0xfe8790 <col:4, line:979:3> Name="par"
|   | `-ParagraphComment 0xfe8980 <line:977:8, line:979:3>
|   |   |-TextComment 0xfe87e0 <line:977:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfe8800 <line:978:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe8820 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfe8860 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfe88a0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfe88c0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfe88f0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfe8920 <line:979:3> Text=" "
|   `-BlockCommandComment 0xfe89a0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfe89d0 <<invalid sloc>>
|-FunctionDecl 0xf84dc8 <line:999:1, col:37> col:14 LOS_CurTaskNameGet 'CHAR *(void)' extern
| `-FullComment 0xfe9230 <line:984:3, line:997:7>
|   |-ParagraphComment 0xfe8b00 <line:984:3>
|   | `-TextComment 0xfe8ad0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfe8b20 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfe8b90 <line:985:3>
|   | `-TextComment 0xfe8b60 <col:3> Text=" "
|   |-BlockCommandComment 0xfe8bb0 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0xfe8c10 <col:10, col:38>
|   |   `-TextComment 0xfe8be0 <col:10, col:38> Text=" Obtain next running task ID."
|   |-ParagraphComment 0xfe8c60 <line:987:3>
|   | `-TextComment 0xfe8c30 <col:3> Text=" "
|   |-BlockCommandComment 0xfe8c80 <col:4, line:988:58> Name="par"
|   | `-ParagraphComment 0xfe8d00 <line:987:8, line:988:58>
|   |   |-TextComment 0xfe8cb0 <line:987:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfe8cd0 <line:988:3, col:58> Text=" This API is used to obtain the ID of next running task."
|   |-ParagraphComment 0xfe8d50 <line:990:3>
|   | `-TextComment 0xfe8d20 <col:3> Text=" "
|   |-BlockCommandComment 0xfe8d70 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xfe8dd0 <col:14, col:19>
|   |   `-TextComment 0xfe8da0 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xfe8e20 <line:993:3>
|   | `-TextComment 0xfe8df0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe8e40 <col:4, line:994:3> Name="retval"
|   | `-ParagraphComment 0xfe8ec0 <line:993:11, line:994:3>
|   |   |-TextComment 0xfe8e70 <line:993:11, col:46> Text=" #NULL            invalid Task name."
|   |   `-TextComment 0xfe8e90 <line:994:3> Text=" "
|   |-BlockCommandComment 0xfe8ee0 <col:4, line:995:3> Name="retval"
|   | `-ParagraphComment 0xfe8f60 <line:994:11, line:995:3>
|   |   |-TextComment 0xfe8f10 <line:994:11, col:38> Text=" #CHAR*           task name."
|   |   `-TextComment 0xfe8f30 <line:995:3> Text=" "
|   |-BlockCommandComment 0xfe8f80 <col:4, line:997:3> Name="par"
|   | `-ParagraphComment 0xfe9150 <line:995:8, line:997:3>
|   |   |-TextComment 0xfe8fb0 <line:995:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfe8fd0 <line:996:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe8ff0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfe9030 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfe9070 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfe9090 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfe90c0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfe90f0 <line:997:3> Text=" "
|   `-BlockCommandComment 0xfe9170 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfe91a0 <<invalid sloc>>
|-FunctionDecl 0xf850a8 <line:1025:1, col:66> col:15 LOS_TaskInfoGet 'UINT32 (UINT32, TSK_INFO_S *)' extern
| |-ParmVarDecl 0xf84ea8 <col:31, col:38> col:38 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf84f98 <col:46, col:58> col:58 taskInfo 'TSK_INFO_S *'
| `-FullComment 0xfe9ed0 <line:1002:3, line:1023:7>
|   |-ParagraphComment 0xfe92d0 <line:1002:3>
|   | `-TextComment 0xfe92a0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfe92f0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfe9360 <line:1003:3>
|   | `-TextComment 0xfe9330 <col:3> Text=" "
|   |-BlockCommandComment 0xfe9380 <col:4, col:46> Name="brief"
|   | `-ParagraphComment 0xfe93e0 <col:10, col:46>
|   |   `-TextComment 0xfe93b0 <col:10, col:46> Text=" Obtain a task information structure."
|   |-ParagraphComment 0xfe9430 <line:1005:3>
|   | `-TextComment 0xfe9400 <col:3> Text=" "
|   |-BlockCommandComment 0xfe9450 <col:4, line:1006:59> Name="par"
|   | `-ParagraphComment 0xfe94d0 <line:1005:8, line:1006:59>
|   |   |-TextComment 0xfe9480 <line:1005:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfe94a0 <line:1006:3, col:59> Text=" This API is used to obtain a task information structure."
|   |-ParagraphComment 0xfe9520 <line:1008:3>
|   | `-TextComment 0xfe94f0 <col:3> Text=" "
|   |-BlockCommandComment 0xfe9540 <col:4, line:1012:8> Name="attention"
|   | `-ParagraphComment 0xfe9730 <line:1009:3, line:1012:8>
|   |   |-TextComment 0xfe9570 <line:1009:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe9590 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfe95d0 <line:1010:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe95f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfe9630 <col:8, col:111> Text="One parameter of this interface is a pointer, it should be a correct value, otherwise, the system may be"
|   |   |-TextComment 0xfe9650 <line:1011:3, col:12> Text=" abnormal."
|   |   |-HTMLEndTagComment 0xfe9670 <col:13, col:17> Name="li"
|   |   |-TextComment 0xfe96a0 <line:1012:3> Text=" "
|   |   `-HTMLEndTagComment 0xfe96c0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfe9780 <line:1014:3>
|   | `-TextComment 0xfe9750 <col:3> Text=" "
|   |-ParamCommandComment 0xfe97a0 <col:4, line:1015:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xfe9860 <line:1014:18, line:1015:3>
|   |   |-TextComment 0xfe9810 <line:1014:18, col:99> Text="    [IN]  Type  #UINT32 Task ID. The task id value is obtained from task creation."
|   |   `-TextComment 0xfe9830 <line:1015:3> Text=" "
|   |-ParamCommandComment 0xfe9880 <col:4, col:103> [in] implicitly Param="taskInfo" ParamIndex=1
|   | `-ParagraphComment 0xfe9910 <col:20, col:103>
|   |   `-TextComment 0xfe98e0 <col:20, col:103> Text="  [OUT] Type  #TSK_INFO_S* Pointer to the task information structure to be obtained."
|   |-ParagraphComment 0xfe9960 <line:1017:3>
|   | `-TextComment 0xfe9930 <col:3> Text=" "
|   |-BlockCommandComment 0xfe9980 <col:4, line:1018:3> Name="retval"
|   | `-ParagraphComment 0xfe9a00 <line:1017:11, line:1018:3>
|   |   |-TextComment 0xfe99b0 <line:1017:11, col:57> Text=" #LOS_ERRNO_TSK_PTR_NULL        Null parameter."
|   |   `-TextComment 0xfe99d0 <line:1018:3> Text=" "
|   |-BlockCommandComment 0xfe9a20 <col:4, line:1019:3> Name="retval"
|   | `-ParagraphComment 0xfe9aa0 <line:1018:11, line:1019:3>
|   |   |-TextComment 0xfe9a50 <line:1018:11, col:58> Text=" #LOS_ERRNO_TSK_ID_INVALID      Invalid task ID."
|   |   `-TextComment 0xfe9a70 <line:1019:3> Text=" "
|   |-BlockCommandComment 0xfe9ac0 <col:4, line:1020:3> Name="retval"
|   | `-ParagraphComment 0xfe9b40 <line:1019:11, line:1020:3>
|   |   |-TextComment 0xfe9af0 <line:1019:11, col:66> Text=" #LOS_ERRNO_TSK_NOT_CREATED     The task is not created."
|   |   `-TextComment 0xfe9b10 <line:1020:3> Text=" "
|   |-BlockCommandComment 0xfe9b60 <col:4, line:1021:3> Name="retval"
|   | `-ParagraphComment 0xfe9be0 <line:1020:11, line:1021:3>
|   |   |-TextComment 0xfe9b90 <line:1020:11, col:98> Text=" #LOS_OK                        The task information structure is successfully obtained."
|   |   `-TextComment 0xfe9bb0 <line:1021:3> Text=" "
|   |-BlockCommandComment 0xfe9c00 <col:4, line:1023:3> Name="par"
|   | `-ParagraphComment 0xfe9dd0 <line:1021:8, line:1023:3>
|   |   |-TextComment 0xfe9c30 <line:1021:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfe9c50 <line:1022:3> Text=" "
|   |   |-HTMLStartTagComment 0xfe9c70 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfe9cb0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfe9cf0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfe9d10 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfe9d40 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfe9d70 <line:1023:3> Text=" "
|   `-BlockCommandComment 0xfe9df0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfe9e20 <<invalid sloc>>
|-FunctionDecl 0xf85328 <line:1047:1, col:66> col:15 LOS_TaskStatusGet 'UINT32 (UINT32, UINT32 *)' extern
| |-ParmVarDecl 0xf85198 <col:33, col:40> col:40 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf85210 <col:48, col:56> col:56 taskStatus 'UINT32 *'
| `-FullComment 0xfea9e0 <line:1028:3, line:1045:7>
|   |-ParagraphComment 0xfe9f70 <line:1028:3>
|   | `-TextComment 0xfe9f40 <col:3> Text=" "
|   |-VerbatimLineComment 0xfe9f90 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfea000 <line:1029:3>
|   | `-TextComment 0xfe9fd0 <col:3> Text=" "
|   |-BlockCommandComment 0xfea020 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0xfea080 <col:10, col:33>
|   |   `-TextComment 0xfea050 <col:10, col:33> Text=" Obtain the task status."
|   |-ParagraphComment 0xfea0d0 <line:1031:3>
|   | `-TextComment 0xfea0a0 <col:3> Text=" "
|   |-BlockCommandComment 0xfea0f0 <col:4, line:1032:46> Name="par"
|   | `-ParagraphComment 0xfea170 <line:1031:8, line:1032:46>
|   |   |-TextComment 0xfea120 <line:1031:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfea140 <line:1032:3, col:46> Text=" This API is used to obtain the task status."
|   |-ParagraphComment 0xfea1c0 <line:1034:3>
|   | `-TextComment 0xfea190 <col:3> Text=" "
|   |-BlockCommandComment 0xfea1e0 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xfea240 <col:14, col:19>
|   |   `-TextComment 0xfea210 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xfea290 <line:1036:3>
|   | `-TextComment 0xfea260 <col:3> Text=" "
|   |-ParamCommandComment 0xfea2b0 <col:4, line:1037:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xfea360 <line:1036:18, line:1037:3>
|   |   |-TextComment 0xfea310 <line:1036:18, col:55> Text="     [IN] Type  #TSK_HANDLE_T Task ID."
|   |   `-TextComment 0xfea330 <line:1037:3> Text=" "
|   |-ParamCommandComment 0xfea380 <col:4, col:84> [in] implicitly Param="taskStatus" ParamIndex=1
|   | `-ParagraphComment 0xfea410 <col:22, col:84>
|   |   `-TextComment 0xfea3e0 <col:22, col:84> Text=" [OUT] Type  #UINT32 Pointer to the task status to be obtained."
|   |-ParagraphComment 0xfea460 <line:1039:3>
|   | `-TextComment 0xfea430 <col:3> Text=" "
|   |-BlockCommandComment 0xfea480 <col:4, line:1040:3> Name="retval"
|   | `-ParagraphComment 0xfea500 <line:1039:11, line:1040:3>
|   |   |-TextComment 0xfea4b0 <line:1039:11, col:81> Text=" #LOS_ERRNO_TSK_PTR_NULL                    0x02000201: Null parameter."
|   |   `-TextComment 0xfea4d0 <line:1040:3> Text=" "
|   |-BlockCommandComment 0xfea520 <col:4, line:1041:3> Name="retval"
|   | `-ParagraphComment 0xfea5a0 <line:1040:11, line:1041:3>
|   |   |-TextComment 0xfea550 <line:1040:11, col:82> Text=" #LOS_ERRNO_TSK_ID_INVALID                  0x02000207: Invalid task ID."
|   |   `-TextComment 0xfea570 <line:1041:3> Text=" "
|   |-BlockCommandComment 0xfea5c0 <col:4, line:1042:3> Name="retval"
|   | `-ParagraphComment 0xfea640 <line:1041:11, line:1042:3>
|   |   |-TextComment 0xfea5f0 <line:1041:11, col:90> Text=" #LOS_ERRNO_TSK_NOT_CREATED                 0x0200020a: The task is not created."
|   |   `-TextComment 0xfea610 <line:1042:3> Text=" "
|   |-BlockCommandComment 0xfea660 <col:4, line:1043:3> Name="retval"
|   | `-ParagraphComment 0xfea6e0 <line:1042:11, line:1043:3>
|   |   |-TextComment 0xfea690 <line:1042:11, col:112> Text=" #LOS_OK                                   0: The task information structure is successfully obtained."
|   |   `-TextComment 0xfea6b0 <line:1043:3> Text=" "
|   |-BlockCommandComment 0xfea700 <col:4, line:1045:3> Name="par"
|   | `-ParagraphComment 0xfea8e0 <line:1043:8, line:1045:3>
|   |   |-TextComment 0xfea730 <line:1043:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfea750 <line:1044:3> Text=" "
|   |   |-HTMLStartTagComment 0xfea770 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfea7b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfea800 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfea820 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfea850 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfea880 <line:1045:3> Text=" "
|   `-BlockCommandComment 0xfea900 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfea930 <<invalid sloc>>
|-FunctionDecl 0xf854a0 <line:1068:1, col:39> col:15 LOS_TaskInfoMonitor 'UINT32 (void)' extern
| `-FullComment 0xfeb400 <line:1050:3, line:1066:27>
|   |-ParagraphComment 0xfeaa80 <line:1050:3>
|   | `-TextComment 0xfeaa50 <col:3> Text=" "
|   |-VerbatimLineComment 0xfeaaa0 <col:4, col:24> Text=" los_monitor"
|   |-ParagraphComment 0xfeab10 <line:1051:3>
|   | `-TextComment 0xfeaae0 <col:3> Text=" "
|   |-BlockCommandComment 0xfeab30 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0xfeab90 <col:10, col:32>
|   |   `-TextComment 0xfeab60 <col:10, col:32> Text=" Obtain all tasks info."
|   |-ParagraphComment 0xfeabe0 <line:1053:3>
|   | `-TextComment 0xfeabb0 <col:3> Text=" "
|   |-BlockCommandComment 0xfeac00 <col:4, line:1055:3> Name="par"
|   | `-ParagraphComment 0xfeacb0 <line:1053:8, line:1055:3>
|   |   |-TextComment 0xfeac30 <line:1053:8, col:20> Text=" Description:"
|   |   |-TextComment 0xfeac50 <line:1054:3, col:45> Text=" This API is used to obtain all tasks info."
|   |   `-TextComment 0xfeac70 <line:1055:3> Text=" "
|   |-BlockCommandComment 0xfeacd0 <col:4, line:1058:8> Name="attention"
|   | `-ParagraphComment 0xfeaea0 <line:1056:3, line:1058:8>
|   |   |-TextComment 0xfead00 <line:1056:3> Text=" "
|   |   |-HTMLStartTagComment 0xfead20 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xfead60 <line:1057:3> Text=" "
|   |   |-HTMLStartTagComment 0xfead80 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfeadc0 <col:8, col:102> Text="This API can be called only after the CPU usage is initialized. Otherwise, -1 will be returned."
|   |   |-HTMLEndTagComment 0xfeade0 <col:103, col:107> Name="li"
|   |   |-TextComment 0xfeae10 <line:1058:3> Text=" "
|   |   `-HTMLEndTagComment 0xfeae30 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfeaef0 <line:1060:3>
|   | `-TextComment 0xfeaec0 <col:3> Text=" "
|   |-ParamCommandComment 0xfeaf10 <col:4, col:15> [in] implicitly Param="None."
|   | `-ParagraphComment 0xfeaf70 <<invalid sloc>>
|   |-ParagraphComment 0xfeafc0 <line:1062:3>
|   | `-TextComment 0xfeaf90 <col:3> Text=" "
|   |-BlockCommandComment 0xfeafe0 <col:4, line:1063:3> Name="retval"
|   | `-ParagraphComment 0xfeb060 <line:1062:11, line:1063:3>
|   |   |-TextComment 0xfeb010 <line:1062:11, col:63> Text=" #OS_ERROR           -1:all tasks info obtain failed."
|   |   `-TextComment 0xfeb030 <line:1063:3> Text=" "
|   |-BlockCommandComment 0xfeb080 <col:4, line:1064:3> Name="retval"
|   | `-ParagraphComment 0xfeb100 <line:1063:11, line:1064:3>
|   |   |-TextComment 0xfeb0b0 <line:1063:11, col:74> Text=" #LOS_OK              0:all tasks info is successfully obtained."
|   |   `-TextComment 0xfeb0d0 <line:1064:3> Text=" "
|   |-BlockCommandComment 0xfeb120 <col:4, line:1066:3> Name="par"
|   | `-ParagraphComment 0xfeb2f0 <line:1064:8, line:1066:3>
|   |   |-TextComment 0xfeb150 <line:1064:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfeb170 <line:1065:3> Text=" "
|   |   |-HTMLStartTagComment 0xfeb190 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfeb1d0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfeb210 <col:12, col:76> Text="los_monitor.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfeb230 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0xfeb260 <col:82, col:86> Name="ul"
|   |   `-TextComment 0xfeb290 <line:1066:3> Text=" "
|   `-BlockCommandComment 0xfeb310 <col:4, col:27> Name="see"
|     `-ParagraphComment 0xfeb370 <col:8, col:27>
|       `-TextComment 0xfeb340 <col:8, col:27> Text=" LOS_TaskInfoMonitor"
|-FunctionDecl 0xf85688 <line:1089:1, col:73> col:15 LOS_TaskSwitchInfoGet 'UINT32 (UINT32, UINT32 *)' extern
| |-ParmVarDecl 0xf85578 <col:37, col:44> col:44 index 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf855f0 <col:51, col:59> col:59 taskSwitchInfo 'UINT32 *'
| `-FullComment 0xfebe00 <line:1071:3, line:1087:7>
|   |-ParagraphComment 0xfeb4a0 <line:1071:3>
|   | `-TextComment 0xfeb470 <col:3> Text=" "
|   |-VerbatimLineComment 0xfeb4c0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfeb530 <line:1072:3>
|   | `-TextComment 0xfeb500 <col:3> Text=" "
|   |-BlockCommandComment 0xfeb550 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0xfeb5b0 <col:10, col:35>
|   |   `-TextComment 0xfeb580 <col:10, col:35> Text=" Obtain tasks switch info."
|   |-ParagraphComment 0xfeb600 <line:1074:3>
|   | `-TextComment 0xfeb5d0 <col:3> Text=" "
|   |-BlockCommandComment 0xfeb620 <col:4, line:1075:48> Name="par"
|   | `-ParagraphComment 0xfeb6a0 <line:1074:8, line:1075:48>
|   |   |-TextComment 0xfeb650 <line:1074:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfeb670 <line:1075:3, col:48> Text=" This API is used to obtain tasks switch info."
|   |-ParagraphComment 0xfeb6f0 <line:1077:3>
|   | `-TextComment 0xfeb6c0 <col:3> Text=" "
|   |-BlockCommandComment 0xfeb710 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xfeb770 <col:14, col:19>
|   |   `-TextComment 0xfeb740 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xfeb7c0 <line:1079:3>
|   | `-TextComment 0xfeb790 <col:3> Text=" "
|   |-ParamCommandComment 0xfeb810 <col:4, line:1080:3> [in] implicitly Param="index" ParamIndex=0
|   | `-ParagraphComment 0xfeb8c0 <line:1079:17, line:1080:3>
|   |   |-TextComment 0xfeb870 <line:1079:17, col:73> Text="            [IN]  Type  #UINT32  Switch info array index."
|   |   `-TextComment 0xfeb890 <line:1080:3> Text=" "
|   |-ParamCommandComment 0xfeb8e0 <col:4, line:1081:50> [in] implicitly Param="taskSwitchInfo" ParamIndex=1
|   | `-ParagraphComment 0xfeb990 <line:1080:26, line:1081:50>
|   |   |-TextComment 0xfeb940 <line:1080:26, col:109> Text="   [OUT] Type  #UINT32* First 4 bytes is task id, and then is task name, name len is"
|   |   `-TextComment 0xfeb960 <line:1081:3, col:50> Text="                                OS_TSK_NAME_LEN."
|   |-ParagraphComment 0xfeb9e0 <line:1083:3>
|   | `-TextComment 0xfeb9b0 <col:3> Text=" "
|   |-BlockCommandComment 0xfeba00 <col:4, line:1084:3> Name="retval"
|   | `-ParagraphComment 0xfeba80 <line:1083:11, line:1084:3>
|   |   |-TextComment 0xfeba30 <line:1083:11, col:72> Text=" #LOS_ERRNO_TSK_PTR_NULL           0x02000201: Null parameter."
|   |   `-TextComment 0xfeba50 <line:1084:3> Text=" "
|   |-BlockCommandComment 0xfebaa0 <col:4, line:1085:3> Name="retval"
|   | `-ParagraphComment 0xfebb20 <line:1084:11, line:1085:3>
|   |   |-TextComment 0xfebad0 <line:1084:11, col:101> Text=" #LOS_OK                           0: The task switch information is successfully obtained."
|   |   `-TextComment 0xfebaf0 <line:1085:3> Text=" "
|   |-BlockCommandComment 0xfebb40 <col:4, line:1087:3> Name="par"
|   | `-ParagraphComment 0xfebd10 <line:1085:8, line:1087:3>
|   |   |-TextComment 0xfebb70 <line:1085:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfebb90 <line:1086:3> Text=" "
|   |   |-HTMLStartTagComment 0xfebbb0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfebbf0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfebc30 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfebc50 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfebc80 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfebcb0 <line:1087:3> Text=" "
|   `-BlockCommandComment 0xfebd30 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfebd60 <<invalid sloc>>
|-FunctionDecl 0xf85828 <line:1108:1, col:35> col:13 LOS_TaskIsRunning 'BOOL (void)' extern
| `-FullComment 0xfec6b0 <line:1092:3, line:1106:7>
|   |-ParagraphComment 0xfebea0 <line:1092:3>
|   | `-TextComment 0xfebe70 <col:3> Text=" "
|   |-VerbatimLineComment 0xfebec0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfebf30 <line:1093:3>
|   | `-TextComment 0xfebf00 <col:3> Text=" "
|   |-BlockCommandComment 0xfebf50 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0xfebfb0 <col:10, col:38>
|   |   `-TextComment 0xfebf80 <col:10, col:38> Text=" Obtain tasks schduling info."
|   |-ParagraphComment 0xfec000 <line:1095:3>
|   | `-TextComment 0xfebfd0 <col:3> Text=" "
|   |-BlockCommandComment 0xfec020 <col:4, line:1096:48> Name="par"
|   | `-ParagraphComment 0xfec0a0 <line:1095:8, line:1096:48>
|   |   |-TextComment 0xfec050 <line:1095:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfec070 <line:1096:3, col:48> Text=" This API is used to obtain task is scheduled."
|   |-ParagraphComment 0xfec0f0 <line:1098:3>
|   | `-TextComment 0xfec0c0 <col:3> Text=" "
|   |-BlockCommandComment 0xfec110 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xfec170 <col:14, col:19>
|   |   `-TextComment 0xfec140 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xfec1c0 <line:1100:3>
|   | `-TextComment 0xfec190 <col:3> Text=" "
|   |-ParamCommandComment 0xfec1e0 <col:4, col:15> [in] implicitly Param="None."
|   | `-ParagraphComment 0xfec240 <<invalid sloc>>
|   |-ParagraphComment 0xfec290 <line:1102:3>
|   | `-TextComment 0xfec260 <col:3> Text=" "
|   |-BlockCommandComment 0xfec2b0 <col:4, line:1103:3> Name="retval"
|   | `-ParagraphComment 0xfec330 <line:1102:11, line:1103:3>
|   |   |-TextComment 0xfec2e0 <line:1102:11, col:44> Text=" #TRUE         Tasks is scheduled."
|   |   `-TextComment 0xfec300 <line:1103:3> Text=" "
|   |-BlockCommandComment 0xfec350 <col:4, line:1104:3> Name="retval"
|   | `-ParagraphComment 0xfec3d0 <line:1103:11, line:1104:3>
|   |   |-TextComment 0xfec380 <line:1103:11, col:50> Text=" #FALSE        Tasks not scheduling yet."
|   |   `-TextComment 0xfec3a0 <line:1104:3> Text=" "
|   |-BlockCommandComment 0xfec3f0 <col:4, line:1106:3> Name="par"
|   | `-ParagraphComment 0xfec5c0 <line:1104:8, line:1106:3>
|   |   |-TextComment 0xfec420 <line:1104:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfec440 <line:1105:3> Text=" "
|   |   |-HTMLStartTagComment 0xfec460 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfec4a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfec4e0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfec500 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfec530 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfec560 <line:1106:3> Text=" "
|   `-BlockCommandComment 0xfec5e0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfec610 <<invalid sloc>>
|-FunctionDecl 0xf869e8 <line:1126:1, col:37> col:16 LOS_NewTaskIDGet 'UINT32 (void)' extern
| `-FullComment 0xfecea0 <line:1111:3, line:1124:7>
|   |-ParagraphComment 0xfec750 <line:1111:3>
|   | `-TextComment 0xfec720 <col:3> Text=" "
|   |-VerbatimLineComment 0xfec770 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xfec7e0 <line:1112:3>
|   | `-TextComment 0xfec7b0 <col:3> Text=" "
|   |-BlockCommandComment 0xfec820 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0xfec880 <col:10, col:37>
|   |   `-TextComment 0xfec850 <col:10, col:37> Text=" Obtain current new task ID."
|   |-ParagraphComment 0xfec8d0 <line:1114:3>
|   | `-TextComment 0xfec8a0 <col:3> Text=" "
|   |-BlockCommandComment 0xfec8f0 <col:4, line:1115:49> Name="par"
|   | `-ParagraphComment 0xfec970 <line:1114:8, line:1115:49>
|   |   |-TextComment 0xfec920 <line:1114:8, col:20> Text=" Description:"
|   |   `-TextComment 0xfec940 <line:1115:3, col:49> Text=" This API is used to obtain the ID of new task."
|   |-ParagraphComment 0xfec9c0 <line:1117:3>
|   | `-TextComment 0xfec990 <col:3> Text=" "
|   |-BlockCommandComment 0xfec9e0 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xfeca40 <col:14, col:19>
|   |   `-TextComment 0xfeca10 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xfeca90 <line:1120:3>
|   | `-TextComment 0xfeca60 <col:3> Text=" "
|   |-BlockCommandComment 0xfecab0 <col:4, line:1121:3> Name="retval"
|   | `-ParagraphComment 0xfecb30 <line:1120:11, line:1121:3>
|   |   |-TextComment 0xfecae0 <line:1120:11, col:68> Text=" #LOS_ERRNO_TSK_ID_INVALID    0x02000207: invalid Task ID."
|   |   `-TextComment 0xfecb00 <line:1121:3> Text=" "
|   |-BlockCommandComment 0xfecb50 <col:4, line:1122:3> Name="retval"
|   | `-ParagraphComment 0xfecbd0 <line:1121:11, line:1122:3>
|   |   |-TextComment 0xfecb80 <line:1121:11, col:21> Text=" # Task ID."
|   |   `-TextComment 0xfecba0 <line:1122:3> Text=" "
|   |-BlockCommandComment 0xfecbf0 <col:4, line:1124:3> Name="par"
|   | `-ParagraphComment 0xfecdc0 <line:1122:8, line:1124:3>
|   |   |-TextComment 0xfecc20 <line:1122:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xfecc40 <line:1123:3> Text=" "
|   |   |-HTMLStartTagComment 0xfecc60 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xfecca0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xfecce0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfecd00 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xfecd30 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xfecd60 <line:1124:3> Text=" "
|   `-BlockCommandComment 0xfecde0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xfece10 <<invalid sloc>>
|-FunctionDecl 0xf86bb8 <line:1144:1, col:43> col:14 LOS_TaskNameGet 'CHAR *(UINT32)' extern
| |-ParmVarDecl 0xf86ac8 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0xfed780 <line:1128:4, line:1142:8>
|   |-ParagraphComment 0xfecf40 <line:1128:4>
|   | `-TextComment 0xfecf10 <col:4> Text=" "
|   |-VerbatimLineComment 0xfecf60 <col:5, col:23> Text="  los_task"
|   |-ParagraphComment 0xfecfd0 <line:1129:4>
|   | `-TextComment 0xfecfa0 <col:4> Text=" "
|   |-BlockCommandComment 0xfecff0 <col:5, col:32> Name="brief"
|   | `-ParagraphComment 0xfed050 <col:11, col:32>
|   |   `-TextComment 0xfed020 <col:11, col:32> Text=" Obtain the task name."
|   |-ParagraphComment 0xfed0a0 <line:1131:4>
|   | `-TextComment 0xfed070 <col:4> Text=" "
|   |-BlockCommandComment 0xfed0c0 <col:5, line:1132:45> Name="par"
|   | `-ParagraphComment 0xfed140 <line:1131:9, line:1132:45>
|   |   |-TextComment 0xfed0f0 <line:1131:9, col:21> Text=" Description:"
|   |   `-TextComment 0xfed110 <line:1132:4, col:45> Text=" This API is used to obtain the task name."
|   |-ParagraphComment 0xfed190 <line:1134:4>
|   | `-TextComment 0xfed160 <col:4> Text=" "
|   |-BlockCommandComment 0xfed1b0 <col:5, col:20> Name="attention"
|   | `-ParagraphComment 0xfed210 <col:15, col:20>
|   |   `-TextComment 0xfed1e0 <col:15, col:20> Text=" None."
|   |-ParagraphComment 0xfed260 <line:1136:4>
|   | `-TextComment 0xfed230 <col:4> Text=" "
|   |-ParamCommandComment 0xfed280 <col:5, col:44> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xfed310 <col:19, col:44>
|   |   `-TextComment 0xfed2e0 <col:19, col:44> Text="            [IN]  Task ID."
|   |-ParagraphComment 0xfed360 <line:1138:4>
|   | `-TextComment 0xfed330 <col:4> Text=" "
|   |-BlockCommandComment 0xfed380 <col:5, line:1139:4> Name="retval"
|   | `-ParagraphComment 0xfed400 <line:1138:12, line:1139:4>
|   |   |-TextComment 0xfed3b0 <line:1138:12, col:37> Text=" #NULL: invalid Task name."
|   |   `-TextComment 0xfed3d0 <line:1139:4> Text=" "
|   |-BlockCommandComment 0xfed420 <col:5, line:1140:4> Name="retval"
|   | `-ParagraphComment 0xfed4a0 <line:1139:12, line:1140:4>
|   |   |-TextComment 0xfed450 <line:1139:12, col:24> Text=" # Task name."
|   |   `-TextComment 0xfed470 <line:1140:4> Text=" "
|   |-BlockCommandComment 0xfed4c0 <col:5, line:1142:4> Name="par"
|   | `-ParagraphComment 0xfed690 <line:1140:9, line:1142:4>
|   |   |-TextComment 0xfed4f0 <line:1140:9, col:20> Text=" Dependency:"
|   |   |-TextComment 0xfed510 <line:1141:4> Text=" "
|   |   |-HTMLStartTagComment 0xfed530 <col:5, col:8> Name="ul"
|   |   |-HTMLStartTagComment 0xfed570 <col:9, col:12> Name="li"
|   |   |-TextComment 0xfed5b0 <col:13, col:74> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xfed5d0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xfed600 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xfed630 <line:1142:4> Text=" "
|   `-BlockCommandComment 0xfed6b0 <col:5, col:8> Name="see"
|     `-ParagraphComment 0xfed6e0 <<invalid sloc>>
|-FunctionDecl 0xf86db8 <line:1164:1, col:58> col:15 LOS_TaskJoin 'UINT32 (UINT32, UINTPTR *)' extern
| |-ParmVarDecl 0xf86c70 <col:28, col:35> col:35 taskID 'UINT32':'unsigned int'
| `-ParmVarDecl 0xf86ce8 <col:43, col:52> col:52 retval 'UINTPTR *'
|-FunctionDecl 0xf86f08 <line:1183:1, col:43> col:15 LOS_TaskDetach 'UINT32 (UINT32)' extern
| `-ParmVarDecl 0xf86e78 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
|-RecordDecl 0xf87638 <line:1465:9, line:1494:1> line:1465:9 struct definition
| |-FullComment 0xfed900 <line:1462:3, line:1463:43>
| | |-ParagraphComment 0xfed830 <line:1462:3>
| | | `-TextComment 0xfed7f0 <col:3> Text=" "
| | |-VerbatimLineComment 0xfed850 <col:4, col:21> Text=" los_task"
| | `-ParagraphComment 0xfed8c0 <line:1463:3, col:43>
| |   `-TextComment 0xfed890 <col:3, col:43> Text=" Define the task control block structure."
| |-FieldDecl 0xf876f8 <main/los_compiler.h:327:23, main/los_task.h:1466:34> col:34 stackPointer 'void *'
| | `-FullComment 0xfed9d0 <col:63, col:82>
| |   `-ParagraphComment 0xfed9a0 <col:63, col:82>
| |     `-TextComment 0xfed970 <col:63, col:82> Text=" Task stack pointer "
| |-FieldDecl 0xf87788 <line:1467:5, col:33> col:33 taskStatus 'UINT16':'unsigned short'
| |-FieldDecl 0xf877e8 <line:1468:5, col:33> col:33 priority 'UINT16':'unsigned short'
| |-FieldDecl 0xf87848 <line:1469:5, col:33> col:33 timeSlice 'INT32':'int'
| |-FieldDecl 0xf878a8 <line:1470:5, col:33> col:33 waitTimes 'UINT32':'unsigned int'
| |-FieldDecl 0xf87908 <line:1471:5, col:33> col:33 sortList 'SortLinkList':'SortLinkList'
| |-FieldDecl 0xf8c080 <line:1472:5, col:33> col:33 startTime 'UINT64':'unsigned long long'
| |-FieldDecl 0xf8c0e0 <line:1473:5, col:33> col:33 stackSize 'UINT32':'unsigned int'
| | `-FullComment 0xfedaa0 <col:63, col:79>
| |   `-ParagraphComment 0xfeda70 <col:63, col:79>
| |     `-TextComment 0xfeda40 <col:63, col:79> Text=" Task stack size "
| |-FieldDecl 0xf8c168 <line:1474:5, col:33> col:33 topOfStack 'UINT32':'unsigned int'
| | `-FullComment 0xfedb70 <col:63, col:78>
| |   `-ParagraphComment 0xfedb40 <col:63, col:78>
| |     `-TextComment 0xfedb10 <col:63, col:78> Text=" Task stack top "
| |-FieldDecl 0xf8c1f8 <line:1475:5, col:33> col:33 taskID 'UINT32':'unsigned int'
| | `-FullComment 0xfedc40 <col:63, col:71>
| |   `-ParagraphComment 0xfedc10 <col:63, col:71>
| |     `-TextComment 0xfedbe0 <col:63, col:71> Text=" Task ID "
| |-FieldDecl 0xf8c288 <line:1476:5, col:33> col:33 taskEntry 'TSK_ENTRY_FUNC':'void *(*)(UINT32)'
| | `-FullComment 0xfedd10 <col:63, col:86>
| |   `-ParagraphComment 0xfedce0 <col:63, col:86>
| |     `-TextComment 0xfedcb0 <col:63, col:86> Text=" Task entrance function "
| |-FieldDecl 0xf8c320 <main/los_compiler.h:327:23, main/los_task.h:1477:34> col:34 taskSem 'void *'
| | `-FullComment 0xfedde0 <col:63, col:83>
| |   `-ParagraphComment 0xfeddb0 <col:63, col:83>
| |     `-TextComment 0xfedd80 <col:63, col:83> Text=" Task-held semaphore "
| |-FieldDecl 0xf8c3b0 <main/los_compiler.h:327:23, main/los_task.h:1478:34> col:34 taskMux 'void *'
| | `-FullComment 0xfedeb0 <col:63, col:79>
| |   `-ParagraphComment 0xfede80 <col:63, col:79>
| |     `-TextComment 0xfede50 <col:63, col:79> Text=" Task-held mutex "
| |-FieldDecl 0xf8c438 <line:1479:5, col:33> col:33 arg 'UINT32':'unsigned int'
| | `-FullComment 0xfedf80 <col:63, col:73>
| |   `-ParagraphComment 0xfedf50 <col:63, col:73>
| |     `-TextComment 0xfedf20 <col:63, col:73> Text=" Parameter "
| |-FieldDecl 0xf8c4c8 <line:1480:5, col:34> col:34 taskName 'CHAR *'
| | `-FullComment 0xfee050 <col:63, col:73>
| |   `-ParagraphComment 0xfee020 <col:63, col:73>
| |     `-TextComment 0xfedff0 <col:63, col:73> Text=" Task name "
| |-FieldDecl 0xf8c558 <line:1481:5, col:33> col:33 pendList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| |-FieldDecl 0xf8c5b8 <line:1482:5, col:33> col:33 timerList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| |-FieldDecl 0xf8c618 <line:1483:5, col:33> col:33 joinList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| |-FieldDecl 0xf8c678 <line:1484:5, col:33> col:33 joinRetval 'UINTPTR':'unsigned int'
| | `-FullComment 0xfee120 <col:63, col:190>
| |   `-ParagraphComment 0xfee0f0 <col:63, col:190>
| |     `-TextComment 0xfee0c0 <col:63, col:190> Text=" Return value of the end of the task, If the task does not exit by itself, the ID of the task that killed the task is recorded. "
| |-FieldDecl 0xf8c708 <line:1485:5, col:33> col:33 event 'EVENT_CB_S':'struct tagEvent'
| |-FieldDecl 0xf8c768 <line:1486:5, col:33> col:33 eventMask 'UINT32':'unsigned int'
| | `-FullComment 0xfee1f0 <col:63, col:74>
| |   `-ParagraphComment 0xfee1c0 <col:63, col:74>
| |     `-TextComment 0xfee190 <col:63, col:74> Text=" Event mask "
| |-FieldDecl 0xf8c7f8 <line:1487:5, col:33> col:33 eventMode 'UINT32':'unsigned int'
| | `-FullComment 0xfee2c0 <col:63, col:74>
| |   `-ParagraphComment 0xfee290 <col:63, col:74>
| |     `-TextComment 0xfee260 <col:63, col:74> Text=" Event mode "
| |-FieldDecl 0xf8c890 <main/los_compiler.h:327:23, main/los_task.h:1488:34> col:34 msg 'void *'
| | `-FullComment 0xfee390 <col:63, col:90>
| |   `-ParagraphComment 0xfee360 <col:63, col:90>
| |     `-TextComment 0xfee330 <col:63, col:90> Text=" Memory allocated to queues "
| `-FieldDecl 0xf8c918 <line:1489:5, col:33> col:33 errorNo 'INT32':'int'
|-TypedefDecl 0xf8c9f8 <line:1465:1, line:1494:3> col:3 referenced LosTaskCB 'struct LosTaskCB':'LosTaskCB'
| |-ElaboratedType 0xf8c9a0 'struct LosTaskCB' sugar
| | `-RecordType 0xf876c0 'LosTaskCB'
| |   `-Record 0xf87638 ''
| `-FullComment 0xfee500 <line:1462:3, line:1463:43>
|   |-ParagraphComment 0xfee430 <line:1462:3>
|   | `-TextComment 0xfee400 <col:3> Text=" "
|   |-VerbatimLineComment 0xfee450 <col:4, col:21> Text=" los_task"
|   `-ParagraphComment 0xfee4c0 <line:1463:3, col:43>
|     `-TextComment 0xfee490 <col:3, col:43> Text=" Define the task control block structure."
|-RecordDecl 0xf8ca68 <line:1496:9, line:1499:1> line:1496:9 struct definition
| |-FieldDecl 0xf8cb98 <line:1497:5, col:18> col:18 referenced runTask 'LosTaskCB *'
| `-FieldDecl 0xf8cbf8 <line:1498:5, col:18> col:18 newTask 'LosTaskCB *'
|-TypedefDecl 0xf8cca8 <line:1496:1, line:1499:3> col:3 referenced LosTask 'struct LosTask':'LosTask'
| `-ElaboratedType 0xf8cc50 'struct LosTask' sugar
|   `-RecordType 0xf8caf0 'LosTask'
|     `-Record 0xf8ca68 ''
|-RecordDecl 0xf8cd18 <line:1501:9, line:1505:1> line:1501:9 struct definition
| |-FieldDecl 0xf8cdd0 <line:1502:5, col:18> col:18 sortLink 'LOS_DL_LIST *'
| |-FieldDecl 0xf8ce30 <line:1503:5, col:17> col:17 cursor 'UINT16':'unsigned short'
| `-FieldDecl 0xf8ce90 <line:1504:5, col:17> col:17 reserved 'UINT16':'unsigned short'
|-TypedefDecl 0xf8cf38 <line:1501:1, line:1505:3> col:3 TaskSortLinkAttr 'struct TaskSortLinkAttr':'TaskSortLinkAttr'
| `-ElaboratedType 0xf8cee0 'struct TaskSortLinkAttr' sugar
|   `-RecordType 0xf8cda0 'TaskSortLinkAttr'
|     `-Record 0xf8cd18 ''
|-RecordDecl 0xf8cfd0 <line:1511:9, line:1515:1> line:1511:16 struct TaskTimeSlice definition
| |-FullComment 0xfee670 <line:1508:3, line:1509:24>
| | |-ParagraphComment 0xfee5a0 <line:1508:3>
| | | `-TextComment 0xfee570 <col:3> Text=" "
| | |-VerbatimLineComment 0xfee5c0 <col:4, col:21> Text=" los_task"
| | `-ParagraphComment 0xfee630 <line:1509:3, col:24>
| |   `-TextComment 0xfee600 <col:3, col:24> Text=" Time slice structure."
| |-FieldDecl 0xf8d410 <line:1512:5, col:30> col:30 task 'LosTaskCB *'
| | `-FullComment 0xfee740 <col:63, col:84>
| |   `-ParagraphComment 0xfee710 <col:63, col:84>
| |     `-TextComment 0xfee6e0 <col:63, col:84> Text=" Current running task "
| |-FieldDecl 0xf8d498 <line:1513:5, col:29> col:29 time 'UINT16':'unsigned short'
| | `-FullComment 0xfef050 <col:63, col:85>
| |   `-ParagraphComment 0xfee7e0 <col:63, col:85>
| |     `-TextComment 0xfee7b0 <col:63, col:85> Text=" Expiration time point "
| `-FieldDecl 0xf8d528 <line:1514:5, col:29> col:29 tout 'UINT16':'unsigned short'
|   `-FullComment 0xfef120 <col:63, col:83>
|     `-ParagraphComment 0xfef0f0 <col:63, col:83>
|       `-TextComment 0xfef0c0 <col:63, col:83> Text=" Expiration duration "
|-TypedefDecl 0xf8d608 <line:1511:1, line:1515:3> col:3 OsTaskRobin 'struct TaskTimeSlice':'struct TaskTimeSlice'
| |-ElaboratedType 0xf8d5b0 'struct TaskTimeSlice' sugar
| | `-RecordType 0xf8d050 'struct TaskTimeSlice'
| |   `-Record 0xf8cfd0 'TaskTimeSlice'
| `-FullComment 0xfef290 <line:1508:3, line:1509:24>
|   |-ParagraphComment 0xfef1c0 <line:1508:3>
|   | `-TextComment 0xfef190 <col:3> Text=" "
|   |-VerbatimLineComment 0xfef1e0 <col:4, col:21> Text=" los_task"
|   `-ParagraphComment 0xfef250 <line:1509:3, col:24>
|     `-TextComment 0xfef220 <col:3, col:24> Text=" Time slice structure."
|-RecordDecl 0xf8d678 <line:1517:9, line:1520:1> line:1517:9 struct definition
| |-FieldDecl 0xf8d768 <line:1518:5, col:20> col:11 maxCnt 'UINT8':'unsigned char'
| | `-ConstantExpr 0xf8d750 <col:20> 'int'
| |   `-IntegerLiteral 0xf8d720 <col:20> 'int' 7
| `-FieldDecl 0xf8d800 <line:1519:5, col:20> col:11 isFull 'UINT8':'unsigned char'
|   `-ConstantExpr 0xf8d7e8 <col:20> 'int'
|     `-IntegerLiteral 0xf8d7b8 <col:20> 'int' 1
|-TypedefDecl 0xf8d8a8 <line:1517:1, line:1520:3> col:3 referenced TaskCountInfo 'struct TaskCountInfo':'TaskCountInfo'
| `-ElaboratedType 0xf8d850 'struct TaskCountInfo' sugar
|   `-RecordType 0xf8d700 'TaskCountInfo'
|     `-Record 0xf8d678 ''
|-RecordDecl 0xf8d940 <line:1527:9, line:1532:1> line:1527:9 struct definition
| |-FullComment 0xfef450 <line:1523:3, line:1526:1>
| | |-ParagraphComment 0xfef330 <line:1523:3>
| | | `-TextComment 0xfef300 <col:3> Text=" "
| | |-VerbatimLineComment 0xfef350 <col:4, col:21> Text=" los_task"
| | |-ParagraphComment 0xfef3c0 <line:1524:3, col:37>
| | | `-TextComment 0xfef390 <col:3, col:37> Text=" Task switch information structure."
| | `-ParagraphComment 0xfef410 <line:1526:1>
| |   `-TextComment 0xfef3e0 <col:1> Text=" "
| |-FieldDecl 0xf8d9f0 <line:1528:5, col:11> col:11 idx 'UINT8':'unsigned char'
| |-FieldDecl 0xf8da70 <line:1529:5, col:19> col:19 cntInfo 'TaskCountInfo':'TaskCountInfo'
| |-FieldDecl 0xf8db98 <line:1530:5, col:41> col:12 pid 'UINT16 [10]'
| `-FieldDecl 0xf8dd08 <line:1531:5, col:60> col:12 name 'CHAR [10][32]'
|-TypedefDecl 0xf8ddb8 <line:1527:1, line:1532:3> col:3 TaskSwitchInfo 'struct TaskSwitchInfo':'TaskSwitchInfo'
| |-ElaboratedType 0xf8dd60 'struct TaskSwitchInfo' sugar
| | `-RecordType 0xf8d9c0 'TaskSwitchInfo'
| |   `-Record 0xf8d940 ''
| `-FullComment 0xfef610 <line:1523:3, line:1526:1>
|   |-ParagraphComment 0xfef4f0 <line:1523:3>
|   | `-TextComment 0xfef4c0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfef510 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xfef580 <line:1524:3, col:37>
|   | `-TextComment 0xfef550 <col:3, col:37> Text=" Task switch information structure."
|   `-ParagraphComment 0xfef5d0 <line:1526:1>
|     `-TextComment 0xfef5a0 <col:1> Text=" "
|-VarDecl 0xf8de60 <line:1538:1, col:29> col:29 used g_losTask 'LosTask':'LosTask' extern
|-VarDecl 0xf8df08 <line:1545:1, col:29> col:29 g_losTaskLock 'UINT16':'unsigned short' extern
| `-FullComment 0xfef7d0 <line:1541:3, line:1544:1>
|   |-ParagraphComment 0xfef6b0 <line:1541:3>
|   | `-TextComment 0xfef680 <col:3> Text=" "
|   |-VerbatimLineComment 0xfef6d0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xfef740 <line:1542:3, col:18>
|   | `-TextComment 0xfef710 <col:3, col:18> Text=" Task lock flag."
|   `-ParagraphComment 0xfef790 <line:1544:1>
|     `-TextComment 0xfef760 <col:1> Text=" "
|-VarDecl 0xf8dfa8 <line:1558:1, col:29> col:29 g_taskMaxNum 'UINT32':'unsigned int' extern
| `-FullComment 0xfef990 <line:1554:3, line:1557:1>
|   |-ParagraphComment 0xfef870 <line:1554:3>
|   | `-TextComment 0xfef840 <col:3> Text=" "
|   |-VerbatimLineComment 0xfef890 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xfef900 <line:1555:3, col:27>
|   | `-TextComment 0xfef8d0 <col:3, col:27> Text=" Maximum number of tasks."
|   `-ParagraphComment 0xfef950 <line:1557:1>
|     `-TextComment 0xfef920 <col:1> Text=" "
|-VarDecl 0xf8e048 <line:1565:1, col:29> col:29 g_idleTaskID 'UINT32':'unsigned int' extern
| `-FullComment 0xfefb50 <line:1561:3, line:1564:1>
|   |-ParagraphComment 0xfefa30 <line:1561:3>
|   | `-TextComment 0xfefa00 <col:3> Text=" "
|   |-VerbatimLineComment 0xfefa50 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xfefac0 <line:1562:3, col:16>
|   | `-TextComment 0xfefa90 <col:3, col:16> Text=" Idle task ID."
|   `-ParagraphComment 0xfefb10 <line:1564:1>
|     `-TextComment 0xfefae0 <col:1> Text=" "
|-VarDecl 0xf8e0e8 <line:1572:1, col:29> col:29 g_swtmrTaskID 'UINT32':'unsigned int' extern
| `-FullComment 0xfefd10 <line:1568:3, line:1571:1>
|   |-ParagraphComment 0xfefbf0 <line:1568:3>
|   | `-TextComment 0xfefbc0 <col:3> Text=" "
|   |-VerbatimLineComment 0xfefc10 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xfefc80 <line:1569:3, col:26>
|   | `-TextComment 0xfefc50 <col:3, col:26> Text=" Software timer task ID."
|   `-ParagraphComment 0xfefcd0 <line:1571:1>
|     `-TextComment 0xfefca0 <col:1> Text=" "
|-VarDecl 0xf8e188 <line:1579:1, col:30> col:30 g_taskCBArray 'LosTaskCB *' extern
| `-FullComment 0xfefed0 <line:1575:3, line:1578:1>
|   |-ParagraphComment 0xfefdb0 <line:1575:3>
|   | `-TextComment 0xfefd80 <col:3> Text=" "
|   |-VerbatimLineComment 0xfefdd0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xfefe40 <line:1576:3, col:30>
|   | `-TextComment 0xfefe10 <col:3, col:30> Text=" Starting address of a task."
|   `-ParagraphComment 0xfefe90 <line:1578:1>
|     `-TextComment 0xfefe60 <col:1> Text=" "
|-VarDecl 0xf8e228 <line:1586:1, col:29> col:29 g_losFreeTask 'LOS_DL_LIST':'struct LOS_DL_LIST' extern
| `-FullComment 0xff00a0 <line:1582:3, line:1585:1>
|   |-ParagraphComment 0xfeff70 <line:1582:3>
|   | `-TextComment 0xfeff40 <col:3> Text=" "
|   |-VerbatimLineComment 0xfeff90 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xff0000 <line:1583:3, col:25>
|   | `-TextComment 0xfeffd0 <col:3, col:25> Text=" Free task linked list."
|   `-ParagraphComment 0xff0060 <line:1585:1>
|     `-TextComment 0xff0020 <col:1> Text=" "
|-VarDecl 0xf8e2c8 <line:1593:1, col:29> col:29 g_taskRecycleList 'LOS_DL_LIST':'struct LOS_DL_LIST' extern
| `-FullComment 0xff0260 <line:1589:3, line:1592:1>
|   |-ParagraphComment 0xff0140 <line:1589:3>
|   | `-TextComment 0xff0110 <col:3> Text=" "
|   |-VerbatimLineComment 0xff0160 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xff01d0 <line:1590:3, col:73>
|   | `-TextComment 0xff01a0 <col:3, col:73> Text=" Circular linked list that stores tasks that are deleted automatically."
|   `-ParagraphComment 0xff0220 <line:1592:1>
|     `-TextComment 0xff01f0 <col:1> Text=" "
|-FunctionDecl 0xf8e710 <line:1614:1, col:30> col:15 OsTaskInit 'UINT32 (void)' extern
| `-FullComment 0xff0bd0 <line:1596:3, line:1612:7>
|   |-ParagraphComment 0xff0300 <line:1596:3>
|   | `-TextComment 0xff02d0 <col:3> Text=" "
|   |-VerbatimLineComment 0xff0320 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xff0390 <line:1597:3>
|   | `-TextComment 0xff0360 <col:3> Text=" "
|   |-BlockCommandComment 0xff03b0 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0xff0410 <col:10, col:32>
|   |   `-TextComment 0xff03e0 <col:10, col:32> Text=" Initialization a task."
|   |-ParagraphComment 0xff0460 <line:1599:3>
|   | `-TextComment 0xff0430 <col:3> Text=" "
|   |-BlockCommandComment 0xff0480 <col:4, line:1600:45> Name="par"
|   | `-ParagraphComment 0xff0500 <line:1599:8, line:1600:45>
|   |   |-TextComment 0xff04b0 <line:1599:8, col:20> Text=" Description:"
|   |   `-TextComment 0xff04d0 <line:1600:3, col:45> Text=" This API is used to initialization a task."
|   |-ParagraphComment 0xff0550 <line:1602:3>
|   | `-TextComment 0xff0520 <col:3> Text=" "
|   |-BlockCommandComment 0xff0570 <col:4, line:1605:8> Name="attention"
|   | `-ParagraphComment 0xff0740 <line:1603:3, line:1605:8>
|   |   |-TextComment 0xff05a0 <line:1603:3> Text=" "
|   |   |-HTMLStartTagComment 0xff05c0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xff0600 <line:1604:3> Text=" "
|   |   |-HTMLStartTagComment 0xff0620 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff0660 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xff0680 <col:13, col:17> Name="li"
|   |   |-TextComment 0xff06b0 <line:1605:3> Text=" "
|   |   `-HTMLEndTagComment 0xff06d0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xff0790 <line:1607:3>
|   | `-TextComment 0xff0760 <col:3> Text=" "
|   |-ParamCommandComment 0xff07b0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xff0810 <<invalid sloc>>
|   |-ParagraphComment 0xff0860 <line:1609:3>
|   | `-TextComment 0xff0830 <col:3> Text=" "
|   |-BlockCommandComment 0xff0880 <col:4, line:1610:3> Name="retval"
|   | `-ParagraphComment 0xff0900 <line:1609:11, line:1610:3>
|   |   |-TextComment 0xff08b0 <line:1609:11, col:44> Text="  UINT32    Initialization result."
|   |   `-TextComment 0xff08d0 <line:1610:3> Text=" "
|   |-BlockCommandComment 0xff0920 <col:4, line:1612:3> Name="par"
|   | `-ParagraphComment 0xff0af0 <line:1610:8, line:1612:3>
|   |   |-TextComment 0xff0950 <line:1610:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xff0970 <line:1611:3> Text=" "
|   |   |-HTMLStartTagComment 0xff0990 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xff09d0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xff0a10 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xff0a30 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xff0a60 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xff0a90 <line:1612:3> Text=" "
|   `-BlockCommandComment 0xff0b10 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xff0b40 <<invalid sloc>>
|-FunctionDecl 0xf8e870 <line:1635:1, col:36> col:15 OsIdleTaskCreate 'UINT32 (void)' extern
| `-FullComment 0xff1570 <line:1617:3, line:1633:7>
|   |-ParagraphComment 0xff0c70 <line:1617:3>
|   | `-TextComment 0xff0c40 <col:3> Text=" "
|   |-VerbatimLineComment 0xff0c90 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xff0d00 <line:1618:3>
|   | `-TextComment 0xff0cd0 <col:3> Text=" "
|   |-BlockCommandComment 0xff0d20 <col:4, col:27> Name="brief"
|   | `-ParagraphComment 0xff0d80 <col:10, col:27>
|   |   `-TextComment 0xff0d50 <col:10, col:27> Text=" Create idle task."
|   |-ParagraphComment 0xff0dd0 <line:1620:3>
|   | `-TextComment 0xff0da0 <col:3> Text=" "
|   |-BlockCommandComment 0xff0df0 <col:4, line:1621:40> Name="par"
|   | `-ParagraphComment 0xff0e70 <line:1620:8, line:1621:40>
|   |   |-TextComment 0xff0e20 <line:1620:8, col:20> Text=" Description:"
|   |   `-TextComment 0xff0e40 <line:1621:3, col:40> Text=" This API is used to create idle task."
|   |-ParagraphComment 0xff0ec0 <line:1623:3>
|   | `-TextComment 0xff0e90 <col:3> Text=" "
|   |-BlockCommandComment 0xff0ee0 <col:4, line:1626:8> Name="attention"
|   | `-ParagraphComment 0xff10e0 <line:1624:3, line:1626:8>
|   |   |-TextComment 0xff0f10 <line:1624:3> Text=" "
|   |   |-HTMLStartTagComment 0xff0f30 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xff0f70 <line:1625:3> Text=" "
|   |   |-HTMLStartTagComment 0xff0f90 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff0fd0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xff0ff0 <col:13, col:17> Name="li"
|   |   |-TextComment 0xff1020 <line:1626:3> Text=" "
|   |   `-HTMLEndTagComment 0xff1070 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xff1130 <line:1628:3>
|   | `-TextComment 0xff1100 <col:3> Text=" "
|   |-ParamCommandComment 0xff1150 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xff11b0 <<invalid sloc>>
|   |-ParagraphComment 0xff1200 <line:1630:3>
|   | `-TextComment 0xff11d0 <col:3> Text=" "
|   |-BlockCommandComment 0xff1220 <col:4, line:1631:3> Name="retval"
|   | `-ParagraphComment 0xff12a0 <line:1630:11, line:1631:3>
|   |   |-TextComment 0xff1250 <line:1630:11, col:35> Text="  UINT32   Create result."
|   |   `-TextComment 0xff1270 <line:1631:3> Text=" "
|   |-BlockCommandComment 0xff12c0 <col:4, line:1633:3> Name="par"
|   | `-ParagraphComment 0xff1490 <line:1631:8, line:1633:3>
|   |   |-TextComment 0xff12f0 <line:1631:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xff1310 <line:1632:3> Text=" "
|   |   |-HTMLStartTagComment 0xff1330 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xff1370 <col:8, col:11> Name="li"
|   |   |-TextComment 0xff13b0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xff13d0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xff1400 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xff1430 <line:1633:3> Text=" "
|   `-BlockCommandComment 0xff14b0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xff14e0 <<invalid sloc>>
|-FunctionDecl 0xf8e9d0 <line:1656:1, col:35> col:13 OsTaskSwitchCheck 'void (void)' extern
| `-FullComment 0xff1ee0 <line:1638:3, line:1654:7>
|   |-ParagraphComment 0xff1610 <line:1638:3>
|   | `-TextComment 0xff15e0 <col:3> Text=" "
|   |-VerbatimLineComment 0xff1630 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xff16a0 <line:1639:3>
|   | `-TextComment 0xff1670 <col:3> Text=" "
|   |-BlockCommandComment 0xff16c0 <col:4, col:28> Name="brief"
|   | `-ParagraphComment 0xff1720 <col:10, col:28>
|   |   `-TextComment 0xff16f0 <col:10, col:28> Text=" Check task switch."
|   |-ParagraphComment 0xff1770 <line:1641:3>
|   | `-TextComment 0xff1740 <col:3> Text=" "
|   |-BlockCommandComment 0xff1790 <col:4, line:1642:41> Name="par"
|   | `-ParagraphComment 0xff1810 <line:1641:8, line:1642:41>
|   |   |-TextComment 0xff17c0 <line:1641:8, col:20> Text=" Description:"
|   |   `-TextComment 0xff17e0 <line:1642:3, col:41> Text=" This API is used to check task switch."
|   |-ParagraphComment 0xff1860 <line:1644:3>
|   | `-TextComment 0xff1830 <col:3> Text=" "
|   |-BlockCommandComment 0xff1880 <col:4, line:1647:8> Name="attention"
|   | `-ParagraphComment 0xff1a50 <line:1645:3, line:1647:8>
|   |   |-TextComment 0xff18b0 <line:1645:3> Text=" "
|   |   |-HTMLStartTagComment 0xff18d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xff1910 <line:1646:3> Text=" "
|   |   |-HTMLStartTagComment 0xff1930 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff1970 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xff1990 <col:13, col:17> Name="li"
|   |   |-TextComment 0xff19c0 <line:1647:3> Text=" "
|   |   `-HTMLEndTagComment 0xff19e0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xff1aa0 <line:1649:3>
|   | `-TextComment 0xff1a70 <col:3> Text=" "
|   |-ParamCommandComment 0xff1ac0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xff1b20 <<invalid sloc>>
|   |-ParagraphComment 0xff1b70 <line:1651:3>
|   | `-TextComment 0xff1b40 <col:3> Text=" "
|   |-BlockCommandComment 0xff1b90 <col:4, line:1652:3> Name="retval"
|   | `-ParagraphComment 0xff1c10 <line:1651:11, line:1652:3>
|   |   |-TextComment 0xff1bc0 <line:1651:11, col:17> Text="  None."
|   |   `-TextComment 0xff1be0 <line:1652:3> Text=" "
|   |-BlockCommandComment 0xff1c30 <col:4, line:1654:3> Name="par"
|   | `-ParagraphComment 0xff1e00 <line:1652:8, line:1654:3>
|   |   |-TextComment 0xff1c60 <line:1652:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xff1c80 <line:1653:3> Text=" "
|   |   |-HTMLStartTagComment 0xff1ca0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xff1ce0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xff1d20 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xff1d40 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xff1d70 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xff1da0 <line:1654:3> Text=" "
|   `-BlockCommandComment 0xff1e20 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xff1e50 <<invalid sloc>>
|-FunctionDecl 0xf8eb30 <line:1677:1, col:31> col:13 OsTaskMonInit 'void (void)' extern
| `-FullComment 0xff2870 <line:1659:3, line:1675:7>
|   |-ParagraphComment 0xff1f80 <line:1659:3>
|   | `-TextComment 0xff1f50 <col:3> Text=" "
|   |-VerbatimLineComment 0xff1fa0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xff2010 <line:1660:3>
|   | `-TextComment 0xff1fe0 <col:3> Text=" "
|   |-BlockCommandComment 0xff2030 <col:4, col:22> Name="brief"
|   | `-ParagraphComment 0xff20b0 <col:10, col:22>
|   |   `-TextComment 0xff2080 <col:10, col:22> Text=" TaskMonInit."
|   |-ParagraphComment 0xff2100 <line:1662:3>
|   | `-TextComment 0xff20d0 <col:3> Text=" "
|   |-BlockCommandComment 0xff2120 <col:4, line:1663:35> Name="par"
|   | `-ParagraphComment 0xff21a0 <line:1662:8, line:1663:35>
|   |   |-TextComment 0xff2150 <line:1662:8, col:20> Text=" Description:"
|   |   `-TextComment 0xff2170 <line:1663:3, col:35> Text=" This API is used to taskMonInit."
|   |-ParagraphComment 0xff21f0 <line:1665:3>
|   | `-TextComment 0xff21c0 <col:3> Text=" "
|   |-BlockCommandComment 0xff2210 <col:4, line:1668:8> Name="attention"
|   | `-ParagraphComment 0xff23e0 <line:1666:3, line:1668:8>
|   |   |-TextComment 0xff2240 <line:1666:3> Text=" "
|   |   |-HTMLStartTagComment 0xff2260 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xff22a0 <line:1667:3> Text=" "
|   |   |-HTMLStartTagComment 0xff22c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff2300 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xff2320 <col:13, col:17> Name="li"
|   |   |-TextComment 0xff2350 <line:1668:3> Text=" "
|   |   `-HTMLEndTagComment 0xff2370 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xff2430 <line:1670:3>
|   | `-TextComment 0xff2400 <col:3> Text=" "
|   |-ParamCommandComment 0xff2450 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xff24b0 <<invalid sloc>>
|   |-ParagraphComment 0xff2500 <line:1672:3>
|   | `-TextComment 0xff24d0 <col:3> Text=" "
|   |-BlockCommandComment 0xff2520 <col:4, line:1673:3> Name="retval"
|   | `-ParagraphComment 0xff25a0 <line:1672:11, line:1673:3>
|   |   |-TextComment 0xff2550 <line:1672:11, col:17> Text="  None."
|   |   `-TextComment 0xff2570 <line:1673:3> Text=" "
|   |-BlockCommandComment 0xff25c0 <col:4, line:1675:3> Name="par"
|   | `-ParagraphComment 0xff2790 <line:1673:8, line:1675:3>
|   |   |-TextComment 0xff25f0 <line:1673:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xff2610 <line:1674:3> Text=" "
|   |   |-HTMLStartTagComment 0xff2630 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xff2670 <col:8, col:11> Name="li"
|   |   |-TextComment 0xff26b0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xff26d0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xff2700 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xff2730 <line:1675:3> Text=" "
|   `-BlockCommandComment 0xff27b0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xff27e0 <<invalid sloc>>
|-FunctionDecl 0xf8ec98 <line:1698:1, col:38> col:13 OsTaskEntry 'void (UINT32)' extern
| |-ParmVarDecl 0xf8ec08 <col:25, col:32> col:32 taskID 'UINT32':'unsigned int'
| `-FullComment 0xff3230 <line:1680:3, line:1696:7>
|   |-ParagraphComment 0xff2910 <line:1680:3>
|   | `-TextComment 0xff28e0 <col:3> Text=" "
|   |-VerbatimLineComment 0xff2930 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xff29a0 <line:1681:3>
|   | `-TextComment 0xff2970 <col:3> Text=" "
|   |-BlockCommandComment 0xff29c0 <col:4, col:21> Name="brief"
|   | `-ParagraphComment 0xff2a20 <col:10, col:21>
|   |   `-TextComment 0xff29f0 <col:10, col:21> Text=" Task entry."
|   |-ParagraphComment 0xff2a70 <line:1683:3>
|   | `-TextComment 0xff2a40 <col:3> Text=" "
|   |-BlockCommandComment 0xff2a90 <col:4, line:1684:34> Name="par"
|   | `-ParagraphComment 0xff2b10 <line:1683:8, line:1684:34>
|   |   |-TextComment 0xff2ac0 <line:1683:8, col:20> Text=" Description:"
|   |   `-TextComment 0xff2ae0 <line:1684:3, col:34> Text=" This API is used to task entry."
|   |-ParagraphComment 0xff2b60 <line:1686:3>
|   | `-TextComment 0xff2b30 <col:3> Text=" "
|   |-BlockCommandComment 0xff2b80 <col:4, line:1689:8> Name="attention"
|   | `-ParagraphComment 0xff2d50 <line:1687:3, line:1689:8>
|   |   |-TextComment 0xff2bb0 <line:1687:3> Text=" "
|   |   |-HTMLStartTagComment 0xff2bd0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xff2c10 <line:1688:3> Text=" "
|   |   |-HTMLStartTagComment 0xff2c30 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff2c70 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xff2c90 <col:13, col:17> Name="li"
|   |   |-TextComment 0xff2cc0 <line:1689:3> Text=" "
|   |   `-HTMLEndTagComment 0xff2ce0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xff2da0 <line:1691:3>
|   | `-TextComment 0xff2d70 <col:3> Text=" "
|   |-ParamCommandComment 0xff2dc0 <col:4, col:47> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xff2e50 <col:18, col:47>
|   |   `-TextComment 0xff2e20 <col:18, col:47> Text="  [IN] Type #UINT32   task id."
|   |-ParagraphComment 0xff2ea0 <line:1693:3>
|   | `-TextComment 0xff2e70 <col:3> Text=" "
|   |-BlockCommandComment 0xff2ec0 <col:4, line:1694:3> Name="retval"
|   | `-ParagraphComment 0xff2f40 <line:1693:11, line:1694:3>
|   |   |-TextComment 0xff2ef0 <line:1693:11, col:17> Text="  None."
|   |   `-TextComment 0xff2f10 <line:1694:3> Text=" "
|   |-BlockCommandComment 0xff2f60 <col:4, line:1696:3> Name="par"
|   | `-ParagraphComment 0xff3150 <line:1694:8, line:1696:3>
|   |   |-TextComment 0xff2f90 <line:1694:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xff2fb0 <line:1695:3> Text=" "
|   |   |-HTMLStartTagComment 0xff2fd0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xff3010 <col:8, col:11> Name="li"
|   |   |-TextComment 0xff3050 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xff3090 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xff30c0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xff30f0 <line:1696:3> Text=" "
|   `-BlockCommandComment 0xff3170 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xff31a0 <<invalid sloc>>
|-FunctionDecl 0xf8ee08 <line:1719:1, col:47> col:15 OsGetTaskWaterLine 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xf8ed78 <col:34, col:41> col:41 taskID 'UINT32':'unsigned int'
| `-FullComment 0xff3c00 <line:1701:3, line:1717:13>
|   |-ParagraphComment 0xff32d0 <line:1701:3>
|   | `-TextComment 0xff32a0 <col:3> Text=" "
|   |-VerbatimLineComment 0xff32f0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xff3360 <line:1702:3>
|   | `-TextComment 0xff3330 <col:3> Text=" "
|   |-BlockCommandComment 0xff3380 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0xff33e0 <col:10, col:34>
|   |   `-TextComment 0xff33b0 <col:10, col:34> Text=" Get the task water line."
|   |-ParagraphComment 0xff3430 <line:1704:3>
|   | `-TextComment 0xff3400 <col:3> Text=" "
|   |-BlockCommandComment 0xff3450 <col:4, line:1705:47> Name="par"
|   | `-ParagraphComment 0xff34d0 <line:1704:8, line:1705:47>
|   |   |-TextComment 0xff3480 <line:1704:8, col:20> Text=" Description:"
|   |   `-TextComment 0xff34a0 <line:1705:3, col:47> Text=" This API is used to get the task water line."
|   |-ParagraphComment 0xff3520 <line:1707:3>
|   | `-TextComment 0xff34f0 <col:3> Text=" "
|   |-BlockCommandComment 0xff3540 <col:4, line:1710:8> Name="attention"
|   | `-ParagraphComment 0xff3710 <line:1708:3, line:1710:8>
|   |   |-TextComment 0xff3570 <line:1708:3> Text=" "
|   |   |-HTMLStartTagComment 0xff3590 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xff35d0 <line:1709:3> Text=" "
|   |   |-HTMLStartTagComment 0xff35f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff3630 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xff3650 <col:13, col:17> Name="li"
|   |   |-TextComment 0xff3680 <line:1710:3> Text=" "
|   |   `-HTMLEndTagComment 0xff36a0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xff3760 <line:1712:3>
|   | `-TextComment 0xff3730 <col:3> Text=" "
|   |-ParamCommandComment 0xff3780 <col:4, col:44> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xff3810 <col:18, col:44>
|   |   `-TextComment 0xff37e0 <col:18, col:44> Text=" [IN] Type #UINT32 task id."
|   |-ParagraphComment 0xff3860 <line:1714:3>
|   | `-TextComment 0xff3830 <col:3> Text=" "
|   |-BlockCommandComment 0xff3880 <col:4, line:1715:3> Name="retval"
|   | `-ParagraphComment 0xff3900 <line:1714:11, line:1715:3>
|   |   |-TextComment 0xff38b0 <line:1714:11, col:36> Text="  UINT32  Task water line."
|   |   `-TextComment 0xff38d0 <line:1715:3> Text=" "
|   |-BlockCommandComment 0xff3920 <col:4, line:1717:3> Name="par"
|   | `-ParagraphComment 0xff3af0 <line:1715:8, line:1717:3>
|   |   |-TextComment 0xff3950 <line:1715:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xff3970 <line:1716:3> Text=" "
|   |   |-HTMLStartTagComment 0xff3990 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xff39d0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xff3a10 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xff3a30 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xff3a60 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xff3a90 <line:1717:3> Text=" "
|   `-BlockCommandComment 0xff3b10 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xff3b70 <col:8, col:13>
|       `-TextComment 0xff3b40 <col:8, col:13> Text=" None."
|-FunctionDecl 0xf8efd8 <line:1740:1, col:51> col:15 OsConvertTskStatus 'UINT8 *(UINT16)' extern
| |-ParmVarDecl 0xf8eee8 <col:34, col:41> col:41 taskStatus 'UINT16':'unsigned short'
| `-FullComment 0xff4600 <line:1722:3, line:1738:13>
|   |-ParagraphComment 0xff3ca0 <line:1722:3>
|   | `-TextComment 0xff3c70 <col:3> Text=" "
|   |-VerbatimLineComment 0xff3cc0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xff3d30 <line:1723:3>
|   | `-TextComment 0xff3d00 <col:3> Text=" "
|   |-BlockCommandComment 0xff3d50 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0xff3db0 <col:10, col:40>
|   |   `-TextComment 0xff3d80 <col:10, col:40> Text=" Convert task status to string."
|   |-ParagraphComment 0xff3e00 <line:1725:3>
|   | `-TextComment 0xff3dd0 <col:3> Text=" "
|   |-BlockCommandComment 0xff3e20 <col:4, line:1726:53> Name="par"
|   | `-ParagraphComment 0xff3ea0 <line:1725:8, line:1726:53>
|   |   |-TextComment 0xff3e50 <line:1725:8, col:20> Text=" Description:"
|   |   `-TextComment 0xff3e70 <line:1726:3, col:53> Text=" This API is used to convert task status to string."
|   |-ParagraphComment 0xff3ef0 <line:1728:3>
|   | `-TextComment 0xff3ec0 <col:3> Text=" "
|   |-BlockCommandComment 0xff3f10 <col:4, line:1731:8> Name="attention"
|   | `-ParagraphComment 0xff4110 <line:1729:3, line:1731:8>
|   |   |-TextComment 0xff3f40 <line:1729:3> Text=" "
|   |   |-HTMLStartTagComment 0xff3f60 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xff3fa0 <line:1730:3> Text=" "
|   |   |-HTMLStartTagComment 0xff3fc0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff4000 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xff4020 <col:13, col:17> Name="li"
|   |   |-TextComment 0xff4050 <line:1731:3> Text=" "
|   |   `-HTMLEndTagComment 0xff40a0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xff4160 <line:1733:3>
|   | `-TextComment 0xff4130 <col:3> Text=" "
|   |-ParamCommandComment 0xff4180 <col:4, col:52> [in] implicitly Param="taskStatus" ParamIndex=0
|   | `-ParagraphComment 0xff4210 <col:22, col:52>
|   |   `-TextComment 0xff41e0 <col:22, col:52> Text=" [IN] Type #UINT16 task status."
|   |-ParagraphComment 0xff4260 <line:1735:3>
|   | `-TextComment 0xff4230 <col:3> Text=" "
|   |-BlockCommandComment 0xff4280 <col:4, line:1736:3> Name="retval"
|   | `-ParagraphComment 0xff4300 <line:1735:11, line:1736:3>
|   |   |-TextComment 0xff42b0 <line:1735:11, col:28> Text="  UINT8 *  String."
|   |   `-TextComment 0xff42d0 <line:1736:3> Text=" "
|   |-BlockCommandComment 0xff4320 <col:4, line:1738:3> Name="par"
|   | `-ParagraphComment 0xff44f0 <line:1736:8, line:1738:3>
|   |   |-TextComment 0xff4350 <line:1736:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xff4370 <line:1737:3> Text=" "
|   |   |-HTMLStartTagComment 0xff4390 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xff43d0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xff4410 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xff4430 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xff4460 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xff4490 <line:1738:3> Text=" "
|   `-BlockCommandComment 0xff4510 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xff4570 <col:8, col:13>
|       `-TextComment 0xff4540 <col:8, col:13> Text=" None."
|-FunctionDecl 0xf8f140 <line:1761:1, col:35> col:15 OsGetAllTskInfo 'UINT32 (void)' extern
| `-FullComment 0xff4fa0 <line:1743:3, line:1759:13>
|   |-ParagraphComment 0xff46a0 <line:1743:3>
|   | `-TextComment 0xff4670 <col:3> Text=" "
|   |-VerbatimLineComment 0xff46c0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xff4730 <line:1744:3>
|   | `-TextComment 0xff4700 <col:3> Text=" "
|   |-BlockCommandComment 0xff4750 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0xff47b0 <col:10, col:35>
|   |   `-TextComment 0xff4780 <col:10, col:35> Text=" Get all task information."
|   |-ParagraphComment 0xff4800 <line:1746:3>
|   | `-TextComment 0xff47d0 <col:3> Text=" "
|   |-BlockCommandComment 0xff4820 <col:4, line:1747:48> Name="par"
|   | `-ParagraphComment 0xff48a0 <line:1746:8, line:1747:48>
|   |   |-TextComment 0xff4850 <line:1746:8, col:20> Text=" Description:"
|   |   `-TextComment 0xff4870 <line:1747:3, col:48> Text=" This API is used to get all task information."
|   |-ParagraphComment 0xff48f0 <line:1749:3>
|   | `-TextComment 0xff48c0 <col:3> Text=" "
|   |-BlockCommandComment 0xff4910 <col:4, line:1752:8> Name="attention"
|   | `-ParagraphComment 0xff4ae0 <line:1750:3, line:1752:8>
|   |   |-TextComment 0xff4940 <line:1750:3> Text=" "
|   |   |-HTMLStartTagComment 0xff4960 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xff49a0 <line:1751:3> Text=" "
|   |   |-HTMLStartTagComment 0xff49c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff4a00 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xff4a20 <col:13, col:17> Name="li"
|   |   |-TextComment 0xff4a50 <line:1752:3> Text=" "
|   |   `-HTMLEndTagComment 0xff4a70 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xff4b30 <line:1754:3>
|   | `-TextComment 0xff4b00 <col:3> Text=" "
|   |-ParamCommandComment 0xff4b50 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xff4bb0 <<invalid sloc>>
|   |-ParagraphComment 0xff4c00 <line:1756:3>
|   | `-TextComment 0xff4bd0 <col:3> Text=" "
|   |-BlockCommandComment 0xff4c20 <col:4, line:1757:3> Name="retval"
|   | `-ParagraphComment 0xff4ca0 <line:1756:11, line:1757:3>
|   |   |-TextComment 0xff4c50 <line:1756:11, col:41> Text="  UINT32  All task information."
|   |   `-TextComment 0xff4c70 <line:1757:3> Text=" "
|   |-BlockCommandComment 0xff4cc0 <col:4, line:1759:3> Name="par"
|   | `-ParagraphComment 0xff4e90 <line:1757:8, line:1759:3>
|   |   |-TextComment 0xff4cf0 <line:1757:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xff4d10 <line:1758:3> Text=" "
|   |   |-HTMLStartTagComment 0xff4d30 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xff4d70 <col:8, col:11> Name="li"
|   |   |-TextComment 0xff4db0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xff4dd0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xff4e00 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xff4e30 <line:1759:3> Text=" "
|   `-BlockCommandComment 0xff4eb0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xff4f10 <col:8, col:13>
|       `-TextComment 0xff4ee0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xf8f420 <line:1763:1, col:83> col:14 OsTskUserStackInit 'void *(void *, void *, UINT32)' extern
| |-ParmVarDecl 0xf8f1f8 <main/los_compiler.h:327:23, main/los_task.h:1763:39> col:39 stackPtr 'void *'
| |-ParmVarDecl 0xf8f278 <main/los_compiler.h:327:23, main/los_task.h:1763:55> col:55 userSP 'void *'
| `-ParmVarDecl 0xf8f2f0 <col:63, col:70> col:70 userStackSize 'UINT32':'unsigned int'
|-FunctionDecl 0xf8f648 <line:1765:1, col:53> col:15 OsPmEnterHandlerSet 'UINT32 (void (*)(void))' extern
| `-ParmVarDecl 0xf8f580 <main/los_compiler.h:327:23, main/los_task.h:1765:52> col:42 func 'void (*)(void)'
|-FunctionDecl 0xf909d8 <main/los_compiler.h:158:22, main/los_task.h:1770:1> line:1767:26 OsCurrTaskGet 'LosTaskCB *(void)' static inline
| `-CompoundStmt 0xf90af0 <line:1768:1, line:1770:1>
|   `-ReturnStmt 0xf90ae0 <line:1769:5, col:22>
|     `-ImplicitCastExpr 0xf90ac8 <col:12, col:22> 'LosTaskCB *' <LValueToRValue>
|       `-MemberExpr 0xf90a98 <col:12, col:22> 'LosTaskCB *' lvalue .runTask 0xf8cb98
|         `-DeclRefExpr 0xf90a78 <col:12> 'LosTask':'LosTask' lvalue Var 0xf8de60 'g_losTask' 'LosTask':'LosTask'
|-FunctionDecl 0xf90ba0 <line:1772:1, col:36> col:13 LOS_TaskResRecycle 'void (void)' extern
|-FunctionDecl 0xf91008 <main/los_mux.h:207:1, col:46> col:15 LOS_MuxCreate 'UINT32 (UINT32 *)' extern
| |-ParmVarDecl 0xf90f18 <col:29, col:37> col:37 muxHandle 'UINT32 *'
| `-FullComment 0xff7310 <line:186:3, line:205:21>
|   |-ParagraphComment 0xff5040 <line:186:3>
|   | `-TextComment 0xff5010 <col:3> Text=" "
|   |-VerbatimLineComment 0xff5060 <col:4, col:20> Text=" los_mux"
|   |-ParagraphComment 0xff6900 <line:187:3>
|   | `-TextComment 0xff68d0 <col:3> Text=" "
|   |-BlockCommandComment 0xff6920 <col:4, col:25> Name="brief"
|   | `-ParagraphComment 0xff6980 <col:10, col:25>
|   |   `-TextComment 0xff6950 <col:10, col:25> Text=" Create a mutex."
|   |-ParagraphComment 0xff69d0 <line:189:3>
|   | `-TextComment 0xff69a0 <col:3> Text=" "
|   |-BlockCommandComment 0xff69f0 <col:4, line:192:3> Name="par"
|   | `-ParagraphComment 0xff6ac0 <line:189:8, line:192:3>
|   |   |-TextComment 0xff6a20 <line:189:8, col:20> Text=" Description:"
|   |   |-TextComment 0xff6a40 <line:190:3, col:118> Text=" This API is used to create a mutex. A mutex handle is assigned to muxHandle when the mutex is created successfully."
|   |   |-TextComment 0xff6a60 <line:191:3, col:78> Text=" Return LOS_OK on creating successful, return specific error code otherwise."
|   |   `-TextComment 0xff6a80 <line:192:3> Text=" "
|   |-BlockCommandComment 0xff6ae0 <col:4, line:195:8> Name="attention"
|   | `-ParagraphComment 0xff6cb0 <line:193:3, line:195:8>
|   |   |-TextComment 0xff6b10 <line:193:3> Text=" "
|   |   |-HTMLStartTagComment 0xff6b30 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xff6b70 <line:194:3> Text=" "
|   |   |-HTMLStartTagComment 0xff6b90 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff6bd0 <col:8, col:114> Text="The total number of mutexes is pre-configured. If there are no available mutexes, the mutex creation fails."
|   |   |-HTMLEndTagComment 0xff6bf0 <col:115, col:119> Name="li"
|   |   |-TextComment 0xff6c20 <line:195:3> Text=" "
|   |   `-HTMLEndTagComment 0xff6c40 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xff6d00 <line:197:3>
|   | `-TextComment 0xff6cd0 <col:3> Text=" "
|   |-ParamCommandComment 0xff6d20 <col:4, line:198:38> [in] implicitly Param="muxHandle" ParamIndex=0
|   | `-ParagraphComment 0xff6dd0 <line:197:20, line:198:38>
|   |   |-TextComment 0xff6d80 <line:197:20, col:110> Text="   [OUT] Handle pointer of the successfully created mutex. The value of handle should be in"
|   |   `-TextComment 0xff6da0 <line:198:3, col:38> Text=" [0, LOSCFG_BASE_IPC_MUX_LIMIT - 1]."
|   |-ParagraphComment 0xff6e20 <line:200:3>
|   | `-TextComment 0xff6df0 <col:3> Text=" "
|   |-BlockCommandComment 0xff6e40 <col:4, line:201:3> Name="retval"
|   | `-ParagraphComment 0xff6ec0 <line:200:11, line:201:3>
|   |   |-TextComment 0xff6e70 <line:200:11, col:75> Text=" #LOS_ERRNO_MUX_PTR_NULL           The muxHandle pointer is NULL."
|   |   `-TextComment 0xff6e90 <line:201:3> Text=" "
|   |-BlockCommandComment 0xff6ee0 <col:4, line:202:3> Name="retval"
|   | `-ParagraphComment 0xff6f60 <line:201:11, line:202:3>
|   |   |-TextComment 0xff6f10 <line:201:11, col:64> Text=" #LOS_ERRNO_MUX_ALL_BUSY           No available mutex."
|   |   `-TextComment 0xff6f30 <line:202:3> Text=" "
|   |-BlockCommandComment 0xff6f80 <col:4, line:203:3> Name="retval"
|   | `-ParagraphComment 0xff7000 <line:202:11, line:203:3>
|   |   |-TextComment 0xff6fb0 <line:202:11, col:79> Text=" #LOS_OK                           The mutex is successfully created."
|   |   `-TextComment 0xff6fd0 <line:203:3> Text=" "
|   |-BlockCommandComment 0xff7020 <col:4, line:205:3> Name="par"
|   | `-ParagraphComment 0xff71f0 <line:203:8, line:205:3>
|   |   |-TextComment 0xff7050 <line:203:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xff7070 <line:204:3> Text=" "
|   |   |-HTMLStartTagComment 0xff7090 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xff70d0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xff7110 <col:12, col:72> Text="los_mux.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xff7130 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0xff7160 <col:78, col:82> Name="ul"
|   |   `-TextComment 0xff7190 <line:205:3> Text=" "
|   `-BlockCommandComment 0xff7210 <col:4, col:21> Name="see"
|     `-ParagraphComment 0xff7270 <col:8, col:21>
|       `-TextComment 0xff7240 <col:8, col:21> Text=" LOS_MuxDelete"
|-FunctionDecl 0xf91178 <line:232:1, col:45> col:15 LOS_MuxDelete 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xf910e8 <col:29, col:36> col:36 muxHandle 'UINT32':'unsigned int'
| `-FullComment 0xff7f40 <line:210:3, line:230:21>
|   |-ParagraphComment 0xff73b0 <line:210:3>
|   | `-TextComment 0xff7380 <col:3> Text=" "
|   |-VerbatimLineComment 0xff73d0 <col:4, col:20> Text=" los_mux"
|   |-ParagraphComment 0xff7440 <line:211:3>
|   | `-TextComment 0xff7410 <col:3> Text=" "
|   |-BlockCommandComment 0xff7460 <col:4, col:25> Name="brief"
|   | `-ParagraphComment 0xff74c0 <col:10, col:25>
|   |   `-TextComment 0xff7490 <col:10, col:25> Text=" Delete a mutex."
|   |-ParagraphComment 0xff7510 <line:213:3>
|   | `-TextComment 0xff74e0 <col:3> Text=" "
|   |-BlockCommandComment 0xff7530 <col:4, line:216:3> Name="par"
|   | `-ParagraphComment 0xff7600 <line:213:8, line:216:3>
|   |   |-TextComment 0xff7560 <line:213:8, col:20> Text=" Description:"
|   |   |-TextComment 0xff7580 <line:214:3, col:115> Text=" This API is used to delete a specified mutex. Return LOS_OK on deleting successfully, return specific error code"
|   |   |-TextComment 0xff75a0 <line:215:3, col:13> Text=" otherwise."
|   |   `-TextComment 0xff75c0 <line:216:3> Text=" "
|   |-BlockCommandComment 0xff7620 <col:4, line:220:8> Name="attention"
|   | `-ParagraphComment 0xff78e0 <line:217:3, line:220:8>
|   |   |-TextComment 0xff7650 <line:217:3> Text=" "
|   |   |-HTMLStartTagComment 0xff7670 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xff76b0 <line:218:3> Text=" "
|   |   |-HTMLStartTagComment 0xff76d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff7710 <col:8, col:52> Text="The specific mutex should be created firstly."
|   |   |-HTMLEndTagComment 0xff7730 <col:53, col:57> Name="li"
|   |   |-TextComment 0xff7760 <line:219:3> Text=" "
|   |   |-HTMLStartTagComment 0xff7780 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff77c0 <col:8, col:79> Text="The mutex can be deleted successfully only if no other tasks pend on it."
|   |   |-HTMLEndTagComment 0xff77e0 <col:80, col:84> Name="li"
|   |   |-TextComment 0xff7810 <line:220:3> Text=" "
|   |   `-HTMLEndTagComment 0xff7830 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xff7930 <line:222:3>
|   | `-TextComment 0xff7900 <col:3> Text=" "
|   |-ParamCommandComment 0xff7950 <col:4, line:223:38> [in] implicitly Param="muxHandle" ParamIndex=0
|   | `-ParagraphComment 0xff7a00 <line:222:20, line:223:38>
|   |   |-TextComment 0xff79b0 <line:222:20, col:94> Text="   [IN] Handle of the mutex to be deleted. The value of handle should be in"
|   |   `-TextComment 0xff79d0 <line:223:3, col:38> Text=" [0, LOSCFG_BASE_IPC_MUX_LIMIT - 1]."
|   |-ParagraphComment 0xff7a50 <line:225:3>
|   | `-TextComment 0xff7a20 <col:3> Text=" "
|   |-BlockCommandComment 0xff7a70 <col:4, line:226:3> Name="retval"
|   | `-ParagraphComment 0xff7af0 <line:225:11, line:226:3>
|   |   |-TextComment 0xff7aa0 <line:225:11, col:76> Text=" #LOS_ERRNO_MUX_INVALID            Invalid handle or mutex in use."
|   |   `-TextComment 0xff7ac0 <line:226:3> Text=" "
|   |-BlockCommandComment 0xff7b10 <col:4, line:227:3> Name="retval"
|   | `-ParagraphComment 0xff7b90 <line:226:11, line:227:3>
|   |   |-TextComment 0xff7b40 <line:226:11, col:72> Text=" #LOS_ERRNO_MUX_PENDED             Tasks pended on this mutex."
|   |   `-TextComment 0xff7b60 <line:227:3> Text=" "
|   |-BlockCommandComment 0xff7bb0 <col:4, line:228:3> Name="retval"
|   | `-ParagraphComment 0xff7c30 <line:227:11, line:228:3>
|   |   |-TextComment 0xff7be0 <line:227:11, col:79> Text=" #LOS_OK                           The mutex is successfully deleted."
|   |   `-TextComment 0xff7c00 <line:228:3> Text=" "
|   |-BlockCommandComment 0xff7c50 <col:4, line:230:3> Name="par"
|   | `-ParagraphComment 0xff7e20 <line:228:8, line:230:3>
|   |   |-TextComment 0xff7c80 <line:228:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xff7ca0 <line:229:3> Text=" "
|   |   |-HTMLStartTagComment 0xff7cc0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xff7d00 <col:8, col:11> Name="li"
|   |   |-TextComment 0xff7d40 <col:12, col:72> Text="los_mux.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xff7d60 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0xff7d90 <col:78, col:82> Name="ul"
|   |   `-TextComment 0xff7dc0 <line:230:3> Text=" "
|   `-BlockCommandComment 0xff7e40 <col:4, col:21> Name="see"
|     `-ParagraphComment 0xff7ea0 <col:8, col:21>
|       `-TextComment 0xff7e70 <col:8, col:21> Text=" LOS_MuxCreate"
|-FunctionDecl 0xf91368 <line:267:1, col:59> col:15 LOS_MuxPend 'UINT32 (UINT32, UINT32)' extern
| |-ParmVarDecl 0xf91258 <col:27, col:34> col:34 muxHandle 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf912d0 <col:45, col:52> col:52 timeout 'UINT32':'unsigned int'
| `-FullComment 0xff9140 <line:235:3, line:265:35>
|   |-ParagraphComment 0xff7fe0 <line:235:3>
|   | `-TextComment 0xff7fb0 <col:3> Text=" "
|   |-VerbatimLineComment 0xff8000 <col:4, col:20> Text=" los_mux"
|   |-ParagraphComment 0xff8070 <line:236:3>
|   | `-TextComment 0xff8040 <col:3> Text=" "
|   |-BlockCommandComment 0xff8090 <col:4, col:31> Name="brief"
|   | `-ParagraphComment 0xff80f0 <col:10, col:31>
|   |   `-TextComment 0xff80c0 <col:10, col:31> Text=" Wait to lock a mutex."
|   |-ParagraphComment 0xff8140 <line:238:3>
|   | `-TextComment 0xff8110 <col:3> Text=" "
|   |-BlockCommandComment 0xff8160 <col:4, line:240:3> Name="par"
|   | `-ParagraphComment 0xff8210 <line:238:8, line:240:3>
|   |   |-TextComment 0xff8190 <line:238:8, col:20> Text=" Description:"
|   |   |-TextComment 0xff81b0 <line:239:3, col:75> Text=" This API is used to wait for a specified period of time to lock a mutex."
|   |   `-TextComment 0xff81d0 <line:240:3> Text=" "
|   |-BlockCommandComment 0xff8230 <col:4, line:249:8> Name="attention"
|   | `-ParagraphComment 0xff8790 <line:241:3, line:249:8>
|   |   |-TextComment 0xff8260 <line:241:3> Text=" "
|   |   |-HTMLStartTagComment 0xff8280 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xff82c0 <line:242:3> Text=" "
|   |   |-HTMLStartTagComment 0xff82e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff8320 <col:8, col:52> Text="The specific mutex should be created firstly."
|   |   |-HTMLEndTagComment 0xff8340 <col:53, col:57> Name="li"
|   |   |-TextComment 0xff8370 <line:243:3> Text=" "
|   |   |-HTMLStartTagComment 0xff8390 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff83d0 <col:8, col:117> Text="The function fails if the mutex that is waited on is already locked by another thread when the task scheduling"
|   |   |-TextComment 0xff83f0 <line:244:3, col:15> Text=" is disabled."
|   |   |-HTMLEndTagComment 0xff8410 <col:16, col:20> Name="li"
|   |   |-TextComment 0xff8440 <line:245:3> Text=" "
|   |   |-HTMLStartTagComment 0xff8460 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff84a0 <col:8, col:50> Text="Do not wait on a mutex during an interrupt."
|   |   |-HTMLEndTagComment 0xff84c0 <col:51, col:55> Name="li"
|   |   |-TextComment 0xff84f0 <line:246:3> Text=" "
|   |   |-HTMLStartTagComment 0xff8510 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff8550 <col:8, col:116> Text="The priority inheritance protocol is supported. If a higher-priority thread is waiting on a mutex, it changes"
|   |   |-TextComment 0xff8570 <line:247:3, col:78> Text=" the priority of the thread that owns the mutex to avoid priority inversion."
|   |   |-HTMLEndTagComment 0xff8590 <col:79, col:83> Name="li"
|   |   |-TextComment 0xff85c0 <line:248:3> Text=" "
|   |   |-HTMLStartTagComment 0xff85e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff8620 <col:8, col:73> Text="A recursive mutex can be locked more than once by the same thread."
|   |   |-HTMLEndTagComment 0xff8640 <col:74, col:78> Name="li"
|   |   |-TextComment 0xff8670 <line:249:3> Text=" "
|   |   `-HTMLEndTagComment 0xff8690 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xff87e0 <line:251:3>
|   | `-TextComment 0xff87b0 <col:3> Text=" "
|   |-ParamCommandComment 0xff8800 <col:4, line:253:3> [in] implicitly Param="muxHandle" ParamIndex=0
|   | `-ParagraphComment 0xff88f0 <line:251:20, line:253:3>
|   |   |-TextComment 0xff8860 <line:251:20, col:95> Text="    [IN] Handle of the mutex to be waited on.  The value of handle should be"
|   |   |-TextComment 0xff8880 <line:252:3, col:41> Text=" in [0, LOSCFG_BASE_IPC_MUX_LIMIT - 1]."
|   |   `-TextComment 0xff88a0 <line:253:3> Text=" "
|   |-ParamCommandComment 0xff8910 <col:4, col:95> [in] implicitly Param="timeout" ParamIndex=1
|   | `-ParagraphComment 0xff89a0 <col:18, col:95>
|   |   `-TextComment 0xff8970 <col:18, col:95> Text="      [IN] Waiting time. The value range is [0, LOS_WAIT_FOREVER](unit: Tick)."
|   |-ParagraphComment 0xff89f0 <line:255:3>
|   | `-TextComment 0xff89c0 <col:3> Text=" "
|   |-BlockCommandComment 0xff8a10 <col:4, line:257:3> Name="retval"
|   | `-ParagraphComment 0xff8ac0 <line:255:11, line:257:3>
|   |   |-TextComment 0xff8a40 <line:255:11, col:117> Text=" #LOS_ERRNO_MUX_INVALID            The mutex state (for example, the mutex does not exist or is not in use)"
|   |   |-TextComment 0xff8a60 <line:256:3, col:89> Text="                                           is not applicable for the current operation."
|   |   `-TextComment 0xff8a80 <line:257:3> Text=" "
|   |-BlockCommandComment 0xff8ae0 <col:4, line:259:3> Name="retval"
|   | `-ParagraphComment 0xff8b90 <line:257:11, line:259:3>
|   |   |-TextComment 0xff8b10 <line:257:11, col:116> Text=" #LOS_ERRNO_MUX_UNAVAILABLE        The mutex fails to be locked because it is locked by another thread and"
|   |   |-TextComment 0xff8b30 <line:258:3, col:77> Text=" a period of time is not set for waiting for the mutex to become available."
|   |   `-TextComment 0xff8b50 <line:259:3> Text=" "
|   |-BlockCommandComment 0xff8bb0 <col:4, line:260:3> Name="retval"
|   | `-ParagraphComment 0xff8c30 <line:259:11, line:260:3>
|   |   |-TextComment 0xff8be0 <line:259:11, col:89> Text=" #LOS_ERRNO_MUX_IN_INTERR        The mutex is being locked during an interrupt."
|   |   `-TextComment 0xff8c00 <line:260:3> Text=" "
|   |-BlockCommandComment 0xff8c50 <col:4, line:261:3> Name="retval"
|   | `-ParagraphComment 0xff8cd0 <line:260:11, line:261:3>
|   |   |-TextComment 0xff8c80 <line:260:11, col:105> Text=" #LOS_ERRNO_MUX_PEND_IN_LOCK       The mutex is waited on when the task scheduling is disabled."
|   |   `-TextComment 0xff8ca0 <line:261:3> Text=" "
|   |-BlockCommandComment 0xff8cf0 <col:4, line:262:3> Name="retval"
|   | `-ParagraphComment 0xff8d70 <line:261:11, line:262:3>
|   |   |-TextComment 0xff8d20 <line:261:11, col:73> Text=" #LOS_ERRNO_MUX_TIMEOUT            The mutex waiting times out."
|   |   `-TextComment 0xff8d40 <line:262:3> Text=" "
|   |-BlockCommandComment 0xff8d90 <col:4, line:263:3> Name="retval"
|   | `-ParagraphComment 0xff8e10 <line:262:11, line:263:3>
|   |   |-TextComment 0xff8dc0 <line:262:11, col:78> Text=" #LOS_OK                           The mutex is successfully locked."
|   |   `-TextComment 0xff8de0 <line:263:3> Text=" "
|   |-BlockCommandComment 0xff8e30 <col:4, line:265:3> Name="par"
|   | `-ParagraphComment 0xff9000 <line:263:8, line:265:3>
|   |   |-TextComment 0xff8e60 <line:263:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xff8e80 <line:264:3> Text=" "
|   |   |-HTMLStartTagComment 0xff8ea0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xff8ee0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xff8f20 <col:12, col:72> Text="los_mux.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xff8f40 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0xff8f70 <col:78, col:82> Name="ul"
|   |   `-TextComment 0xff8fa0 <line:265:3> Text=" "
|   `-BlockCommandComment 0xff9020 <col:4, col:35> Name="see"
|     `-ParagraphComment 0xff9080 <col:8, col:35>
|       `-TextComment 0xff9050 <col:8, col:35> Text=" LOS_MuxCreate | LOS_MuxPost"
|-FunctionDecl 0xf914e8 <line:293:1, col:43> col:15 LOS_MuxPost 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xf91458 <col:27, col:34> col:34 muxHandle 'UINT32':'unsigned int'
| `-FullComment 0xff9e50 <line:270:3, line:291:35>
|   |-ParagraphComment 0xff91e0 <line:270:3>
|   | `-TextComment 0xff91b0 <col:3> Text=" "
|   |-VerbatimLineComment 0xff9200 <col:4, col:20> Text=" los_mux"
|   |-ParagraphComment 0xff9270 <line:271:3>
|   | `-TextComment 0xff9240 <col:3> Text=" "
|   |-BlockCommandComment 0xff9290 <col:4, col:26> Name="brief"
|   | `-ParagraphComment 0xff92f0 <col:10, col:26>
|   |   `-TextComment 0xff92c0 <col:10, col:26> Text=" Release a mutex."
|   |-ParagraphComment 0xff9340 <line:273:3>
|   | `-TextComment 0xff9310 <col:3> Text=" "
|   |-BlockCommandComment 0xff9360 <col:4, line:275:3> Name="par"
|   | `-ParagraphComment 0xff9410 <line:273:8, line:275:3>
|   |   |-TextComment 0xff9390 <line:273:8, col:20> Text=" Description:"
|   |   |-TextComment 0xff93b0 <line:274:3, col:49> Text=" This API is used to release a specified mutex."
|   |   `-TextComment 0xff93d0 <line:275:3> Text=" "
|   |-BlockCommandComment 0xff9430 <col:4, line:280:8> Name="attention"
|   | `-ParagraphComment 0xff97a0 <line:276:3, line:280:8>
|   |   |-TextComment 0xff9460 <line:276:3> Text=" "
|   |   |-HTMLStartTagComment 0xff9480 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xff94c0 <line:277:3> Text=" "
|   |   |-HTMLStartTagComment 0xff94e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff9520 <col:8, col:52> Text="The specific mutex should be created firstly."
|   |   |-HTMLEndTagComment 0xff9540 <col:53, col:57> Name="li"
|   |   |-TextComment 0xff9570 <line:278:3> Text=" "
|   |   |-HTMLStartTagComment 0xff9590 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff95d0 <col:8, col:50> Text="Do not release a mutex during an interrupt."
|   |   |-HTMLEndTagComment 0xff95f0 <col:51, col:55> Name="li"
|   |   |-TextComment 0xff9620 <line:279:3> Text=" "
|   |   |-HTMLStartTagComment 0xff9640 <col:4, col:7> Name="li"
|   |   |-TextComment 0xff9680 <col:8, col:108> Text="If a recursive mutex is locked for many times, it must be unlocked for the same times to be released."
|   |   |-HTMLEndTagComment 0xff96a0 <col:109, col:113> Name="li"
|   |   |-TextComment 0xff96d0 <line:280:3> Text=" "
|   |   `-HTMLEndTagComment 0xff96f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xff97f0 <line:282:3>
|   | `-TextComment 0xff97c0 <col:3> Text=" "
|   |-ParamCommandComment 0xff9810 <col:4, line:283:38> [in] implicitly Param="muxHandle" ParamIndex=0
|   | `-ParagraphComment 0xff98c0 <line:282:20, line:283:38>
|   |   |-TextComment 0xff9870 <line:282:20, col:96> Text="    [IN] Handle of the mutex to be released. The value of handle should be in"
|   |   `-TextComment 0xff9890 <line:283:3, col:38> Text=" [0, LOSCFG_BASE_IPC_MUX_LIMIT - 1]."
|   |-ParagraphComment 0xff9930 <line:285:3>
|   | `-TextComment 0xff9900 <col:3> Text=" "
|   |-BlockCommandComment 0xff9950 <col:4, line:287:3> Name="retval"
|   | `-ParagraphComment 0xff9a00 <line:285:11, line:287:3>
|   |   |-TextComment 0xff9980 <line:285:11, col:116> Text=" #LOS_ERRNO_MUX_INVALID            The mutex state (for example, the mutex does not exist or is not in use"
|   |   |-TextComment 0xff99a0 <line:286:3, col:73> Text=" or owned by other thread) is not applicable for the current operation."
|   |   `-TextComment 0xff99c0 <line:287:3> Text=" "
|   |-BlockCommandComment 0xff9a20 <col:4, line:288:3> Name="retval"
|   | `-ParagraphComment 0xff9aa0 <line:287:11, line:288:3>
|   |   |-TextComment 0xff9a50 <line:287:11, col:91> Text=" #LOS_ERRNO_MUX_IN_INTERR        The mutex is being released during an interrupt."
|   |   `-TextComment 0xff9a70 <line:288:3> Text=" "
|   |-BlockCommandComment 0xff9ac0 <col:4, line:289:3> Name="retval"
|   | `-ParagraphComment 0xff9b40 <line:288:11, line:289:3>
|   |   |-TextComment 0xff9af0 <line:288:11, col:80> Text=" #LOS_OK                           The mutex is successfully released."
|   |   `-TextComment 0xff9b10 <line:289:3> Text=" "
|   |-BlockCommandComment 0xff9b60 <col:4, line:291:3> Name="par"
|   | `-ParagraphComment 0xff9d30 <line:289:8, line:291:3>
|   |   |-TextComment 0xff9b90 <line:289:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xff9bb0 <line:290:3> Text=" "
|   |   |-HTMLStartTagComment 0xff9bd0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xff9c10 <col:8, col:11> Name="li"
|   |   |-TextComment 0xff9c50 <col:12, col:72> Text="los_mux.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xff9c70 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0xff9ca0 <col:78, col:82> Name="ul"
|   |   `-TextComment 0xff9cd0 <line:291:3> Text=" "
|   `-BlockCommandComment 0xff9d50 <col:4, col:35> Name="see"
|     `-ParagraphComment 0xff9db0 <col:8, col:35>
|       `-TextComment 0xff9d80 <col:8, col:35> Text=" LOS_MuxCreate | LOS_MuxPend"
|-RecordDecl 0xf915b8 <line:299:9, line:306:1> line:299:9 struct definition
| |-FullComment 0xff9fc0 <line:296:3, line:297:16>
| | |-ParagraphComment 0xff9ef0 <line:296:3>
| | | `-TextComment 0xff9ec0 <col:3> Text=" "
| | |-VerbatimLineComment 0xff9f10 <col:4, col:20> Text=" los_mux"
| | `-ParagraphComment 0xff9f80 <line:297:3, col:16>
| |   `-TextComment 0xff9f50 <col:3, col:16> Text=" Mutex object."
| |-FieldDecl 0xf91670 <line:300:5, col:11> col:11 muxStat 'UINT8':'unsigned char'
| | `-FullComment 0xffa090 <col:30, col:63>
| |   `-ParagraphComment 0xffa060 <col:30, col:63>
| |     `-TextComment 0xffa030 <col:30, col:63> Text=" State OS_MUX_UNUSED,OS_MUX_USED  "
| |-FieldDecl 0xf916f8 <line:301:5, col:12> col:12 muxCount 'UINT16':'unsigned short'
| | `-FullComment 0xffa160 <col:30, col:55>
| |   `-ParagraphComment 0xffa130 <col:30, col:55>
| |     `-TextComment 0xffa100 <col:30, col:55> Text=" Times of locking a mutex "
| |-FieldDecl 0xf91788 <line:302:5, col:12> col:12 muxID 'UINT32':'unsigned int'
| | `-FullComment 0xffa230 <col:30, col:40>
| |   `-ParagraphComment 0xffa200 <col:30, col:40>
| |     `-TextComment 0xffa1d0 <col:30, col:40> Text=" Handle ID "
| |-FieldDecl 0xf91818 <line:303:5, col:17> col:17 muxList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| | `-FullComment 0xffa300 <col:30, col:48>
| |   `-ParagraphComment 0xffa2d0 <col:30, col:48>
| |     `-TextComment 0xffa2a0 <col:30, col:48> Text=" Mutex linked list "
| |-FieldDecl 0xf92f30 <line:304:5, col:16> col:16 owner 'LosTaskCB *'
| | `-FullComment 0xffa3d0 <col:30, col:73>
| |   `-ParagraphComment 0xffa3a0 <col:30, col:73>
| |     `-TextComment 0xffa370 <col:30, col:73> Text=" The current thread that is locking a mutex "
| `-FieldDecl 0xf92fb8 <line:305:5, col:12> col:12 priority 'UINT16':'unsigned short'
|   `-FullComment 0xffa4a0 <col:30, col:77>
|     `-ParagraphComment 0xffa470 <col:30, col:77>
|       `-TextComment 0xffa440 <col:30, col:77> Text=" Priority of the thread that is locking a mutex "
|-TypedefDecl 0xf93098 <line:299:1, line:306:3> col:3 referenced LosMuxCB 'struct LosMuxCB':'LosMuxCB'
| |-ElaboratedType 0xf93040 'struct LosMuxCB' sugar
| | `-RecordType 0xf91640 'LosMuxCB'
| |   `-Record 0xf915b8 ''
| `-FullComment 0xffa610 <line:296:3, line:297:16>
|   |-ParagraphComment 0xffa540 <line:296:3>
|   | `-TextComment 0xffa510 <col:3> Text=" "
|   |-VerbatimLineComment 0xffa560 <col:4, col:20> Text=" los_mux"
|   `-ParagraphComment 0xffa5d0 <line:297:3, col:16>
|     `-TextComment 0xffa5a0 <col:3, col:16> Text=" Mutex object."
|-VarDecl 0xf931e8 <line:320:1, col:18> col:18 g_allMux 'LosMuxCB *' extern
|-FunctionDecl 0xf93340 <line:346:1, col:29> col:15 OsMuxInit 'UINT32 (void)' extern
| `-FullComment 0xffbfb0 <line:329:3, line:344:21>
|   |-ParagraphComment 0xffa6b0 <line:329:3>
|   | `-TextComment 0xffa680 <col:3> Text=" "
|   |-VerbatimLineComment 0xffa6d0 <col:4, col:20> Text=" los_mux"
|   |-ParagraphComment 0xffa740 <line:330:3>
|   | `-TextComment 0xffa710 <col:3> Text=" "
|   |-BlockCommandComment 0xffa760 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0xffa7c0 <col:10, col:32>
|   |   `-TextComment 0xffa790 <col:10, col:32> Text=" Initializes the mutex."
|   |-ParagraphComment 0xffa810 <line:332:3>
|   | `-TextComment 0xffa7e0 <col:3> Text=" "
|   |-BlockCommandComment 0xffa830 <col:4, line:334:3> Name="par"
|   | `-ParagraphComment 0xffa8e0 <line:332:8, line:334:3>
|   |   |-TextComment 0xffa860 <line:332:8, col:20> Text=" Description:"
|   |   |-TextComment 0xffa880 <line:333:3, col:45> Text=" This API is used to initializes the mutex."
|   |   `-TextComment 0xffa8a0 <line:334:3> Text=" "
|   |-BlockCommandComment 0xffb920 <col:4, line:337:8> Name="attention"
|   | `-ParagraphComment 0xffbaf0 <line:335:3, line:337:8>
|   |   |-TextComment 0xffb950 <line:335:3> Text=" "
|   |   |-HTMLStartTagComment 0xffb970 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xffb9b0 <line:336:3> Text=" "
|   |   |-HTMLStartTagComment 0xffb9d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xffba10 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xffba30 <col:13, col:17> Name="li"
|   |   |-TextComment 0xffba60 <line:337:3> Text=" "
|   |   `-HTMLEndTagComment 0xffba80 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xffbb40 <line:339:3>
|   | `-TextComment 0xffbb10 <col:3> Text=" "
|   |-ParamCommandComment 0xffbb60 <col:4, col:15> [in] implicitly Param="None."
|   | `-ParagraphComment 0xffbbc0 <<invalid sloc>>
|   |-ParagraphComment 0xffbc10 <line:341:3>
|   | `-TextComment 0xffbbe0 <col:3> Text=" "
|   |-BlockCommandComment 0xffbc30 <col:4, line:342:3> Name="retval"
|   | `-ParagraphComment 0xffbcb0 <line:341:11, line:342:3>
|   |   |-TextComment 0xffbc60 <line:341:11, col:44> Text=" UINT32     Initialization result."
|   |   `-TextComment 0xffbc80 <line:342:3> Text=" "
|   |-BlockCommandComment 0xffbcd0 <col:4, line:344:3> Name="par"
|   | `-ParagraphComment 0xffbea0 <line:342:8, line:344:3>
|   |   |-TextComment 0xffbd00 <line:342:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xffbd20 <line:343:3> Text=" "
|   |   |-HTMLStartTagComment 0xffbd40 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xffbd80 <col:8, col:11> Name="li"
|   |   |-TextComment 0xffbdc0 <col:12, col:72> Text="los_mux.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xffbde0 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0xffbe10 <col:78, col:82> Name="ul"
|   |   `-TextComment 0xffbe40 <line:344:3> Text=" "
|   `-BlockCommandComment 0xffbec0 <col:4, col:21> Name="see"
|     `-ParagraphComment 0xffbf20 <col:8, col:21>
|       `-TextComment 0xffbef0 <col:8, col:21> Text=" LOS_MuxDelete"
|-RecordDecl 0xf93a08 <main/los_queue.h:360:9, line:371:1> line:360:16 struct tagQueueInfo definition
| |-FullComment 0xffc120 <line:357:3, line:358:53>
| | |-ParagraphComment 0xffc050 <line:357:3>
| | | `-TextComment 0xffc020 <col:3> Text=" "
| | |-VerbatimLineComment 0xffc070 <col:4, col:22> Text=" los_queue"
| | `-ParagraphComment 0xffc0e0 <line:358:3, col:53>
| |   `-TextComment 0xffc0b0 <col:3, col:53> Text=" Structure of the block for queue information query"
| |-FieldDecl 0xf93ac0 <line:361:5, col:12> col:12 queueID 'UINT32':'unsigned int'
| | `-FullComment 0xffc1f0 <col:25, col:34>
| |   `-ParagraphComment 0xffc1c0 <col:25, col:34>
| |     `-TextComment 0xffc190 <col:25, col:34> Text=" Queue ID "
| |-FieldDecl 0xf93b48 <line:362:5, col:12> col:12 queueLen 'UINT16':'unsigned short'
| | `-FullComment 0xffc2c0 <col:26, col:39>
| |   `-ParagraphComment 0xffc290 <col:26, col:39>
| |     `-TextComment 0xffc260 <col:26, col:39> Text=" Queue length "
| |-FieldDecl 0xf93bd8 <line:363:5, col:12> col:12 queueSize 'UINT16':'unsigned short'
| | `-FullComment 0xffc390 <col:27, col:37>
| |   `-ParagraphComment 0xffc360 <col:27, col:37>
| |     `-TextComment 0xffc330 <col:27, col:37> Text=" Node size "
| |-FieldDecl 0xf93c68 <line:364:5, col:12> col:12 queueHead 'UINT16':'unsigned short'
| | `-FullComment 0xffc460 <col:27, col:37>
| |   `-ParagraphComment 0xffc430 <col:27, col:37>
| |     `-TextComment 0xffc400 <col:27, col:37> Text=" Node head "
| |-FieldDecl 0xf93cf8 <line:365:5, col:12> col:12 queueTail 'UINT16':'unsigned short'
| | `-FullComment 0xffc530 <col:27, col:37>
| |   `-ParagraphComment 0xffc500 <col:27, col:37>
| |     `-TextComment 0xffc4d0 <col:27, col:37> Text=" Node tail "
| |-FieldDecl 0xf93d88 <line:366:5, col:12> col:12 writableCnt 'UINT16':'unsigned short'
| | `-FullComment 0xffc600 <col:29, col:57>
| |   `-ParagraphComment 0xffc5d0 <col:29, col:57>
| |     `-TextComment 0xffc5a0 <col:29, col:57> Text=" Count of writable resources "
| |-FieldDecl 0xf93e18 <line:367:5, col:12> col:12 readableCnt 'UINT16':'unsigned short'
| | `-FullComment 0xffc6d0 <col:29, col:57>
| |   `-ParagraphComment 0xffc6a0 <col:29, col:57>
| |     `-TextComment 0xffc670 <col:29, col:57> Text=" Count of readable resources "
| |-FieldDecl 0xf980a8 <line:368:5, col:47> col:12 waitReadTask 'UINT32 [1]'
| | `-FullComment 0xffc7a0 <col:54, col:75>
| |   `-ParagraphComment 0xffc770 <col:54, col:75>
| |     `-TextComment 0xffc740 <col:54, col:75> Text=" Resource reading task"
| |-FieldDecl 0xf98240 <line:369:5, col:48> col:12 waitWriteTask 'UINT32 [1]'
| | `-FullComment 0xffc870 <col:55, col:77>
| |   `-ParagraphComment 0xffc840 <col:55, col:77>
| |     `-TextComment 0xffc810 <col:55, col:77> Text=" Resource writing task "
| `-FieldDecl 0xf983d0 <line:370:5, col:46> col:12 waitMemTask 'UINT32 [1]'
|   `-FullComment 0xffc960 <col:53, col:65>
|     `-ParagraphComment 0xffc930 <col:53, col:65>
|       `-TextComment 0xffc8e0 <col:53, col:65> Text=" Memory task "
|-TypedefDecl 0xf984a8 <line:360:1, line:371:3> col:3 referenced QUEUE_INFO_S 'struct tagQueueInfo':'struct tagQueueInfo'
| |-ElaboratedType 0xf98450 'struct tagQueueInfo' sugar
| | `-RecordType 0xf93a90 'struct tagQueueInfo'
| |   `-Record 0xf93a08 'tagQueueInfo'
| `-FullComment 0xffcad0 <line:357:3, line:358:53>
|   |-ParagraphComment 0xffca00 <line:357:3>
|   | `-TextComment 0xffc9d0 <col:3> Text=" "
|   |-VerbatimLineComment 0xffca20 <col:4, col:22> Text=" los_queue"
|   `-ParagraphComment 0xffca90 <line:358:3, col:53>
|     `-TextComment 0xffca60 <col:3, col:53> Text=" Structure of the block for queue information query"
|-FunctionDecl 0xf98888 <line:400:1, line:404:48> line:400:15 LOS_QueueCreate 'UINT32 (const CHAR *, UINT16, UINT32 *, UINT32, UINT16)' extern
| |-ParmVarDecl 0xf98550 <col:31, col:43> col:43 queueName 'const CHAR *'
| |-ParmVarDecl 0xf985c8 <line:401:31, col:38> col:38 len 'UINT16':'unsigned short'
| |-ParmVarDecl 0xf98640 <line:402:31, col:39> col:39 queueID 'UINT32 *'
| |-ParmVarDecl 0xf986b8 <line:403:31, col:38> col:38 flags 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf98730 <line:404:31, col:38> col:38 maxMsgSize 'UINT16':'unsigned short'
| `-FullComment 0xffeb70 <line:374:3, line:398:23>
|   |-ParagraphComment 0xffcb70 <line:374:3>
|   | `-TextComment 0xffcb40 <col:3> Text=" "
|   |-VerbatimLineComment 0xffcb90 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0xffcc00 <line:375:3>
|   | `-TextComment 0xffcbd0 <col:3> Text=" "
|   |-BlockCommandComment 0xffcc20 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0xffcc80 <col:10, col:33>
|   |   `-TextComment 0xffcc50 <col:10, col:33> Text=" Create a message queue."
|   |-ParagraphComment 0xffccd0 <line:377:3>
|   | `-TextComment 0xffcca0 <col:3> Text=" "
|   |-BlockCommandComment 0xffccf0 <col:4, line:379:3> Name="par"
|   | `-ParagraphComment 0xffcda0 <line:377:8, line:379:3>
|   |   |-TextComment 0xffcd20 <line:377:8, col:20> Text=" Description:"
|   |   |-TextComment 0xffcd40 <line:378:3, col:46> Text=" This API is used to create a message queue."
|   |   `-TextComment 0xffcd60 <line:379:3> Text=" "
|   |-BlockCommandComment 0xffcdc0 <col:4, line:383:3> Name="attention"
|   | `-ParagraphComment 0xffcfc0 <line:380:3, line:383:3>
|   |   |-TextComment 0xffcdf0 <line:380:3> Text=" "
|   |   |-HTMLStartTagComment 0xffce10 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xffce50 <line:381:3> Text=" "
|   |   |-HTMLStartTagComment 0xffce70 <col:4, col:7> Name="li"
|   |   |-TextComment 0xffceb0 <col:8, col:96> Text="There are LOSCFG_BASE_IPC_QUEUE_LIMIT queues available, change it's value when necessary."
|   |   |-HTMLEndTagComment 0xffced0 <col:97, col:101> Name="li"
|   |   |-TextComment 0xffcf00 <line:382:3> Text=" "
|   |   |-HTMLEndTagComment 0xffcf20 <col:4, col:8> Name="ul"
|   |   `-TextComment 0xffcf50 <line:383:3> Text=" "
|   |-ParamCommandComment 0xffcfe0 <col:4, line:384:3> [in] implicitly Param="queueName" ParamIndex=0
|   | `-ParagraphComment 0xffd090 <line:383:20, line:384:3>
|   |   |-TextComment 0xffd040 <line:383:20, col:92> Text="        [IN]    Message queue name. Reserved parameter, not used for now."
|   |   `-TextComment 0xffd060 <line:384:3> Text=" "
|   |-ParamCommandComment 0xffd0b0 <col:4, line:385:3> [in] implicitly Param="len" ParamIndex=1
|   | `-ParagraphComment 0xffd160 <line:384:14, line:385:3>
|   |   |-TextComment 0xffd110 <line:384:14, col:79> Text="              [IN]    Queue length. The value range is [1,0xffff]."
|   |   `-TextComment 0xffd130 <line:385:3> Text=" "
|   |-ParamCommandComment 0xffd180 <col:4, line:386:3> [in] implicitly Param="queueID" ParamIndex=2
|   | `-ParagraphComment 0xffd230 <line:385:18, line:386:3>
|   |   |-TextComment 0xffd1e0 <line:385:18, col:98> Text="          [OUT]   ID of the queue control structure that is successfully created."
|   |   `-TextComment 0xffd200 <line:386:3> Text=" "
|   |-ParamCommandComment 0xffd250 <col:4, line:387:3> [in] implicitly Param="flags" ParamIndex=3
|   | `-ParagraphComment 0xffd300 <line:386:16, line:387:3>
|   |   |-TextComment 0xffd2b0 <line:386:16, col:84> Text="            [IN]    Queue mode. Reserved parameter, not used for now."
|   |   `-TextComment 0xffd2d0 <line:387:3> Text=" "
|   |-ParamCommandComment 0xffd320 <col:4, col:78> [in] implicitly Param="maxMsgSize" ParamIndex=4
|   | `-ParagraphComment 0xffd3b0 <col:21, col:78>
|   |   `-TextComment 0xffd380 <col:21, col:78> Text="       [IN]    Node size. The value range is [1,0xffff-4]."
|   |-ParagraphComment 0xffd400 <line:389:3>
|   | `-TextComment 0xffd3d0 <col:3> Text=" "
|   |-BlockCommandComment 0xffd420 <col:4, line:390:3> Name="retval"
|   | `-ParagraphComment 0xffd4a0 <line:389:11, line:390:3>
|   |   |-TextComment 0xffd450 <line:389:11, col:93> Text="   #LOS_OK                               The message queue is successfully created."
|   |   `-TextComment 0xffd470 <line:390:3> Text=" "
|   |-BlockCommandComment 0xffd4c0 <col:4, line:391:3> Name="retval"
|   | `-ParagraphComment 0xffd540 <line:390:11, line:391:3>
|   |   |-TextComment 0xffd4f0 <line:390:11, col:111> Text="   #LOS_ERRNO_QUEUE_CB_UNAVAILABLE       The upper limit of the number of created queues is exceeded."
|   |   `-TextComment 0xffd510 <line:391:3> Text=" "
|   |-BlockCommandComment 0xffd560 <col:4, line:392:3> Name="retval"
|   | `-ParagraphComment 0xffd5e0 <line:391:11, line:392:3>
|   |   |-TextComment 0xffd590 <line:391:11, col:90> Text="   #LOS_ERRNO_QUEUE_CREATE_NO_MEMORY     Insufficient memory for queue creation."
|   |   `-TextComment 0xffd5b0 <line:392:3> Text=" "
|   |-BlockCommandComment 0xffd600 <col:4, line:393:3> Name="retval"
|   | `-ParagraphComment 0xffd680 <line:392:11, line:393:3>
|   |   |-TextComment 0xffd630 <line:392:11, col:81> Text="   #LOS_ERRNO_QUEUE_CREAT_PTR_NULL       Null pointer, queueID is NULL."
|   |   `-TextComment 0xffd650 <line:393:3> Text=" "
|   |-BlockCommandComment 0xffd6a0 <col:4, line:395:3> Name="retval"
|   | `-ParagraphComment 0xffd750 <line:393:11, line:395:3>
|   |   |-TextComment 0xffd6d0 <line:393:11, col:111> Text="   #LOS_ERRNO_QUEUE_PARA_ISZERO          The queue length or message node size passed in during queue"
|   |   |-TextComment 0xffd6f0 <line:394:3, col:17> Text=" creation is 0."
|   |   `-TextComment 0xffd710 <line:395:3> Text=" "
|   |-BlockCommandComment 0xffd770 <col:4, line:396:3> Name="retval"
|   | `-ParagraphComment 0xffd7f0 <line:395:11, line:396:3>
|   |   |-TextComment 0xffd7a0 <line:395:11, col:102> Text="   #LOS_ERRNO_QUEUE_SIZE_TOO_BIG         The parameter maxMsgSize is larger than 0xffff - 4."
|   |   `-TextComment 0xffd7c0 <line:396:3> Text=" "
|   |-BlockCommandComment 0xffd810 <col:4, line:398:3> Name="par"
|   | `-ParagraphComment 0xffea20 <line:396:8, line:398:3>
|   |   |-TextComment 0xffd840 <line:396:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xffd860 <line:397:3> Text=" "
|   |   |-HTMLStartTagComment 0xffd880 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xffd8c0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xffd900 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xffe960 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xffe990 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xffe9c0 <line:398:3> Text=" "
|   `-BlockCommandComment 0xffea40 <col:4, col:23> Name="see"
|     `-ParagraphComment 0xffeaa0 <col:8, col:23>
|       `-TextComment 0xffea70 <col:8, col:23> Text=" LOS_QueueDelete"
|-FunctionDecl 0xf98c38 <line:449:1, line:452:47> line:449:15 LOS_QueueReadCopy 'UINT32 (UINT32, void *, UINT32 *, UINT32)' extern
| |-ParmVarDecl 0xf98988 <col:33, col:40> col:40 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf98a08 <main/los_compiler.h:327:23, main/los_queue.h:450:39> col:39 bufferAddr 'void *'
| |-ParmVarDecl 0xf98a80 <line:451:33, col:41> col:41 bufferSize 'UINT32 *'
| |-ParmVarDecl 0xf98af8 <line:452:33, col:40> col:40 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x1000310 <line:407:3, line:447:44>
|   |-ParagraphComment 0xffec10 <line:407:3>
|   | `-TextComment 0xffebe0 <col:3> Text=" "
|   |-VerbatimLineComment 0xffec30 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0xffeca0 <line:408:3>
|   | `-TextComment 0xffec70 <col:3> Text=" "
|   |-BlockCommandComment 0xffecc0 <col:4, col:23> Name="brief"
|   | `-ParagraphComment 0xffed20 <col:10, col:23>
|   |   `-TextComment 0xffecf0 <col:10, col:23> Text=" Read a queue."
|   |-ParagraphComment 0xffed70 <line:410:3>
|   | `-TextComment 0xffed40 <col:3> Text=" "
|   |-BlockCommandComment 0xffed90 <col:4, line:413:3> Name="par"
|   | `-ParagraphComment 0xffee60 <line:410:8, line:413:3>
|   |   |-TextComment 0xffedc0 <line:410:8, col:20> Text=" Description:"
|   |   |-TextComment 0xffede0 <line:411:3, col:107> Text=" This API is used to read data in a specified queue, and store the obtained data to the address specified"
|   |   |-TextComment 0xffee00 <line:412:3, col:87> Text=" by bufferAddr. The address and the size of the data to be read are defined by users."
|   |   `-TextComment 0xffee20 <line:413:3> Text=" "
|   |-BlockCommandComment 0xffee80 <col:4, line:422:8> Name="attention"
|   | `-ParagraphComment 0xfff480 <line:414:3, line:422:8>
|   |   |-TextComment 0xffeeb0 <line:414:3> Text=" "
|   |   |-HTMLStartTagComment 0xffeed0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xffef10 <line:415:3> Text=" "
|   |   |-HTMLStartTagComment 0xffef30 <col:4, col:7> Name="li"
|   |   |-TextComment 0xffef70 <col:8, col:52> Text="The specific queue should be created firstly."
|   |   |-HTMLEndTagComment 0xffef90 <col:53, col:57> Name="li"
|   |   |-TextComment 0xffefc0 <line:416:3> Text=" "
|   |   |-HTMLStartTagComment 0xffefe0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfff020 <col:8, col:113> Text="Queue reading adopts the fist in first out (FIFO) mode. The data that is first stored in the queue is read"
|   |   |-TextComment 0xfff040 <line:417:3, col:9> Text=" first."
|   |   |-HTMLEndTagComment 0xfff060 <col:10, col:14> Name="li"
|   |   |-TextComment 0xfff090 <line:418:3> Text=" "
|   |   |-HTMLStartTagComment 0xfff0b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfff0f0 <col:8, col:43> Text="bufferAddr stores the obtained data."
|   |   |-HTMLEndTagComment 0xfff110 <col:44, col:48> Name="li"
|   |   |-TextComment 0xfff140 <line:419:3> Text=" "
|   |   |-HTMLStartTagComment 0xfff160 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfff1a0 <col:8, col:77> Text="Do not read or write a queue in unblocking modes such as an interrupt."
|   |   |-HTMLEndTagComment 0xfff1c0 <col:78, col:82> Name="li"
|   |   |-TextComment 0xfff1f0 <line:420:3> Text=" "
|   |   |-HTMLStartTagComment 0xfff210 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfff250 <col:8, col:73> Text="This API cannot be called before the Huawei LiteOS is initialized."
|   |   |-HTMLEndTagComment 0xfff270 <col:74, col:78> Name="li"
|   |   |-TextComment 0xfff2a0 <line:421:3> Text=" "
|   |   |-HTMLStartTagComment 0xfff2c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xfff300 <col:8, col:47> Text="The argument timeOut is a relative time."
|   |   |-HTMLEndTagComment 0xfff320 <col:48, col:52> Name="li"
|   |   |-TextComment 0xfff350 <line:422:3> Text=" "
|   |   `-HTMLEndTagComment 0xfff370 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xfff4d0 <line:424:3>
|   | `-TextComment 0xfff4a0 <col:3> Text=" "
|   |-ParamCommandComment 0xfff4f0 <col:4, line:426:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0xfff5d0 <line:424:18, line:426:3>
|   |   |-TextComment 0xfff550 <line:424:18, col:89> Text="        [IN]     Queue ID created by LOS_QueueCreate. The value range is"
|   |   |-TextComment 0xfff570 <line:425:3, col:35> Text=" [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0xfff590 <line:426:3> Text=" "
|   |-ParamCommandComment 0xfff5f0 <col:4, line:428:3> [in] implicitly Param="bufferAddr" ParamIndex=1
|   | `-ParagraphComment 0xfff6d0 <line:426:21, line:428:3>
|   |   |-TextComment 0xfff650 <line:426:21, col:114> Text="     [OUT]    Starting address that stores the obtained data. The starting address must not be"
|   |   |-TextComment 0xfff670 <line:427:3, col:8> Text=" null."
|   |   `-TextComment 0xfff690 <line:428:3> Text=" "
|   |-ParamCommandComment 0xfff6f0 <col:4, line:429:3> [in] implicitly Param="bufferSize" ParamIndex=2
|   | `-ParagraphComment 0xfff7a0 <line:428:21, line:429:3>
|   |   |-TextComment 0xfff750 <line:428:21, col:119> Text="     [IN/OUT] Where to maintain the buffer expected-size before read, and the real-size after read."
|   |   `-TextComment 0xfff770 <line:429:3> Text=" "
|   |-ParamCommandComment 0xfff7c0 <col:4, col:99> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0xfff850 <col:18, col:99>
|   |   `-TextComment 0xfff820 <col:18, col:99> Text="        [IN]     Expiry time. The value range is [0,LOS_WAIT_FOREVER](unit: Tick)."
|   |-ParagraphComment 0xfff8a0 <line:431:3>
|   | `-TextComment 0xfff870 <col:3> Text=" "
|   |-BlockCommandComment 0xfff8c0 <col:4, line:432:3> Name="retval"
|   | `-ParagraphComment 0xfff940 <line:431:11, line:432:3>
|   |   |-TextComment 0xfff8f0 <line:431:11, col:81> Text="   #LOS_OK                              The queue is successfully read."
|   |   `-TextComment 0xfff910 <line:432:3> Text=" "
|   |-BlockCommandComment 0xfff970 <col:4, line:433:3> Name="retval"
|   | `-ParagraphComment 0xfff9f0 <line:432:11, line:433:3>
|   |   |-TextComment 0xfff9a0 <line:432:11, col:104> Text="   #LOS_ERRNO_QUEUE_INVALID             The handle of the queue that is being read is invalid."
|   |   `-TextComment 0xfff9c0 <line:433:3> Text=" "
|   |-BlockCommandComment 0xfffa10 <col:4, line:434:3> Name="retval"
|   | `-ParagraphComment 0xfffa90 <line:433:11, line:434:3>
|   |   |-TextComment 0xfffa40 <line:433:11, col:101> Text="   #LOS_ERRNO_QUEUE_READ_PTR_NULL       The pointer passed in during queue reading is null."
|   |   `-TextComment 0xfffa60 <line:434:3> Text=" "
|   |-BlockCommandComment 0xfffab0 <col:4, line:435:3> Name="retval"
|   | `-ParagraphComment 0xfffb30 <line:434:11, line:435:3>
|   |   |-TextComment 0xfffae0 <line:434:11, col:102> Text="   #LOS_ERRNO_QUEUE_READSIZE_ISZERO     The buffer size passed in during queue reading is 0."
|   |   `-TextComment 0xfffb00 <line:435:3> Text=" "
|   |-BlockCommandComment 0xfffb50 <col:4, line:437:3> Name="retval"
|   | `-ParagraphComment 0xfffc00 <line:435:11, line:437:3>
|   |   |-TextComment 0xfffb80 <line:435:11, col:112> Text="   #LOS_ERRNO_QUEUE_READ_IN_INTERRUPT   The queue cannot be read during an interrupt when the time for"
|   |   |-TextComment 0xfffba0 <line:436:3, col:43> Text=" waiting to processing the queue expires."
|   |   `-TextComment 0xfffbc0 <line:437:3> Text=" "
|   |-BlockCommandComment 0xfffc20 <col:4, line:438:3> Name="retval"
|   | `-ParagraphComment 0xfffca0 <line:437:11, line:438:3>
|   |   |-TextComment 0xfffc50 <line:437:11, col:86> Text="   #LOS_ERRNO_QUEUE_NOT_CREATE          The queue to be read is not created."
|   |   `-TextComment 0xfffc70 <line:438:3> Text=" "
|   |-BlockCommandComment 0xfffcc0 <col:4, line:440:3> Name="retval"
|   | `-ParagraphComment 0xfffd70 <line:438:11, line:440:3>
|   |   |-TextComment 0xfffcf0 <line:438:11, col:114> Text="   #LOS_ERRNO_QUEUE_ISEMPTY             No resource is in the queue that is being read when the time for"
|   |   |-TextComment 0xfffd10 <line:439:3, col:43> Text=" waiting to processing the queue expires."
|   |   `-TextComment 0xfffd30 <line:440:3> Text=" "
|   |-BlockCommandComment 0xfffd90 <col:4, line:442:3> Name="retval"
|   | `-ParagraphComment 0xfffe40 <line:440:11, line:442:3>
|   |   |-TextComment 0xfffdc0 <line:440:11, col:113> Text="   #LOS_ERRNO_QUEUE_PEND_IN_LOCK        The task is forbidden to be blocked on a queue when the task is"
|   |   |-TextComment 0xfffde0 <line:441:3, col:10> Text=" locked."
|   |   `-TextComment 0xfffe00 <line:442:3> Text=" "
|   |-BlockCommandComment 0xfffe60 <col:4, line:443:3> Name="retval"
|   | `-ParagraphComment 0xfffee0 <line:442:11, line:443:3>
|   |   |-TextComment 0xfffe90 <line:442:11, col:107> Text="   #LOS_ERRNO_QUEUE_TIMEOUT             The time set for waiting to processing the queue expires."
|   |   `-TextComment 0xfffeb0 <line:443:3> Text=" "
|   |-BlockCommandComment 0xffff00 <col:4, line:445:3> Name="retval"
|   | `-ParagraphComment 0xffffb0 <line:443:11, line:445:3>
|   |   |-TextComment 0xffff30 <line:443:11, col:109> Text="   #LOS_ERRNO_QUEUE_READ_SIZE_TOO_SMALL The buffer size passed in during queue reading is less than"
|   |   |-TextComment 0xffff50 <line:444:3, col:18> Text=" the queue size."
|   |   `-TextComment 0xffff70 <line:445:3> Text=" "
|   |-BlockCommandComment 0xffffd0 <col:4, line:447:3> Name="par"
|   | `-ParagraphComment 0x10001a0 <line:445:8, line:447:3>
|   |   |-TextComment 0x1000000 <line:445:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1000020 <line:446:3> Text=" "
|   |   |-HTMLStartTagComment 0x1000040 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1000080 <col:8, col:11> Name="li"
|   |   |-TextComment 0x10000c0 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x10000e0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x1000110 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x1000140 <line:447:3> Text=" "
|   `-BlockCommandComment 0x10001c0 <col:4, col:44> Name="see"
|     `-ParagraphComment 0x1000220 <col:8, col:44>
|       `-TextComment 0x10001f0 <col:8, col:44> Text=" LOS_QueueWriteCopy | LOS_QueueCreate"
|-FunctionDecl 0xf991a8 <line:495:1, line:498:48> line:495:15 LOS_QueueWriteCopy 'UINT32 (UINT32, void *, UINT32, UINT32)' extern
| |-ParmVarDecl 0xf98d38 <col:34, col:41> col:41 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf98db8 <main/los_compiler.h:327:23, main/los_queue.h:496:40> col:40 bufferAddr 'void *'
| |-ParmVarDecl 0xf98e30 <line:497:34, col:41> col:41 bufferSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf98ea8 <line:498:34, col:41> col:41 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x1001a60 <line:455:3, line:493:43>
|   |-ParagraphComment 0x10003b0 <line:455:3>
|   | `-TextComment 0x1000380 <col:3> Text=" "
|   |-VerbatimLineComment 0x10003d0 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x1000440 <line:456:3>
|   | `-TextComment 0x1000410 <col:3> Text=" "
|   |-BlockCommandComment 0x1000460 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0x10004c0 <col:10, col:34>
|   |   `-TextComment 0x1000490 <col:10, col:34> Text=" Write data into a queue."
|   |-ParagraphComment 0x1000510 <line:458:3>
|   | `-TextComment 0x10004e0 <col:3> Text=" "
|   |-BlockCommandComment 0x1000530 <col:4, line:461:3> Name="par"
|   | `-ParagraphComment 0x1000600 <line:458:8, line:461:3>
|   |   |-TextComment 0x1000560 <line:458:8, col:20> Text=" Description:"
|   |   |-TextComment 0x1000580 <line:459:3, col:112> Text=" This API is used to write the data of the size specified by bufferSize and stored at the address specified by"
|   |   |-TextComment 0x10005a0 <line:460:3, col:27> Text=" bufferAddr into a queue."
|   |   `-TextComment 0x10005c0 <line:461:3> Text=" "
|   |-BlockCommandComment 0x1000620 <col:4, line:469:8> Name="attention"
|   | `-ParagraphComment 0x1000b70 <line:462:3, line:469:8>
|   |   |-TextComment 0x1000650 <line:462:3> Text=" "
|   |   |-HTMLStartTagComment 0x1000670 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x10006b0 <line:463:3> Text=" "
|   |   |-HTMLStartTagComment 0x10006d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1000710 <col:8, col:52> Text="The specific queue should be created firstly."
|   |   |-HTMLEndTagComment 0x1000730 <col:53, col:57> Name="li"
|   |   |-TextComment 0x1000760 <line:464:3> Text=" "
|   |   |-HTMLStartTagComment 0x1000780 <col:4, col:7> Name="li"
|   |   |-TextComment 0x10007c0 <col:8, col:74> Text="Do not read or write a queue in unblocking modes such as interrupt."
|   |   |-HTMLEndTagComment 0x10007e0 <col:75, col:79> Name="li"
|   |   |-TextComment 0x1000810 <line:465:3> Text=" "
|   |   |-HTMLStartTagComment 0x1000830 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1000870 <col:8, col:73> Text="This API cannot be called before the Huawei LiteOS is initialized."
|   |   |-HTMLEndTagComment 0x1000890 <col:74, col:78> Name="li"
|   |   |-TextComment 0x10008c0 <line:466:3> Text=" "
|   |   |-HTMLStartTagComment 0x10008e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1000920 <col:8, col:110> Text="The data to be written is of the size specified by bufferSize and is stored at the address specified by"
|   |   |-TextComment 0x1000940 <line:467:3, col:14> Text=" BufferAddr."
|   |   |-HTMLEndTagComment 0x1000980 <col:15, col:19> Name="li"
|   |   |-TextComment 0x10009b0 <line:468:3> Text=" "
|   |   |-HTMLStartTagComment 0x10009d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1000a10 <col:8, col:47> Text="The argument timeOut is a relative time."
|   |   |-HTMLEndTagComment 0x1000a30 <col:48, col:52> Name="li"
|   |   |-TextComment 0x1000a60 <line:469:3> Text=" "
|   |   `-HTMLEndTagComment 0x1000a80 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1000bc0 <line:471:3>
|   | `-TextComment 0x1000b90 <col:3> Text=" "
|   |-ParamCommandComment 0x1000be0 <col:4, line:473:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x1000cc0 <line:471:18, line:473:3>
|   |   |-TextComment 0x1000c40 <line:471:18, col:92> Text="        [IN]        Queue ID created by LOS_QueueCreate. The value range is"
|   |   |-TextComment 0x1000c60 <line:472:3, col:35> Text=" [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x1000c80 <line:473:3> Text=" "
|   |-ParamCommandComment 0x1000ce0 <col:4, line:475:3> [in] implicitly Param="bufferAddr" ParamIndex=1
|   | `-ParagraphComment 0x1000dc0 <line:473:21, line:475:3>
|   |   |-TextComment 0x1000d40 <line:473:21, col:114> Text="     [IN]        Starting address that stores the data to be written.The starting address must"
|   |   |-TextComment 0x1000d60 <line:474:3, col:15> Text=" not be null."
|   |   `-TextComment 0x1000d80 <line:475:3> Text=" "
|   |-ParamCommandComment 0x1000de0 <col:4, line:476:3> [in] implicitly Param="bufferSize" ParamIndex=2
|   | `-ParagraphComment 0x1000e90 <line:475:21, line:476:3>
|   |   |-TextComment 0x1000e40 <line:475:21, col:110> Text="     [IN]        Passed-in buffer size. The value range is [1,USHRT_MAX - sizeof(UINT32)]."
|   |   `-TextComment 0x1000e60 <line:476:3> Text=" "
|   |-ParamCommandComment 0x1000eb0 <col:4, col:102> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0x1000f40 <col:18, col:102>
|   |   `-TextComment 0x1000f10 <col:18, col:102> Text="        [IN]        Expiry time. The value range is [0,LOS_WAIT_FOREVER](unit: Tick)."
|   |-ParagraphComment 0x1000f90 <line:478:3>
|   | `-TextComment 0x1000f60 <col:3> Text=" "
|   |-BlockCommandComment 0x1000fb0 <col:4, line:479:3> Name="retval"
|   | `-ParagraphComment 0x1001030 <line:478:11, line:479:3>
|   |   |-TextComment 0x1000fe0 <line:478:11, col:101> Text="   #LOS_OK                                 The data is successfully written into the queue."
|   |   `-TextComment 0x1001000 <line:479:3> Text=" "
|   |-BlockCommandComment 0x1001050 <col:4, line:480:3> Name="retval"
|   | `-ParagraphComment 0x10010d0 <line:479:11, line:480:3>
|   |   |-TextComment 0x1001080 <line:479:11, col:112> Text="   #LOS_ERRNO_QUEUE_INVALID                The queue handle passed in during queue writing is invalid."
|   |   `-TextComment 0x10010a0 <line:480:3> Text=" "
|   |-BlockCommandComment 0x10010f0 <col:4, line:481:3> Name="retval"
|   | `-ParagraphComment 0x1001170 <line:480:11, line:481:3>
|   |   |-TextComment 0x1001120 <line:480:11, col:104> Text="   #LOS_ERRNO_QUEUE_WRITE_PTR_NULL         The pointer passed in during queue writing is null."
|   |   `-TextComment 0x1001140 <line:481:3> Text=" "
|   |-BlockCommandComment 0x1001190 <col:4, line:482:3> Name="retval"
|   | `-ParagraphComment 0x1001210 <line:481:11, line:482:3>
|   |   |-TextComment 0x10011c0 <line:481:11, col:105> Text="   #LOS_ERRNO_QUEUE_WRITESIZE_ISZERO       The buffer size passed in during queue writing is 0."
|   |   `-TextComment 0x10011e0 <line:482:3> Text=" "
|   |-BlockCommandComment 0x1001230 <col:4, line:484:3> Name="retval"
|   | `-ParagraphComment 0x10012e0 <line:482:11, line:484:3>
|   |   |-TextComment 0x1001260 <line:482:11, col:114> Text="   #LOS_ERRNO_QUEUE_WRITE_IN_INTERRUPT     The queue cannot be written during an interrupt when the time"
|   |   |-TextComment 0x1001280 <line:483:3, col:47> Text=" for waiting to processing the queue expires."
|   |   `-TextComment 0x10012a0 <line:484:3> Text=" "
|   |-BlockCommandComment 0x1001300 <col:4, line:485:3> Name="retval"
|   | `-ParagraphComment 0x1001380 <line:484:11, line:485:3>
|   |   |-TextComment 0x1001330 <line:484:11, col:109> Text="   #LOS_ERRNO_QUEUE_NOT_CREATE             The queue into which the data is written is not created."
|   |   `-TextComment 0x1001350 <line:485:3> Text=" "
|   |-BlockCommandComment 0x10013a0 <col:4, line:487:3> Name="retval"
|   | `-ParagraphComment 0x1001450 <line:485:11, line:487:3>
|   |   |-TextComment 0x10013d0 <line:485:11, col:114> Text="   #LOS_ERRNO_QUEUE_WRITE_SIZE_TOO_BIG     The buffer size passed in during queue writing is bigger than"
|   |   |-TextComment 0x10013f0 <line:486:3, col:18> Text=" the queue size."
|   |   `-TextComment 0x1001410 <line:487:3> Text=" "
|   |-BlockCommandComment 0x1001470 <col:4, line:488:3> Name="retval"
|   | `-ParagraphComment 0x10014f0 <line:487:11, line:488:3>
|   |   |-TextComment 0x10014a0 <line:487:11, col:100> Text="   #LOS_ERRNO_QUEUE_ISFULL                 No free node is available during queue writing."
|   |   `-TextComment 0x10014c0 <line:488:3> Text=" "
|   |-BlockCommandComment 0x1001510 <col:4, line:490:3> Name="retval"
|   | `-ParagraphComment 0x10015c0 <line:488:11, line:490:3>
|   |   |-TextComment 0x1001540 <line:488:11, col:104> Text="   #LOS_ERRNO_QUEUE_PEND_IN_LOCK           The task is forbidden to be blocked on a queue when"
|   |   |-TextComment 0x1001560 <line:489:3, col:22> Text=" the task is locked."
|   |   `-TextComment 0x1001580 <line:490:3> Text=" "
|   |-BlockCommandComment 0x10015e0 <col:4, line:491:3> Name="retval"
|   | `-ParagraphComment 0x1001660 <line:490:11, line:491:3>
|   |   |-TextComment 0x1001610 <line:490:11, col:110> Text="   #LOS_ERRNO_QUEUE_TIMEOUT                The time set for waiting to processing the queue expires."
|   |   `-TextComment 0x1001630 <line:491:3> Text=" "
|   |-BlockCommandComment 0x1001680 <col:4, line:493:3> Name="par"
|   | `-ParagraphComment 0x1001850 <line:491:8, line:493:3>
|   |   |-TextComment 0x10016b0 <line:491:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x10016d0 <line:492:3> Text=" "
|   |   |-HTMLStartTagComment 0x10016f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1001730 <col:8, col:11> Name="li"
|   |   |-TextComment 0x1001770 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1001790 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x10017c0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x10017f0 <line:493:3> Text=" "
|   `-BlockCommandComment 0x1001870 <col:4, col:43> Name="see"
|     `-ParagraphComment 0x10018d0 <col:8, col:43>
|       `-TextComment 0x10018a0 <col:8, col:43> Text=" LOS_QueueReadCopy | LOS_QueueCreate"
|-FunctionDecl 0xf994c0 <line:544:1, line:547:43> line:544:15 LOS_QueueRead 'UINT32 (UINT32, void *, UINT32, UINT32)' extern
| |-ParmVarDecl 0xf992a8 <col:29, col:36> col:36 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf99328 <main/los_compiler.h:327:23, main/los_queue.h:545:35> col:35 bufferAddr 'void *'
| |-ParmVarDecl 0xf993a0 <line:546:29, col:36> col:36 bufferSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf99418 <line:547:29, col:36> col:36 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x1003300 <line:501:3, line:542:40>
|   |-ParagraphComment 0x1001b00 <line:501:3>
|   | `-TextComment 0x1001ad0 <col:3> Text=" "
|   |-VerbatimLineComment 0x1001b20 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x1001b90 <line:502:3>
|   | `-TextComment 0x1001b60 <col:3> Text=" "
|   |-BlockCommandComment 0x1001bb0 <col:4, col:23> Name="brief"
|   | `-ParagraphComment 0x1001c10 <col:10, col:23>
|   |   `-TextComment 0x1001be0 <col:10, col:23> Text=" Read a queue."
|   |-ParagraphComment 0x1001c60 <line:504:3>
|   | `-TextComment 0x1001c30 <col:3> Text=" "
|   |-BlockCommandComment 0x1001c80 <col:4, line:507:3> Name="par"
|   | `-ParagraphComment 0x1001d50 <line:504:8, line:507:3>
|   |   |-TextComment 0x1001cb0 <line:504:8, col:20> Text=" Description:"
|   |   |-TextComment 0x1001cd0 <line:505:3, col:110> Text=" This API is used to read the address of data in a specified queue, and store it to the address specified by"
|   |   |-TextComment 0x1001cf0 <line:506:3, col:14> Text=" bufferAddr."
|   |   `-TextComment 0x1001d10 <line:507:3> Text=" "
|   |-BlockCommandComment 0x1001d70 <col:4, line:519:8> Name="attention"
|   | `-ParagraphComment 0x1002540 <line:508:3, line:519:8>
|   |   |-TextComment 0x1001da0 <line:508:3> Text=" "
|   |   |-HTMLStartTagComment 0x1001dc0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1001e00 <line:509:3> Text=" "
|   |   |-HTMLStartTagComment 0x1001e20 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1001e60 <col:8, col:52> Text="The specific queue should be created firstly."
|   |   |-HTMLEndTagComment 0x1001e80 <col:53, col:57> Name="li"
|   |   |-TextComment 0x1001eb0 <line:510:3> Text=" "
|   |   |-HTMLStartTagComment 0x1001ed0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1001f10 <col:8, col:108> Text="Queue reading adopts the fist in first out (FIFO) mode. The data that is first stored in the queue is"
|   |   |-TextComment 0x1001f30 <line:511:3, col:14> Text=" read first."
|   |   |-HTMLEndTagComment 0x1001f50 <col:15, col:19> Name="li"
|   |   |-TextComment 0x1001f80 <line:512:3> Text=" "
|   |   |-HTMLStartTagComment 0x1001fa0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1001fe0 <col:8, col:51> Text="bufferAddr stores the obtained data address."
|   |   |-HTMLEndTagComment 0x1002000 <col:52, col:56> Name="li"
|   |   |-TextComment 0x1002030 <line:513:3> Text=" "
|   |   |-HTMLStartTagComment 0x1002050 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1002090 <col:8, col:77> Text="Do not read or write a queue in unblocking modes such as an interrupt."
|   |   |-HTMLEndTagComment 0x10020b0 <col:78, col:82> Name="li"
|   |   |-TextComment 0x10020e0 <line:514:3> Text=" "
|   |   |-HTMLStartTagComment 0x1002100 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1002140 <col:8, col:73> Text="This API cannot be called before the Huawei LiteOS is initialized."
|   |   |-HTMLEndTagComment 0x1002160 <col:74, col:78> Name="li"
|   |   |-TextComment 0x1002190 <line:515:3> Text=" "
|   |   |-HTMLStartTagComment 0x10021b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x10021f0 <col:8, col:47> Text="The argument timeOut is a relative time."
|   |   |-HTMLEndTagComment 0x1002210 <col:48, col:52> Name="li"
|   |   |-TextComment 0x1002240 <line:516:3> Text=" "
|   |   |-HTMLStartTagComment 0x1002260 <col:4, col:7> Name="li"
|   |   |-TextComment 0x10022a0 <col:8, col:96> Text="The bufferSize is not really used in LOS_QueueRead, because the interface is only used to"
|   |   |-TextComment 0x10022c0 <line:517:3, col:30> Text=" obtain the address of data."
|   |   |-HTMLEndTagComment 0x10022e0 <col:31, col:35> Name="li"
|   |   |-TextComment 0x1002310 <line:518:3> Text=" "
|   |   |-HTMLStartTagComment 0x1002330 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1002370 <col:8, col:92> Text="The buffer which the bufferAddr pointing to must be greater than or equal to 4 bytes."
|   |   |-HTMLEndTagComment 0x1002390 <col:93, col:97> Name="li"
|   |   |-TextComment 0x10023c0 <line:519:3> Text=" "
|   |   `-HTMLEndTagComment 0x10023e0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1002590 <line:521:3>
|   | `-TextComment 0x1002560 <col:3> Text=" "
|   |-ParamCommandComment 0x10025b0 <col:4, line:523:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x1002690 <line:521:18, line:523:3>
|   |   |-TextComment 0x1002610 <line:521:18, col:92> Text="        [IN]        Queue ID created by LOS_QueueCreate. The value range is"
|   |   |-TextComment 0x1002630 <line:522:3, col:35> Text=" [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x1002650 <line:523:3> Text=" "
|   |-ParamCommandComment 0x10026b0 <col:4, line:525:3> [in] implicitly Param="bufferAddr" ParamIndex=1
|   | `-ParagraphComment 0x1002790 <line:523:21, line:525:3>
|   |   |-TextComment 0x1002710 <line:523:21, col:110> Text="     [OUT]       Starting address that stores the obtained data. The starting address must"
|   |   |-TextComment 0x1002730 <line:524:3, col:15> Text=" not be null."
|   |   `-TextComment 0x1002750 <line:525:3> Text=" "
|   |-ParamCommandComment 0x10027b0 <col:4, line:526:3> [in] implicitly Param="bufferSize" ParamIndex=2
|   | `-ParagraphComment 0x1002860 <line:525:21, line:526:3>
|   |   |-TextComment 0x1002810 <line:525:21, col:115> Text="     [IN]        Passed-in buffer size, which must not be 0. The value range is [1,0xffffffff]."
|   |   `-TextComment 0x1002830 <line:526:3> Text=" "
|   |-ParamCommandComment 0x1002880 <col:4, col:102> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0x1002910 <col:18, col:102>
|   |   `-TextComment 0x10028e0 <col:18, col:102> Text="        [IN]        Expiry time. The value range is [0,LOS_WAIT_FOREVER](unit: Tick)."
|   |-ParagraphComment 0x1002960 <line:528:3>
|   | `-TextComment 0x1002930 <col:3> Text=" "
|   |-BlockCommandComment 0x10029a0 <col:4, line:529:3> Name="retval"
|   | `-ParagraphComment 0x1002a20 <line:528:11, line:529:3>
|   |   |-TextComment 0x10029d0 <line:528:11, col:82> Text="   #LOS_OK                               The queue is successfully read."
|   |   `-TextComment 0x10029f0 <line:529:3> Text=" "
|   |-BlockCommandComment 0x1002a40 <col:4, line:530:3> Name="retval"
|   | `-ParagraphComment 0x1002ac0 <line:529:11, line:530:3>
|   |   |-TextComment 0x1002a70 <line:529:11, col:105> Text="   #LOS_ERRNO_QUEUE_INVALID              The handle of the queue that is being read is invalid."
|   |   `-TextComment 0x1002a90 <line:530:3> Text=" "
|   |-BlockCommandComment 0x1002ae0 <col:4, line:531:3> Name="retval"
|   | `-ParagraphComment 0x1002b60 <line:530:11, line:531:3>
|   |   |-TextComment 0x1002b10 <line:530:11, col:102> Text="   #LOS_ERRNO_QUEUE_READ_PTR_NULL        The pointer passed in during queue reading is null."
|   |   `-TextComment 0x1002b30 <line:531:3> Text=" "
|   |-BlockCommandComment 0x1002b80 <col:4, line:532:3> Name="retval"
|   | `-ParagraphComment 0x1002c00 <line:531:11, line:532:3>
|   |   |-TextComment 0x1002bb0 <line:531:11, col:103> Text="   #LOS_ERRNO_QUEUE_READSIZE_ISZERO      The buffer size passed in during queue reading is 0."
|   |   `-TextComment 0x1002bd0 <line:532:3> Text=" "
|   |-BlockCommandComment 0x1002c20 <col:4, line:534:3> Name="retval"
|   | `-ParagraphComment 0x1002cd0 <line:532:11, line:534:3>
|   |   |-TextComment 0x1002c50 <line:532:11, col:113> Text="   #LOS_ERRNO_QUEUE_READ_IN_INTERRUPT    The queue cannot be read during an interrupt when the time for"
|   |   |-TextComment 0x1002c70 <line:533:3, col:43> Text=" waiting to processing the queue expires."
|   |   `-TextComment 0x1002c90 <line:534:3> Text=" "
|   |-BlockCommandComment 0x1002cf0 <col:4, line:535:3> Name="retval"
|   | `-ParagraphComment 0x1002d70 <line:534:11, line:535:3>
|   |   |-TextComment 0x1002d20 <line:534:11, col:87> Text="   #LOS_ERRNO_QUEUE_NOT_CREATE           The queue to be read is not created."
|   |   `-TextComment 0x1002d40 <line:535:3> Text=" "
|   |-BlockCommandComment 0x1002d90 <col:4, line:537:3> Name="retval"
|   | `-ParagraphComment 0x1002e40 <line:535:11, line:537:3>
|   |   |-TextComment 0x1002dc0 <line:535:11, col:115> Text="   #LOS_ERRNO_QUEUE_ISEMPTY              No resource is in the queue that is being read when the time for"
|   |   |-TextComment 0x1002de0 <line:536:3, col:43> Text=" waiting to processing the queue expires."
|   |   `-TextComment 0x1002e00 <line:537:3> Text=" "
|   |-BlockCommandComment 0x1002e60 <col:4, line:539:3> Name="retval"
|   | `-ParagraphComment 0x1002f10 <line:537:11, line:539:3>
|   |   |-TextComment 0x1002e90 <line:537:11, col:114> Text="   #LOS_ERRNO_QUEUE_PEND_IN_LOCK         The task is forbidden to be blocked on a queue when the task is"
|   |   |-TextComment 0x1002eb0 <line:538:3, col:10> Text=" locked."
|   |   `-TextComment 0x1002ed0 <line:539:3> Text=" "
|   |-BlockCommandComment 0x1002f30 <col:4, line:540:3> Name="retval"
|   | `-ParagraphComment 0x1002fb0 <line:539:11, line:540:3>
|   |   |-TextComment 0x1002f60 <line:539:11, col:108> Text="   #LOS_ERRNO_QUEUE_TIMEOUT              The time set for waiting to processing the queue expires."
|   |   `-TextComment 0x1002f80 <line:540:3> Text=" "
|   |-BlockCommandComment 0x1002fd0 <col:4, line:542:3> Name="par"
|   | `-ParagraphComment 0x10031a0 <line:540:8, line:542:3>
|   |   |-TextComment 0x1003000 <line:540:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1003020 <line:541:3> Text=" "
|   |   |-HTMLStartTagComment 0x1003040 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1003080 <col:8, col:11> Name="li"
|   |   |-TextComment 0x10030c0 <col:12, col:74> Text="los_queue.h: The header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x10030e0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x1003110 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x1003140 <line:542:3> Text=" "
|   `-BlockCommandComment 0x10031c0 <col:4, col:40> Name="see"
|     `-ParagraphComment 0x1003220 <col:8, col:40>
|       `-TextComment 0x10031f0 <col:8, col:40> Text=" LOS_QueueWrite | LOS_QueueCreate"
|-FunctionDecl 0xf997d0 <line:591:1, line:594:44> line:591:15 LOS_QueueWrite 'UINT32 (UINT32, void *, UINT32, UINT32)' extern
| |-ParmVarDecl 0xf995b8 <col:30, col:37> col:37 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf99638 <main/los_compiler.h:327:23, main/los_queue.h:592:36> col:36 bufferAddr 'void *'
| |-ParmVarDecl 0xf996b0 <line:593:30, col:37> col:37 bufferSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf99728 <line:594:30, col:37> col:37 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x1004ab0 <line:550:3, line:589:39>
|   |-ParagraphComment 0x10033a0 <line:550:3>
|   | `-TextComment 0x1003370 <col:3> Text=" "
|   |-VerbatimLineComment 0x10033c0 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x1003430 <line:551:3>
|   | `-TextComment 0x1003400 <col:3> Text=" "
|   |-BlockCommandComment 0x1003450 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0x10034b0 <col:10, col:34>
|   |   `-TextComment 0x1003480 <col:10, col:34> Text=" Write data into a queue."
|   |-ParagraphComment 0x1003500 <line:553:3>
|   | `-TextComment 0x10034d0 <col:3> Text=" "
|   |-BlockCommandComment 0x1003520 <col:4, line:555:3> Name="par"
|   | `-ParagraphComment 0x10035d0 <line:553:8, line:555:3>
|   |   |-TextComment 0x1003550 <line:553:8, col:20> Text=" Description:"
|   |   |-TextComment 0x1003570 <line:554:3, col:86> Text=" This API is used to write the address of data specified by bufferAddr into a queue."
|   |   `-TextComment 0x1003590 <line:555:3> Text=" "
|   |-BlockCommandComment 0x10035f0 <col:4, line:565:8> Name="attention"
|   | `-ParagraphComment 0x1003c50 <line:556:3, line:565:8>
|   |   |-TextComment 0x1003620 <line:556:3> Text=" "
|   |   |-HTMLStartTagComment 0x1003640 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1003680 <line:557:3> Text=" "
|   |   |-HTMLStartTagComment 0x10036a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x10036e0 <col:8, col:52> Text="The specific queue should be created firstly."
|   |   |-HTMLEndTagComment 0x1003700 <col:53, col:57> Name="li"
|   |   |-TextComment 0x1003730 <line:558:3> Text=" "
|   |   |-HTMLStartTagComment 0x1003750 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1003790 <col:8, col:77> Text="Do not read or write a queue in unblocking modes such as an interrupt."
|   |   |-HTMLEndTagComment 0x10037b0 <col:78, col:82> Name="li"
|   |   |-TextComment 0x10037e0 <line:559:3> Text=" "
|   |   |-HTMLStartTagComment 0x1003800 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1003840 <col:8, col:73> Text="This API cannot be called before the Huawei LiteOS is initialized."
|   |   |-HTMLEndTagComment 0x1003860 <col:74, col:78> Name="li"
|   |   |-TextComment 0x1003890 <line:560:3> Text=" "
|   |   |-HTMLStartTagComment 0x10038b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x10038f0 <col:8, col:105> Text="The address of the data of the size specified by bufferSize and stored at the address specified by"
|   |   |-TextComment 0x1003910 <line:561:3, col:31> Text=" BufferAddr is to be written."
|   |   |-HTMLEndTagComment 0x1003930 <col:32, col:36> Name="li"
|   |   |-TextComment 0x1003960 <line:562:3> Text=" "
|   |   |-HTMLStartTagComment 0x10039b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x10039f0 <col:8, col:47> Text="The argument timeOut is a relative time."
|   |   |-HTMLEndTagComment 0x1003a10 <col:48, col:52> Name="li"
|   |   |-TextComment 0x1003a40 <line:563:3> Text=" "
|   |   |-HTMLStartTagComment 0x1003a60 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1003aa0 <col:8, col:115> Text="The bufferSize is not really used in LOS_QueueWrite, because the interface is only used to write the address"
|   |   |-TextComment 0x1003ac0 <line:564:3, col:48> Text=" of data specified by bufferAddr into a queue."
|   |   |-HTMLEndTagComment 0x1003ae0 <col:49, col:53> Name="li"
|   |   |-TextComment 0x1003b10 <line:565:3> Text=" "
|   |   `-HTMLEndTagComment 0x1003b30 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1003ca0 <line:567:3>
|   | `-TextComment 0x1003c70 <col:3> Text=" "
|   |-ParamCommandComment 0x1003cc0 <col:4, line:569:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x1003da0 <line:567:18, line:569:3>
|   |   |-TextComment 0x1003d20 <line:567:18, col:92> Text="        [IN]        Queue ID created by LOS_QueueCreate. The value range is"
|   |   |-TextComment 0x1003d40 <line:568:3, col:35> Text=" [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x1003d60 <line:569:3> Text=" "
|   |-ParamCommandComment 0x1003dc0 <col:4, line:571:3> [in] implicitly Param="bufferAddr" ParamIndex=1
|   | `-ParagraphComment 0x1003ea0 <line:569:21, line:571:3>
|   |   |-TextComment 0x1003e20 <line:569:21, col:110> Text="     [IN]        Starting address that stores the data to be written. The starting address"
|   |   |-TextComment 0x1003e40 <line:570:3, col:20> Text=" must not be null."
|   |   `-TextComment 0x1003e60 <line:571:3> Text=" "
|   |-ParamCommandComment 0x1003ec0 <col:4, line:572:3> [in] implicitly Param="bufferSize" ParamIndex=2
|   | `-ParagraphComment 0x1003f70 <line:571:21, line:572:3>
|   |   |-TextComment 0x1003f20 <line:571:21, col:115> Text="     [IN]        Passed-in buffer size, which must not be 0. The value range is [1,0xffffffff]."
|   |   `-TextComment 0x1003f40 <line:572:3> Text=" "
|   |-ParamCommandComment 0x1003f90 <col:4, col:102> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0x1004020 <col:18, col:102>
|   |   `-TextComment 0x1003ff0 <col:18, col:102> Text="        [IN]        Expiry time. The value range is [0,LOS_WAIT_FOREVER](unit: Tick)."
|   |-ParagraphComment 0x1004070 <line:574:3>
|   | `-TextComment 0x1004040 <col:3> Text=" "
|   |-BlockCommandComment 0x1004090 <col:4, line:575:3> Name="retval"
|   | `-ParagraphComment 0x1004110 <line:574:11, line:575:3>
|   |   |-TextComment 0x10040c0 <line:574:11, col:100> Text="   #LOS_OK                                The data is successfully written into the queue."
|   |   `-TextComment 0x10040e0 <line:575:3> Text=" "
|   |-BlockCommandComment 0x1004130 <col:4, line:576:3> Name="retval"
|   | `-ParagraphComment 0x10041b0 <line:575:11, line:576:3>
|   |   |-TextComment 0x1004160 <line:575:11, col:111> Text="   #LOS_ERRNO_QUEUE_INVALID               The queue handle passed in during queue writing is invalid."
|   |   `-TextComment 0x1004180 <line:576:3> Text=" "
|   |-BlockCommandComment 0x10041d0 <col:4, line:577:3> Name="retval"
|   | `-ParagraphComment 0x1004250 <line:576:11, line:577:3>
|   |   |-TextComment 0x1004200 <line:576:11, col:103> Text="   #LOS_ERRNO_QUEUE_WRITE_PTR_NULL        The pointer passed in during queue writing is null."
|   |   `-TextComment 0x1004220 <line:577:3> Text=" "
|   |-BlockCommandComment 0x1004270 <col:4, line:578:3> Name="retval"
|   | `-ParagraphComment 0x10042f0 <line:577:11, line:578:3>
|   |   |-TextComment 0x10042a0 <line:577:11, col:104> Text="   #LOS_ERRNO_QUEUE_WRITESIZE_ISZERO      The buffer size passed in during queue writing is 0."
|   |   `-TextComment 0x10042c0 <line:578:3> Text=" "
|   |-BlockCommandComment 0x1004310 <col:4, line:580:3> Name="retval"
|   | `-ParagraphComment 0x10043c0 <line:578:11, line:580:3>
|   |   |-TextComment 0x1004340 <line:578:11, col:117> Text="   #LOS_ERRNO_QUEUE_WRITE_IN_INTERRUPT    The queue cannot be written during an interrupt when the time for"
|   |   |-TextComment 0x1004360 <line:579:3, col:43> Text=" waiting to processing the queue expires."
|   |   `-TextComment 0x1004380 <line:580:3> Text=" "
|   |-BlockCommandComment 0x10043e0 <col:4, line:581:3> Name="retval"
|   | `-ParagraphComment 0x1004460 <line:580:11, line:581:3>
|   |   |-TextComment 0x1004410 <line:580:11, col:108> Text="   #LOS_ERRNO_QUEUE_NOT_CREATE            The queue into which the data is written is not created."
|   |   `-TextComment 0x1004430 <line:581:3> Text=" "
|   |-BlockCommandComment 0x1004480 <col:4, line:583:3> Name="retval"
|   | `-ParagraphComment 0x1004530 <line:581:11, line:583:3>
|   |   |-TextComment 0x10044b0 <line:581:11, col:113> Text="   #LOS_ERRNO_QUEUE_WRITE_SIZE_TOO_BIG    The buffer size passed in during queue writing is bigger than"
|   |   |-TextComment 0x10044d0 <line:582:3, col:18> Text=" the queue size."
|   |   `-TextComment 0x10044f0 <line:583:3> Text=" "
|   |-BlockCommandComment 0x1004550 <col:4, line:584:3> Name="retval"
|   | `-ParagraphComment 0x10045d0 <line:583:11, line:584:3>
|   |   |-TextComment 0x1004580 <line:583:11, col:99> Text="   #LOS_ERRNO_QUEUE_ISFULL                No free node is available during queue writing."
|   |   `-TextComment 0x10045a0 <line:584:3> Text=" "
|   |-BlockCommandComment 0x10045f0 <col:4, line:586:3> Name="retval"
|   | `-ParagraphComment 0x10046a0 <line:584:11, line:586:3>
|   |   |-TextComment 0x1004620 <line:584:11, col:115> Text="   #LOS_ERRNO_QUEUE_PEND_IN_LOCK          The task is forbidden to be blocked on a queue when the task is"
|   |   |-TextComment 0x1004640 <line:585:3, col:10> Text=" locked."
|   |   `-TextComment 0x1004660 <line:586:3> Text=" "
|   |-BlockCommandComment 0x10046c0 <col:4, line:587:3> Name="retval"
|   | `-ParagraphComment 0x1004740 <line:586:11, line:587:3>
|   |   |-TextComment 0x10046f0 <line:586:11, col:109> Text="   #LOS_ERRNO_QUEUE_TIMEOUT               The time set for waiting to processing the queue expires."
|   |   `-TextComment 0x1004710 <line:587:3> Text=" "
|   |-BlockCommandComment 0x1004760 <col:4, line:589:3> Name="par"
|   | `-ParagraphComment 0x1004930 <line:587:8, line:589:3>
|   |   |-TextComment 0x1004790 <line:587:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x10047b0 <line:588:3> Text=" "
|   |   |-HTMLStartTagComment 0x10047d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1004810 <col:8, col:11> Name="li"
|   |   |-TextComment 0x1004850 <col:12, col:74> Text="los_queue.h: The header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1004870 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x10048a0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x10048d0 <line:589:3> Text=" "
|   `-BlockCommandComment 0x1004950 <col:4, col:39> Name="see"
|     `-ParagraphComment 0x10049c0 <col:8, col:39>
|       `-TextComment 0x1004980 <col:8, col:39> Text=" LOS_QueueRead | LOS_QueueCreate"
|-FunctionDecl 0xf99ae0 <line:638:1, line:641:48> line:638:15 LOS_QueueWriteHead 'UINT32 (UINT32, void *, UINT32, UINT32)' extern
| |-ParmVarDecl 0xf998c8 <col:34, col:41> col:41 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf99948 <main/los_compiler.h:327:23, main/los_queue.h:639:40> col:40 bufferAddr 'void *'
| |-ParmVarDecl 0xf999c0 <line:640:34, col:41> col:41 bufferSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf99a38 <line:641:34, col:41> col:41 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x1006190 <line:597:3, line:636:39>
|   |-ParagraphComment 0x1004b50 <line:597:3>
|   | `-TextComment 0x1004b20 <col:3> Text=" "
|   |-VerbatimLineComment 0x1004b70 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x1004be0 <line:598:3>
|   | `-TextComment 0x1004bb0 <col:3> Text=" "
|   |-BlockCommandComment 0x1004c00 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x1004c60 <col:10, col:41>
|   |   `-TextComment 0x1004c30 <col:10, col:41> Text=" Write data into a queue header."
|   |-ParagraphComment 0x1004cb0 <line:600:3>
|   | `-TextComment 0x1004c80 <col:3> Text=" "
|   |-BlockCommandComment 0x1004cd0 <col:4, line:603:3> Name="par"
|   | `-ParagraphComment 0x1004da0 <line:600:8, line:603:3>
|   |   |-TextComment 0x1004d00 <line:600:8, col:20> Text=" Description:"
|   |   |-TextComment 0x1004d20 <line:601:3, col:112> Text=" This API is used to write the data of the size specified by bufferSize and stored at the address specified by"
|   |   |-TextComment 0x1004d40 <line:602:3, col:34> Text=" bufferAddr into a queue header."
|   |   `-TextComment 0x1004d60 <line:603:3> Text=" "
|   |-BlockCommandComment 0x1004dc0 <col:4, line:612:8> Name="attention"
|   | `-ParagraphComment 0x1005330 <line:604:3, line:612:8>
|   |   |-TextComment 0x1004df0 <line:604:3> Text=" "
|   |   |-HTMLStartTagComment 0x1004e10 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1004e50 <line:605:3> Text=" "
|   |   |-HTMLStartTagComment 0x1004e70 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1004eb0 <col:8, col:77> Text="Do not read or write a queue in unblocking modes such as an interrupt."
|   |   |-HTMLEndTagComment 0x1004ed0 <col:78, col:82> Name="li"
|   |   |-TextComment 0x1004f00 <line:606:3> Text=" "
|   |   |-HTMLStartTagComment 0x1004f20 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1004f60 <col:8, col:73> Text="This API cannot be called before the Huawei LiteOS is initialized."
|   |   |-HTMLEndTagComment 0x1004f80 <col:74, col:78> Name="li"
|   |   |-TextComment 0x1004fb0 <line:607:3> Text=" "
|   |   |-HTMLStartTagComment 0x1004fd0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1005010 <col:8, col:105> Text="The address of the data of the size specified by bufferSize and stored at the address specified by"
|   |   |-TextComment 0x1005030 <line:608:3, col:31> Text=" BufferAddr is to be written."
|   |   |-HTMLEndTagComment 0x1005050 <col:32, col:36> Name="li"
|   |   |-TextComment 0x1005080 <line:609:3> Text=" "
|   |   |-HTMLStartTagComment 0x10050a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x10050e0 <col:8, col:47> Text="The argument timeOut is a relative time."
|   |   |-HTMLEndTagComment 0x1005100 <col:48, col:52> Name="li"
|   |   |-TextComment 0x1005130 <line:610:3> Text=" "
|   |   |-HTMLStartTagComment 0x1005150 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1005190 <col:8, col:118> Text="LOS_QueueRead and LOS_QueueWriteHead are a set of interfaces, and the two groups of interfaces need to be used."
|   |   |-TextComment 0x10051b0 <line:611:3> Text=" "
|   |   |-HTMLStartTagComment 0x10051d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1005210 <line:612:3> Text=" "
|   |   `-HTMLEndTagComment 0x1005230 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1005380 <line:614:3>
|   | `-TextComment 0x1005350 <col:3> Text=" "
|   |-ParamCommandComment 0x10053a0 <col:4, line:616:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x1005480 <line:614:18, line:616:3>
|   |   |-TextComment 0x1005400 <line:614:18, col:92> Text="        [IN]        Queue ID created by LOS_QueueCreate. The value range is"
|   |   |-TextComment 0x1005420 <line:615:3, col:35> Text=" [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x1005440 <line:616:3> Text=" "
|   |-ParamCommandComment 0x10054a0 <col:4, line:618:3> [in] implicitly Param="bufferAddr" ParamIndex=1
|   | `-ParagraphComment 0x1005580 <line:616:21, line:618:3>
|   |   |-TextComment 0x1005500 <line:616:21, col:110> Text="     [OUT]       Starting address that stores the data to be written. The starting address"
|   |   |-TextComment 0x1005520 <line:617:3, col:20> Text=" must not be null."
|   |   `-TextComment 0x1005540 <line:618:3> Text=" "
|   |-ParamCommandComment 0x10055a0 <col:4, line:619:3> [in] implicitly Param="bufferSize" ParamIndex=2
|   | `-ParagraphComment 0x1005650 <line:618:21, line:619:3>
|   |   |-TextComment 0x1005600 <line:618:21, col:115> Text="     [IN]        Passed-in buffer size, which must not be 0. The value range is [1,0xffffffff]."
|   |   `-TextComment 0x1005620 <line:619:3> Text=" "
|   |-ParamCommandComment 0x1005670 <col:4, col:102> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0x1005700 <col:18, col:102>
|   |   `-TextComment 0x10056d0 <col:18, col:102> Text="        [IN]        Expiry time. The value range is [0,LOS_WAIT_FOREVER](unit: Tick)."
|   |-ParagraphComment 0x1005750 <line:621:3>
|   | `-TextComment 0x1005720 <col:3> Text=" "
|   |-BlockCommandComment 0x1005770 <col:4, line:622:3> Name="retval"
|   | `-ParagraphComment 0x10057f0 <line:621:11, line:622:3>
|   |   |-TextComment 0x10057a0 <line:621:11, col:101> Text="   #LOS_OK                                 The data is successfully written into the queue."
|   |   `-TextComment 0x10057c0 <line:622:3> Text=" "
|   |-BlockCommandComment 0x1005810 <col:4, line:623:3> Name="retval"
|   | `-ParagraphComment 0x1005890 <line:622:11, line:623:3>
|   |   |-TextComment 0x1005840 <line:622:11, col:112> Text="   #LOS_ERRNO_QUEUE_INVALID                The queue handle passed in during queue writing is invalid."
|   |   `-TextComment 0x1005860 <line:623:3> Text=" "
|   |-BlockCommandComment 0x10058b0 <col:4, line:624:3> Name="retval"
|   | `-ParagraphComment 0x1005930 <line:623:11, line:624:3>
|   |   |-TextComment 0x10058e0 <line:623:11, col:104> Text="   #LOS_ERRNO_QUEUE_WRITE_PTR_NULL         The pointer passed in during queue writing is null."
|   |   `-TextComment 0x1005900 <line:624:3> Text=" "
|   |-BlockCommandComment 0x1005950 <col:4, line:625:3> Name="retval"
|   | `-ParagraphComment 0x10059e0 <line:624:11, line:625:3>
|   |   |-TextComment 0x1005980 <line:624:11, col:105> Text="   #LOS_ERRNO_QUEUE_WRITESIZE_ISZERO       The buffer size passed in during queue writing is 0."
|   |   `-TextComment 0x10059a0 <line:625:3> Text=" "
|   |-BlockCommandComment 0x1005a00 <col:4, line:627:3> Name="retval"
|   | `-ParagraphComment 0x1005ab0 <line:625:11, line:627:3>
|   |   |-TextComment 0x1005a30 <line:625:11, col:118> Text="   #LOS_ERRNO_QUEUE_WRITE_IN_INTERRUPT     The queue cannot be written during an interrupt when the time for"
|   |   |-TextComment 0x1005a50 <line:626:3, col:43> Text=" waiting to processing the queue expires."
|   |   `-TextComment 0x1005a70 <line:627:3> Text=" "
|   |-BlockCommandComment 0x1005ad0 <col:4, line:628:3> Name="retval"
|   | `-ParagraphComment 0x1005b50 <line:627:11, line:628:3>
|   |   |-TextComment 0x1005b00 <line:627:11, col:109> Text="   #LOS_ERRNO_QUEUE_NOT_CREATE             The queue into which the data is written is not created."
|   |   `-TextComment 0x1005b20 <line:628:3> Text=" "
|   |-BlockCommandComment 0x1005b70 <col:4, line:630:3> Name="retval"
|   | `-ParagraphComment 0x1005c20 <line:628:11, line:630:3>
|   |   |-TextComment 0x1005ba0 <line:628:11, col:114> Text="   #LOS_ERRNO_QUEUE_WRITE_SIZE_TOO_BIG     The buffer size passed in during queue writing is bigger than"
|   |   |-TextComment 0x1005bc0 <line:629:3, col:18> Text=" the queue size."
|   |   `-TextComment 0x1005be0 <line:630:3> Text=" "
|   |-BlockCommandComment 0x1005c40 <col:4, line:631:3> Name="retval"
|   | `-ParagraphComment 0x1005cc0 <line:630:11, line:631:3>
|   |   |-TextComment 0x1005c70 <line:630:11, col:100> Text="   #LOS_ERRNO_QUEUE_ISFULL                 No free node is available during queue writing."
|   |   `-TextComment 0x1005c90 <line:631:3> Text=" "
|   |-BlockCommandComment 0x1005ce0 <col:4, line:633:3> Name="retval"
|   | `-ParagraphComment 0x1005d90 <line:631:11, line:633:3>
|   |   |-TextComment 0x1005d10 <line:631:11, col:116> Text="   #LOS_ERRNO_QUEUE_PEND_IN_LOCK           The task is forbidden to be blocked on a queue when the task is"
|   |   |-TextComment 0x1005d30 <line:632:3, col:10> Text=" locked."
|   |   `-TextComment 0x1005d50 <line:633:3> Text=" "
|   |-BlockCommandComment 0x1005db0 <col:4, line:634:3> Name="retval"
|   | `-ParagraphComment 0x1005e30 <line:633:11, line:634:3>
|   |   |-TextComment 0x1005de0 <line:633:11, col:110> Text="   #LOS_ERRNO_QUEUE_TIMEOUT                The time set for waiting to processing the queue expires."
|   |   `-TextComment 0x1005e00 <line:634:3> Text=" "
|   |-BlockCommandComment 0x1005e50 <col:4, line:636:3> Name="par"
|   | `-ParagraphComment 0x1006020 <line:634:8, line:636:3>
|   |   |-TextComment 0x1005e80 <line:634:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1005ea0 <line:635:3> Text=" "
|   |   |-HTMLStartTagComment 0x1005ec0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1005f00 <col:8, col:11> Name="li"
|   |   |-TextComment 0x1005f40 <col:12, col:74> Text="los_queue.h: The header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1005f60 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x1005f90 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x1005fc0 <line:636:3> Text=" "
|   `-BlockCommandComment 0x1006040 <col:4, col:39> Name="see"
|     `-ParagraphComment 0x10060a0 <col:8, col:39>
|       `-TextComment 0x1006070 <col:8, col:39> Text=" LOS_QueueRead | LOS_QueueCreate"
|-FunctionDecl 0xf99df0 <line:685:1, line:688:52> line:685:15 LOS_QueueWriteHeadCopy 'UINT32 (UINT32, void *, UINT32, UINT32)' extern
| |-ParmVarDecl 0xf99bd8 <col:38, col:45> col:45 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf99c58 <main/los_compiler.h:327:23, main/los_queue.h:686:44> col:44 bufferAddr 'void *'
| |-ParmVarDecl 0xf99cd0 <line:687:38, col:45> col:45 bufferSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf99d48 <line:688:38, col:45> col:45 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x1007900 <line:644:3, line:683:43>
|   |-ParagraphComment 0x1006230 <line:644:3>
|   | `-TextComment 0x1006200 <col:3> Text=" "
|   |-VerbatimLineComment 0x1006250 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x10062c0 <line:645:3>
|   | `-TextComment 0x1006290 <col:3> Text=" "
|   |-BlockCommandComment 0x10062e0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0x1006340 <col:10, col:41>
|   |   `-TextComment 0x1006310 <col:10, col:41> Text=" Write data into a queue header."
|   |-ParagraphComment 0x1006390 <line:647:3>
|   | `-TextComment 0x1006360 <col:3> Text=" "
|   |-BlockCommandComment 0x10063b0 <col:4, line:650:3> Name="par"
|   | `-ParagraphComment 0x1006480 <line:647:8, line:650:3>
|   |   |-TextComment 0x10063e0 <line:647:8, col:20> Text=" Description:"
|   |   |-TextComment 0x1006400 <line:648:3, col:112> Text=" This API is used to write the data of the size specified by bufferSize and stored at the address specified by"
|   |   |-TextComment 0x1006420 <line:649:3, col:34> Text=" bufferAddr into a queue header."
|   |   `-TextComment 0x1006440 <line:650:3> Text=" "
|   |-BlockCommandComment 0x10064a0 <col:4, line:659:8> Name="attention"
|   | `-ParagraphComment 0x1006ab0 <line:651:3, line:659:8>
|   |   |-TextComment 0x10064d0 <line:651:3> Text=" "
|   |   |-HTMLStartTagComment 0x10064f0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1006530 <line:652:3> Text=" "
|   |   |-HTMLStartTagComment 0x1006550 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1006590 <col:8, col:77> Text="Do not read or write a queue in unblocking modes such as an interrupt."
|   |   |-HTMLEndTagComment 0x10065b0 <col:78, col:82> Name="li"
|   |   |-TextComment 0x10065e0 <line:653:3> Text=" "
|   |   |-HTMLStartTagComment 0x1006600 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1006640 <col:8, col:73> Text="This API cannot be called before the Huawei LiteOS is initialized."
|   |   |-HTMLEndTagComment 0x1006660 <col:74, col:78> Name="li"
|   |   |-TextComment 0x1006690 <line:654:3> Text=" "
|   |   |-HTMLStartTagComment 0x10066b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x10066f0 <col:8, col:105> Text="The address of the data of the size specified by bufferSize and stored at the address specified by"
|   |   |-TextComment 0x1006710 <line:655:3, col:31> Text=" BufferAddr is to be written."
|   |   |-HTMLEndTagComment 0x1006730 <col:32, col:36> Name="li"
|   |   |-TextComment 0x1006760 <line:656:3> Text=" "
|   |   |-HTMLStartTagComment 0x1006780 <col:4, col:7> Name="li"
|   |   |-TextComment 0x10067c0 <col:8, col:47> Text="The argument timeOut is a relative time."
|   |   |-HTMLEndTagComment 0x10067e0 <col:48, col:52> Name="li"
|   |   |-TextComment 0x1006810 <line:657:3> Text=" "
|   |   |-HTMLStartTagComment 0x1006830 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1006870 <col:8, col:112> Text="LOS_QueueRead and LOS_QueueWriteHead are a set of interfaces, and the two groups of interfaces need to be"
|   |   |-TextComment 0x1006890 <line:658:3, col:8> Text=" used."
|   |   |-HTMLStartTagComment 0x10068b0 <col:9, col:12> Name="li"
|   |   |-TextComment 0x10068f0 <line:659:3> Text=" "
|   |   `-HTMLEndTagComment 0x1006910 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1006b00 <line:661:3>
|   | `-TextComment 0x1006ad0 <col:3> Text=" "
|   |-ParamCommandComment 0x1006b20 <col:4, line:663:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x1006c00 <line:661:18, line:663:3>
|   |   |-TextComment 0x1006b80 <line:661:18, col:92> Text="        [IN]        Queue ID created by LOS_QueueCreate. The value range is"
|   |   |-TextComment 0x1006ba0 <line:662:3, col:35> Text=" [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x1006bc0 <line:663:3> Text=" "
|   |-ParamCommandComment 0x1006c20 <col:4, line:665:3> [in] implicitly Param="bufferAddr" ParamIndex=1
|   | `-ParagraphComment 0x1006d00 <line:663:21, line:665:3>
|   |   |-TextComment 0x1006c80 <line:663:21, col:89> Text="     [OUT]       Starting address that stores the data to be written."
|   |   |-TextComment 0x1006ca0 <line:664:3, col:41> Text=" The starting address must not be null."
|   |   `-TextComment 0x1006cc0 <line:665:3> Text=" "
|   |-ParamCommandComment 0x1006d20 <col:4, line:666:3> [in] implicitly Param="bufferSize" ParamIndex=2
|   | `-ParagraphComment 0x1006dd0 <line:665:21, line:666:3>
|   |   |-TextComment 0x1006d80 <line:665:21, col:115> Text="     [IN]        Passed-in buffer size, which must not be 0. The value range is [1,0xffffffff]."
|   |   `-TextComment 0x1006da0 <line:666:3> Text=" "
|   |-ParamCommandComment 0x1006df0 <col:4, col:102> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0x1006e80 <col:18, col:102>
|   |   `-TextComment 0x1006e50 <col:18, col:102> Text="        [IN]        Expiry time. The value range is [0,LOS_WAIT_FOREVER](unit: Tick)."
|   |-ParagraphComment 0x1006ed0 <line:668:3>
|   | `-TextComment 0x1006ea0 <col:3> Text=" "
|   |-BlockCommandComment 0x1006ef0 <col:4, line:669:3> Name="retval"
|   | `-ParagraphComment 0x1006f70 <line:668:11, line:669:3>
|   |   |-TextComment 0x1006f20 <line:668:11, col:101> Text="   #LOS_OK                                 The data is successfully written into the queue."
|   |   `-TextComment 0x1006f40 <line:669:3> Text=" "
|   |-BlockCommandComment 0x1006f90 <col:4, line:670:3> Name="retval"
|   | `-ParagraphComment 0x1007010 <line:669:11, line:670:3>
|   |   |-TextComment 0x1006fc0 <line:669:11, col:112> Text="   #LOS_ERRNO_QUEUE_INVALID                The queue handle passed in during queue writing is invalid."
|   |   `-TextComment 0x1006fe0 <line:670:3> Text=" "
|   |-BlockCommandComment 0x1007030 <col:4, line:671:3> Name="retval"
|   | `-ParagraphComment 0x10070b0 <line:670:11, line:671:3>
|   |   |-TextComment 0x1007060 <line:670:11, col:104> Text="   #LOS_ERRNO_QUEUE_WRITE_PTR_NULL         The pointer passed in during queue writing is null."
|   |   `-TextComment 0x1007080 <line:671:3> Text=" "
|   |-BlockCommandComment 0x10070d0 <col:4, line:672:3> Name="retval"
|   | `-ParagraphComment 0x1007150 <line:671:11, line:672:3>
|   |   |-TextComment 0x1007100 <line:671:11, col:105> Text="   #LOS_ERRNO_QUEUE_WRITESIZE_ISZERO       The buffer size passed in during queue writing is 0."
|   |   `-TextComment 0x1007120 <line:672:3> Text=" "
|   |-BlockCommandComment 0x1007170 <col:4, line:674:3> Name="retval"
|   | `-ParagraphComment 0x1007220 <line:672:11, line:674:3>
|   |   |-TextComment 0x10071a0 <line:672:11, col:118> Text="   #LOS_ERRNO_QUEUE_WRITE_IN_INTERRUPT     The queue cannot be written during an interrupt when the time for"
|   |   |-TextComment 0x10071c0 <line:673:3, col:43> Text=" waiting to processing the queue expires."
|   |   `-TextComment 0x10071e0 <line:674:3> Text=" "
|   |-BlockCommandComment 0x1007240 <col:4, line:675:3> Name="retval"
|   | `-ParagraphComment 0x10072c0 <line:674:11, line:675:3>
|   |   |-TextComment 0x1007270 <line:674:11, col:109> Text="   #LOS_ERRNO_QUEUE_NOT_CREATE             The queue into which the data is written is not created."
|   |   `-TextComment 0x1007290 <line:675:3> Text=" "
|   |-BlockCommandComment 0x10072e0 <col:4, line:677:3> Name="retval"
|   | `-ParagraphComment 0x1007390 <line:675:11, line:677:3>
|   |   |-TextComment 0x1007310 <line:675:11, col:114> Text="   #LOS_ERRNO_QUEUE_WRITE_SIZE_TOO_BIG     The buffer size passed in during queue writing is bigger than"
|   |   |-TextComment 0x1007330 <line:676:3, col:18> Text=" the queue size."
|   |   `-TextComment 0x1007350 <line:677:3> Text=" "
|   |-BlockCommandComment 0x10073b0 <col:4, line:678:3> Name="retval"
|   | `-ParagraphComment 0x1007430 <line:677:11, line:678:3>
|   |   |-TextComment 0x10073e0 <line:677:11, col:100> Text="   #LOS_ERRNO_QUEUE_ISFULL                 No free node is available during queue writing."
|   |   `-TextComment 0x1007400 <line:678:3> Text=" "
|   |-BlockCommandComment 0x1007450 <col:4, line:680:3> Name="retval"
|   | `-ParagraphComment 0x1007500 <line:678:11, line:680:3>
|   |   |-TextComment 0x1007480 <line:678:11, col:116> Text="   #LOS_ERRNO_QUEUE_PEND_IN_LOCK           The task is forbidden to be blocked on a queue when the task is"
|   |   |-TextComment 0x10074a0 <line:679:3, col:10> Text=" locked."
|   |   `-TextComment 0x10074c0 <line:680:3> Text=" "
|   |-BlockCommandComment 0x1007520 <col:4, line:681:3> Name="retval"
|   | `-ParagraphComment 0x10075a0 <line:680:11, line:681:3>
|   |   |-TextComment 0x1007550 <line:680:11, col:110> Text="   #LOS_ERRNO_QUEUE_TIMEOUT                The time set for waiting to processing the queue expires."
|   |   `-TextComment 0x1007570 <line:681:3> Text=" "
|   |-BlockCommandComment 0x10075c0 <col:4, line:683:3> Name="par"
|   | `-ParagraphComment 0x1007790 <line:681:8, line:683:3>
|   |   |-TextComment 0x10075f0 <line:681:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1007610 <line:682:3> Text=" "
|   |   |-HTMLStartTagComment 0x1007630 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1007670 <col:8, col:11> Name="li"
|   |   |-TextComment 0x10076b0 <col:12, col:74> Text="los_queue.h: The header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x10076d0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x1007700 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x1007730 <line:683:3> Text=" "
|   `-BlockCommandComment 0x10077b0 <col:4, col:43> Name="see"
|     `-ParagraphComment 0x1007810 <col:8, col:43>
|       `-TextComment 0x10077e0 <col:8, col:43> Text=" LOS_QueueWrite | LOS_QueueWriteHead"
|-FunctionDecl 0xf99f78 <line:716:1, col:45> col:15 LOS_QueueDelete 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xf99ee8 <col:31, col:38> col:38 queueID 'UINT32':'unsigned int'
| `-FullComment 0x10086c0 <line:691:3, line:714:41>
|   |-ParagraphComment 0x10079a0 <line:691:3>
|   | `-TextComment 0x1007970 <col:3> Text=" "
|   |-VerbatimLineComment 0x10079f0 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x1007a60 <line:692:3>
|   | `-TextComment 0x1007a30 <col:3> Text=" "
|   |-BlockCommandComment 0x1007a80 <col:4, col:25> Name="brief"
|   | `-ParagraphComment 0x1007ae0 <col:10, col:25>
|   |   `-TextComment 0x1007ab0 <col:10, col:25> Text=" Delete a queue."
|   |-ParagraphComment 0x1007b30 <line:694:3>
|   | `-TextComment 0x1007b00 <col:3> Text=" "
|   |-BlockCommandComment 0x1007b50 <col:4, line:696:3> Name="par"
|   | `-ParagraphComment 0x1007c00 <line:694:8, line:696:3>
|   |   |-TextComment 0x1007b80 <line:694:8, col:20> Text=" Description:"
|   |   |-TextComment 0x1007ba0 <line:695:3, col:38> Text=" This API is used to delete a queue."
|   |   `-TextComment 0x1007bc0 <line:696:3> Text=" "
|   |-BlockCommandComment 0x1007c20 <col:4, line:701:8> Name="attention"
|   | `-ParagraphComment 0x1007ee0 <line:697:3, line:701:8>
|   |   |-TextComment 0x1007c50 <line:697:3> Text=" "
|   |   |-HTMLStartTagComment 0x1007c70 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1007cb0 <line:698:3> Text=" "
|   |   |-HTMLStartTagComment 0x1007cd0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1007d10 <col:8, col:69> Text="This API cannot be used to delete a queue that is not created."
|   |   |-HTMLEndTagComment 0x1007d30 <col:70, col:74> Name="li"
|   |   |-TextComment 0x1007d60 <line:699:3> Text=" "
|   |   |-HTMLStartTagComment 0x1007d80 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1007dc0 <col:8, col:111> Text="A synchronous queue fails to be deleted if any tasks are blocked on it, or some queues are being read or"
|   |   |-TextComment 0x1007de0 <line:700:3, col:11> Text=" written."
|   |   |-HTMLEndTagComment 0x1007e00 <col:12, col:16> Name="li"
|   |   |-TextComment 0x1007e30 <line:701:3> Text=" "
|   |   `-HTMLEndTagComment 0x1007e50 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1007f30 <line:703:3>
|   | `-TextComment 0x1007f00 <col:3> Text=" "
|   |-ParamCommandComment 0x1007f50 <col:4, line:704:35> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x1008000 <line:703:18, line:704:35>
|   |   |-TextComment 0x1007fb0 <line:703:18, col:87> Text="     [IN]      Queue ID created by LOS_QueueCreate. The value range is"
|   |   `-TextComment 0x1007fd0 <line:704:3, col:35> Text=" [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |-ParagraphComment 0x1008050 <line:706:3>
|   | `-TextComment 0x1008020 <col:3> Text=" "
|   |-BlockCommandComment 0x1008070 <col:4, line:707:3> Name="retval"
|   | `-ParagraphComment 0x10080f0 <line:706:11, line:707:3>
|   |   |-TextComment 0x10080a0 <line:706:11, col:81> Text="   #LOS_OK                           The queue is successfully deleted."
|   |   `-TextComment 0x10080c0 <line:707:3> Text=" "
|   |-BlockCommandComment 0x1008110 <col:4, line:708:3> Name="retval"
|   | `-ParagraphComment 0x1008190 <line:707:11, line:708:3>
|   |   |-TextComment 0x1008140 <line:707:11, col:73> Text="   #LOS_ERRNO_QUEUE_NOT_FOUND        The queue cannot be found."
|   |   `-TextComment 0x1008160 <line:708:3> Text=" "
|   |-BlockCommandComment 0x10081b0 <col:4, line:710:3> Name="retval"
|   | `-ParagraphComment 0x1008260 <line:708:11, line:710:3>
|   |   |-TextComment 0x10081e0 <line:708:11, col:108> Text="   #LOS_ERRNO_QUEUE_NOT_CREATE       The queue handle passed in when the queue is being deleted is"
|   |   |-TextComment 0x1008200 <line:709:3, col:13> Text=" incorrect."
|   |   `-TextComment 0x1008220 <line:710:3> Text=" "
|   |-BlockCommandComment 0x1008280 <col:4, line:711:3> Name="retval"
|   | `-ParagraphComment 0x1008300 <line:710:11, line:711:3>
|   |   |-TextComment 0x10082b0 <line:710:11, col:94> Text="   #LOS_ERRNO_QUEUE_IN_TSKUSE        The queue that blocks a task cannot be deleted."
|   |   `-TextComment 0x10082d0 <line:711:3> Text=" "
|   |-BlockCommandComment 0x1008320 <col:4, line:712:3> Name="retval"
|   | `-ParagraphComment 0x10083a0 <line:711:11, line:712:3>
|   |   |-TextComment 0x1008350 <line:711:11, col:93> Text="   #LOS_ERRNO_QUEUE_IN_TSKWRITE      Queue reading and writing are not synchronous."
|   |   `-TextComment 0x1008370 <line:712:3> Text=" "
|   |-BlockCommandComment 0x10083c0 <col:4, line:714:3> Name="par"
|   | `-ParagraphComment 0x1008590 <line:712:8, line:714:3>
|   |   |-TextComment 0x10083f0 <line:712:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1008410 <line:713:3> Text=" "
|   |   |-HTMLStartTagComment 0x1008430 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1008470 <col:8, col:11> Name="li"
|   |   |-TextComment 0x10084b0 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x10084d0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x1008500 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x1008530 <line:714:3> Text=" "
|   `-BlockCommandComment 0x10085b0 <col:4, col:41> Name="see"
|     `-ParagraphComment 0x1008610 <col:8, col:41>
|       `-TextComment 0x10085e0 <col:8, col:41> Text=" LOS_QueueCreate | LOS_QueueCreate"
|-FunctionDecl 0xf9a3f8 <line:742:1, col:71> col:15 LOS_QueueInfoGet 'UINT32 (UINT32, QUEUE_INFO_S *)' extern
| |-ParmVarDecl 0xf9a058 <col:32, col:39> col:39 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf9a2e8 <col:48, col:62> col:62 queueInfo 'QUEUE_INFO_S *'
| `-FullComment 0x10093c0 <line:719:3, line:740:23>
|   |-ParagraphComment 0x1008760 <line:719:3>
|   | `-TextComment 0x1008730 <col:3> Text=" "
|   |-VerbatimLineComment 0x1008780 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x10087f0 <line:720:3>
|   | `-TextComment 0x10087c0 <col:3> Text=" "
|   |-BlockCommandComment 0x1008810 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0x1008870 <col:10, col:35>
|   |   `-TextComment 0x1008840 <col:10, col:35> Text=" Obtain queue information."
|   |-ParagraphComment 0x10088c0 <line:722:3>
|   | `-TextComment 0x1008890 <col:3> Text=" "
|   |-BlockCommandComment 0x10088e0 <col:4, line:724:3> Name="par"
|   | `-ParagraphComment 0x1008990 <line:722:8, line:724:3>
|   |   |-TextComment 0x1008910 <line:722:8, col:20> Text=" Description:"
|   |   |-TextComment 0x1008930 <line:723:3, col:48> Text=" This API is used to obtain queue information."
|   |   `-TextComment 0x1008950 <line:724:3> Text=" "
|   |-BlockCommandComment 0x10089b0 <col:4, line:728:3> Name="attention"
|   | `-ParagraphComment 0x1008bd0 <line:725:3, line:728:3>
|   |   |-TextComment 0x1008a00 <line:725:3> Text=" "
|   |   |-HTMLStartTagComment 0x1008a20 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1008a60 <line:726:3> Text=" "
|   |   |-HTMLStartTagComment 0x1008a80 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1008ac0 <col:8, col:52> Text="The specific queue should be created firstly."
|   |   |-HTMLEndTagComment 0x1008ae0 <col:53, col:57> Name="li"
|   |   |-TextComment 0x1008b10 <line:727:3> Text=" "
|   |   |-HTMLEndTagComment 0x1008b30 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x1008b60 <line:728:3> Text=" "
|   |-ParamCommandComment 0x1008bf0 <col:4, line:730:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x1008cd0 <line:728:18, line:730:3>
|   |   |-TextComment 0x1008c50 <line:728:18, col:91> Text="       [IN]        Queue ID created by LOS_QueueCreate. The value range is"
|   |   |-TextComment 0x1008c70 <line:729:3, col:35> Text=" [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x1008c90 <line:730:3> Text=" "
|   |-ParamCommandComment 0x1008cf0 <col:4, col:86> [in] implicitly Param="queueInfo" ParamIndex=1
|   | `-ParagraphComment 0x1008d80 <col:20, col:86>
|   |   `-TextComment 0x1008d50 <col:20, col:86> Text="     [OUT]       The queue information to be read must not be null."
|   |-ParagraphComment 0x1008dd0 <line:732:3>
|   | `-TextComment 0x1008da0 <col:3> Text=" "
|   |-BlockCommandComment 0x1008df0 <col:4, line:733:3> Name="retval"
|   | `-ParagraphComment 0x1008e70 <line:732:11, line:733:3>
|   |   |-TextComment 0x1008e20 <line:732:11, col:95> Text="   #LOS_OK                            The queue information is successfully obtained."
|   |   `-TextComment 0x1008e40 <line:733:3> Text=" "
|   |-BlockCommandComment 0x1008e90 <col:4, line:734:3> Name="retval"
|   | `-ParagraphComment 0x1008f10 <line:733:11, line:734:3>
|   |   |-TextComment 0x1008ec0 <line:733:11, col:108> Text="   #LOS_ERRNO_QUEUE_PTR_NULL          The pointer to the queue information to be obtained is null."
|   |   `-TextComment 0x1008ee0 <line:734:3> Text=" "
|   |-BlockCommandComment 0x1008f30 <col:4, line:735:3> Name="retval"
|   | `-ParagraphComment 0x1008fb0 <line:734:11, line:735:3>
|   |   |-TextComment 0x1008f60 <line:734:11, col:102> Text="   #LOS_ERRNO_QUEUE_INVALID           The handle of the queue that is being read is invalid."
|   |   `-TextComment 0x1008f80 <line:735:3> Text=" "
|   |-BlockCommandComment 0x1008fd0 <col:4, line:736:15> Name="retval"
|   | `-ParagraphComment 0x1009050 <line:735:11, line:736:15>
|   |   |-TextComment 0x1009000 <line:735:11, col:110> Text="   #LOS_ERRNO_QUEUE_NOT_CREATE        The queue in which the information to be obtained is stored is"
|   |   `-TextComment 0x1009020 <line:736:3, col:15> Text=" not created."
|   |-ParagraphComment 0x10090a0 <line:738:3>
|   | `-TextComment 0x1009070 <col:3> Text=" "
|   |-BlockCommandComment 0x10090c0 <col:4, line:740:3> Name="par"
|   | `-ParagraphComment 0x1009290 <line:738:8, line:740:3>
|   |   |-TextComment 0x10090f0 <line:738:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1009110 <line:739:3> Text=" "
|   |   |-HTMLStartTagComment 0x1009130 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1009170 <col:8, col:11> Name="li"
|   |   |-TextComment 0x10091b0 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x10091d0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x1009200 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x1009230 <line:740:3> Text=" "
|   `-BlockCommandComment 0x10092b0 <col:4, col:23> Name="see"
|     `-ParagraphComment 0x1009310 <col:8, col:23>
|       `-TextComment 0x10092e0 <col:8, col:23> Text=" LOS_QueueCreate"
|-EnumDecl 0xf9a4a8 <line:744:9, line:747:1> line:744:9
| |-EnumConstantDecl 0xf9a570 <line:745:5> col:5 OS_QUEUE_READ 'int'
| `-EnumConstantDecl 0xf9a5c0 <line:746:5> col:5 OS_QUEUE_WRITE 'int'
|-TypedefDecl 0xf9a668 <line:744:1, line:747:3> col:3 QueueReadWrite 'enum QueueReadWrite':'QueueReadWrite'
| `-ElaboratedType 0xf9a610 'enum QueueReadWrite' sugar
|   `-EnumType 0xf9a550 'QueueReadWrite'
|     `-Enum 0xf9a4a8 ''
|-EnumDecl 0xf9a6d8 <line:749:9, line:752:1> line:749:9
| |-EnumConstantDecl 0xf9a7a0 <line:750:5> col:5 OS_QUEUE_HEAD 'int'
| `-EnumConstantDecl 0xf9a7f0 <line:751:5> col:5 OS_QUEUE_TAIL 'int'
|-TypedefDecl 0xf9a898 <line:749:1, line:752:3> col:3 QueueHeadTail 'enum QueueHeadTail':'QueueHeadTail'
| `-ElaboratedType 0xf9a840 'enum QueueHeadTail' sugar
|   `-EnumType 0xf9a780 'QueueHeadTail'
|     `-Enum 0xf9a6d8 ''
|-EnumDecl 0xf9a908 <line:754:9, line:757:1> line:754:9
| |-EnumConstantDecl 0xf9a9d0 <line:755:5> col:5 OS_QUEUE_NOT_POINT 'int'
| `-EnumConstantDecl 0xf9aa20 <line:756:5> col:5 OS_QUEUE_POINT 'int'
|-TypedefDecl 0xf9aac8 <line:754:1, line:757:3> col:3 QueuePointOrNot 'enum QueuePointOrNot':'QueuePointOrNot'
| `-ElaboratedType 0xf9aa70 'enum QueuePointOrNot' sugar
|   `-EnumType 0xf9a9b0 'QueuePointOrNot'
|     `-Enum 0xf9a908 ''
|-RecordDecl 0xf9ab60 <line:776:9, line:788:1> line:776:9 struct definition
| |-FullComment 0x1009530 <line:773:4, line:774:37>
| | |-ParagraphComment 0x1009460 <line:773:4>
| | | `-TextComment 0x1009430 <col:4> Text=" "
| | |-VerbatimLineComment 0x1009480 <col:5, col:23> Text=" los_queue"
| | `-ParagraphComment 0x10094f0 <line:774:4, col:37>
| |   `-TextComment 0x10094c0 <col:4, col:37> Text=" Queue information block structure"
| |-FieldDecl 0xf9ac10 <line:777:5, col:12> col:12 queue 'UINT8 *'
| | `-FullComment 0x1009600 <col:28, col:54>
| |   `-ParagraphComment 0x10095d0 <col:28, col:54>
| |     `-TextComment 0x10095a0 <col:28, col:54> Text=" Pointer to a queue handle "
| |-FieldDecl 0xf9ac98 <line:778:5, col:12> col:12 queueState 'UINT16':'unsigned short'
| | `-FullComment 0x10096d0 <col:28, col:40>
| |   `-ParagraphComment 0x10096a0 <col:28, col:40>
| |     `-TextComment 0x1009670 <col:28, col:40> Text=" Queue state "
| |-FieldDecl 0xf9ad28 <line:779:5, col:12> col:12 queueLen 'UINT16':'unsigned short'
| | `-FullComment 0x10097a0 <col:28, col:41>
| |   `-ParagraphComment 0x1009770 <col:28, col:41>
| |     `-TextComment 0x1009740 <col:28, col:41> Text=" Queue length "
| |-FieldDecl 0xf9adb8 <line:780:5, col:12> col:12 queueSize 'UINT16':'unsigned short'
| | `-FullComment 0x1009870 <col:28, col:38>
| |   `-ParagraphComment 0x1009840 <col:28, col:38>
| |     `-TextComment 0x1009810 <col:28, col:38> Text=" Node size "
| |-FieldDecl 0xf9ae48 <line:781:5, col:12> col:12 queueID 'UINT16':'unsigned short'
| | `-FullComment 0x1009940 <col:28, col:36>
| |   `-ParagraphComment 0x1009910 <col:28, col:36>
| |     `-TextComment 0x10098e0 <col:28, col:36> Text=" queueID "
| |-FieldDecl 0xf9aed8 <line:782:5, col:12> col:12 queueHead 'UINT16':'unsigned short'
| | `-FullComment 0x1009a20 <col:28, col:38>
| |   `-ParagraphComment 0x10099e0 <col:28, col:38>
| |     `-TextComment 0x10099b0 <col:28, col:38> Text=" Node head "
| |-FieldDecl 0xf9af68 <line:783:5, col:12> col:12 queueTail 'UINT16':'unsigned short'
| | `-FullComment 0x1009af0 <col:28, col:38>
| |   `-ParagraphComment 0x1009ac0 <col:28, col:38>
| |     `-TextComment 0x1009a90 <col:28, col:38> Text=" Node tail "
| |-FieldDecl 0xf9b0b8 <line:784:5, col:45> col:12 readWriteableCnt 'UINT16 [2]'
| | `-FullComment 0x1009bc0 <col:52, col:116>
| |   `-ParagraphComment 0x1009b90 <col:52, col:116>
| |     `-TextComment 0x1009b60 <col:52, col:116> Text=" Count of readable or writable resources, 0:readable, 1:writable "
| |-FieldDecl 0xf9b208 <line:785:5, col:47> col:17 readWriteList 'LOS_DL_LIST [2]'
| | `-FullComment 0x1009cb0 <col:54, line:786:78>
| |   `-ParagraphComment 0x1009c80 <line:785:54, line:786:78>
| |     |-TextComment 0x1009c30 <line:785:54, col:103> Text=" Pointer to the linked list to be read or written,"
| |     `-TextComment 0x1009c50 <line:786:1, col:78> Text="                                                      0:readlist, 1:writelist "
| `-FieldDecl 0xf9e410 <line:787:5, col:17> col:17 memList 'LOS_DL_LIST':'struct LOS_DL_LIST'
|   `-FullComment 0x1009d80 <col:30, col:64>
|     `-ParagraphComment 0x1009d50 <col:30, col:64>
|       `-TextComment 0x1009d20 <col:30, col:64> Text=" Pointer to the memory linked list "
|-TypedefDecl 0xf9e4e8 <line:776:1, line:788:3> col:3 referenced LosQueueCB 'struct LosQueueCB':'LosQueueCB'
| |-ElaboratedType 0xf9e490 'struct LosQueueCB' sugar
| | `-RecordType 0xf9abe0 'LosQueueCB'
| |   `-Record 0xf9ab60 ''
| `-FullComment 0x1009ef0 <line:773:4, line:774:37>
|   |-ParagraphComment 0x1009e20 <line:773:4>
|   | `-TextComment 0x1009df0 <col:4> Text=" "
|   |-VerbatimLineComment 0x1009e40 <col:5, col:23> Text=" los_queue"
|   `-ParagraphComment 0x1009eb0 <line:774:4, col:37>
|     `-TextComment 0x1009e80 <col:4, col:37> Text=" Queue information block structure"
|-VarDecl 0xf9e6c8 <line:819:1, col:20> col:20 g_allQueue 'LosQueueCB *' extern
| `-FullComment 0x100a060 <line:816:4, line:817:36>
|   |-ParagraphComment 0x1009f90 <line:816:4, col:5>
|   | `-TextComment 0x1009f60 <col:4, col:5> Text="  "
|   |-VerbatimLineComment 0x1009fb0 <col:6, col:24> Text=" los_queue"
|   `-ParagraphComment 0x100a020 <line:817:4, col:36>
|     `-TextComment 0x1009ff0 <col:4, col:36> Text="  Queue information control block"
|-FunctionDecl 0xf9e9f0 <line:856:1, col:77> col:14 OsQueueMailAlloc 'void *(UINT32, void *, UINT32)' extern
| |-ParmVarDecl 0xf9e7c8 <col:31, col:38> col:38 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf9e848 <main/los_compiler.h:327:23, main/los_queue.h:856:53> col:53 mailPool 'void *'
| |-ParmVarDecl 0xf9e8c0 <col:63, col:70> col:70 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x100ae20 <line:834:3, line:854:23>
|   |-ParagraphComment 0x100a100 <line:834:3>
|   | `-TextComment 0x100a0d0 <col:3> Text=" "
|   |-VerbatimLineComment 0x100a120 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x100a190 <line:835:3>
|   | `-TextComment 0x100a160 <col:3> Text=" "
|   |-BlockCommandComment 0x100a1b0 <col:4, col:47> Name="brief"
|   | `-ParagraphComment 0x100a210 <col:10, col:47>
|   |   `-TextComment 0x100a1e0 <col:10, col:47> Text=" Alloc a stationary memory for a mail."
|   |-ParagraphComment 0x100a260 <line:837:3>
|   | `-TextComment 0x100a230 <col:3> Text=" "
|   |-BlockCommandComment 0x100a280 <col:4, line:839:3> Name="par"
|   | `-ParagraphComment 0x100a330 <line:837:8, line:839:3>
|   |   |-TextComment 0x100a2b0 <line:837:8, col:20> Text=" Description:"
|   |   |-TextComment 0x100a2d0 <line:838:3, col:81> Text=" This API is used to alloc a stationary memory for a mail according to queueID."
|   |   `-TextComment 0x100a2f0 <line:839:3> Text=" "
|   |-BlockCommandComment 0x100a350 <col:4, line:844:8> Name="attention"
|   | `-ParagraphComment 0x100a6c0 <line:840:3, line:844:8>
|   |   |-TextComment 0x100a380 <line:840:3> Text=" "
|   |   |-HTMLStartTagComment 0x100a3a0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x100a3e0 <line:841:3> Text=" "
|   |   |-HTMLStartTagComment 0x100a400 <col:4, col:7> Name="li"
|   |   |-TextComment 0x100a440 <col:8, col:65> Text="Do not alloc memory in unblocking modes such as interrupt."
|   |   |-HTMLEndTagComment 0x100a460 <col:66, col:70> Name="li"
|   |   |-TextComment 0x100a490 <line:842:3> Text=" "
|   |   |-HTMLStartTagComment 0x100a4b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x100a4f0 <col:8, col:73> Text="This API cannot be called before the Huawei LiteOS is initialized."
|   |   |-HTMLEndTagComment 0x100a510 <col:74, col:78> Name="li"
|   |   |-TextComment 0x100a540 <line:843:3> Text=" "
|   |   |-HTMLStartTagComment 0x100a560 <col:4, col:7> Name="li"
|   |   |-TextComment 0x100a5a0 <col:8, col:47> Text="The argument timeOut is a relative time."
|   |   |-HTMLEndTagComment 0x100a5c0 <col:48, col:52> Name="li"
|   |   |-TextComment 0x100a5f0 <line:844:3> Text=" "
|   |   `-HTMLEndTagComment 0x100a610 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x100a710 <line:846:3>
|   | `-TextComment 0x100a6e0 <col:3> Text=" "
|   |-ParamCommandComment 0x100a730 <col:4, line:847:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x100a7e0 <line:846:18, line:847:3>
|   |   |-TextComment 0x100a790 <line:846:18, col:98> Text="        [IN]        Queue ID. The value range is [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x100a7b0 <line:847:3> Text=" "
|   |-ParamCommandComment 0x100a800 <col:4, line:848:3> [in] implicitly Param="mailPool" ParamIndex=1
|   | `-ParagraphComment 0x100a8b0 <line:847:19, line:848:3>
|   |   |-TextComment 0x100a860 <line:847:19, col:74> Text="       [IN]        The memory poll that stores the mail."
|   |   `-TextComment 0x100a880 <line:848:3> Text=" "
|   |-ParamCommandComment 0x100a8d0 <col:4, col:90> [in] implicitly Param="timeOut" ParamIndex=2
|   | `-ParagraphComment 0x100a960 <col:18, col:90>
|   |   `-TextComment 0x100a930 <col:18, col:90> Text="        [IN]        Expiry time. The value range is [0,LOS_WAIT_FOREVER]."
|   |-ParagraphComment 0x100a9b0 <line:850:3>
|   | `-TextComment 0x100a980 <col:3> Text=" "
|   |-BlockCommandComment 0x100a9d0 <col:4, line:851:3> Name="retval"
|   | `-ParagraphComment 0x100aa70 <line:850:11, line:851:3>
|   |   |-TextComment 0x100aa20 <line:850:11, col:70> Text="   #NULL                    The memory allocation is failed."
|   |   `-TextComment 0x100aa40 <line:851:3> Text=" "
|   |-BlockCommandComment 0x100aa90 <col:4, line:852:3> Name="retval"
|   | `-ParagraphComment 0x100ab10 <line:851:11, line:852:3>
|   |   |-TextComment 0x100aac0 <line:851:11, col:66> Text="   #mem                     The address of alloc memory."
|   |   `-TextComment 0x100aae0 <line:852:3> Text=" "
|   |-BlockCommandComment 0x100ab30 <col:4, line:854:3> Name="par"
|   | `-ParagraphComment 0x100ad00 <line:852:8, line:854:3>
|   |   |-TextComment 0x100ab60 <line:852:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x100ab80 <line:853:3> Text=" "
|   |   |-HTMLStartTagComment 0x100aba0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x100abe0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x100ac20 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x100ac40 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x100ac70 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x100aca0 <line:854:3> Text=" "
|   `-BlockCommandComment 0x100ad20 <col:4, col:23> Name="see"
|     `-ParagraphComment 0x100ad80 <col:8, col:23>
|       `-TextComment 0x100ad50 <col:8, col:23> Text=" OsQueueMailFree"
|-FunctionDecl 0xf9ed08 <line:882:1, col:76> col:15 OsQueueMailFree 'UINT32 (UINT32, void *, void *)' extern
| |-ParmVarDecl 0xf9eae8 <col:31, col:38> col:38 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf9eb68 <main/los_compiler.h:327:23, main/los_queue.h:882:53> col:53 mailPool 'void *'
| |-ParmVarDecl 0xf9ebe8 <main/los_compiler.h:327:23, main/los_queue.h:882:69> col:69 mailMem 'void *'
| `-FullComment 0x100bbc0 <line:859:3, line:880:24>
|   |-ParagraphComment 0x100aec0 <line:859:3>
|   | `-TextComment 0x100ae90 <col:3> Text=" "
|   |-VerbatimLineComment 0x100aee0 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x100af50 <line:860:3>
|   | `-TextComment 0x100af20 <col:3> Text=" "
|   |-BlockCommandComment 0x100af70 <col:4, col:45> Name="brief"
|   | `-ParagraphComment 0x100afd0 <col:10, col:45>
|   |   `-TextComment 0x100afa0 <col:10, col:45> Text=" Free a stationary memory of a mail."
|   |-ParagraphComment 0x100b020 <line:862:3>
|   | `-TextComment 0x100aff0 <col:3> Text=" "
|   |-BlockCommandComment 0x100b040 <col:4, line:864:3> Name="par"
|   | `-ParagraphComment 0x100b0f0 <line:862:8, line:864:3>
|   |   |-TextComment 0x100b070 <line:862:8, col:20> Text=" Description:"
|   |   |-TextComment 0x100b090 <line:863:3, col:80> Text=" This API is used to free a stationary memory for a mail according to queueID."
|   |   `-TextComment 0x100b0b0 <line:864:3> Text=" "
|   |-BlockCommandComment 0x100b110 <col:4, line:867:8> Name="attention"
|   | `-ParagraphComment 0x100b2e0 <line:865:3, line:867:8>
|   |   |-TextComment 0x100b140 <line:865:3> Text=" "
|   |   |-HTMLStartTagComment 0x100b160 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x100b1a0 <line:866:3> Text=" "
|   |   |-HTMLStartTagComment 0x100b1c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x100b200 <col:8, col:73> Text="This API cannot be called before the Huawei LiteOS is initialized."
|   |   |-HTMLEndTagComment 0x100b220 <col:74, col:78> Name="li"
|   |   |-TextComment 0x100b250 <line:867:3> Text=" "
|   |   `-HTMLEndTagComment 0x100b270 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x100b330 <line:869:3>
|   | `-TextComment 0x100b300 <col:3> Text=" "
|   |-ParamCommandComment 0x100b350 <col:4, line:870:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x100b400 <line:869:18, line:870:3>
|   |   |-TextComment 0x100b3b0 <line:869:18, col:99> Text="         [IN]        Queue ID. The value range is [1,LOSCFG_BASE_IPC_QUEUE_LIMIT]."
|   |   `-TextComment 0x100b3d0 <line:870:3> Text=" "
|   |-ParamCommandComment 0x100b420 <col:4, line:871:3> [in] implicitly Param="mailPool" ParamIndex=1
|   | `-ParagraphComment 0x100b4d0 <line:870:19, line:871:3>
|   |   |-TextComment 0x100b480 <line:870:19, col:67> Text="        [IN]        The mail memory poll address."
|   |   `-TextComment 0x100b4a0 <line:871:3> Text=" "
|   |-ParamCommandComment 0x100b4f0 <col:4, col:68> [in] implicitly Param="mailMem" ParamIndex=2
|   | `-ParagraphComment 0x100b580 <col:18, col:68>
|   |   `-TextComment 0x100b550 <col:18, col:68> Text="         [IN]        The mail memory block address."
|   |-ParagraphComment 0x100b5d0 <line:873:3>
|   | `-TextComment 0x100b5a0 <col:3> Text=" "
|   |-BlockCommandComment 0x100b5f0 <col:4, line:874:3> Name="retval"
|   | `-ParagraphComment 0x100b670 <line:873:11, line:874:3>
|   |   |-TextComment 0x100b620 <line:873:11, col:94> Text="   #LOS_OK                                 0x00000000: The memory free successfully."
|   |   `-TextComment 0x100b640 <line:874:3> Text=" "
|   |-BlockCommandComment 0x100b690 <col:4, line:876:3> Name="retval"
|   | `-ParagraphComment 0x100b740 <line:874:11, line:876:3>
|   |   |-TextComment 0x100b6c0 <line:874:11, col:118> Text="   #OS_ERRNO_QUEUE_MAIL_HANDLE_INVALID     0x02000619: The handle of the queue passed-in when the memory for"
|   |   |-TextComment 0x100b6e0 <line:875:1, col:101> Text="                                                                 the queue is being freed is invalid."
|   |   `-TextComment 0x100b700 <line:876:3> Text=" "
|   |-BlockCommandComment 0x100b760 <col:4, line:877:3> Name="retval"
|   | `-ParagraphComment 0x100b7e0 <line:876:11, line:877:3>
|   |   |-TextComment 0x100b790 <line:876:11, col:111> Text="   #OS_ERRNO_QUEUE_MAIL_PTR_INVALID        0x0200061a: The pointer to the memory to be freed is null."
|   |   `-TextComment 0x100b7b0 <line:877:3> Text=" "
|   |-BlockCommandComment 0x100b800 <col:4, line:878:3> Name="retval"
|   | `-ParagraphComment 0x100b880 <line:877:11, line:878:3>
|   |   |-TextComment 0x100b830 <line:877:11, col:108> Text="   #OS_ERRNO_QUEUE_MAIL_FREE_ERROR         0x0200061b: The memory for the queue fails to be freed."
|   |   `-TextComment 0x100b850 <line:878:3> Text=" "
|   |-BlockCommandComment 0x100b8a0 <col:4, line:880:3> Name="par"
|   | `-ParagraphComment 0x100ba90 <line:878:8, line:880:3>
|   |   |-TextComment 0x100b8d0 <line:878:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x100b8f0 <line:879:3> Text=" "
|   |   |-HTMLStartTagComment 0x100b910 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x100b950 <col:8, col:11> Name="li"
|   |   |-TextComment 0x100b990 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x100b9b0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x100b9e0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x100ba30 <line:880:3> Text=" "
|   `-BlockCommandComment 0x100bab0 <col:4, col:24> Name="see"
|     `-ParagraphComment 0x100bb10 <col:8, col:24>
|       `-TextComment 0x100bae0 <col:8, col:24> Text=" OsQueueMailAlloc"
|-FunctionDecl 0xf9ee80 <line:902:1, col:31> col:15 OsQueueInit 'UINT32 (void)' extern
| `-FullComment 0x100c540 <line:885:3, line:900:13>
|   |-ParagraphComment 0x100bc60 <line:885:3>
|   | `-TextComment 0x100bc30 <col:3> Text=" "
|   |-VerbatimLineComment 0x100bc80 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x100bcf0 <line:886:3>
|   | `-TextComment 0x100bcc0 <col:3> Text=" "
|   |-BlockCommandComment 0x100bd10 <col:4, col:31> Name="brief"
|   | `-ParagraphComment 0x100bd70 <col:10, col:31>
|   |   `-TextComment 0x100bd40 <col:10, col:31> Text=" Initialization queue."
|   |-ParagraphComment 0x100bdc0 <line:888:3>
|   | `-TextComment 0x100bd90 <col:3> Text=" "
|   |-BlockCommandComment 0x100bde0 <col:4, line:890:3> Name="par"
|   | `-ParagraphComment 0x100be90 <line:888:8, line:890:3>
|   |   |-TextComment 0x100be10 <line:888:8, col:20> Text=" Description:"
|   |   |-TextComment 0x100be30 <line:889:3, col:44> Text=" This API is used to initialization queue."
|   |   `-TextComment 0x100be50 <line:890:3> Text=" "
|   |-BlockCommandComment 0x100beb0 <col:4, line:893:8> Name="attention"
|   | `-ParagraphComment 0x100c080 <line:891:3, line:893:8>
|   |   |-TextComment 0x100bee0 <line:891:3> Text=" "
|   |   |-HTMLStartTagComment 0x100bf00 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x100bf40 <line:892:3> Text=" "
|   |   |-HTMLStartTagComment 0x100bf60 <col:4, col:7> Name="li"
|   |   |-TextComment 0x100bfa0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x100bfc0 <col:13, col:17> Name="li"
|   |   |-TextComment 0x100bff0 <line:893:3> Text=" "
|   |   `-HTMLEndTagComment 0x100c010 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x100c0d0 <line:895:3>
|   | `-TextComment 0x100c0a0 <col:3> Text=" "
|   |-ParamCommandComment 0x100c0f0 <col:4, col:15> [in] implicitly Param="None."
|   | `-ParagraphComment 0x100c150 <<invalid sloc>>
|   |-ParagraphComment 0x100c1a0 <line:897:3>
|   | `-TextComment 0x100c170 <col:3> Text=" "
|   |-BlockCommandComment 0x100c1c0 <col:4, line:898:3> Name="retval"
|   | `-ParagraphComment 0x100c240 <line:897:11, line:898:3>
|   |   |-TextComment 0x100c1f0 <line:897:11, col:43> Text="   UINT32  Initialization result."
|   |   `-TextComment 0x100c210 <line:898:3> Text=" "
|   |-BlockCommandComment 0x100c260 <col:4, line:900:3> Name="par"
|   | `-ParagraphComment 0x100c430 <line:898:8, line:900:3>
|   |   |-TextComment 0x100c290 <line:898:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x100c2b0 <line:899:3> Text=" "
|   |   |-HTMLStartTagComment 0x100c2d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x100c310 <col:8, col:11> Name="li"
|   |   |-TextComment 0x100c350 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x100c370 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x100c3a0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x100c3d0 <line:900:3> Text=" "
|   `-BlockCommandComment 0x100c450 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x100c4b0 <col:8, col:13>
|       `-TextComment 0x100c480 <col:8, col:13> Text=" None."
|-FunctionDecl 0xf9f298 <line:926:1, line:927:44> line:926:15 OsQueueOperate 'UINT32 (UINT32, UINT32, void *, UINT32 *, UINT32)' extern
| |-ParmVarDecl 0xf9ef58 <col:30, col:37> col:37 queueID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf9efd0 <col:46, col:53> col:53 operateType 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf9f050 <main/los_compiler.h:327:23, main/los_queue.h:926:72> col:72 bufferAddr 'void *'
| |-ParmVarDecl 0xf9f0c8 <col:84, col:92> col:92 bufferSize 'UINT32 *'
| |-ParmVarDecl 0xf9f140 <line:927:30, col:37> col:37 timeOut 'UINT32':'unsigned int'
| `-FullComment 0x100d270 <line:905:3, line:924:13>
|   |-ParagraphComment 0x100c5e0 <line:905:3>
|   | `-TextComment 0x100c5b0 <col:3> Text=" "
|   |-VerbatimLineComment 0x100c600 <col:4, col:22> Text=" los_queue"
|   |-ParagraphComment 0x100c670 <line:906:3>
|   | `-TextComment 0x100c640 <col:3> Text=" "
|   |-BlockCommandComment 0x100c690 <col:4, col:42> Name="brief"
|   | `-ParagraphComment 0x100c6f0 <col:10, col:42>
|   |   `-TextComment 0x100c6c0 <col:10, col:42> Text=" Handle when read or write queue."
|   |-ParagraphComment 0x100c740 <line:908:3>
|   | `-TextComment 0x100c710 <col:3> Text=" "
|   |-BlockCommandComment 0x100c760 <col:4, line:910:3> Name="par"
|   | `-ParagraphComment 0x100c810 <line:908:8, line:910:3>
|   |   |-TextComment 0x100c790 <line:908:8, col:20> Text=" Description:"
|   |   |-TextComment 0x100c7b0 <line:909:3, col:55> Text=" This API is used to handle when read or write queue."
|   |   `-TextComment 0x100c7d0 <line:910:3> Text=" "
|   |-BlockCommandComment 0x100c830 <col:4, line:913:8> Name="attention"
|   | `-ParagraphComment 0x100ca00 <line:911:3, line:913:8>
|   |   |-TextComment 0x100c860 <line:911:3> Text=" "
|   |   |-HTMLStartTagComment 0x100c880 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x100c8c0 <line:912:3> Text=" "
|   |   |-HTMLStartTagComment 0x100c8e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x100c920 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x100c940 <col:13, col:17> Name="li"
|   |   |-TextComment 0x100c970 <line:913:3> Text=" "
|   |   `-HTMLEndTagComment 0x100c990 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x100ca70 <line:915:3>
|   | `-TextComment 0x100ca40 <col:3> Text=" "
|   |-ParamCommandComment 0x100ca90 <col:4, line:916:3> [in] implicitly Param="queueID" ParamIndex=0
|   | `-ParagraphComment 0x100cb40 <line:915:18, line:916:3>
|   |   |-TextComment 0x100caf0 <line:915:18, col:45> Text="        [IN]       Queue id."
|   |   `-TextComment 0x100cb10 <line:916:3> Text=" "
|   |-ParamCommandComment 0x100cb60 <col:4, line:917:3> [in] implicitly Param="operateType" ParamIndex=1
|   | `-ParagraphComment 0x100cc10 <line:916:22, line:917:3>
|   |   |-TextComment 0x100cbc0 <line:916:22, col:48> Text="    [IN]       Operate type"
|   |   `-TextComment 0x100cbe0 <line:917:3> Text=" "
|   |-ParamCommandComment 0x100cc30 <col:4, line:918:3> [in] implicitly Param="bufferAddr" ParamIndex=2
|   | `-ParagraphComment 0x100cce0 <line:917:21, line:918:3>
|   |   |-TextComment 0x100cc90 <line:917:21, col:51> Text="     [IN]       Buffer address."
|   |   `-TextComment 0x100ccb0 <line:918:3> Text=" "
|   |-ParamCommandComment 0x100cd00 <col:4, line:919:3> [in] implicitly Param="bufferSize" ParamIndex=3
|   | `-ParagraphComment 0x100cdb0 <line:918:21, line:919:3>
|   |   |-TextComment 0x100cd60 <line:918:21, col:48> Text="     [IN]       Buffer size."
|   |   `-TextComment 0x100cd80 <line:919:3> Text=" "
|   |-ParamCommandComment 0x100cdd0 <col:4, col:44> [in] implicitly Param="timeOut" ParamIndex=4
|   | `-ParagraphComment 0x100ce60 <col:18, col:44>
|   |   `-TextComment 0x100ce30 <col:18, col:44> Text="        [IN]       Timeout."
|   |-ParagraphComment 0x100ceb0 <line:921:3>
|   | `-TextComment 0x100ce80 <col:3> Text=" "
|   |-BlockCommandComment 0x100ced0 <col:4, line:922:3> Name="retval"
|   | `-ParagraphComment 0x100cf50 <line:921:11, line:922:3>
|   |   |-TextComment 0x100cf00 <line:921:11, col:35> Text="   UINT32  Handle result."
|   |   `-TextComment 0x100cf20 <line:922:3> Text=" "
|   |-BlockCommandComment 0x100cf70 <col:4, line:924:3> Name="par"
|   | `-ParagraphComment 0x100d140 <line:922:8, line:924:3>
|   |   |-TextComment 0x100cfa0 <line:922:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x100cfc0 <line:923:3> Text=" "
|   |   |-HTMLStartTagComment 0x100cfe0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x100d020 <col:8, col:11> Name="li"
|   |   |-TextComment 0x100d060 <col:12, col:74> Text="los_queue.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x100d080 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x100d0b0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x100d0e0 <line:924:3> Text=" "
|   `-BlockCommandComment 0x100d160 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x100d1c0 <col:8, col:13>
|       `-TextComment 0x100d190 <col:8, col:13> Text=" None."
|-FunctionDecl 0xfa4a58 <main/los_sem.h:192:1, col:60> col:15 LOS_SemCreate 'UINT32 (UINT16, UINT32 *)' extern
| |-ParmVarDecl 0xfa48c8 <col:29, col:36> col:36 count 'UINT16':'unsigned short'
| |-ParmVarDecl 0xfa4940 <col:43, col:51> col:51 semHandle 'UINT32 *'
| `-FullComment 0x100ef70 <line:169:3, line:190:21>
|   |-ParagraphComment 0x100d310 <line:169:3>
|   | `-TextComment 0x100d2e0 <col:3> Text=" "
|   |-VerbatimLineComment 0x100d330 <col:4, col:20> Text=" los_sem"
|   |-ParagraphComment 0x100d3a0 <line:170:3>
|   | `-TextComment 0x100d370 <col:3> Text=" "
|   |-BlockCommandComment 0x100d3c0 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0x100d420 <col:10, col:38>
|   |   `-TextComment 0x100d3f0 <col:10, col:38> Text=" Create a Counting semaphore."
|   |-ParagraphComment 0x100d470 <line:172:3>
|   | `-TextComment 0x100d440 <col:3> Text=" "
|   |-BlockCommandComment 0x100d490 <col:4, line:175:3> Name="par"
|   | `-ParagraphComment 0x100d560 <line:172:8, line:175:3>
|   |   |-TextComment 0x100d4c0 <line:172:8, col:20> Text=" Description:"
|   |   |-TextComment 0x100d4e0 <line:173:3, col:115> Text=" This API is used to create a semaphore control structure according to the initial number of available semaphores"
|   |   |-TextComment 0x100d500 <line:174:3, col:76> Text=" specified by count and return the ID of this semaphore control structure."
|   |   `-TextComment 0x100d520 <line:175:3> Text=" "
|   |-BlockCommandComment 0x100d580 <col:4, line:178:8> Name="attention"
|   | `-ParagraphComment 0x100d750 <line:176:3, line:178:8>
|   |   |-TextComment 0x100d5b0 <line:176:3> Text=" "
|   |   |-HTMLStartTagComment 0x100d5d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x100d610 <line:177:3> Text=" "
|   |   |-HTMLStartTagComment 0x100d630 <col:4, col:7> Name="li"
|   |   |-TextComment 0x100d670 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x100d690 <col:13, col:17> Name="li"
|   |   |-TextComment 0x100d6c0 <line:178:3> Text=" "
|   |   `-HTMLEndTagComment 0x100d6e0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x100d7a0 <line:180:3>
|   | `-TextComment 0x100d770 <col:3> Text=" "
|   |-ParamCommandComment 0x100d7c0 <col:4, line:181:3> [in] implicitly Param="count" ParamIndex=0
|   | `-ParagraphComment 0x100d870 <line:180:16, line:181:3>
|   |   |-TextComment 0x100d820 <line:180:16, col:118> Text="       [IN]  Initial number of available semaphores. The value range is [0, OS_SEM_COUNTING_MAX_COUNT)."
|   |   `-TextComment 0x100d840 <line:181:3> Text=" "
|   |-ParamCommandComment 0x100d890 <col:4, col:86> [in] implicitly Param="semHandle" ParamIndex=1
|   | `-ParagraphComment 0x100d920 <col:20, col:86>
|   |   `-TextComment 0x100d8f0 <col:20, col:86> Text="   [OUT] ID of the semaphore control structure that is initialized."
|   |-ParagraphComment 0x100d970 <line:183:3>
|   | `-TextComment 0x100d940 <col:3> Text=" "
|   |-BlockCommandComment 0x100d990 <col:4, line:184:3> Name="retval"
|   | `-ParagraphComment 0x100da10 <line:183:11, line:184:3>
|   |   |-TextComment 0x100d9c0 <line:183:11, col:77> Text=" #LOS_ERRNO_SEM_PTR_NULL     The passed-in semHandle value is NULL."
|   |   `-TextComment 0x100d9e0 <line:184:3> Text=" "
|   |-BlockCommandComment 0x100ea60 <col:4, line:186:3> Name="retval"
|   | `-ParagraphComment 0x100eb10 <line:184:11, line:186:3>
|   |   |-TextComment 0x100ea90 <line:184:11, col:112> Text=" #LOS_ERRNO_SEM_OVERFLOW     The passed-in count value is greater than the maximum number of available"
|   |   |-TextComment 0x100eab0 <line:185:3, col:14> Text=" semaphores."
|   |   `-TextComment 0x100ead0 <line:186:3> Text=" "
|   |-BlockCommandComment 0x100eb30 <col:4, line:187:3> Name="retval"
|   | `-ParagraphComment 0x100ebb0 <line:186:11, line:187:3>
|   |   |-TextComment 0x100eb60 <line:186:11, col:83> Text=" #LOS_ERRNO_SEM_ALL_BUSY     No semaphore control structure is available."
|   |   `-TextComment 0x100eb80 <line:187:3> Text=" "
|   |-BlockCommandComment 0x100ebd0 <col:4, line:188:3> Name="retval"
|   | `-ParagraphComment 0x100ec50 <line:187:11, line:188:3>
|   |   |-TextComment 0x100ec00 <line:187:11, col:59> Text=" #LOS_OK   The semaphore is successfully created."
|   |   `-TextComment 0x100ec20 <line:188:3> Text=" "
|   |-BlockCommandComment 0x100ec70 <col:4, line:190:3> Name="par"
|   | `-ParagraphComment 0x100ee40 <line:188:8, line:190:3>
|   |   |-TextComment 0x100eca0 <line:188:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x100ecc0 <line:189:3> Text=" "
|   |   |-HTMLStartTagComment 0x100ece0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x100ed20 <col:8, col:11> Name="li"
|   |   |-TextComment 0x100ed60 <col:12, col:72> Text="los_sem.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x100ed80 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x100edb0 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x100ede0 <line:190:3> Text=" "
|   `-BlockCommandComment 0x100ee60 <col:4, col:21> Name="see"
|     `-ParagraphComment 0x100eec0 <col:8, col:21>
|       `-TextComment 0x100ee90 <col:8, col:21> Text=" LOS_SemDelete"
|-FunctionDecl 0xfa4c58 <line:218:1, col:66> col:15 LOS_BinarySemCreate 'UINT32 (UINT16, UINT32 *)' extern
| |-ParmVarDecl 0xfa4b48 <col:35, col:42> col:42 count 'UINT16':'unsigned short'
| |-ParmVarDecl 0xfa4bc0 <col:49, col:57> col:57 semHandle 'UINT32 *'
| `-FullComment 0x100fc60 <line:195:3, line:216:21>
|   |-ParagraphComment 0x100f010 <line:195:3>
|   | `-TextComment 0x100efe0 <col:3> Text=" "
|   |-VerbatimLineComment 0x100f030 <col:4, col:20> Text=" los_sem"
|   |-ParagraphComment 0x100f0a0 <line:196:3>
|   | `-TextComment 0x100f070 <col:3> Text=" "
|   |-BlockCommandComment 0x100f0c0 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0x100f120 <col:10, col:36>
|   |   `-TextComment 0x100f0f0 <col:10, col:36> Text=" Create a binary semaphore."
|   |-ParagraphComment 0x100f170 <line:198:3>
|   | `-TextComment 0x100f140 <col:3> Text=" "
|   |-BlockCommandComment 0x100f190 <col:4, line:201:3> Name="par"
|   | `-ParagraphComment 0x100f260 <line:198:8, line:201:3>
|   |   |-TextComment 0x100f1c0 <line:198:8, col:20> Text=" Description:"
|   |   |-TextComment 0x100f1e0 <line:199:3, col:111> Text=" This API is used to create a binary semaphore control structure according to the initial number of available"
|   |   |-TextComment 0x100f200 <line:200:3, col:87> Text=" semaphores specified by count and return the ID of this semaphore control structure."
|   |   `-TextComment 0x100f220 <line:201:3> Text=" "
|   |-BlockCommandComment 0x100f280 <col:4, line:204:8> Name="attention"
|   | `-ParagraphComment 0x100f450 <line:202:3, line:204:8>
|   |   |-TextComment 0x100f2b0 <line:202:3> Text=" "
|   |   |-HTMLStartTagComment 0x100f2d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x100f310 <line:203:3> Text=" "
|   |   |-HTMLStartTagComment 0x100f330 <col:4, col:7> Name="li"
|   |   |-TextComment 0x100f370 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x100f390 <col:13, col:17> Name="li"
|   |   |-TextComment 0x100f3c0 <line:204:3> Text=" "
|   |   `-HTMLEndTagComment 0x100f3e0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x100f4a0 <line:206:3>
|   | `-TextComment 0x100f470 <col:3> Text=" "
|   |-ParamCommandComment 0x100f4c0 <col:4, line:207:3> [in] implicitly Param="count" ParamIndex=0
|   | `-ParagraphComment 0x100f570 <line:206:16, line:207:3>
|   |   |-TextComment 0x100f520 <line:206:16, col:95> Text="        [IN]  Initial number of available semaphores. The value range is [0, 1]."
|   |   `-TextComment 0x100f540 <line:207:3> Text=" "
|   |-ParamCommandComment 0x100f590 <col:4, col:87> [in] implicitly Param="semHandle" ParamIndex=1
|   | `-ParagraphComment 0x100f620 <col:20, col:87>
|   |   `-TextComment 0x100f5f0 <col:20, col:87> Text="    [OUT] ID of the semaphore control structure that is initialized."
|   |-ParagraphComment 0x100f670 <line:209:3>
|   | `-TextComment 0x100f640 <col:3> Text=" "
|   |-BlockCommandComment 0x100f690 <col:4, line:210:3> Name="retval"
|   | `-ParagraphComment 0x100f710 <line:209:11, line:210:3>
|   |   |-TextComment 0x100f6c0 <line:209:11, col:77> Text=" #LOS_ERRNO_SEM_PTR_NULL     The passed-in semHandle value is NULL."
|   |   `-TextComment 0x100f6e0 <line:210:3> Text=" "
|   |-BlockCommandComment 0x100f730 <col:4, line:212:3> Name="retval"
|   | `-ParagraphComment 0x100f7e0 <line:210:11, line:212:3>
|   |   |-TextComment 0x100f760 <line:210:11, col:112> Text=" #LOS_ERRNO_SEM_OVERFLOW     The passed-in count value is greater than the maximum number of available"
|   |   |-TextComment 0x100f780 <line:211:3, col:14> Text=" semaphores."
|   |   `-TextComment 0x100f7a0 <line:212:3> Text=" "
|   |-BlockCommandComment 0x100f800 <col:4, line:213:3> Name="retval"
|   | `-ParagraphComment 0x100f880 <line:212:11, line:213:3>
|   |   |-TextComment 0x100f830 <line:212:11, col:83> Text=" #LOS_ERRNO_SEM_ALL_BUSY     No semaphore control structure is available."
|   |   `-TextComment 0x100f850 <line:213:3> Text=" "
|   |-BlockCommandComment 0x100f8a0 <col:4, line:214:3> Name="retval"
|   | `-ParagraphComment 0x100f920 <line:213:11, line:214:3>
|   |   |-TextComment 0x100f8d0 <line:213:11, col:59> Text=" #LOS_OK   The semaphore is successfully created."
|   |   `-TextComment 0x100f8f0 <line:214:3> Text=" "
|   |-BlockCommandComment 0x100f940 <col:4, line:216:3> Name="par"
|   | `-ParagraphComment 0x100fb30 <line:214:8, line:216:3>
|   |   |-TextComment 0x100f970 <line:214:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x100f990 <line:215:3> Text=" "
|   |   |-HTMLStartTagComment 0x100f9b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x100f9f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x100fa30 <col:12, col:72> Text="los_sem.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x100fa70 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x100faa0 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x100fad0 <line:216:3> Text=" "
|   `-BlockCommandComment 0x100fb50 <col:4, col:21> Name="see"
|     `-ParagraphComment 0x100fbb0 <col:8, col:21>
|       `-TextComment 0x100fb80 <col:8, col:21> Text=" LOS_SemDelete"
|-FunctionDecl 0xfa4dd8 <line:242:1, col:45> col:15 LOS_SemDelete 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xfa4d48 <col:29, col:36> col:36 semHandle 'UINT32':'unsigned int'
| `-FullComment 0x10107b0 <line:221:3, line:240:21>
|   |-ParagraphComment 0x100fd00 <line:221:3>
|   | `-TextComment 0x100fcd0 <col:3> Text=" "
|   |-VerbatimLineComment 0x100fd20 <col:4, col:20> Text=" los_sem"
|   |-ParagraphComment 0x100fd90 <line:222:3>
|   | `-TextComment 0x100fd60 <col:3> Text=" "
|   |-BlockCommandComment 0x100fdb0 <col:4, col:29> Name="brief"
|   | `-ParagraphComment 0x100fe10 <col:10, col:29>
|   |   `-TextComment 0x100fde0 <col:10, col:29> Text=" Delete a semaphore."
|   |-ParagraphComment 0x100fe60 <line:224:3>
|   | `-TextComment 0x100fe30 <col:3> Text=" "
|   |-BlockCommandComment 0x100fe80 <col:4, line:226:3> Name="par"
|   | `-ParagraphComment 0x100ff30 <line:224:8, line:226:3>
|   |   |-TextComment 0x100feb0 <line:224:8, col:20> Text=" Description:"
|   |   |-TextComment 0x100fed0 <line:225:3, col:98> Text=" This API is used to delete a semaphore control structure that has an ID specified by semHandle."
|   |   `-TextComment 0x100fef0 <line:226:3> Text=" "
|   |-BlockCommandComment 0x100ff50 <col:4, line:229:8> Name="attention"
|   | `-ParagraphComment 0x1010120 <line:227:3, line:229:8>
|   |   |-TextComment 0x100ff80 <line:227:3> Text=" "
|   |   |-HTMLStartTagComment 0x100ffa0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x100ffe0 <line:228:3> Text=" "
|   |   |-HTMLStartTagComment 0x1010000 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1010040 <col:8, col:51> Text="The specified sem id must be created first. "
|   |   |-HTMLEndTagComment 0x1010060 <col:52, col:56> Name="li"
|   |   |-TextComment 0x1010090 <line:229:3> Text=" "
|   |   `-HTMLEndTagComment 0x10100b0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1010170 <line:231:3>
|   | `-TextComment 0x1010140 <col:3> Text=" "
|   |-ParamCommandComment 0x1010190 <col:4, line:232:57> [in] implicitly Param="semHandle" ParamIndex=0
|   | `-ParagraphComment 0x1010240 <line:231:20, line:232:57>
|   |   |-TextComment 0x10101f0 <line:231:20, col:103> Text="   [IN] ID of the semaphore control structure to be deleted. The ID of the semaphore"
|   |   `-TextComment 0x1010210 <line:232:3, col:57> Text=" control structure is obtained from semaphore creation."
|   |-ParagraphComment 0x1010290 <line:234:3>
|   | `-TextComment 0x1010260 <col:3> Text=" "
|   |-BlockCommandComment 0x10102b0 <col:4, line:235:3> Name="retval"
|   | `-ParagraphComment 0x1010330 <line:234:11, line:235:3>
|   |   |-TextComment 0x10102e0 <line:234:11, col:76> Text=" #LOS_ERRNO_SEM_INVALID  The passed-in semHandle value is invalid."
|   |   `-TextComment 0x1010300 <line:235:3> Text=" "
|   |-BlockCommandComment 0x1010350 <col:4, line:237:3> Name="retval"
|   | `-ParagraphComment 0x1010400 <line:235:11, line:237:3>
|   |   |-TextComment 0x1010380 <line:235:11, col:112> Text=" #LOS_ERRNO_SEM_PENDED   The queue of the tasks that are waiting on the semaphore control structure is"
|   |   |-TextComment 0x10103a0 <line:236:3, col:12> Text=" not null."
|   |   `-TextComment 0x10103c0 <line:237:3> Text=" "
|   |-BlockCommandComment 0x1010420 <col:4, line:238:3> Name="retval"
|   | `-ParagraphComment 0x10104a0 <line:237:11, line:238:3>
|   |   |-TextComment 0x1010450 <line:237:11, col:77> Text=" #LOS_OK   The semaphore control structure is successfully deleted."
|   |   `-TextComment 0x1010470 <line:238:3> Text=" "
|   |-BlockCommandComment 0x10104c0 <col:4, line:240:3> Name="par"
|   | `-ParagraphComment 0x1010690 <line:238:8, line:240:3>
|   |   |-TextComment 0x10104f0 <line:238:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1010510 <line:239:3> Text=" "
|   |   |-HTMLStartTagComment 0x1010530 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1010570 <col:8, col:11> Name="li"
|   |   |-TextComment 0x10105b0 <col:12, col:72> Text="los_sem.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x10105d0 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x1010600 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x1010630 <line:240:3> Text=" "
|   `-BlockCommandComment 0x10106b0 <col:4, col:21> Name="see"
|     `-ParagraphComment 0x1010710 <col:8, col:21>
|       `-TextComment 0x10106e0 <col:8, col:21> Text=" LOS_SemCreate"
|-FunctionDecl 0xfa4fc8 <line:272:1, col:59> col:15 LOS_SemPend 'UINT32 (UINT32, UINT32)' extern
| |-ParmVarDecl 0xfa4eb8 <col:27, col:34> col:34 semHandle 'UINT32':'unsigned int'
| |-ParmVarDecl 0xfa4f30 <col:45, col:52> col:52 timeout 'UINT32':'unsigned int'
| `-FullComment 0x1011640 <line:245:3, line:270:35>
|   |-ParagraphComment 0x1010850 <line:245:3>
|   | `-TextComment 0x1010820 <col:3> Text=" "
|   |-VerbatimLineComment 0x1010870 <col:4, col:20> Text=" los_sem"
|   |-ParagraphComment 0x10108e0 <line:246:3>
|   | `-TextComment 0x10108b0 <col:3> Text=" "
|   |-BlockCommandComment 0x1010900 <col:4, col:30> Name="brief"
|   | `-ParagraphComment 0x1010960 <col:10, col:30>
|   |   `-TextComment 0x1010930 <col:10, col:30> Text=" Request a semaphore."
|   |-ParagraphComment 0x10109b0 <line:248:3>
|   | `-TextComment 0x1010980 <col:3> Text=" "
|   |-BlockCommandComment 0x10109d0 <col:4, line:251:3> Name="par"
|   | `-ParagraphComment 0x1010ac0 <line:248:8, line:251:3>
|   |   |-TextComment 0x1010a00 <line:248:8, col:20> Text=" Description:"
|   |   |-TextComment 0x1010a20 <line:249:3, col:117> Text=" This API is used to request a semaphore based on the semaphore control structure ID specified by semHandle and the"
|   |   |-TextComment 0x1010a40 <line:250:3, col:47> Text=" parameter that specifies the timeout period."
|   |   `-TextComment 0x1010a80 <line:251:3> Text=" "
|   |-BlockCommandComment 0x1010ae0 <col:4, line:254:8> Name="attention"
|   | `-ParagraphComment 0x1010cb0 <line:252:3, line:254:8>
|   |   |-TextComment 0x1010b10 <line:252:3> Text=" "
|   |   |-HTMLStartTagComment 0x1010b30 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1010b70 <line:253:3> Text=" "
|   |   |-HTMLStartTagComment 0x1010b90 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1010bd0 <col:8, col:51> Text="The specified sem id must be created first. "
|   |   |-HTMLEndTagComment 0x1010bf0 <col:52, col:56> Name="li"
|   |   |-TextComment 0x1010c20 <line:254:3> Text=" "
|   |   `-HTMLEndTagComment 0x1010c40 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1010d00 <line:256:3>
|   | `-TextComment 0x1010cd0 <col:3> Text=" "
|   |-ParamCommandComment 0x1010d20 <col:4, line:258:3> [in] implicitly Param="semHandle" ParamIndex=0
|   | `-ParagraphComment 0x1010e00 <line:256:20, line:258:3>
|   |   |-TextComment 0x1010d80 <line:256:20, col:113> Text="   [IN] ID of the semaphore control structure to be requested. The ID of the semaphore control"
|   |   |-TextComment 0x1010da0 <line:257:3, col:49> Text=" structure is obtained from semaphore creation."
|   |   `-TextComment 0x1010dc0 <line:258:3> Text=" "
|   |-ParamCommandComment 0x1010e20 <col:4, line:260:50> [in] implicitly Param="timeout" ParamIndex=1
|   | `-ParagraphComment 0x1010f00 <line:258:18, line:260:50>
|   |   |-TextComment 0x1010e80 <line:258:18, col:109> Text="     [IN] Timeout interval for waiting on the semaphore. The value range is [0, 0xFFFFFFFF]."
|   |   |-TextComment 0x1010ea0 <line:259:3, col:95> Text=" If the value is set to 0, the semaphore is not waited on. If the value is set to 0xFFFFFFFF,"
|   |   `-TextComment 0x1010ec0 <line:260:3, col:50> Text=" the semaphore is waited on forever(unit: Tick)."
|   |-ParagraphComment 0x1010f50 <line:262:3>
|   | `-TextComment 0x1010f20 <col:3> Text=" "
|   |-BlockCommandComment 0x1010f70 <col:4, line:263:3> Name="retval"
|   | `-ParagraphComment 0x1010ff0 <line:262:11, line:263:3>
|   |   |-TextComment 0x1010fa0 <line:262:11, col:84> Text=" #LOS_ERRNO_SEM_INVALID          The passed-in semHandle value is invalid."
|   |   `-TextComment 0x1010fc0 <line:263:3> Text=" "
|   |-BlockCommandComment 0x1011010 <col:4, line:264:3> Name="retval"
|   | `-ParagraphComment 0x1011090 <line:263:11, line:264:3>
|   |   |-TextComment 0x1011040 <line:263:11, col:84> Text=" #LOS_ERRNO_SEM_UNAVAILABLE      There is no available semaphore resource."
|   |   `-TextComment 0x1011060 <line:264:3> Text=" "
|   |-BlockCommandComment 0x10110b0 <col:4, line:265:3> Name="retval"
|   | `-ParagraphComment 0x1011130 <line:264:11, line:265:3>
|   |   |-TextComment 0x10110e0 <line:264:11, col:101> Text=" #LOS_ERRNO_SEM_PEND_INTERR      The API is called during an interrupt, which is forbidden."
|   |   `-TextComment 0x1011100 <line:265:3> Text=" "
|   |-BlockCommandComment 0x1011150 <col:4, line:266:3> Name="retval"
|   | `-ParagraphComment 0x10111d0 <line:265:11, line:266:3>
|   |   |-TextComment 0x1011180 <line:265:11, col:119> Text=" #LOS_ERRNO_SEM_PEND_IN_LOCK     The task is unable to request a semaphore because task scheduling is locked."
|   |   `-TextComment 0x10111a0 <line:266:3> Text=" "
|   |-BlockCommandComment 0x10111f0 <col:4, line:267:3> Name="retval"
|   | `-ParagraphComment 0x1011270 <line:266:11, line:267:3>
|   |   |-TextComment 0x1011220 <line:266:11, col:75> Text=" #LOS_ERRNO_SEM_TIMEOUT	 The request for the semaphore times out."
|   |   `-TextComment 0x1011240 <line:267:3> Text=" "
|   |-BlockCommandComment 0x1011290 <col:4, line:268:3> Name="retval"
|   | `-ParagraphComment 0x1011310 <line:267:11, line:268:3>
|   |   |-TextComment 0x10112c0 <line:267:11, col:52> Text=" #LOS_OK   The semaphore request succeeds."
|   |   `-TextComment 0x10112e0 <line:268:3> Text=" "
|   |-BlockCommandComment 0x1011330 <col:4, line:270:3> Name="par"
|   | `-ParagraphComment 0x1011500 <line:268:8, line:270:3>
|   |   |-TextComment 0x1011360 <line:268:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1011380 <line:269:3> Text=" "
|   |   |-HTMLStartTagComment 0x10113a0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x10113e0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x1011420 <col:12, col:72> Text="los_sem.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1011440 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x1011470 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x10114a0 <line:270:3> Text=" "
|   `-BlockCommandComment 0x1011520 <col:4, col:35> Name="see"
|     `-ParagraphComment 0x1011580 <col:8, col:35>
|       `-TextComment 0x1011550 <col:8, col:35> Text=" LOS_SemPost | LOS_SemCreate"
|-FunctionDecl 0xfa5148 <line:295:1, col:43> col:15 LOS_SemPost 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xfa50b8 <col:27, col:34> col:34 semHandle 'UINT32':'unsigned int'
| `-FullComment 0x1012180 <line:275:3, line:293:35>
|   |-ParagraphComment 0x10116e0 <line:275:3>
|   | `-TextComment 0x10116b0 <col:3> Text=" "
|   |-VerbatimLineComment 0x1011700 <col:4, col:20> Text=" los_sem"
|   |-ParagraphComment 0x1011770 <line:276:3>
|   | `-TextComment 0x1011740 <col:3> Text=" "
|   |-BlockCommandComment 0x1011790 <col:4, col:30> Name="brief"
|   | `-ParagraphComment 0x10117f0 <col:10, col:30>
|   |   `-TextComment 0x10117c0 <col:10, col:30> Text=" Release a semaphore."
|   |-ParagraphComment 0x1011840 <line:278:3>
|   | `-TextComment 0x1011810 <col:3> Text=" "
|   |-BlockCommandComment 0x1011860 <col:4, line:280:3> Name="par"
|   | `-ParagraphComment 0x1011910 <line:278:8, line:280:3>
|   |   |-TextComment 0x1011890 <line:278:8, col:20> Text=" Description:"
|   |   |-TextComment 0x10118b0 <line:279:3, col:108> Text=" This API is used to release a semaphore that has a semaphore control structure ID specified by semHandle."
|   |   `-TextComment 0x10118d0 <line:280:3> Text=" "
|   |-BlockCommandComment 0x1011930 <col:4, line:283:8> Name="attention"
|   | `-ParagraphComment 0x1011b20 <line:281:3, line:283:8>
|   |   |-TextComment 0x1011960 <line:281:3> Text=" "
|   |   |-HTMLStartTagComment 0x1011980 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x10119c0 <line:282:3> Text=" "
|   |   |-HTMLStartTagComment 0x10119e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1011a20 <col:8, col:51> Text="The specified sem id must be created first. "
|   |   |-HTMLEndTagComment 0x1011a40 <col:52, col:56> Name="li"
|   |   |-TextComment 0x1011a90 <line:283:3> Text=" "
|   |   `-HTMLEndTagComment 0x1011ab0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1011b70 <line:285:3>
|   | `-TextComment 0x1011b40 <col:3> Text=" "
|   |-ParamCommandComment 0x1011b90 <col:4, line:286:49> [in] implicitly Param="semHandle" ParamIndex=0
|   | `-ParagraphComment 0x1011c40 <line:285:20, line:286:49>
|   |   |-TextComment 0x1011bf0 <line:285:20, col:111> Text="   [IN] ID of the semaphore control structure to be released.The ID of the semaphore control"
|   |   `-TextComment 0x1011c10 <line:286:3, col:49> Text=" structure is obtained from semaphore creation."
|   |-ParagraphComment 0x1011c90 <line:288:3>
|   | `-TextComment 0x1011c60 <col:3> Text=" "
|   |-BlockCommandComment 0x1011cb0 <col:4, line:289:3> Name="retval"
|   | `-ParagraphComment 0x1011d30 <line:288:11, line:289:3>
|   |   |-TextComment 0x1011ce0 <line:288:11, col:80> Text=" #LOS_ERRNO_SEM_INVALID      The passed-in semHandle value is invalid."
|   |   `-TextComment 0x1011d00 <line:289:3> Text=" "
|   |-BlockCommandComment 0x1011d50 <col:4, line:290:3> Name="retval"
|   | `-ParagraphComment 0x1011dd0 <line:289:11, line:290:3>
|   |   |-TextComment 0x1011d80 <line:289:11, col:105> Text=" #LOS_ERRNO_SEM_OVERFLOW     The times of semaphore release exceed the maximum times permitted."
|   |   `-TextComment 0x1011da0 <line:290:3> Text=" "
|   |-BlockCommandComment 0x1011df0 <col:4, line:291:3> Name="retval"
|   | `-ParagraphComment 0x1011e70 <line:290:11, line:291:3>
|   |   |-TextComment 0x1011e20 <line:290:11, col:78> Text=" #LOS_OK                     The semaphore is successfully released."
|   |   `-TextComment 0x1011e40 <line:291:3> Text=" "
|   |-BlockCommandComment 0x1011e90 <col:4, line:293:3> Name="par"
|   | `-ParagraphComment 0x1012060 <line:291:8, line:293:3>
|   |   |-TextComment 0x1011ec0 <line:291:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1011ee0 <line:292:3> Text=" "
|   |   |-HTMLStartTagComment 0x1011f00 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1011f40 <col:8, col:11> Name="li"
|   |   |-TextComment 0x1011f80 <col:12, col:72> Text="los_sem.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1011fa0 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x1011fd0 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x1012000 <line:293:3> Text=" "
|   `-BlockCommandComment 0x1012080 <col:4, col:35> Name="see"
|     `-ParagraphComment 0x10120e0 <col:8, col:35>
|       `-TextComment 0x10120b0 <col:8, col:35> Text=" LOS_SemPend | LOS_SemCreate"
|-FunctionDecl 0xfa53e8 <line:297:1, col:63> col:15 LOS_SemGetValue 'UINT32 (UINT32, INT32 *)' extern
| |-ParmVarDecl 0xfa5200 <col:31, col:38> col:38 semHandle 'UINT32':'unsigned int'
| `-ParmVarDecl 0xfa52d8 <col:49, col:56> col:56 currVal 'INT32 *'
|-RecordDecl 0xfa54c8 <line:303:9, line:309:1> line:303:9 struct definition
| |-FullComment 0x10122f0 <line:300:3, line:301:31>
| | |-ParagraphComment 0x1012220 <line:300:3>
| | | `-TextComment 0x10121f0 <col:3> Text=" "
| | |-VerbatimLineComment 0x1012240 <col:4, col:20> Text=" los_sem"
| | `-ParagraphComment 0x10122b0 <line:301:3, col:31>
| |   `-TextComment 0x1012280 <col:3, col:31> Text=" Semaphore control structure."
| |-FieldDecl 0xfa5580 <line:304:5, col:12> col:12 semStat 'UINT16':'unsigned short'
| | `-FullComment 0x10123c0 <col:30, col:46>
| |   `-ParagraphComment 0x1012390 <col:30, col:46>
| |     `-TextComment 0x1012360 <col:30, col:46> Text=" Semaphore state "
| |-FieldDecl 0xfa5608 <line:305:5, col:12> col:12 semCount 'UINT16':'unsigned short'
| | `-FullComment 0x1012490 <col:30, col:61>
| |   `-ParagraphComment 0x1012460 <col:30, col:61>
| |     `-TextComment 0x1012430 <col:30, col:61> Text=" Number of available semaphores "
| |-FieldDecl 0xfa6b50 <line:306:5, col:12> col:12 maxSemCount 'UINT16':'unsigned short'
| | `-FullComment 0x1012560 <col:30, col:65>
| |   `-ParagraphComment 0x1012530 <col:30, col:65>
| |     `-TextComment 0x1012500 <col:30, col:65> Text=" Max number of available semaphores "
| |-FieldDecl 0xfa6bd8 <line:307:5, col:12> col:12 semID 'UINT16':'unsigned short'
| | `-FullComment 0x1012630 <col:30, col:61>
| |   `-ParagraphComment 0x1012600 <col:30, col:61>
| |     `-TextComment 0x10125d0 <col:30, col:61> Text=" Semaphore control structure ID "
| `-FieldDecl 0xfa6c68 <line:308:5, col:17> col:17 semList 'LOS_DL_LIST':'struct LOS_DL_LIST'
|   `-FullComment 0x1012700 <col:30, col:77>
|     `-ParagraphComment 0x10126d0 <col:30, col:77>
|       `-TextComment 0x10126a0 <col:30, col:77> Text=" Queue of tasks that are waiting on a semaphore "
|-TypedefDecl 0xfa6d48 <line:303:1, line:309:3> col:3 referenced LosSemCB 'struct LosSemCB':'LosSemCB'
| |-ElaboratedType 0xfa6cf0 'struct LosSemCB' sugar
| | `-RecordType 0xfa5550 'LosSemCB'
| |   `-Record 0xfa54c8 ''
| `-FullComment 0x1012870 <line:300:3, line:301:31>
|   |-ParagraphComment 0x10127a0 <line:300:3>
|   | `-TextComment 0x1012770 <col:3> Text=" "
|   |-VerbatimLineComment 0x10127c0 <col:4, col:20> Text=" los_sem"
|   `-ParagraphComment 0x1012830 <line:301:3, col:31>
|     `-TextComment 0x1012800 <col:3, col:31> Text=" Semaphore control structure."
|-VarDecl 0xfa6ef8 <line:335:1, col:18> col:18 g_allSem 'LosSemCB *' extern
|-FunctionDecl 0xfa7050 <line:361:1, col:29> col:15 OsSemInit 'UINT32 (void)' extern
| `-FullComment 0x1013200 <line:344:3, line:359:13>
|   |-ParagraphComment 0x1012910 <line:344:3>
|   | `-TextComment 0x10128e0 <col:3> Text=" "
|   |-VerbatimLineComment 0x1012930 <col:4, col:20> Text=" los_sem"
|   |-ParagraphComment 0x10129a0 <line:345:3>
|   | `-TextComment 0x1012970 <col:3> Text=" "
|   |-BlockCommandComment 0x10129c0 <col:4, col:55> Name="brief"
|   | `-ParagraphComment 0x1012a20 <col:10, col:55>
|   |   `-TextComment 0x10129f0 <col:10, col:55> Text=" Initialize the  Semaphore doubly linked list."
|   |-ParagraphComment 0x1012a70 <line:347:3>
|   | `-TextComment 0x1012a40 <col:3> Text=" "
|   |-BlockCommandComment 0x1012aa0 <col:4, line:349:3> Name="par"
|   | `-ParagraphComment 0x1012b50 <line:347:8, line:349:3>
|   |   |-TextComment 0x1012ad0 <line:347:8, col:20> Text=" Description:"
|   |   |-TextComment 0x1012af0 <line:348:3, col:68> Text=" This API is used to initialize the  Semaphore doubly linked list."
|   |   `-TextComment 0x1012b10 <line:349:3> Text=" "
|   |-BlockCommandComment 0x1012b70 <col:4, line:352:8> Name="attention"
|   | `-ParagraphComment 0x1012d40 <line:350:3, line:352:8>
|   |   |-TextComment 0x1012ba0 <line:350:3> Text=" "
|   |   |-HTMLStartTagComment 0x1012bc0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1012c00 <line:351:3> Text=" "
|   |   |-HTMLStartTagComment 0x1012c20 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1012c60 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x1012c80 <col:13, col:17> Name="li"
|   |   |-TextComment 0x1012cb0 <line:352:3> Text=" "
|   |   `-HTMLEndTagComment 0x1012cd0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1012d90 <line:354:3>
|   | `-TextComment 0x1012d60 <col:3> Text=" "
|   |-ParamCommandComment 0x1012db0 <col:4, col:15> [in] implicitly Param="None."
|   | `-ParagraphComment 0x1012e10 <<invalid sloc>>
|   |-ParagraphComment 0x1012e60 <line:356:3>
|   | `-TextComment 0x1012e30 <col:3> Text=" "
|   |-BlockCommandComment 0x1012e80 <col:4, line:357:3> Name="retval"
|   | `-ParagraphComment 0x1012f00 <line:356:11, line:357:3>
|   |   |-TextComment 0x1012eb0 <line:356:11, col:42> Text=" UINT32   Initialization result."
|   |   `-TextComment 0x1012ed0 <line:357:3> Text=" "
|   |-BlockCommandComment 0x1012f20 <col:4, line:359:3> Name="par"
|   | `-ParagraphComment 0x10130f0 <line:357:8, line:359:3>
|   |   |-TextComment 0x1012f50 <line:357:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1012f70 <line:358:3> Text=" "
|   |   |-HTMLStartTagComment 0x1012f90 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1012fd0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x1013010 <col:12, col:72> Text="los_sem.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1013030 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x1013060 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x1013090 <line:359:3> Text=" "
|   `-BlockCommandComment 0x1013110 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x1013170 <col:8, col:13>
|       `-TextComment 0x1013140 <col:8, col:13> Text=" None."
|-FunctionDecl 0xfa7338 <line:383:1, col:68> col:8 OsSemCreate 'UINT32 (UINT16, UINT16, UINT32 *)'
| |-ParmVarDecl 0xfa7128 <col:20, col:27> col:27 count 'UINT16':'unsigned short'
| |-ParmVarDecl 0xfa71a0 <col:34, col:41> col:41 maxCount 'UINT16':'unsigned short'
| |-ParmVarDecl 0xfa7218 <col:51, col:59> col:59 semHandle 'UINT32 *'
| `-FullComment 0x1013d70 <line:364:3, line:381:13>
|   |-ParagraphComment 0x10132a0 <line:364:3>
|   | `-TextComment 0x1013270 <col:3> Text=" "
|   |-VerbatimLineComment 0x10132c0 <col:4, col:20> Text=" los_sem"
|   |-ParagraphComment 0x1013330 <line:365:3>
|   | `-TextComment 0x1013300 <col:3> Text=" "
|   |-BlockCommandComment 0x1013350 <col:4, col:27> Name="brief"
|   | `-ParagraphComment 0x10133b0 <col:10, col:27>
|   |   `-TextComment 0x1013380 <col:10, col:27> Text=" Create Semaphore."
|   |-ParagraphComment 0x1013400 <line:367:3>
|   | `-TextComment 0x10133d0 <col:3> Text=" "
|   |-BlockCommandComment 0x1013420 <col:4, line:369:3> Name="par"
|   | `-ParagraphComment 0x10134d0 <line:367:8, line:369:3>
|   |   |-TextComment 0x1013450 <line:367:8, col:20> Text=" Description:"
|   |   |-TextComment 0x1013470 <line:368:3, col:40> Text=" This API is used to create Semaphore."
|   |   `-TextComment 0x1013490 <line:369:3> Text=" "
|   |-BlockCommandComment 0x10134f0 <col:4, line:372:8> Name="attention"
|   | `-ParagraphComment 0x10136c0 <line:370:3, line:372:8>
|   |   |-TextComment 0x1013520 <line:370:3> Text=" "
|   |   |-HTMLStartTagComment 0x1013540 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1013580 <line:371:3> Text=" "
|   |   |-HTMLStartTagComment 0x10135a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x10135e0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x1013600 <col:13, col:17> Name="li"
|   |   |-TextComment 0x1013630 <line:372:3> Text=" "
|   |   `-HTMLEndTagComment 0x1013650 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1013710 <line:374:3>
|   | `-TextComment 0x10136e0 <col:3> Text=" "
|   |-ParamCommandComment 0x1013730 <col:4, line:375:3> [in] implicitly Param="count" ParamIndex=0
|   | `-ParagraphComment 0x10137e0 <line:374:17, line:375:3>
|   |   |-TextComment 0x1013790 <line:374:17, col:56> Text="      [IN]Type  #UINT16 Semaphore count."
|   |   `-TextComment 0x10137b0 <line:375:3> Text=" "
|   |-ParamCommandComment 0x1013800 <col:4, line:376:3> [in] implicitly Param="maxCount" ParamIndex=1
|   | `-ParagraphComment 0x10138b0 <line:375:20, line:376:3>
|   |   |-TextComment 0x1013860 <line:375:20, col:60> Text="   [IN]Type  #UINT16 Max semaphore count."
|   |   `-TextComment 0x1013880 <line:376:3> Text=" "
|   |-ParamCommandComment 0x10138d0 <col:4, col:61> [in] implicitly Param="semHandle" ParamIndex=2
|   | `-ParagraphComment 0x1013960 <col:21, col:61>
|   |   `-TextComment 0x1013930 <col:21, col:61> Text="  [OUT]Type #UINT32 * Index of semaphore."
|   |-ParagraphComment 0x10139b0 <line:378:3>
|   | `-TextComment 0x1013980 <col:3> Text=" "
|   |-BlockCommandComment 0x10139d0 <col:4, line:379:3> Name="retval"
|   | `-ParagraphComment 0x1013a50 <line:378:11, line:379:3>
|   |   |-TextComment 0x1013a00 <line:378:11, col:34> Text=" UINT32   Create result."
|   |   `-TextComment 0x1013a20 <line:379:3> Text=" "
|   |-BlockCommandComment 0x1013a70 <col:4, line:381:3> Name="par"
|   | `-ParagraphComment 0x1013c50 <line:379:8, line:381:3>
|   |   |-TextComment 0x1013ab0 <line:379:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1013ad0 <line:380:3> Text=" "
|   |   |-HTMLStartTagComment 0x1013af0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1013b30 <col:8, col:11> Name="li"
|   |   |-TextComment 0x1013b70 <col:12, col:72> Text="los_sem.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1013b90 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0x1013bc0 <col:78, col:82> Name="ul"
|   |   `-TextComment 0x1013bf0 <line:381:3> Text=" "
|   `-BlockCommandComment 0x1013c70 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x1013cd0 <col:8, col:13>
|       `-TextComment 0x1013ca0 <col:8, col:13> Text=" None."
|-EnumDecl 0xfa7748 <main/los_swtmr.h:220:1, line:223:1> line:220:6 enSwTmrRousesType
| |-EnumConstantDecl 0xfa7810 <line:221:5> col:5 OS_SWTMR_ROUSES_IGNORE 'int'
| `-EnumConstantDecl 0xfa7860 <line:222:5> col:5 OS_SWTMR_ROUSES_ALLOW 'int'
|-EnumDecl 0xfa78b0 <line:225:1, line:228:1> line:225:6 enSwTmrAlignSensitive
| |-EnumConstantDecl 0xfa7970 <line:226:5> col:5 OS_SWTMR_ALIGN_SENSITIVE 'int'
| `-EnumConstantDecl 0xfa79c0 <line:227:5> col:5 OS_SWTMR_ALIGN_INSENSITIVE 'int'
|-EnumDecl 0xfa7a38 <line:235:1, line:242:1> line:235:6 EnSwTmrType
| |-FullComment 0x1013ee0 <line:232:3, line:233:22>
| | |-ParagraphComment 0x1013e10 <line:232:3>
| | | `-TextComment 0x1013de0 <col:3> Text=" "
| | |-VerbatimLineComment 0x1013e30 <col:4, col:22> Text=" los_swtmr"
| | `-ParagraphComment 0x1013ea0 <line:233:3, col:22>
| |   `-TextComment 0x1013e70 <col:3, col:22> Text=" Software timer mode"
| |-EnumConstantDecl 0xfa7b00 <line:236:5> col:5 LOS_SWTMR_MODE_ONCE 'int'
| |-EnumConstantDecl 0xf20410 <line:237:5> col:5 LOS_SWTMR_MODE_PERIOD 'int'
| |-EnumConstantDecl 0xf20460 <line:238:5> col:5 LOS_SWTMR_MODE_NO_SELFDELETE 'int'
| `-EnumConstantDecl 0xf204b0 <line:239:5> col:5 LOS_SWTMR_MODE_OPP 'int'
|-TypedefDecl 0xf20660 <line:264:1, col:44> col:16 referenced SWTMR_PROC_FUNC 'void (*)(UINT32)'
| |-PointerType 0xf20600 'void (*)(UINT32)'
| | `-ParenType 0xf205a0 'void (UINT32)' sugar
| |   `-FunctionProtoType 0xf3b510 'void (UINT32)' cdecl
| |     |-BuiltinType 0xeb3d30 'void'
| |     `-TypedefType 0xf1c810 'UINT32' sugar
| |       |-Typedef 0xf1c140 'UINT32'
| |       `-BuiltinType 0xeb3e70 'unsigned int'
| `-FullComment 0x10148e0 <line:245:2, line:262:12>
|   |-ParagraphComment 0x1013f80 <line:245:2>
|   | `-TextComment 0x1013f50 <col:2> Text=" "
|   |-VerbatimLineComment 0x1013fa0 <col:3, col:22> Text="  los_swtmr"
|   |-ParagraphComment 0x1014010 <line:246:2>
|   | `-TextComment 0x1013fe0 <col:2> Text=" "
|   |-BlockCommandComment 0x1014030 <col:3, col:84> Name="brief"
|   | `-ParagraphComment 0x1014090 <col:9, col:84>
|   |   `-TextComment 0x1014060 <col:9, col:84> Text=" Define the type of a callback function that handles software timer timeout."
|   |-ParagraphComment 0x10140e0 <line:248:2>
|   | `-TextComment 0x10140b0 <col:2> Text=" "
|   |-BlockCommandComment 0x1014100 <col:3, line:250:37> Name="par"
|   | `-ParagraphComment 0x10141b0 <line:248:7, line:250:37>
|   |   |-TextComment 0x1014130 <line:248:7, col:19> Text=" Description:"
|   |   |-TextComment 0x1014150 <line:249:2, col:115> Text=" This API is used to define the type of a callback function that handles software timer timeout, so that it can be"
|   |   `-TextComment 0x1014170 <line:250:2, col:37> Text=" called when software timer timeout."
|   |-ParagraphComment 0x1014200 <line:252:2>
|   | `-TextComment 0x10141d0 <col:2> Text=" "
|   |-BlockCommandComment 0x1014220 <col:3, line:255:7> Name="attention"
|   | `-ParagraphComment 0x10143f0 <line:253:2, line:255:7>
|   |   |-TextComment 0x1014250 <line:253:2> Text=" "
|   |   |-HTMLStartTagComment 0x1014270 <col:3, col:6> Name="ul"
|   |   |-TextComment 0x10142b0 <line:254:2> Text=" "
|   |   |-HTMLStartTagComment 0x10142d0 <col:3, col:6> Name="li"
|   |   |-TextComment 0x1014310 <col:7, col:11> Text="None."
|   |   |-HTMLEndTagComment 0x1014330 <col:12, col:16> Name="li"
|   |   |-TextComment 0x1014360 <line:255:2> Text=" "
|   |   `-HTMLEndTagComment 0x1014380 <col:3, col:7> Name="ul"
|   |-ParagraphComment 0x1014440 <line:257:2>
|   | `-TextComment 0x1014410 <col:2> Text=" "
|   |-ParamCommandComment 0x1014460 <col:3, col:99> [in] implicitly Param="para" ParamIndex=0
|   | `-ParagraphComment 0x10144f0 <col:15, col:99>
|   |   `-TextComment 0x10144c0 <col:15, col:99> Text="     [IN] the parameter of the callback function that handles software timer timeout."
|   |-ParagraphComment 0x1014540 <line:259:2>
|   | `-TextComment 0x1014510 <col:2> Text=" "
|   |-BlockCommandComment 0x1014560 <col:3, line:260:2> Name="retval"
|   | `-ParagraphComment 0x10145e0 <line:259:10, line:260:2>
|   |   |-TextComment 0x1014590 <line:259:10, col:15> Text=" None."
|   |   `-TextComment 0x10145b0 <line:260:2> Text=" "
|   |-BlockCommandComment 0x1014600 <col:3, line:262:2> Name="par"
|   | `-ParagraphComment 0x10147d0 <line:260:7, line:262:2>
|   |   |-TextComment 0x1014630 <line:260:7, col:18> Text=" Dependency:"
|   |   |-TextComment 0x1014650 <line:261:2> Text=" "
|   |   |-HTMLStartTagComment 0x1014670 <col:3, col:6> Name="ul"
|   |   |-HTMLStartTagComment 0x10146b0 <col:7, col:10> Name="li"
|   |   |-TextComment 0x10146f0 <col:11, col:73> Text="los_swtmr.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1014710 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x1014740 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x1014770 <line:262:2> Text=" "
|   `-BlockCommandComment 0x10147f0 <col:3, col:12> Name="see"
|     `-ParagraphComment 0x1014850 <col:7, col:12>
|       `-TextComment 0x1014820 <col:7, col:12> Text=" None."
|-RecordDecl 0xf206e8 <line:270:9, line:286:1> line:270:16 struct tagSwTmrCtrl definition
| |-FullComment 0x1014a50 <line:267:3, line:268:35>
| | |-ParagraphComment 0x1014980 <line:267:3>
| | | `-TextComment 0x1014950 <col:3> Text=" "
| | |-VerbatimLineComment 0x10149a0 <col:4, col:22> Text=" los_swtmr"
| | `-ParagraphComment 0x1014a10 <line:268:3, col:35>
| |   `-TextComment 0x10149e0 <col:3, col:35> Text=" Software timer control structure"
| |-FieldDecl 0xf20840 <line:271:5, col:26> col:26 pstNext 'struct tagSwTmrCtrl *'
| |-FieldDecl 0xf208a0 <line:272:5, col:25> col:25 ucState 'UINT8':'unsigned char'
| |-FieldDecl 0xf20900 <line:273:5, col:25> col:25 ucMode 'UINT8':'unsigned char'
| |-FieldDecl 0xf20960 <line:274:5, col:25> col:25 ucOverrun 'UINT8':'unsigned char'
| |-FieldDecl 0xf209c0 <line:276:5, col:25> col:25 ucRouses 'UINT8':'unsigned char'
| |-FieldDecl 0xf20a20 <line:277:5, col:25> col:25 ucSensitive 'UINT8':'unsigned char'
| |-FieldDecl 0xf20a80 <line:279:5, col:25> col:25 usTimerID 'UINT32':'unsigned int'
| |-FieldDecl 0xf20ae0 <line:280:5, col:25> col:25 uwInterval 'UINT32':'unsigned int'
| |-FieldDecl 0xf20b40 <line:281:5, col:25> col:25 uwArg 'UINT32':'unsigned int'
| |-FieldDecl 0xf20bc0 <line:283:5, col:25> col:25 pfnHandler 'SWTMR_PROC_FUNC':'void (*)(UINT32)'
| |-FieldDecl 0xf20c20 <line:284:5, col:25> col:25 stSortList 'SortLinkList':'SortLinkList'
| `-FieldDecl 0xf20c80 <line:285:5, col:25> col:25 startTime 'UINT64':'unsigned long long'
|-TypedefDecl 0xf20d28 <line:270:1, line:286:3> col:3 referenced SWTMR_CTRL_S 'struct tagSwTmrCtrl':'struct tagSwTmrCtrl'
| |-ElaboratedType 0xf20cd0 'struct tagSwTmrCtrl' sugar
| | `-RecordType 0xf20770 'struct tagSwTmrCtrl'
| |   `-Record 0xf206e8 'tagSwTmrCtrl'
| `-FullComment 0x1014c00 <line:267:3, line:268:35>
|   |-ParagraphComment 0x1014b30 <line:267:3>
|   | `-TextComment 0x1014b00 <col:3> Text=" "
|   |-VerbatimLineComment 0x1014b50 <col:4, col:22> Text=" los_swtmr"
|   `-ParagraphComment 0x1014bc0 <line:268:3, col:35>
|     `-TextComment 0x1014b90 <col:3, col:35> Text=" Software timer control structure"
|-FunctionDecl 0xf20e60 <line:310:1, col:44> col:15 LOS_SwtmrStart 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xf20dd0 <col:30, col:37> col:37 swtmrID 'UINT32':'unsigned int'
| `-FullComment 0x10157a0 <line:290:3, line:308:39>
|   |-ParagraphComment 0x1014ca0 <line:290:3>
|   | `-TextComment 0x1014c70 <col:3> Text=" "
|   |-VerbatimLineComment 0x1014cc0 <col:4, col:22> Text=" los_swtmr"
|   |-ParagraphComment 0x1014d30 <line:291:3>
|   | `-TextComment 0x1014d00 <col:3> Text=" "
|   |-BlockCommandComment 0x1014d50 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0x1014db0 <col:10, col:33>
|   |   `-TextComment 0x1014d80 <col:10, col:33> Text=" Start a software timer."
|   |-ParagraphComment 0x1014e00 <line:293:3>
|   | `-TextComment 0x1014dd0 <col:3> Text=" "
|   |-BlockCommandComment 0x1014e20 <col:4, line:295:3> Name="par"
|   | `-ParagraphComment 0x1014ed0 <line:293:8, line:295:3>
|   |   |-TextComment 0x1014e50 <line:293:8, col:20> Text=" Description:"
|   |   |-TextComment 0x1014e70 <line:294:3, col:70> Text=" This API is used to start a software timer that has a specified ID."
|   |   `-TextComment 0x1014e90 <line:295:3> Text=" "
|   |-BlockCommandComment 0x1014ef0 <col:4, line:298:8> Name="attention"
|   | `-ParagraphComment 0x10150c0 <line:296:3, line:298:8>
|   |   |-TextComment 0x1014f20 <line:296:3> Text=" "
|   |   |-HTMLStartTagComment 0x1014f40 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1014f80 <line:297:3> Text=" "
|   |   |-HTMLStartTagComment 0x1014fa0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1014fe0 <col:8, col:47> Text="The specific timer must be created first"
|   |   |-HTMLEndTagComment 0x1015000 <col:48, col:52> Name="li"
|   |   |-TextComment 0x1015030 <line:298:3> Text=" "
|   |   `-HTMLEndTagComment 0x1015050 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1015110 <line:300:3>
|   | `-TextComment 0x10150e0 <col:3> Text=" "
|   |-ParamCommandComment 0x1015130 <col:4, col:70> [in] implicitly Param="swtmrID" ParamIndex=0
|   | `-ParagraphComment 0x10151c0 <col:19, col:70>
|   |   `-TextComment 0x1015190 <col:19, col:70> Text="  [IN] Software timer ID created by LOS_SwtmrCreate."
|   |-ParagraphComment 0x1015210 <line:302:3>
|   | `-TextComment 0x10151e0 <col:3> Text=" "
|   |-BlockCommandComment 0x1015230 <col:4, line:303:3> Name="retval"
|   | `-ParagraphComment 0x10152b0 <line:302:11, line:303:3>
|   |   |-TextComment 0x1015260 <line:302:11, col:71> Text=" #LOS_ERRNO_SWTMR_ID_INVALID       Invalid software timer ID."
|   |   `-TextComment 0x1015280 <line:303:3> Text=" "
|   |-BlockCommandComment 0x10152d0 <col:4, line:304:3> Name="retval"
|   | `-ParagraphComment 0x1015350 <line:303:11, line:304:3>
|   |   |-TextComment 0x1015300 <line:303:11, col:79> Text=" #LOS_ERRNO_SWTMR_NOT_CREATED      The software timer is not created."
|   |   `-TextComment 0x1015320 <line:304:3> Text=" "
|   |-BlockCommandComment 0x1015370 <col:4, line:305:3> Name="retval"
|   | `-ParagraphComment 0x10153f0 <line:304:11, line:305:3>
|   |   |-TextComment 0x10153a0 <line:304:11, col:74> Text=" #LOS_ERRNO_SWTMR_STATUS_INVALID   Invalid software timer state."
|   |   `-TextComment 0x10153c0 <line:305:3> Text=" "
|   |-BlockCommandComment 0x1015410 <col:4, line:306:3> Name="retval"
|   | `-ParagraphComment 0x1015490 <line:305:11, line:306:3>
|   |   |-TextComment 0x1015440 <line:305:11, col:88> Text=" #LOS_OK                           The software timer is successfully started."
|   |   `-TextComment 0x1015460 <line:306:3> Text=" "
|   |-BlockCommandComment 0x10154b0 <col:4, line:308:3> Name="par"
|   | `-ParagraphComment 0x1015680 <line:306:8, line:308:3>
|   |   |-TextComment 0x10154e0 <line:306:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1015500 <line:307:3> Text=" "
|   |   |-HTMLStartTagComment 0x1015520 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1015560 <col:8, col:11> Name="li"
|   |   |-TextComment 0x10155a0 <col:12, col:74> Text="los_swtmr.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x10155c0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x10155f0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x1015620 <line:308:3> Text=" "
|   `-BlockCommandComment 0x10156a0 <col:4, col:39> Name="see"
|     `-ParagraphComment 0x1015700 <col:8, col:39>
|       `-TextComment 0x10156d0 <col:8, col:39> Text=" LOS_SwtmrStop | LOS_SwtmrCreate"
|-FunctionDecl 0xf20fd8 <line:334:1, col:43> col:15 LOS_SwtmrStop 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xf20f48 <col:29, col:36> col:36 swtmrID 'UINT32':'unsigned int'
| `-FullComment 0x1016400 <line:313:3, line:332:40>
|   |-ParagraphComment 0x1015840 <line:313:3>
|   | `-TextComment 0x1015810 <col:3> Text=" "
|   |-VerbatimLineComment 0x1015860 <col:4, col:22> Text=" los_swtmr"
|   |-ParagraphComment 0x10158d0 <line:314:3>
|   | `-TextComment 0x10158a0 <col:3> Text=" "
|   |-BlockCommandComment 0x10158f0 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0x1015950 <col:10, col:32>
|   |   `-TextComment 0x1015920 <col:10, col:32> Text=" Stop a software timer."
|   |-ParagraphComment 0x10159a0 <line:316:3>
|   | `-TextComment 0x1015970 <col:3> Text=" "
|   |-BlockCommandComment 0x10159c0 <col:4, line:318:3> Name="par"
|   | `-ParagraphComment 0x1015a70 <line:316:8, line:318:3>
|   |   |-TextComment 0x10159f0 <line:316:8, col:20> Text=" Description:"
|   |   |-TextComment 0x1015a10 <line:317:3, col:69> Text=" This API is used to stop a software timer that has a specified ID."
|   |   `-TextComment 0x1015a30 <line:318:3> Text=" "
|   |-BlockCommandComment 0x1015a90 <col:4, line:321:8> Name="attention"
|   | `-ParagraphComment 0x1015c70 <line:319:3, line:321:8>
|   |   |-TextComment 0x1015ad0 <line:319:3> Text=" "
|   |   |-HTMLStartTagComment 0x1015af0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1015b30 <line:320:3> Text=" "
|   |   |-HTMLStartTagComment 0x1015b50 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1015b90 <col:8, col:64> Text="The specific timer should be created and started firstly."
|   |   |-HTMLEndTagComment 0x1015bb0 <col:65, col:69> Name="li"
|   |   |-TextComment 0x1015be0 <line:321:3> Text=" "
|   |   `-HTMLEndTagComment 0x1015c00 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1015cc0 <line:323:3>
|   | `-TextComment 0x1015c90 <col:3> Text=" "
|   |-ParamCommandComment 0x1015ce0 <col:4, col:70> [in] implicitly Param="swtmrID" ParamIndex=0
|   | `-ParagraphComment 0x1015d70 <col:19, col:70>
|   |   `-TextComment 0x1015d40 <col:19, col:70> Text="  [IN] Software timer ID created by LOS_SwtmrCreate."
|   |-ParagraphComment 0x1015dc0 <line:325:3>
|   | `-TextComment 0x1015d90 <col:3> Text=" "
|   |-BlockCommandComment 0x1015de0 <col:4, line:326:3> Name="retval"
|   | `-ParagraphComment 0x1015e60 <line:325:11, line:326:3>
|   |   |-TextComment 0x1015e10 <line:325:11, col:71> Text=" #LOS_ERRNO_SWTMR_ID_INVALID       Invalid software timer ID."
|   |   `-TextComment 0x1015e30 <line:326:3> Text=" "
|   |-BlockCommandComment 0x1015e80 <col:4, line:327:3> Name="retval"
|   | `-ParagraphComment 0x1015f00 <line:326:11, line:327:3>
|   |   |-TextComment 0x1015eb0 <line:326:11, col:79> Text=" #LOS_ERRNO_SWTMR_NOT_CREATED      The software timer is not created."
|   |   `-TextComment 0x1015ed0 <line:327:3> Text=" "
|   |-BlockCommandComment 0x1015f20 <col:4, line:328:3> Name="retval"
|   | `-ParagraphComment 0x1015fa0 <line:327:11, line:328:3>
|   |   |-TextComment 0x1015f50 <line:327:11, col:79> Text=" #LOS_ERRNO_SWTMR_NOT_STARTED      The software timer is not started."
|   |   `-TextComment 0x1015f70 <line:328:3> Text=" "
|   |-BlockCommandComment 0x1015fc0 <col:4, line:329:3> Name="retval"
|   | `-ParagraphComment 0x1016040 <line:328:11, line:329:3>
|   |   |-TextComment 0x1015ff0 <line:328:11, col:74> Text=" #LOS_ERRNO_SWTMR_STATUS_INVALID   Invalid software timer state."
|   |   `-TextComment 0x1016010 <line:329:3> Text=" "
|   |-BlockCommandComment 0x1016060 <col:4, line:330:3> Name="retval"
|   | `-ParagraphComment 0x10160e0 <line:329:11, line:330:3>
|   |   |-TextComment 0x1016090 <line:329:11, col:88> Text=" #LOS_OK                           The software timer is successfully stopped."
|   |   `-TextComment 0x10160b0 <line:330:3> Text=" "
|   |-BlockCommandComment 0x1016100 <col:4, line:332:3> Name="par"
|   | `-ParagraphComment 0x10162d0 <line:330:8, line:332:3>
|   |   |-TextComment 0x1016130 <line:330:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1016150 <line:331:3> Text=" "
|   |   |-HTMLStartTagComment 0x1016170 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x10161b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x10161f0 <col:12, col:74> Text="los_swtmr.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1016210 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x1016240 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x1016270 <line:332:3> Text=" "
|   `-BlockCommandComment 0x10162f0 <col:4, col:40> Name="see"
|     `-ParagraphComment 0x1016350 <col:8, col:40>
|       `-TextComment 0x1016320 <col:8, col:40> Text=" LOS_SwtmrStart | LOS_SwtmrCreate"
|-FunctionDecl 0xf211c8 <line:360:1, col:60> col:15 LOS_SwtmrTimeGet 'UINT32 (UINT32, UINT32 *)' extern
| |-ParmVarDecl 0xf210b8 <col:32, col:39> col:39 swtmrID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf21130 <col:48, col:56> col:56 tick 'UINT32 *'
| `-FullComment 0x1017150 <line:337:3, line:358:23>
|   |-ParagraphComment 0x10164a0 <line:337:3>
|   | `-TextComment 0x1016470 <col:3> Text=" "
|   |-VerbatimLineComment 0x10164c0 <col:4, col:22> Text=" los_swtmr"
|   |-ParagraphComment 0x1016530 <line:338:3>
|   | `-TextComment 0x1016500 <col:3> Text=" "
|   |-BlockCommandComment 0x1016550 <col:4, col:78> Name="brief"
|   | `-ParagraphComment 0x10165b0 <col:10, col:78>
|   |   `-TextComment 0x1016580 <col:10, col:78> Text=" Obtain the number of remaining Ticks configured on a software timer."
|   |-ParagraphComment 0x1016600 <line:340:3>
|   | `-TextComment 0x10165d0 <col:3> Text=" "
|   |-BlockCommandComment 0x1016620 <col:4, line:343:3> Name="par"
|   | `-ParagraphComment 0x10166f0 <line:340:8, line:343:3>
|   |   |-TextComment 0x1016650 <line:340:8, col:20> Text=" Description:"
|   |   |-TextComment 0x1016670 <line:341:3, col:111> Text=" This API is used to obtain the number of remaining Ticks configured on the software timer of which the ID is"
|   |   |-TextComment 0x1016690 <line:342:3, col:26> Text=" specified by usSwTmrID."
|   |   `-TextComment 0x10166b0 <line:343:3> Text=" "
|   |-BlockCommandComment 0x1016710 <col:4, line:346:8> Name="attention"
|   | `-ParagraphComment 0x10168e0 <line:344:3, line:346:8>
|   |   |-TextComment 0x1016740 <line:344:3> Text=" "
|   |   |-HTMLStartTagComment 0x1016760 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x10167a0 <line:345:3> Text=" "
|   |   |-HTMLStartTagComment 0x10167c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1016800 <col:8, col:94> Text="The specific timer should be created and started successfully, error happens otherwise."
|   |   |-HTMLEndTagComment 0x1016820 <col:95, col:99> Name="li"
|   |   |-TextComment 0x1016850 <line:346:3> Text=" "
|   |   `-HTMLEndTagComment 0x1016870 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1016930 <line:348:3>
|   | `-TextComment 0x1016900 <col:3> Text=" "
|   |-ParamCommandComment 0x1016950 <col:4, line:349:3> [in] implicitly Param="swtmrID" ParamIndex=0
|   | `-ParagraphComment 0x1016a00 <line:348:19, line:349:3>
|   |   |-TextComment 0x10169b0 <line:348:19, col:71> Text="  [IN]  Software timer ID created by LOS_SwtmrCreate."
|   |   `-TextComment 0x10169d0 <line:349:3> Text=" "
|   |-ParamCommandComment 0x1016a20 <col:4, col:85> [in] implicitly Param="tick" ParamIndex=1
|   | `-ParagraphComment 0x1016ab0 <col:16, col:85>
|   |   `-TextComment 0x1016a80 <col:16, col:85> Text="     [OUT] Number of remaining Ticks configured on the software timer."
|   |-ParagraphComment 0x1016b10 <line:351:3>
|   | `-TextComment 0x1016ae0 <col:3> Text=" "
|   |-BlockCommandComment 0x1016b30 <col:4, line:352:3> Name="retval"
|   | `-ParagraphComment 0x1016bb0 <line:351:11, line:352:3>
|   |   |-TextComment 0x1016b60 <line:351:11, col:70> Text=" #LOS_ERRNO_SWTMR_ID_INVALID      Invalid software timer ID."
|   |   `-TextComment 0x1016b80 <line:352:3> Text=" "
|   |-BlockCommandComment 0x1016bd0 <col:4, line:353:3> Name="retval"
|   | `-ParagraphComment 0x1016c50 <line:352:11, line:353:3>
|   |   |-TextComment 0x1016c00 <line:352:11, col:78> Text=" #LOS_ERRNO_SWTMR_NOT_CREATED     The software timer is not created."
|   |   `-TextComment 0x1016c20 <line:353:3> Text=" "
|   |-BlockCommandComment 0x1016c70 <col:4, line:354:3> Name="retval"
|   | `-ParagraphComment 0x1016cf0 <line:353:11, line:354:3>
|   |   |-TextComment 0x1016ca0 <line:353:11, col:78> Text=" #LOS_ERRNO_SWTMR_NOT_STARTED     The software timer is not started."
|   |   `-TextComment 0x1016cc0 <line:354:3> Text=" "
|   |-BlockCommandComment 0x1016d10 <col:4, line:355:3> Name="retval"
|   | `-ParagraphComment 0x1016d90 <line:354:11, line:355:3>
|   |   |-TextComment 0x1016d40 <line:354:11, col:73> Text=" #LOS_ERRNO_SWTMR_STATUS_INVALID  Invalid software timer state."
|   |   `-TextComment 0x1016d60 <line:355:3> Text=" "
|   |-BlockCommandComment 0x1016db0 <col:4, line:356:3> Name="retval"
|   | `-ParagraphComment 0x1016e30 <line:355:11, line:356:3>
|   |   |-TextComment 0x1016de0 <line:355:11, col:99> Text=" #LOS_OK                          The number of remaining Ticks is successfully obtained."
|   |   `-TextComment 0x1016e00 <line:356:3> Text=" "
|   |-BlockCommandComment 0x1016e50 <col:4, line:358:3> Name="par"
|   | `-ParagraphComment 0x1017020 <line:356:8, line:358:3>
|   |   |-TextComment 0x1016e80 <line:356:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1016ea0 <line:357:3> Text=" "
|   |   |-HTMLStartTagComment 0x1016ec0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1016f00 <col:8, col:11> Name="li"
|   |   |-TextComment 0x1016f40 <col:12, col:74> Text="los_swtmr.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1016f60 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x1016f90 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x1016fc0 <line:358:3> Text=" "
|   `-BlockCommandComment 0x1017040 <col:4, col:23> Name="see"
|     `-ParagraphComment 0x10170a0 <col:8, col:23>
|       `-TextComment 0x1017070 <col:8, col:23> Text=" LOS_SwtmrCreate"
|-FunctionDecl 0xf21898 <line:396:1, line:402:46> line:396:15 LOS_SwtmrCreate 'UINT32 (UINT32, UINT8, SWTMR_PROC_FUNC, UINT32 *, UINT32, UINT8, UINT8)' extern
| |-ParmVarDecl 0xf212b8 <col:31, col:38> col:38 interval 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf21330 <line:397:31, col:37> col:37 mode 'UINT8':'unsigned char'
| |-ParmVarDecl 0xf213a8 <line:398:31, col:47> col:47 handler 'SWTMR_PROC_FUNC':'void (*)(UINT32)'
| |-ParmVarDecl 0xf215b0 <line:399:31, col:39> col:39 swtmrID 'UINT32 *'
| |-ParmVarDecl 0xf21628 <line:400:31, col:38> col:38 arg 'UINT32':'unsigned int'
| |-ParmVarDecl 0xf216a0 <line:401:31, col:37> col:37 rouses 'UINT8':'unsigned char'
| `-ParmVarDecl 0xf21718 <line:402:31, col:37> col:37 sensitive 'UINT8':'unsigned char'
|-FunctionDecl 0xf21a38 <line:432:1, col:45> col:15 LOS_SwtmrDelete 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xf219a8 <col:31, col:38> col:38 swtmrID 'UINT32':'unsigned int'
| `-FullComment 0x1017d30 <line:412:3, line:430:23>
|   |-ParagraphComment 0x10171f0 <line:412:3>
|   | `-TextComment 0x10171c0 <col:3> Text=" "
|   |-VerbatimLineComment 0x1017210 <col:4, col:22> Text=" los_swtmr"
|   |-ParagraphComment 0x1017280 <line:413:3>
|   | `-TextComment 0x1017250 <col:3> Text=" "
|   |-BlockCommandComment 0x10172a0 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0x1017300 <col:10, col:34>
|   |   `-TextComment 0x10172d0 <col:10, col:34> Text=" Delete a software timer."
|   |-ParagraphComment 0x1017350 <line:415:3>
|   | `-TextComment 0x1017320 <col:3> Text=" "
|   |-BlockCommandComment 0x1017370 <col:4, line:417:3> Name="par"
|   | `-ParagraphComment 0x1017420 <line:415:8, line:417:3>
|   |   |-TextComment 0x10173a0 <line:415:8, col:20> Text=" Description:"
|   |   |-TextComment 0x10173c0 <line:416:3, col:47> Text=" This API is used to delete a software timer."
|   |   `-TextComment 0x10173e0 <line:417:3> Text=" "
|   |-BlockCommandComment 0x1017440 <col:4, line:420:8> Name="attention"
|   | `-ParagraphComment 0x1017610 <line:418:3, line:420:8>
|   |   |-TextComment 0x1017470 <line:418:3> Text=" "
|   |   |-HTMLStartTagComment 0x1017490 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x10174d0 <line:419:3> Text=" "
|   |   |-HTMLStartTagComment 0x10174f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1017530 <col:8, col:69> Text="The specific timer should be created and then stopped firstly."
|   |   |-HTMLEndTagComment 0x1017550 <col:70, col:74> Name="li"
|   |   |-TextComment 0x1017580 <line:420:3> Text=" "
|   |   `-HTMLEndTagComment 0x10175a0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1017660 <line:422:3>
|   | `-TextComment 0x1017630 <col:3> Text=" "
|   |-ParamCommandComment 0x1017680 <col:4, col:73> [in] implicitly Param="swtmrID" ParamIndex=0
|   | `-ParagraphComment 0x1017710 <col:19, col:73>
|   |   `-TextComment 0x10176e0 <col:19, col:73> Text="     [IN] Software timer ID created by LOS_SwtmrCreate."
|   |-ParagraphComment 0x1017760 <line:424:3>
|   | `-TextComment 0x1017730 <col:3> Text=" "
|   |-BlockCommandComment 0x1017780 <col:4, line:425:3> Name="retval"
|   | `-ParagraphComment 0x1017800 <line:424:11, line:425:3>
|   |   |-TextComment 0x10177b0 <line:424:11, col:72> Text=" #LOS_ERRNO_SWTMR_ID_INVALID        Invalid software timer ID."
|   |   `-TextComment 0x10177d0 <line:425:3> Text=" "
|   |-BlockCommandComment 0x1017820 <col:4, line:426:3> Name="retval"
|   | `-ParagraphComment 0x10178a0 <line:425:11, line:426:3>
|   |   |-TextComment 0x1017850 <line:425:11, col:80> Text=" #LOS_ERRNO_SWTMR_NOT_CREATED       The software timer is not created."
|   |   `-TextComment 0x1017870 <line:426:3> Text=" "
|   |-BlockCommandComment 0x10178c0 <col:4, line:427:3> Name="retval"
|   | `-ParagraphComment 0x1017940 <line:426:11, line:427:3>
|   |   |-TextComment 0x10178f0 <line:426:11, col:75> Text=" #LOS_ERRNO_SWTMR_STATUS_INVALID    Invalid software timer state."
|   |   `-TextComment 0x1017910 <line:427:3> Text=" "
|   |-BlockCommandComment 0x1017960 <col:4, line:428:3> Name="retval"
|   | `-ParagraphComment 0x10179e0 <line:427:11, line:428:3>
|   |   |-TextComment 0x1017990 <line:427:11, col:89> Text=" #LOS_OK                            The software timer is successfully deleted."
|   |   `-TextComment 0x10179b0 <line:428:3> Text=" "
|   |-BlockCommandComment 0x1017a00 <col:4, line:430:3> Name="par"
|   | `-ParagraphComment 0x1017c10 <line:428:8, line:430:3>
|   |   |-TextComment 0x1017a30 <line:428:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1017a50 <line:429:3> Text=" "
|   |   |-HTMLStartTagComment 0x1017a70 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1017af0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x1017b30 <col:12, col:74> Text="los_swtmr.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1017b50 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x1017b80 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x1017bb0 <line:430:3> Text=" "
|   `-BlockCommandComment 0x1017c30 <col:4, col:23> Name="see"
|     `-ParagraphComment 0x1017c90 <col:8, col:23>
|       `-TextComment 0x1017c60 <col:8, col:23> Text=" LOS_SwtmrCreate"
|-EnumDecl 0xf21b08 <line:438:1, line:442:1> line:438:6 SwtmrState
| |-FullComment 0x1017ea0 <line:435:3, line:436:23>
| | |-ParagraphComment 0x1017dd0 <line:435:3>
| | | `-TextComment 0x1017da0 <col:3> Text=" "
| | |-VerbatimLineComment 0x1017df0 <col:4, col:22> Text=" los_swtmr"
| | `-ParagraphComment 0x1017e60 <line:436:3, col:23>
| |   `-TextComment 0x1017e30 <col:3, col:23> Text=" Software timer state"
| |-EnumConstantDecl 0xf21bd0 <line:439:5> col:5 OS_SWTMR_STATUS_UNUSED 'int'
| | `-FullComment 0x1017f70 <col:45, col:77>
| |   `-ParagraphComment 0x1017f40 <col:45, col:77>
| |     `-TextComment 0x1017f10 <col:45, col:77> Text=" The software timer is not used. "
| |-EnumConstantDecl 0xf21c48 <line:440:5> col:5 OS_SWTMR_STATUS_CREATED 'int'
| | `-FullComment 0x1018040 <col:45, col:76>
| |   `-ParagraphComment 0x1018010 <col:45, col:76>
| |     `-TextComment 0x1017fe0 <col:45, col:76> Text=" The software timer is created. "
| `-EnumConstantDecl 0xf21cf8 <line:441:5> col:5 OS_SWTMR_STATUS_TICKING 'int'
|   `-FullComment 0x1018110 <col:45, col:75>
|     `-ParagraphComment 0x10180e0 <col:45, col:75>
|       `-TextComment 0x10180b0 <col:45, col:75> Text=" The software timer is timing. "
|-RecordDecl 0xf21d78 <line:448:9, line:453:1> line:448:9 struct definition
| |-FullComment 0x1018280 <line:445:3, line:446:73>
| | |-ParagraphComment 0x10181b0 <line:445:3>
| | | `-TextComment 0x1018180 <col:3> Text=" "
| | |-VerbatimLineComment 0x10181d0 <col:4, col:22> Text=" los_swtmr"
| | `-ParagraphComment 0x1018240 <line:446:3, col:73>
| |   `-TextComment 0x1018210 <col:3, col:73> Text=" Structure of the callback function that handles software timer timeout"
| |-FieldDecl 0xf21e30 <line:449:5, col:25> col:25 handler 'SWTMR_PROC_FUNC':'void (*)(UINT32)'
| | `-FullComment 0x1018350 <col:45, col:99>
| |   `-ParagraphComment 0x1018320 <col:45, col:99>
| |     `-TextComment 0x10182f0 <col:45, col:99> Text=" Callback function that handles software timer timeout "
| |-FieldDecl 0xf21eb8 <line:450:5, col:25> col:25 arg 'UINT32':'unsigned int'
| | `-FullComment 0x1018440 <col:45, line:451:91>
| |   `-ParagraphComment 0x1018410 <line:450:45, line:451:91>
| |     |-TextComment 0x10183c0 <line:450:45, col:91> Text=" Parameter passed in when the callback function"
| |     `-TextComment 0x10183e0 <line:451:1, col:91> Text="                                             that handles software timer timeout is called "
| `-FieldDecl 0xf21f48 <line:452:5, col:25> col:25 swtmrID 'UINT32':'unsigned int'
|   `-FullComment 0x1018510 <col:45, col:93>
|     `-ParagraphComment 0x10184e0 <col:45, col:93>
|       `-TextComment 0x10184b0 <col:45, col:93> Text=" The id used to obtain the software timer handle "
|-TypedefDecl 0xf22028 <line:448:1, line:453:3> col:3 SwtmrHandlerItem 'struct SwtmrHandlerItem':'SwtmrHandlerItem'
| |-ElaboratedType 0xf21fd0 'struct SwtmrHandlerItem' sugar
| | `-RecordType 0xf21e00 'SwtmrHandlerItem'
| |   `-Record 0xf21d78 ''
| `-FullComment 0x1018680 <line:445:3, line:446:73>
|   |-ParagraphComment 0x10185b0 <line:445:3>
|   | `-TextComment 0x1018580 <col:3> Text=" "
|   |-VerbatimLineComment 0x10185d0 <col:4, col:22> Text=" los_swtmr"
|   `-ParagraphComment 0x1018640 <line:446:3, col:73>
|     `-TextComment 0x1018610 <col:3, col:73> Text=" Structure of the callback function that handles software timer timeout"
|-VarDecl 0xf220f8 <line:455:1, col:22> col:22 g_swtmrCBArray 'SWTMR_CTRL_S *' extern
|-FunctionDecl 0xf22220 <line:479:1, col:31> col:15 OsSwtmrInit 'UINT32 (void)' extern
| `-FullComment 0x1019190 <line:460:3, line:477:13>
|   |-ParagraphComment 0x1018720 <line:460:3>
|   | `-TextComment 0x10186f0 <col:3> Text=" "
|   |-VerbatimLineComment 0x1018740 <col:4, col:22> Text=" los_swtmr"
|   |-ParagraphComment 0x10187b0 <line:461:3>
|   | `-TextComment 0x1018780 <col:3> Text=" "
|   |-BlockCommandComment 0x10187d0 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0x1018830 <col:10, col:40>
|   |   `-TextComment 0x1018800 <col:10, col:40> Text=" Initialization software timer."
|   |-ParagraphComment 0x1018880 <line:463:3>
|   | `-TextComment 0x1018850 <col:3> Text=" "
|   |-BlockCommandComment 0x10188a0 <col:4, line:467:3> Name="par"
|   | `-ParagraphComment 0x1018ac0 <line:463:8, line:467:3>
|   |   |-TextComment 0x10188d0 <line:463:8, col:20> Text=" Description:"
|   |   |-TextComment 0x10188f0 <line:464:3> Text=" "
|   |   |-HTMLStartTagComment 0x1018910 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1018950 <line:465:3> Text=" "
|   |   |-HTMLStartTagComment 0x1018970 <col:4, col:7> Name="li"
|   |   |-TextComment 0x10189b0 <col:8, col:51> Text="This API is used to initialization software."
|   |   |-HTMLEndTagComment 0x10189d0 <col:52, col:56> Name="li"
|   |   |-TextComment 0x1018a00 <line:466:3> Text=" "
|   |   |-HTMLEndTagComment 0x1018a20 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x1018a50 <line:467:3> Text=" "
|   |-BlockCommandComment 0x1018b00 <col:4, line:470:8> Name="attention"
|   | `-ParagraphComment 0x1018cd0 <line:468:3, line:470:8>
|   |   |-TextComment 0x1018b30 <line:468:3> Text=" "
|   |   |-HTMLStartTagComment 0x1018b50 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1018b90 <line:469:3> Text=" "
|   |   |-HTMLStartTagComment 0x1018bb0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x1018bf0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x1018c10 <col:13, col:17> Name="li"
|   |   |-TextComment 0x1018c40 <line:470:3> Text=" "
|   |   `-HTMLEndTagComment 0x1018c60 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1018d20 <line:472:3>
|   | `-TextComment 0x1018cf0 <col:3> Text=" "
|   |-ParamCommandComment 0x1018d40 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x1018da0 <<invalid sloc>>
|   |-ParagraphComment 0x1018df0 <line:474:3>
|   | `-TextComment 0x1018dc0 <col:3> Text=" "
|   |-BlockCommandComment 0x1018e10 <col:4, line:475:3> Name="retval"
|   | `-ParagraphComment 0x1018e90 <line:474:11, line:475:3>
|   |   |-TextComment 0x1018e40 <line:474:11, col:16> Text=" None."
|   |   `-TextComment 0x1018e60 <line:475:3> Text=" "
|   |-BlockCommandComment 0x1018eb0 <col:4, line:477:3> Name="par"
|   | `-ParagraphComment 0x1019080 <line:475:8, line:477:3>
|   |   |-TextComment 0x1018ee0 <line:475:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1018f00 <line:476:3> Text=" "
|   |   |-HTMLStartTagComment 0x1018f20 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1018f60 <col:8, col:11> Name="li"
|   |   |-TextComment 0x1018fa0 <col:12, col:74> Text="los_swtmr.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1018fc0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x1018ff0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x1019020 <line:477:3> Text=" "
|   `-BlockCommandComment 0x10190a0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x1019100 <col:8, col:13>
|       `-TextComment 0x10190d0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xf22380 <line:501:1, col:41> col:15 OsSwtmrGetNextTimeout 'UINT32 (void)' extern
| `-FullComment 0x1019c80 <line:482:3, line:499:13>
|   |-ParagraphComment 0x1019230 <line:482:3>
|   | `-TextComment 0x1019200 <col:3> Text=" "
|   |-VerbatimLineComment 0x1019250 <col:4, col:22> Text=" los_swtmr"
|   |-ParagraphComment 0x10192c0 <line:483:3>
|   | `-TextComment 0x1019290 <col:3> Text=" "
|   |-BlockCommandComment 0x10192e0 <col:4, col:27> Name="brief"
|   | `-ParagraphComment 0x1019340 <col:10, col:27>
|   |   `-TextComment 0x1019310 <col:10, col:27> Text=" Get next timeout."
|   |-ParagraphComment 0x1019390 <line:485:3>
|   | `-TextComment 0x1019360 <col:3> Text=" "
|   |-BlockCommandComment 0x10193b0 <col:4, line:489:3> Name="par"
|   | `-ParagraphComment 0x10195d0 <line:485:8, line:489:3>
|   |   |-TextComment 0x10193e0 <line:485:8, col:20> Text=" Description:"
|   |   |-TextComment 0x1019400 <line:486:3> Text=" "
|   |   |-HTMLStartTagComment 0x1019420 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1019460 <line:487:3> Text=" "
|   |   |-HTMLStartTagComment 0x1019480 <col:4, col:7> Name="li"
|   |   |-TextComment 0x10194c0 <col:8, col:44> Text="This API is used to get next timeout."
|   |   |-HTMLEndTagComment 0x10194e0 <col:45, col:49> Name="li"
|   |   |-TextComment 0x1019510 <line:488:3> Text=" "
|   |   |-HTMLEndTagComment 0x1019530 <col:4, col:8> Name="ul"
|   |   `-TextComment 0x1019560 <line:489:3> Text=" "
|   |-BlockCommandComment 0x10195f0 <col:4, line:492:8> Name="attention"
|   | `-ParagraphComment 0x10197c0 <line:490:3, line:492:8>
|   |   |-TextComment 0x1019620 <line:490:3> Text=" "
|   |   |-HTMLStartTagComment 0x1019640 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x1019680 <line:491:3> Text=" "
|   |   |-HTMLStartTagComment 0x10196a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x10196e0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0x1019700 <col:13, col:17> Name="li"
|   |   |-TextComment 0x1019730 <line:492:3> Text=" "
|   |   `-HTMLEndTagComment 0x1019750 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x1019810 <line:494:3>
|   | `-TextComment 0x10197e0 <col:3> Text=" "
|   |-ParamCommandComment 0x1019830 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0x1019890 <<invalid sloc>>
|   |-ParagraphComment 0x10198e0 <line:496:3>
|   | `-TextComment 0x10198b0 <col:3> Text=" "
|   |-BlockCommandComment 0x1019900 <col:4, line:497:3> Name="retval"
|   | `-ParagraphComment 0x1019980 <line:496:11, line:497:3>
|   |   |-TextComment 0x1019930 <line:496:11, col:16> Text=" None."
|   |   `-TextComment 0x1019950 <line:497:3> Text=" "
|   |-BlockCommandComment 0x10199a0 <col:4, line:499:3> Name="par"
|   | `-ParagraphComment 0x1019b70 <line:497:8, line:499:3>
|   |   |-TextComment 0x10199d0 <line:497:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x10199f0 <line:498:3> Text=" "
|   |   |-HTMLStartTagComment 0x1019a10 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1019a50 <col:8, col:11> Name="li"
|   |   |-TextComment 0x1019a90 <col:12, col:74> Text="los_swtmr.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1019ab0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0x1019ae0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0x1019b10 <line:499:3> Text=" "
|   `-BlockCommandComment 0x1019b90 <col:4, col:13> Name="see"
|     `-ParagraphComment 0x1019bf0 <col:8, col:13>
|       `-TextComment 0x1019bc0 <col:8, col:13> Text=" None."
`-FunctionDecl 0xf224c0 <line:503:1, col:54> col:13 OsSwtmrResponseTimeReset 'void (UINT64)' extern
  `-ParmVarDecl 0xf22430 <col:38, col:45> col:45 startTime 'UINT64':'unsigned long long'

TranslationUnitDecl 0x172cb08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x172d3a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x172d0a0 '__int128'
|-TypedefDecl 0x172d410 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x172d0c0 'unsigned __int128'
|-TypedefDecl 0x172d718 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x172d4f0 'struct __NSConstantString_tag'
|   `-Record 0x172d468 '__NSConstantString_tag'
|-TypedefDecl 0x172d7b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x172d770 'char *'
|   `-BuiltinType 0x172cba0 'char'
`-TypedefDecl 0x172daa8 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
  `-ConstantArrayType 0x172da50 'struct __va_list_tag [1]' 1 
    `-RecordType 0x172d890 'struct __va_list_tag'
      `-Record 0x172d808 '__va_list_tag'

TranslationUnitDecl 0xc20d48 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0xc215e0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0xc212e0 '__int128'
|-TypedefDecl 0xc21650 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0xc21300 'unsigned __int128'
|-TypedefDecl 0xc21958 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0xc21730 'struct __NSConstantString_tag'
|   `-Record 0xc216a8 '__NSConstantString_tag'
|-TypedefDecl 0xc219f0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0xc219b0 'char *'
|   `-BuiltinType 0xc20de0 'char'
|-TypedefDecl 0xc21ce8 <<invalid sloc>> <invalid sloc> implicit referenced __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0xc21c90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0xc21ad0 'struct __va_list_tag'
|     `-Record 0xc21a48 '__va_list_tag'
|-TypedefDecl 0xc83f80 <main/los_compiler.h:308:1, col:32> col:32 referenced UINT8 'unsigned char'
| `-BuiltinType 0xc20ea0 'unsigned char'
|-TypedefDecl 0xc83ff0 <line:309:1, col:32> col:32 referenced UINT16 'unsigned short'
| `-BuiltinType 0xc20ec0 'unsigned short'
|-TypedefDecl 0xc84060 <line:310:1, col:32> col:32 referenced UINT32 'unsigned int'
| `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xc840d0 <line:311:1, col:32> col:32 INT8 'signed char'
| `-BuiltinType 0xc20e00 'signed char'
|-TypedefDecl 0xc84140 <line:312:1, col:32> col:32 INT16 'short'
| `-BuiltinType 0xc20e20 'short'
|-TypedefDecl 0xc841b0 <line:313:1, col:32> col:32 referenced INT32 'int'
| `-BuiltinType 0xc20e40 'int'
|-TypedefDecl 0xc84220 <line:314:1, col:32> col:32 FLOAT 'float'
| `-BuiltinType 0xc20f40 'float'
|-TypedefDecl 0xc84290 <line:315:1, col:32> col:32 DOUBLE 'double'
| `-BuiltinType 0xc20f60 'double'
|-TypedefDecl 0xc842f8 <line:316:1, col:32> col:32 referenced CHAR 'char'
| `-BuiltinType 0xc20de0 'char'
|-TypedefDecl 0xc84368 <line:318:1, col:32> col:32 referenced BOOL 'unsigned int'
| `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xc843d8 <line:319:1, col:32> col:32 referenced UINT64 'unsigned long long'
| `-BuiltinType 0xc20f20 'unsigned long long'
|-TypedefDecl 0xc84448 <line:320:1, col:32> col:32 referenced INT64 'long long'
| `-BuiltinType 0xc20e80 'long long'
|-TypedefDecl 0xc844b8 <line:321:1, col:32> col:32 referenced UINTPTR 'unsigned int'
| `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xc84528 <line:322:1, col:32> col:32 INTPTR 'int'
| `-BuiltinType 0xc20e40 'int'
|-TypedefDecl 0xc845b0 <line:324:1, col:24> col:24 Atomic 'volatile INT32':'volatile int'
| `-QualType 0xc84584 'volatile INT32' volatile
|   `-TypedefType 0xc84580 'INT32' sugar
|     |-Typedef 0xc841b0 'INT32'
|     `-BuiltinType 0xc20e40 'int'
|-TypedefDecl 0xc84640 <line:325:1, col:24> col:24 Atomic64 'volatile INT64':'volatile long long'
| `-QualType 0xc84614 'volatile INT64' volatile
|   `-TypedefType 0xc84610 'INT64' sugar
|     |-Typedef 0xc84448 'INT64'
|     `-BuiltinType 0xc20e80 'long long'
|-FunctionDecl 0xc848e8 <line:407:1, line:410:1> line:407:22 LOS_Align 'UINT32 (UINT32, UINT32)' static inline
| |-ParmVarDecl 0xc84760 <col:32, col:39> col:39 used addr 'UINT32':'unsigned int'
| |-ParmVarDecl 0xc847d8 <col:45, col:52> col:52 used boundary 'UINT32':'unsigned int'
| |-CompoundStmt 0xc8f4b0 <line:408:1, line:410:1>
| | `-ReturnStmt 0xc8f4a0 <line:409:5, col:93>
| |   `-BinaryOperator 0xc8f480 <col:12, col:93> 'unsigned int' '&'
| |     |-ParenExpr 0xc8f398 <col:12, col:75> 'unsigned int'
| |     | `-BinaryOperator 0xc8f378 <col:13, col:74> 'unsigned int' '+'
| |     |   |-ImplicitCastExpr 0xc8f360 <col:13> 'UINT32':'unsigned int' <LValueToRValue>
| |     |   | `-DeclRefExpr 0xc849e0 <col:13> 'UINT32':'unsigned int' lvalue ParmVar 0xc84760 'addr' 'UINT32':'unsigned int'
| |     |   `-ParenExpr 0xc8f340 <col:20, col:74> 'unsigned int'
| |     |     `-ConditionalOperator 0xc8f310 <col:21, col:73> 'unsigned int'
| |     |       |-ParenExpr 0xc84b80 <col:21, col:52> 'int'
| |     |       | `-BinaryOperator 0xc84b60 <col:22, col:48> 'int' '>'
| |     |       |   |-ParenExpr 0xc84b08 <col:22, col:44> 'unsigned int'
| |     |       |   | `-BinaryOperator 0xc84ae8 <col:23, col:43> 'unsigned int' '+'
| |     |       |   |   |-ImplicitCastExpr 0xc84ad0 <col:23> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |   | `-DeclRefExpr 0xc84a00 <col:23> 'UINT32':'unsigned int' lvalue ParmVar 0xc84760 'addr' 'UINT32':'unsigned int'
| |     |       |   |   `-ParenExpr 0xc84ab0 <col:30, col:43> 'unsigned int'
| |     |       |   |     `-BinaryOperator 0xc84a90 <col:31, col:42> 'unsigned int' '-'
| |     |       |   |       |-ImplicitCastExpr 0xc84a60 <col:31> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |       | `-DeclRefExpr 0xc84a20 <col:31> 'UINT32':'unsigned int' lvalue ParmVar 0xc847d8 'boundary' 'UINT32':'unsigned int'
| |     |       |   |       `-ImplicitCastExpr 0xc84a78 <col:42> 'unsigned int' <IntegralCast>
| |     |       |   |         `-IntegerLiteral 0xc84a40 <col:42> 'int' 1
| |     |       |   `-ImplicitCastExpr 0xc84b48 <col:48> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |     `-DeclRefExpr 0xc84b28 <col:48> 'UINT32':'unsigned int' lvalue ParmVar 0xc84760 'addr' 'UINT32':'unsigned int'
| |     |       |-ParenExpr 0xc84c30 <col:56, col:69> 'unsigned int'
| |     |       | `-BinaryOperator 0xc84c10 <col:57, col:68> 'unsigned int' '-'
| |     |       |   |-ImplicitCastExpr 0xc84be0 <col:57> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   | `-DeclRefExpr 0xc84ba0 <col:57> 'UINT32':'unsigned int' lvalue ParmVar 0xc847d8 'boundary' 'UINT32':'unsigned int'
| |     |       |   `-ImplicitCastExpr 0xc84bf8 <col:68> 'unsigned int' <IntegralCast>
| |     |       |     `-IntegerLiteral 0xc84bc0 <col:68> 'int' 1
| |     |       `-ImplicitCastExpr 0xc84c70 <col:73> 'unsigned int' <IntegralCast>
| |     |         `-IntegerLiteral 0xc84c50 <col:73> 'int' 0
| |     `-UnaryOperator 0xc8f468 <col:79, col:93> 'unsigned int' prefix '~' cannot overflow
| |       `-ParenExpr 0xc8f448 <col:80, col:93> 'unsigned int'
| |         `-BinaryOperator 0xc8f428 <col:81, col:92> 'unsigned int' '-'
| |           |-ImplicitCastExpr 0xc8f3f8 <col:81> 'UINT32':'unsigned int' <LValueToRValue>
| |           | `-DeclRefExpr 0xc8f3b8 <col:81> 'UINT32':'unsigned int' lvalue ParmVar 0xc847d8 'boundary' 'UINT32':'unsigned int'
| |           `-ImplicitCastExpr 0xc8f410 <col:92> 'unsigned int' <IntegralCast>
| |             `-IntegerLiteral 0xc8f3d8 <col:92> 'int' 1
| `-FullComment 0xdfeeb0 <line:388:3, line:405:7>
|   |-ParagraphComment 0xdfd490 <line:388:3>
|   | `-TextComment 0xdfd460 <col:3> Text=" "
|   |-VerbatimLineComment 0xdfd4b0 <col:4, col:21> Text=" los_base"
|   |-ParagraphComment 0xdfd520 <line:389:3>
|   | `-TextComment 0xdfd4f0 <col:3> Text=" "
|   |-BlockCommandComment 0xdfd540 <col:4, col:70> Name="brief"
|   | `-ParagraphComment 0xdfd5a0 <col:10, col:70>
|   |   `-TextComment 0xdfd570 <col:10, col:70> Text=" Align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0xdfd5f0 <line:391:3>
|   | `-TextComment 0xdfd5c0 <col:3> Text=" "
|   |-BlockCommandComment 0xdfd610 <col:4, line:392:83> Name="par"
|   | `-ParagraphComment 0xdfd690 <line:391:8, line:392:83>
|   |   |-TextComment 0xdfd640 <line:391:8, col:20> Text=" Description:"
|   |   `-TextComment 0xdfd660 <line:392:3, col:83> Text=" This API is used to align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0xdfd6e0 <line:394:3>
|   | `-TextComment 0xdfd6b0 <col:3> Text=" "
|   |-BlockCommandComment 0xdfd700 <col:4, line:397:8> Name="attention"
|   | `-ParagraphComment 0xdfe910 <line:395:3, line:397:8>
|   |   |-TextComment 0xdfd730 <line:395:3> Text=" "
|   |   |-HTMLStartTagComment 0xdfd750 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xdfd790 <line:396:3> Text=" "
|   |   |-HTMLStartTagComment 0xdfd7b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xdfd7f0 <col:8, col:50> Text="the value of boundary usually is 4,8,16,32."
|   |   |-HTMLEndTagComment 0xdfd810 <col:51, col:55> Name="li"
|   |   |-TextComment 0xdfd840 <line:397:3> Text=" "
|   |   `-HTMLEndTagComment 0xdfe8a0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xdfe960 <line:399:3>
|   | `-TextComment 0xdfe930 <col:3> Text=" "
|   |-ParamCommandComment 0xdfe980 <col:4, line:400:3> [in] implicitly Param="addr" ParamIndex=0
|   | `-ParagraphComment 0xdfea30 <line:399:15, line:400:3>
|   |   |-TextComment 0xdfe9e0 <line:399:15, col:61> Text="     [IN]  The variable what you want to align."
|   |   `-TextComment 0xdfea00 <line:400:3> Text=" "
|   |-ParamCommandComment 0xdfea50 <col:4, col:63> [in] implicitly Param="boundary" ParamIndex=1
|   | `-ParagraphComment 0xdfeae0 <col:19, col:63>
|   |   `-TextComment 0xdfeab0 <col:19, col:63> Text=" [IN]  The align size what you want to align."
|   |-ParagraphComment 0xdfeb30 <line:402:3>
|   | `-TextComment 0xdfeb00 <col:3> Text=" "
|   |-BlockCommandComment 0xdfeb50 <col:4, line:403:3> Name="retval"
|   | `-ParagraphComment 0xdfebd0 <line:402:11, line:403:3>
|   |   |-TextComment 0xdfeb80 <line:402:11, col:55> Text=" #UINT32 The variable what have been aligned."
|   |   `-TextComment 0xdfeba0 <line:403:3> Text=" "
|   |-BlockCommandComment 0xdfebf0 <col:4, line:405:3> Name="par"
|   | `-ParagraphComment 0xdfedc0 <line:403:8, line:405:3>
|   |   |-TextComment 0xdfec20 <line:403:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xdfec40 <line:404:3> Text=" "
|   |   |-HTMLStartTagComment 0xdfec60 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xdfeca0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xdfece0 <col:12, col:73> Text="los_base.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xdfed00 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xdfed30 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xdfed60 <line:405:3> Text=" "
|   `-BlockCommandComment 0xdfede0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xdfee10 <<invalid sloc>>
|-FunctionDecl 0xc8f5a8 <line:423:1, line:438:1> line:423:20 used maybe_release_fence 'void (int)' static inline
| |-ParmVarDecl 0xc8f4e0 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0xc8fb60 <line:424:1, line:438:1>
|   `-SwitchStmt 0xc8f688 <line:425:5, line:437:5>
|     |-ImplicitCastExpr 0xc8f670 <line:425:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0xc8f650 <col:13> 'int' lvalue ParmVar 0xc8f4e0 'model' 'int'
|     `-CompoundStmt 0xc8fb18 <col:20, line:437:5>
|       |-CaseStmt 0xc8f6e0 <line:426:9, line:427:52>
|       | |-ConstantExpr 0xc8f6c8 <<built-in>:14:26> 'int'
|       | | `-IntegerLiteral 0xc8f6a8 <col:26> 'int' 3
|       | `-CallExpr 0xc8f8f0 <main/los_compiler.h:427:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xc8f8d8 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xc8f870 <col:13> '<builtin fn type>' Function 0xc8f708 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xc8f890 <<built-in>:14:26> 'int' 3
|       |-BreakStmt 0xc8f918 <main/los_compiler.h:428:13>
|       |-CaseStmt 0xc8f958 <line:429:9, line:430:52>
|       | |-ConstantExpr 0xc8f940 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0xc8f920 <col:26> 'int' 4
|       | `-CallExpr 0xc8f9d8 <main/los_compiler.h:430:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xc8f9c0 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xc8f980 <col:13> '<builtin fn type>' Function 0xc8f708 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xc8f9a0 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0xc8fa00 <main/los_compiler.h:431:13>
|       |-CaseStmt 0xc8fa40 <line:432:9, line:433:52>
|       | |-ConstantExpr 0xc8fa28 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0xc8fa08 <col:26> 'int' 5
|       | `-CallExpr 0xc8fac0 <main/los_compiler.h:433:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xc8faa8 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xc8fa68 <col:13> '<builtin fn type>' Function 0xc8f708 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xc8fa88 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0xc8fae8 <main/los_compiler.h:434:13>
|       `-DefaultStmt 0xc8faf8 <line:435:9, line:436:13>
|         `-BreakStmt 0xc8faf0 <col:13>
|-FunctionDecl 0xc8f708 <line:427:13> col:13 implicit used __atomic_thread_fence 'void (int)' extern
| |-ParmVarDecl 0xc8f7a8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0xc8f818 <col:13> Implicit
|-FunctionDecl 0xc8fc20 <line:440:1, line:455:1> line:440:20 used maybe_acquire_fence 'void (int)' static inline
| |-ParmVarDecl 0xc8fb90 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0xc90048 <line:441:1, line:455:1>
|   `-SwitchStmt 0xc8fd00 <line:442:5, line:454:5>
|     |-ImplicitCastExpr 0xc8fce8 <line:442:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0xc8fcc8 <col:13> 'int' lvalue ParmVar 0xc8fb90 'model' 'int'
|     `-CompoundStmt 0xc90000 <col:20, line:454:5>
|       |-CaseStmt 0xc8fd58 <line:443:9, line:444:52>
|       | |-ConstantExpr 0xc8fd40 <<built-in>:13:26> 'int'
|       | | `-IntegerLiteral 0xc8fd20 <col:26> 'int' 2
|       | `-CallExpr 0xc8fdd8 <main/los_compiler.h:444:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xc8fdc0 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xc8fd80 <col:13> '<builtin fn type>' Function 0xc8f708 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xc8fda0 <<built-in>:13:26> 'int' 2
|       |-BreakStmt 0xc8fe00 <main/los_compiler.h:445:13>
|       |-CaseStmt 0xc8fe40 <line:446:9, line:447:52>
|       | |-ConstantExpr 0xc8fe28 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0xc8fe08 <col:26> 'int' 4
|       | `-CallExpr 0xc8fec0 <main/los_compiler.h:447:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xc8fea8 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xc8fe68 <col:13> '<builtin fn type>' Function 0xc8f708 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xc8fe88 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0xc8fee8 <main/los_compiler.h:448:13>
|       |-CaseStmt 0xc8ff28 <line:449:9, line:450:52>
|       | |-ConstantExpr 0xc8ff10 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0xc8fef0 <col:26> 'int' 5
|       | `-CallExpr 0xc8ffa8 <main/los_compiler.h:450:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0xc8ff90 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0xc8ff50 <col:13> '<builtin fn type>' Function 0xc8f708 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0xc8ff70 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0xc8ffd0 <main/los_compiler.h:451:13>
|       `-DefaultStmt 0xc8ffe0 <line:452:9, line:453:13>
|         `-BreakStmt 0xc8ffd8 <col:13>
|-FunctionDecl 0xc901e8 <line:458:1, line:472:1> line:458:21 used __libatomic_flag_for_address 'BOOL *(void *)' static inline
| |-ParmVarDecl 0xc90098 <col:50, col:56> col:56 used addr 'void *'
| `-CompoundStmt 0xc92938 <line:459:1, line:472:1>
|   |-DeclStmt 0xc90e30 <line:460:5, col:99>
|   | `-VarDecl 0xc908b8 <col:5, col:98> col:17 used flag_table 'BOOL [16]' static cinit
|   |   `-InitListExpr 0xc90bf0 <col:51, col:98> 'BOOL [16]'
|   |     |-ImplicitCastExpr 0xc90cb0 <col:52> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xc90920 <col:52> 'int' 0
|   |     |-ImplicitCastExpr 0xc90cc8 <col:55> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xc90940 <col:55> 'int' 0
|   |     |-ImplicitCastExpr 0xc90ce0 <col:58> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xc90960 <col:58> 'int' 0
|   |     |-ImplicitCastExpr 0xc90cf8 <col:61> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xc90980 <col:61> 'int' 0
|   |     |-ImplicitCastExpr 0xc90d10 <col:64> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xc909a0 <col:64> 'int' 0
|   |     |-ImplicitCastExpr 0xc90d28 <col:67> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xc909c0 <col:67> 'int' 0
|   |     |-ImplicitCastExpr 0xc90d40 <col:70> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xc909e0 <col:70> 'int' 0
|   |     |-ImplicitCastExpr 0xc90d58 <col:73> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xc90a00 <col:73> 'int' 0
|   |     |-ImplicitCastExpr 0xc90d70 <col:76> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xc90a20 <col:76> 'int' 0
|   |     |-ImplicitCastExpr 0xc90d88 <col:79> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xc90a40 <col:79> 'int' 0
|   |     |-ImplicitCastExpr 0xc90da0 <col:82> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xc90a60 <col:82> 'int' 0
|   |     |-ImplicitCastExpr 0xc90db8 <col:85> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xc90a80 <col:85> 'int' 0
|   |     |-ImplicitCastExpr 0xc90dd0 <col:88> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xc90aa0 <col:88> 'int' 0
|   |     |-ImplicitCastExpr 0xc90de8 <col:91> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xc90ac0 <col:91> 'int' 0
|   |     |-ImplicitCastExpr 0xc90e00 <col:94> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0xc90ae0 <col:94> 'int' 0
|   |     `-ImplicitCastExpr 0xc90e18 <col:97> 'BOOL':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0xc90b00 <col:97> 'int' 0
|   |-DeclStmt 0xc90fc0 <line:461:5, col:41>
|   | `-VarDecl 0xc90e80 <col:5, col:37> col:13 used p 'UINTPTR':'unsigned int' cinit
|   |   `-CStyleCastExpr 0xc90f98 <col:17, col:37> 'UINTPTR':'unsigned int' <PointerToIntegral>
|   |     `-CStyleCastExpr 0xc90f60 <col:26, col:37> 'UINTPTR *' <BitCast>
|   |       `-ImplicitCastExpr 0xc90f48 <col:37> 'void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0xc90ee8 <col:37> 'void *' lvalue ParmVar 0xc90098 'addr' 'void *'
|   |-CompoundAssignOperator 0xc91148 <line:462:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0xc90fd8 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0xc90e80 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0xc91128 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0xc91070 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0xc91050 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0xc91038 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0xc90ff8 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0xc90e80 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0xc91018 <col:16> 'int' 2
|   |   `-ParenExpr 0xc91108 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0xc910e8 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0xc910d0 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0xc91090 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0xc90e80 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0xc910b0 <col:27> 'int' 4
|   |-CompoundAssignOperator 0xc912e8 <line:463:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0xc91178 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0xc90e80 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0xc912c8 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0xc91210 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0xc911f0 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0xc911d8 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0xc91198 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0xc90e80 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0xc911b8 <col:16> 'int' 7
|   |   `-ParenExpr 0xc912a8 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0xc91288 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0xc91270 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0xc91230 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0xc90e80 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0xc91250 <col:27> 'int' 5
|   |-CompoundAssignOperator 0xc91488 <line:464:5, col:30> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0xc91318 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0xc90e80 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0xc91468 <col:10, col:30> 'unsigned int' '+'
|   |   |-ParenExpr 0xc913b0 <col:10, col:18> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0xc91390 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0xc91378 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0xc91338 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0xc90e80 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0xc91358 <col:16> 'int' 17
|   |   `-ParenExpr 0xc91448 <col:22, col:30> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0xc91428 <col:23, col:28> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0xc91410 <col:23> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0xc913d0 <col:23> 'UINTPTR':'unsigned int' lvalue Var 0xc90e80 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0xc913f0 <col:28> 'int' 13
|   |-IfStmt 0xc91648 <line:466:5, line:468:5>
|   | |-BinaryOperator 0xc91528 <line:466:9, col:26> 'int' '>'
|   | | |-UnaryExprOrTypeTraitExpr 0xc914d0 <col:9, col:22> 'unsigned long' sizeof 'void *'
|   | | `-ImplicitCastExpr 0xc91510 <col:26> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0xc914f0 <col:26> 'int' 4
|   | `-CompoundStmt 0xc91630 <col:29, line:468:5>
|   |   `-CompoundAssignOperator 0xc91600 <line:467:9, col:22> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0xc91548 <col:9> 'UINTPTR':'unsigned int' lvalue Var 0xc90e80 'p' 'UINTPTR':'unsigned int'
|   |     `-ParenExpr 0xc915e0 <col:14, col:22> 'UINTPTR':'unsigned int'
|   |       `-BinaryOperator 0xc915c0 <col:15, col:20> 'UINTPTR':'unsigned int' '>>'
|   |         |-ImplicitCastExpr 0xc915a8 <col:15> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |         | `-DeclRefExpr 0xc91568 <col:15> 'UINTPTR':'unsigned int' lvalue Var 0xc90e80 'p' 'UINTPTR':'unsigned int'
|   |         `-IntegerLiteral 0xc91588 <col:20> 'int' 31
|   |-CompoundAssignOperator 0xc91778 <line:470:5, col:34> 'UINTPTR':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0xc91660 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0xc90e80 'p' 'UINTPTR':'unsigned int'
|   | `-ImplicitCastExpr 0xc91760 <col:10, col:34> 'unsigned int' <IntegralCast>
|   |   `-ParenExpr 0xc91740 <col:10, col:34> 'int'
|   |     `-BinaryOperator 0xc91720 <line:457:29, line:470:33> 'int' '-'
|   |       |-ParenExpr 0xc916e0 <line:457:29, col:36> 'int'
|   |       | `-BinaryOperator 0xc916c0 <col:30, col:35> 'int' '<<'
|   |       |   |-IntegerLiteral 0xc91680 <col:30> 'int' 1
|   |       |   `-IntegerLiteral 0xc916a0 <col:35> 'int' 4
|   |       `-IntegerLiteral 0xc91700 <line:470:33> 'int' 1
|   `-ReturnStmt 0xc92928 <line:471:5, col:25>
|     `-BinaryOperator 0xc92908 <col:12, col:25> 'BOOL *' '+'
|       |-ImplicitCastExpr 0xc917e8 <col:12> 'BOOL *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0xc917a8 <col:12> 'BOOL [16]' lvalue Var 0xc908b8 'flag_table' 'BOOL [16]'
|       `-ImplicitCastExpr 0xc928f0 <col:25> 'UINTPTR':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0xc917c8 <col:25> 'UINTPTR':'unsigned int' lvalue Var 0xc90e80 'p' 'UINTPTR':'unsigned int'
|-FunctionDecl 0xc92af8 <line:474:1, line:482:1> line:474:20 used get_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0xc929a0 <col:29, col:35> col:35 used addr 'void *'
| |-ParmVarDecl 0xc92a20 <col:41, col:45> col:45 used model 'int'
| `-CompoundStmt 0xc931b0 <line:475:1, line:482:1>
|   |-DeclStmt 0xc92d10 <line:476:5, col:57>
|   | `-VarDecl 0xc92bb8 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0xc92cd0 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0xc92cb8 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0xc92c20 <col:22> 'BOOL *(void *)' Function 0xc901e8 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0xc92cf8 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0xc92c40 <col:52> 'void *' lvalue ParmVar 0xc929a0 'addr' 'void *'
|   |-CallExpr 0xc92d80 <line:478:5, col:31> 'void'
|   | |-ImplicitCastExpr 0xc92d68 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xc92d28 <col:5> 'void (int)' Function 0xc8f5a8 'maybe_release_fence' 'void (int)'
|   | `-ImplicitCastExpr 0xc92da8 <col:26> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xc92d48 <col:26> 'int' lvalue ParmVar 0xc92a20 'model' 'int'
|   `-WhileStmt 0xc93198 <line:479:5, line:481:5>
|     |-BinaryOperator 0xc93158 <line:479:12, col:66> 'int' '=='
|     | |-ImplicitCastExpr 0xc93140 <col:12, col:61> 'int' <IntegralCast>
|     | | `-CallExpr 0xc930c0 <col:12, col:61> '_Bool'
|     | |   |-ImplicitCastExpr 0xc930a8 <col:12> '_Bool (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|     | |   | `-DeclRefExpr 0xc93000 <col:12> '<builtin fn type>' Function 0xc92e28 '__atomic_test_and_set' '_Bool (volatile void *, int)'
|     | |   |-ImplicitCastExpr 0xc93108 <col:35> 'volatile void *' <BitCast>
|     | |   | `-ImplicitCastExpr 0xc930f0 <col:35> 'BOOL *' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0xc93020 <col:35> 'BOOL *' lvalue Var 0xc92bb8 'lock_ptr' 'BOOL *'
|     | |   `-IntegerLiteral 0xc93040 <<built-in>:13:26> 'int' 2
|     | `-IntegerLiteral 0xc93120 <main/los_compiler.h:479:66> 'int' 1
|     `-CompoundStmt 0xc93180 <col:69, line:481:5>
|       `-NullStmt 0xc93178 <line:480:9>
|-FunctionDecl 0xc92e28 <line:479:12> col:12 implicit used __atomic_test_and_set '_Bool (volatile void *, int)' extern
| |-ParmVarDecl 0xc92ec8 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0xc92f30 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0xc92fa8 <col:12> Implicit
|-FunctionDecl 0xc93308 <line:484:1, line:490:1> line:484:20 used free_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0xc931f0 <col:30, col:36> col:36 used addr 'void *'
| |-ParmVarDecl 0xc93270 <col:42, col:46> col:46 used model 'int'
| `-CompoundStmt 0xc938a8 <line:485:1, line:490:1>
|   |-DeclStmt 0xc934c8 <line:486:5, col:57>
|   | `-VarDecl 0xc933c8 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0xc93488 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0xc93470 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0xc93430 <col:22> 'BOOL *(void *)' Function 0xc901e8 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0xc934b0 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0xc93450 <col:52> 'void *' lvalue ParmVar 0xc931f0 'addr' 'void *'
|   |-CallExpr 0xc937b0 <line:488:5, col:47> 'void'
|   | |-ImplicitCastExpr 0xc93798 <col:5> 'void (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0xc936f0 <col:5> '<builtin fn type>' Function 0xc93518 '__atomic_clear' 'void (volatile void *, int)'
|   | |-ImplicitCastExpr 0xc937f8 <col:21> 'volatile void *' <BitCast>
|   | | `-ImplicitCastExpr 0xc937e0 <col:21> 'BOOL *' <LValueToRValue>
|   | |   `-DeclRefExpr 0xc93710 <col:21> 'BOOL *' lvalue Var 0xc933c8 'lock_ptr' 'BOOL *'
|   | `-IntegerLiteral 0xc93730 <<built-in>:14:26> 'int' 3
|   `-CallExpr 0xc93868 <main/los_compiler.h:489:5, col:31> 'void'
|     |-ImplicitCastExpr 0xc93850 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0xc93810 <col:5> 'void (int)' Function 0xc8fc20 'maybe_acquire_fence' 'void (int)'
|     `-ImplicitCastExpr 0xc93890 <col:26> 'int' <LValueToRValue>
|       `-DeclRefExpr 0xc93830 <col:26> 'int' lvalue ParmVar 0xc93270 'model' 'int'
|-FunctionDecl 0xc93518 <line:488:5> col:5 implicit used __atomic_clear 'void (volatile void *, int)' extern
| |-ParmVarDecl 0xc935b8 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0xc93620 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0xc93698 <col:5> Implicit
|-FunctionDecl 0xc94b38 <line:492:1, line:501:1> line:492:23 __atomic_load_8 'UINT64 (const volatile void *, int)' static inline
| |-ParmVarDecl 0xc949a0 <col:39, col:60> col:60 used mem 'const volatile void *'
| |-ParmVarDecl 0xc94a20 <col:65, col:69> col:69 used model 'int'
| `-CompoundStmt 0xc950e8 <line:493:1, line:501:1>
|   |-DeclStmt 0xc94c60 <line:494:5, col:15>
|   | `-VarDecl 0xc94bf8 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0xc94d70 <line:496:5, col:29>
|   | `-VarDecl 0xc94c90 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0xc94d48 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0xc94d30 <col:26> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0xc94cf8 <col:26> 'const volatile void *' lvalue ParmVar 0xc949a0 'mem' 'const volatile void *'
|   |-CallExpr 0xc94e30 <line:497:5, col:26> 'void'
|   | |-ImplicitCastExpr 0xc94e18 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xc94d88 <col:5> 'void (void *, int)' Function 0xc92af8 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0xc94e60 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0xc94da8 <col:15> 'void *' lvalue Var 0xc94c90 'memP' 'void *'
|   | `-ImplicitCastExpr 0xc94e78 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xc94dc8 <col:21> 'int' lvalue ParmVar 0xc94a20 'model' 'int'
|   |-BinaryOperator 0xc94fa8 <line:498:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0xc94e90 <col:5> 'UINT64':'unsigned long long' lvalue Var 0xc94bf8 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0xc94f90 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0xc94f78 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0xc94f50 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0xc94f38 <col:22> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0xc94f08 <col:22> 'const volatile void *' lvalue ParmVar 0xc949a0 'mem' 'const volatile void *'
|   |-CallExpr 0xc95040 <line:499:5, col:27> 'void'
|   | |-ImplicitCastExpr 0xc95028 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xc94fc8 <col:5> 'void (void *, int)' Function 0xc93308 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0xc95070 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0xc94fe8 <col:16> 'void *' lvalue Var 0xc94c90 'memP' 'void *'
|   | `-ImplicitCastExpr 0xc95088 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xc95008 <col:22> 'int' lvalue ParmVar 0xc94a20 'model' 'int'
|   `-ReturnStmt 0xc950d8 <line:500:5, col:12>
|     `-ImplicitCastExpr 0xc950c0 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0xc950a0 <col:12> 'UINT64':'unsigned long long' lvalue Var 0xc94bf8 'ret' 'UINT64':'unsigned long long'
|-FunctionDecl 0xc95358 <line:503:1, line:509:1> line:503:20 __atomic_store_8 'void (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0xc95140 <col:37, col:52> col:52 used mem 'volatile void *'
| |-ParmVarDecl 0xc951b8 <col:57, col:64> col:64 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xc95238 <col:69, col:73> col:73 used model 'int'
| `-CompoundStmt 0xc957b0 <line:504:1, line:509:1>
|   |-DeclStmt 0xc95508 <line:505:5, col:29>
|   | `-VarDecl 0xc95428 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0xc954e0 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0xc954c8 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0xc95490 <col:26> 'volatile void *' lvalue ParmVar 0xc95140 'mem' 'volatile void *'
|   |-CallExpr 0xc95598 <line:506:5, col:26> 'void'
|   | |-ImplicitCastExpr 0xc95580 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xc95520 <col:5> 'void (void *, int)' Function 0xc92af8 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0xc955c8 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0xc95540 <col:15> 'void *' lvalue Var 0xc95428 'memP' 'void *'
|   | `-ImplicitCastExpr 0xc955e0 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xc95560 <col:21> 'int' lvalue ParmVar 0xc95238 'model' 'int'
|   |-BinaryOperator 0xc956b8 <line:507:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0xc95668 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0xc95640 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0xc95628 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0xc955f8 <col:16> 'volatile void *' lvalue ParmVar 0xc95140 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0xc956a0 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0xc95680 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0xc951b8 'val' 'UINT64':'unsigned long long'
|   `-CallExpr 0xc95750 <line:508:5, col:27> 'void'
|     |-ImplicitCastExpr 0xc95738 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0xc956d8 <col:5> 'void (void *, int)' Function 0xc93308 'free_lock' 'void (void *, int)'
|     |-ImplicitCastExpr 0xc95780 <col:16> 'void *' <LValueToRValue>
|     | `-DeclRefExpr 0xc956f8 <col:16> 'void *' lvalue Var 0xc95428 'memP' 'void *'
|     `-ImplicitCastExpr 0xc95798 <col:22> 'int' <LValueToRValue>
|       `-DeclRefExpr 0xc95718 <col:22> 'int' lvalue ParmVar 0xc95238 'model' 'int'
|-FunctionDecl 0xc95a28 <line:511:1, line:521:1> line:511:22 __atomic_exchange_8 'UINT64 (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0xc957f8 <col:42, col:57> col:57 used mem 'volatile void *'
| |-ParmVarDecl 0xc95870 <col:62, col:69> col:69 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xc958f0 <col:74, col:78> col:78 used model 'int'
| `-CompoundStmt 0xc96068 <line:512:1, line:521:1>
|   |-DeclStmt 0xc95b58 <line:513:5, col:15>
|   | `-VarDecl 0xc95af0 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0xc95c68 <line:515:5, col:29>
|   | `-VarDecl 0xc95b88 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0xc95c40 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0xc95c28 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0xc95bf0 <col:26> 'volatile void *' lvalue ParmVar 0xc957f8 'mem' 'volatile void *'
|   |-CallExpr 0xc95cf8 <line:516:5, col:26> 'void'
|   | |-ImplicitCastExpr 0xc95ce0 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xc95c80 <col:5> 'void (void *, int)' Function 0xc92af8 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0xc95d28 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0xc95ca0 <col:15> 'void *' lvalue Var 0xc95b88 'memP' 'void *'
|   | `-ImplicitCastExpr 0xc95d40 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xc95cc0 <col:21> 'int' lvalue ParmVar 0xc958f0 'model' 'int'
|   |-BinaryOperator 0xc95e18 <line:517:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0xc95d58 <col:5> 'UINT64':'unsigned long long' lvalue Var 0xc95af0 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0xc95e00 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0xc95de8 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0xc95dc0 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0xc95da8 <col:22> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0xc95d78 <col:22> 'volatile void *' lvalue ParmVar 0xc957f8 'mem' 'volatile void *'
|   |-BinaryOperator 0xc95ef8 <line:518:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0xc95ea8 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0xc95e80 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0xc95e68 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0xc95e38 <col:16> 'volatile void *' lvalue ParmVar 0xc957f8 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0xc95ee0 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0xc95ec0 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0xc95870 'val' 'UINT64':'unsigned long long'
|   |-CallExpr 0xc95f90 <line:519:5, col:27> 'void'
|   | |-ImplicitCastExpr 0xc95f78 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xc95f18 <col:5> 'void (void *, int)' Function 0xc93308 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0xc95fc0 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0xc95f38 <col:16> 'void *' lvalue Var 0xc95b88 'memP' 'void *'
|   | `-ImplicitCastExpr 0xc95fd8 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0xc95f58 <col:22> 'int' lvalue ParmVar 0xc958f0 'model' 'int'
|   `-ReturnStmt 0xc96028 <line:520:5, col:12>
|     `-ImplicitCastExpr 0xc96010 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0xc95ff0 <col:12> 'UINT64':'unsigned long long' lvalue Var 0xc95af0 'ret' 'UINT64':'unsigned long long'
|-VarDecl 0xc960c0 <main/target_config.h:100:1, col:16> col:16 __heap_start 'UINTPTR':'unsigned int' extern
|-VarDecl 0xc96848 <main/los_config.h:419:1, col:15> col:15 m_aucSysMem0 'UINT8 *' extern
|-TypedefDecl 0xca1808 <main/los_interrupt.h:44:1, col:16> col:16 referenced HWI_HANDLE_T 'UINT32':'unsigned int'
| `-TypedefType 0xc84730 'UINT32' sugar
|   |-Typedef 0xc84060 'UINT32'
|   `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xca1890 <line:46:1, col:16> col:16 referenced HWI_PRIOR_T 'UINT16':'unsigned short'
| `-TypedefType 0xca1860 'UINT16' sugar
|   |-Typedef 0xc83ff0 'UINT16'
|   `-BuiltinType 0xc20ec0 'unsigned short'
|-TypedefDecl 0xca18f8 <line:48:1, col:16> col:16 referenced HWI_MODE_T 'UINT16':'unsigned short'
| `-TypedefType 0xca1860 'UINT16' sugar
|   |-Typedef 0xc83ff0 'UINT16'
|   `-BuiltinType 0xc20ec0 'unsigned short'
|-TypedefDecl 0xca1960 <line:50:1, col:16> col:16 HWI_ARG_T 'UINT32':'unsigned int'
| `-TypedefType 0xc84730 'UINT32' sugar
|   |-Typedef 0xc84060 'UINT32'
|   `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xca1b18 <line:55:1, col:35> col:16 referenced HWI_PROC_FUNC 'void (*)(void)'
| `-PointerType 0xca1ac0 'void (*)(void)'
|   `-ParenType 0xca1a60 'void (void)' sugar
|     `-FunctionProtoType 0xca1a30 'void (void)' cdecl
|       `-BuiltinType 0xc20da0 'void'
|-RecordDecl 0xca1b70 <line:57:9, line:61:1> line:57:16 struct tagIrqParam definition
| |-FieldDecl 0xca1c28 <line:58:5, col:9> col:9 swIrq 'int'
| | `-FullComment 0xdfef80 <col:28, col:49>
| |   `-ParagraphComment 0xdfef50 <col:28, col:49>
| |     `-TextComment 0xdfef20 <col:28, col:49> Text=" The interrupt number "
| |-FieldDecl 0xca1cc0 <main/los_compiler.h:327:23, main/los_interrupt.h:59:11> col:11 pDevId 'void *'
| | `-FullComment 0xdff050 <col:28, col:85>
| |   `-ParagraphComment 0xdff020 <col:28, col:85>
| |     `-TextComment 0xdfeff0 <col:28, col:85> Text=" The pointer to the device ID that launches the interrupt "
| `-FieldDecl 0xca1d98 <line:60:5, col:17> col:17 pName 'const CHAR *'
|   `-FullComment 0xdff120 <col:28, col:47>
|     `-ParagraphComment 0xdff0f0 <col:28, col:47>
|       `-TextComment 0xdff0c0 <col:28, col:47> Text=" The interrupt name "
|-TypedefDecl 0xca1e78 <line:57:1, line:61:3> col:3 referenced HwiIrqParam 'struct tagIrqParam':'struct tagIrqParam'
| `-ElaboratedType 0xca1e20 'struct tagIrqParam' sugar
|   `-RecordType 0xca1bf0 'struct tagIrqParam'
|     `-Record 0xca1b70 'tagIrqParam'
|-RecordDecl 0xca1ee8 <line:63:9, line:70:1> line:63:9 struct definition
| |-FieldDecl 0xca2150 <line:64:5, col:45> col:14 referenced triggerIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0xca2250 <line:65:5, col:43> col:14 referenced clearIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0xca2350 <line:66:5, col:44> col:14 referenced enableIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0xca4a68 <line:67:5, col:45> col:14 referenced disableIrq 'UINT32 (*)(HWI_HANDLE_T)'
| |-FieldDecl 0xca4cf8 <line:68:5, col:65> col:14 referenced setIrqPriority 'UINT32 (*)(HWI_HANDLE_T, UINT8)'
| `-FieldDecl 0xca4ed8 <line:69:5, col:32> col:14 referenced getCurIrqNum 'UINT32 (*)(void)'
|-TypedefDecl 0xca4f88 <line:63:1, line:70:3> col:3 referenced HwiControllerOps 'struct HwiControllerOps':'HwiControllerOps'
| `-ElaboratedType 0xca4f30 'struct HwiControllerOps' sugar
|   `-RecordType 0xca1f70 'HwiControllerOps'
|     `-Record 0xca1ee8 ''
|-VarDecl 0xca5030 <line:72:1, col:25> col:25 used g_archHwiOps 'HwiControllerOps':'HwiControllerOps' extern
|-VarDecl 0xca50a8 <line:75:1, col:15> col:15 __stack_chk_guard 'UINT32':'unsigned int' extern
|-FunctionDecl 0xca51a8 <line:77:1, col:34> col:13 __stack_chk_fail 'void (void)' extern
|-FunctionDecl 0xca52e0 <line:79:1, col:28> col:8 used ArchIsIntActive 'UINT32 (void)'
|-FunctionDecl 0xca5418 <line:91:1, col:24> col:8 used ArchIntLock 'UINT32 (void)'
|-FunctionDecl 0xca5558 <line:93:1, col:37> col:8 HwiUnmask 'UINT32 (HWI_HANDLE_T)'
| `-ParmVarDecl 0xca54c8 <col:18, col:31> col:31 hwiNum 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xca56a0 <line:94:1, col:35> col:8 HwiMask 'UINT32 (HWI_HANDLE_T)'
| `-ParmVarDecl 0xca5610 <col:16, col:29> col:29 hwiNum 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xca5848 <main/los_compiler.h:327:23, main/los_interrupt.h:95:35> col:6 used ArchIntRestore 'void (UINT32)'
| `-ParmVarDecl 0xca5758 <col:21, col:28> col:28 intSave 'UINT32':'unsigned int'
|-FunctionDecl 0xca5988 <line:98:1, col:26> col:8 ArchIntUnLock 'UINT32 (void)'
|-FunctionDecl 0xca8498 <line:127:1, col:64> col:8 ArchHwiDelete 'UINT32 (HWI_HANDLE_T, HwiIrqParam *)'
| |-ParmVarDecl 0xca8298 <col:22, col:35> col:35 hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0xca8388 <col:43, col:56> col:56 irqParam 'HwiIrqParam *'
| `-FullComment 0xe001d0 <line:104:3, line:125:13>
|   |-ParagraphComment 0xdff1c0 <line:104:3>
|   | `-TextComment 0xdff190 <col:3> Text=" "
|   |-VerbatimLineComment 0xdff1e0 <col:4, col:27> Text="  los_interrupt"
|   |-ParagraphComment 0xdff250 <line:105:3>
|   | `-TextComment 0xdff220 <col:3> Text=" "
|   |-BlockCommandComment 0xdff270 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0xdff2d0 <col:10, col:36>
|   |   `-TextComment 0xdff2a0 <col:10, col:36> Text=" Delete hardware interrupt."
|   |-ParagraphComment 0xdff320 <line:107:3>
|   | `-TextComment 0xdff2f0 <col:3> Text=" "
|   |-BlockCommandComment 0xdff340 <col:4, line:108:49> Name="par"
|   | `-ParagraphComment 0xdff3c0 <line:107:8, line:108:49>
|   |   |-TextComment 0xdff370 <line:107:8, col:20> Text=" Description:"
|   |   `-TextComment 0xdff390 <line:108:3, col:49> Text=" This API is used to delete hardware interrupt."
|   |-ParagraphComment 0xdff410 <line:110:3>
|   | `-TextComment 0xdff3e0 <col:3> Text=" "
|   |-BlockCommandComment 0xdff430 <col:4, line:116:8> Name="attention"
|   | `-ParagraphComment 0xdff870 <line:111:3, line:116:8>
|   |   |-TextComment 0xdff460 <line:111:3> Text=" "
|   |   |-HTMLStartTagComment 0xdff480 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xdff4c0 <line:112:3> Text=" "
|   |   |-HTMLStartTagComment 0xdff4e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xdff520 <col:8, col:124> Text="The hardware interrupt module is usable only when the configuration item for hardware interrupt tailoring is enabled."
|   |   |-HTMLEndTagComment 0xdff540 <col:125, col:129> Name="li"
|   |   |-TextComment 0xdff570 <line:113:3> Text=" "
|   |   |-HTMLStartTagComment 0xdff590 <col:4, col:7> Name="li"
|   |   |-TextComment 0xdff5d0 <col:8, col:144> Text="Hardware interrupt number value range: [OS_USER_HWI_MIN,OS_USER_HWI_MAX]. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   |-HTMLEndTagComment 0xdff5f0 <col:145, col:149> Name="li"
|   |   |-TextComment 0xdff620 <line:114:3> Text=" "
|   |   |-HTMLStartTagComment 0xdff640 <col:4, col:7> Name="li"
|   |   |-TextComment 0xdff680 <col:8, col:85> Text="OS_HWI_MAX_NUM specifies the maximum number of interrupts that can be created."
|   |   |-HTMLEndTagComment 0xdff6a0 <col:86, col:90> Name="li"
|   |   |-TextComment 0xdff6d0 <line:115:3> Text=" "
|   |   |-HTMLStartTagComment 0xdff6f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xdff730 <col:8, col:93> Text="Before executing an interrupt on a platform, refer to the chip manual of the platform."
|   |   |-HTMLEndTagComment 0xdff750 <col:94, col:98> Name="li"
|   |   |-TextComment 0xdff780 <line:116:3> Text=" "
|   |   `-HTMLEndTagComment 0xdff7a0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xdffbb0 <line:118:3>
|   | `-TextComment 0xdffb80 <col:3> Text=" "
|   |-ParamCommandComment 0xdffbd0 <col:4, line:119:3> [in] implicitly Param="hwiNum" ParamIndex=0
|   | `-ParagraphComment 0xdffc80 <line:118:18, line:119:3>
|   |   |-TextComment 0xdffc30 <line:118:18, col:134> Text="   [IN] Type#HWI_HANDLE_T: hardware interrupt number. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   `-TextComment 0xdffc50 <line:119:3> Text=" "
|   |-ParamCommandComment 0xdffca0 <col:4, line:121:3> [in] implicitly Param="irqParam" ParamIndex=1
|   | `-ParagraphComment 0xdffd80 <line:119:20, line:121:3>
|   |   |-TextComment 0xdffd00 <line:119:20, col:89> Text=" [IN] Type #HwiIrqParam *. ID of hardware interrupt which will base on"
|   |   |-TextComment 0xdffd20 <line:120:3, col:85> Text="                                                when delete the hardware interrupt."
|   |   `-TextComment 0xdffd40 <line:121:3> Text=" "
|   |-BlockCommandComment 0xdffda0 <col:4, line:122:3> Name="retval"
|   | `-ParagraphComment 0xdffe20 <line:121:11, line:122:3>
|   |   |-TextComment 0xdffdd0 <line:121:11, col:87> Text=" #OS_ERRNO_HWI_NUM_INVALID              0x02000900: Invalid interrupt number."
|   |   `-TextComment 0xdffdf0 <line:122:3> Text=" "
|   |-BlockCommandComment 0xdffe40 <col:4, line:123:3> Name="retval"
|   | `-ParagraphComment 0xdffec0 <line:122:11, line:123:3>
|   |   |-TextComment 0xdffe70 <line:122:11, col:99> Text=" #LOS_OK                                0         : The interrupt is successfully delete."
|   |   `-TextComment 0xdffe90 <line:123:3> Text=" "
|   |-BlockCommandComment 0xdffee0 <col:4, line:125:3> Name="par"
|   | `-ParagraphComment 0xe000b0 <line:123:8, line:125:3>
|   |   |-TextComment 0xdfff10 <line:123:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xdfff30 <line:124:3> Text=" "
|   |   |-HTMLStartTagComment 0xdfff50 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xdfff90 <col:8, col:11> Name="li"
|   |   |-TextComment 0xdfffd0 <col:12, col:78> Text="los_interrupt.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xdffff0 <col:79, col:83> Name="li"
|   |   |-HTMLEndTagComment 0xe00020 <col:84, col:88> Name="ul"
|   |   `-TextComment 0xe00050 <line:125:3> Text=" "
|   `-BlockCommandComment 0xe000d0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xe00130 <col:8, col:13>
|       `-TextComment 0xe00100 <col:8, col:13> Text=" None."
|-FunctionDecl 0xca8928 <line:160:1, line:164:43> line:160:8 ArchHwiCreate 'UINT32 (HWI_HANDLE_T, HWI_PRIOR_T, HWI_MODE_T, HWI_PROC_FUNC, HwiIrqParam *)'
| |-ParmVarDecl 0xca8588 <col:22, col:35> col:35 hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0xca8620 <line:161:22, col:34> col:34 hwiPrio 'HWI_PRIOR_T':'unsigned short'
| |-ParmVarDecl 0xca86c0 <line:162:22, col:33> col:33 mode 'HWI_MODE_T':'unsigned short'
| |-ParmVarDecl 0xca8760 <line:163:22, col:36> col:36 handler 'HWI_PROC_FUNC':'void (*)(void)'
| |-ParmVarDecl 0xca87d8 <line:164:22, col:35> col:35 irqParam 'HwiIrqParam *'
| `-FullComment 0xe025f0 <line:130:3, line:158:13>
|   |-ParagraphComment 0xe00270 <line:130:3>
|   | `-TextComment 0xe00240 <col:3> Text=" "
|   |-VerbatimLineComment 0xe00290 <col:4, col:27> Text="  los_interrupt"
|   |-ParagraphComment 0xe00300 <line:131:3>
|   | `-TextComment 0xe002d0 <col:3> Text=" "
|   |-BlockCommandComment 0xe00320 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0xe00380 <col:10, col:38>
|   |   `-TextComment 0xe00350 <col:10, col:38> Text=" Create a hardware interrupt."
|   |-ParagraphComment 0xe003d0 <line:133:3>
|   | `-TextComment 0xe003a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe003f0 <col:4, line:134:106> Name="par"
|   | `-ParagraphComment 0xe00470 <line:133:8, line:134:106>
|   |   |-TextComment 0xe00420 <line:133:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe00440 <line:134:3, col:106> Text=" This API is used to configure a hardware interrupt and register a hardware interrupt handling function."
|   |-ParagraphComment 0xe004c0 <line:136:3>
|   | `-TextComment 0xe00490 <col:3> Text=" "
|   |-BlockCommandComment 0xe004e0 <col:4, line:142:8> Name="attention"
|   | `-ParagraphComment 0xe00920 <line:137:3, line:142:8>
|   |   |-TextComment 0xe00510 <line:137:3> Text=" "
|   |   |-HTMLStartTagComment 0xe00530 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe00570 <line:138:3> Text=" "
|   |   |-HTMLStartTagComment 0xe00590 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe005d0 <col:8, col:124> Text="The hardware interrupt module is usable only when the configuration item for hardware interrupt tailoring is enabled."
|   |   |-HTMLEndTagComment 0xe005f0 <col:125, col:129> Name="li"
|   |   |-TextComment 0xe00620 <line:139:3> Text=" "
|   |   |-HTMLStartTagComment 0xe00640 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe00680 <col:8, col:144> Text="Hardware interrupt number value range: [OS_USER_HWI_MIN,OS_USER_HWI_MAX]. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   |-HTMLEndTagComment 0xe006a0 <col:145, col:149> Name="li"
|   |   |-TextComment 0xe006d0 <line:140:3> Text=" "
|   |   |-HTMLStartTagComment 0xe006f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe00730 <col:8, col:85> Text="OS_HWI_MAX_NUM specifies the maximum number of interrupts that can be created."
|   |   |-HTMLEndTagComment 0xe00750 <col:86, col:90> Name="li"
|   |   |-TextComment 0xe00780 <line:141:3> Text=" "
|   |   |-HTMLStartTagComment 0xe007a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe007e0 <col:8, col:93> Text="Before executing an interrupt on a platform, refer to the chip manual of the platform."
|   |   |-HTMLEndTagComment 0xe00800 <col:94, col:98> Name="li"
|   |   |-TextComment 0xe00830 <line:142:3> Text=" "
|   |   `-HTMLEndTagComment 0xe00850 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe00970 <line:144:3>
|   | `-TextComment 0xe00940 <col:3> Text=" "
|   |-ParamCommandComment 0xe00990 <col:4, line:145:3> [in] implicitly Param="hwiNum" ParamIndex=0
|   | `-ParagraphComment 0xe00a40 <line:144:18, line:145:3>
|   |   |-TextComment 0xe009f0 <line:144:18, col:134> Text="   [IN] Type#HWI_HANDLE_T: hardware interrupt number. The value range applicable for a Cortex-A7 platform is [32,95]."
|   |   `-TextComment 0xe00a10 <line:145:3> Text=" "
|   |-ParamCommandComment 0xe00a60 <col:4, line:146:3> [in] implicitly Param="hwiPrio" ParamIndex=1
|   | `-ParagraphComment 0xe00b10 <line:145:19, line:146:3>
|   |   |-TextComment 0xe00ac0 <line:145:19, col:106> Text="  [IN] Type#HWI_PRIOR_T: hardware interrupt priority. Ignore this parameter temporarily."
|   |   `-TextComment 0xe00ae0 <line:146:3> Text=" "
|   |-ParamCommandComment 0xe00b30 <col:4, line:147:3> [in] implicitly Param="mode" ParamIndex=2
|   | `-ParagraphComment 0xe01da0 <line:146:16, line:147:3>
|   |   |-TextComment 0xe01d50 <line:146:16, col:101> Text="     [IN] Type#HWI_MODE_T: hardware interrupt mode. Ignore this parameter temporarily."
|   |   `-TextComment 0xe01d70 <line:147:3> Text=" "
|   |-ParamCommandComment 0xe01dc0 <col:4, line:148:3> [in] implicitly Param="handler" ParamIndex=3
|   | `-ParagraphComment 0xe01e70 <line:147:19, line:148:3>
|   |   |-TextComment 0xe01e20 <line:147:19, col:107> Text="  [IN] Type#HWI_PROC_FUNC: interrupt handler used when a hardware interrupt is triggered."
|   |   `-TextComment 0xe01e40 <line:148:3> Text=" "
|   |-ParamCommandComment 0xe01e90 <col:4, line:149:95> [in] implicitly Param="irqParam" ParamIndex=4
|   | `-ParagraphComment 0xe01f40 <line:148:20, line:149:95>
|   |   |-TextComment 0xe01ef0 <line:148:20, col:75> Text=" [IN] Type#HwiIrqParam: input parameter of the interrupt"
|   |   `-TextComment 0xe01f10 <line:149:3, col:95> Text="                                         handler used when a hardware interrupt is triggered."
|   |-ParagraphComment 0xe01f90 <line:151:3>
|   | `-TextComment 0xe01f60 <col:3> Text=" "
|   |-BlockCommandComment 0xe01fb0 <col:4, line:152:3> Name="retval"
|   | `-ParagraphComment 0xe02030 <line:151:11, line:152:3>
|   |   |-TextComment 0xe01fe0 <line:151:11, col:108> Text=" #OS_ERRNO_HWI_PROC_FUNC_NULL               0x02000901: Null hardware interrupt handling function."
|   |   `-TextComment 0xe02000 <line:152:3> Text=" "
|   |-BlockCommandComment 0xe02050 <col:4, line:153:3> Name="retval"
|   | `-ParagraphComment 0xe020d0 <line:152:11, line:153:3>
|   |   |-TextComment 0xe02080 <line:152:11, col:91> Text=" #OS_ERRNO_HWI_NUM_INVALID                  0x02000900: Invalid interrupt number."
|   |   `-TextComment 0xe020a0 <line:153:3> Text=" "
|   |-BlockCommandComment 0xe020f0 <col:4, line:154:3> Name="retval"
|   | `-ParagraphComment 0xe02170 <line:153:11, line:154:3>
|   |   |-TextComment 0xe02120 <line:153:11, col:118> Text=" #OS_ERRNO_HWI_NO_MEMORY                    0x02000903: Insufficient memory for hardware interrupt creation."
|   |   `-TextComment 0xe02140 <line:154:3> Text=" "
|   |-BlockCommandComment 0xe02190 <col:4, line:155:3> Name="retval"
|   | `-ParagraphComment 0xe02210 <line:154:11, line:155:3>
|   |   |-TextComment 0xe021c0 <line:154:11, col:127> Text=" #OS_ERRNO_HWI_ALREADY_CREATED              0x02000904: The interrupt handler being created has already been created."
|   |   `-TextComment 0xe021e0 <line:155:3> Text=" "
|   |-BlockCommandComment 0xe02230 <col:4, line:156:3> Name="retval"
|   | `-ParagraphComment 0xe022b0 <line:155:11, line:156:3>
|   |   |-TextComment 0xe02260 <line:155:11, col:104> Text=" #LOS_OK                                    0         : The interrupt is successfully created."
|   |   `-TextComment 0xe02280 <line:156:3> Text=" "
|   |-BlockCommandComment 0xe022d0 <col:4, line:158:3> Name="par"
|   | `-ParagraphComment 0xe024a0 <line:156:8, line:158:3>
|   |   |-TextComment 0xe02300 <line:156:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe02320 <line:157:3> Text=" "
|   |   |-HTMLStartTagComment 0xe02340 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe02380 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe023c0 <col:12, col:78> Text="los_interrupt.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe023e0 <col:79, col:83> Name="li"
|   |   |-HTMLEndTagComment 0xe02410 <col:84, col:88> Name="ul"
|   |   `-TextComment 0xe02440 <line:158:3> Text=" "
|   `-BlockCommandComment 0xe024c0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xe02520 <col:8, col:13>
|       `-TextComment 0xe024f0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xca8a90 <main/los_compiler.h:158:22, main/los_interrupt.h:172:1> line:166:22 ArchIntTrigger 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0xca8a00 <col:37, col:50> col:50 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0xca8e98 <line:167:1, line:172:1>
|   |-IfStmt 0xca8da8 <line:168:5, line:170:5>
|   | |-BinaryOperator 0xca8c38 <line:168:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xca8c08 <main/los_interrupt.h:168:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0xca8b58 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .triggerIrq 0xca2150
|   | | |   `-DeclRefExpr 0xca8b38 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xca5030 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xca8c20 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0xca8be8 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xca8bc0 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xca8b88 <col:31> 'int' 0
|   | `-CompoundStmt 0xca8d90 <main/los_interrupt.h:168:42, line:170:5>
|   |   `-ReturnStmt 0xca8d80 <line:169:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xca8d58 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xca8d38 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xca8cf0 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xca8cd0 <col:33> 'int' 1
|   `-ReturnStmt 0xca8e88 <main/los_interrupt.h:171:5, col:42>
|     `-CallExpr 0xca8e48 <col:12, col:42> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0xca8e30 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0xca8de0 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .triggerIrq 0xca2150
|       |   `-DeclRefExpr 0xca8dc0 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xca5030 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0xca8e70 <col:36> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0xca8e10 <col:36> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0xca8a00 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xca8f58 <main/los_compiler.h:158:22, main/los_interrupt.h:180:1> line:174:22 ArchIntEnable 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0xca8ec8 <col:36, col:49> col:49 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0xca9c38 <line:175:1, line:180:1>
|   |-IfStmt 0xca91f8 <line:176:5, line:178:5>
|   | |-BinaryOperator 0xca9100 <line:176:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xca90d0 <main/los_interrupt.h:176:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0xca9020 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .enableIrq 0xca2350
|   | | |   `-DeclRefExpr 0xca9000 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xca5030 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xca90e8 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0xca90b0 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xca9088 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xca9050 <col:31> 'int' 0
|   | `-CompoundStmt 0xca91e0 <main/los_interrupt.h:176:41, line:178:5>
|   |   `-ReturnStmt 0xca91d0 <line:177:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xca91a8 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xca9188 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xca9140 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xca9120 <col:33> 'int' 1
|   `-ReturnStmt 0xca9c28 <main/los_interrupt.h:179:5, col:41>
|     `-CallExpr 0xca9be8 <col:12, col:41> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0xca9bd0 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0xca9230 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .enableIrq 0xca2350
|       |   `-DeclRefExpr 0xca9210 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xca5030 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0xca9c10 <col:35> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0xca9bb0 <col:35> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0xca8ec8 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xca9cf8 <main/los_compiler.h:158:22, main/los_interrupt.h:188:1> line:182:22 ArchIntDisable 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0xca9c68 <col:37, col:50> col:50 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0xcaa088 <line:183:1, line:188:1>
|   |-IfStmt 0xca9f98 <line:184:5, line:186:5>
|   | |-BinaryOperator 0xca9ea0 <line:184:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xca9e70 <main/los_interrupt.h:184:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0xca9dc0 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .disableIrq 0xca4a68
|   | | |   `-DeclRefExpr 0xca9da0 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xca5030 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xca9e88 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0xca9e50 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xca9e28 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xca9df0 <col:31> 'int' 0
|   | `-CompoundStmt 0xca9f80 <main/los_interrupt.h:184:42, line:186:5>
|   |   `-ReturnStmt 0xca9f70 <line:185:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xca9f48 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xca9f28 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xca9ee0 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xca9ec0 <col:33> 'int' 1
|   `-ReturnStmt 0xcaa078 <main/los_interrupt.h:187:5, col:42>
|     `-CallExpr 0xcaa038 <col:12, col:42> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0xcaa020 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0xca9fd0 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .disableIrq 0xca4a68
|       |   `-DeclRefExpr 0xca9fb0 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xca5030 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0xcaa060 <col:36> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0xcaa000 <col:36> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0xca9c68 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xcaa148 <main/los_compiler.h:158:22, main/los_interrupt.h:196:1> line:190:22 ArchIntClear 'UINT32 (HWI_HANDLE_T)' static inline
| |-ParmVarDecl 0xcaa0b8 <col:35, col:48> col:48 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| `-CompoundStmt 0xcaa4d8 <line:191:1, line:196:1>
|   |-IfStmt 0xcaa3e8 <line:192:5, line:194:5>
|   | |-BinaryOperator 0xcaa2f0 <line:192:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xcaa2c0 <main/los_interrupt.h:192:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|   | | | `-MemberExpr 0xcaa210 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .clearIrq 0xca2250
|   | | |   `-DeclRefExpr 0xcaa1f0 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xca5030 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xcaa2d8 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T)' <BitCast>
|   | |   `-ParenExpr 0xcaa2a0 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xcaa278 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xcaa240 <col:31> 'int' 0
|   | `-CompoundStmt 0xcaa3d0 <main/los_interrupt.h:192:40, line:194:5>
|   |   `-ReturnStmt 0xcaa3c0 <line:193:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xcaa398 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xcaa378 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xcaa330 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xcaa310 <col:33> 'int' 1
|   `-ReturnStmt 0xcaa4c8 <main/los_interrupt.h:195:5, col:40>
|     `-CallExpr 0xcaa488 <col:12, col:40> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0xcaa470 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' <LValueToRValue>
|       | `-MemberExpr 0xcaa420 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T)' lvalue .clearIrq 0xca2250
|       |   `-DeclRefExpr 0xcaa400 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xca5030 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       `-ImplicitCastExpr 0xcaa4b0 <col:34> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0xcaa450 <col:34> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0xcaa0b8 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|-FunctionDecl 0xcaa698 <main/los_compiler.h:158:22, main/los_interrupt.h:204:1> line:198:22 ArchIntSetPriority 'UINT32 (HWI_HANDLE_T, HWI_PRIOR_T)' static inline
| |-ParmVarDecl 0xcaa508 <col:41, col:54> col:54 used hwiNum 'HWI_HANDLE_T':'unsigned int'
| |-ParmVarDecl 0xcaa580 <col:62, col:74> col:74 used priority 'HWI_PRIOR_T':'unsigned short'
| `-CompoundStmt 0xcaaa88 <line:199:1, line:204:1>
|   |-IfStmt 0xcaa940 <line:200:5, line:202:5>
|   | |-BinaryOperator 0xcaa848 <line:200:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xcaa818 <main/los_interrupt.h:200:9, col:22> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <LValueToRValue>
|   | | | `-MemberExpr 0xcaa768 <col:9, col:22> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' lvalue .setIrqPriority 0xca4cf8
|   | | |   `-DeclRefExpr 0xcaa748 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xca5030 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xcaa830 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <BitCast>
|   | |   `-ParenExpr 0xcaa7f8 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xcaa7d0 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xcaa798 <col:31> 'int' 0
|   | `-CompoundStmt 0xcaa928 <main/los_interrupt.h:200:46, line:202:5>
|   |   `-ReturnStmt 0xcaa918 <line:201:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xcaa8f0 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xcaa8d0 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xcaa888 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xcaa868 <col:33> 'int' 1
|   `-ReturnStmt 0xcaaa78 <main/los_interrupt.h:203:5, col:56>
|     `-CallExpr 0xcaaa00 <col:12, col:56> 'UINT32':'unsigned int'
|       |-ImplicitCastExpr 0xcaa9e8 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' <LValueToRValue>
|       | `-MemberExpr 0xcaa978 <col:12, col:25> 'UINT32 (*)(HWI_HANDLE_T, UINT8)' lvalue .setIrqPriority 0xca4cf8
|       |   `-DeclRefExpr 0xcaa958 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xca5030 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|       |-ImplicitCastExpr 0xcaaa30 <col:40> 'HWI_HANDLE_T':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0xcaa9a8 <col:40> 'HWI_HANDLE_T':'unsigned int' lvalue ParmVar 0xcaa508 'hwiNum' 'HWI_HANDLE_T':'unsigned int'
|       `-ImplicitCastExpr 0xcaaa60 <col:48> 'UINT8':'unsigned char' <IntegralCast>
|         `-ImplicitCastExpr 0xcaaa48 <col:48> 'HWI_PRIOR_T':'unsigned short' <LValueToRValue>
|           `-DeclRefExpr 0xcaa9c8 <col:48> 'HWI_PRIOR_T':'unsigned short' lvalue ParmVar 0xcaa580 'priority' 'HWI_PRIOR_T':'unsigned short'
|-FunctionDecl 0xcac3b0 <main/los_compiler.h:158:22, main/los_interrupt.h:212:1> line:206:22 ArchIntCurIrqNum 'UINT32 (void)' static inline
| `-CompoundStmt 0xcac6f8 <line:207:1, line:212:1>
|   |-IfStmt 0xcac648 <line:208:5, line:210:5>
|   | |-BinaryOperator 0xcac550 <line:208:9, main/los_compiler.h:341:32> 'int' '=='
|   | | |-ImplicitCastExpr 0xcac520 <main/los_interrupt.h:208:9, col:22> 'UINT32 (*)(void)' <LValueToRValue>
|   | | | `-MemberExpr 0xcac470 <col:9, col:22> 'UINT32 (*)(void)' lvalue .getCurIrqNum 0xca4ed8
|   | | |   `-DeclRefExpr 0xcac450 <col:9> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xca5030 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|   | | `-ImplicitCastExpr 0xcac538 <main/los_compiler.h:341:23, col:32> 'UINT32 (*)(void)' <BitCast>
|   | |   `-ParenExpr 0xcac500 <col:23, col:32> 'void *'
|   | |     `-CStyleCastExpr 0xcac4d8 <col:24, col:31> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0xcac4a0 <col:31> 'int' 0
|   | `-CompoundStmt 0xcac630 <main/los_interrupt.h:208:44, line:210:5>
|   |   `-ReturnStmt 0xcac620 <line:209:9, main/los_compiler.h:354:34>
|   |     `-CStyleCastExpr 0xcac5f8 <col:23, col:34> 'UINT32':'unsigned int' <IntegralCast>
|   |       `-ParenExpr 0xcac5d8 <col:31, col:34> 'int'
|   |         `-UnaryOperator 0xcac590 <col:32, col:33> 'int' prefix '-'
|   |           `-IntegerLiteral 0xcac570 <col:33> 'int' 1
|   `-ReturnStmt 0xcac6e8 <main/los_interrupt.h:211:5, col:38>
|     `-CallExpr 0xcac6c8 <col:12, col:38> 'UINT32':'unsigned int'
|       `-ImplicitCastExpr 0xcac6b0 <col:12, col:25> 'UINT32 (*)(void)' <LValueToRValue>
|         `-MemberExpr 0xcac680 <col:12, col:25> 'UINT32 (*)(void)' lvalue .getCurIrqNum 0xca4ed8
|           `-DeclRefExpr 0xcac660 <col:12> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xca5030 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|-FunctionDecl 0xcac868 <main/los_compiler.h:158:22, main/los_interrupt.h:217:1> line:214:33 ArchIntOpsGet 'HwiControllerOps *(void)' static inline
| `-CompoundStmt 0xcac978 <line:215:1, line:217:1>
|   `-ReturnStmt 0xcac940 <line:216:5, col:13>
|     `-UnaryOperator 0xcac928 <col:12, col:13> 'HwiControllerOps *' prefix '&' cannot overflow
|       `-DeclRefExpr 0xcac908 <col:13> 'HwiControllerOps':'HwiControllerOps' lvalue Var 0xca5030 'g_archHwiOps' 'HwiControllerOps':'HwiControllerOps'
|-FunctionDecl 0xcacbc0 <main/los_compiler.h:327:23, main/los_context.h:68:71> col:7 ArchTskStackInit 'void *(UINT32, UINT32, void *)'
| |-ParmVarDecl 0xcac9a0 <col:24, col:31> col:31 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xcaca18 <col:39, col:46> col:46 stackSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0xcaca98 <main/los_compiler.h:327:23, main/los_context.h:68:63> col:63 topStack 'void *'
| `-FullComment 0xe03270 <line:50:3, line:66:13>
|   |-ParagraphComment 0xe02690 <line:50:3>
|   | `-TextComment 0xe02660 <col:3> Text=" "
|   |-VerbatimLineComment 0xe026b0 <col:4, col:25> Text="  los_context"
|   |-ParagraphComment 0xe02720 <line:51:3>
|   | `-TextComment 0xe026f0 <col:3> Text=" "
|   |-BlockCommandComment 0xe02740 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0xe027a0 <col:10, col:37>
|   |   `-TextComment 0xe02770 <col:10, col:37> Text=": Task stack initialization."
|   |-ParagraphComment 0xe027f0 <line:53:3>
|   | `-TextComment 0xe027c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe02810 <col:4, line:54:49> Name="par"
|   | `-ParagraphComment 0xe02890 <line:53:8, line:54:49>
|   |   |-TextComment 0xe02840 <line:53:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe02860 <line:54:3, col:49> Text=" This API is used to initialize the task stack."
|   |-ParagraphComment 0xe028e0 <line:56:3>
|   | `-TextComment 0xe028b0 <col:3> Text=" "
|   |-BlockCommandComment 0xe02900 <col:4, line:57:26> Name="attention"
|   | `-ParagraphComment 0xe02aa0 <line:56:14, line:57:26>
|   |   |-TextComment 0xe02930 <line:56:14> Text=":"
|   |   |-TextComment 0xe02950 <line:57:3> Text=" "
|   |   |-HTMLStartTagComment 0xe02970 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe029b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe029f0 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0xe02a10 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0xe02a40 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0xe02af0 <line:59:3>
|   | `-TextComment 0xe02ac0 <col:3> Text=" "
|   |-ParamCommandComment 0xe02b10 <col:4, line:60:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xe02bc0 <line:59:18, line:60:3>
|   |   |-TextComment 0xe02b70 <line:59:18, col:47> Text="     [IN] Type#UINT32: TaskID."
|   |   `-TextComment 0xe02b90 <line:60:3> Text=" "
|   |-ParamCommandComment 0xe02be0 <col:4, line:61:3> [in] implicitly Param="stackSize" ParamIndex=1
|   | `-ParagraphComment 0xe02c90 <line:60:21, line:61:3>
|   |   |-TextComment 0xe02c40 <line:60:21, col:64> Text="  [IN] Type#UINT32: Total size of the stack."
|   |   `-TextComment 0xe02c60 <line:61:3> Text=" "
|   |-ParamCommandComment 0xe02cb0 <col:4, col:60> [in] implicitly Param="topStack" ParamIndex=2
|   | `-ParagraphComment 0xe02e70 <col:20, col:60>
|   |   `-TextComment 0xe02d10 <col:20, col:60> Text="   [IN] Type#VOID *: Top of task's stack."
|   |-ParagraphComment 0xe02ec0 <line:63:3>
|   | `-TextComment 0xe02e90 <col:3> Text=" "
|   |-BlockCommandComment 0xe02ee0 <col:4, line:64:3> Name="retval"
|   | `-ParagraphComment 0xe02f60 <line:63:11, line:64:3>
|   |   |-TextComment 0xe02f10 <line:63:11, col:39> Text=": context Type#TaskContext *."
|   |   `-TextComment 0xe02f30 <line:64:3> Text=" "
|   |-BlockCommandComment 0xe02f80 <col:4, line:66:3> Name="par"
|   | `-ParagraphComment 0xe03150 <line:64:8, line:66:3>
|   |   |-TextComment 0xe02fb0 <line:64:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe02fd0 <line:65:3> Text=" "
|   |   |-HTMLStartTagComment 0xe02ff0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe03030 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe03070 <col:12, col:76> Text="los_context.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe03090 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0xe030c0 <col:82, col:86> Name="ul"
|   |   `-TextComment 0xe030f0 <line:66:3> Text=" "
|   `-BlockCommandComment 0xe03170 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xe031d0 <col:8, col:13>
|       `-TextComment 0xe031a0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xcacd10 <main/los_compiler.h:327:23, main/los_context.h:69:34> col:6 HalIrqEndCheckNeedSched 'void (void)'
|-FunctionDecl 0xcace48 <main/los_compiler.h:327:23, main/los_context.h:70:35> col:6 EnableExceptionInterface 'void (void)'
|-FunctionDecl 0xcacf80 <main/los_compiler.h:327:23, main/los_context.h:71:31> col:6 used HalTaskContextSwitch 'void (void)'
|-FunctionDecl 0xcad108 <main/los_compiler.h:146:23, main/los_context.h:89:54> col:38 ArchSysExit 'void (void) __attribute__((noreturn))'
| `-FullComment 0xe03be0 <line:73:3, line:87:13>
|   |-ParagraphComment 0xe03310 <line:73:3>
|   | `-TextComment 0xe032e0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe03330 <col:4, col:25> Text="  los_context"
|   |-ParagraphComment 0xe033a0 <line:74:3>
|   | `-TextComment 0xe03370 <col:3> Text=" "
|   |-BlockCommandComment 0xe033c0 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0xe03420 <col:10, col:32>
|   |   `-TextComment 0xe033f0 <col:10, col:32> Text=": Function to sys exit."
|   |-ParagraphComment 0xe03470 <line:76:3>
|   | `-TextComment 0xe03440 <col:3> Text=" "
|   |-BlockCommandComment 0xe03490 <col:4, line:77:32> Name="par"
|   | `-ParagraphComment 0xe03510 <line:76:8, line:77:32>
|   |   |-TextComment 0xe034c0 <line:76:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe034e0 <line:77:3, col:32> Text=" This API is used to sys exit."
|   |-ParagraphComment 0xe03560 <line:79:3>
|   | `-TextComment 0xe03530 <col:3> Text=" "
|   |-BlockCommandComment 0xe03580 <col:4, line:80:26> Name="attention"
|   | `-ParagraphComment 0xe03720 <line:79:14, line:80:26>
|   |   |-TextComment 0xe035b0 <line:79:14> Text=":"
|   |   |-TextComment 0xe035d0 <line:80:3> Text=" "
|   |   |-HTMLStartTagComment 0xe035f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe03630 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe03670 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0xe03690 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0xe036c0 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0xe03770 <line:82:3>
|   | `-TextComment 0xe03740 <col:3> Text=" "
|   |-ParamCommandComment 0xe03790 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xe037f0 <<invalid sloc>>
|   |-ParagraphComment 0xe03840 <line:84:3>
|   | `-TextComment 0xe03810 <col:3> Text=" "
|   |-BlockCommandComment 0xe03860 <col:4, line:85:3> Name="retval"
|   | `-ParagraphComment 0xe038e0 <line:84:11, line:85:3>
|   |   |-TextComment 0xe03890 <line:84:11, col:17> Text=": None."
|   |   `-TextComment 0xe038b0 <line:85:3> Text=" "
|   |-BlockCommandComment 0xe03900 <col:4, line:87:3> Name="par"
|   | `-ParagraphComment 0xe03ad0 <line:85:8, line:87:3>
|   |   |-TextComment 0xe03930 <line:85:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe03950 <line:86:3> Text=" "
|   |   |-HTMLStartTagComment 0xe03970 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe039b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe039f0 <col:12, col:76> Text="los_context.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe03a10 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0xe03a40 <col:82, col:86> Name="ul"
|   |   `-TextComment 0xe03a70 <line:87:3> Text=" "
|   `-BlockCommandComment 0xe03af0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xe03b50 <col:8, col:13>
|       `-TextComment 0xe03b20 <col:8, col:13> Text=" None."
|-FunctionDecl 0xcad270 <main/los_compiler.h:327:23, main/los_context.h:108:27> col:6 used ArchTaskSchedule 'void (void)'
| `-FullComment 0xe04570 <line:92:3, line:106:13>
|   |-ParagraphComment 0xe03c80 <line:92:3>
|   | `-TextComment 0xe03c50 <col:3> Text=" "
|   |-VerbatimLineComment 0xe03ca0 <col:4, col:25> Text="  los_context"
|   |-ParagraphComment 0xe03d10 <line:93:3>
|   | `-TextComment 0xe03ce0 <col:3> Text=" "
|   |-BlockCommandComment 0xe03d30 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0xe03d90 <col:10, col:36>
|   |   `-TextComment 0xe03d60 <col:10, col:36> Text=": Task scheduling Function."
|   |-ParagraphComment 0xe03de0 <line:95:3>
|   | `-TextComment 0xe03db0 <col:3> Text=" "
|   |-BlockCommandComment 0xe03e00 <col:4, line:96:39> Name="par"
|   | `-ParagraphComment 0xe03ea0 <line:95:8, line:96:39>
|   |   |-TextComment 0xe03e30 <line:95:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe03e70 <line:96:3, col:39> Text=" This API is used to scheduling task."
|   |-ParagraphComment 0xe03ef0 <line:98:3>
|   | `-TextComment 0xe03ec0 <col:3> Text=" "
|   |-BlockCommandComment 0xe03f10 <col:4, line:99:26> Name="attention"
|   | `-ParagraphComment 0xe040b0 <line:98:14, line:99:26>
|   |   |-TextComment 0xe03f40 <line:98:14> Text=":"
|   |   |-TextComment 0xe03f60 <line:99:3> Text=" "
|   |   |-HTMLStartTagComment 0xe03f80 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe03fc0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe04000 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0xe04020 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0xe04050 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0xe04100 <line:101:3>
|   | `-TextComment 0xe040d0 <col:3> Text=" "
|   |-ParamCommandComment 0xe04120 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xe04180 <<invalid sloc>>
|   |-ParagraphComment 0xe041d0 <line:103:3>
|   | `-TextComment 0xe041a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe041f0 <col:4, line:104:3> Name="retval"
|   | `-ParagraphComment 0xe04270 <line:103:11, line:104:3>
|   |   |-TextComment 0xe04220 <line:103:11, col:17> Text=": None."
|   |   `-TextComment 0xe04240 <line:104:3> Text=" "
|   |-BlockCommandComment 0xe04290 <col:4, line:106:3> Name="par"
|   | `-ParagraphComment 0xe04460 <line:104:8, line:106:3>
|   |   |-TextComment 0xe042c0 <line:104:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe042e0 <line:105:3> Text=" "
|   |   |-HTMLStartTagComment 0xe04300 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe04340 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe04380 <col:12, col:76> Text="los_context.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe043a0 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0xe043d0 <col:82, col:86> Name="ul"
|   |   `-TextComment 0xe04400 <line:106:3> Text=" "
|   `-BlockCommandComment 0xe04480 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xe044e0 <col:8, col:13>
|       `-TextComment 0xe044b0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xcae3d0 <line:110:1, col:30> col:8 ArchStartSchedule 'UINT32 (void)'
|-FunctionDecl 0xcae740 <main/los_compiler.h:327:23, main/los_context.h:111:97> col:7 ArchSignalContextInit 'void *(void *, void *, UINTPTR, UINT32)'
| |-ParmVarDecl 0xcae488 <main/los_compiler.h:327:23, main/los_context.h:111:35> col:35 stackPointer 'void *'
| |-ParmVarDecl 0xcae508 <main/los_compiler.h:327:23, main/los_context.h:111:55> col:55 stackTop 'void *'
| |-ParmVarDecl 0xcae580 <col:65, col:73> col:73 sigHandler 'UINTPTR':'unsigned int'
| `-ParmVarDecl 0xcae5f8 <col:85, col:92> col:92 param 'UINT32':'unsigned int'
|-TypedefDecl 0xcae818 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:46:1, col:23> col:23 referenced size_t 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xcae8a0 </usr/lib/llvm-10/lib/clang/10.0.0/include/stdarg.h:14:1, col:27> col:27 va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0xcae870 '__builtin_va_list' sugar
|   |-Typedef 0xc21ce8 '__builtin_va_list'
|   `-ConstantArrayType 0xc21c90 'struct __va_list_tag [1]' 1 
|     `-RecordType 0xc21ad0 'struct __va_list_tag'
|       `-Record 0xc21a48 '__va_list_tag'
|-TypedefDecl 0xcae908 <line:32:1, col:27> col:27 referenced __gnuc_va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0xcae870 '__builtin_va_list' sugar
|   |-Typedef 0xc21ce8 '__builtin_va_list'
|   `-ConstantArrayType 0xc21c90 'struct __va_list_tag [1]' 1 
|     `-RecordType 0xc21ad0 'struct __va_list_tag'
|       `-Record 0xc21a48 '__va_list_tag'
|-TypedefDecl 0xcae978 </usr/include/x86_64-linux-gnu/bits/types.h:31:1, col:23> col:23 referenced __u_char 'unsigned char'
| `-BuiltinType 0xc20ea0 'unsigned char'
|-TypedefDecl 0xcae9e8 <line:32:1, col:28> col:28 referenced __u_short 'unsigned short'
| `-BuiltinType 0xc20ec0 'unsigned short'
|-TypedefDecl 0xcaea58 <line:33:1, col:22> col:22 referenced __u_int 'unsigned int'
| `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xcaeac8 <line:34:1, col:27> col:27 referenced __u_long 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xcaeb38 <line:37:1, col:21> col:21 referenced __int8_t 'signed char'
| `-BuiltinType 0xc20e00 'signed char'
|-TypedefDecl 0xcaeba8 <line:38:1, col:23> col:23 referenced __uint8_t 'unsigned char'
| `-BuiltinType 0xc20ea0 'unsigned char'
|-TypedefDecl 0xcaec18 <line:39:1, col:26> col:26 referenced __int16_t 'short'
| `-BuiltinType 0xc20e20 'short'
|-TypedefDecl 0xcaec88 <line:40:1, col:28> col:28 referenced __uint16_t 'unsigned short'
| `-BuiltinType 0xc20ec0 'unsigned short'
|-TypedefDecl 0xcaecf8 <line:41:1, col:20> col:20 referenced __int32_t 'int'
| `-BuiltinType 0xc20e40 'int'
|-TypedefDecl 0xcaed68 <line:42:1, col:22> col:22 referenced __uint32_t 'unsigned int'
| `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xcaedd8 <line:44:1, col:25> col:25 referenced __int64_t 'long'
| `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xcaee48 <line:45:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xcaeed0 <line:52:1, col:18> col:18 __int_least8_t '__int8_t':'signed char'
| `-TypedefType 0xcaeea0 '__int8_t' sugar
|   |-Typedef 0xcaeb38 '__int8_t'
|   `-BuiltinType 0xc20e00 'signed char'
|-TypedefDecl 0xcaef60 <line:53:1, col:19> col:19 __uint_least8_t '__uint8_t':'unsigned char'
| `-TypedefType 0xcaef30 '__uint8_t' sugar
|   |-Typedef 0xcaeba8 '__uint8_t'
|   `-BuiltinType 0xc20ea0 'unsigned char'
|-TypedefDecl 0xcaeff0 <line:54:1, col:19> col:19 __int_least16_t '__int16_t':'short'
| `-TypedefType 0xcaefc0 '__int16_t' sugar
|   |-Typedef 0xcaec18 '__int16_t'
|   `-BuiltinType 0xc20e20 'short'
|-TypedefDecl 0xcaf080 <line:55:1, col:20> col:20 __uint_least16_t '__uint16_t':'unsigned short'
| `-TypedefType 0xcaf050 '__uint16_t' sugar
|   |-Typedef 0xcaec88 '__uint16_t'
|   `-BuiltinType 0xc20ec0 'unsigned short'
|-TypedefDecl 0xcaf110 <line:56:1, col:19> col:19 __int_least32_t '__int32_t':'int'
| `-TypedefType 0xcaf0e0 '__int32_t' sugar
|   |-Typedef 0xcaecf8 '__int32_t'
|   `-BuiltinType 0xc20e40 'int'
|-TypedefDecl 0xcaf1a0 <line:57:1, col:20> col:20 __uint_least32_t '__uint32_t':'unsigned int'
| `-TypedefType 0xcaf170 '__uint32_t' sugar
|   |-Typedef 0xcaed68 '__uint32_t'
|   `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xcaf230 <line:58:1, col:19> col:19 __int_least64_t '__int64_t':'long'
| `-TypedefType 0xcaf200 '__int64_t' sugar
|   |-Typedef 0xcaedd8 '__int64_t'
|   `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xcaf2c0 <line:59:1, col:20> col:20 __uint_least64_t '__uint64_t':'unsigned long'
| `-TypedefType 0xcaf290 '__uint64_t' sugar
|   |-Typedef 0xcaee48 '__uint64_t'
|   `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xcaf330 <line:63:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xccf120 <line:64:1, col:27> col:27 referenced __u_quad_t 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xccf190 <line:72:1, col:18> col:18 __intmax_t 'long'
| `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xccf200 <line:73:1, col:27> col:27 __uintmax_t 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xccf270 <line:137:22, line:145:25> col:25 referenced __dev_t 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xccf2e0 <line:137:22, line:146:25> col:25 referenced __uid_t 'unsigned int'
| `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xccf350 <line:137:22, line:147:25> col:25 referenced __gid_t 'unsigned int'
| `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xccf3c0 <line:137:22, line:148:25> col:25 referenced __ino_t 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xccf430 <line:137:22, line:149:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xccf4a0 <line:137:22, line:150:26> col:26 referenced __mode_t 'unsigned int'
| `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xccf510 <line:137:22, line:151:27> col:27 referenced __nlink_t 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xccf580 <line:137:22, line:152:25> col:25 referenced __off_t 'long'
| `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xccf5f0 <line:137:22, line:153:27> col:27 referenced __off64_t 'long'
| `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xccf660 <line:137:22, line:154:25> col:25 referenced __pid_t 'int'
| `-BuiltinType 0xc20e40 'int'
|-RecordDecl 0xccf6b8 </usr/include/x86_64-linux-gnu/bits/typesizes.h:72:24, col:47> col:24 struct definition
| `-FieldDecl 0xccf800 <col:33, col:44> col:37 __val 'int [2]'
|-TypedefDecl 0xccf8a8 </usr/include/x86_64-linux-gnu/bits/types.h:137:22, line:155:26> col:26 referenced __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0xccf850 'struct __fsid_t' sugar
|   `-RecordType 0xccf740 '__fsid_t'
|     `-Record 0xccf6b8 ''
|-TypedefDecl 0xccf930 <line:137:22, line:156:27> col:27 referenced __clock_t 'long'
| `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xccf9a0 <line:137:22, line:157:26> col:26 __rlim_t 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xccfa10 <line:137:22, line:158:28> col:28 __rlim64_t 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xccfa80 <line:137:22, line:159:24> col:24 referenced __id_t 'unsigned int'
| `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xccfaf0 <line:137:22, line:160:26> col:26 referenced __time_t 'long'
| `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xccfb60 <line:137:22, line:161:30> col:30 __useconds_t 'unsigned int'
| `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xccfbd0 <line:137:22, line:162:31> col:31 referenced __suseconds_t 'long'
| `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xccfc40 <line:137:22, line:164:27> col:27 referenced __daddr_t 'int'
| `-BuiltinType 0xc20e40 'int'
|-TypedefDecl 0xccfcb0 <line:137:22, line:165:25> col:25 referenced __key_t 'int'
| `-BuiltinType 0xc20e40 'int'
|-TypedefDecl 0xccfd20 <line:137:22, line:168:29> col:29 referenced __clockid_t 'int'
| `-BuiltinType 0xc20e40 'int'
|-TypedefDecl 0xccfd90 <line:137:22, line:171:27> col:27 referenced __timer_t 'void *'
| `-PointerType 0xc21560 'void *'
|   `-BuiltinType 0xc20da0 'void'
|-TypedefDecl 0xccfe00 <line:137:22, line:174:29> col:29 referenced __blksize_t 'long'
| `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xccfe70 <line:137:22, line:179:28> col:28 referenced __blkcnt_t 'long'
| `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xccfee0 <line:137:22, line:180:30> col:30 __blkcnt64_t 'long'
| `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xccff50 <line:137:22, line:183:30> col:30 referenced __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xccffc0 <line:137:22, line:184:32> col:32 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xcd0030 <line:137:22, line:187:30> col:30 referenced __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xcd00a0 <line:137:22, line:188:32> col:32 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xcd80f0 <line:137:22, line:191:28> col:28 __fsword_t 'long'
| `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xcd8160 <line:137:22, line:193:27> col:27 referenced __ssize_t 'long'
| `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xcd81d0 <line:137:22, line:196:33> col:33 referenced __syscall_slong_t 'long'
| `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xcd8240 <line:137:22, line:198:33> col:33 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xcd82d0 <line:202:1, col:19> col:19 referenced __loff_t '__off64_t':'long'
| `-TypedefType 0xcd82a0 '__off64_t' sugar
|   |-Typedef 0xccf5f0 '__off64_t'
|   `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xcd8340 <line:203:1, col:15> col:15 referenced __caddr_t 'char *'
| `-PointerType 0xc219b0 'char *'
|   `-BuiltinType 0xc20de0 'char'
|-TypedefDecl 0xcd83b0 <line:137:22, line:206:25> col:25 __intptr_t 'long'
| `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xcd8420 <line:137:22, line:209:23> col:23 __socklen_t 'unsigned int'
| `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xcd8490 <line:214:1, col:13> col:13 __sig_atomic_t 'int'
| `-BuiltinType 0xc20e40 'int'
|-RecordDecl 0xcd84e8 </usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:13:9, line:21:1> line:13:9 struct definition
| |-FieldDecl 0xcd85a8 <line:15:3, col:7> col:7 __count 'int'
| |-RecordDecl 0xcd85f8 <line:16:3, line:20:3> line:16:3 union definition
| | |-FieldDecl 0xcd86b8 <<built-in>:87:23, /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:18:19> col:19 __wch 'unsigned int'
| | `-FieldDecl 0xcd8798 <line:19:5, col:18> col:10 __wchb 'char [4]'
| `-FieldDecl 0xcd8848 <line:16:3, line:20:5> col:5 __value 'union (anonymous union at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)':'union __mbstate_t::(anonymous at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)'
|-TypedefDecl 0xcd88f8 <line:13:1, line:21:3> col:3 referenced __mbstate_t 'struct __mbstate_t':'__mbstate_t'
| `-ElaboratedType 0xcd88a0 'struct __mbstate_t' sugar
|   `-RecordType 0xcd8570 '__mbstate_t'
|     `-Record 0xcd84e8 ''
|-RecordDecl 0xcd8968 </usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h:10:9, line:14:1> line:10:16 struct _G_fpos_t definition
| |-FieldDecl 0xcd8a40 <line:12:3, col:11> col:11 __pos '__off_t':'long'
| `-FieldDecl 0xcd8ac0 <line:13:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
|-TypedefDecl 0xcd8b68 <line:10:1, line:14:3> col:3 referenced __fpos_t 'struct _G_fpos_t':'struct _G_fpos_t'
| `-ElaboratedType 0xcd8b10 'struct _G_fpos_t' sugar
|   `-RecordType 0xcd89f0 'struct _G_fpos_t'
|     `-Record 0xcd8968 '_G_fpos_t'
|-RecordDecl 0xcd8bd8 </usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h:10:9, line:14:1> line:10:16 struct _G_fpos64_t definition
| |-FieldDecl 0xcd8c90 <line:12:3, col:13> col:13 __pos '__off64_t':'long'
| `-FieldDecl 0xcd8cf0 <line:13:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
|-TypedefDecl 0xcd8d98 <line:10:1, line:14:3> col:3 __fpos64_t 'struct _G_fpos64_t':'struct _G_fpos64_t'
| `-ElaboratedType 0xcd8d40 'struct _G_fpos64_t' sugar
|   `-RecordType 0xcd8c60 'struct _G_fpos64_t'
|     `-Record 0xcd8bd8 '_G_fpos64_t'
|-RecordDecl 0xcd8e08 </usr/include/x86_64-linux-gnu/bits/types/__FILE.h:4:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0xcd8f00 <line:5:1, col:25> col:25 __FILE 'struct _IO_FILE':'struct _IO_FILE'
| `-ElaboratedType 0xcd8eb0 'struct _IO_FILE' sugar
|   `-RecordType 0xcd8e90 'struct _IO_FILE'
|     `-Record 0xcdadb8 '_IO_FILE'
|-RecordDecl 0xcd8f58 prev 0xcd8e08 </usr/include/x86_64-linux-gnu/bits/types/FILE.h:4:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0xcd8ff8 <line:7:1, col:25> col:25 referenced FILE 'struct _IO_FILE':'struct _IO_FILE'
| `-ElaboratedType 0xcd8eb0 'struct _IO_FILE' sugar
|   `-RecordType 0xcd8e90 'struct _IO_FILE'
|     `-Record 0xcdadb8 '_IO_FILE'
|-RecordDecl 0xcd9050 prev 0xcd8f58 </usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h:35:1, col:8> col:8 struct _IO_FILE
|-RecordDecl 0xcdab70 <line:36:1, col:8> col:8 struct _IO_marker
|-RecordDecl 0xcdac10 <line:37:1, col:8> col:8 struct _IO_codecvt
|-RecordDecl 0xcdacb0 <line:38:1, col:8> col:8 struct _IO_wide_data
|-TypedefDecl 0xcdad60 <line:43:1, col:14> col:14 referenced _IO_lock_t 'void'
| `-BuiltinType 0xc20da0 'void'
|-RecordDecl 0xcdadb8 prev 0xcd9050 <line:49:1, line:99:1> line:49:8 struct _IO_FILE definition
| |-FieldDecl 0xcdae50 <line:51:3, col:7> col:7 _flags 'int'
| |-FieldDecl 0xcdaeb8 <line:54:3, col:9> col:9 _IO_read_ptr 'char *'
| |-FieldDecl 0xcdaf20 <line:55:3, col:9> col:9 _IO_read_end 'char *'
| |-FieldDecl 0xcdaf88 <line:56:3, col:9> col:9 _IO_read_base 'char *'
| |-FieldDecl 0xcdaff0 <line:57:3, col:9> col:9 _IO_write_base 'char *'
| |-FieldDecl 0xcdb058 <line:58:3, col:9> col:9 _IO_write_ptr 'char *'
| |-FieldDecl 0xcdb0c0 <line:59:3, col:9> col:9 _IO_write_end 'char *'
| |-FieldDecl 0xcdb128 <line:60:3, col:9> col:9 _IO_buf_base 'char *'
| |-FieldDecl 0xcdb190 <line:61:3, col:9> col:9 _IO_buf_end 'char *'
| |-FieldDecl 0xcdb1f8 <line:64:3, col:9> col:9 _IO_save_base 'char *'
| |-FieldDecl 0xcdb260 <line:65:3, col:9> col:9 _IO_backup_base 'char *'
| |-FieldDecl 0xcdb2c8 <line:66:3, col:9> col:9 _IO_save_end 'char *'
| |-FieldDecl 0xcdb3d0 <line:68:3, col:22> col:22 _markers 'struct _IO_marker *'
| |-FieldDecl 0xcdb4a0 <line:70:3, col:20> col:20 _chain 'struct _IO_FILE *'
| |-FieldDecl 0xcdb508 <line:72:3, col:7> col:7 _fileno 'int'
| |-FieldDecl 0xcdb570 <line:73:3, col:7> col:7 _flags2 'int'
| |-FieldDecl 0xcdb5d0 <line:74:3, col:11> col:11 _old_offset '__off_t':'long'
| |-FieldDecl 0xcdb638 <line:77:3, col:18> col:18 _cur_column 'unsigned short'
| |-FieldDecl 0xcdb6a0 <line:78:3, col:15> col:15 _vtable_offset 'signed char'
| |-FieldDecl 0xcdb788 <line:79:3, col:19> col:8 _shortbuf 'char [1]'
| |-FieldDecl 0xcdb838 <line:81:3, col:15> col:15 _lock '_IO_lock_t *'
| |-FieldDecl 0xcdb898 <line:89:3, col:13> col:13 _offset '__off64_t':'long'
| |-FieldDecl 0xcdb9a0 <line:91:3, col:23> col:23 _codecvt 'struct _IO_codecvt *'
| |-FieldDecl 0xcdbaa0 <line:92:3, col:25> col:25 _wide_data 'struct _IO_wide_data *'
| |-FieldDecl 0xcdbb18 <line:93:3, col:20> col:20 _freeres_list 'struct _IO_FILE *'
| |-FieldDecl 0xcdcba8 <line:94:3, col:9> col:9 _freeres_buf 'void *'
| |-FieldDecl 0xcdcc30 <line:95:3, col:10> col:10 __pad5 'size_t':'unsigned long'
| |-FieldDecl 0xcdcc98 <line:96:3, col:7> col:7 _mode 'int'
| `-FieldDecl 0xcdcee8 <line:98:3, col:74> col:8 _unused2 'char [20]'
|-TypedefDecl 0xcdcf70 prev 0xcae8a0 </usr/include/stdio.h:52:1, col:24> col:24 referenced va_list '__gnuc_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0xcdcf40 '__gnuc_va_list' sugar
|   |-Typedef 0xcae908 '__gnuc_va_list'
|   `-TypedefType 0xcae870 '__builtin_va_list' sugar
|     |-Typedef 0xc21ce8 '__builtin_va_list'
|     `-ConstantArrayType 0xc21c90 'struct __va_list_tag [1]' 1 
|       `-RecordType 0xc21ad0 'struct __va_list_tag'
|         `-Record 0xc21a48 '__va_list_tag'
|-TypedefDecl 0xcdcfd8 <line:63:1, col:17> col:17 off_t '__off_t':'long'
| `-TypedefType 0xcd8a10 '__off_t' sugar
|   |-Typedef 0xccf580 '__off_t'
|   `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xcdd060 <line:77:1, col:19> col:19 ssize_t '__ssize_t':'long'
| `-TypedefType 0xcdd030 '__ssize_t' sugar
|   |-Typedef 0xcd8160 '__ssize_t'
|   `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xcdd0f0 <line:84:1, col:18> col:18 referenced fpos_t '__fpos_t':'struct _G_fpos_t'
| `-TypedefType 0xcdd0c0 '__fpos_t' sugar
|   |-Typedef 0xcd8b68 '__fpos_t'
|   `-ElaboratedType 0xcd8b10 'struct _G_fpos_t' sugar
|     `-RecordType 0xcd89f0 'struct _G_fpos_t'
|       `-Record 0xcd8968 '_G_fpos_t'
|-VarDecl 0xcdd1a8 <line:137:1, col:14> col:14 stdin 'FILE *' extern
|-VarDecl 0xcdd220 <line:138:1, col:14> col:14 stdout 'FILE *' extern
|-VarDecl 0xcdd298 <line:139:1, col:14> col:14 stderr 'FILE *' extern
|-FunctionDecl 0xcdd3e0 <line:146:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:146:12 remove 'int (const char *)' extern
| |-ParmVarDecl 0xcdd318 <col:20, col:32> col:32 __filename 'const char *'
| `-NoThrowAttr 0xcdd488 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xcdd650 </usr/include/stdio.h:148:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:148:12 rename 'int (const char *, const char *)' extern
| |-ParmVarDecl 0xcdd4f8 <col:20, col:32> col:32 __old 'const char *'
| |-ParmVarDecl 0xcdd578 <col:39, col:51> col:51 __new 'const char *'
| `-NoThrowAttr 0xcdd700 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xcdd9f0 </usr/include/stdio.h:152:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:152:12 renameat 'int (int, const char *, int, const char *)' extern
| |-ParmVarDecl 0xcdd770 <col:22, col:26> col:26 __oldfd 'int'
| |-ParmVarDecl 0xcdd7f0 <col:35, col:47> col:47 __old 'const char *'
| |-ParmVarDecl 0xcdd870 <col:54, col:58> col:58 __newfd 'int'
| |-ParmVarDecl 0xcdd8f0 <line:153:8, col:20> col:20 __new 'const char *'
| `-NoThrowAttr 0xcddab0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xce0f78 </usr/include/stdio.h:173:1, col:27> col:14 tmpfile 'FILE *(void)' extern
|-FunctionDecl 0xce1100 <line:187:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:187:14 tmpnam 'char *(char *)' extern
| |-ParmVarDecl 0xce1030 <col:22, col:28> col:28 __s 'char *'
| `-NoThrowAttr 0xce11a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xce12b0 </usr/include/stdio.h:192:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:192:14 tmpnam_r 'char *(char *)' extern
| |-ParmVarDecl 0xce1218 <col:24, col:30> col:30 __s 'char *'
| `-NoThrowAttr 0xce1358 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xce1520 </usr/include/stdio.h:204:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdio.h:204:14 tempnam 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0xce13c8 <col:23, col:35> col:35 __dir 'const char *'
| |-ParmVarDecl 0xce1448 <col:42, col:54> col:54 __pfx 'const char *'
| |-NoThrowAttr 0xce15d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0xce1628 <line:208:47> malloc
|-FunctionDecl 0xce1760 </usr/include/stdio.h:213:1, col:34> col:12 fclose 'int (FILE *)' extern
| `-ParmVarDecl 0xce1660 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0xce18b0 <line:218:1, col:34> col:12 fflush 'int (FILE *)' extern
| `-ParmVarDecl 0xce1818 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0xce1a00 <line:227:1, col:43> col:12 fflush_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0xce1968 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0xce1c98 <line:246:14> col:14 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0xce1d38 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xce1da0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xce1e18 prev 0xce1c98 <col:1, line:247:37> line:246:14 fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0xce1ac0 <col:21, col:44> col:44 __filename 'const char *restrict'
| `-ParmVarDecl 0xce1b40 <line:247:7, col:30> col:30 __modes 'const char *restrict'
|-FunctionDecl 0xce2128 <line:252:1, line:254:34> line:252:14 freopen 'FILE *(const char *restrict, const char *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0xce1f10 <col:23, col:46> col:46 __filename 'const char *restrict'
| |-ParmVarDecl 0xce1f90 <line:253:9, col:32> col:32 __modes 'const char *restrict'
| `-ParmVarDecl 0xce2008 <line:254:9, col:26> col:26 __stream 'FILE *restrict'
|-FunctionDecl 0xce2388 <line:279:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:279:14 fdopen 'FILE *(int, const char *)' extern
| |-ParmVarDecl 0xce21f8 <col:22, col:26> col:26 __fd 'int'
| |-ParmVarDecl 0xce2278 <col:32, col:44> col:44 __modes 'const char *'
| `-NoThrowAttr 0xce2438 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xce26c8 </usr/include/stdio.h:292:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:292:14 fmemopen 'FILE *(void *, size_t, const char *)' extern
| |-ParmVarDecl 0xce24a8 <col:24, col:30> col:30 __s 'void *'
| |-ParmVarDecl 0xce2520 <col:35, col:42> col:42 __len 'size_t':'unsigned long'
| |-ParmVarDecl 0xce25a0 <col:49, col:61> col:61 __modes 'const char *'
| `-NoThrowAttr 0xce2780 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xce2a08 </usr/include/stdio.h:298:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:298:14 open_memstream 'FILE *(char **, size_t *)' extern
| |-ParmVarDecl 0xce2820 <col:30, col:37> col:37 __bufloc 'char **'
| |-ParmVarDecl 0xce28f8 <col:47, col:55> col:55 __sizeloc 'size_t *'
| `-NoThrowAttr 0xce2ab8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xce2cb8 </usr/include/stdio.h:304:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:304:13 setbuf 'void (FILE *restrict, char *restrict)' extern
| |-ParmVarDecl 0xce2b20 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0xce2ba0 <col:48, col:65> col:65 __buf 'char *restrict'
| `-NoThrowAttr 0xce2d68 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xce40f0 </usr/include/stdio.h:308:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:308:12 setvbuf 'int (FILE *restrict, char *restrict, int, size_t)' extern
| |-ParmVarDecl 0xce2dd0 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0xce2e50 <col:48, col:65> col:65 __buf 'char *restrict'
| |-ParmVarDecl 0xce3f30 <line:309:7, col:11> col:11 __modes 'int'
| |-ParmVarDecl 0xce3fa8 <col:20, col:27> col:27 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0xce41b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xce4438 </usr/include/stdio.h:314:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:314:13 setbuffer 'void (FILE *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0xce4218 <col:24, col:41> col:41 __stream 'FILE *restrict'
| |-ParmVarDecl 0xce4298 <col:51, col:68> col:68 __buf 'char *restrict'
| |-ParmVarDecl 0xce4310 <line:315:10, col:17> col:17 __size 'size_t':'unsigned long'
| `-NoThrowAttr 0xce44f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xce4648 </usr/include/stdio.h:318:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:318:13 setlinebuf 'void (FILE *)' extern
| |-ParmVarDecl 0xce4558 <col:25, col:31> col:31 __stream 'FILE *'
| `-NoThrowAttr 0xce46f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xce4940 </usr/include/stdio.h:326:12> col:12 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0xce49e0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0xce4a48 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0xce4ac0 <col:12> Implicit printf 2 3
|-FunctionDecl 0xce4b28 prev 0xce4940 <col:1, line:327:43> line:326:12 fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0xce4758 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0xce47d8 <line:327:7, col:30> col:30 __format 'const char *restrict'
| `-FormatAttr 0xce4c08 <line:326:12> Inherited printf 2 3
|-FunctionDecl 0xce4d68 <line:332:12> col:12 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0xce4e08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0xce4e78 <col:12> Implicit printf 1 2
|-FunctionDecl 0xce5080 prev 0xce4d68 <col:1, col:56> col:12 used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0xce4c58 <col:20, col:43> col:43 __format 'const char *restrict'
| `-FormatAttr 0xce5158 <col:12> Inherited printf 1 2
|-FunctionDecl 0xce5348 <line:334:12> col:12 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0xce53e8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0xce5450 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0xce54c8 <col:12> Implicit printf 2 3
|-FunctionDecl 0xce5530 prev 0xce5348 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:56:49> /usr/include/stdio.h:334:12 sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0xce51a8 <col:21, col:38> col:38 __s 'char *restrict'
| |-ParmVarDecl 0xce5228 <line:335:7, col:30> col:30 __format 'const char *restrict'
| |-FormatAttr 0xce5638 <line:334:12> Inherited printf 2 3
| `-NoThrowAttr 0xce55e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
|-FunctionDecl 0xce5950 </usr/include/stdio.h:341:12> col:12 implicit vfprintf 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xce59f0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0xce5a58 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0xce5ac0 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0xce5b40 <col:12> Implicit printf 2 0
|-FunctionDecl 0xce5ba8 prev 0xce5950 <col:1, line:342:28> line:341:12 vfprintf 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xce5680 <col:22, col:39> col:39 __s 'FILE *restrict'
| |-ParmVarDecl 0xce5700 <col:44, col:67> col:67 __format 'const char *restrict'
| |-ParmVarDecl 0xce57e0 <line:342:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0xce5c90 <line:341:12> Inherited printf 2 0
|-FunctionDecl 0xce5e70 <line:347:12> col:12 implicit vprintf 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xce5f10 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0xce5f78 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0xce5ff0 <col:12> Implicit printf 1 0
|-FunctionDecl 0xce6090 prev 0xce5e70 <col:1, col:74> col:12 vprintf 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xce5ce0 <col:21, col:44> col:44 __format 'const char *restrict'
| |-ParmVarDecl 0xce5d58 <col:54, col:69> col:69 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0xce6170 <col:12> Inherited printf 1 0
|-FunctionDecl 0xce63e0 <line:349:12> col:12 implicit vsprintf 'int (char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xce6480 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0xce64e8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0xce6550 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0xce65d0 <col:12> Implicit printf 2 0
|-FunctionDecl 0xce6638 prev 0xce63e0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:56:49> /usr/include/stdio.h:349:12 vsprintf 'int (char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xce61c0 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0xce6240 <col:44, col:67> col:67 __format 'const char *restrict'
| |-ParmVarDecl 0xce62b8 <line:350:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-FormatAttr 0xce6748 <line:349:12> Inherited printf 2 0
| `-NoThrowAttr 0xce66f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
|-FunctionDecl 0xce6a28 </usr/include/stdio.h:354:12> col:12 implicit snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0xce6ac8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0xce6b30 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0xce6b98 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0xce6c18 <col:12> Implicit printf 3 4
|-FunctionDecl 0xce6c80 prev 0xce6a28 <col:1, line:356:62> line:354:12 snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0xce6798 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0xce6810 <col:44, col:51> col:51 __maxlen 'size_t':'unsigned long'
| |-ParmVarDecl 0xce6890 <line:355:8, col:31> col:31 __format 'const char *restrict'
| |-NoThrowAttr 0xce6d38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
| `-FormatAttr 0xce6d90 </usr/include/stdio.h:356:32, col:60> printf 3 4
|-FunctionDecl 0xce9160 <line:358:12> col:12 implicit vsnprintf 'int (char *, unsigned long, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xce9200 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0xce9268 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0xce92d0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0xce9338 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0xce93c0 <col:12> Implicit printf 3 0
|-FunctionDecl 0xce9428 prev 0xce9160 <col:1, line:360:62> line:358:12 vsnprintf 'int (char *, unsigned long, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xce6de0 <col:23, col:40> col:40 __s 'char *restrict'
| |-ParmVarDecl 0xce6e58 <col:45, col:52> col:52 __maxlen 'size_t':'unsigned long'
| |-ParmVarDecl 0xce6ed8 <line:359:9, col:32> col:32 __format 'const char *restrict'
| |-ParmVarDecl 0xce6f50 <col:42, col:57> col:57 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-NoThrowAttr 0xce94e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
| `-FormatAttr 0xce9540 </usr/include/stdio.h:360:32, col:60> printf 3 0
|-FunctionDecl 0xce9800 <line:379:1, line:381:52> line:379:12 vdprintf 'int (int, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xce9590 <col:22, col:26> col:26 __fd 'int'
| |-ParmVarDecl 0xce9610 <col:32, col:55> col:55 __fmt 'const char *restrict'
| |-ParmVarDecl 0xce9688 <line:380:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0xce98b8 <line:381:22, col:50> printf 2 0
|-FunctionDecl 0xce9b28 <line:382:1, line:383:52> line:382:12 dprintf 'int (int, const char *restrict, ...)' extern
| |-ParmVarDecl 0xce9938 <col:21, col:25> col:25 __fd 'int'
| |-ParmVarDecl 0xce99b8 <col:31, col:54> col:54 __fmt 'const char *restrict'
| `-FormatAttr 0xce9bd8 <line:383:22, col:50> printf 2 3
|-FunctionDecl 0xce9d70 <line:391:12> col:12 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0xce9e10 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0xce9e78 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0xce9ef0 <col:12> Implicit scanf 2 3
|-FunctionDecl 0xce9f58 prev 0xce9d70 <col:1, line:392:42> line:391:12 fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0xce9c50 <col:20, col:37> col:37 __stream 'FILE *restrict'
| |-ParmVarDecl 0xce9cd0 <line:392:6, col:29> col:29 __format 'const char *restrict'
| `-FormatAttr 0xcea038 <line:391:12> Inherited scanf 2 3
|-FunctionDecl 0xcea178 <line:397:12> col:12 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0xcea218 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0xcea288 <col:12> Implicit scanf 1 2
|-FunctionDecl 0xcea2f0 prev 0xcea178 <col:1, col:55> col:12 scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0xcea0e0 <col:19, col:42> col:42 __format 'const char *restrict'
| `-FormatAttr 0xcea3c8 <col:12> Inherited scanf 1 2
|-FunctionDecl 0xcea5b8 <line:399:12> col:12 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0xcea658 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0xcea6c0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0xcea738 <col:12> Implicit scanf 2 3
|-FunctionDecl 0xcea7a0 prev 0xcea5b8 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:399:12 sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0xcea418 <col:20, col:43> col:43 __s 'const char *restrict'
| |-ParmVarDecl 0xcea498 <line:400:6, col:29> col:29 __format 'const char *restrict'
| |-FormatAttr 0xcea8a8 <line:399:12> Inherited scanf 2 3
| `-NoThrowAttr 0xcea850 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xceaa80 prev 0xce9f58 </usr/include/stdio.h:407:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/stdio.h:407:24 fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0xcea8f0 <col:33, col:50> col:50 __stream 'FILE *restrict'
| |-ParmVarDecl 0xcea970 <line:408:5, col:28> col:28 __format 'const char *restrict'
| |-FormatAttr 0xceaba8 <line:391:12> Inherited scanf 2 3
| `-AsmLabelAttr 0xceab20 <<scratch space>:14:1> "__isoc99_fscanf" IsLiteralLabel
|-FunctionDecl 0xceacf8 prev 0xcea2f0 </usr/include/stdio.h:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/stdio.h:410:24 scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0xceabf8 <col:32, col:55> col:55 __format 'const char *restrict'
| |-FormatAttr 0xceae18 <line:397:12> Inherited scanf 1 2
| `-AsmLabelAttr 0xcead98 <<scratch space>:16:1> "__isoc99_scanf" IsLiteralLabel
|-FunctionDecl 0xceafb8 prev 0xcea7a0 </usr/include/stdio.h:412:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:412:28 sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0xceae68 <col:37, col:60> col:60 __s 'const char *restrict'
| |-ParmVarDecl 0xceaee8 <line:413:9, col:32> col:32 __format 'const char *restrict'
| |-FormatAttr 0xceb768 <line:399:12> Inherited scanf 2 3
| |-AsmLabelAttr 0xceb058 <<scratch space>:18:1> "__isoc99_sscanf" IsLiteralLabel
| `-NoThrowAttr 0xceb740 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xceb9e0 </usr/include/stdio.h:432:12> col:12 implicit vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xceba80 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0xcebae8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0xcebb50 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0xcebbd0 <col:12> Implicit scanf 2 0
|-FunctionDecl 0xcebc38 prev 0xceb9e0 <col:1, line:434:51> line:432:12 vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xceb7b0 <col:21, col:38> col:38 __s 'FILE *restrict'
| |-ParmVarDecl 0xceb830 <col:43, col:66> col:66 __format 'const char *restrict'
| |-ParmVarDecl 0xceb8a8 <line:433:7, col:22> col:22 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0xcebcf0 <line:434:22, col:49> scanf 2 0
|-FunctionDecl 0xcebf18 <line:440:12> col:12 implicit vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xcebfb8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0xcec020 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0xcec098 <col:12> Implicit scanf 1 0
|-FunctionDecl 0xcec100 prev 0xcebf18 <col:1, line:441:51> line:440:12 vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xcebd70 <col:20, col:43> col:43 __format 'const char *restrict'
| |-ParmVarDecl 0xcebde8 <col:53, col:68> col:68 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0xcec1b0 <line:441:22, col:49> scanf 1 0
|-FunctionDecl 0xcec4e0 <line:444:12> col:12 implicit vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xcec580 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0xcec5e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0xcec650 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0xcec6d0 <col:12> Implicit scanf 2 0
|-FunctionDecl 0xcecf60 prev 0xcec4e0 <col:1, line:446:59> line:444:12 vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xcec230 <col:21, col:44> col:44 __s 'const char *restrict'
| |-ParmVarDecl 0xcec2b0 <line:445:7, col:30> col:30 __format 'const char *restrict'
| |-ParmVarDecl 0xcec328 <col:40, col:55> col:55 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-NoThrowAttr 0xced018 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-FormatAttr 0xced070 </usr/include/stdio.h:446:30, col:57> scanf 2 0
|-FunctionDecl 0xced318 prev 0xcebc38 <line:451:1, line:455:51> line:451:24 vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xced0b8 <line:452:11, col:28> col:28 __s 'FILE *restrict'
| |-ParmVarDecl 0xced138 <line:453:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0xced1b0 <col:37, col:52> col:52 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0xced3b8 <<scratch space>:21:1> "__isoc99_vfscanf" IsLiteralLabel
| `-FormatAttr 0xced448 </usr/include/stdio.h:455:22, col:49> scanf 2 0
|-FunctionDecl 0xced630 prev 0xcec100 <line:456:1, line:458:51> line:456:24 vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xced498 <col:33, col:56> col:56 __format 'const char *restrict'
| |-ParmVarDecl 0xced510 <line:457:5, col:20> col:20 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0xced6d0 <<scratch space>:23:1> "__isoc99_vscanf" IsLiteralLabel
| `-FormatAttr 0xced758 </usr/include/stdio.h:458:22, col:49> scanf 1 0
|-FunctionDecl 0xced9c8 prev 0xcecf60 <line:459:1, line:463:51> line:459:28 vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xced7a8 <line:460:8, col:31> col:31 __s 'const char *restrict'
| |-ParmVarDecl 0xced828 <line:461:8, col:31> col:31 __format 'const char *restrict'
| |-ParmVarDecl 0xced8a0 <line:462:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0xceda68 <<scratch space>:25:1> "__isoc99_vsscanf" IsLiteralLabel
| |-NoThrowAttr 0xcedaf8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-FormatAttr 0xcedb20 </usr/include/stdio.h:463:22, col:49> scanf 2 0
|-FunctionDecl 0xcedc00 <line:485:1, col:33> col:12 fgetc 'int (FILE *)' extern
| `-ParmVarDecl 0xcedb68 <col:19, col:25> col:25 __stream 'FILE *'
|-FunctionDecl 0xcedd50 <line:486:1, col:32> col:12 getc 'int (FILE *)' extern
| `-ParmVarDecl 0xcedcb8 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0xcedec0 <line:492:1, col:25> col:12 getchar 'int (void)' extern
|-FunctionDecl 0xcc1c08 <line:499:1, col:41> col:12 getc_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0xcc1b70 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0xcc1d50 <line:500:1, col:34> col:12 getchar_unlocked 'int (void)' extern
|-FunctionDecl 0xcc1e98 <line:510:1, col:42> col:12 fgetc_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0xcc1e00 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0xcc20f0 <line:521:1, col:42> col:12 fputc 'int (int, FILE *)' extern
| |-ParmVarDecl 0xcc1f58 <col:19, col:23> col:23 __c 'int'
| `-ParmVarDecl 0xcc1fd0 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0xcc22d0 <line:522:1, col:41> col:12 putc 'int (int, FILE *)' extern
| |-ParmVarDecl 0xcc21b8 <col:18, col:22> col:22 __c 'int'
| `-ParmVarDecl 0xcc2230 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0xcc2460 <line:528:1, col:28> col:12 putchar 'int (int)' extern
| `-ParmVarDecl 0xcc2398 <col:21, col:25> col:25 __c 'int'
|-FunctionDecl 0xcc2638 <line:537:1, col:51> col:12 fputc_unlocked 'int (int, FILE *)' extern
| |-ParmVarDecl 0xcc2520 <col:28, col:32> col:32 __c 'int'
| `-ParmVarDecl 0xcc2598 <col:37, col:43> col:43 __stream 'FILE *'
|-FunctionDecl 0xcc2818 <line:545:1, col:50> col:12 putc_unlocked 'int (int, FILE *)' extern
| |-ParmVarDecl 0xcc2700 <col:27, col:31> col:31 __c 'int'
| `-ParmVarDecl 0xcc2778 <col:36, col:42> col:42 __stream 'FILE *'
|-FunctionDecl 0xcc2978 <line:546:1, col:37> col:12 putchar_unlocked 'int (int)' extern
| `-ParmVarDecl 0xcc28e0 <col:30, col:34> col:34 __c 'int'
|-FunctionDecl 0xcc3b80 <line:553:1, col:32> col:12 getw 'int (FILE *)' extern
| `-ParmVarDecl 0xcc2a30 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0xcc3d58 <line:556:1, col:41> col:12 putw 'int (int, FILE *)' extern
| |-ParmVarDecl 0xcc3c40 <col:18, col:22> col:22 __w 'int'
| `-ParmVarDecl 0xcc3cb8 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0xcc4040 <line:564:1, col:77> col:14 fgets 'char *(char *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0xcc3e20 <col:21, col:38> col:38 __s 'char *restrict'
| |-ParmVarDecl 0xcc3ea0 <col:43, col:47> col:47 __n 'int'
| `-ParmVarDecl 0xcc3f18 <col:52, col:69> col:69 __stream 'FILE *restrict'
|-FunctionDecl 0xcc43c8 <line:603:1, line:605:55> line:603:18 __getdelim '__ssize_t (char **restrict, size_t *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0xcc4110 <col:30, col:48> col:48 __lineptr 'char **restrict'
| |-ParmVarDecl 0xcc4188 <line:604:30, col:49> col:49 __n 'size_t *restrict'
| |-ParmVarDecl 0xcc4208 <col:54, col:58> col:58 __delimiter 'int'
| `-ParmVarDecl 0xcc4280 <line:605:30, col:47> col:47 __stream 'FILE *restrict'
|-FunctionDecl 0xcc46b8 <line:606:1, line:608:53> line:606:18 getdelim '__ssize_t (char **restrict, size_t *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0xcc44a0 <col:28, col:46> col:46 __lineptr 'char **restrict'
| |-ParmVarDecl 0xcc4518 <line:607:28, col:47> col:47 __n 'size_t *restrict'
| |-ParmVarDecl 0xcc4598 <col:52, col:56> col:56 __delimiter 'int'
| `-ParmVarDecl 0xcc4610 <line:608:28, col:45> col:45 __stream 'FILE *restrict'
|-FunctionDecl 0xcc49a8 <line:616:1, line:618:52> line:616:18 getline '__ssize_t (char **restrict, size_t *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0xcc4790 <col:27, col:45> col:45 __lineptr 'char **restrict'
| |-ParmVarDecl 0xcc4808 <line:617:27, col:46> col:46 __n 'size_t *restrict'
| `-ParmVarDecl 0xcc4880 <line:618:27, col:44> col:44 __stream 'FILE *restrict'
|-FunctionDecl 0xcc4c40 <line:626:1, col:72> col:12 fputs 'int (const char *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0xcc4a78 <col:19, col:42> col:42 __s 'const char *restrict'
| `-ParmVarDecl 0xcc4af0 <col:47, col:64> col:64 __stream 'FILE *restrict'
|-FunctionDecl 0xcc4da0 <line:632:1, col:33> col:12 puts 'int (const char *)' extern
| `-ParmVarDecl 0xcc4d08 <col:18, col:30> col:30 __s 'const char *'
|-FunctionDecl 0xcc4f78 <line:639:1, col:43> col:12 ungetc 'int (int, FILE *)' extern
| |-ParmVarDecl 0xcc4e60 <col:20, col:24> col:24 __c 'int'
| `-ParmVarDecl 0xcc4ed8 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0xcc5338 <line:646:15> col:15 implicit fread 'unsigned long (void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0xcc53d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0xcc5440 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0xcc54a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0xcc5510 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0xcc5598 prev 0xcc5338 <col:1, line:647:45> line:646:15 fread 'unsigned long (void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0xcc5040 <col:22, col:39> col:39 __ptr 'void *restrict'
| |-ParmVarDecl 0xcc50b8 <col:46, col:53> col:53 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0xcc5130 <line:647:8, col:15> col:15 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0xcc51a8 <col:20, col:37> col:37 __stream 'FILE *restrict'
|-FunctionDecl 0xcc5998 <line:652:15> col:15 implicit fwrite 'unsigned long (const void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0xcc5a38 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0xcc5aa0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0xcc5b08 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0xcf7f50 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0xcf7fd8 prev 0xcc5998 <col:1, line:653:41> line:652:15 fwrite 'unsigned long (const void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0xcc56a0 <col:23, col:46> col:46 __ptr 'const void *restrict'
| |-ParmVarDecl 0xcc5718 <col:53, col:60> col:60 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0xcc5790 <line:653:9, col:16> col:16 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0xcc5808 <col:21, col:38> col:38 __s 'FILE *restrict'
|-FunctionDecl 0xcf82c0 <line:673:1, line:674:47> line:673:15 fread_unlocked 'size_t (void *restrict, size_t, size_t, FILE *restrict)' extern
| |-ParmVarDecl 0xcf80b0 <col:31, col:48> col:48 __ptr 'void *restrict'
| |-ParmVarDecl 0xcf8128 <col:55, col:62> col:62 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0xcf81a0 <line:674:10, col:17> col:17 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0xcf8218 <col:22, col:39> col:39 __stream 'FILE *restrict'
|-FunctionDecl 0xcf85a8 <line:675:1, line:676:48> line:675:15 fwrite_unlocked 'size_t (const void *restrict, size_t, size_t, FILE *restrict)' extern
| |-ParmVarDecl 0xcf8398 <col:32, col:55> col:55 __ptr 'const void *restrict'
| |-ParmVarDecl 0xcf8410 <col:62, col:69> col:69 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0xcf8488 <line:676:11, col:18> col:18 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0xcf8500 <col:23, col:40> col:40 __stream 'FILE *restrict'
|-FunctionDecl 0xcf88a0 <line:684:1, col:63> col:12 fseek 'int (FILE *, long, int)' extern
| |-ParmVarDecl 0xcf8678 <col:19, col:25> col:25 __stream 'FILE *'
| |-ParmVarDecl 0xcf86f8 <col:35, col:44> col:44 __off 'long'
| `-ParmVarDecl 0xcf8778 <col:51, col:55> col:55 __whence 'int'
|-FunctionDecl 0xcf8a60 <line:689:1, col:38> col:17 ftell 'long (FILE *)' extern
| `-ParmVarDecl 0xcf8968 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0xcf8ba8 <line:694:1, col:35> col:13 rewind 'void (FILE *)' extern
| `-ParmVarDecl 0xcf8b18 <col:21, col:27> col:27 __stream 'FILE *'
|-FunctionDecl 0xcf8e40 <line:707:1, col:63> col:12 fseeko 'int (FILE *, __off_t, int)' extern
| |-ParmVarDecl 0xcf8c60 <col:20, col:26> col:26 __stream 'FILE *'
| |-ParmVarDecl 0xcf8cd8 <col:36, col:44> col:44 __off '__off_t':'long'
| `-ParmVarDecl 0xcf8d58 <col:51, col:55> col:55 __whence 'int'
|-FunctionDecl 0xcf9028 <line:712:1, col:38> col:16 ftello '__off_t (FILE *)' extern
| `-ParmVarDecl 0xcf8f60 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0xcf92f0 <line:731:1, col:72> col:12 fgetpos 'int (FILE *restrict, fpos_t *restrict)' extern
| |-ParmVarDecl 0xcf90e0 <col:21, col:38> col:38 __stream 'FILE *restrict'
| `-ParmVarDecl 0xcf91d8 <col:48, col:67> col:67 __pos 'fpos_t *restrict'
|-FunctionDecl 0xcf95a0 <line:736:1, col:56> col:12 fsetpos 'int (FILE *, const fpos_t *)' extern
| |-ParmVarDecl 0xcf93b0 <col:21, col:27> col:27 __stream 'FILE *'
| `-ParmVarDecl 0xcf9488 <col:37, col:51> col:51 __pos 'const fpos_t *'
|-FunctionDecl 0xcf96f0 <line:757:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:757:13 clearerr 'void (FILE *)' extern
| |-ParmVarDecl 0xcf9660 <col:23, col:29> col:29 __stream 'FILE *'
| `-NoThrowAttr 0xcf9798 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xcf9898 </usr/include/stdio.h:759:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:759:12 feof 'int (FILE *)' extern
| |-ParmVarDecl 0xcf9800 <col:18, col:24> col:24 __stream 'FILE *'
| `-NoThrowAttr 0xcf9940 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xcf9a40 </usr/include/stdio.h:761:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:761:12 ferror 'int (FILE *)' extern
| |-ParmVarDecl 0xcf99a8 <col:20, col:26> col:26 __stream 'FILE *'
| `-NoThrowAttr 0xcf9ae8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xcf9be0 </usr/include/stdio.h:765:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:765:13 clearerr_unlocked 'void (FILE *)' extern
| |-ParmVarDecl 0xcf9b50 <col:32, col:38> col:38 __stream 'FILE *'
| `-NoThrowAttr 0xcf9c88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xcf9d88 </usr/include/stdio.h:766:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:766:12 feof_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0xcf9cf0 <col:27, col:33> col:33 __stream 'FILE *'
| `-NoThrowAttr 0xcf9e30 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xcf9f70 </usr/include/stdio.h:767:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:767:12 ferror_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0xcf9e98 <col:29, col:35> col:35 __stream 'FILE *'
| `-NoThrowAttr 0xcfa018 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xcfa148 </usr/include/stdio.h:775:1, col:36> col:13 perror 'void (const char *)' extern
| `-ParmVarDecl 0xcfa088 <col:21, col:33> col:33 __s 'const char *'
|-VarDecl 0xcfa208 </usr/include/x86_64-linux-gnu/bits/sys_errlist.h:26:1, col:12> col:12 sys_nerr 'int' extern
|-VarDecl 0xcfa2f0 <line:27:1, col:38> col:26 sys_errlist 'const char *const []' extern
|-FunctionDecl 0xcfa400 </usr/include/stdio.h:786:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:786:12 fileno 'int (FILE *)' extern
| |-ParmVarDecl 0xcfa368 <col:20, col:26> col:26 __stream 'FILE *'
| `-NoThrowAttr 0xcfa4a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xcfa5a8 </usr/include/stdio.h:791:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:791:12 fileno_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0xcfa510 <col:29, col:35> col:35 __stream 'FILE *'
| `-NoThrowAttr 0xcfa650 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xcfa7d8 </usr/include/stdio.h:800:1, col:63> col:14 popen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0xcfa6c0 <col:21, col:33> col:33 __command 'const char *'
| `-ParmVarDecl 0xcfa740 <col:44, col:56> col:56 __modes 'const char *'
|-FunctionDecl 0xcfa930 <line:806:1, col:34> col:12 pclose 'int (FILE *)' extern
| `-ParmVarDecl 0xcfa898 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0xcfaa88 <line:812:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:812:14 ctermid 'char *(char *)' extern
| |-ParmVarDecl 0xcfa9f0 <col:23, col:29> col:29 __s 'char *'
| `-NoThrowAttr 0xcfab30 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xcfac28 </usr/include/stdio.h:840:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:840:13 flockfile 'void (FILE *)' extern
| |-ParmVarDecl 0xcfab98 <col:24, col:30> col:30 __stream 'FILE *'
| `-NoThrowAttr 0xcfacd0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xcfadd0 </usr/include/stdio.h:844:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:844:12 ftrylockfile 'int (FILE *)' extern
| |-ParmVarDecl 0xcfad38 <col:26, col:32> col:32 __stream 'FILE *'
| `-NoThrowAttr 0xcfae78 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xcfbf90 </usr/include/stdio.h:847:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:847:13 funlockfile 'void (FILE *)' extern
| |-ParmVarDecl 0xcfaee0 <col:26, col:32> col:32 __stream 'FILE *'
| `-NoThrowAttr 0xcfc038 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xcfc138 </usr/include/stdio.h:858:1, col:27> col:12 __uflow 'int (FILE *)' extern
| `-ParmVarDecl 0xcfc0a0 <col:21, col:26> col:27 'FILE *'
|-FunctionDecl 0xcfc390 <line:859:1, col:35> col:12 __overflow 'int (FILE *, int)' extern
| |-ParmVarDecl 0xcfc1f0 <col:24, col:29> col:30 'FILE *'
| `-ParmVarDecl 0xcfc270 <col:32> col:35 'int'
|-FunctionDecl 0xcfc6c0 </usr/include/string.h:43:14> col:14 implicit memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0xcfc760 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0xcfc7c8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0xcfc830 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xcfc8b0 prev 0xcfc6c0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:43:14 memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0xcfc458 <col:22, col:39> col:39 __dest 'void *restrict'
| |-ParmVarDecl 0xcfc4d8 <col:47, col:70> col:70 __src 'const void *restrict'
| |-ParmVarDecl 0xcfc550 <line:44:8, col:15> col:15 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xcfc968 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xcfc9c0 <line:293:44, /usr/include/string.h:44:44> 1 2
|-FunctionDecl 0xcfcc30 <line:47:14> col:14 implicit memmove 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0xcfccd0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0xcfcd38 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0xcfcda0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xcfce20 prev 0xcfcc30 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:47:14 memmove 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0xcfca10 <col:23, col:29> col:29 __dest 'void *'
| |-ParmVarDecl 0xcfca90 <col:37, col:49> col:49 __src 'const void *'
| |-ParmVarDecl 0xcfcb08 <col:56, col:63> col:63 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xcfced8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xcfcf30 <line:293:44, /usr/include/string.h:48:30> 1 2
|-FunctionDecl 0xcfe2b0 <line:54:14> col:14 implicit memccpy 'void *(void *, const void *, int, unsigned long)' extern
| |-ParmVarDecl 0xcfe350 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0xcfe3b8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0xcfe420 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0xcfe488 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xcfe510 prev 0xcfe2b0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:54:14 memccpy 'void *(void *, const void *, int, unsigned long)' extern
| |-ParmVarDecl 0xcfdfb0 <col:23, col:40> col:40 __dest 'void *restrict'
| |-ParmVarDecl 0xcfe030 <col:48, col:71> col:71 __src 'const void *restrict'
| |-ParmVarDecl 0xcfe0b0 <line:55:9, col:13> col:13 __c 'int'
| |-ParmVarDecl 0xcfe128 <col:18, col:25> col:25 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xcfe5d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xcfe628 <line:293:44, /usr/include/string.h:56:30> 1 2
|-FunctionDecl 0xcfe8c0 <line:61:14> col:14 implicit memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0xcfe960 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0xcfe9c8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0xcfea30 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xcfeab0 prev 0xcfe8c0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:61:14 memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0xcfe680 <col:22, col:28> col:28 __s 'void *'
| |-ParmVarDecl 0xcfe700 <col:33, col:37> col:37 __c 'int'
| |-ParmVarDecl 0xcfe778 <col:42, col:49> col:49 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xcfeb68 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xcfebc0 <line:293:44, /usr/include/string.h:61:75> 1
|-FunctionDecl 0xcfee70 <line:64:12> col:12 implicit memcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0xcfef10 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0xcfefc0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0xcff028 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xcff0a8 prev 0xcfee70 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:64:12 memcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0xcfec10 <col:20, col:32> col:32 __s1 'const void *'
| |-ParmVarDecl 0xcfec90 <col:38, col:50> col:50 __s2 'const void *'
| |-ParmVarDecl 0xcfed08 <col:56, col:63> col:63 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xcff160 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xcff1b8 <line:226:45>
| `-NonNullAttr 0xcff1e0 <line:293:44, /usr/include/string.h:65:49> 1 2
|-FunctionDecl 0xcff470 <line:91:14> col:14 implicit memchr 'void *(const void *, int, unsigned long)' extern
| |-ParmVarDecl 0xcff510 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0xcff578 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0xcff5e0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xcff660 prev 0xcff470 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:91:14 memchr 'void *(const void *, int, unsigned long)' extern
| |-ParmVarDecl 0xcff230 <col:22, col:34> col:34 __s 'const void *'
| |-ParmVarDecl 0xcff2b0 <col:39, col:43> col:43 __c 'int'
| |-ParmVarDecl 0xcff328 <col:48, col:55> col:55 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xcff718 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xcff770 <line:226:45>
| `-NonNullAttr 0xcff798 <line:293:44, /usr/include/string.h:92:47> 1
|-FunctionDecl 0xcff9d0 <line:122:14> col:14 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0xcffa70 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0xcffad8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xcffb50 prev 0xcff9d0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:122:14 strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0xcff7f0 <col:22, col:39> col:39 __dest 'char *restrict'
| |-ParmVarDecl 0xcff870 <col:47, col:70> col:70 __src 'const char *restrict'
| |-NoThrowAttr 0xcffc00 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xcffc58 <line:293:44, /usr/include/string.h:123:30> 1 2
|-FunctionDecl 0xcfff10 <line:125:14> col:14 implicit strncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xcfffd0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0xd00038 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd000a0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xd00120 prev 0xcfff10 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:125:14 strncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xcffcb0 <col:23, col:40> col:40 __dest 'char *restrict'
| |-ParmVarDecl 0xcffd30 <line:126:9, col:32> col:32 __src 'const char *restrict'
| |-ParmVarDecl 0xcffda8 <col:39, col:46> col:46 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xd001d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd00230 <line:293:44, /usr/include/string.h:127:30> 1 2
|-FunctionDecl 0xd003e0 <line:130:14> col:14 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0xd00480 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0xd004e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xd00560 prev 0xd003e0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:130:14 strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0xd00280 <col:22, col:39> col:39 __dest 'char *restrict'
| |-ParmVarDecl 0xd00300 <col:47, col:70> col:70 __src 'const char *restrict'
| |-NoThrowAttr 0xd00610 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd00668 <line:293:44, /usr/include/string.h:131:30> 1 2
|-FunctionDecl 0xd008a0 <line:133:14> col:14 implicit strncat 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xd00940 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0xd009a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd00a10 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xd00a90 prev 0xd008a0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:133:14 strncat 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xd006c0 <col:23, col:40> col:40 __dest 'char *restrict'
| |-ParmVarDecl 0xd00740 <col:48, col:71> col:71 __src 'const char *restrict'
| |-ParmVarDecl 0xd007b8 <line:134:9, col:16> col:16 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xd00b48 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd00ba0 <line:293:44, /usr/include/string.h:134:45> 1 2
|-FunctionDecl 0xd00d50 <line:137:12> col:12 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0xd00df0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd00e58 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xd00ed0 prev 0xd00d50 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:137:12 strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0xd00bf0 <col:20, col:32> col:32 __s1 'const char *'
| |-ParmVarDecl 0xd00c70 <col:38, col:50> col:50 __s2 'const char *'
| |-NoThrowAttr 0xd00f80 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd01010 <line:226:45>
| `-NonNullAttr 0xd01038 <line:293:44, /usr/include/string.h:138:49> 1 2
|-FunctionDecl 0xd012f0 <line:140:12> col:12 implicit strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xd01390 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0xd013f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd01460 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xd014e0 prev 0xd012f0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:140:12 strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xd01090 <col:21, col:33> col:33 __s1 'const char *'
| |-ParmVarDecl 0xd01110 <col:39, col:51> col:51 __s2 'const char *'
| |-ParmVarDecl 0xd01188 <col:57, col:64> col:64 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xd01598 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd015f0 <line:226:45>
| `-NonNullAttr 0xd01618 <line:293:44, /usr/include/string.h:141:49> 1 2
|-FunctionDecl 0xd017d0 <line:144:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:144:12 strcoll 'int (const char *, const char *)' extern
| |-ParmVarDecl 0xd01670 <col:21, col:33> col:33 __s1 'const char *'
| |-ParmVarDecl 0xd016f0 <col:39, col:51> col:51 __s2 'const char *'
| |-NoThrowAttr 0xd01880 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd018d8 <line:226:45>
| `-NonNullAttr 0xd01900 <line:293:44, /usr/include/string.h:145:49> 1 2
|-FunctionDecl 0xd01b88 <line:147:15> col:15 implicit strxfrm 'unsigned long (char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xd01c28 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0xd01c90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd01cf8 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xd01d78 prev 0xd01b88 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:147:15 strxfrm 'unsigned long (char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xd01950 <col:24, col:41> col:41 __dest 'char *restrict'
| |-ParmVarDecl 0xd019d0 <line:148:10, col:33> col:33 __src 'const char *restrict'
| |-ParmVarDecl 0xd01a48 <col:40, col:47> col:47 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xd01e30 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd01e88 <line:293:44, /usr/include/string.h:149:27> 2
|-RecordDecl 0xd01ec8 </usr/include/x86_64-linux-gnu/bits/types/__locale_t.h:28:1, line:40:1> line:28:8 struct __locale_struct definition
| |-RecordDecl 0xd02f20 parent 0xc20d48 <line:31:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0xd03150 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0xd031e0 <line:34:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0xd03248 <line:35:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0xd032b0 <line:36:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0xd033a0 <line:39:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0xd034a0 <line:42:1, col:33> col:33 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0xd03450 'struct __locale_struct *'
|   `-ElaboratedType 0xd033f0 'struct __locale_struct' sugar
|     `-RecordType 0xd01f50 'struct __locale_struct'
|       `-Record 0xd01ec8 '__locale_struct'
|-TypedefDecl 0xd03530 </usr/include/x86_64-linux-gnu/bits/types/locale_t.h:24:1, col:20> col:20 referenced locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0xd03500 '__locale_t' sugar
|   |-Typedef 0xd034a0 '__locale_t'
|   `-PointerType 0xd03450 'struct __locale_struct *'
|     `-ElaboratedType 0xd033f0 'struct __locale_struct' sugar
|       `-RecordType 0xd01f50 'struct __locale_struct'
|         `-Record 0xd01ec8 '__locale_struct'
|-FunctionDecl 0xd03850 </usr/include/string.h:156:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:156:12 strcoll_l 'int (const char *, const char *, locale_t)' extern
| |-ParmVarDecl 0xd035a0 <col:23, col:35> col:35 __s1 'const char *'
| |-ParmVarDecl 0xd03620 <col:41, col:53> col:53 __s2 'const char *'
| |-ParmVarDecl 0xd036c0 <col:59, col:68> col:68 __l 'locale_t':'struct __locale_struct *'
| |-NoThrowAttr 0xd03908 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd03960 <line:226:45>
| `-NonNullAttr 0xd03988 <line:293:44, /usr/include/string.h:157:52> 1 2 3
|-FunctionDecl 0xd03cd8 <line:160:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:160:15 strxfrm_l 'size_t (char *, const char *, size_t, locale_t)' extern
| |-ParmVarDecl 0xd039e8 <col:26, col:32> col:32 __dest 'char *'
| |-ParmVarDecl 0xd03a68 <col:40, col:52> col:52 __src 'const char *'
| |-ParmVarDecl 0xd03ae0 <col:59, col:66> col:66 __n 'size_t':'unsigned long'
| |-ParmVarDecl 0xd03b58 <line:161:5, col:14> col:14 __l 'locale_t':'struct __locale_struct *'
| |-NoThrowAttr 0xd03d98 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd03df0 <line:293:44, /usr/include/string.h:161:43> 2 4
|-FunctionDecl 0xd03f60 <line:167:14> col:14 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0xd04000 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xd04070 prev 0xd03f60 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:167:14 strdup 'char *(const char *)' extern
| |-ParmVarDecl 0xd03e40 <col:22, col:34> col:34 __s 'const char *'
| |-NoThrowAttr 0xd04118 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-RestrictAttr 0xd04170 <line:208:47> malloc
| `-NonNullAttr 0xd04198 <line:293:44, /usr/include/string.h:168:48> 1
|-FunctionDecl 0xd043a0 <line:175:14> col:14 implicit strndup 'char *(const char *, unsigned long)' extern
| |-ParmVarDecl 0xd04440 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd044a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xd04520 prev 0xd043a0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:175:14 strndup 'char *(const char *, unsigned long)' extern
| |-ParmVarDecl 0xd041f0 <col:23, col:35> col:35 __string 'const char *'
| |-ParmVarDecl 0xd04268 <col:45, col:52> col:52 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xd045d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-RestrictAttr 0xd04628 <line:208:47> malloc
| `-NonNullAttr 0xd04650 <line:293:44, /usr/include/string.h:176:48> 1
|-FunctionDecl 0xd04820 <line:226:14> col:14 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0xd048c0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd04928 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0xd049a0 prev 0xd04820 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:226:14 strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0xd046a0 <col:22, col:34> col:34 __s 'const char *'
| |-ParmVarDecl 0xd04720 <col:39, col:43> col:43 __c 'int'
| |-NoThrowAttr 0xd04a50 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd04aa8 <line:226:45>
| `-NonNullAttr 0xd04ad0 <line:293:44, /usr/include/string.h:227:46> 1
|-FunctionDecl 0xd04c60 <line:253:14> col:14 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0xd04d00 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd04d68 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0xd04de0 prev 0xd04c60 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:253:14 strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0xd04b20 <col:23, col:35> col:35 __s 'const char *'
| |-ParmVarDecl 0xd04ba0 <col:40, col:44> col:44 __c 'int'
| |-NoThrowAttr 0xd04e90 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd04ee8 <line:226:45>
| `-NonNullAttr 0xd04f40 <line:293:44, /usr/include/string.h:254:46> 1
|-FunctionDecl 0xd05168 <line:273:15> col:15 implicit strcspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0xd05208 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd05270 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xd052e8 prev 0xd05168 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:273:15 strcspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0xd04f90 <col:24, col:36> col:36 __s 'const char *'
| |-ParmVarDecl 0xd05010 <col:41, col:53> col:53 __reject 'const char *'
| |-NoThrowAttr 0xd05398 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd053f0 <line:226:45>
| `-NonNullAttr 0xd05418 <line:293:44, /usr/include/string.h:274:49> 1 2
|-FunctionDecl 0xd055c8 <line:277:15> col:15 implicit strspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0xd05668 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd056d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xd05748 prev 0xd055c8 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:277:15 strspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0xd05470 <col:23, col:35> col:35 __s 'const char *'
| |-ParmVarDecl 0xd054f0 <col:40, col:52> col:52 __accept 'const char *'
| |-NoThrowAttr 0xd057f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd05850 <line:226:45>
| `-NonNullAttr 0xd05878 <line:293:44, /usr/include/string.h:278:49> 1 2
|-FunctionDecl 0xd05a30 <line:303:14> col:14 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0xd05ad0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd05b38 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xd05bb0 prev 0xd05a30 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:303:14 strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0xd058d0 <col:23, col:35> col:35 __s 'const char *'
| |-ParmVarDecl 0xd05950 <col:40, col:52> col:52 __accept 'const char *'
| |-NoThrowAttr 0xd05c60 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd05cb8 <line:226:45>
| `-NonNullAttr 0xd05ce0 <line:293:44, /usr/include/string.h:304:49> 1 2
|-FunctionDecl 0xd05e90 <line:330:14> col:14 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0xd05f50 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd05fb8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xd06030 prev 0xd05e90 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:330:14 strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0xd05d30 <col:22, col:34> col:34 __haystack 'const char *'
| |-ParmVarDecl 0xd05db0 <col:46, col:58> col:58 __needle 'const char *'
| |-NoThrowAttr 0xd060e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd06138 <line:226:45>
| `-NonNullAttr 0xd06160 <line:293:44, /usr/include/string.h:331:49> 1 2
|-FunctionDecl 0xd062f0 <line:336:14> col:14 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0xd06390 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0xd063f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xd06470 prev 0xd062f0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:336:14 strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0xd061b0 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0xd06230 <col:44, col:67> col:67 __delim 'const char *restrict'
| |-NoThrowAttr 0xd06520 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd06578 <line:293:44, /usr/include/string.h:337:27> 2
|-FunctionDecl 0xd06840 <line:341:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:341:14 __strtok_r 'char *(char *restrict, const char *restrict, char **restrict)' extern
| |-ParmVarDecl 0xd065d0 <col:26, col:43> col:43 __s 'char *restrict'
| |-ParmVarDecl 0xd06650 <line:342:5, col:28> col:28 __delim 'const char *restrict'
| |-ParmVarDecl 0xd066d0 <line:343:5, col:23> col:23 __save_ptr 'char **restrict'
| |-NoThrowAttr 0xd068f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd06950 <line:293:44, /usr/include/string.h:344:30> 2 3
|-FunctionDecl 0xd06b88 <line:346:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:346:14 strtok_r 'char *(char *restrict, const char *restrict, char **restrict)' extern
| |-ParmVarDecl 0xd069a0 <col:24, col:41> col:41 __s 'char *restrict'
| |-ParmVarDecl 0xd06a20 <col:46, col:69> col:69 __delim 'const char *restrict'
| |-ParmVarDecl 0xd06aa0 <line:347:10, col:28> col:28 __save_ptr 'char **restrict'
| |-NoThrowAttr 0xd06c40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd06c98 <line:293:44, /usr/include/string.h:348:30> 2 3
|-FunctionDecl 0xd06e08 <line:385:15> col:15 implicit strlen 'unsigned long (const char *)' extern
| `-ParmVarDecl 0xd06ea8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xd06f60 prev 0xd06e08 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:385:15 strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0xd06cf0 <col:23, col:35> col:35 __s 'const char *'
| |-NoThrowAttr 0xd07008 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd07060 <line:226:45>
| `-NonNullAttr 0xd07088 <line:293:44, /usr/include/string.h:386:46> 1
|-FunctionDecl 0xd07288 <line:391:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:391:15 strnlen 'size_t (const char *, size_t)' extern
| |-ParmVarDecl 0xd070e0 <col:24, col:36> col:36 __string 'const char *'
| |-ParmVarDecl 0xd07158 <col:46, col:53> col:53 __maxlen 'size_t':'unsigned long'
| |-NoThrowAttr 0xd07338 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd07390 <line:226:45>
| `-NonNullAttr 0xd073b8 <line:293:44, /usr/include/string.h:392:46> 1
|-FunctionDecl 0xd074e0 <line:397:14> col:14 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0xd07580 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0xd075f0 prev 0xd074e0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/string.h:397:14 strerror 'char *(int)' extern
| |-ParmVarDecl 0xd07410 <col:24, col:28> col:28 __errnum 'int'
| `-NoThrowAttr 0xd07698 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd07980 </usr/include/string.h:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:410:28 strerror_r 'int (int, char *, size_t)' extern
| |-ParmVarDecl 0xd07708 <line:411:8, col:12> col:12 __errnum 'int'
| |-ParmVarDecl 0xd07788 <col:22, col:28> col:28 __buf 'char *'
| |-ParmVarDecl 0xd07800 <col:35, col:42> col:42 __buflen 'size_t':'unsigned long'
| |-AsmLabelAttr 0xd07a20 <<scratch space>:39:1> "__xpg_strerror_r" IsLiteralLabel
| |-NoThrowAttr 0xd07ab0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd07ad8 <line:293:44, /usr/include/string.h:412:38> 2
|-FunctionDecl 0xd07cc0 <line:428:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/string.h:428:14 strerror_l 'char *(int, locale_t)' extern
| |-ParmVarDecl 0xd07b30 <col:26, col:30> col:30 __errnum 'int'
| |-ParmVarDecl 0xd07ba8 <col:40, col:49> col:49 __l 'locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0xd07d70 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd0a2b0 </usr/include/strings.h:34:12> col:12 implicit bcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0xd0a350 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0xd0a3b8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0xd0a420 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xd0a4a0 prev 0xd0a2b0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:34:12 bcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0xd07de0 <col:18, col:30> col:30 __s1 'const void *'
| |-ParmVarDecl 0xd07e60 <col:36, col:48> col:48 __s2 'const void *'
| |-ParmVarDecl 0xd07ed8 <col:54, col:61> col:61 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xd0a558 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd0a5b0 <line:226:45>
| `-NonNullAttr 0xd0a5d8 <line:293:44, /usr/include/strings.h:35:49> 1 2
|-FunctionDecl 0xd0a888 <line:38:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:38:13 bcopy 'void (const void *, void *, size_t)' extern
| |-ParmVarDecl 0xd0a630 <col:20, col:32> col:32 __src 'const void *'
| |-ParmVarDecl 0xd0a6b0 <col:39, col:45> col:45 __dest 'void *'
| |-ParmVarDecl 0xd0a728 <col:53, col:60> col:60 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xd0a940 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd0a998 <line:293:44, /usr/include/strings.h:39:27> 1 2
|-FunctionDecl 0xd0ab98 <line:42:13> col:13 implicit bzero 'void (void *, unsigned long)' extern
| |-ParmVarDecl 0xd0ac38 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0xd0aca0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xd0ad18 prev 0xd0ab98 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:42:13 bzero 'void (void *, unsigned long)' extern
| |-ParmVarDecl 0xd0a9f0 <col:20, col:26> col:26 __s 'void *'
| |-ParmVarDecl 0xd0aa68 <col:31, col:38> col:38 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xd0adc8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd0ae20 <line:293:44, /usr/include/strings.h:42:64> 1
|-FunctionDecl 0xd0afb0 <line:68:14> col:14 implicit index 'char *(const char *, int)' extern
| |-ParmVarDecl 0xd0b050 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd0b0b8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0xd0b130 prev 0xd0afb0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:68:14 index 'char *(const char *, int)' extern
| |-ParmVarDecl 0xd0ae70 <col:21, col:33> col:33 __s 'const char *'
| |-ParmVarDecl 0xd0aef0 <col:38, col:42> col:42 __c 'int'
| |-NoThrowAttr 0xd0b1e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd0b260 <line:226:45>
| `-NonNullAttr 0xd0b288 <line:293:44, /usr/include/strings.h:69:46> 1
|-FunctionDecl 0xd0b420 <line:96:14> col:14 implicit rindex 'char *(const char *, int)' extern
| |-ParmVarDecl 0xd0b4c0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd0b528 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0xd0b5a0 prev 0xd0b420 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:96:14 rindex 'char *(const char *, int)' extern
| |-ParmVarDecl 0xd0b2e0 <col:22, col:34> col:34 __s 'const char *'
| |-ParmVarDecl 0xd0b360 <col:39, col:43> col:43 __c 'int'
| |-NoThrowAttr 0xd0b650 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd0b6a8 <line:226:45>
| `-NonNullAttr 0xd0b6d0 <line:293:44, /usr/include/strings.h:97:46> 1
|-FunctionDecl 0xd0b7b8 <line:104:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:233:56> /usr/include/strings.h:104:12 ffs 'int (int)' extern
| |-ParmVarDecl 0xd0b720 <col:17, col:21> col:21 __i 'int'
| |-NoThrowAttr 0xd0b860 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0xd0b8b8 <line:233:46>
|-FunctionDecl 0xd0b9c0 </usr/include/strings.h:110:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:233:56> /usr/include/strings.h:110:12 ffsl 'int (long)' extern
| |-ParmVarDecl 0xd0b8f8 <col:18, col:27> col:27 __l 'long'
| |-NoThrowAttr 0xd0ba68 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0xd0bac0 <line:233:46>
|-FunctionDecl 0xd0bbd0 </usr/include/strings.h:111:15, /usr/include/x86_64-linux-gnu/sys/cdefs.h:233:56> /usr/include/strings.h:111:26 ffsll 'int (long long)' extern
| |-ParmVarDecl 0xd0bb00 <col:33, col:47> col:47 __ll 'long long'
| |-NoThrowAttr 0xd0bc78 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0xd0bcd0 <line:233:46>
|-FunctionDecl 0xd0be70 </usr/include/strings.h:116:12> col:12 implicit strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0xd0bf10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd0bf78 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xd0bff0 prev 0xd0be70 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:116:12 strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0xd0bd10 <col:24, col:36> col:36 __s1 'const char *'
| |-ParmVarDecl 0xd0bd90 <col:42, col:54> col:54 __s2 'const char *'
| |-NoThrowAttr 0xd0c0a0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd0c0f8 <line:226:45>
| `-NonNullAttr 0xd0c120 <line:293:44, /usr/include/strings.h:117:49> 1 2
|-FunctionDecl 0xd0c368 <line:120:12> col:12 implicit strncasecmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xd0c408 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0xd0c470 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd0c4d8 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xd0c558 prev 0xd0c368 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:120:12 strncasecmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xd0c170 <col:25, col:37> col:37 __s1 'const char *'
| |-ParmVarDecl 0xd0c1f0 <col:43, col:55> col:55 __s2 'const char *'
| |-ParmVarDecl 0xd0c280 <col:61, col:68> col:68 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xd0c610 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd0c668 <line:226:45>
| `-NonNullAttr 0xd0c690 <line:293:44, /usr/include/strings.h:121:49> 1 2
|-FunctionDecl 0xd0c8e0 <line:128:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:128:12 strcasecmp_l 'int (const char *, const char *, locale_t)' extern
| |-ParmVarDecl 0xd0c6e0 <col:26, col:38> col:38 __s1 'const char *'
| |-ParmVarDecl 0xd0c760 <col:44, col:56> col:56 __s2 'const char *'
| |-ParmVarDecl 0xd0c7d8 <col:62, col:71> col:71 __loc 'locale_t':'struct __locale_struct *'
| |-NoThrowAttr 0xd0c998 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd0c9f0 <line:226:45>
| `-NonNullAttr 0xd0ca18 <line:293:44, /usr/include/strings.h:129:52> 1 2 3
|-FunctionDecl 0xd0cd90 <line:133:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:133:12 strncasecmp_l 'int (const char *, const char *, size_t, locale_t)' extern
| |-ParmVarDecl 0xd0ca78 <col:27, col:39> col:39 __s1 'const char *'
| |-ParmVarDecl 0xd0caf8 <col:45, col:57> col:57 __s2 'const char *'
| |-ParmVarDecl 0xd0cb70 <line:134:6, col:13> col:13 __n 'size_t':'unsigned long'
| |-ParmVarDecl 0xd0cbe8 <col:18, col:27> col:27 __loc 'locale_t':'struct __locale_struct *'
| |-NoThrowAttr 0xd0ce50 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd0cea8 <line:226:45>
| `-NonNullAttr 0xd0ced0 <line:293:44, /usr/include/strings.h:135:52> 1 2 4
|-FunctionDecl 0xd0d058 </usr/include/string.h:436:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:436:13 explicit_bzero 'void (void *, size_t)' extern
| |-ParmVarDecl 0xd0cf28 <col:29, col:35> col:35 __s 'void *'
| |-ParmVarDecl 0xd0cfa0 <col:40, col:47> col:47 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xd0d108 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd0d160 <line:293:44, /usr/include/string.h:436:73> 1
|-FunctionDecl 0xd0d3e0 <line:440:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:440:14 strsep 'char *(char **restrict, const char *restrict)' extern
| |-ParmVarDecl 0xd0d1b0 <col:22, col:40> col:40 __stringp 'char **restrict'
| |-ParmVarDecl 0xd0d280 <line:441:8, col:31> col:31 __delim 'const char *restrict'
| |-NoThrowAttr 0xd0d490 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd0d4e8 <line:293:44, /usr/include/string.h:442:30> 1 2
|-FunctionDecl 0xd0d5d8 <line:447:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/string.h:447:14 strsignal 'char *(int)' extern
| |-ParmVarDecl 0xd0d540 <col:25, col:29> col:29 __sig 'int'
| `-NoThrowAttr 0xd0d680 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd0d850 </usr/include/string.h:450:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:450:14 __stpcpy 'char *(char *restrict, const char *restrict)' extern
| |-ParmVarDecl 0xd0d6f0 <col:24, col:41> col:41 __dest 'char *restrict'
| |-ParmVarDecl 0xd0d770 <col:49, col:72> col:72 __src 'const char *restrict'
| |-NoThrowAttr 0xd0d900 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd0d958 <line:293:44, /usr/include/string.h:451:30> 1 2
|-FunctionDecl 0xd0db10 <line:452:14> col:14 implicit stpcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0xd0dbb0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0xd0dc18 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xd0dc90 prev 0xd0db10 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:452:14 stpcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0xd0d9b0 <col:22, col:39> col:39 __dest 'char *restrict'
| |-ParmVarDecl 0xd0da30 <col:47, col:70> col:70 __src 'const char *restrict'
| |-NoThrowAttr 0xd0dd40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd0dd98 <line:293:44, /usr/include/string.h:453:30> 1 2
|-FunctionDecl 0xd0dfd0 <line:457:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:457:14 __stpncpy 'char *(char *restrict, const char *restrict, size_t)' extern
| |-ParmVarDecl 0xd0ddf0 <col:25, col:42> col:42 __dest 'char *restrict'
| |-ParmVarDecl 0xd0de70 <line:458:4, col:27> col:27 __src 'const char *restrict'
| |-ParmVarDecl 0xd0dee8 <col:34, col:41> col:41 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xd0e088 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd0e0e0 <line:293:44, /usr/include/string.h:459:30> 1 2
|-FunctionDecl 0xd0e378 <line:460:14> col:14 implicit stpncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xd0e418 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0xd0e480 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd0e4e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xd0e568 prev 0xd0e378 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:460:14 stpncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xd0e130 <col:23, col:40> col:40 __dest 'char *restrict'
| |-ParmVarDecl 0xd0e1b0 <line:461:9, col:32> col:32 __src 'const char *restrict'
| |-ParmVarDecl 0xd0e290 <col:39, col:46> col:46 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xd0e620 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd0e678 <line:293:44, /usr/include/string.h:462:30> 1 2
|-TypedefDecl 0xd0e6d0 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:74:1, col:24> col:24 referenced wchar_t 'int'
| `-BuiltinType 0xc20e40 'int'
|-EnumDecl 0xd0e728 </usr/include/x86_64-linux-gnu/bits/waitflags.h:52:9, line:57:1> line:52:9
| |-EnumConstantDecl 0xd0e7f0 <line:54:3> col:3 P_ALL 'int'
| |-EnumConstantDecl 0xd0e840 <line:55:3> col:3 P_PID 'int'
| `-EnumConstantDecl 0xd0e890 <line:56:3> col:3 P_PGID 'int'
|-TypedefDecl 0xd0e938 <line:52:1, line:57:3> col:3 idtype_t 'enum idtype_t':'idtype_t'
| `-ElaboratedType 0xd0e8e0 'enum idtype_t' sugar
|   `-EnumType 0xd0e7d0 'idtype_t'
|     `-Enum 0xd0e728 ''
|-TypedefDecl 0xd0e9c0 </usr/include/x86_64-linux-gnu/bits/floatn-common.h:214:1, col:15> col:15 _Float32 'float'
| `-BuiltinType 0xc20f40 'float'
|-TypedefDecl 0xd0ea30 <line:251:1, col:16> col:16 _Float64 'double'
| `-BuiltinType 0xc20f60 'double'
|-TypedefDecl 0xd0eaa0 <line:268:1, col:16> col:16 _Float32x 'double'
| `-BuiltinType 0xc20f60 'double'
|-TypedefDecl 0xd0eb10 <line:285:1, col:21> col:21 _Float64x 'long double'
| `-BuiltinType 0xc20f80 'long double'
|-RecordDecl 0xd0eb68 </usr/include/stdlib.h:58:9, line:62:3> line:58:9 struct definition
| |-FieldDecl 0xd0ec28 <line:60:5, col:9> col:9 quot 'int'
| `-FieldDecl 0xd0ec90 <line:61:5, col:9> col:9 rem 'int'
|-TypedefDecl 0xd0ed38 <line:58:1, line:62:5> col:5 referenced div_t 'struct div_t':'div_t'
| `-ElaboratedType 0xd0ece0 'struct div_t' sugar
|   `-RecordType 0xd0ebf0 'div_t'
|     `-Record 0xd0eb68 ''
|-RecordDecl 0xd0eda8 <line:66:9, line:70:3> line:66:9 struct definition
| |-FieldDecl 0xd0ee68 <line:68:5, col:14> col:14 quot 'long'
| `-FieldDecl 0xd0eed0 <line:69:5, col:14> col:14 rem 'long'
|-TypedefDecl 0xd0ef78 <line:66:1, line:70:5> col:5 referenced ldiv_t 'struct ldiv_t':'ldiv_t'
| `-ElaboratedType 0xd0ef20 'struct ldiv_t' sugar
|   `-RecordType 0xd0ee30 'ldiv_t'
|     `-Record 0xd0eda8 ''
|-RecordDecl 0xd0efe8 <line:76:23, line:80:3> line:76:23 struct definition
| |-FieldDecl 0xd0f0a8 <line:78:5, col:19> col:19 quot 'long long'
| `-FieldDecl 0xd0f110 <line:79:5, col:19> col:19 rem 'long long'
|-TypedefDecl 0xd0f1b8 <line:76:15, line:80:5> col:5 referenced lldiv_t 'struct lldiv_t':'lldiv_t'
| `-ElaboratedType 0xd0f160 'struct lldiv_t' sugar
|   `-RecordType 0xd0f070 'lldiv_t'
|     `-Record 0xd0efe8 ''
|-FunctionDecl 0xd23438 <line:97:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:97:15 __ctype_get_mb_cur_max 'size_t (void)' extern
| `-NoThrowAttr 0xd234d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd23630 </usr/include/stdlib.h:101:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:101:15 atof 'double (const char *)' extern
| |-ParmVarDecl 0xd23548 <col:21, col:33> col:33 __nptr 'const char *'
| |-NoThrowAttr 0xd236d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd23730 <line:226:45>
| `-NonNullAttr 0xd23758 <line:293:44, /usr/include/stdlib.h:102:46> 1
|-FunctionDecl 0xd23868 <line:104:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:104:12 atoi 'int (const char *)' extern
| |-ParmVarDecl 0xd237b0 <col:18, col:30> col:30 __nptr 'const char *'
| |-NoThrowAttr 0xd23910 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd23968 <line:226:45>
| `-NonNullAttr 0xd23990 <line:293:44, /usr/include/stdlib.h:105:46> 1
|-FunctionDecl 0xd23ad0 <line:107:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:107:17 atol 'long (const char *)' extern
| |-ParmVarDecl 0xd239e0 <col:23, col:35> col:35 __nptr 'const char *'
| |-NoThrowAttr 0xd23b78 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd23bd0 <line:226:45>
| `-NonNullAttr 0xd23bf8 <line:293:44, /usr/include/stdlib.h:108:46> 1
|-FunctionDecl 0xd23d40 <line:112:15, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:112:36 atoll 'long long (const char *)' extern
| |-ParmVarDecl 0xd23c50 <col:43, col:55> col:55 __nptr 'const char *'
| |-NoThrowAttr 0xd23de8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xd23e40 <line:226:45>
| `-NonNullAttr 0xd23e68 <line:293:44, /usr/include/stdlib.h:113:46> 1
|-FunctionDecl 0xd24080 <line:117:15> col:15 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0xd24120 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd24188 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0xd24200 prev 0xd24080 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:117:15 strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0xd23ec0 <col:23, col:46> col:46 __nptr 'const char *restrict'
| |-ParmVarDecl 0xd23f40 <line:118:9, col:27> col:27 __endptr 'char **restrict'
| |-NoThrowAttr 0xd242b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd24308 <line:293:44, /usr/include/stdlib.h:119:27> 1
|-FunctionDecl 0xd24530 <line:123:14> col:14 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0xd245d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd24638 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0xd246b0 prev 0xd24530 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:123:14 strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0xd24378 <col:22, col:45> col:45 __nptr 'const char *restrict'
| |-ParmVarDecl 0xd243f8 <line:124:8, col:26> col:26 __endptr 'char **restrict'
| |-NoThrowAttr 0xd24760 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd247b8 <line:293:44, /usr/include/stdlib.h:124:57> 1
|-FunctionDecl 0xd249d0 <line:126:20> col:20 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0xd24a70 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xd24ad8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0xd24b50 prev 0xd249d0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:126:20 strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0xd24810 <col:29, col:52> col:52 __nptr 'const char *restrict'
| |-ParmVarDecl 0xd24890 <line:127:8, col:26> col:26 __endptr 'char **restrict'
| |-NoThrowAttr 0xd24c00 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd24c58 <line:293:44, /usr/include/stdlib.h:128:27> 1
|-FunctionDecl 0xd24f00 <line:176:17> col:17 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0xd24fa0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0xd25008 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0xd25070 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0xd250f0 prev 0xd24f00 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:176:17 strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0xd24cb0 <col:25, col:48> col:48 __nptr 'const char *restrict'
| |-ParmVarDecl 0xd24d30 <line:177:4, col:22> col:22 __endptr 'char **restrict'
| |-ParmVarDecl 0xd24db0 <col:32, col:36> col:36 __base 'int'
| |-NoThrowAttr 0xd251a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd25200 <line:293:44, /usr/include/stdlib.h:178:27> 1
|-FunctionDecl 0xcee0c0 <line:180:26> col:26 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0xcee160 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0xcee1c8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0xcee230 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0xcee2b0 prev 0xcee0c0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:180:26 strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0xd25250 <col:35, col:58> col:58 __nptr 'const char *restrict'
| |-ParmVarDecl 0xd252d0 <line:181:7, col:25> col:25 __endptr 'char **restrict'
| |-ParmVarDecl 0xcedf70 <col:35, col:39> col:39 __base 'int'
| |-NoThrowAttr 0xcee368 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xcee3c0 <line:293:44, /usr/include/stdlib.h:182:27> 1
|-FunctionDecl 0xcee660 <line:187:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:187:22 strtoq 'long long (const char *restrict, char **restrict, int)' extern
| |-ParmVarDecl 0xcee410 <col:30, col:53> col:53 __nptr 'const char *restrict'
| |-ParmVarDecl 0xcee490 <line:188:9, col:27> col:27 __endptr 'char **restrict'
| |-ParmVarDecl 0xcee510 <col:37, col:41> col:41 __base 'int'
| |-NoThrowAttr 0xcee718 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xcee770 <line:293:44, /usr/include/stdlib.h:189:27> 1
|-FunctionDecl 0xceea10 <line:192:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:192:31 strtouq 'unsigned long long (const char *restrict, char **restrict, int)' extern
| |-ParmVarDecl 0xcee7c0 <col:40, col:63> col:63 __nptr 'const char *restrict'
| |-ParmVarDecl 0xcee840 <line:193:12, col:30> col:30 __endptr 'char **restrict'
| |-ParmVarDecl 0xcee8c0 <col:40, col:44> col:44 __base 'int'
| |-NoThrowAttr 0xceeac8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xceeb20 <line:293:44, /usr/include/stdlib.h:194:27> 1
|-FunctionDecl 0xceed38 <line:200:22> col:22 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0xceedd8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0xceee40 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0xceeea8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0xceef80 prev 0xceed38 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:200:22 strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0xceeb70 <col:31, col:54> col:54 __nptr 'const char *restrict'
| |-ParmVarDecl 0xceebf0 <line:201:10, col:28> col:28 __endptr 'char **restrict'
| |-ParmVarDecl 0xceec70 <col:38, col:42> col:42 __base 'int'
| |-NoThrowAttr 0xcef038 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xcef090 <line:293:44, /usr/include/stdlib.h:202:27> 1
|-FunctionDecl 0xcef2a8 <line:205:31> col:31 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0xcef348 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0xcef3b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0xcef418 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0xcef498 prev 0xcef2a8 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:205:31 strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0xcef0e0 <col:41, col:64> col:64 __nptr 'const char *restrict'
| |-ParmVarDecl 0xcef160 <line:206:6, col:24> col:24 __endptr 'char **restrict'
| |-ParmVarDecl 0xcef1e0 <col:34, col:38> col:38 __base 'int'
| |-NoThrowAttr 0xcef550 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xcef5a8 <line:293:44, /usr/include/stdlib.h:207:27> 1
|-FunctionDecl 0xcef6d0 <line:385:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:385:14 l64a 'char *(long)' extern
| |-ParmVarDecl 0xcef600 <col:20, col:29> col:29 __n 'long'
| `-NoThrowAttr 0xcef778 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xcef8a0 </usr/include/stdlib.h:388:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:388:17 a64l 'long (const char *)' extern
| |-ParmVarDecl 0xcef7e8 <col:23, col:35> col:35 __s 'const char *'
| |-NoThrowAttr 0xcef948 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xcef9a0 <line:226:45>
| `-NonNullAttr 0xcef9c8 <line:293:44, /usr/include/stdlib.h:389:46> 1
|-TypedefDecl 0xcefa40 </usr/include/x86_64-linux-gnu/sys/types.h:33:1, col:18> col:18 u_char '__u_char':'unsigned char'
| `-TypedefType 0xcefa10 '__u_char' sugar
|   |-Typedef 0xcae978 '__u_char'
|   `-BuiltinType 0xc20ea0 'unsigned char'
|-TypedefDecl 0xcefad0 <line:34:1, col:19> col:19 u_short '__u_short':'unsigned short'
| `-TypedefType 0xcefaa0 '__u_short' sugar
|   |-Typedef 0xcae9e8 '__u_short'
|   `-BuiltinType 0xc20ec0 'unsigned short'
|-TypedefDecl 0xcefb60 <line:35:1, col:17> col:17 u_int '__u_int':'unsigned int'
| `-TypedefType 0xcefb30 '__u_int' sugar
|   |-Typedef 0xcaea58 '__u_int'
|   `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xcefbf0 <line:36:1, col:18> col:18 u_long '__u_long':'unsigned long'
| `-TypedefType 0xcefbc0 '__u_long' sugar
|   |-Typedef 0xcaeac8 '__u_long'
|   `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xcefc80 <line:37:1, col:18> col:18 quad_t '__quad_t':'long'
| `-TypedefType 0xcefc50 '__quad_t' sugar
|   |-Typedef 0xcaf330 '__quad_t'
|   `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xcefd10 <line:38:1, col:20> col:20 u_quad_t '__u_quad_t':'unsigned long'
| `-TypedefType 0xcefce0 '__u_quad_t' sugar
|   |-Typedef 0xccf120 '__u_quad_t'
|   `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xcefda0 <line:39:1, col:18> col:18 fsid_t '__fsid_t':'__fsid_t'
| `-TypedefType 0xcefd70 '__fsid_t' sugar
|   |-Typedef 0xccf8a8 '__fsid_t'
|   `-ElaboratedType 0xccf850 'struct __fsid_t' sugar
|     `-RecordType 0xccf740 '__fsid_t'
|       `-Record 0xccf6b8 ''
|-TypedefDecl 0xcefe30 <line:42:1, col:18> col:18 loff_t '__loff_t':'long'
| `-TypedefType 0xcefe00 '__loff_t' sugar
|   |-Typedef 0xcd82d0 '__loff_t'
|   `-TypedefType 0xcd82a0 '__off64_t' sugar
|     |-Typedef 0xccf5f0 '__off64_t'
|     `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xcefec0 <line:47:1, col:17> col:17 ino_t '__ino_t':'unsigned long'
| `-TypedefType 0xcefe90 '__ino_t' sugar
|   |-Typedef 0xccf3c0 '__ino_t'
|   `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xcf1640 <line:59:1, col:17> col:17 dev_t '__dev_t':'unsigned long'
| `-TypedefType 0xceff20 '__dev_t' sugar
|   |-Typedef 0xccf270 '__dev_t'
|   `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xcf16d0 <line:64:1, col:17> col:17 gid_t '__gid_t':'unsigned int'
| `-TypedefType 0xcf16a0 '__gid_t' sugar
|   |-Typedef 0xccf350 '__gid_t'
|   `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xcf1760 <line:69:1, col:18> col:18 mode_t '__mode_t':'unsigned int'
| `-TypedefType 0xcf1730 '__mode_t' sugar
|   |-Typedef 0xccf4a0 '__mode_t'
|   `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xcf17f0 <line:74:1, col:19> col:19 nlink_t '__nlink_t':'unsigned long'
| `-TypedefType 0xcf17c0 '__nlink_t' sugar
|   |-Typedef 0xccf510 '__nlink_t'
|   `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xcf1880 <line:79:1, col:17> col:17 uid_t '__uid_t':'unsigned int'
| `-TypedefType 0xcf1850 '__uid_t' sugar
|   |-Typedef 0xccf2e0 '__uid_t'
|   `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xcf1910 <line:97:1, col:17> col:17 pid_t '__pid_t':'int'
| `-TypedefType 0xcf18e0 '__pid_t' sugar
|   |-Typedef 0xccf660 '__pid_t'
|   `-BuiltinType 0xc20e40 'int'
|-TypedefDecl 0xcf19a0 <line:103:1, col:16> col:16 id_t '__id_t':'unsigned int'
| `-TypedefType 0xcf1970 '__id_t' sugar
|   |-Typedef 0xccfa80 '__id_t'
|   `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xcf1a30 <line:114:1, col:19> col:19 daddr_t '__daddr_t':'int'
| `-TypedefType 0xcf1a00 '__daddr_t' sugar
|   |-Typedef 0xccfc40 '__daddr_t'
|   `-BuiltinType 0xc20e40 'int'
|-TypedefDecl 0xcf1ac0 <line:115:1, col:19> col:19 caddr_t '__caddr_t':'char *'
| `-TypedefType 0xcf1a90 '__caddr_t' sugar
|   |-Typedef 0xcd8340 '__caddr_t'
|   `-PointerType 0xc219b0 'char *'
|     `-BuiltinType 0xc20de0 'char'
|-TypedefDecl 0xcf1b50 <line:121:1, col:17> col:17 key_t '__key_t':'int'
| `-TypedefType 0xcf1b20 '__key_t' sugar
|   |-Typedef 0xccfcb0 '__key_t'
|   `-BuiltinType 0xc20e40 'int'
|-TypedefDecl 0xcf1be0 </usr/include/x86_64-linux-gnu/bits/types/clock_t.h:7:1, col:19> col:19 clock_t '__clock_t':'long'
| `-TypedefType 0xcf1bb0 '__clock_t' sugar
|   |-Typedef 0xccf930 '__clock_t'
|   `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xcf1c70 </usr/include/x86_64-linux-gnu/bits/types/clockid_t.h:7:1, col:21> col:21 clockid_t '__clockid_t':'int'
| `-TypedefType 0xcf1c40 '__clockid_t' sugar
|   |-Typedef 0xccfd20 '__clockid_t'
|   `-BuiltinType 0xc20e40 'int'
|-TypedefDecl 0xcf1d00 </usr/include/x86_64-linux-gnu/bits/types/time_t.h:7:1, col:18> col:18 time_t '__time_t':'long'
| `-TypedefType 0xcf1cd0 '__time_t' sugar
|   |-Typedef 0xccfaf0 '__time_t'
|   `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xcf1d90 </usr/include/x86_64-linux-gnu/bits/types/timer_t.h:7:1, col:19> col:19 timer_t '__timer_t':'void *'
| `-TypedefType 0xcf1d60 '__timer_t' sugar
|   |-Typedef 0xccfd90 '__timer_t'
|   `-PointerType 0xc21560 'void *'
|     `-BuiltinType 0xc20da0 'void'
|-TypedefDecl 0xcf1e00 </usr/include/x86_64-linux-gnu/sys/types.h:148:1, col:27> col:27 ulong 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xcf1e70 <line:149:1, col:28> col:28 ushort 'unsigned short'
| `-BuiltinType 0xc20ec0 'unsigned short'
|-TypedefDecl 0xcf1ee0 <line:150:1, col:22> col:22 uint 'unsigned int'
| `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xcf1f48 </usr/include/x86_64-linux-gnu/bits/stdint-intn.h:24:1, col:18> col:18 int8_t '__int8_t':'signed char'
| `-TypedefType 0xcaeea0 '__int8_t' sugar
|   |-Typedef 0xcaeb38 '__int8_t'
|   `-BuiltinType 0xc20e00 'signed char'
|-TypedefDecl 0xcf1fb0 <line:25:1, col:19> col:19 int16_t '__int16_t':'short'
| `-TypedefType 0xcaefc0 '__int16_t' sugar
|   |-Typedef 0xcaec18 '__int16_t'
|   `-BuiltinType 0xc20e20 'short'
|-TypedefDecl 0xcf2018 <line:26:1, col:19> col:19 referenced int32_t '__int32_t':'int'
| `-TypedefType 0xcaf0e0 '__int32_t' sugar
|   |-Typedef 0xcaecf8 '__int32_t'
|   `-BuiltinType 0xc20e40 'int'
|-TypedefDecl 0xcf2080 <line:27:1, col:19> col:19 int64_t '__int64_t':'long'
| `-TypedefType 0xcaf200 '__int64_t' sugar
|   |-Typedef 0xcaedd8 '__int64_t'
|   `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xcf20e8 </usr/include/x86_64-linux-gnu/sys/types.h:158:1, col:19> col:19 u_int8_t '__uint8_t':'unsigned char'
| `-TypedefType 0xcaef30 '__uint8_t' sugar
|   |-Typedef 0xcaeba8 '__uint8_t'
|   `-BuiltinType 0xc20ea0 'unsigned char'
|-TypedefDecl 0xcf2150 <line:159:1, col:20> col:20 u_int16_t '__uint16_t':'unsigned short'
| `-TypedefType 0xcaf050 '__uint16_t' sugar
|   |-Typedef 0xcaec88 '__uint16_t'
|   `-BuiltinType 0xc20ec0 'unsigned short'
|-TypedefDecl 0xcf21b8 <line:160:1, col:20> col:20 u_int32_t '__uint32_t':'unsigned int'
| `-TypedefType 0xcaf170 '__uint32_t' sugar
|   |-Typedef 0xcaed68 '__uint32_t'
|   `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xcf2220 <line:161:1, col:20> col:20 u_int64_t '__uint64_t':'unsigned long'
| `-TypedefType 0xcaf290 '__uint64_t' sugar
|   |-Typedef 0xcaee48 '__uint64_t'
|   `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xcf22a0 <line:164:1, col:13> col:13 register_t 'long'
| |-BuiltinType 0xc20e60 'long'
| `-ModeAttr 0xcf2308 <col:40, col:58> __word__
|-FunctionDecl 0xcf2468 </usr/include/x86_64-linux-gnu/bits/byteswap.h:33:1, line:41:1> line:34:1 __bswap_16 '__uint16_t (__uint16_t)' static inline
| |-ParmVarDecl 0xcf2378 <col:13, col:24> col:24 used __bsx '__uint16_t':'unsigned short'
| `-CompoundStmt 0xd3af48 <line:35:1, line:41:1>
|   `-ReturnStmt 0xd3af38 <line:39:3, line:31:60>
|     `-ParenExpr 0xd3af18 <col:3, col:60> '__uint16_t':'unsigned short'
|       `-CStyleCastExpr 0xd3aef0 <col:4, col:59> '__uint16_t':'unsigned short' <IntegralCast>
|         `-ParenExpr 0xd3aed0 <col:17, col:59> 'int'
|           `-BinaryOperator 0xd3ae80 <col:18, col:58> 'int' '|'
|             |-ParenExpr 0xcf2620 <col:18, col:36> 'int'
|             | `-BinaryOperator 0xcf2600 <col:19, col:32> 'int' '&'
|             |   |-ParenExpr 0xcf25c0 <col:19, col:28> 'int'
|             |   | `-BinaryOperator 0xcf25a0 <col:20, col:27> 'int' '>>'
|             |   |   |-ImplicitCastExpr 0xcf2588 <col:20, col:22> 'int' <IntegralCast>
|             |   |   | `-ImplicitCastExpr 0xcf2570 <col:20, col:22> '__uint16_t':'unsigned short' <LValueToRValue>
|             |   |   |   `-ParenExpr 0xcf2530 <col:20, col:22> '__uint16_t':'unsigned short' lvalue
|             |   |   |     `-DeclRefExpr 0xcf2510 <line:39:31> '__uint16_t':'unsigned short' lvalue ParmVar 0xcf2378 '__bsx' '__uint16_t':'unsigned short'
|             |   |   `-IntegerLiteral 0xcf2550 <line:31:27> 'int' 8
|             |   `-IntegerLiteral 0xcf25e0 <col:32> 'int' 255
|             `-ParenExpr 0xd3ae60 <col:40, col:58> 'int'
|               `-BinaryOperator 0xd3ae40 <col:41, col:57> 'int' '<<'
|                 |-ParenExpr 0xd3ae00 <col:41, col:52> 'int'
|                 | `-BinaryOperator 0xd3ade0 <col:42, col:48> 'int' '&'
|                 |   |-ImplicitCastExpr 0xd3adc8 <col:42, col:44> 'int' <IntegralCast>
|                 |   | `-ImplicitCastExpr 0xd3adb0 <col:42, col:44> '__uint16_t':'unsigned short' <LValueToRValue>
|                 |   |   `-ParenExpr 0xd3ad70 <col:42, col:44> '__uint16_t':'unsigned short' lvalue
|                 |   |     `-DeclRefExpr 0xd3ad50 <line:39:31> '__uint16_t':'unsigned short' lvalue ParmVar 0xcf2378 '__bsx' '__uint16_t':'unsigned short'
|                 |   `-IntegerLiteral 0xd3ad90 <line:31:48> 'int' 255
|                 `-IntegerLiteral 0xd3ae20 <col:57> 'int' 8
|-FunctionDecl 0xd3b038 <line:48:1, line:56:1> line:49:1 __bswap_32 '__uint32_t (__uint32_t)' static inline
| |-ParmVarDecl 0xd3af70 <col:13, col:24> col:24 used __bsx '__uint32_t':'unsigned int'
| `-CompoundStmt 0xd3b5d0 <line:50:1, line:56:1>
|   `-ReturnStmt 0xd3b5c0 <line:54:3, line:46:62>
|     `-ParenExpr 0xd3b5a0 <line:45:3, line:46:62> 'unsigned int'
|       `-BinaryOperator 0xd3b580 <line:45:4, line:46:61> 'unsigned int' '|'
|         |-BinaryOperator 0xd3b448 <line:45:4, line:46:31> 'unsigned int' '|'
|         | |-BinaryOperator 0xd3b310 <line:45:4, col:59> 'unsigned int' '|'
|         | | |-ParenExpr 0xd3b1d8 <col:4, col:30> 'unsigned int'
|         | | | `-BinaryOperator 0xd3b1b8 <col:5, col:28> 'unsigned int' '>>'
|         | | |   |-ParenExpr 0xd3b178 <col:5, col:23> 'unsigned int'
|         | | |   | `-BinaryOperator 0xd3b158 <col:6, col:12> 'unsigned int' '&'
|         | | |   |   |-ImplicitCastExpr 0xd3b140 <col:6, col:8> '__uint32_t':'unsigned int' <LValueToRValue>
|         | | |   |   | `-ParenExpr 0xd3b100 <col:6, col:8> '__uint32_t':'unsigned int' lvalue
|         | | |   |   |   `-DeclRefExpr 0xd3b0e0 <line:54:31> '__uint32_t':'unsigned int' lvalue ParmVar 0xd3af70 '__bsx' '__uint32_t':'unsigned int'
|         | | |   |   `-IntegerLiteral 0xd3b120 <line:45:12> 'unsigned int' 4278190080
|         | | |   `-IntegerLiteral 0xd3b198 <col:28> 'int' 24
|         | | `-ParenExpr 0xd3b2f0 <col:34, col:59> 'unsigned int'
|         | |   `-BinaryOperator 0xd3b2d0 <col:35, col:58> 'unsigned int' '>>'
|         | |     |-ParenExpr 0xd3b290 <col:35, col:53> 'unsigned int'
|         | |     | `-BinaryOperator 0xd3b270 <col:36, col:42> 'unsigned int' '&'
|         | |     |   |-ImplicitCastExpr 0xd3b258 <col:36, col:38> '__uint32_t':'unsigned int' <LValueToRValue>
|         | |     |   | `-ParenExpr 0xd3b218 <col:36, col:38> '__uint32_t':'unsigned int' lvalue
|         | |     |   |   `-DeclRefExpr 0xd3b1f8 <line:54:31> '__uint32_t':'unsigned int' lvalue ParmVar 0xd3af70 '__bsx' '__uint32_t':'unsigned int'
|         | |     |   `-IntegerLiteral 0xd3b238 <line:45:42> 'unsigned int' 16711680
|         | |     `-IntegerLiteral 0xd3b2b0 <col:58> 'int' 8
|         | `-ParenExpr 0xd3b428 <line:46:6, col:31> 'unsigned int'
|         |   `-BinaryOperator 0xd3b408 <col:7, col:30> 'unsigned int' '<<'
|         |     |-ParenExpr 0xd3b3c8 <col:7, col:25> 'unsigned int'
|         |     | `-BinaryOperator 0xd3b3a8 <col:8, col:14> 'unsigned int' '&'
|         |     |   |-ImplicitCastExpr 0xd3b390 <col:8, col:10> '__uint32_t':'unsigned int' <LValueToRValue>
|         |     |   | `-ParenExpr 0xd3b350 <col:8, col:10> '__uint32_t':'unsigned int' lvalue
|         |     |   |   `-DeclRefExpr 0xd3b330 <line:54:31> '__uint32_t':'unsigned int' lvalue ParmVar 0xd3af70 '__bsx' '__uint32_t':'unsigned int'
|         |     |   `-IntegerLiteral 0xd3b370 <line:46:14> 'unsigned int' 65280
|         |     `-IntegerLiteral 0xd3b3e8 <col:30> 'int' 8
|         `-ParenExpr 0xd3b560 <col:35, col:61> 'unsigned int'
|           `-BinaryOperator 0xd3b540 <col:36, col:59> 'unsigned int' '<<'
|             |-ParenExpr 0xd3b500 <col:36, col:54> 'unsigned int'
|             | `-BinaryOperator 0xd3b4e0 <col:37, col:43> 'unsigned int' '&'
|             |   |-ImplicitCastExpr 0xd3b4c8 <col:37, col:39> '__uint32_t':'unsigned int' <LValueToRValue>
|             |   | `-ParenExpr 0xd3b488 <col:37, col:39> '__uint32_t':'unsigned int' lvalue
|             |   |   `-DeclRefExpr 0xd3b468 <line:54:31> '__uint32_t':'unsigned int' lvalue ParmVar 0xd3af70 '__bsx' '__uint32_t':'unsigned int'
|             |   `-IntegerLiteral 0xd3b4a8 <line:46:43> 'unsigned int' 255
|             `-IntegerLiteral 0xd3b520 <col:59> 'int' 24
|-FunctionDecl 0xd3b6e8 <line:69:15, line:77:1> line:70:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0xd3b5f8 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0xd3f338 <line:71:1, line:77:1>
|   `-ReturnStmt 0xd3f328 <line:75:3, line:67:43>
|     `-ImplicitCastExpr 0xd3f310 <line:60:3, line:67:43> '__uint64_t':'unsigned long' <IntegralCast>
|       `-ParenExpr 0xd3f2f0 <line:60:3, line:67:43> 'unsigned long long'
|         `-BinaryOperator 0xd3f2d0 <line:60:4, line:67:42> 'unsigned long long' '|'
|           |-BinaryOperator 0xd3f180 <line:60:4, line:66:42> 'unsigned long long' '|'
|           | |-BinaryOperator 0xd3f030 <line:60:4, line:65:42> 'unsigned long long' '|'
|           | | |-BinaryOperator 0xd3eee0 <line:60:4, line:64:41> 'unsigned long long' '|'
|           | | | |-BinaryOperator 0xd3bc90 <line:60:4, line:63:41> 'unsigned long long' '|'
|           | | | | |-BinaryOperator 0xd3bb40 <line:60:4, line:62:42> 'unsigned long long' '|'
|           | | | | | |-BinaryOperator 0xd3b9f0 <line:60:4, line:61:42> 'unsigned long long' '|'
|           | | | | | | |-ParenExpr 0xd3b8a0 <line:60:4, col:40> 'unsigned long long'
|           | | | | | | | `-BinaryOperator 0xd3b880 <col:5, col:38> 'unsigned long long' '>>'
|           | | | | | | |   |-ParenExpr 0xd3b840 <col:5, col:33> 'unsigned long long'
|           | | | | | | |   | `-BinaryOperator 0xd3b820 <col:6, col:12> 'unsigned long long' '&'
|           | | | | | | |   |   |-ImplicitCastExpr 0xd3b808 <col:6, col:8> 'unsigned long long' <IntegralCast>
|           | | | | | | |   |   | `-ImplicitCastExpr 0xd3b7f0 <col:6, col:8> '__uint64_t':'unsigned long' <LValueToRValue>
|           | | | | | | |   |   |   `-ParenExpr 0xd3b7b0 <col:6, col:8> '__uint64_t':'unsigned long' lvalue
|           | | | | | | |   |   |     `-DeclRefExpr 0xd3b790 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0xd3b5f8 '__bsx' '__uint64_t':'unsigned long'
|           | | | | | | |   |   `-IntegerLiteral 0xd3b7d0 <line:60:12> 'unsigned long long' 18374686479671623680
|           | | | | | | |   `-IntegerLiteral 0xd3b860 <col:38> 'int' 56
|           | | | | | | `-ParenExpr 0xd3b9d0 <line:61:6, col:42> 'unsigned long long'
|           | | | | | |   `-BinaryOperator 0xd3b9b0 <col:7, col:40> 'unsigned long long' '>>'
|           | | | | | |     |-ParenExpr 0xd3b970 <col:7, col:35> 'unsigned long long'
|           | | | | | |     | `-BinaryOperator 0xd3b950 <col:8, col:14> 'unsigned long long' '&'
|           | | | | | |     |   |-ImplicitCastExpr 0xd3b938 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           | | | | | |     |   | `-ImplicitCastExpr 0xd3b920 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           | | | | | |     |   |   `-ParenExpr 0xd3b8e0 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           | | | | | |     |   |     `-DeclRefExpr 0xd3b8c0 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0xd3b5f8 '__bsx' '__uint64_t':'unsigned long'
|           | | | | | |     |   `-IntegerLiteral 0xd3b900 <line:61:14> 'unsigned long long' 71776119061217280
|           | | | | | |     `-IntegerLiteral 0xd3b990 <col:40> 'int' 40
|           | | | | | `-ParenExpr 0xd3bb20 <line:62:6, col:42> 'unsigned long long'
|           | | | | |   `-BinaryOperator 0xd3bb00 <col:7, col:40> 'unsigned long long' '>>'
|           | | | | |     |-ParenExpr 0xd3bac0 <col:7, col:35> 'unsigned long long'
|           | | | | |     | `-BinaryOperator 0xd3baa0 <col:8, col:14> 'unsigned long long' '&'
|           | | | | |     |   |-ImplicitCastExpr 0xd3ba88 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           | | | | |     |   | `-ImplicitCastExpr 0xd3ba70 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           | | | | |     |   |   `-ParenExpr 0xd3ba30 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           | | | | |     |   |     `-DeclRefExpr 0xd3ba10 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0xd3b5f8 '__bsx' '__uint64_t':'unsigned long'
|           | | | | |     |   `-IntegerLiteral 0xd3ba50 <line:62:14> 'unsigned long long' 280375465082880
|           | | | | |     `-IntegerLiteral 0xd3bae0 <col:40> 'int' 24
|           | | | | `-ParenExpr 0xd3bc70 <line:63:6, col:41> 'unsigned long long'
|           | | | |   `-BinaryOperator 0xd3bc50 <col:7, col:40> 'unsigned long long' '>>'
|           | | | |     |-ParenExpr 0xd3bc10 <col:7, col:35> 'unsigned long long'
|           | | | |     | `-BinaryOperator 0xd3bbf0 <col:8, col:14> 'unsigned long long' '&'
|           | | | |     |   |-ImplicitCastExpr 0xd3bbd8 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           | | | |     |   | `-ImplicitCastExpr 0xd3bbc0 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           | | | |     |   |   `-ParenExpr 0xd3bb80 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           | | | |     |   |     `-DeclRefExpr 0xd3bb60 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0xd3b5f8 '__bsx' '__uint64_t':'unsigned long'
|           | | | |     |   `-IntegerLiteral 0xd3bba0 <line:63:14> 'unsigned long long' 1095216660480
|           | | | |     `-IntegerLiteral 0xd3bc30 <col:40> 'int' 8
|           | | | `-ParenExpr 0xd3eec0 <line:64:6, col:41> 'unsigned long long'
|           | | |   `-BinaryOperator 0xd3eea0 <col:7, col:40> 'unsigned long long' '<<'
|           | | |     |-ParenExpr 0xd3ee60 <col:7, col:35> 'unsigned long long'
|           | | |     | `-BinaryOperator 0xd3ee40 <col:8, col:14> 'unsigned long long' '&'
|           | | |     |   |-ImplicitCastExpr 0xd3bd28 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           | | |     |   | `-ImplicitCastExpr 0xd3bd10 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           | | |     |   |   `-ParenExpr 0xd3bcd0 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           | | |     |   |     `-DeclRefExpr 0xd3bcb0 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0xd3b5f8 '__bsx' '__uint64_t':'unsigned long'
|           | | |     |   `-IntegerLiteral 0xd3bcf0 <line:64:14> 'unsigned long long' 4278190080
|           | | |     `-IntegerLiteral 0xd3ee80 <col:40> 'int' 8
|           | | `-ParenExpr 0xd3f010 <line:65:6, col:42> 'unsigned long long'
|           | |   `-BinaryOperator 0xd3eff0 <col:7, col:40> 'unsigned long long' '<<'
|           | |     |-ParenExpr 0xd3efb0 <col:7, col:35> 'unsigned long long'
|           | |     | `-BinaryOperator 0xd3ef90 <col:8, col:14> 'unsigned long long' '&'
|           | |     |   |-ImplicitCastExpr 0xd3ef78 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           | |     |   | `-ImplicitCastExpr 0xd3ef60 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           | |     |   |   `-ParenExpr 0xd3ef20 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           | |     |   |     `-DeclRefExpr 0xd3ef00 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0xd3b5f8 '__bsx' '__uint64_t':'unsigned long'
|           | |     |   `-IntegerLiteral 0xd3ef40 <line:65:14> 'unsigned long long' 16711680
|           | |     `-IntegerLiteral 0xd3efd0 <col:40> 'int' 24
|           | `-ParenExpr 0xd3f160 <line:66:6, col:42> 'unsigned long long'
|           |   `-BinaryOperator 0xd3f140 <col:7, col:40> 'unsigned long long' '<<'
|           |     |-ParenExpr 0xd3f100 <col:7, col:35> 'unsigned long long'
|           |     | `-BinaryOperator 0xd3f0e0 <col:8, col:14> 'unsigned long long' '&'
|           |     |   |-ImplicitCastExpr 0xd3f0c8 <col:8, col:10> 'unsigned long long' <IntegralCast>
|           |     |   | `-ImplicitCastExpr 0xd3f0b0 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|           |     |   |   `-ParenExpr 0xd3f070 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|           |     |   |     `-DeclRefExpr 0xd3f050 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0xd3b5f8 '__bsx' '__uint64_t':'unsigned long'
|           |     |   `-IntegerLiteral 0xd3f090 <line:66:14> 'unsigned long long' 65280
|           |     `-IntegerLiteral 0xd3f120 <col:40> 'int' 40
|           `-ParenExpr 0xd3f2b0 <line:67:6, col:42> 'unsigned long long'
|             `-BinaryOperator 0xd3f290 <col:7, col:40> 'unsigned long long' '<<'
|               |-ParenExpr 0xd3f250 <col:7, col:35> 'unsigned long long'
|               | `-BinaryOperator 0xd3f230 <col:8, col:14> 'unsigned long long' '&'
|               |   |-ImplicitCastExpr 0xd3f218 <col:8, col:10> 'unsigned long long' <IntegralCast>
|               |   | `-ImplicitCastExpr 0xd3f200 <col:8, col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|               |   |   `-ParenExpr 0xd3f1c0 <col:8, col:10> '__uint64_t':'unsigned long' lvalue
|               |   |     `-DeclRefExpr 0xd3f1a0 <line:75:31> '__uint64_t':'unsigned long' lvalue ParmVar 0xd3b5f8 '__bsx' '__uint64_t':'unsigned long'
|               |   `-IntegerLiteral 0xd3f1e0 <line:67:14> 'unsigned long long' 255
|               `-IntegerLiteral 0xd3f270 <col:40> 'int' 56
|-FunctionDecl 0xd3f3f0 </usr/include/x86_64-linux-gnu/bits/uintn-identity.h:32:1, line:36:1> line:33:1 __uint16_identity '__uint16_t (__uint16_t)' static inline
| |-ParmVarDecl 0xd3f360 <col:20, col:31> col:31 used __x '__uint16_t':'unsigned short'
| `-CompoundStmt 0xd3f4e0 <line:34:1, line:36:1>
|   `-ReturnStmt 0xd3f4d0 <line:35:3, col:10>
|     `-ImplicitCastExpr 0xd3f4b8 <col:10> '__uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0xd3f498 <col:10> '__uint16_t':'unsigned short' lvalue ParmVar 0xd3f360 '__x' '__uint16_t':'unsigned short'
|-FunctionDecl 0xd3f598 <line:38:1, line:42:1> line:39:1 __uint32_identity '__uint32_t (__uint32_t)' static inline
| |-ParmVarDecl 0xd3f508 <col:20, col:31> col:31 used __x '__uint32_t':'unsigned int'
| `-CompoundStmt 0xd3f688 <line:40:1, line:42:1>
|   `-ReturnStmt 0xd3f678 <line:41:3, col:10>
|     `-ImplicitCastExpr 0xd3f660 <col:10> '__uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0xd3f640 <col:10> '__uint32_t':'unsigned int' lvalue ParmVar 0xd3f508 '__x' '__uint32_t':'unsigned int'
|-FunctionDecl 0xd3f740 <line:44:1, line:48:1> line:45:1 __uint64_identity '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0xd3f6b0 <col:20, col:31> col:31 used __x '__uint64_t':'unsigned long'
| `-CompoundStmt 0xd3f830 <line:46:1, line:48:1>
|   `-ReturnStmt 0xd3f820 <line:47:3, col:10>
|     `-ImplicitCastExpr 0xd3f808 <col:10> '__uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0xd3f7e8 <col:10> '__uint64_t':'unsigned long' lvalue ParmVar 0xd3f6b0 '__x' '__uint64_t':'unsigned long'
|-RecordDecl 0xd3f848 </usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h:5:9, line:8:1> line:5:9 struct definition
| `-FieldDecl 0xd3fa90 <line:7:3, col:41> col:21 __val 'unsigned long [16]'
|-TypedefDecl 0xd3fb38 <line:5:1, line:8:3> col:3 referenced __sigset_t 'struct __sigset_t':'__sigset_t'
| `-ElaboratedType 0xd3fae0 'struct __sigset_t' sugar
|   `-RecordType 0xd3f8d0 '__sigset_t'
|     `-Record 0xd3f848 ''
|-TypedefDecl 0xd3fbe0 </usr/include/x86_64-linux-gnu/bits/types/sigset_t.h:7:1, col:20> col:20 sigset_t '__sigset_t':'__sigset_t'
| `-TypedefType 0xd3fbb0 '__sigset_t' sugar
|   |-Typedef 0xd3fb38 '__sigset_t'
|   `-ElaboratedType 0xd3fae0 'struct __sigset_t' sugar
|     `-RecordType 0xd3f8d0 '__sigset_t'
|       `-Record 0xd3f848 ''
|-RecordDecl 0xd3fc38 </usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h:8:1, line:12:1> line:8:8 struct timeval definition
| |-FieldDecl 0xd3fcf0 <line:10:3, col:12> col:12 tv_sec '__time_t':'long'
| `-FieldDecl 0xd3fd70 <line:11:3, col:17> col:17 tv_usec '__suseconds_t':'long'
|-RecordDecl 0xd3fdc0 </usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h:10:1, line:26:1> line:10:8 struct timespec definition
| |-FieldDecl 0xd46df0 <line:12:3, col:12> col:12 tv_sec '__time_t':'long'
| `-FieldDecl 0xd46e70 <line:16:3, col:21> col:21 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0xd46ed0 </usr/include/x86_64-linux-gnu/sys/select.h:43:1, col:23> col:23 suseconds_t '__suseconds_t':'long'
| `-TypedefType 0xd3fd40 '__suseconds_t' sugar
|   |-Typedef 0xccfbd0 '__suseconds_t'
|   `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xd46f40 <line:49:1, col:18> col:18 referenced __fd_mask 'long'
| `-BuiltinType 0xc20e60 'long'
|-RecordDecl 0xd46f98 <line:59:9, line:70:3> line:59:9 struct definition
| `-FieldDecl 0xd47228 <line:67:5, col:50> col:15 __fds_bits '__fd_mask [16]'
|-TypedefDecl 0xd472d8 <line:59:1, line:70:5> col:5 referenced fd_set 'struct fd_set':'fd_set'
| `-ElaboratedType 0xd47280 'struct fd_set' sugar
|   `-RecordType 0xd47020 'fd_set'
|     `-Record 0xd46f98 ''
|-TypedefDecl 0xd47358 <line:77:1, col:19> col:19 fd_mask '__fd_mask':'long'
| `-TypedefType 0xd47040 '__fd_mask' sugar
|   |-Typedef 0xd46f40 '__fd_mask'
|   `-BuiltinType 0xc20e60 'long'
|-FunctionDecl 0xd47820 <line:101:1, line:104:42> line:101:12 select 'int (int, fd_set *restrict, fd_set *restrict, fd_set *restrict, struct timeval *restrict)' extern
| |-ParmVarDecl 0xd473c8 <col:20, col:24> col:24 __nfds 'int'
| |-ParmVarDecl 0xd474b8 <col:32, col:51> col:51 __readfds 'fd_set *restrict'
| |-ParmVarDecl 0xd47530 <line:102:6, col:25> col:25 __writefds 'fd_set *restrict'
| |-ParmVarDecl 0xd475a8 <line:103:6, col:25> col:25 __exceptfds 'fd_set *restrict'
| `-ParmVarDecl 0xd476c0 <line:104:6, col:33> col:33 __timeout 'struct timeval *restrict'
|-FunctionDecl 0xd49178 <line:113:1, line:117:45> line:113:12 pselect 'int (int, fd_set *restrict, fd_set *restrict, fd_set *restrict, const struct timespec *restrict, const __sigset_t *restrict)' extern
| |-ParmVarDecl 0xd47900 <col:21, col:25> col:25 __nfds 'int'
| |-ParmVarDecl 0xd47978 <col:33, col:52> col:52 __readfds 'fd_set *restrict'
| |-ParmVarDecl 0xd479f0 <line:114:7, col:26> col:26 __writefds 'fd_set *restrict'
| |-ParmVarDecl 0xd47a68 <line:115:7, col:26> col:26 __exceptfds 'fd_set *restrict'
| |-ParmVarDecl 0xd47b80 <line:116:7, col:41> col:41 __timeout 'const struct timespec *restrict'
| `-ParmVarDecl 0xd47c58 <line:117:7, col:36> col:36 __sigmask 'const __sigset_t *restrict'
|-TypedefDecl 0xd49280 </usr/include/x86_64-linux-gnu/sys/types.h:185:1, col:21> col:21 blksize_t '__blksize_t':'long'
| `-TypedefType 0xd49250 '__blksize_t' sugar
|   |-Typedef 0xccfe00 '__blksize_t'
|   `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xd49310 <line:192:1, col:20> col:20 blkcnt_t '__blkcnt_t':'long'
| `-TypedefType 0xd492e0 '__blkcnt_t' sugar
|   |-Typedef 0xccfe70 '__blkcnt_t'
|   `-BuiltinType 0xc20e60 'long'
|-TypedefDecl 0xd493a0 <line:196:1, col:22> col:22 fsblkcnt_t '__fsblkcnt_t':'unsigned long'
| `-TypedefType 0xd49370 '__fsblkcnt_t' sugar
|   |-Typedef 0xccff50 '__fsblkcnt_t'
|   `-BuiltinType 0xc20f00 'unsigned long'
|-TypedefDecl 0xd49430 <line:200:1, col:22> col:22 fsfilcnt_t '__fsfilcnt_t':'unsigned long'
| `-TypedefType 0xd49400 '__fsfilcnt_t' sugar
|   |-Typedef 0xcd0030 '__fsfilcnt_t'
|   `-BuiltinType 0xc20f00 'unsigned long'
|-RecordDecl 0xd49488 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:49:9, line:53:1> line:49:16 struct __pthread_internal_list definition
| |-FieldDecl 0xd495e0 <line:51:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0xd49658 <line:52:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0xd49708 <line:49:1, line:53:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0xd496b0 'struct __pthread_internal_list' sugar
|   `-RecordType 0xd49510 'struct __pthread_internal_list'
|     `-Record 0xd49488 '__pthread_internal_list'
|-RecordDecl 0xd49778 <line:55:9, line:58:1> line:55:16 struct __pthread_internal_slist definition
| `-FieldDecl 0xd498d0 <line:57:3, col:36> col:36 __next 'struct __pthread_internal_slist *'
|-TypedefDecl 0xd49978 <line:55:1, line:58:3> col:3 __pthread_slist_t 'struct __pthread_internal_slist':'struct __pthread_internal_slist'
| `-ElaboratedType 0xd49920 'struct __pthread_internal_slist' sugar
|   `-RecordType 0xd49800 'struct __pthread_internal_slist'
|     `-Record 0xd49778 '__pthread_internal_slist'
|-RecordDecl 0xd499e8 </usr/include/x86_64-linux-gnu/bits/struct_mutex.h:22:1, line:53:1> line:22:8 struct __pthread_mutex_s definition
| |-FieldDecl 0xd49aa8 <line:24:3, col:7> col:7 __lock 'int'
| |-FieldDecl 0xd49b10 <line:25:3, col:16> col:16 __count 'unsigned int'
| |-FieldDecl 0xd49b78 <line:26:3, col:7> col:7 __owner 'int'
| |-FieldDecl 0xd49be0 <line:28:3, col:16> col:16 __nusers 'unsigned int'
| |-FieldDecl 0xd49c48 <line:32:3, col:7> col:7 __kind 'int'
| |-FieldDecl 0xd49cb0 <line:34:3, col:9> col:9 __spins 'short'
| |-FieldDecl 0xd49d18 <line:35:3, col:9> col:9 __elision 'short'
| `-FieldDecl 0xd49da0 <line:36:3, col:20> col:20 __list '__pthread_list_t':'struct __pthread_internal_list'
|-RecordDecl 0xd49df0 </usr/include/x86_64-linux-gnu/bits/struct_rwlock.h:23:1, line:55:1> line:23:8 struct __pthread_rwlock_arch_t definition
| |-FieldDecl 0xd49ea8 <line:25:3, col:16> col:16 __readers 'unsigned int'
| |-FieldDecl 0xd49f10 <line:26:3, col:16> col:16 __writers 'unsigned int'
| |-FieldDecl 0xd49f78 <line:27:3, col:16> col:16 __wrphase_futex 'unsigned int'
| |-FieldDecl 0xd49fe0 <line:28:3, col:16> col:16 __writers_futex 'unsigned int'
| |-FieldDecl 0xd4a048 <line:29:3, col:16> col:16 __pad3 'unsigned int'
| |-FieldDecl 0xd4a0b0 <line:30:3, col:16> col:16 __pad4 'unsigned int'
| |-FieldDecl 0xd50fa0 <line:32:3, col:7> col:7 __cur_writer 'int'
| |-FieldDecl 0xd51008 <line:33:3, col:7> col:7 __shared 'int'
| |-FieldDecl 0xd51070 <line:34:3, col:15> col:15 __rwelision 'signed char'
| |-FieldDecl 0xd51160 <line:39:3, col:25> col:17 __pad1 'unsigned char [7]'
| |-FieldDecl 0xd511c8 <line:42:3, col:21> col:21 __pad2 'unsigned long'
| `-FieldDecl 0xd51230 <line:45:3, col:16> col:16 __flags 'unsigned int'
|-RecordDecl 0xd51280 </usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:92:1, line:117:1> line:92:8 struct __pthread_cond_s definition
| |-RecordDecl 0xd51320 <line:94:17, line:102:3> line:94:17 union definition
| | |-FieldDecl 0xd513d8 <line:96:19, col:42> col:42 __wseq 'unsigned long long'
| | |-RecordDecl 0xd51428 <line:97:5, line:101:5> line:97:5 struct definition
| | | |-FieldDecl 0xd514e8 <line:99:7, col:20> col:20 __low 'unsigned int'
| | | `-FieldDecl 0xd51550 <line:100:7, col:20> col:20 __high 'unsigned int'
| | `-FieldDecl 0xd515f8 <line:97:5, line:101:7> col:7 __wseq32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)'
| |-FieldDecl 0xd516a8 <line:94:17> col:17 implicit 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:94:17)'
| |-IndirectFieldDecl 0xd51708 <line:96:42> col:42 implicit __wseq 'unsigned long long'
| | |-Field 0xd516a8 '' 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:94:17)'
| | `-Field 0xd513d8 '__wseq' 'unsigned long long'
| |-IndirectFieldDecl 0xd51760 <line:101:7> col:7 implicit __wseq32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)'
| | |-Field 0xd516a8 '' 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:94:17)'
| | `-Field 0xd515f8 '__wseq32' 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:97:5)'
| |-RecordDecl 0xd517a8 <line:103:17, line:111:3> line:103:17 union definition
| | |-FieldDecl 0xd51868 <line:105:19, col:42> col:42 __g1_start 'unsigned long long'
| | |-RecordDecl 0xd518b8 <line:106:5, line:110:5> line:106:5 struct definition
| | | |-FieldDecl 0xd51978 <line:108:7, col:20> col:20 __low 'unsigned int'
| | | `-FieldDecl 0xd519e0 <line:109:7, col:20> col:20 __high 'unsigned int'
| | `-FieldDecl 0xd51a88 <line:106:5, line:110:7> col:7 __g1_start32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)'
| |-FieldDecl 0xd51b38 <line:103:17> col:17 implicit 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:103:17)'
| |-IndirectFieldDecl 0xd51b98 <line:105:42> col:42 implicit __g1_start 'unsigned long long'
| | |-Field 0xd51b38 '' 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:103:17)'
| | `-Field 0xd51868 '__g1_start' 'unsigned long long'
| |-IndirectFieldDecl 0xd51bf0 <line:110:7> col:7 implicit __g1_start32 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)'
| | |-Field 0xd51b38 '' 'union __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:103:17)'
| | `-Field 0xd51a88 '__g1_start32' 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)':'struct __pthread_cond_s::(anonymous at /usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:106:5)'
| |-FieldDecl 0xd51cd0 <line:112:3, col:26> col:16 __g_refs 'unsigned int [2]'
| |-FieldDecl 0xd51d80 <line:113:3, col:26> col:16 __g_size 'unsigned int [2]'
| |-FieldDecl 0xd51de8 <line:114:3, col:16> col:16 __g1_orig_size 'unsigned int'
| |-FieldDecl 0xd51e50 <line:115:3, col:16> col:16 __wrefs 'unsigned int'
| `-FieldDecl 0xd51f00 <line:116:3, col:29> col:16 __g_signals 'unsigned int [2]'
|-TypedefDecl 0xd52520 </usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:27:1, col:27> col:27 pthread_t 'unsigned long'
| `-BuiltinType 0xc20f00 'unsigned long'
|-RecordDecl 0xd52578 <line:32:9, line:36:1> line:32:9 union definition
| |-FieldDecl 0xd52678 <line:34:3, col:43> col:8 __size 'char [4]'
| `-FieldDecl 0xd526e0 <line:35:3, col:7> col:7 __align 'int'
|-TypedefDecl 0xd52788 <line:32:1, line:36:3> col:3 pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0xd52730 'union pthread_mutexattr_t' sugar
|   `-RecordType 0xd52600 'pthread_mutexattr_t'
|     `-Record 0xd52578 ''
|-RecordDecl 0xd527f8 <line:41:9, line:45:1> line:41:9 union definition
| |-FieldDecl 0xd528f8 <line:43:3, col:42> col:8 __size 'char [4]'
| `-FieldDecl 0xd52960 <line:44:3, col:7> col:7 __align 'int'
|-TypedefDecl 0xd52a08 <line:41:1, line:45:3> col:3 pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0xd529b0 'union pthread_condattr_t' sugar
|   `-RecordType 0xd52880 'pthread_condattr_t'
|     `-Record 0xd527f8 ''
|-TypedefDecl 0xd52a90 <line:49:1, col:22> col:22 pthread_key_t 'unsigned int'
| `-BuiltinType 0xc20ee0 'unsigned int'
|-TypedefDecl 0xd52b00 <line:53:1, col:30> col:30 pthread_once_t 'int'
| `-BuiltinType 0xc20e40 'int'
|-RecordDecl 0xd52b58 <line:56:1, line:60:1> line:56:7 union pthread_attr_t definition
| |-FieldDecl 0xd52c98 <line:58:3, col:38> col:8 __size 'char [56]'
| `-FieldDecl 0xd52d00 <line:59:3, col:12> col:12 __align 'long'
|-TypedefDecl 0xd52da0 <line:62:1, col:30> col:30 pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0xd52d50 'union pthread_attr_t' sugar
|   `-RecordType 0xd52be0 'union pthread_attr_t'
|     `-Record 0xd52b58 'pthread_attr_t'
|-RecordDecl 0xd52df8 <line:67:9, line:72:1> line:67:9 union definition
| |-FieldDecl 0xd52ef0 <line:69:3, col:28> col:28 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0xd52fd8 <line:70:3, col:39> col:8 __size 'char [40]'
| `-FieldDecl 0xd53040 <line:71:3, col:12> col:12 __align 'long'
|-TypedefDecl 0xd531c8 <line:67:1, line:72:3> col:3 pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0xd53170 'union pthread_mutex_t' sugar
|   `-RecordType 0xd52e80 'pthread_mutex_t'
|     `-Record 0xd52df8 ''
|-RecordDecl 0xd53238 <line:75:9, line:80:1> line:75:9 union definition
| |-FieldDecl 0xd53330 <line:77:3, col:27> col:27 __data 'struct __pthread_cond_s':'struct __pthread_cond_s'
| |-FieldDecl 0xd53418 <line:78:3, col:38> col:8 __size 'char [48]'
| `-FieldDecl 0xcc2b70 <line:79:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0xcc2d48 <line:75:1, line:80:3> col:3 pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0xcc2cf0 'union pthread_cond_t' sugar
|   `-RecordType 0xd532c0 'pthread_cond_t'
|     `-Record 0xd53238 ''
|-RecordDecl 0xcc2db8 <line:86:9, line:91:1> line:86:9 union definition
| |-FieldDecl 0xcc2eb0 <line:88:3, col:34> col:34 __data 'struct __pthread_rwlock_arch_t':'struct __pthread_rwlock_arch_t'
| |-FieldDecl 0xcc2f58 <line:89:3, col:40> col:8 __size 'char [56]'
| `-FieldDecl 0xcc2fc0 <line:90:3, col:12> col:12 __align 'long'
|-TypedefDecl 0xcc3118 <line:86:1, line:91:3> col:3 pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0xcc30c0 'union pthread_rwlock_t' sugar
|   `-RecordType 0xcc2e40 'pthread_rwlock_t'
|     `-Record 0xcc2db8 ''
|-RecordDecl 0xcc3188 <line:93:9, line:97:1> line:93:9 union definition
| |-FieldDecl 0xcc32c8 <line:95:3, col:44> col:8 __size 'char [8]'
| `-FieldDecl 0xcc3330 <line:96:3, col:12> col:12 __align 'long'
|-TypedefDecl 0xcc33d8 <line:93:1, line:97:3> col:3 pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0xcc3380 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0xcc3210 'pthread_rwlockattr_t'
|     `-Record 0xcc3188 ''
|-TypedefDecl 0xcc3460 <line:103:1, col:22> col:22 pthread_spinlock_t 'volatile int'
| `-QualType 0xc20e44 'volatile int' volatile
|   `-BuiltinType 0xc20e40 'int'
|-RecordDecl 0xcc34b8 <line:108:9, line:112:1> line:108:9 union definition
| |-FieldDecl 0xcc35f8 <line:110:3, col:41> col:8 __size 'char [32]'
| `-FieldDecl 0xcc3660 <line:111:3, col:12> col:12 __align 'long'
|-TypedefDecl 0xcc3708 <line:108:1, line:112:3> col:3 pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0xcc36b0 'union pthread_barrier_t' sugar
|   `-RecordType 0xcc3540 'pthread_barrier_t'
|     `-Record 0xcc34b8 ''
|-RecordDecl 0xcc3778 <line:114:9, line:118:1> line:114:9 union definition
| |-FieldDecl 0xcc3878 <line:116:3, col:45> col:8 __size 'char [4]'
| `-FieldDecl 0xcc38e0 <line:117:3, col:7> col:7 __align 'int'
|-TypedefDecl 0xcc3988 <line:114:1, line:118:3> col:3 pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0xcc3930 'union pthread_barrierattr_t' sugar
|   `-RecordType 0xcc3800 'pthread_barrierattr_t'
|     `-Record 0xcc3778 ''
|-FunctionDecl 0xcc3ac0 </usr/include/stdlib.h:401:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:401:17 random 'long (void)' extern
| `-NoThrowAttr 0xd5b4d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd5b5d0 </usr/include/stdlib.h:404:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:404:13 srandom 'void (unsigned int)' extern
| |-ParmVarDecl 0xd5b540 <col:22, col:35> col:35 __seed 'unsigned int'
| `-NoThrowAttr 0xd5b678 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd5b930 </usr/include/stdlib.h:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:410:14 initstate 'char *(unsigned int, char *, size_t)' extern
| |-ParmVarDecl 0xd5b6e8 <col:25, col:38> col:38 __seed 'unsigned int'
| |-ParmVarDecl 0xd5b768 <col:46, col:52> col:52 __statebuf 'char *'
| |-ParmVarDecl 0xd5b7e0 <line:411:4, col:11> col:11 __statelen 'size_t':'unsigned long'
| |-NoThrowAttr 0xd5b9e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd5ba40 <line:293:44, /usr/include/stdlib.h:411:44> 2
|-FunctionDecl 0xd5bb48 <line:415:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:415:14 setstate 'char *(char *)' extern
| |-ParmVarDecl 0xd5ba90 <col:24, col:30> col:30 __statebuf 'char *'
| |-NoThrowAttr 0xd5bbf0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd5bc48 <line:293:44, /usr/include/stdlib.h:415:63> 1
|-RecordDecl 0xd5bc88 <line:423:1, line:432:3> line:423:8 struct random_data definition
| |-FieldDecl 0xd5bdb8 <line:425:5, col:14> col:14 fptr 'int32_t *'
| |-FieldDecl 0xd5be18 <line:426:5, col:14> col:14 rptr 'int32_t *'
| |-FieldDecl 0xd5be78 <line:427:5, col:14> col:14 state 'int32_t *'
| |-FieldDecl 0xd5bee0 <line:428:5, col:9> col:9 rand_type 'int'
| |-FieldDecl 0xd5bf48 <line:429:5, col:9> col:9 rand_deg 'int'
| |-FieldDecl 0xd5bfb0 <line:430:5, col:9> col:9 rand_sep 'int'
| `-FieldDecl 0xd5c010 <line:431:5, col:14> col:14 end_ptr 'int32_t *'
|-FunctionDecl 0xd5c2e0 <line:434:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:434:12 random_r 'int (struct random_data *restrict, int32_t *restrict)' extern
| |-ParmVarDecl 0xd5c110 <col:22, col:53> col:53 __buf 'struct random_data *restrict'
| |-ParmVarDecl 0xd5c188 <line:435:8, col:28> col:28 __result 'int32_t *restrict'
| |-NoThrowAttr 0xd5c390 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd5c3e8 <line:293:44, /usr/include/stdlib.h:435:62> 1 2
|-FunctionDecl 0xd5c620 <line:437:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:437:12 srandom_r 'int (unsigned int, struct random_data *)' extern
| |-ParmVarDecl 0xd5c440 <col:23, col:36> col:36 __seed 'unsigned int'
| |-ParmVarDecl 0xd5c4e0 <col:44, col:64> col:64 __buf 'struct random_data *'
| |-NoThrowAttr 0xd5c6d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd5c728 <line:293:44, /usr/include/stdlib.h:438:27> 2
|-FunctionDecl 0xd5ca90 <line:440:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:440:12 initstate_r 'int (unsigned int, char *restrict, size_t, struct random_data *restrict)' extern
| |-ParmVarDecl 0xd5c780 <col:25, col:38> col:38 __seed 'unsigned int'
| |-ParmVarDecl 0xd5c800 <col:46, col:63> col:63 __statebuf 'char *restrict'
| |-ParmVarDecl 0xd5c878 <line:441:4, col:11> col:11 __statelen 'size_t':'unsigned long'
| |-ParmVarDecl 0xd5c908 <line:442:4, col:35> col:35 __buf 'struct random_data *restrict'
| |-NoThrowAttr 0xd5cb50 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd5cba8 <line:293:44, /usr/include/stdlib.h:443:30> 2 4
|-FunctionDecl 0xd5cdf0 <line:445:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:445:12 setstate_r 'int (char *restrict, struct random_data *restrict)' extern
| |-ParmVarDecl 0xd5cc00 <col:24, col:41> col:41 __statebuf 'char *restrict'
| |-ParmVarDecl 0xd5cc90 <line:446:10, col:41> col:41 __buf 'struct random_data *restrict'
| |-NoThrowAttr 0xd5cea0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd5cef8 <line:293:44, /usr/include/stdlib.h:447:30> 1 2
|-FunctionDecl 0xd5cfd8 <line:453:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:453:12 rand 'int (void)' extern
| `-NoThrowAttr 0xd5d078 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd5d178 </usr/include/stdlib.h:455:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:455:13 srand 'void (unsigned int)' extern
| |-ParmVarDecl 0xd5d0e8 <col:20, col:33> col:33 __seed 'unsigned int'
| `-NoThrowAttr 0xd5d220 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd5d360 </usr/include/stdlib.h:459:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:459:12 rand_r 'int (unsigned int *)' extern
| |-ParmVarDecl 0xd5d290 <col:20, col:34> col:34 __seed 'unsigned int *'
| `-NoThrowAttr 0xd5d408 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd5d540 </usr/include/stdlib.h:467:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:467:15 drand48 'double (void)' extern
| `-NoThrowAttr 0xd5d5e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd5d850 </usr/include/stdlib.h:468:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:468:15 erand48 'double (unsigned short *)' extern
| |-ParmVarDecl 0xd5d730 <col:24, col:52> col:43 __xsubi 'unsigned short *':'unsigned short *'
| |-NoThrowAttr 0xd5d8f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd5d950 <line:293:44, /usr/include/stdlib.h:468:76> 1
|-FunctionDecl 0xd5da28 <line:471:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:471:17 lrand48 'long (void)' extern
| `-NoThrowAttr 0xd5dac8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd5dca0 </usr/include/stdlib.h:472:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:472:17 nrand48 'long (unsigned short *)' extern
| |-ParmVarDecl 0xd5db80 <col:26, col:54> col:45 __xsubi 'unsigned short *':'unsigned short *'
| |-NoThrowAttr 0xd5dd48 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd5dda0 <line:293:44, /usr/include/stdlib.h:473:27> 1
|-FunctionDecl 0xd5de78 <line:476:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:476:17 mrand48 'long (void)' extern
| `-NoThrowAttr 0xd5df18 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd5e088 </usr/include/stdlib.h:477:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:477:17 jrand48 'long (unsigned short *)' extern
| |-ParmVarDecl 0xd5dfd0 <col:26, col:54> col:45 __xsubi 'unsigned short *':'unsigned short *'
| |-NoThrowAttr 0xd5e130 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd5e188 <line:293:44, /usr/include/stdlib.h:478:27> 1
|-FunctionDecl 0xd5e2a8 <line:481:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:481:13 srand48 'void (long)' extern
| |-ParmVarDecl 0xd5e1e0 <col:22, col:31> col:31 __seedval 'long'
| `-NoThrowAttr 0xd5e350 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd5f540 </usr/include/stdlib.h:482:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:482:28 seed48 'unsigned short *(unsigned short *)' extern
| |-ParmVarDecl 0xd5e408 <col:36, col:66> col:55 __seed16v 'unsigned short *':'unsigned short *'
| |-NoThrowAttr 0xd5f5e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd5f640 <line:293:44, /usr/include/stdlib.h:483:27> 1
|-FunctionDecl 0xd5f858 <line:484:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:484:13 lcong48 'void (unsigned short *)' extern
| |-ParmVarDecl 0xd5f740 <col:22, col:50> col:41 __param 'unsigned short *':'unsigned short *'
| |-NoThrowAttr 0xd5f900 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd5f958 <line:293:44, /usr/include/stdlib.h:484:74> 1
|-RecordDecl 0xd5f998 <line:490:1, line:498:3> line:490:8 struct drand48_data definition
| |-FieldDecl 0xd5faa0 <line:492:5, col:29> col:24 __x 'unsigned short [3]'
| |-FieldDecl 0xd5fb50 <line:493:5, col:33> col:24 __old_x 'unsigned short [3]'
| |-FieldDecl 0xd5fbb8 <line:494:5, col:24> col:24 __c 'unsigned short'
| |-FieldDecl 0xd5fc20 <line:495:5, col:24> col:24 __init 'unsigned short'
| `-FieldDecl 0xd5fc88 <line:496:19, col:42> col:42 __a 'unsigned long long'
|-FunctionDecl 0xd5ffa0 <line:501:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:501:12 drand48_r 'int (struct drand48_data *restrict, double *restrict)' extern
| |-ParmVarDecl 0xd5fd90 <col:23, col:55> col:55 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0xd5fe40 <line:502:9, col:28> col:28 __result 'double *restrict'
| |-NoThrowAttr 0xd60050 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd600a8 <line:293:44, /usr/include/stdlib.h:502:62> 1 2
|-FunctionDecl 0xd603c0 <line:503:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:503:12 erand48_r 'int (unsigned short *, struct drand48_data *restrict, double *restrict)' extern
| |-ParmVarDecl 0xd60148 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| |-ParmVarDecl 0xd601d8 <line:504:9, col:41> col:41 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0xd60258 <line:505:9, col:28> col:28 __result 'double *restrict'
| |-NoThrowAttr 0xd60478 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd604d0 <line:293:44, /usr/include/stdlib.h:505:62> 1 2
|-FunctionDecl 0xd60750 <line:508:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:508:12 lrand48_r 'int (struct drand48_data *restrict, long *restrict)' extern
| |-ParmVarDecl 0xd60548 <col:23, col:55> col:55 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0xd605f0 <line:509:9, col:30> col:30 __result 'long *restrict'
| |-NoThrowAttr 0xd60800 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd60858 <line:293:44, /usr/include/stdlib.h:510:30> 1 2
|-FunctionDecl 0xd60b70 <line:511:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:511:12 nrand48_r 'int (unsigned short *, struct drand48_data *restrict, long *restrict)' extern
| |-ParmVarDecl 0xd608f8 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| |-ParmVarDecl 0xd60988 <line:512:9, col:41> col:41 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0xd60a08 <line:513:9, col:30> col:30 __result 'long *restrict'
| |-NoThrowAttr 0xd60c28 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd60c80 <line:293:44, /usr/include/stdlib.h:514:30> 1 2
|-FunctionDecl 0xd60e40 <line:517:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:517:12 mrand48_r 'int (struct drand48_data *restrict, long *restrict)' extern
| |-ParmVarDecl 0xd60ce0 <col:23, col:55> col:55 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0xd60d60 <line:518:9, col:30> col:30 __result 'long *restrict'
| |-NoThrowAttr 0xd60ef0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd60f48 <line:293:44, /usr/include/stdlib.h:519:30> 1 2
|-FunctionDecl 0xd611e0 <line:520:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:520:12 jrand48_r 'int (unsigned short *, struct drand48_data *restrict, long *restrict)' extern
| |-ParmVarDecl 0xd60fe8 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| |-ParmVarDecl 0xd61078 <line:521:9, col:41> col:41 __buffer 'struct drand48_data *restrict'
| |-ParmVarDecl 0xd610f8 <line:522:9, col:30> col:30 __result 'long *restrict'
| |-NoThrowAttr 0xd61298 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd612f0 <line:293:44, /usr/include/stdlib.h:523:30> 1 2
|-FunctionDecl 0xd61530 <line:526:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:526:12 srand48_r 'int (long, struct drand48_data *)' extern
| |-ParmVarDecl 0xd61340 <col:23, col:32> col:32 __seedval 'long'
| |-ParmVarDecl 0xd613d0 <col:43, col:64> col:64 __buffer 'struct drand48_data *'
| |-NoThrowAttr 0xd615e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd61638 <line:293:44, /usr/include/stdlib.h:527:27> 2
|-FunctionDecl 0xd618c0 <line:529:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:529:12 seed48_r 'int (unsigned short *, struct drand48_data *)' extern
| |-ParmVarDecl 0xd616d8 <col:22, col:52> col:41 __seed16v 'unsigned short *':'unsigned short *'
| |-ParmVarDecl 0xd61768 <line:530:8, col:29> col:29 __buffer 'struct drand48_data *'
| |-NoThrowAttr 0xd61970 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd619c8 <line:293:44, /usr/include/stdlib.h:530:63> 1 2
|-FunctionDecl 0xd61c10 <line:532:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:532:12 lcong48_r 'int (unsigned short *, struct drand48_data *)' extern
| |-ParmVarDecl 0xd61a68 <col:23, col:51> col:42 __param 'unsigned short *':'unsigned short *'
| |-ParmVarDecl 0xd61af8 <line:533:9, col:30> col:30 __buffer 'struct drand48_data *'
| |-NoThrowAttr 0xd61cc0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd61d18 <line:293:44, /usr/include/stdlib.h:534:30> 1 2
|-FunctionDecl 0xd61e60 <line:539:14> col:14 implicit malloc 'void *(unsigned long)' extern
| `-ParmVarDecl 0xd61f00 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xd61f70 prev 0xd61e60 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdlib.h:539:14 malloc 'void *(unsigned long)' extern
| |-ParmVarDecl 0xd61d68 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0xd62018 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0xd62070 <line:208:47> malloc
|-FunctionDecl 0xd62240 </usr/include/stdlib.h:542:14> col:14 implicit calloc 'void *(unsigned long, unsigned long)' extern
| |-ParmVarDecl 0xd622e0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0xd62348 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xd623c0 prev 0xd62240 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdlib.h:542:14 calloc 'void *(unsigned long, unsigned long)' extern
| |-ParmVarDecl 0xd620a8 <col:22, col:29> col:29 __nmemb 'size_t':'unsigned long'
| |-ParmVarDecl 0xd62120 <col:38, col:45> col:45 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0xd62470 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0xd624c8 <line:208:47> malloc
|-FunctionDecl 0xd626d0 </usr/include/stdlib.h:550:14> col:14 implicit realloc 'void *(void *, unsigned long)' extern
| |-ParmVarDecl 0xd62770 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0xd627d8 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xd62850 prev 0xd626d0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:302:43> /usr/include/stdlib.h:550:14 realloc 'void *(void *, unsigned long)' extern
| |-ParmVarDecl 0xd62540 <col:23, col:29> col:29 __ptr 'void *'
| |-ParmVarDecl 0xd625b8 <col:36, col:43> col:43 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0xd62900 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-WarnUnusedResultAttr 0xd62958 <line:302:20> warn_unused_result ""
|-FunctionDecl 0xd62bc0 </usr/include/stdlib.h:559:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:302:43> /usr/include/stdlib.h:559:14 reallocarray 'void *(void *, size_t, size_t)' extern
| |-ParmVarDecl 0xd629a0 <col:28, col:34> col:34 __ptr 'void *'
| |-ParmVarDecl 0xd62a18 <col:41, col:48> col:48 __nmemb 'size_t':'unsigned long'
| |-ParmVarDecl 0xd62a90 <col:57, col:64> col:64 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0xd62c78 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-WarnUnusedResultAttr 0xd62cd0 <line:302:20> warn_unused_result ""
|-FunctionDecl 0xd62dd8 </usr/include/stdlib.h:565:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:565:13 free 'void (void *)' extern
| |-ParmVarDecl 0xd62d18 <col:19, col:25> col:25 __ptr 'void *'
| `-NoThrowAttr 0xd62e80 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd62f80 </usr/include/alloca.h:32:14> col:14 implicit alloca 'void *(unsigned long)' extern
| `-ParmVarDecl 0xd63020 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xd63090 prev 0xd62f80 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/alloca.h:32:14 alloca 'void *(unsigned long)' extern
| |-ParmVarDecl 0xd62ee8 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| `-NoThrowAttr 0xd63138 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd63238 </usr/include/stdlib.h:574:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdlib.h:574:14 valloc 'void *(size_t)' extern
| |-ParmVarDecl 0xd631a0 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0xd632e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0xd63338 <line:208:47> malloc
|-FunctionDecl 0xd63610 </usr/include/stdlib.h:580:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:580:12 posix_memalign 'int (void **, size_t, size_t)' extern
| |-ParmVarDecl 0xd633a0 <col:28, col:35> col:35 __memptr 'void **'
| |-ParmVarDecl 0xd63418 <col:45, col:52> col:52 __alignment 'size_t':'unsigned long'
| |-ParmVarDecl 0xd63490 <col:65, col:72> col:72 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0xd636c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd63720 <line:293:44, /usr/include/stdlib.h:581:27> 1
|-FunctionDecl 0xd63880 <line:586:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdlib.h:586:14 aligned_alloc 'void *(size_t, size_t)' extern
| |-ParmVarDecl 0xd63768 <col:29, col:36> col:36 __alignment 'size_t':'unsigned long'
| |-ParmVarDecl 0xd637e0 <col:49, col:56> col:56 __size 'size_t':'unsigned long'
| |-NoThrowAttr 0xd63930 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0xd63988 <line:208:47> malloc
|-FunctionDecl 0xd63a48 </usr/include/stdlib.h:591:13> col:13 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0xd63ae8 prev 0xd63a48 <col:1, col:63> col:13 abort 'void (void) __attribute__((noreturn))' extern
| `-NoThrowAttr 0xd63b88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd63da0 </usr/include/stdlib.h:595:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:595:12 atexit 'int (void (*)(void))' extern
| |-ParmVarDecl 0xd63c88 <col:20, col:40> col:27 __func 'void (*)(void)'
| |-NoThrowAttr 0xd63e48 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd63ea0 <line:293:44, /usr/include/stdlib.h:595:64> 1
|-FunctionDecl 0xd64038 <line:603:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:603:12 at_quick_exit 'int (void (*)(void))' extern
| |-ParmVarDecl 0xd63f80 <col:27, col:47> col:34 __func 'void (*)(void)'
| |-NoThrowAttr 0xd640e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd64138 <line:293:44, /usr/include/stdlib.h:603:71> 1
|-FunctionDecl 0xd64560 <line:610:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:610:12 on_exit 'int (void (*)(int, void *), void *)' extern
| |-ParmVarDecl 0xd64388 <col:21, col:62> col:28 __func 'void (*)(int, void *)'
| |-ParmVarDecl 0xd64408 <col:65, col:71> col:71 __arg 'void *'
| |-NoThrowAttr 0xd64610 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd64668 <line:293:44, /usr/include/stdlib.h:611:27> 1
|-FunctionDecl 0xd64788 <line:617:13> col:13 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0xd64828 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0xd64898 prev 0xd64788 <col:1, col:70> col:13 exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0xd646c0 <col:19, col:23> col:23 __status 'int'
| `-NoThrowAttr 0xd64940 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd64a40 </usr/include/stdlib.h:623:1, col:76> col:13 quick_exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0xd649b0 <col:25, col:29> col:29 __status 'int'
| `-NoThrowAttr 0xd64ae8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd64be8 </usr/include/stdlib.h:629:13> col:13 implicit _Exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0xd64c88 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0xd64cf8 prev 0xd64be8 <col:1, col:71> col:13 _Exit 'void (int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0xd64b58 <col:20, col:24> col:24 __status 'int'
| `-NoThrowAttr 0xd64da0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd64ec8 </usr/include/stdlib.h:634:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:634:14 getenv 'char *(const char *)' extern
| |-ParmVarDecl 0xd64e10 <col:22, col:34> col:34 __name 'const char *'
| |-NoThrowAttr 0xd64f70 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd64fc8 <line:293:44, /usr/include/stdlib.h:634:63> 1
|-FunctionDecl 0xd65110 <line:647:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:647:12 putenv 'int (char *)' extern
| |-ParmVarDecl 0xd65020 <col:20, col:26> col:26 __string 'char *'
| |-NoThrowAttr 0xd651b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd65210 <line:293:44, /usr/include/stdlib.h:647:57> 1
|-FunctionDecl 0xd65470 <line:653:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:653:12 setenv 'int (const char *, const char *, int)' extern
| |-ParmVarDecl 0xd65260 <col:20, col:32> col:32 __name 'const char *'
| |-ParmVarDecl 0xd652e0 <col:40, col:52> col:52 __value 'const char *'
| |-ParmVarDecl 0xd65360 <col:61, col:65> col:65 __replace 'int'
| |-NoThrowAttr 0xd65528 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd665d0 <line:293:44, /usr/include/stdlib.h:654:27> 2
|-FunctionDecl 0xd666d8 <line:657:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:657:12 unsetenv 'int (const char *)' extern
| |-ParmVarDecl 0xd66620 <col:22, col:34> col:34 __name 'const char *'
| |-NoThrowAttr 0xd66780 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd667d8 <line:293:44, /usr/include/stdlib.h:657:63> 1
|-FunctionDecl 0xd668b8 <line:664:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:664:12 clearenv 'int (void)' extern
| `-NoThrowAttr 0xd66958 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd66a80 </usr/include/stdlib.h:675:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:675:14 mktemp 'char *(char *)' extern
| |-ParmVarDecl 0xd669c8 <col:22, col:28> col:28 __template 'char *'
| |-NoThrowAttr 0xd66b28 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd66b80 <line:293:44, /usr/include/stdlib.h:675:61> 1
|-FunctionDecl 0xd66c88 <line:688:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:688:12 mkstemp 'int (char *)' extern
| |-ParmVarDecl 0xd66bd0 <col:21, col:27> col:27 __template 'char *'
| `-NonNullAttr 0xd66d30 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:688:52> 1
|-FunctionDecl 0xd66f30 <line:710:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:710:12 mkstemps 'int (char *, int)' extern
| |-ParmVarDecl 0xd66db0 <col:22, col:28> col:28 __template 'char *'
| |-ParmVarDecl 0xd66e30 <col:40, col:44> col:44 __suffixlen 'int'
| `-NonNullAttr 0xd66fe0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:710:70> 1
|-FunctionDecl 0xd67118 <line:731:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:731:14 mkdtemp 'char *(char *)' extern
| |-ParmVarDecl 0xd67060 <col:23, col:29> col:29 __template 'char *'
| |-NoThrowAttr 0xd671c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd67218 <line:293:44, /usr/include/stdlib.h:731:62> 1
|-FunctionDecl 0xd67308 <line:784:1, col:41> col:12 system 'int (const char *)' extern
| `-ParmVarDecl 0xd67270 <col:20, col:32> col:32 __command 'const char *'
|-FunctionDecl 0xd675b0 <line:800:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:800:14 realpath 'char *(const char *restrict, char *restrict)' extern
| |-ParmVarDecl 0xd673c8 <col:24, col:47> col:47 __name 'const char *restrict'
| |-ParmVarDecl 0xd67448 <line:801:10, col:27> col:27 __resolved 'char *restrict'
| `-NoThrowAttr 0xd67660 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-TypedefDecl 0xd678d0 </usr/include/stdlib.h:808:1, col:57> col:15 referenced __compar_fn_t 'int (*)(const void *, const void *)'
| `-PointerType 0xd67860 'int (*)(const void *, const void *)'
|   `-ParenType 0xd67800 'int (const void *, const void *)' sugar
|     `-FunctionProtoType 0xd677c0 'int (const void *, const void *)' cdecl
|       |-BuiltinType 0xc20e40 'int'
|       |-PointerType 0xcc5660 'const void *'
|       | `-QualType 0xc20da1 'const void' const
|       |   `-BuiltinType 0xc20da0 'void'
|       `-PointerType 0xcc5660 'const void *'
|         `-QualType 0xc20da1 'const void' const
|           `-BuiltinType 0xc20da0 'void'
|-FunctionDecl 0xd67d10 <line:820:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:820:14 bsearch 'void *(const void *, const void *, size_t, size_t, __compar_fn_t)' extern
| |-ParmVarDecl 0xd67940 <col:23, col:35> col:35 __key 'const void *'
| |-ParmVarDecl 0xd679c0 <col:42, col:54> col:54 __base 'const void *'
| |-ParmVarDecl 0xd67a38 <line:821:9, col:16> col:16 __nmemb 'size_t':'unsigned long'
| |-ParmVarDecl 0xd67ab0 <col:25, col:32> col:32 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0xd67b50 <col:40, col:54> col:54 __compar '__compar_fn_t':'int (*)(const void *, const void *)'
| `-NonNullAttr 0xd67dd8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:822:25> 1 2 5
|-FunctionDecl 0xd68158 <line:830:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:830:13 qsort 'void (void *, size_t, size_t, __compar_fn_t)' extern
| |-ParmVarDecl 0xd67e68 <col:20, col:26> col:26 __base 'void *'
| |-ParmVarDecl 0xd67ee0 <col:34, col:41> col:41 __nmemb 'size_t':'unsigned long'
| |-ParmVarDecl 0xd67f58 <col:50, col:57> col:57 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0xd67fd0 <line:831:6, col:20> col:20 __compar '__compar_fn_t':'int (*)(const void *, const void *)'
| `-NonNullAttr 0xd68218 </usr/include/x86_64-linux-gnu/sys/cdefs.h:293:44, /usr/include/stdlib.h:831:46> 1 4
|-FunctionDecl 0xd68338 <line:840:12> col:12 implicit abs 'int (int)' extern
| |-ParmVarDecl 0xd683d8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0xd68448 <col:12> Implicit
| `-ConstAttr 0xd684a0 <col:12> Implicit
|-FunctionDecl 0xd684c8 prev 0xd68338 <col:1, col:60> col:12 abs 'int (int)' extern
| |-ParmVarDecl 0xd682a0 <col:17, col:21> col:21 __x 'int'
| |-NoThrowAttr 0xd68570 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0xd07fa0 </usr/include/stdlib.h:840:50>
|-FunctionDecl 0xd080b0 <line:841:17> col:17 implicit labs 'long (long)' extern
| |-ParmVarDecl 0xd08150 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0xd081c0 <col:17> Implicit
| `-ConstAttr 0xd08218 <col:17> Implicit
|-FunctionDecl 0xd08240 prev 0xd080b0 <col:1, col:71> col:17 labs 'long (long)' extern
| |-ParmVarDecl 0xd07fe0 <col:23, col:32> col:32 __x 'long'
| |-NoThrowAttr 0xd082e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0xd08340 </usr/include/stdlib.h:841:61>
|-FunctionDecl 0xd08450 <line:844:36> col:36 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0xd084f0 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0xd08560 <col:36> Implicit
| `-ConstAttr 0xd085b8 <col:36> Implicit
|-FunctionDecl 0xd085e0 prev 0xd08450 <col:15, line:845:40> line:844:36 llabs 'long long (long long)' extern
| |-ParmVarDecl 0xd08380 <col:43, col:57> col:57 __x 'long long'
| |-NoThrowAttr 0xd08688 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0xd086e0 </usr/include/stdlib.h:845:30>
|-FunctionDecl 0xd088d8 <line:852:1, line:853:40> line:852:14 div 'div_t (int, int)' extern
| |-ParmVarDecl 0xd08748 <col:19, col:23> col:23 __numer 'int'
| |-ParmVarDecl 0xd087c8 <col:32, col:36> col:36 __denom 'int'
| |-NoThrowAttr 0xd08988 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0xd089e0 </usr/include/stdlib.h:853:30>
|-FunctionDecl 0xd08bd8 <line:854:1, line:855:40> line:854:15 ldiv 'ldiv_t (long, long)' extern
| |-ParmVarDecl 0xd08a48 <col:21, col:30> col:30 __numer 'long'
| |-ParmVarDecl 0xd08ac8 <col:39, col:48> col:48 __denom 'long'
| |-NoThrowAttr 0xd08c88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0xd08ce0 </usr/include/stdlib.h:855:30>
|-FunctionDecl 0xd6b5e0 <line:858:15, line:860:40> line:858:30 lldiv 'lldiv_t (long long, long long)' extern
| |-ParmVarDecl 0xd08d48 <col:37, col:51> col:51 __numer 'long long'
| |-ParmVarDecl 0xd08dc8 <line:859:9, col:23> col:23 __denom 'long long'
| |-NoThrowAttr 0xd6b690 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0xd6b6e8 </usr/include/stdlib.h:860:30>
|-FunctionDecl 0xd6ba30 <line:872:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:872:14 ecvt 'char *(double, int, int *restrict, int *restrict)' extern
| |-ParmVarDecl 0xd6b728 <col:20, col:27> col:27 __value 'double'
| |-ParmVarDecl 0xd6b7a8 <col:36, col:40> col:40 __ndigit 'int'
| |-ParmVarDecl 0xd6b828 <col:50, col:66> col:66 __decpt 'int *restrict'
| |-ParmVarDecl 0xd6b8a8 <line:873:6, col:22> col:22 __sign 'int *restrict'
| |-NoThrowAttr 0xd6baf0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd6bb48 <line:293:44, /usr/include/stdlib.h:873:54> 3 4
|-FunctionDecl 0xd6be10 <line:878:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:878:14 fcvt 'char *(double, int, int *restrict, int *restrict)' extern
| |-ParmVarDecl 0xd6bba0 <col:20, col:27> col:27 __value 'double'
| |-ParmVarDecl 0xd6bc20 <col:36, col:40> col:40 __ndigit 'int'
| |-ParmVarDecl 0xd6bca0 <col:50, col:66> col:66 __decpt 'int *restrict'
| |-ParmVarDecl 0xd6bd20 <line:879:6, col:22> col:22 __sign 'int *restrict'
| |-NoThrowAttr 0xd6bed0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd6bf28 <line:293:44, /usr/include/stdlib.h:879:54> 3 4
|-FunctionDecl 0xd6c190 <line:884:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:884:14 gcvt 'char *(double, int, char *)' extern
| |-ParmVarDecl 0xd6bf80 <col:20, col:27> col:27 __value 'double'
| |-ParmVarDecl 0xd6c000 <col:36, col:40> col:40 __ndigit 'int'
| |-ParmVarDecl 0xd6c080 <col:50, col:56> col:56 __buf 'char *'
| |-NoThrowAttr 0xd6c248 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd6c2a0 <line:293:44, /usr/include/stdlib.h:885:27> 3
|-FunctionDecl 0xd6c638 <line:890:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:890:14 qecvt 'char *(long double, int, int *restrict, int *restrict)' extern
| |-ParmVarDecl 0xd6c2f0 <col:21, col:33> col:33 __value 'long double'
| |-ParmVarDecl 0xd6c370 <col:42, col:46> col:46 __ndigit 'int'
| |-ParmVarDecl 0xd6c3f0 <line:891:7, col:23> col:23 __decpt 'int *restrict'
| |-ParmVarDecl 0xd6c470 <col:32, col:48> col:48 __sign 'int *restrict'
| |-NoThrowAttr 0xd6c6f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd6c750 <line:293:44, /usr/include/stdlib.h:892:30> 3 4
|-FunctionDecl 0xd6ca10 <line:893:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:893:14 qfcvt 'char *(long double, int, int *restrict, int *restrict)' extern
| |-ParmVarDecl 0xd6c7a0 <col:21, col:33> col:33 __value 'long double'
| |-ParmVarDecl 0xd6c820 <col:42, col:46> col:46 __ndigit 'int'
| |-ParmVarDecl 0xd6c8a0 <line:894:7, col:23> col:23 __decpt 'int *restrict'
| |-ParmVarDecl 0xd6c920 <col:32, col:48> col:48 __sign 'int *restrict'
| |-NoThrowAttr 0xd6cad0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd6cb28 <line:293:44, /usr/include/stdlib.h:895:30> 3 4
|-FunctionDecl 0xd6cd90 <line:896:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:896:14 qgcvt 'char *(long double, int, char *)' extern
| |-ParmVarDecl 0xd6cb80 <col:21, col:33> col:33 __value 'long double'
| |-ParmVarDecl 0xd6cc00 <col:42, col:46> col:46 __ndigit 'int'
| |-ParmVarDecl 0xd6cc80 <col:56, col:62> col:62 __buf 'char *'
| |-NoThrowAttr 0xd6ce48 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd6cea0 <line:293:44, /usr/include/stdlib.h:897:27> 3
|-FunctionDecl 0xd6d340 <line:902:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:902:12 ecvt_r 'int (double, int, int *restrict, int *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0xd6cef0 <col:20, col:27> col:27 __value 'double'
| |-ParmVarDecl 0xd6cf70 <col:36, col:40> col:40 __ndigit 'int'
| |-ParmVarDecl 0xd6cff0 <col:50, col:66> col:66 __decpt 'int *restrict'
| |-ParmVarDecl 0xd6d070 <line:903:6, col:22> col:22 __sign 'int *restrict'
| |-ParmVarDecl 0xd6d0f0 <col:30, col:47> col:47 __buf 'char *restrict'
| |-ParmVarDecl 0xd6d168 <line:904:6, col:13> col:13 __len 'size_t':'unsigned long'
| |-NoThrowAttr 0xd6d410 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd6d468 <line:293:44, /usr/include/stdlib.h:904:47> 3 4 5
|-FunctionDecl 0xd6e8a8 <line:905:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:905:12 fcvt_r 'int (double, int, int *restrict, int *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0xd6d4c8 <col:20, col:27> col:27 __value 'double'
| |-ParmVarDecl 0xd6d548 <col:36, col:40> col:40 __ndigit 'int'
| |-ParmVarDecl 0xd6e610 <col:50, col:66> col:66 __decpt 'int *restrict'
| |-ParmVarDecl 0xd6e690 <line:906:6, col:22> col:22 __sign 'int *restrict'
| |-ParmVarDecl 0xd6e710 <col:30, col:47> col:47 __buf 'char *restrict'
| |-ParmVarDecl 0xd6e788 <line:907:6, col:13> col:13 __len 'size_t':'unsigned long'
| |-NoThrowAttr 0xd6e978 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd6e9d0 <line:293:44, /usr/include/stdlib.h:907:47> 3 4 5
|-FunctionDecl 0xd6ee80 <line:909:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:909:12 qecvt_r 'int (long double, int, int *restrict, int *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0xd6ea28 <col:21, col:33> col:33 __value 'long double'
| |-ParmVarDecl 0xd6eaa8 <col:42, col:46> col:46 __ndigit 'int'
| |-ParmVarDecl 0xd6eb28 <line:910:7, col:23> col:23 __decpt 'int *restrict'
| |-ParmVarDecl 0xd6eba8 <col:32, col:48> col:48 __sign 'int *restrict'
| |-ParmVarDecl 0xd6ec28 <line:911:7, col:24> col:24 __buf 'char *restrict'
| |-ParmVarDecl 0xd6eca0 <col:31, col:38> col:38 __len 'size_t':'unsigned long'
| |-NoThrowAttr 0xd6ef50 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd6efa8 <line:293:44, /usr/include/stdlib.h:912:33> 3 4 5
|-FunctionDecl 0xd6f3a0 <line:913:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:913:12 qfcvt_r 'int (long double, int, int *restrict, int *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0xd6f008 <col:21, col:33> col:33 __value 'long double'
| |-ParmVarDecl 0xd6f088 <col:42, col:46> col:46 __ndigit 'int'
| |-ParmVarDecl 0xd6f108 <line:914:7, col:23> col:23 __decpt 'int *restrict'
| |-ParmVarDecl 0xd6f188 <col:32, col:48> col:48 __sign 'int *restrict'
| |-ParmVarDecl 0xd6f208 <line:915:7, col:24> col:24 __buf 'char *restrict'
| |-ParmVarDecl 0xd6f280 <col:31, col:38> col:38 __len 'size_t':'unsigned long'
| |-NoThrowAttr 0xd6f470 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd6f4c8 <line:293:44, /usr/include/stdlib.h:916:33> 3 4 5
|-FunctionDecl 0xd6f6d0 <line:922:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:922:12 mblen 'int (const char *, size_t)' extern
| |-ParmVarDecl 0xd6f528 <col:19, col:31> col:31 __s 'const char *'
| |-ParmVarDecl 0xd6f5a0 <col:36, col:43> col:43 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0xd6f780 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd6fa60 </usr/include/stdlib.h:925:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:925:12 mbtowc 'int (wchar_t *restrict, const char *restrict, size_t)' extern
| |-ParmVarDecl 0xd6f838 <col:20, col:40> col:40 __pwc 'wchar_t *restrict'
| |-ParmVarDecl 0xd6f8b8 <line:926:6, col:29> col:29 __s 'const char *restrict'
| |-ParmVarDecl 0xd6f930 <col:34, col:41> col:41 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0xd6fb18 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd6fce0 </usr/include/stdlib.h:929:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:929:12 wctomb 'int (char *, wchar_t)' extern
| |-ParmVarDecl 0xd6fb88 <col:20, col:26> col:26 __s 'char *'
| |-ParmVarDecl 0xd6fc00 <col:31, col:39> col:39 __wchar 'wchar_t':'int'
| `-NoThrowAttr 0xd6fd90 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd70018 </usr/include/stdlib.h:933:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:933:15 mbstowcs 'size_t (wchar_t *restrict, const char *restrict, size_t)' extern
| |-ParmVarDecl 0xd6fdf8 <col:25, col:46> col:46 __pwcs 'wchar_t *restrict'
| |-ParmVarDecl 0xd6fe78 <line:934:4, col:27> col:27 __s 'const char *restrict'
| |-ParmVarDecl 0xd6fef0 <col:32, col:39> col:39 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0xd700d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd70388 </usr/include/stdlib.h:936:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdlib.h:936:15 wcstombs 'size_t (char *restrict, const wchar_t *restrict, size_t)' extern
| |-ParmVarDecl 0xd70140 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0xd701e8 <line:937:4, col:30> col:30 __pwcs 'const wchar_t *restrict'
| |-ParmVarDecl 0xd70260 <col:38, col:45> col:45 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0xd70440 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xd70568 </usr/include/stdlib.h:946:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:946:12 rpmatch 'int (const char *)' extern
| |-ParmVarDecl 0xd704b0 <col:21, col:33> col:33 __response 'const char *'
| |-NoThrowAttr 0xd70630 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd70688 <line:293:44, /usr/include/stdlib.h:946:66> 1
|-FunctionDecl 0xd709a0 <line:957:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:957:12 getsubopt 'int (char **restrict, char *const *restrict, char **restrict)' extern
| |-ParmVarDecl 0xd706e0 <col:23, col:41> col:41 __optionp 'char **restrict'
| |-ParmVarDecl 0xd70790 <line:958:9, col:33> col:33 __tokens 'char *const *restrict'
| |-ParmVarDecl 0xd70810 <line:959:9, col:27> col:27 __valuep 'char **restrict'
| |-NoThrowAttr 0xd70a58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd70ab0 <line:293:44, /usr/include/stdlib.h:960:33> 1 2 3
|-FunctionDecl 0xd70d30 <line:1003:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/stdlib.h:1003:12 getloadavg 'int (double *, int)' extern
| |-ParmVarDecl 0xd70b70 <col:24, col:41> col:31 __loadavg 'double *':'double *'
| |-ParmVarDecl 0xd70bf0 <col:44, col:48> col:48 __nelem 'int'
| |-NoThrowAttr 0xd70de0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xd70e38 <line:293:44, /usr/include/stdlib.h:1004:27> 1
|-TypedefDecl 0xd70e90 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:35:1, col:26> col:26 ptrdiff_t 'long'
| `-BuiltinType 0xc20e60 'long'
|-RecordDecl 0xd70ee8 </usr/lib/llvm-10/lib/clang/10.0.0/include/__stddef_max_align_t.h:19:9, line:24:1> line:19:9 struct definition
| |-FieldDecl 0xd70fe0 <line:20:3, col:13> col:13 __clang_max_align_nonce1 'long long'
| | `-AlignedAttr 0xd71048 <line:21:22, col:56> aligned
| |   `-ConstantExpr 0xd71030 <col:34, col:55> 'unsigned long'
| |     `-UnaryExprOrTypeTraitExpr 0xd70fa8 <col:34, col:55> 'unsigned long' __alignof 'long long'
| `-FieldDecl 0xd710f8 <line:22:3, col:15> col:15 __clang_max_align_nonce2 'long double'
|   `-AlignedAttr 0xd71160 <line:23:22, col:58> aligned
|     `-ConstantExpr 0xd71148 <col:34, col:57> 'unsigned long'
|       `-UnaryExprOrTypeTraitExpr 0xd710c0 <col:34, col:57> 'unsigned long' __alignof 'long double'
|-TypedefDecl 0xd71218 <line:19:1, line:24:3> col:3 max_align_t 'struct max_align_t':'max_align_t'
| `-ElaboratedType 0xd711c0 'struct max_align_t' sugar
|   `-RecordType 0xd70f70 'max_align_t'
|     `-Record 0xd70ee8 ''
|-FunctionDecl 0xd71350 </usr/include/errno.h:37:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:233:56> /usr/include/errno.h:37:13 __errno_location 'int *(void)' extern
| |-NoThrowAttr 0xd713f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0xd71448 <line:233:46>
|-TypedefDecl 0xd71488 <main/securec.h:66:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0xc20e40 'int'
|-FunctionDecl 0xd8e038 <line:112:21, line:131:81> col:25 memset_s 'errno_t (void *, size_t, int, size_t)' extern
| |-ParmVarDecl 0xd71548 <col:34, col:40> col:40 dest 'void *'
| |-ParmVarDecl 0xd715c0 <col:46, col:53> col:53 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd8de78 <col:62, col:66> col:66 c 'int'
| |-ParmVarDecl 0xd8def0 <col:69, col:76> col:76 count 'size_t':'unsigned long'
| `-FullComment 0xe04ac0 <line:124:6, line:129:63>
|   |-ParagraphComment 0xe046b0 <line:124:6, line:125:6>
|   | |-TextComment 0xe045e0 <line:124:6> Text=" "
|   | |-InlineCommandComment 0xe04630 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe04650 <col:19, col:168> Text=":The memset_s function copies the value of c (converted to an unsigned char) into each of the first count characters of the object pointed to by dest."
|   | `-TextComment 0xe04670 <line:125:6> Text=" "
|   |-ParamCommandComment 0xe046d0 <col:7, line:126:6> [in] implicitly Param="dest" ParamIndex=0
|   | `-ParagraphComment 0xe04780 <line:125:18, line:126:6>
|   |   |-TextComment 0xe04730 <line:125:18, col:40> Text=" - destination  address"
|   |   `-TextComment 0xe04750 <line:126:6> Text=" "
|   |-ParamCommandComment 0xe047a0 <col:7, line:127:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe04850 <line:126:21, line:127:6>
|   |   |-TextComment 0xe04800 <line:126:21, col:62> Text=" -The maximum length of destination buffer"
|   |   `-TextComment 0xe04820 <line:127:6> Text=" "
|   |-ParamCommandComment 0xe04870 <col:7, line:128:6> [in] implicitly Param="c" ParamIndex=2
|   | `-ParagraphComment 0xe04920 <line:127:15, line:128:6>
|   |   |-TextComment 0xe048d0 <line:127:15, col:39> Text=" - the value to be copied"
|   |   `-TextComment 0xe048f0 <line:128:6> Text=" "
|   |-ParamCommandComment 0xe04940 <col:7, line:129:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0xe049f0 <line:128:19, line:129:6>
|   |   |-TextComment 0xe049a0 <line:128:19, col:58> Text=" -copies first count characters of  dest"
|   |   `-TextComment 0xe049c0 <line:129:6> Text=" "
|   `-BlockCommandComment 0xe04a10 <col:7, col:63> Name="return"
|     `-ParagraphComment 0xe04a70 <col:14, col:63>
|       `-TextComment 0xe04a40 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0xd8e3e8 <line:112:21, line:145:98> col:25 wmemcpy_s 'errno_t (wchar_t *, size_t, const wchar_t *, size_t)' extern
| |-ParmVarDecl 0xd8e138 <col:35, col:44> col:44 dest 'wchar_t *'
| |-ParmVarDecl 0xd8e1b0 <col:50, col:57> col:57 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd8e228 <col:66, col:81> col:81 src 'const wchar_t *'
| `-ParmVarDecl 0xd8e2a0 <col:86, col:93> col:93 count 'size_t':'unsigned long'
|-FunctionDecl 0xd8e7a8 <line:112:21, line:155:92> col:25 memmove_s 'errno_t (void *, size_t, const void *, size_t)' extern
| |-ParmVarDecl 0xd8e4f0 <col:35, col:41> col:41 dest 'void *'
| |-ParmVarDecl 0xd8e568 <col:47, col:54> col:54 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd8e5e8 <col:63, col:75> col:75 src 'const void *'
| |-ParmVarDecl 0xd8e660 <col:80, col:87> col:87 count 'size_t':'unsigned long'
| `-FullComment 0xe09850 <line:148:6, line:153:63>
|   |-ParagraphComment 0xe04bd0 <line:148:6, line:149:6>
|   | |-TextComment 0xe04b30 <line:148:6> Text=" "
|   | |-InlineCommandComment 0xe04b50 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe04b70 <col:19, col:131> Text=":The memmove_s function copies n characters from the object pointed to by src into the object pointed to by dest."
|   | `-TextComment 0xe04b90 <line:149:6> Text=" "
|   |-ParamCommandComment 0xe04bf0 <col:7, line:150:6> [in] implicitly Param="dest" ParamIndex=0
|   | `-ParagraphComment 0xe04ca0 <line:149:18, line:150:6>
|   |   |-TextComment 0xe04c50 <line:149:18, col:40> Text=" - destination  address"
|   |   `-TextComment 0xe04c70 <line:150:6> Text=" "
|   |-ParamCommandComment 0xe04cc0 <col:7, line:151:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe04d70 <line:150:21, line:151:6>
|   |   |-TextComment 0xe04d20 <line:150:21, col:62> Text=" -The maximum length of destination buffer"
|   |   `-TextComment 0xe04d40 <line:151:6> Text=" "
|   |-ParamCommandComment 0xe04d90 <col:7, line:152:6> [in] implicitly Param="src" ParamIndex=2
|   | `-ParagraphComment 0xe04e40 <line:151:17, line:152:6>
|   |   |-TextComment 0xe04df0 <line:151:17, col:33> Text=" -source  address"
|   |   `-TextComment 0xe04e10 <line:152:6> Text=" "
|   |-ParamCommandComment 0xe096d0 <col:7, line:153:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0xe09780 <line:152:19, line:153:6>
|   |   |-TextComment 0xe09730 <line:152:19, col:62> Text=" -copies count wide characters from the  src"
|   |   `-TextComment 0xe09750 <line:153:6> Text=" "
|   `-BlockCommandComment 0xe097a0 <col:7, col:63> Name="return"
|     `-ParagraphComment 0xe09800 <col:14, col:63>
|       `-TextComment 0xe097d0 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0xd8eab8 <line:112:21, line:165:99> col:25 wmemmove_s 'errno_t (wchar_t *, size_t, const wchar_t *, size_t)' extern
| |-ParmVarDecl 0xd8e8a8 <col:36, col:45> col:45 dest 'wchar_t *'
| |-ParmVarDecl 0xd8e920 <col:51, col:58> col:58 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd8e998 <col:67, col:82> col:82 src 'const wchar_t *'
| |-ParmVarDecl 0xd8ea10 <col:87, col:94> col:94 count 'size_t':'unsigned long'
| `-FullComment 0xe09d70 <line:158:6, line:163:63>
|   |-ParagraphComment 0xe09960 <line:158:6, line:159:6>
|   | |-TextComment 0xe098c0 <line:158:6> Text=" "
|   | |-InlineCommandComment 0xe098e0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe09900 <col:19, col:148> Text=":The wmemmove_s function copies n successive wide characters from the object pointed to by src into the object pointed to by dest."
|   | `-TextComment 0xe09920 <line:159:6> Text=" "
|   |-ParamCommandComment 0xe09980 <col:7, line:160:6> [in] implicitly Param="dest" ParamIndex=0
|   | `-ParagraphComment 0xe09a30 <line:159:18, line:160:6>
|   |   |-TextComment 0xe099e0 <line:159:18, col:40> Text=" - destination  address"
|   |   `-TextComment 0xe09a00 <line:160:6> Text=" "
|   |-ParamCommandComment 0xe09a50 <col:7, line:161:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe09b00 <line:160:21, line:161:6>
|   |   |-TextComment 0xe09ab0 <line:160:21, col:62> Text=" -The maximum length of destination buffer"
|   |   `-TextComment 0xe09ad0 <line:161:6> Text=" "
|   |-ParamCommandComment 0xe09b20 <col:7, line:162:6> [in] implicitly Param="src" ParamIndex=2
|   | `-ParagraphComment 0xe09bd0 <line:161:17, line:162:6>
|   |   |-TextComment 0xe09b80 <line:161:17, col:33> Text=" -source  address"
|   |   `-TextComment 0xe09ba0 <line:162:6> Text=" "
|   |-ParamCommandComment 0xe09bf0 <col:7, line:163:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0xe09ca0 <line:162:19, line:163:6>
|   |   |-TextComment 0xe09c50 <line:162:19, col:62> Text=" -copies count wide characters from the  src"
|   |   `-TextComment 0xe09c70 <line:163:6> Text=" "
|   `-BlockCommandComment 0xe09cc0 <col:7, col:63> Name="return"
|     `-ParagraphComment 0xe09d20 <col:14, col:63>
|       `-TextComment 0xe09cf0 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0xd8ee70 <line:112:21, line:174:89> col:25 wcscpy_s 'errno_t (wchar_t *, size_t, const wchar_t *)' extern
| |-ParmVarDecl 0xd8ebb8 <col:34, col:43> col:43 strDest 'wchar_t *'
| |-ParmVarDecl 0xd8ec30 <col:52, col:59> col:59 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd8eca8 <col:68, col:83> col:83 strSrc 'const wchar_t *'
| `-FullComment 0xe0a1c0 <line:168:6, line:172:63>
|   |-ParagraphComment 0xe09e80 <line:168:6, line:169:6>
|   | |-TextComment 0xe09de0 <line:168:6> Text=" "
|   | |-InlineCommandComment 0xe09e00 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe09e20 <col:19, col:168> Text=":The wcscpy_s function copies the wide string pointed to by strSrc (including theterminating null wide character) into the array pointed to by strDest"
|   | `-TextComment 0xe09e40 <line:169:6> Text=" "
|   |-ParamCommandComment 0xe09ea0 <col:7, line:170:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0xe09f50 <line:169:21, line:170:6>
|   |   |-TextComment 0xe09f00 <line:169:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0xe09f20 <line:170:6> Text=" "
|   |-ParamCommandComment 0xe09f70 <col:7, line:171:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe0a020 <line:170:21, line:171:6>
|   |   |-TextComment 0xe09fd0 <line:170:21, col:62> Text=" -The maximum length of destination buffer"
|   |   `-TextComment 0xe09ff0 <line:171:6> Text=" "
|   |-ParamCommandComment 0xe0a040 <col:7, line:172:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0xe0a0f0 <line:171:20, line:172:6>
|   |   |-TextComment 0xe0a0a0 <line:171:20, col:36> Text=" -source  address"
|   |   `-TextComment 0xe0a0c0 <line:172:6> Text=" "
|   `-BlockCommandComment 0xe0a110 <col:7, col:63> Name="return"
|     `-ParagraphComment 0xe0a170 <col:14, col:63>
|       `-TextComment 0xe0a140 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0xd8f178 <line:112:21, line:185:104> col:25 wcsncpy_s 'errno_t (wchar_t *, size_t, const wchar_t *, size_t)' extern
| |-ParmVarDecl 0xd8ef68 <col:35, col:44> col:44 strDest 'wchar_t *'
| |-ParmVarDecl 0xd8efe0 <col:53, col:60> col:60 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd8f058 <col:69, col:84> col:84 strSrc 'const wchar_t *'
| |-ParmVarDecl 0xd8f0d0 <col:92, col:99> col:99 count 'size_t':'unsigned long'
| `-FullComment 0xe0a730 <line:177:6, line:183:63>
|   |-ParagraphComment 0xe0a300 <line:177:6, line:179:6>
|   | |-TextComment 0xe0a230 <line:177:6> Text=" "
|   | |-InlineCommandComment 0xe0a250 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0a270 <col:19, col:143> Text=":The wcsncpy_s function copies not more than n successive wide characters (not including the terminating null wide character)"
|   | |-TextComment 0xe0a290 <line:178:6, col:98> Text="                       from the array pointed to by strSrc to the array pointed to by strDest"
|   | `-TextComment 0xe0a2b0 <line:179:6> Text=" "
|   |-ParamCommandComment 0xe0a320 <col:7, line:180:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0xe0a3d0 <line:179:21, line:180:6>
|   |   |-TextComment 0xe0a380 <line:179:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0xe0a3a0 <line:180:6> Text=" "
|   |-ParamCommandComment 0xe0a3f0 <col:7, line:181:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe0a4a0 <line:180:21, line:181:6>
|   |   |-TextComment 0xe0a450 <line:180:21, col:104> Text=" -The maximum length of destination buffer(including the terminating wide character)"
|   |   `-TextComment 0xe0a470 <line:181:6> Text=" "
|   |-ParamCommandComment 0xe0a4c0 <col:7, line:182:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0xe0a570 <line:181:20, line:182:6>
|   |   |-TextComment 0xe0a520 <line:181:20, col:36> Text=" -source  address"
|   |   `-TextComment 0xe0a540 <line:182:6> Text=" "
|   |-ParamCommandComment 0xe0a590 <col:7, line:183:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0xe0a640 <line:182:19, line:183:6>
|   |   |-TextComment 0xe0a5f0 <line:182:19, col:62> Text=" -copies count wide characters from the  src"
|   |   `-TextComment 0xe0a610 <line:183:6> Text=" "
|   `-BlockCommandComment 0xe0a660 <col:7, col:63> Name="return"
|     `-ParagraphComment 0xe0a6e0 <col:14, col:63>
|       `-TextComment 0xe0a690 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0xd8f408 <line:112:21, line:195:89> col:25 wcscat_s 'errno_t (wchar_t *, size_t, const wchar_t *)' extern
| |-ParmVarDecl 0xd8f278 <col:34, col:43> col:43 strDest 'wchar_t *'
| |-ParmVarDecl 0xd8f2f0 <col:52, col:59> col:59 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd8f368 <col:68, col:83> col:83 strSrc 'const wchar_t *'
| `-FullComment 0xe0abb0 <line:188:6, line:193:63>
|   |-ParagraphComment 0xe0a870 <line:188:6, line:190:6>
|   | |-TextComment 0xe0a7a0 <line:188:6> Text=" "
|   | |-InlineCommandComment 0xe0a7c0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0a7e0 <col:19, col:143> Text=":The wcscat_s function appends a copy of the wide string pointed to by strSrc (including the terminating null wide character)"
|   | |-TextComment 0xe0a800 <line:189:6, col:77> Text="                     to the end of the wide string pointed to by strDest"
|   | `-TextComment 0xe0a820 <line:190:6> Text=" "
|   |-ParamCommandComment 0xe0a890 <col:7, line:191:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0xe0a940 <line:190:21, line:191:6>
|   |   |-TextComment 0xe0a8f0 <line:190:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0xe0a910 <line:191:6> Text=" "
|   |-ParamCommandComment 0xe0a960 <col:7, line:192:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe0aa10 <line:191:21, line:192:6>
|   |   |-TextComment 0xe0a9c0 <line:191:21, col:104> Text=" -The maximum length of destination buffer(including the terminating wide character)"
|   |   `-TextComment 0xe0a9e0 <line:192:6> Text=" "
|   |-ParamCommandComment 0xe0aa30 <col:7, line:193:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0xe0aae0 <line:192:20, line:193:6>
|   |   |-TextComment 0xe0aa90 <line:192:20, col:36> Text=" -source  address"
|   |   `-TextComment 0xe0aab0 <line:193:6> Text=" "
|   `-BlockCommandComment 0xe0ab00 <col:7, col:63> Name="return"
|     `-ParagraphComment 0xe0ab60 <col:14, col:63>
|       `-TextComment 0xe0ab30 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0xd8f708 <line:112:21, line:206:104> col:25 wcsncat_s 'errno_t (wchar_t *, size_t, const wchar_t *, size_t)' extern
| |-ParmVarDecl 0xd8f4f8 <col:35, col:44> col:44 strDest 'wchar_t *'
| |-ParmVarDecl 0xd8f570 <col:53, col:60> col:60 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd8f5e8 <col:69, col:84> col:84 strSrc 'const wchar_t *'
| |-ParmVarDecl 0xd8f660 <col:92, col:99> col:99 count 'size_t':'unsigned long'
| `-FullComment 0xe0b100 <line:198:6, line:204:63>
|   |-ParagraphComment 0xe0acf0 <line:198:6, line:200:6>
|   | |-TextComment 0xe0ac20 <line:198:6> Text=" "
|   | |-InlineCommandComment 0xe0ac40 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0ac60 <col:19, col:144> Text=":The wcsncat_s function appends not more than n successive wide characters (not including the terminating null wide character)"
|   | |-TextComment 0xe0ac80 <line:199:6, col:116> Text="                       from the array pointed to by strSrc to the end of the wide string pointed to by strDest."
|   | `-TextComment 0xe0aca0 <line:200:6> Text=" "
|   |-ParamCommandComment 0xe0ad10 <col:7, line:201:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0xe0adc0 <line:200:21, line:201:6>
|   |   |-TextComment 0xe0ad70 <line:200:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0xe0ad90 <line:201:6> Text=" "
|   |-ParamCommandComment 0xe0ade0 <col:7, line:202:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe0ae90 <line:201:21, line:202:6>
|   |   |-TextComment 0xe0ae40 <line:201:21, col:104> Text=" -The maximum length of destination buffer(including the terminating wide character)"
|   |   `-TextComment 0xe0ae60 <line:202:6> Text=" "
|   |-ParamCommandComment 0xe0aeb0 <col:7, line:203:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0xe0af60 <line:202:20, line:203:6>
|   |   |-TextComment 0xe0af10 <line:202:20, col:36> Text=" -source  address"
|   |   `-TextComment 0xe0af30 <line:203:6> Text=" "
|   |-ParamCommandComment 0xe0af80 <col:7, line:204:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0xe0b030 <line:203:19, line:204:6>
|   |   |-TextComment 0xe0afe0 <line:203:19, col:62> Text=" -copies count wide characters from the  src"
|   |   `-TextComment 0xe0b000 <line:204:6> Text=" "
|   `-BlockCommandComment 0xe0b050 <col:7, col:63> Name="return"
|     `-ParagraphComment 0xe0b0b0 <col:14, col:63>
|       `-TextComment 0xe0b080 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0xd8f9b8 <line:112:21, line:216:86> col:23 strtok_s 'char *(char *, const char *, char **)' extern
| |-ParmVarDecl 0xd8f810 <col:32, col:38> col:38 strToken 'char *'
| |-ParmVarDecl 0xd8f890 <col:48, col:60> col:60 strDelimit 'const char *'
| |-ParmVarDecl 0xd8f910 <col:72, col:79> col:79 context 'char **'
| `-FullComment 0xe0b580 <line:209:6, line:214:149>
|   |-ParagraphComment 0xe0b240 <line:209:6, line:211:6>
|   | |-TextComment 0xe0b170 <line:209:6> Text=" "
|   | |-InlineCommandComment 0xe0b190 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0b1b0 <col:19, col:172> Text=": The  strtok_s  function parses a string into a sequence of tokens,On the first call to strtok_s the string to be parsed should be specified in strToken."
|   | |-TextComment 0xe0b1d0 <line:210:6, col:110> Text="                       In each subsequent call that should parse the same string, strToken should be NULL"
|   | `-TextComment 0xe0b1f0 <line:211:6> Text=" "
|   |-ParamCommandComment 0xe0b260 <col:7, line:212:6> [in] implicitly Param="strToken" ParamIndex=0
|   | `-ParagraphComment 0xe0b310 <line:211:22, line:212:6>
|   |   |-TextComment 0xe0b2c0 <line:211:22, col:50> Text=" - the string to be delimited"
|   |   `-TextComment 0xe0b2e0 <line:212:6> Text=" "
|   |-ParamCommandComment 0xe0b330 <col:7, line:213:6> [in] implicitly Param="strDelimit" ParamIndex=1
|   | `-ParagraphComment 0xe0b3e0 <line:212:24, line:213:6>
|   |   |-TextComment 0xe0b390 <line:212:24, col:99> Text=" -specifies a set of characters that delimit the tokens in the parsed string"
|   |   `-TextComment 0xe0b3b0 <line:213:6> Text=" "
|   |-ParamCommandComment 0xe0b400 <col:7, line:214:6> [in] implicitly Param="context" ParamIndex=2
|   | `-ParagraphComment 0xe0b4b0 <line:213:21, line:214:6>
|   |   |-TextComment 0xe0b460 <line:213:21, col:100> Text=" -is a pointer to a char * variable that is used internally by strtok_s function"
|   |   `-TextComment 0xe0b480 <line:214:6> Text=" "
|   `-BlockCommandComment 0xe0b4d0 <col:7, col:149> Name="return"
|     `-ParagraphComment 0xe0b530 <col:14, col:149>
|       `-TextComment 0xe0b500 <col:14, col:149> Text=":returns a pointer to the first character of a token, or a null pointer if there is no token or there is a runtime-constraint violation."
|-FunctionDecl 0xd8fd28 <line:112:21, line:225:98> col:26 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)' extern
| |-ParmVarDecl 0xd8faa8 <col:35, col:44> col:44 strToken 'wchar_t *'
| |-ParmVarDecl 0xd8fb20 <col:54, col:69> col:69 strDelimit 'const wchar_t *'
| |-ParmVarDecl 0xd8fc00 <col:81, col:91> col:91 context 'wchar_t **'
| `-FullComment 0xe0b9e0 <line:219:6, line:223:149>
|   |-ParagraphComment 0xe0b690 <line:219:6, line:220:6>
|   | |-TextComment 0xe0b5f0 <line:219:6> Text=" "
|   | |-InlineCommandComment 0xe0b610 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0b630 <col:19, col:106> Text=": The  wcstok_s  function  is  the  wide-character  equivalent  of the strtok_s function"
|   | `-TextComment 0xe0b650 <line:220:6> Text=" "
|   |-ParamCommandComment 0xe0b6b0 <col:7, line:221:6> [in] implicitly Param="strToken" ParamIndex=0
|   | `-ParagraphComment 0xe0b770 <line:220:22, line:221:6>
|   |   |-TextComment 0xe0b720 <line:220:22, col:50> Text=" - the string to be delimited"
|   |   `-TextComment 0xe0b740 <line:221:6> Text=" "
|   |-ParamCommandComment 0xe0b790 <col:7, line:222:6> [in] implicitly Param="strDelimit" ParamIndex=1
|   | `-ParagraphComment 0xe0b840 <line:221:24, line:222:6>
|   |   |-TextComment 0xe0b7f0 <line:221:24, col:99> Text=" -specifies a set of characters that delimit the tokens in the parsed string"
|   |   `-TextComment 0xe0b810 <line:222:6> Text=" "
|   |-ParamCommandComment 0xe0b860 <col:7, line:223:6> [in] implicitly Param="context" ParamIndex=2
|   | `-ParagraphComment 0xe0b910 <line:222:21, line:223:6>
|   |   |-TextComment 0xe0b8c0 <line:222:21, col:100> Text=" -is a pointer to a char * variable that is used internally by strtok_s function"
|   |   `-TextComment 0xe0b8e0 <line:223:6> Text=" "
|   `-BlockCommandComment 0xe0b930 <col:7, col:149> Name="return"
|     `-ParagraphComment 0xe0b990 <col:14, col:149>
|       `-TextComment 0xe0b960 <col:14, col:149> Text=":returns a pointer to the first character of a token, or a null pointer if there is no token or there is a runtime-constraint violation."
|-FunctionDecl 0xd90068 <line:112:21, line:234:85> col:21 sprintf_s 'int (char *, size_t, const char *, ...)' extern
| |-ParmVarDecl 0xd8fe80 <col:31, col:37> col:37 strDest 'char *'
| |-ParmVarDecl 0xd8fef8 <col:46, col:53> col:53 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd8ff78 <col:62, col:74> col:74 format 'const char *'
| `-FullComment 0xe0bed0 <line:228:6, line:232:135>
|   |-ParagraphComment 0xe0baf0 <line:228:6, line:229:6>
|   | |-TextComment 0xe0ba50 <line:228:6> Text=" "
|   | |-InlineCommandComment 0xe0ba70 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0ba90 <col:19, col:160> Text=": The sprintf_s function is equivalent to the sprintf function except for the parameter destMax and the explicit runtime-constraints violation"
|   | `-TextComment 0xe0bab0 <line:229:6> Text=" "
|   |-ParamCommandComment 0xe0bb10 <col:7, line:230:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0xe0bbc0 <line:229:21, line:230:6>
|   |   |-TextComment 0xe0bb70 <line:229:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0xe0bb90 <line:230:6> Text=" "
|   |-ParamCommandComment 0xe0bbe0 <col:7, line:231:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe0bce0 <line:230:21, line:231:6>
|   |   |-TextComment 0xe0bc40 <line:230:21, col:102> Text=" - The maximum length of destination buffer(including the terminating null byte ('"
|   |   |-TextComment 0xe0bc60 <col:103> Text="\"
|   |   |-TextComment 0xe0bc80 <col:104, col:107> Text="0'))"
|   |   `-TextComment 0xe0bca0 <line:231:6> Text=" "
|   |-ParamCommandComment 0xe0bd00 <col:7, line:232:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0xe0bdb0 <line:231:20, line:232:6>
|   |   |-TextComment 0xe0bd60 <line:231:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe0bd80 <line:232:6> Text=" "
|   `-BlockCommandComment 0xe0bdd0 <col:7, col:135> Name="return"
|     `-ParagraphComment 0xe0be80 <col:14, col:135>
|       |-TextComment 0xe0be00 <col:14, col:97> Text=":success the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0xe0be20 <col:98> Text="\"
|       `-TextComment 0xe0be40 <col:99, col:135> Text="0')), If an error occurred return -1."
|-FunctionDecl 0xd90388 <line:112:21, line:243:92> col:21 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...)' extern
| |-ParmVarDecl 0xd90158 <col:32, col:41> col:41 strDest 'wchar_t *'
| |-ParmVarDecl 0xd901d0 <col:50, col:57> col:57 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd90248 <col:66, col:81> col:81 format 'const wchar_t *'
| `-FullComment 0xe0c320 <line:237:6, line:241:137>
|   |-ParagraphComment 0xe0bfe0 <line:237:6, line:238:6>
|   | |-TextComment 0xe0bf40 <line:237:6> Text=" "
|   | |-InlineCommandComment 0xe0bf60 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0bf80 <col:19, col:109> Text=": The  swprintf_s  function  is  the  wide-character  equivalent  of the sprintf_s function"
|   | `-TextComment 0xe0bfa0 <line:238:6> Text=" "
|   |-ParamCommandComment 0xe0c000 <col:7, line:239:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0xe0c0b0 <line:238:21, line:239:6>
|   |   |-TextComment 0xe0c060 <line:238:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0xe0c080 <line:239:6> Text=" "
|   |-ParamCommandComment 0xe0c0d0 <col:7, line:240:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe0c180 <line:239:21, line:240:6>
|   |   |-TextComment 0xe0c130 <line:239:21, col:96> Text=" - The maximum length of destination buffer(including the terminating null )"
|   |   `-TextComment 0xe0c150 <line:240:6> Text=" "
|   |-ParamCommandComment 0xe0c1a0 <col:7, line:241:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0xe0c250 <line:240:20, line:241:6>
|   |   |-TextComment 0xe0c200 <line:240:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe0c220 <line:241:6> Text=" "
|   `-BlockCommandComment 0xe0c270 <col:7, col:137> Name="return"
|     `-ParagraphComment 0xe0c2d0 <col:14, col:137>
|       `-TextComment 0xe0c2a0 <col:14, col:137> Text=":success the number of characters printed(not including the terminating null wide characte), If an error occurred return -1."
|-FunctionDecl 0xd90740 <line:112:21, line:254:47> line:253:21 vsprintf_s 'int (char *, size_t, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xd90480 <col:32, col:38> col:38 strDest 'char *'
| |-ParmVarDecl 0xd904f8 <col:47, col:54> col:54 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd90578 <col:63, col:75> col:75 format 'const char *'
| |-ParmVarDecl 0xd90640 <line:254:32, col:40> col:40 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0xe0c8a0 <line:246:6, line:251:134>
|   |-ParagraphComment 0xe0c430 <line:246:6, line:247:6>
|   | |-TextComment 0xe0c390 <line:246:6> Text=" "
|   | |-InlineCommandComment 0xe0c3b0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0c3d0 <col:19, col:162> Text=": The vsprintf_s function is equivalent to the vsprintf function except for the parameter destMax and the explicit runtime-constraints violation"
|   | `-TextComment 0xe0c3f0 <line:247:6> Text=" "
|   |-ParamCommandComment 0xe0c450 <col:7, line:248:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0xe0c500 <line:247:21, line:248:6>
|   |   |-TextComment 0xe0c4b0 <line:247:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0xe0c4d0 <line:248:6> Text=" "
|   |-ParamCommandComment 0xe0c520 <col:7, line:249:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe0c5d0 <line:248:21, line:249:6>
|   |   |-TextComment 0xe0c580 <line:248:21, col:109> Text=" - The maximum length of destination buffer(including the terminating null wide characte)"
|   |   `-TextComment 0xe0c5a0 <line:249:6> Text=" "
|   |-ParamCommandComment 0xe0c5f0 <col:7, line:250:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0xe0c6a0 <line:249:20, line:250:6>
|   |   |-TextComment 0xe0c650 <line:249:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe0c670 <line:250:6> Text=" "
|   |-ParamCommandComment 0xe0c6c0 <col:7, line:251:6> [in] implicitly Param="arglist" ParamIndex=3
|   | `-ParagraphComment 0xe0c780 <line:250:21, line:251:6>
|   |   |-TextComment 0xe0c730 <line:250:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0xe0c750 <line:251:6> Text=" "
|   `-BlockCommandComment 0xe0c7a0 <col:7, col:134> Name="return"
|     `-ParagraphComment 0xe0c850 <col:14, col:134>
|       |-TextComment 0xe0c7d0 <col:14, col:96> Text=":return the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0xe0c7f0 <col:97> Text="\"
|       `-TextComment 0xe0c810 <col:98, col:134> Text="0')), If an error occurred return -1."
|-FunctionDecl 0xd90af0 <line:112:21, line:264:105> col:21 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xd90838 <col:33, col:42> col:42 strDest 'wchar_t *'
| |-ParmVarDecl 0xd908b0 <col:51, col:58> col:58 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd90928 <col:67, col:82> col:82 format 'const wchar_t *'
| |-ParmVarDecl 0xd909a0 <col:90, col:98> col:98 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0xe0cdc0 <line:257:6, line:262:136>
|   |-ParagraphComment 0xe0c9b0 <line:257:6, line:258:6>
|   | |-TextComment 0xe0c910 <line:257:6> Text=" "
|   | |-InlineCommandComment 0xe0c930 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0c950 <col:19, col:111> Text=": The  vswprintf_s  function  is  the  wide-character  equivalent  of the vsprintf_s function"
|   | `-TextComment 0xe0c970 <line:258:6> Text=" "
|   |-ParamCommandComment 0xe0c9d0 <col:7, line:259:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0xe0ca80 <line:258:21, line:259:6>
|   |   |-TextComment 0xe0ca30 <line:258:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0xe0ca50 <line:259:6> Text=" "
|   |-ParamCommandComment 0xe0caa0 <col:7, line:260:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe0cb50 <line:259:21, line:260:6>
|   |   |-TextComment 0xe0cb00 <line:259:21, col:96> Text=" - The maximum length of destination buffer(including the terminating null )"
|   |   `-TextComment 0xe0cb20 <line:260:6> Text=" "
|   |-ParamCommandComment 0xe0cb70 <col:7, line:261:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0xe0cc20 <line:260:20, line:261:6>
|   |   |-TextComment 0xe0cbd0 <line:260:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe0cbf0 <line:261:6> Text=" "
|   |-ParamCommandComment 0xe0cc40 <col:7, line:262:6> [in] implicitly Param="arglist" ParamIndex=3
|   | `-ParagraphComment 0xe0ccf0 <line:261:21, line:262:6>
|   |   |-TextComment 0xe0cca0 <line:261:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0xe0ccc0 <line:262:6> Text=" "
|   `-BlockCommandComment 0xe0cd10 <col:7, col:136> Name="return"
|     `-ParagraphComment 0xe0cd70 <col:14, col:136>
|       `-TextComment 0xe0cd40 <col:14, col:136> Text=":return the number of characters printed(not including the terminating null wide characte), If an error occurred return -1."
|-FunctionDecl 0xd90f80 <line:112:21, line:276:48> line:275:21 vsnprintf_s 'int (char *, size_t, size_t, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xd90bf0 <col:33, col:39> col:39 strDest 'char *'
| |-ParmVarDecl 0xd90c68 <col:48, col:55> col:55 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd90ce0 <col:64, col:71> col:71 count 'size_t':'unsigned long'
| |-ParmVarDecl 0xd90d60 <col:78, col:90> col:90 format 'const char *'
| |-ParmVarDecl 0xd90dd8 <line:276:33, col:41> col:41 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0xe0d4b0 <line:267:6, line:273:194>
|   |-ParagraphComment 0xe0ced0 <line:267:6, line:268:6>
|   | |-TextComment 0xe0ce30 <line:267:6> Text=" "
|   | |-InlineCommandComment 0xe0ce50 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0ce70 <col:19, col:170> Text=": The vsnprintf_s function is equivalent to the vsnprintf function except for the parameter destMax/count and the explicit runtime-constraints violation"
|   | `-TextComment 0xe0ce90 <line:268:6> Text=" "
|   |-ParamCommandComment 0xe0cef0 <col:7, line:269:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0xe0cfa0 <line:268:21, line:269:6>
|   |   |-TextComment 0xe0cf50 <line:268:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0xe0cf70 <line:269:6> Text=" "
|   |-ParamCommandComment 0xe0cfc0 <col:7, line:270:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe0d0c0 <line:269:21, line:270:6>
|   |   |-TextComment 0xe0d020 <line:269:21, col:103> Text=" - The maximum length of destination buffer(including the terminating null  byte ('"
|   |   |-TextComment 0xe0d040 <col:104> Text="\"
|   |   |-TextComment 0xe0d060 <col:105, col:108> Text="0'))"
|   |   `-TextComment 0xe0d080 <line:270:6> Text=" "
|   |-ParamCommandComment 0xe0d0e0 <col:7, line:271:6> [in] implicitly Param="count" ParamIndex=2
|   | `-ParagraphComment 0xe0d1e0 <line:270:19, line:271:6>
|   |   |-TextComment 0xe0d140 <line:270:19, col:110> Text=" - do not write more than count bytes to strDest(not including the terminating null  byte ('"
|   |   |-TextComment 0xe0d160 <col:111> Text="\"
|   |   |-TextComment 0xe0d180 <col:112, col:115> Text="0'))"
|   |   `-TextComment 0xe0d1a0 <line:271:6> Text=" "
|   |-ParamCommandComment 0xe0d200 <col:7, line:272:6> [in] implicitly Param="format" ParamIndex=3
|   | `-ParagraphComment 0xe0d2b0 <line:271:20, line:272:6>
|   |   |-TextComment 0xe0d260 <line:271:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe0d280 <line:272:6> Text=" "
|   |-ParamCommandComment 0xe0d2d0 <col:7, line:273:6> [in] implicitly Param="arglist" ParamIndex=4
|   | `-ParagraphComment 0xe0d380 <line:272:21, line:273:6>
|   |   |-TextComment 0xe0d330 <line:272:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0xe0d350 <line:273:6> Text=" "
|   `-BlockCommandComment 0xe0d3a0 <col:7, col:194> Name="return"
|     `-ParagraphComment 0xe0d450 <col:14, col:194>
|       |-TextComment 0xe0d3d0 <col:14, col:96> Text=":return the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0xe0d3f0 <col:97> Text="\"
|       `-TextComment 0xe0d410 <col:98, col:194> Text="0')), If an error occurred return -1.Pay special attention to returning -1 when truncation occurs"
|-FunctionDecl 0xd91358 <line:112:21, line:287:35> line:286:21 snprintf_s 'int (char *, size_t, size_t, const char *, ...)' extern
| |-ParmVarDecl 0xd91090 <col:32, col:38> col:38 strDest 'char *'
| |-ParmVarDecl 0xd91108 <col:47, col:54> col:54 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd91180 <col:63, col:70> col:70 count 'size_t':'unsigned long'
| |-ParmVarDecl 0xd91200 <col:77, col:89> col:89 format 'const char *'
| `-FullComment 0xe0dae0 <line:279:6, line:284:194>
|   |-ParagraphComment 0xe0d5c0 <line:279:6, line:280:6>
|   | |-TextComment 0xe0d520 <line:279:6> Text=" "
|   | |-InlineCommandComment 0xe0d540 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0d560 <col:19, col:168> Text=": The snprintf_s function is equivalent to the snprintf function except for the parameter destMax/count and the explicit runtime-constraints violation"
|   | `-TextComment 0xe0d580 <line:280:6> Text=" "
|   |-ParamCommandComment 0xe0d5e0 <col:7, line:281:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0xe0d690 <line:280:21, line:281:6>
|   |   |-TextComment 0xe0d640 <line:280:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0xe0d660 <line:281:6> Text=" "
|   |-ParamCommandComment 0xe0d6b0 <col:7, line:282:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe0d7d0 <line:281:21, line:282:6>
|   |   |-TextComment 0xe0d730 <line:281:21, col:103> Text=" - The maximum length of destination buffer(including the terminating null  byte ('"
|   |   |-TextComment 0xe0d750 <col:104> Text="\"
|   |   |-TextComment 0xe0d770 <col:105, col:108> Text="0'))"
|   |   `-TextComment 0xe0d790 <line:282:6> Text=" "
|   |-ParamCommandComment 0xe0d7f0 <col:7, line:283:6> [in] implicitly Param="count" ParamIndex=2
|   | `-ParagraphComment 0xe0d8f0 <line:282:19, line:283:6>
|   |   |-TextComment 0xe0d850 <line:282:19, col:110> Text=" - do not write more than count bytes to strDest(not including the terminating null  byte ('"
|   |   |-TextComment 0xe0d870 <col:111> Text="\"
|   |   |-TextComment 0xe0d890 <col:112, col:115> Text="0'))"
|   |   `-TextComment 0xe0d8b0 <line:283:6> Text=" "
|   |-ParamCommandComment 0xe0d910 <col:7, line:284:6> [in] implicitly Param="format" ParamIndex=3
|   | `-ParagraphComment 0xe0d9c0 <line:283:20, line:284:6>
|   |   |-TextComment 0xe0d970 <line:283:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe0d990 <line:284:6> Text=" "
|   `-BlockCommandComment 0xe0d9e0 <col:7, col:194> Name="return"
|     `-ParagraphComment 0xe0da90 <col:14, col:194>
|       |-TextComment 0xe0da10 <col:14, col:96> Text=":return the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0xe0da30 <col:97> Text="\"
|       `-TextComment 0xe0da50 <col:98, col:194> Text="0')), If an error occurred return -1.Pay special attention to returning -1 when truncation occurs"
|-FunctionDecl 0xd91680 <line:112:21, line:299:51> line:298:21 vsnprintf_truncated_s 'int (char *, size_t, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xd91460 <col:43, col:49> col:49 strDest 'char *'
| |-ParmVarDecl 0xd914d8 <col:58, col:65> col:65 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd91558 <col:74, col:86> col:86 format 'const char *'
| |-ParmVarDecl 0xd915d0 <line:299:36, col:44> col:44 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0xe0e0a0 <line:291:6, line:296:203>
|   |-ParagraphComment 0xe0dbf0 <line:291:6, line:292:6>
|   | |-TextComment 0xe0db50 <line:291:6> Text=" "
|   | |-InlineCommandComment 0xe0db70 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0db90 <col:19, col:141> Text=": The vsnprintf_truncated_s function is equivalent to the vsnprintf_s function except  no count parameter  and return value"
|   | `-TextComment 0xe0dbb0 <line:292:6> Text=" "
|   |-ParamCommandComment 0xe0dc10 <col:7, line:293:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0xe0dcc0 <line:292:21, line:293:6>
|   |   |-TextComment 0xe0dc70 <line:292:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0xe0dc90 <line:293:6> Text=" "
|   |-ParamCommandComment 0xe0dce0 <col:7, line:294:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe0dde0 <line:293:21, line:294:6>
|   |   |-TextComment 0xe0dd40 <line:293:21, col:103> Text=" - The maximum length of destination buffer(including the terminating null  byte ('"
|   |   |-TextComment 0xe0dd60 <col:104> Text="\"
|   |   |-TextComment 0xe0dd80 <col:105, col:108> Text="0'))"
|   |   `-TextComment 0xe0dda0 <line:294:6> Text=" "
|   |-ParamCommandComment 0xe0de00 <col:7, line:295:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0xe0deb0 <line:294:20, line:295:6>
|   |   |-TextComment 0xe0de60 <line:294:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe0de80 <line:295:6> Text=" "
|   |-ParamCommandComment 0xe0ded0 <col:7, line:296:6> [in] implicitly Param="arglist" ParamIndex=3
|   | `-ParagraphComment 0xe0df80 <line:295:21, line:296:6>
|   |   |-TextComment 0xe0df30 <line:295:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0xe0df50 <line:296:6> Text=" "
|   `-BlockCommandComment 0xe0dfa0 <col:7, col:203> Name="return"
|     `-ParagraphComment 0xe0e050 <col:14, col:203>
|       |-TextComment 0xe0dfd0 <col:14, col:96> Text=":return the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0xe0dff0 <col:97> Text="\"
|       `-TextComment 0xe0e010 <col:98, col:203> Text="0')), If an error occurred return -1.Pay special attention to returning destMax - 1 when truncation occurs"
|-FunctionDecl 0xd91920 <line:112:21, line:308:96> col:21 snprintf_truncated_s 'int (char *, size_t, const char *, ...)' extern
| |-ParmVarDecl 0xd91780 <col:42, col:48> col:48 strDest 'char *'
| |-ParmVarDecl 0xd917f8 <col:57, col:64> col:64 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd91878 <col:73, col:85> col:85 format 'const char *'
| `-FullComment 0xe0e590 <line:302:6, line:306:203>
|   |-ParagraphComment 0xe0e1b0 <line:302:6, line:303:6>
|   | |-TextComment 0xe0e110 <line:302:6> Text=" "
|   | |-InlineCommandComment 0xe0e130 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0e150 <col:19, col:139> Text=": The snprintf_truncated_s function is equivalent to the snprintf_2 function except  no count parameter  and return value"
|   | `-TextComment 0xe0e170 <line:303:6> Text=" "
|   |-ParamCommandComment 0xe0e1d0 <col:7, line:304:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0xe0e280 <line:303:21, line:304:6>
|   |   |-TextComment 0xe0e230 <line:303:21, col:99> Text=" -  produce output according to a format ,write to the character string strDest"
|   |   `-TextComment 0xe0e250 <line:304:6> Text=" "
|   |-ParamCommandComment 0xe0e2a0 <col:7, line:305:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe0e3a0 <line:304:21, line:305:6>
|   |   |-TextComment 0xe0e300 <line:304:21, col:103> Text=" - The maximum length of destination buffer(including the terminating null  byte ('"
|   |   |-TextComment 0xe0e320 <col:104> Text="\"
|   |   |-TextComment 0xe0e340 <col:105, col:108> Text="0'))"
|   |   `-TextComment 0xe0e360 <line:305:6> Text=" "
|   |-ParamCommandComment 0xe0e3c0 <col:7, line:306:6> [in] implicitly Param="format" ParamIndex=2
|   | `-ParagraphComment 0xe0e470 <line:305:20, line:306:6>
|   |   |-TextComment 0xe0e420 <line:305:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe0e440 <line:306:6> Text=" "
|   `-BlockCommandComment 0xe0e490 <col:7, col:203> Name="return"
|     `-ParagraphComment 0xe0e540 <col:14, col:203>
|       |-TextComment 0xe0e4c0 <col:14, col:96> Text=":return the number of characters printed(not including the terminating null byte ('"
|       |-TextComment 0xe0e4e0 <col:97> Text="\"
|       `-TextComment 0xe0e500 <col:98, col:203> Text="0')), If an error occurred return -1.Pay special attention to returning destMax - 1 when truncation occurs"
|-FunctionDecl 0xd91ab8 <line:112:21, line:315:52> col:21 scanf_s 'int (const char *, ...)' extern
| |-ParmVarDecl 0xd91a20 <col:29, col:41> col:41 format 'const char *'
| `-FullComment 0xe0e850 <line:311:6, line:313:89>
|   |-ParagraphComment 0xe0e6a0 <line:311:6, line:312:6>
|   | |-TextComment 0xe0e600 <line:311:6> Text=" "
|   | |-InlineCommandComment 0xe0e620 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0e640 <col:19, col:133> Text=": The scanf_s function is equivalent to fscanf_s with the argument stdin interposed before the arguments to scanf_s"
|   | `-TextComment 0xe0e660 <line:312:6> Text=" "
|   |-ParamCommandComment 0xe0e6c0 <col:7, line:313:6> [in] implicitly Param="format" ParamIndex=0
|   | `-ParagraphComment 0xe0e790 <line:312:20, line:313:6>
|   |   |-TextComment 0xe0e740 <line:312:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe0e760 <line:313:6> Text=" "
|   `-BlockCommandComment 0xe0e7b0 <col:7, col:89> Name="return"
|     `-ParagraphComment 0xe0e810 <col:14, col:89>
|       `-TextComment 0xe0e7e0 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0xd91ca8 <line:112:21, line:322:56> col:21 wscanf_s 'int (const wchar_t *, ...)' extern
| |-ParmVarDecl 0xd91b98 <col:30, col:45> col:45 format 'const wchar_t *'
| `-FullComment 0xe0eaf0 <line:318:6, line:320:89>
|   |-ParagraphComment 0xe0e960 <line:318:6, line:319:6>
|   | |-TextComment 0xe0e8c0 <line:318:6> Text=" "
|   | |-InlineCommandComment 0xe0e8e0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0e900 <col:19, col:105> Text=": The  wscanf_s  function  is  the  wide-character  equivalent  of the scanf_s function"
|   | `-TextComment 0xe0e920 <line:319:6> Text=" "
|   |-ParamCommandComment 0xe0e980 <col:7, line:320:6> [in] implicitly Param="format" ParamIndex=0
|   | `-ParagraphComment 0xe0ea30 <line:319:20, line:320:6>
|   |   |-TextComment 0xe0e9e0 <line:319:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe0ea00 <line:320:6> Text=" "
|   `-BlockCommandComment 0xe0ea50 <col:7, col:89> Name="return"
|     `-ParagraphComment 0xe0eab0 <col:14, col:89>
|       `-TextComment 0xe0ea80 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0xd92510 <line:112:21, line:330:65> col:21 vscanf_s 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xd91d90 <col:30, col:42> col:42 format 'const char *'
| |-ParmVarDecl 0xd91e08 <col:50, col:58> col:58 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0xe0ee60 <line:325:6, line:328:89>
|   |-ParagraphComment 0xe0ec00 <line:325:6, line:326:6>
|   | |-TextComment 0xe0eb60 <line:325:6> Text=" "
|   | |-InlineCommandComment 0xe0eb80 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0eba0 <col:19, col:119> Text=": The vscanf_s function is equivalent to scanf_s, with the variable argument list replaced by arglist"
|   | `-TextComment 0xe0ebc0 <line:326:6> Text=" "
|   |-ParamCommandComment 0xe0ec20 <col:7, line:327:6> [in] implicitly Param="format" ParamIndex=0
|   | `-ParagraphComment 0xe0ecd0 <line:326:20, line:327:6>
|   |   |-TextComment 0xe0ec80 <line:326:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe0eca0 <line:327:6> Text=" "
|   |-ParamCommandComment 0xe0ecf0 <col:7, line:328:6> [in] implicitly Param="arglist" ParamIndex=1
|   | `-ParagraphComment 0xe0eda0 <line:327:21, line:328:6>
|   |   |-TextComment 0xe0ed50 <line:327:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0xe0ed70 <line:328:6> Text=" "
|   `-BlockCommandComment 0xe0edc0 <col:7, col:89> Name="return"
|     `-ParagraphComment 0xe0ee20 <col:14, col:89>
|       `-TextComment 0xe0edf0 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0xd92790 <line:112:21, line:338:69> col:21 vwscanf_s 'int (const wchar_t *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xd925f8 <col:31, col:46> col:46 format 'const wchar_t *'
| |-ParmVarDecl 0xd92670 <col:54, col:62> col:62 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0xe0f1d0 <line:333:6, line:336:89>
|   |-ParagraphComment 0xe0ef70 <line:333:6, line:334:6>
|   | |-TextComment 0xe0eed0 <line:333:6> Text=" "
|   | |-InlineCommandComment 0xe0eef0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0ef10 <col:19, col:107> Text=": The  vwscanf_s  function  is  the  wide-character  equivalent  of the vscanf_s function"
|   | `-TextComment 0xe0ef30 <line:334:6> Text=" "
|   |-ParamCommandComment 0xe0ef90 <col:7, line:335:6> [in] implicitly Param="format" ParamIndex=0
|   | `-ParagraphComment 0xe0f040 <line:334:20, line:335:6>
|   |   |-TextComment 0xe0eff0 <line:334:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe0f010 <line:335:6> Text=" "
|   |-ParamCommandComment 0xe0f060 <col:7, line:336:6> [in] implicitly Param="arglist" ParamIndex=1
|   | `-ParagraphComment 0xe0f110 <line:335:21, line:336:6>
|   |   |-TextComment 0xe0f0c0 <line:335:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0xe0f0e0 <line:336:6> Text=" "
|   `-BlockCommandComment 0xe0f130 <col:7, col:89> Name="return"
|     `-ParagraphComment 0xe0f190 <col:14, col:89>
|       `-TextComment 0xe0f160 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0xd92998 <line:112:21, line:346:67> col:21 fscanf_s 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0xd92878 <col:30, col:36> col:36 stream 'FILE *'
| |-ParmVarDecl 0xd928f8 <col:44, col:56> col:56 format 'const char *'
| `-FullComment 0xe0f540 <line:341:6, line:344:89>
|   |-ParagraphComment 0xe0f2e0 <line:341:6, line:342:6>
|   | |-TextComment 0xe0f240 <line:341:6> Text=" "
|   | |-InlineCommandComment 0xe0f260 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0f280 <col:19, col:195> Text=": The fscanf_s function is equivalent to fscanf except that the c, s, and [ conversion specifiers apply to a pair of arguments (unless assignment suppression is indicated by a*)"
|   | `-TextComment 0xe0f2a0 <line:342:6> Text=" "
|   |-ParamCommandComment 0xe0f300 <col:7, line:343:6> [in] implicitly Param="stream" ParamIndex=0
|   | `-ParagraphComment 0xe0f3b0 <line:342:20, line:343:6>
|   |   |-TextComment 0xe0f360 <line:342:20, col:39> Text=" - stdio file stream"
|   |   `-TextComment 0xe0f380 <line:343:6> Text=" "
|   |-ParamCommandComment 0xe0f3d0 <col:7, line:344:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0xe0f480 <line:343:20, line:344:6>
|   |   |-TextComment 0xe0f430 <line:343:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe0f450 <line:344:6> Text=" "
|   `-BlockCommandComment 0xe0f4a0 <col:7, col:89> Name="return"
|     `-ParagraphComment 0xe0f500 <col:14, col:89>
|       `-TextComment 0xe0f4d0 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0xd92c28 <line:112:21, line:354:71> col:21 fwscanf_s 'int (FILE *, const wchar_t *, ...)' extern
| |-ParmVarDecl 0xd92a88 <col:31, col:37> col:37 stream 'FILE *'
| |-ParmVarDecl 0xd92b00 <col:45, col:60> col:60 format 'const wchar_t *'
| `-FullComment 0xe0f8c0 <line:349:6, line:352:89>
|   |-ParagraphComment 0xe0f650 <line:349:6, line:350:6>
|   | |-TextComment 0xe0f5b0 <line:349:6> Text=" "
|   | |-InlineCommandComment 0xe0f5d0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0f5f0 <col:19, col:107> Text=": The  fwscanf_s  function  is  the  wide-character  equivalent  of the fscanf_s function"
|   | `-TextComment 0xe0f610 <line:350:6> Text=" "
|   |-ParamCommandComment 0xe0f670 <col:7, line:351:6> [in] implicitly Param="stream" ParamIndex=0
|   | `-ParagraphComment 0xe0f730 <line:350:20, line:351:6>
|   |   |-TextComment 0xe0f6d0 <line:350:20, col:39> Text=" - stdio file stream"
|   |   `-TextComment 0xe0f6f0 <line:351:6> Text=" "
|   |-ParamCommandComment 0xe0f750 <col:7, line:352:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0xe0f800 <line:351:20, line:352:6>
|   |   |-TextComment 0xe0f7b0 <line:351:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe0f7d0 <line:352:6> Text=" "
|   `-BlockCommandComment 0xe0f820 <col:7, col:89> Name="return"
|     `-ParagraphComment 0xe0f880 <col:14, col:89>
|       `-TextComment 0xe0f850 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0xd92f00 <line:112:21, line:363:80> col:21 vfscanf_s 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xd92d18 <col:31, col:37> col:37 stream 'FILE *'
| |-ParmVarDecl 0xd92d98 <col:45, col:57> col:57 format 'const char *'
| |-ParmVarDecl 0xd92e10 <col:65, col:73> col:73 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0xe0fd10 <line:357:6, line:361:89>
|   |-ParagraphComment 0xe0f9d0 <line:357:6, line:358:6>
|   | |-TextComment 0xe0f930 <line:357:6> Text=" "
|   | |-InlineCommandComment 0xe0f950 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0f970 <col:19, col:121> Text=": The vfscanf_s function is equivalent to fscanf_s, with the variable argument list replaced by arglist"
|   | `-TextComment 0xe0f990 <line:358:6> Text=" "
|   |-ParamCommandComment 0xe0f9f0 <col:7, line:359:6> [in] implicitly Param="stream" ParamIndex=0
|   | `-ParagraphComment 0xe0faa0 <line:358:20, line:359:6>
|   |   |-TextComment 0xe0fa50 <line:358:20, col:39> Text=" - stdio file stream"
|   |   `-TextComment 0xe0fa70 <line:359:6> Text=" "
|   |-ParamCommandComment 0xe0fac0 <col:7, line:360:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0xe0fb70 <line:359:20, line:360:6>
|   |   |-TextComment 0xe0fb20 <line:359:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe0fb40 <line:360:6> Text=" "
|   |-ParamCommandComment 0xe0fb90 <col:7, line:361:6> [in] implicitly Param="arglist" ParamIndex=2
|   | `-ParagraphComment 0xe0fc40 <line:360:21, line:361:6>
|   |   |-TextComment 0xe0fbf0 <line:360:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0xe0fc10 <line:361:6> Text=" "
|   `-BlockCommandComment 0xe0fc60 <col:7, col:89> Name="return"
|     `-ParagraphComment 0xe0fcc0 <col:14, col:89>
|       `-TextComment 0xe0fc90 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0xd93210 <line:112:21, line:372:84> col:21 vfwscanf_s 'int (FILE *, const wchar_t *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xd92ff8 <col:32, col:38> col:38 stream 'FILE *'
| |-ParmVarDecl 0xd93070 <col:46, col:61> col:61 format 'const wchar_t *'
| |-ParmVarDecl 0xd930e8 <col:69, col:77> col:77 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0xe10160 <line:366:6, line:370:89>
|   |-ParagraphComment 0xe0fe20 <line:366:6, line:367:6>
|   | |-TextComment 0xe0fd80 <line:366:6> Text=" "
|   | |-InlineCommandComment 0xe0fda0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe0fdc0 <col:19, col:109> Text=": The  vfwscanf_s  function  is  the  wide-character  equivalent  of the vfscanf_s function"
|   | `-TextComment 0xe0fde0 <line:367:6> Text=" "
|   |-ParamCommandComment 0xe0fe40 <col:7, line:368:6> [in] implicitly Param="stream" ParamIndex=0
|   | `-ParagraphComment 0xe0fef0 <line:367:20, line:368:6>
|   |   |-TextComment 0xe0fea0 <line:367:20, col:39> Text=" - stdio file stream"
|   |   `-TextComment 0xe0fec0 <line:368:6> Text=" "
|   |-ParamCommandComment 0xe0ff10 <col:7, line:369:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0xe0ffc0 <line:368:20, line:369:6>
|   |   |-TextComment 0xe0ff70 <line:368:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe0ff90 <line:369:6> Text=" "
|   |-ParamCommandComment 0xe0ffe0 <col:7, line:370:6> [in] implicitly Param="arglist" ParamIndex=2
|   | `-ParagraphComment 0xe10090 <line:369:21, line:370:6>
|   |   |-TextComment 0xe10040 <line:369:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0xe10060 <line:370:6> Text=" "
|   `-BlockCommandComment 0xe100b0 <col:7, col:89> Name="return"
|     `-ParagraphComment 0xe10110 <col:14, col:89>
|       `-TextComment 0xe100e0 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0xd93630 <line:112:21, line:380:73> col:21 sscanf_s 'int (const char *, const char *, ...)' extern
| |-ParmVarDecl 0xd93310 <col:30, col:42> col:42 buffer 'const char *'
| |-ParmVarDecl 0xd93390 <col:50, col:62> col:62 format 'const char *'
| `-FullComment 0xe104d0 <line:375:6, line:378:89>
|   |-ParagraphComment 0xe10270 <line:375:6, line:376:6>
|   | |-TextComment 0xe101d0 <line:375:6> Text=" "
|   | |-InlineCommandComment 0xe101f0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe10210 <col:19, col:173> Text=": The sscanf_s function is equivalent to fscanf_s, except that input is obtained from a string (specified by the argument buffer) rather than from a stream"
|   | `-TextComment 0xe10230 <line:376:6> Text=" "
|   |-ParamCommandComment 0xe10290 <col:7, line:377:6> [in] implicitly Param="buffer" ParamIndex=0
|   | `-ParagraphComment 0xe10340 <line:376:20, line:377:6>
|   |   |-TextComment 0xe102f0 <line:376:20, col:50> Text=" -  read character from  buffer"
|   |   `-TextComment 0xe10310 <line:377:6> Text=" "
|   |-ParamCommandComment 0xe10360 <col:7, line:378:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0xe10410 <line:377:20, line:378:6>
|   |   |-TextComment 0xe103c0 <line:377:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe103e0 <line:378:6> Text=" "
|   `-BlockCommandComment 0xe10430 <col:7, col:89> Name="return"
|     `-ParagraphComment 0xe10490 <col:14, col:89>
|       `-TextComment 0xe10460 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0xd938b8 <line:112:21, line:388:80> col:21 swscanf_s 'int (const wchar_t *, const wchar_t *, ...)' extern
| |-ParmVarDecl 0xd93718 <col:31, col:46> col:46 buffer 'const wchar_t *'
| |-ParmVarDecl 0xd93790 <col:54, col:69> col:69 format 'const wchar_t *'
| `-FullComment 0xe10850 <line:383:6, line:386:89>
|   |-ParagraphComment 0xe105e0 <line:383:6, line:384:6>
|   | |-TextComment 0xe10540 <line:383:6> Text=" "
|   | |-InlineCommandComment 0xe10560 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe10580 <col:19, col:107> Text=": The  swscanf_s  function  is  the  wide-character  equivalent  of the sscanf_s function"
|   | `-TextComment 0xe105a0 <line:384:6> Text=" "
|   |-ParamCommandComment 0xe10600 <col:7, line:385:6> [in] implicitly Param="buffer" ParamIndex=0
|   | `-ParagraphComment 0xe106b0 <line:384:20, line:385:6>
|   |   |-TextComment 0xe10660 <line:384:20, col:50> Text=" -  read character from  buffer"
|   |   `-TextComment 0xe10680 <line:385:6> Text=" "
|   |-ParamCommandComment 0xe106d0 <col:7, line:386:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0xe10790 <line:385:20, line:386:6>
|   |   |-TextComment 0xe10740 <line:385:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe10760 <line:386:6> Text=" "
|   `-BlockCommandComment 0xe107b0 <col:7, col:89> Name="return"
|     `-ParagraphComment 0xe10810 <col:14, col:89>
|       `-TextComment 0xe107e0 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0xd93b90 <line:112:21, line:397:86> col:21 vsscanf_s 'int (const char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xd939b0 <col:31, col:43> col:43 buffer 'const char *'
| |-ParmVarDecl 0xd93a30 <col:51, col:63> col:63 format 'const char *'
| |-ParmVarDecl 0xd93aa8 <col:71, col:79> col:79 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0xe10ca0 <line:391:6, line:395:89>
|   |-ParagraphComment 0xe10960 <line:391:6, line:392:6>
|   | |-TextComment 0xe108c0 <line:391:6> Text=" "
|   | |-InlineCommandComment 0xe108e0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe10900 <col:19, col:121> Text=": The vsscanf_s function is equivalent to sscanf_s, with the variable argument list replaced by arglist"
|   | `-TextComment 0xe10920 <line:392:6> Text=" "
|   |-ParamCommandComment 0xe10980 <col:7, line:393:6> [in] implicitly Param="buffer" ParamIndex=0
|   | `-ParagraphComment 0xe10a30 <line:392:20, line:393:6>
|   |   |-TextComment 0xe109e0 <line:392:20, col:50> Text=" -  read character from  buffer"
|   |   `-TextComment 0xe10a00 <line:393:6> Text=" "
|   |-ParamCommandComment 0xe10a50 <col:7, line:394:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0xe10b00 <line:393:20, line:394:6>
|   |   |-TextComment 0xe10ab0 <line:393:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe10ad0 <line:394:6> Text=" "
|   |-ParamCommandComment 0xe10b20 <col:7, line:395:6> [in] implicitly Param="arglist" ParamIndex=2
|   | `-ParagraphComment 0xe10bd0 <line:394:21, line:395:6>
|   |   |-TextComment 0xe10b80 <line:394:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0xe10ba0 <line:395:6> Text=" "
|   `-BlockCommandComment 0xe10bf0 <col:7, col:89> Name="return"
|     `-ParagraphComment 0xe10c50 <col:14, col:89>
|       `-TextComment 0xe10c20 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0xd93ea0 <line:112:21, line:406:93> col:21 vswscanf_s 'int (const wchar_t *, const wchar_t *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xd93c88 <col:32, col:47> col:47 buffer 'const wchar_t *'
| |-ParmVarDecl 0xd93d00 <col:55, col:70> col:70 format 'const wchar_t *'
| |-ParmVarDecl 0xd93d78 <col:78, col:86> col:86 arglist 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FullComment 0xe110f0 <line:400:6, line:404:89>
|   |-ParagraphComment 0xe10db0 <line:400:6, line:401:6>
|   | |-TextComment 0xe10d10 <line:400:6> Text=" "
|   | |-InlineCommandComment 0xe10d30 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe10d50 <col:19, col:109> Text=": The  vswscanf_s  function  is  the  wide-character  equivalent  of the vsscanf_s function"
|   | `-TextComment 0xe10d70 <line:401:6> Text=" "
|   |-ParamCommandComment 0xe10dd0 <col:7, line:402:6> [in] implicitly Param="buffer" ParamIndex=0
|   | `-ParagraphComment 0xe10e80 <line:401:20, line:402:6>
|   |   |-TextComment 0xe10e30 <line:401:20, col:50> Text=" -  read character from  buffer"
|   |   `-TextComment 0xe10e50 <line:402:6> Text=" "
|   |-ParamCommandComment 0xe10ea0 <col:7, line:403:6> [in] implicitly Param="format" ParamIndex=1
|   | `-ParagraphComment 0xe10f50 <line:402:20, line:403:6>
|   |   |-TextComment 0xe10f00 <line:402:20, col:35> Text=" - format string"
|   |   `-TextComment 0xe10f20 <line:403:6> Text=" "
|   |-ParamCommandComment 0xe10f70 <col:7, line:404:6> [in] implicitly Param="arglist" ParamIndex=2
|   | `-ParagraphComment 0xe11020 <line:403:21, line:404:6>
|   |   |-TextComment 0xe10fd0 <line:403:21, col:66> Text=" - instead of  a variable  number of arguments"
|   |   `-TextComment 0xe10ff0 <line:404:6> Text=" "
|   `-BlockCommandComment 0xe11040 <col:7, col:89> Name="return"
|     `-ParagraphComment 0xe110a0 <col:14, col:89>
|       `-TextComment 0xe11070 <col:14, col:89> Text=":returns the number of input items assigned, If an error occurred return -1."
|-FunctionDecl 0xd94130 <line:112:21, line:414:58> col:23 gets_s 'char *(char *, size_t)' extern
| |-ParmVarDecl 0xd93fa0 <col:30, col:36> col:36 buffer 'char *'
| |-ParmVarDecl 0xd94018 <col:44, col:51> col:51 destMax 'size_t':'unsigned long'
| `-FullComment 0xe11460 <line:409:6, line:412:100>
|   |-ParagraphComment 0xe11200 <line:409:6, line:410:6>
|   | |-TextComment 0xe11160 <line:409:6> Text=" "
|   | |-InlineCommandComment 0xe11180 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe111a0 <col:19, col:185> Text=":The gets_s function reads at most one less than the number of characters specified by destMax from the stream pointed to by stdin, into the array pointed to by buffer"
|   | `-TextComment 0xe111c0 <line:410:6> Text=" "
|   |-ParamCommandComment 0xe11220 <col:7, line:411:6> [in] implicitly Param="buffer" ParamIndex=0
|   | `-ParagraphComment 0xe112d0 <line:410:20, line:411:6>
|   |   |-TextComment 0xe11280 <line:410:20, col:42> Text=" - destination  address"
|   |   `-TextComment 0xe112a0 <line:411:6> Text=" "
|   |-ParamCommandComment 0xe112f0 <col:7, line:412:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe113a0 <line:411:21, line:412:6>
|   |   |-TextComment 0xe11350 <line:411:21, col:104> Text=" -The maximum length of destination buffer(including the terminating null character)"
|   |   `-TextComment 0xe11370 <line:412:6> Text=" "
|   `-BlockCommandComment 0xe113c0 <col:7, col:100> Name="return"
|     `-ParagraphComment 0xe11420 <col:14, col:100>
|       `-TextComment 0xe113f0 <col:14, col:100> Text="  buffer if there was no runtime-constraint violation,If an error occurred return NULL."
|-FunctionDecl 0xd94438 <line:112:21, line:425:91> col:25 used memcpy_s 'errno_t (void *, size_t, const void *, size_t)' extern
| |-ParmVarDecl 0xd94220 <col:34, col:40> col:40 dest 'void *'
| |-ParmVarDecl 0xd94298 <col:46, col:53> col:53 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd94318 <col:62, col:74> col:74 src 'const void *'
| |-ParmVarDecl 0xd94390 <col:79, col:86> col:86 count 'size_t':'unsigned long'
| `-FullComment 0xe11980 <line:418:6, line:423:63>
|   |-ParagraphComment 0xe11570 <line:418:6, line:419:6>
|   | |-TextComment 0xe114d0 <line:418:6> Text=" "
|   | |-InlineCommandComment 0xe114f0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe11510 <col:19, col:130> Text=":The memcpy_s function copies n characters from the object pointed to by src into the object pointed to by dest."
|   | `-TextComment 0xe11530 <line:419:6> Text=" "
|   |-ParamCommandComment 0xe11590 <col:7, line:420:6> [in] implicitly Param="dest" ParamIndex=0
|   | `-ParagraphComment 0xe11640 <line:419:18, line:420:6>
|   |   |-TextComment 0xe115f0 <line:419:18, col:40> Text=" - destination  address"
|   |   `-TextComment 0xe11610 <line:420:6> Text=" "
|   |-ParamCommandComment 0xe11660 <col:7, line:421:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe11710 <line:420:21, line:421:6>
|   |   |-TextComment 0xe116c0 <line:420:21, col:62> Text=" -The maximum length of destination buffer"
|   |   `-TextComment 0xe116e0 <line:421:6> Text=" "
|   |-ParamCommandComment 0xe11730 <col:7, line:422:6> [in] implicitly Param="src" ParamIndex=2
|   | `-ParagraphComment 0xe117e0 <line:421:17, line:422:6>
|   |   |-TextComment 0xe11790 <line:421:17, col:33> Text=" -source  address"
|   |   `-TextComment 0xe117b0 <line:422:6> Text=" "
|   |-ParamCommandComment 0xe11800 <col:7, line:423:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0xe118b0 <line:422:19, line:423:6>
|   |   |-TextComment 0xe11860 <line:422:19, col:58> Text=" -copies count  characters from the  src"
|   |   `-TextComment 0xe11880 <line:423:6> Text=" "
|   `-BlockCommandComment 0xe118d0 <col:7, col:63> Name="return"
|     `-ParagraphComment 0xe11930 <col:14, col:63>
|       `-TextComment 0xe11900 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0xd948f8 <line:112:21, line:434:83> col:25 strcpy_s 'errno_t (char *, size_t, const char *)' extern
| |-ParmVarDecl 0xd94540 <col:34, col:40> col:40 strDest 'char *'
| |-ParmVarDecl 0xd945b8 <col:49, col:56> col:56 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd947d8 <col:65, col:77> col:77 strSrc 'const char *'
| `-FullComment 0xe11dd0 <line:428:6, line:432:63>
|   |-ParagraphComment 0xe11a90 <line:428:6, line:429:6>
|   | |-TextComment 0xe119f0 <line:428:6> Text=" "
|   | |-InlineCommandComment 0xe11a10 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe11a30 <col:19, col:159> Text=":The strcpy_s function copies the string pointed to by strSrc (including the terminating null character) into the array pointed to by strDest"
|   | `-TextComment 0xe11a50 <line:429:6> Text=" "
|   |-ParamCommandComment 0xe11ab0 <col:7, line:430:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0xe11b60 <line:429:21, line:430:6>
|   |   |-TextComment 0xe11b10 <line:429:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0xe11b30 <line:430:6> Text=" "
|   |-ParamCommandComment 0xe11b80 <col:7, line:431:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe11c30 <line:430:21, line:431:6>
|   |   |-TextComment 0xe11be0 <line:430:21, col:104> Text=" -The maximum length of destination buffer(including the terminating null character)"
|   |   `-TextComment 0xe11c00 <line:431:6> Text=" "
|   |-ParamCommandComment 0xe11c50 <col:7, line:432:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0xe11d00 <line:431:20, line:432:6>
|   |   |-TextComment 0xe11cb0 <line:431:20, col:36> Text=" -source  address"
|   |   `-TextComment 0xe11cd0 <line:432:6> Text=" "
|   `-BlockCommandComment 0xe11d20 <col:7, col:63> Name="return"
|     `-ParagraphComment 0xe11d80 <col:14, col:63>
|       `-TextComment 0xe11d50 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0xd94ca8 <line:112:21, line:445:98> col:25 strncpy_s 'errno_t (char *, size_t, const char *, size_t)' extern
| |-ParmVarDecl 0xd949f0 <col:35, col:41> col:41 strDest 'char *'
| |-ParmVarDecl 0xd94a68 <col:50, col:57> col:57 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd94ae8 <col:66, col:78> col:78 strSrc 'const char *'
| |-ParmVarDecl 0xd94b60 <col:86, col:93> col:93 count 'size_t':'unsigned long'
| `-FullComment 0xe12320 <line:437:6, line:443:63>
|   |-ParagraphComment 0xe11f10 <line:437:6, line:439:6>
|   | |-TextComment 0xe11e40 <line:437:6> Text=" "
|   | |-InlineCommandComment 0xe11e60 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe11e80 <col:19, col:133> Text=":The strncpy_s function copies not more than n successive characters (not including the terminating null character)"
|   | |-TextComment 0xe11ea0 <line:438:6, col:96> Text="                     from the array pointed to by strSrc to the array pointed to by strDest"
|   | `-TextComment 0xe11ec0 <line:439:6> Text=" "
|   |-ParamCommandComment 0xe11f30 <col:7, line:440:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0xe11fe0 <line:439:21, line:440:6>
|   |   |-TextComment 0xe11f90 <line:439:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0xe11fb0 <line:440:6> Text=" "
|   |-ParamCommandComment 0xe12000 <col:7, line:441:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe120b0 <line:440:21, line:441:6>
|   |   |-TextComment 0xe12060 <line:440:21, col:104> Text=" -The maximum length of destination buffer(including the terminating null character)"
|   |   `-TextComment 0xe12080 <line:441:6> Text=" "
|   |-ParamCommandComment 0xe120d0 <col:7, line:442:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0xe12180 <line:441:20, line:442:6>
|   |   |-TextComment 0xe12130 <line:441:20, col:36> Text=" -source  address"
|   |   `-TextComment 0xe12150 <line:442:6> Text=" "
|   |-ParamCommandComment 0xe121a0 <col:7, line:443:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0xe12250 <line:442:19, line:443:6>
|   |   |-TextComment 0xe12200 <line:442:19, col:58> Text=" -copies count  characters from the  src"
|   |   `-TextComment 0xe12220 <line:443:6> Text=" "
|   `-BlockCommandComment 0xe12270 <col:7, col:63> Name="return"
|     `-ParagraphComment 0xe122d0 <col:14, col:63>
|       `-TextComment 0xe122a0 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0xd94f48 <line:112:21, line:455:83> col:25 strcat_s 'errno_t (char *, size_t, const char *)' extern
| |-ParmVarDecl 0xd94db0 <col:34, col:40> col:40 strDest 'char *'
| |-ParmVarDecl 0xd94e28 <col:49, col:56> col:56 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd94ea8 <col:65, col:77> col:77 strSrc 'const char *'
| `-FullComment 0xe127b0 <line:448:6, line:453:63>
|   |-ParagraphComment 0xe12460 <line:448:6, line:450:6>
|   | |-TextComment 0xe12390 <line:448:6> Text=" "
|   | |-InlineCommandComment 0xe123b0 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe123d0 <col:19, col:135> Text=":The strcat_s function appends a copy of the  string pointed to by strSrc (including the terminating null  character)"
|   | |-TextComment 0xe123f0 <line:449:6, col:73> Text="                     to the end of the  string pointed to by strDest"
|   | `-TextComment 0xe12410 <line:450:6> Text=" "
|   |-ParamCommandComment 0xe12480 <col:7, line:451:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0xe12530 <line:450:21, line:451:6>
|   |   |-TextComment 0xe124e0 <line:450:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0xe12500 <line:451:6> Text=" "
|   |-ParamCommandComment 0xe12550 <col:7, line:452:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe12600 <line:451:21, line:452:6>
|   |   |-TextComment 0xe125b0 <line:451:21, col:109> Text=" -The maximum length of destination buffer(including the terminating null wide character)"
|   |   `-TextComment 0xe125d0 <line:452:6> Text=" "
|   |-ParamCommandComment 0xe12620 <col:7, line:453:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0xe126d0 <line:452:20, line:453:6>
|   |   |-TextComment 0xe12680 <line:452:20, col:36> Text=" -source  address"
|   |   `-TextComment 0xe126a0 <line:453:6> Text=" "
|   `-BlockCommandComment 0xe126f0 <col:7, col:63> Name="return"
|     `-ParagraphComment 0xe12760 <col:14, col:63>
|       `-TextComment 0xe12720 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0xd95258 <line:112:21, line:466:98> col:25 strncat_s 'errno_t (char *, size_t, const char *, size_t)' extern
| |-ParmVarDecl 0xd95040 <col:35, col:41> col:41 strDest 'char *'
| |-ParmVarDecl 0xd950b8 <col:50, col:57> col:57 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd95138 <col:66, col:78> col:78 strSrc 'const char *'
| |-ParmVarDecl 0xd951b0 <col:86, col:93> col:93 count 'size_t':'unsigned long'
| `-FullComment 0xe12d00 <line:458:6, line:464:63>
|   |-ParagraphComment 0xe128f0 <line:458:6, line:460:6>
|   | |-TextComment 0xe12820 <line:458:6> Text=" "
|   | |-InlineCommandComment 0xe12840 <col:7, col:18> Name="Description" RenderNormal
|   | |-TextComment 0xe12860 <col:19, col:136> Text=":The strncat_s function appends not more than n successive  characters (not including the terminating null  character)"
|   | |-TextComment 0xe12880 <line:459:6, col:112> Text="                       from the array pointed to by strSrc to the end of the  string pointed to by strDest."
|   | `-TextComment 0xe128a0 <line:460:6> Text=" "
|   |-ParamCommandComment 0xe12910 <col:7, line:461:6> [in] implicitly Param="strDest" ParamIndex=0
|   | `-ParagraphComment 0xe129c0 <line:460:21, line:461:6>
|   |   |-TextComment 0xe12970 <line:460:21, col:43> Text=" - destination  address"
|   |   `-TextComment 0xe12990 <line:461:6> Text=" "
|   |-ParamCommandComment 0xe129e0 <col:7, line:462:6> [in] implicitly Param="destMax" ParamIndex=1
|   | `-ParagraphComment 0xe12a90 <line:461:21, line:462:6>
|   |   |-TextComment 0xe12a40 <line:461:21, col:104> Text=" -The maximum length of destination buffer(including the terminating null character)"
|   |   `-TextComment 0xe12a60 <line:462:6> Text=" "
|   |-ParamCommandComment 0xe12ab0 <col:7, line:463:6> [in] implicitly Param="strSrc" ParamIndex=2
|   | `-ParagraphComment 0xe12b60 <line:462:20, line:463:6>
|   |   |-TextComment 0xe12b10 <line:462:20, col:36> Text=" -source  address"
|   |   `-TextComment 0xe12b30 <line:463:6> Text=" "
|   |-ParamCommandComment 0xe12b80 <col:7, line:464:6> [in] implicitly Param="count" ParamIndex=3
|   | `-ParagraphComment 0xe12c30 <line:463:19, line:464:6>
|   |   |-TextComment 0xe12be0 <line:463:19, col:58> Text=" -copies count  characters from the  src"
|   |   `-TextComment 0xe12c00 <line:464:6> Text=" "
|   `-BlockCommandComment 0xe12c50 <col:7, col:63> Name="return"
|     `-ParagraphComment 0xe12cb0 <col:14, col:63>
|       `-TextComment 0xe12c80 <col:14, col:63> Text="  EOK if there was no runtime-constraint violation"
|-FunctionDecl 0xd95548 <line:469:5, col:97> col:20 strncpy_error 'errno_t (char *, size_t, const char *, size_t)' extern
| |-ParmVarDecl 0xd95330 <col:34, col:40> col:40 strDest 'char *'
| |-ParmVarDecl 0xd953a8 <col:49, col:56> col:56 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd95428 <col:65, col:77> col:77 strSrc 'const char *'
| `-ParmVarDecl 0xd954a0 <col:85, col:92> col:92 count 'size_t':'unsigned long'
|-FunctionDecl 0xd95890 <line:470:5, col:82> col:20 strcpy_error 'errno_t (char *, size_t, const char *)' extern
| |-ParmVarDecl 0xd95620 <col:33, col:39> col:39 strDest 'char *'
| |-ParmVarDecl 0xd95698 <col:48, col:55> col:55 destMax 'size_t':'unsigned long'
| `-ParmVarDecl 0xd95718 <col:64, col:76> col:76 strSrc 'const char *'
|-FunctionDecl 0xd95b78 <line:476:5, col:82> col:20 memset_sOptAsm 'errno_t (void *, size_t, int, size_t)' extern
| |-ParmVarDecl 0xd95960 <col:35, col:41> col:41 dest 'void *'
| |-ParmVarDecl 0xd959d8 <col:47, col:54> col:54 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd95a58 <col:63, col:67> col:67 c 'int'
| `-ParmVarDecl 0xd95ad0 <col:70, col:77> col:77 count 'size_t':'unsigned long'
|-FunctionDecl 0xd95e68 <line:477:5, col:81> col:20 memset_sOptTc 'errno_t (void *, size_t, int, size_t)' extern
| |-ParmVarDecl 0xd95c50 <col:34, col:40> col:40 dest 'void *'
| |-ParmVarDecl 0xd95cc8 <col:46, col:53> col:53 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd95d48 <col:62, col:66> col:66 c 'int'
| `-ParmVarDecl 0xd95dc0 <col:69, col:76> col:76 count 'size_t':'unsigned long'
|-FunctionDecl 0xd96158 <line:478:5, col:92> col:20 memcpy_sOptAsm 'errno_t (void *, size_t, const void *, size_t)' extern
| |-ParmVarDecl 0xd95f40 <col:35, col:41> col:41 dest 'void *'
| |-ParmVarDecl 0xd95fb8 <col:47, col:54> col:54 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd96038 <col:63, col:75> col:75 src 'const void *'
| `-ParmVarDecl 0xd960b0 <col:80, col:87> col:87 count 'size_t':'unsigned long'
|-FunctionDecl 0xd96448 <line:479:5, col:91> col:20 memcpy_sOptTc 'errno_t (void *, size_t, const void *, size_t)' extern
| |-ParmVarDecl 0xd96230 <col:34, col:40> col:40 dest 'void *'
| |-ParmVarDecl 0xd962a8 <col:46, col:53> col:53 destMax 'size_t':'unsigned long'
| |-ParmVarDecl 0xd96328 <col:62, col:74> col:74 src 'const void *'
| `-ParmVarDecl 0xd963a0 <col:79, col:86> col:86 count 'size_t':'unsigned long'
|-RecordDecl 0xd965c8 <main/los_arch_context.h:44:9, line:63:1> line:44:9 struct definition
| |-FieldDecl 0xd96680 <line:45:5, col:12> col:12 referenced pc 'UINT32':'unsigned int'
| |-FieldDecl 0xd966e0 <line:46:5, col:12> col:12 referenced ps 'UINT32':'unsigned int'
| |-FieldDecl 0xd967c8 <line:47:5, col:19> col:12 referenced regA 'UINT32 [16]'
| |-FieldDecl 0xd96828 <line:48:5, col:12> col:12 sar 'UINT32':'unsigned int'
| |-FieldDecl 0xda6af0 <line:49:5, col:12> col:12 excCause 'UINT32':'unsigned int'
| |-FieldDecl 0xda6b50 <line:50:5, col:12> col:12 excVaddr 'UINT32':'unsigned int'
| |-FieldDecl 0xda6bb0 <line:51:5, col:12> col:12 lbeg 'UINT32':'unsigned int'
| |-FieldDecl 0xda6c10 <line:52:5, col:12> col:12 lend 'UINT32':'unsigned int'
| |-FieldDecl 0xda6c70 <line:53:5, col:12> col:12 lcount 'UINT32':'unsigned int'
| `-FieldDecl 0xda6d98 <line:62:5, col:17> col:12 res 'UINT32 [4]'
|-TypedefDecl 0xda6e48 <line:44:1, line:63:3> col:3 referenced TaskContext 'struct TaskContext':'TaskContext'
| `-ElaboratedType 0xda6df0 'struct TaskContext' sugar
|   `-RecordType 0xd96650 'TaskContext'
|     `-Record 0xd965c8 ''
|-RecordDecl 0xda6eb8 <main/los_arch_interrupt.h:45:9, line:64:1> line:45:9 struct definition
| |-FieldDecl 0xda6f70 <line:46:5, col:12> col:12 pc 'UINT32':'unsigned int'
| |-FieldDecl 0xda6fd0 <line:47:5, col:12> col:12 ps 'UINT32':'unsigned int'
| |-FieldDecl 0xda7078 <line:48:5, col:19> col:12 regA 'UINT32 [16]'
| |-FieldDecl 0xda70d8 <line:49:5, col:12> col:12 sar 'UINT32':'unsigned int'
| |-FieldDecl 0xda7138 <line:50:5, col:12> col:12 excCause 'UINT32':'unsigned int'
| |-FieldDecl 0xda7198 <line:51:5, col:12> col:12 excVaddr 'UINT32':'unsigned int'
| |-FieldDecl 0xda71f8 <line:52:5, col:12> col:12 lbeg 'UINT32':'unsigned int'
| |-FieldDecl 0xda7258 <line:53:5, col:12> col:12 lend 'UINT32':'unsigned int'
| |-FieldDecl 0xda72b8 <line:54:5, col:12> col:12 lcount 'UINT32':'unsigned int'
| `-FieldDecl 0xda7360 <line:63:5, col:17> col:12 res 'UINT32 [4]'
|-TypedefDecl 0xda7408 <line:45:1, line:64:3> col:3 referenced EXC_CONTEXT_S 'struct EXC_CONTEXT_S':'EXC_CONTEXT_S'
| `-ElaboratedType 0xda73b0 'struct EXC_CONTEXT_S' sugar
|   `-RecordType 0xda6f40 'EXC_CONTEXT_S'
|     `-Record 0xda6eb8 ''
|-VarDecl 0xda74b8 <line:67:1, line:66:47> col:47 _init_start 'CHAR *' extern
|-TypedefDecl 0xda7628 <line:102:1, col:38> col:17 HWI_VECTOR_FUNC 'void (**)(void)'
| `-PointerType 0xda75d0 'void (**)(void)'
|   `-PointerType 0xca1ac0 'void (*)(void)'
|     `-ParenType 0xca1a60 'void (void)' sugar
|       `-FunctionProtoType 0xca1a30 'void (void)' cdecl
|         `-BuiltinType 0xc20da0 'void'
|-VarDecl 0xda7690 <line:108:1, col:15> col:15 g_intCount 'UINT32':'unsigned int' extern
|-FunctionDecl 0xda7898 <line:213:1, col:57> col:13 OsSetVector 'void (UINT32, HWI_PROC_FUNC)' extern
| |-ParmVarDecl 0xda7708 <col:25, col:32> col:32 num 'UINT32':'unsigned int'
| `-ParmVarDecl 0xda7780 <col:37, col:51> col:51 vector 'HWI_PROC_FUNC':'void (*)(void)'
|-FunctionDecl 0xda79e0 <main/los_compiler.h:327:23, main/los_arch_interrupt.h:216:23> col:6 HalInterrupt 'void (void)'
|-FunctionDecl 0xdaa818 <main/los_compiler.h:327:23, main/los_arch_interrupt.h:217:31> col:6 HalHwiDefaultHandler 'void (void)'
|-FunctionDecl 0xdaab58 <main/los_compiler.h:327:23, main/los_arch_interrupt.h:218:81> col:6 HalExcHandleEntry 'void (UINTPTR, EXC_CONTEXT_S *, UINT32)'
| |-ParmVarDecl 0xdaa8c8 <col:24, col:32> col:32 faultAddr 'UINTPTR':'unsigned int'
| |-ParmVarDecl 0xdaa9b8 <col:43, col:58> col:58 excBufAddr 'EXC_CONTEXT_S *'
| `-ParmVarDecl 0xdaaa30 <col:70, col:77> col:77 type 'UINT32':'unsigned int'
|-FunctionDecl 0xdaaca8 <main/los_compiler.h:327:23, main/los_arch_interrupt.h:219:21> col:6 used HalHwiInit 'void (void)'
|-RecordDecl 0xdaad78 <line:228:9, line:236:1> line:228:16 struct TagExcInfo definition
| |-FullComment 0xe12f20 <line:222:3, line:227:1>
| | |-ParagraphComment 0xe12da0 <line:222:3>
| | | `-TextComment 0xe12d70 <col:3> Text=" "
| | |-VerbatimLineComment 0xe12dc0 <col:4, col:20> Text=" los_exc"
| | |-ParagraphComment 0xe12e30 <line:223:3, col:34>
| | | `-TextComment 0xe12e00 <col:3, col:34> Text=" Exception information structure"
| | |-ParagraphComment 0xe12e80 <line:225:3, col:98>
| | | `-TextComment 0xe12e50 <col:3, col:98> Text=" Description: Exception information saved when an exception is triggered on the Xtensa platform."
| | `-ParagraphComment 0xe12ed0 <line:227:1>
| |   `-TextComment 0xe12ea0 <col:1> Text=" "
| |-FieldDecl 0xdaae30 <line:229:5, col:12> col:12 phase 'UINT16':'unsigned short'
| |-FieldDecl 0xdaae90 <line:230:5, col:12> col:12 type 'UINT16':'unsigned short'
| |-FieldDecl 0xdaaef0 <line:231:5, col:12> col:12 faultAddr 'UINT32':'unsigned int'
| |-FieldDecl 0xdaaf50 <line:232:5, col:12> col:12 thrdPid 'UINT32':'unsigned int'
| |-FieldDecl 0xdaafb0 <line:233:5, col:12> col:12 nestCnt 'UINT16':'unsigned short'
| |-FieldDecl 0xdab010 <line:234:5, col:12> col:12 reserved 'UINT16':'unsigned short'
| `-FieldDecl 0xdab070 <line:235:5, col:20> col:20 context 'EXC_CONTEXT_S *'
|-TypedefDecl 0xdab118 <line:228:1, line:236:3> col:3 referenced ExcInfo 'struct TagExcInfo':'struct TagExcInfo'
| |-ElaboratedType 0xdab0c0 'struct TagExcInfo' sugar
| | `-RecordType 0xdaae00 'struct TagExcInfo'
| |   `-Record 0xdaad78 'TagExcInfo'
| `-FullComment 0xe13140 <line:222:3, line:227:1>
|   |-ParagraphComment 0xe12fc0 <line:222:3>
|   | `-TextComment 0xe12f90 <col:3> Text=" "
|   |-VerbatimLineComment 0xe12fe0 <col:4, col:20> Text=" los_exc"
|   |-ParagraphComment 0xe13050 <line:223:3, col:34>
|   | `-TextComment 0xe13020 <col:3, col:34> Text=" Exception information structure"
|   |-ParagraphComment 0xe130a0 <line:225:3, col:98>
|   | `-TextComment 0xe13070 <col:3, col:98> Text=" Description: Exception information saved when an exception is triggered on the Xtensa platform."
|   `-ParagraphComment 0xe130f0 <line:227:1>
|     `-TextComment 0xe130c0 <col:1> Text=" "
|-VarDecl 0xdab198 <line:238:1, col:15> col:15 g_curNestCount 'UINT32':'unsigned int' extern
|-VarDecl 0xdab230 <line:239:1, col:16> col:16 g_excInfo 'ExcInfo':'struct TagExcInfo' extern
|-RecordDecl 0xdab358 <main/los_list.h:52:9, line:55:1> line:52:16 struct LOS_DL_LIST definition
| |-FullComment 0xe132b0 <line:49:3, line:50:47>
| | |-ParagraphComment 0xe131e0 <line:49:3>
| | | `-TextComment 0xe131b0 <col:3> Text=" "
| | |-VerbatimLineComment 0xe13200 <col:4, col:21> Text=" los_list"
| | `-ParagraphComment 0xe13270 <line:50:3, col:47>
| |   `-TextComment 0xe13240 <col:3, col:47> Text=" Structure of a node in a doubly linked list."
| |-FieldDecl 0xdab4b0 <line:53:5, col:25> col:25 referenced pstPrev 'struct LOS_DL_LIST *'
| | `-FullComment 0xe13380 <col:38, col:82>
| |   `-ParagraphComment 0xe13350 <col:38, col:82>
| |     `-TextComment 0xe13320 <col:38, col:82> Text=" Current node's pointer to the previous node "
| `-FieldDecl 0xdab550 <line:54:5, col:25> col:25 referenced pstNext 'struct LOS_DL_LIST *'
|   `-FullComment 0xe13450 <col:38, col:78>
|     `-ParagraphComment 0xe13420 <col:38, col:78>
|       `-TextComment 0xe133f0 <col:38, col:78> Text=" Current node's pointer to the next node "
|-TypedefDecl 0xdab628 <line:52:1, line:55:3> col:3 referenced LOS_DL_LIST 'struct LOS_DL_LIST':'struct LOS_DL_LIST'
| |-ElaboratedType 0xdab5d0 'struct LOS_DL_LIST' sugar
| | `-RecordType 0xdab3e0 'struct LOS_DL_LIST'
| |   `-Record 0xdab358 'LOS_DL_LIST'
| `-FullComment 0xe135c0 <line:49:3, line:50:47>
|   |-ParagraphComment 0xe134f0 <line:49:3>
|   | `-TextComment 0xe134c0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe13510 <col:4, col:21> Text=" los_list"
|   `-ParagraphComment 0xe13580 <line:50:3, col:47>
|     `-TextComment 0xe13550 <col:3, col:47> Text=" Structure of a node in a doubly linked list."
|-FunctionDecl 0xdb20b8 <main/los_compiler.h:130:23, main/los_list.h:79:1> line:75:43 used LOS_ListInit 'void (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xdab718 <col:56, col:69> col:69 used list 'LOS_DL_LIST *'
| |-CompoundStmt 0xdb2338 <line:76:1, line:79:1>
| | |-BinaryOperator 0xdb2200 <line:77:5, col:21> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xdb2198 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xdab550
| | | | `-ImplicitCastExpr 0xdb2180 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0xdb2160 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xdab718 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xdb21e8 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| | |   `-DeclRefExpr 0xdb21c8 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0xdab718 'list' 'LOS_DL_LIST *'
| | `-BinaryOperator 0xdb22c0 <line:78:5, col:21> 'struct LOS_DL_LIST *' '='
| |   |-MemberExpr 0xdb2258 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xdab4b0
| |   | `-ImplicitCastExpr 0xdb2240 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| |   |   `-DeclRefExpr 0xdb2220 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xdab718 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0xdb22a8 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0xdb2288 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0xdab718 'list' 'LOS_DL_LIST *'
| `-FullComment 0xe13f40 <line:58:3, line:73:7>
|   |-ParagraphComment 0xe13660 <line:58:3>
|   | `-TextComment 0xe13630 <col:3> Text=" "
|   |-VerbatimLineComment 0xe13680 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xe136f0 <line:59:3>
|   | `-TextComment 0xe136c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe13710 <col:4, col:42> Name="brief"
|   | `-ParagraphComment 0xe13770 <col:10, col:42>
|   |   `-TextComment 0xe13740 <col:10, col:42> Text=" Initialize a doubly linked list."
|   |-ParagraphComment 0xe137c0 <line:61:3>
|   | `-TextComment 0xe13790 <col:3> Text=" "
|   |-BlockCommandComment 0xe137e0 <col:4, line:63:3> Name="par"
|   | `-ParagraphComment 0xe13890 <line:61:8, line:63:3>
|   |   |-TextComment 0xe13810 <line:61:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe13830 <line:62:3, col:55> Text=" This API is used to initialize a doubly linked list."
|   |   `-TextComment 0xe13850 <line:63:3> Text=" "
|   |-BlockCommandComment 0xe138b0 <col:4, line:66:8> Name="attention"
|   | `-ParagraphComment 0xe13a80 <line:64:3, line:66:8>
|   |   |-TextComment 0xe138e0 <line:64:3> Text=" "
|   |   |-HTMLStartTagComment 0xe13900 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe13940 <line:65:3> Text=" "
|   |   |-HTMLStartTagComment 0xe13960 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe139a0 <col:8, col:71> Text="The parameter passed in should be ensured to be a legal pointer."
|   |   |-HTMLEndTagComment 0xe139c0 <col:72, col:76> Name="li"
|   |   |-TextComment 0xe139f0 <line:66:3> Text=" "
|   |   `-HTMLEndTagComment 0xe13a10 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe13ad0 <line:68:3>
|   | `-TextComment 0xe13aa0 <col:3> Text=" "
|   |-ParamCommandComment 0xe13af0 <col:4, col:52> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0xe13b80 <col:15, col:52>
|   |   `-TextComment 0xe13b50 <col:15, col:52> Text="    [IN] Node in a doubly linked list."
|   |-ParagraphComment 0xe13bd0 <line:70:3>
|   | `-TextComment 0xe13ba0 <col:3> Text=" "
|   |-BlockCommandComment 0xe13bf0 <col:4, line:71:3> Name="retval"
|   | `-ParagraphComment 0xe13c70 <line:70:11, line:71:3>
|   |   |-TextComment 0xe13c20 <line:70:11, col:16> Text=" None."
|   |   `-TextComment 0xe13c40 <line:71:3> Text=" "
|   |-BlockCommandComment 0xe13c90 <col:4, line:73:3> Name="par"
|   | `-ParagraphComment 0xe13e60 <line:71:8, line:73:3>
|   |   |-TextComment 0xe13cc0 <line:71:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe13ce0 <line:72:3> Text=" "
|   |   |-HTMLStartTagComment 0xe13d00 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe13d40 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe13d80 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe13da0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe13dd0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe13e00 <line:73:3> Text=" "
|   `-BlockCommandComment 0xe13e80 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe13eb0 <<invalid sloc>>
|-FunctionDecl 0xdb24f8 <main/los_compiler.h:130:23, main/los_list.h:128:1> line:122:43 used LOS_ListAdd 'void (LOS_DL_LIST *, LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xdb2368 <col:55, col:68> col:68 used list 'LOS_DL_LIST *'
| |-ParmVarDecl 0xdb23e0 <col:74, col:87> col:87 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0xdb2968 <line:123:1, line:128:1>
| | |-BinaryOperator 0xdb2690 <line:124:5, col:27> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xdb25e0 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xdab550
| | | | `-ImplicitCastExpr 0xdb25c8 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0xdb25a8 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xdb23e0 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xdb2678 <col:21, col:27> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0xdb2648 <col:21, col:27> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xdab550
| | |     `-ImplicitCastExpr 0xdb2630 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0xdb2610 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0xdb2368 'list' 'LOS_DL_LIST *'
| | |-BinaryOperator 0xdb2750 <line:125:5, col:21> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xdb26e8 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xdab4b0
| | | | `-ImplicitCastExpr 0xdb26d0 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0xdb26b0 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xdb23e0 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xdb2738 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| | |   `-DeclRefExpr 0xdb2718 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0xdb2368 'list' 'LOS_DL_LIST *'
| | |-BinaryOperator 0xdb2858 <line:126:5, col:30> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xdb27f0 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xdab4b0
| | | | `-ImplicitCastExpr 0xdb27d8 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0xdb27a8 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xdab550
| | | |     `-ImplicitCastExpr 0xdb2790 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0xdb2770 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xdb2368 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xdb2840 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |   `-DeclRefExpr 0xdb2820 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0xdb23e0 'node' 'LOS_DL_LIST *'
| | `-BinaryOperator 0xdb2918 <line:127:5, col:21> 'struct LOS_DL_LIST *' '='
| |   |-MemberExpr 0xdb28b0 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xdab550
| |   | `-ImplicitCastExpr 0xdb2898 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| |   |   `-DeclRefExpr 0xdb2878 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xdb2368 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0xdb2900 <col:21> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0xdb28e0 <col:21> 'LOS_DL_LIST *' lvalue ParmVar 0xdb23e0 'node' 'LOS_DL_LIST *'
| `-FullComment 0xe161f0 <line:104:3, line:120:22>
|   |-ParagraphComment 0xe13fe0 <line:104:3>
|   | `-TextComment 0xe13fb0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe14000 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xe14070 <line:105:3>
|   | `-TextComment 0xe14040 <col:3> Text=" "
|   |-BlockCommandComment 0xe14090 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0xe140f0 <col:10, col:52>
|   |   `-TextComment 0xe140c0 <col:10, col:52> Text=" Insert a new node to a doubly linked list."
|   |-ParagraphComment 0xe14140 <line:107:3>
|   | `-TextComment 0xe14110 <col:3> Text=" "
|   |-BlockCommandComment 0xe14160 <col:4, line:109:3> Name="par"
|   | `-ParagraphComment 0xe14210 <line:107:8, line:109:3>
|   |   |-TextComment 0xe14190 <line:107:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe141b0 <line:108:3, col:65> Text=" This API is used to insert a new node to a doubly linked list."
|   |   `-TextComment 0xe141d0 <line:109:3> Text=" "
|   |-BlockCommandComment 0xe14230 <col:4, line:112:8> Name="attention"
|   | `-ParagraphComment 0xe14400 <line:110:3, line:112:8>
|   |   |-TextComment 0xe14260 <line:110:3> Text=" "
|   |   |-HTMLStartTagComment 0xe14280 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe142c0 <line:111:3> Text=" "
|   |   |-HTMLStartTagComment 0xe142e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe14320 <col:8, col:71> Text="The parameters passed in should be ensured to be legal pointers."
|   |   |-HTMLEndTagComment 0xe14340 <col:72, col:76> Name="li"
|   |   |-TextComment 0xe14370 <line:112:3> Text=" "
|   |   `-HTMLEndTagComment 0xe14390 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe14450 <line:114:3>
|   | `-TextComment 0xe14420 <col:3> Text=" "
|   |-ParamCommandComment 0xe14470 <col:4, line:115:3> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0xe14520 <line:114:15, line:115:3>
|   |   |-TextComment 0xe144d0 <line:114:15, col:75> Text="    [IN]   Doubly linked list where the new node is inserted."
|   |   `-TextComment 0xe144f0 <line:115:3> Text=" "
|   |-ParamCommandComment 0xe14540 <col:4, col:49> [in] implicitly Param="node" ParamIndex=1
|   | `-ParagraphComment 0xe145d0 <col:15, col:49>
|   |   `-TextComment 0xe145a0 <col:15, col:49> Text="    [IN]   New node to be inserted."
|   |-ParagraphComment 0xe14620 <line:117:3>
|   | `-TextComment 0xe145f0 <col:3> Text=" "
|   |-BlockCommandComment 0xe14640 <col:4, line:118:3> Name="retval"
|   | `-ParagraphComment 0xe146c0 <line:117:11, line:118:3>
|   |   |-TextComment 0xe14670 <line:117:11, col:15> Text=" None"
|   |   `-TextComment 0xe14690 <line:118:3> Text=" "
|   |-BlockCommandComment 0xe146e0 <col:4, line:120:3> Name="par"
|   | `-ParagraphComment 0xe160e0 <line:118:8, line:120:3>
|   |   |-TextComment 0xe14710 <line:118:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe14730 <line:119:3> Text=" "
|   |   |-HTMLStartTagComment 0xe15f80 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe15fc0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe16000 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe16020 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe16050 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe16080 <line:120:3> Text=" "
|   `-BlockCommandComment 0xe16100 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xe16160 <col:8, col:22>
|       `-TextComment 0xe16130 <col:8, col:22> Text=" LOS_ListDelete"
|-FunctionDecl 0xdb2ab8 <main/los_compiler.h:130:23, main/los_list.h:152:1> line:149:43 LOS_ListTailInsert 'void (LOS_DL_LIST *, LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xdb29a8 <col:62, col:75> col:75 used list 'LOS_DL_LIST *'
| |-ParmVarDecl 0xdb2a20 <col:81, col:94> col:94 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0xdb2d08 <line:150:1, line:152:1>
| | `-CallExpr 0xdb2c80 <line:151:5, col:36> 'void'
| |   |-ImplicitCastExpr 0xdb2c68 <col:5> 'void (*)(LOS_DL_LIST *, LOS_DL_LIST *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0xdb2b68 <col:5> 'void (LOS_DL_LIST *, LOS_DL_LIST *)' Function 0xdb24f8 'LOS_ListAdd' 'void (LOS_DL_LIST *, LOS_DL_LIST *)'
| |   |-ImplicitCastExpr 0xdb2cb0 <col:17, col:23> 'struct LOS_DL_LIST *' <LValueToRValue>
| |   | `-MemberExpr 0xdb2bc0 <col:17, col:23> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xdab4b0
| |   |   `-ImplicitCastExpr 0xdb2ba8 <col:17> 'LOS_DL_LIST *' <LValueToRValue>
| |   |     `-DeclRefExpr 0xdb2b88 <col:17> 'LOS_DL_LIST *' lvalue ParmVar 0xdb29a8 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0xdb2cc8 <col:32> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0xdb2bf0 <col:32> 'LOS_DL_LIST *' lvalue ParmVar 0xdb2a20 'node' 'LOS_DL_LIST *'
| `-FullComment 0xe16c70 <line:131:3, line:147:40>
|   |-ParagraphComment 0xe16290 <line:131:3>
|   | `-TextComment 0xe16260 <col:3> Text=" "
|   |-VerbatimLineComment 0xe162b0 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xe16320 <line:132:3>
|   | `-TextComment 0xe162f0 <col:3> Text=" "
|   |-BlockCommandComment 0xe16340 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0xe163a0 <col:10, col:60>
|   |   `-TextComment 0xe16370 <col:10, col:60> Text=" Insert a node to the tail of a doubly linked list."
|   |-ParagraphComment 0xe163f0 <line:134:3>
|   | `-TextComment 0xe163c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe16410 <col:4, line:136:3> Name="par"
|   | `-ParagraphComment 0xe164c0 <line:134:8, line:136:3>
|   |   |-TextComment 0xe16440 <line:134:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe16460 <line:135:3, col:77> Text=" This API is used to insert a new node to the tail of a doubly linked list."
|   |   `-TextComment 0xe16480 <line:136:3> Text=" "
|   |-BlockCommandComment 0xe164e0 <col:4, line:139:8> Name="attention"
|   | `-ParagraphComment 0xe166b0 <line:137:3, line:139:8>
|   |   |-TextComment 0xe16510 <line:137:3> Text=" "
|   |   |-HTMLStartTagComment 0xe16530 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe16570 <line:138:3> Text=" "
|   |   |-HTMLStartTagComment 0xe16590 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe165d0 <col:8, col:71> Text="The parameters passed in should be ensured to be legal pointers."
|   |   |-HTMLEndTagComment 0xe165f0 <col:72, col:76> Name="li"
|   |   |-TextComment 0xe16620 <line:139:3> Text=" "
|   |   `-HTMLEndTagComment 0xe16640 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe16700 <line:141:3>
|   | `-TextComment 0xe166d0 <col:3> Text=" "
|   |-ParamCommandComment 0xe16720 <col:4, line:142:3> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0xe167d0 <line:141:15, line:142:3>
|   |   |-TextComment 0xe16780 <line:141:15, col:74> Text="     [IN] Doubly linked list where the new node is inserted."
|   |   `-TextComment 0xe167a0 <line:142:3> Text=" "
|   |-ParamCommandComment 0xe167f0 <col:4, col:48> [in] implicitly Param="node" ParamIndex=1
|   | `-ParagraphComment 0xe16880 <col:15, col:48>
|   |   `-TextComment 0xe16850 <col:15, col:48> Text="     [IN] New node to be inserted."
|   |-ParagraphComment 0xe168d0 <line:144:3>
|   | `-TextComment 0xe168a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe168f0 <col:4, line:145:3> Name="retval"
|   | `-ParagraphComment 0xe16970 <line:144:11, line:145:3>
|   |   |-TextComment 0xe16920 <line:144:11, col:16> Text=" None."
|   |   `-TextComment 0xe16940 <line:145:3> Text=" "
|   |-BlockCommandComment 0xe16990 <col:4, line:147:3> Name="par"
|   | `-ParagraphComment 0xe16b60 <line:145:8, line:147:3>
|   |   |-TextComment 0xe169c0 <line:145:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe169e0 <line:146:3> Text=" "
|   |   |-HTMLStartTagComment 0xe16a00 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe16a40 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe16a80 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe16aa0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe16ad0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe16b00 <line:147:3> Text=" "
|   `-BlockCommandComment 0xe16b80 <col:4, col:40> Name="see"
|     `-ParagraphComment 0xe16be0 <col:8, col:40>
|       `-TextComment 0xe16bb0 <col:8, col:40> Text=" LOS_ListAdd | LOS_ListHeadInsert"
|-FunctionDecl 0xdb2e40 <main/los_compiler.h:130:23, main/los_list.h:176:1> line:173:43 LOS_ListHeadInsert 'void (LOS_DL_LIST *, LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xdb2d30 <col:62, col:75> col:75 used list 'LOS_DL_LIST *'
| |-ParmVarDecl 0xdb2da8 <col:81, col:94> col:94 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0xdb2ff8 <line:174:1, line:176:1>
| | `-CallExpr 0xdb2f68 <line:175:5, col:27> 'void'
| |   |-ImplicitCastExpr 0xdb2f50 <col:5> 'void (*)(LOS_DL_LIST *, LOS_DL_LIST *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0xdb2ef0 <col:5> 'void (LOS_DL_LIST *, LOS_DL_LIST *)' Function 0xdb24f8 'LOS_ListAdd' 'void (LOS_DL_LIST *, LOS_DL_LIST *)'
| |   |-ImplicitCastExpr 0xdb2f98 <col:17> 'LOS_DL_LIST *' <LValueToRValue>
| |   | `-DeclRefExpr 0xdb2f10 <col:17> 'LOS_DL_LIST *' lvalue ParmVar 0xdb2d30 'list' 'LOS_DL_LIST *'
| |   `-ImplicitCastExpr 0xdb2fb0 <col:23> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0xdb2f30 <col:23> 'LOS_DL_LIST *' lvalue ParmVar 0xdb2da8 'node' 'LOS_DL_LIST *'
| `-FullComment 0xe176f0 <line:155:3, line:171:40>
|   |-ParagraphComment 0xe16d10 <line:155:3>
|   | `-TextComment 0xe16ce0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe16d30 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xe16da0 <line:156:3>
|   | `-TextComment 0xe16d70 <col:3> Text=" "
|   |-BlockCommandComment 0xe16dc0 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0xe16e20 <col:10, col:60>
|   |   `-TextComment 0xe16df0 <col:10, col:60> Text=" Insert a node to the head of a doubly linked list."
|   |-ParagraphComment 0xe16e70 <line:158:3>
|   | `-TextComment 0xe16e40 <col:3> Text=" "
|   |-BlockCommandComment 0xe16e90 <col:4, line:160:3> Name="par"
|   | `-ParagraphComment 0xe16f40 <line:158:8, line:160:3>
|   |   |-TextComment 0xe16ec0 <line:158:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe16ee0 <line:159:3, col:77> Text=" This API is used to insert a new node to the head of a doubly linked list."
|   |   `-TextComment 0xe16f00 <line:160:3> Text=" "
|   |-BlockCommandComment 0xe16f60 <col:4, line:163:8> Name="attention"
|   | `-ParagraphComment 0xe17130 <line:161:3, line:163:8>
|   |   |-TextComment 0xe16f90 <line:161:3> Text=" "
|   |   |-HTMLStartTagComment 0xe16fb0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe16ff0 <line:162:3> Text=" "
|   |   |-HTMLStartTagComment 0xe17010 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe17050 <col:8, col:71> Text="The parameters passed in should be ensured to be legal pointers."
|   |   |-HTMLEndTagComment 0xe17070 <col:72, col:76> Name="li"
|   |   |-TextComment 0xe170a0 <line:163:3> Text=" "
|   |   `-HTMLEndTagComment 0xe170c0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe17180 <line:165:3>
|   | `-TextComment 0xe17150 <col:3> Text=" "
|   |-ParamCommandComment 0xe171a0 <col:4, line:166:3> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0xe17250 <line:165:15, line:166:3>
|   |   |-TextComment 0xe17200 <line:165:15, col:74> Text="     [IN] Doubly linked list where the new node is inserted."
|   |   `-TextComment 0xe17220 <line:166:3> Text=" "
|   |-ParamCommandComment 0xe17270 <col:4, col:48> [in] implicitly Param="node" ParamIndex=1
|   | `-ParagraphComment 0xe17300 <col:15, col:48>
|   |   `-TextComment 0xe172d0 <col:15, col:48> Text="     [IN] New node to be inserted."
|   |-ParagraphComment 0xe17350 <line:168:3>
|   | `-TextComment 0xe17320 <col:3> Text=" "
|   |-BlockCommandComment 0xe17370 <col:4, line:169:3> Name="retval"
|   | `-ParagraphComment 0xe173f0 <line:168:11, line:169:3>
|   |   |-TextComment 0xe173a0 <line:168:11, col:16> Text=" None."
|   |   `-TextComment 0xe173c0 <line:169:3> Text=" "
|   |-BlockCommandComment 0xe17410 <col:4, line:171:3> Name="par"
|   | `-ParagraphComment 0xe175e0 <line:169:8, line:171:3>
|   |   |-TextComment 0xe17440 <line:169:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe17460 <line:170:3> Text=" "
|   |   |-HTMLStartTagComment 0xe17480 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe174c0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe17500 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe17520 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe17550 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe17580 <line:171:3> Text=" "
|   `-BlockCommandComment 0xe17600 <col:4, col:40> Name="see"
|     `-ParagraphComment 0xe17660 <col:8, col:40>
|       `-TextComment 0xe17630 <col:8, col:40> Text=" LOS_ListAdd | LOS_ListTailInsert"
|-FunctionDecl 0xdb4220 <main/los_compiler.h:130:23, main/los_list.h:204:1> line:198:43 used LOS_ListDelete 'void (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xdb4190 <col:58, col:71> col:71 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0xdb4858 <line:199:1, line:204:1>
| | |-BinaryOperator 0xdb43f8 <line:200:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xdb4348 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xdab4b0
| | | | `-ImplicitCastExpr 0xdb4330 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0xdb4300 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xdab550
| | | |     `-ImplicitCastExpr 0xdb42e8 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0xdb42c8 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xdb4190 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xdb43e0 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0xdb43b0 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xdab4b0
| | |     `-ImplicitCastExpr 0xdb4398 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0xdb4378 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0xdb4190 'node' 'LOS_DL_LIST *'
| | |-BinaryOperator 0xdb4548 <line:201:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xdb4498 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xdab550
| | | | `-ImplicitCastExpr 0xdb4480 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0xdb4450 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xdab4b0
| | | |     `-ImplicitCastExpr 0xdb4438 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0xdb4418 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xdb4190 'node' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xdb4530 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0xdb4500 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xdab550
| | |     `-ImplicitCastExpr 0xdb44e8 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0xdb44c8 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0xdb4190 'node' 'LOS_DL_LIST *'
| | |-BinaryOperator 0xdb46a8 <line:202:5, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xdb45a0 <main/los_list.h:202:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xdab550
| | | | `-ImplicitCastExpr 0xdb4588 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |   `-DeclRefExpr 0xdb4568 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xdb4190 'node' 'LOS_DL_LIST *'
| | | `-CStyleCastExpr 0xdb4680 <col:21, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'LOS_DL_LIST *' <BitCast>
| | |   `-ParenExpr 0xdb4660 <col:16, col:25> 'void *'
| | |     `-CStyleCastExpr 0xdb4608 <col:17, col:24> 'void *' <NullToPointer>
| | |       `-IntegerLiteral 0xdb45d0 <col:24> 'int' 0
| | `-BinaryOperator 0xdb4808 <main/los_list.h:203:5, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'struct LOS_DL_LIST *' '='
| |   |-MemberExpr 0xdb4700 <main/los_list.h:203:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xdab4b0
| |   | `-ImplicitCastExpr 0xdb46e8 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| |   |   `-DeclRefExpr 0xdb46c8 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xdb4190 'node' 'LOS_DL_LIST *'
| |   `-CStyleCastExpr 0xdb47e0 <col:21, /usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:89:25> 'LOS_DL_LIST *' <BitCast>
| |     `-ParenExpr 0xdb47c0 <col:16, col:25> 'void *'
| |       `-CStyleCastExpr 0xdb4768 <col:17, col:24> 'void *' <NullToPointer>
| |         `-IntegerLiteral 0xdb4730 <col:24> 'int' 0
| `-FullComment 0xe18220 <main/los_list.h:179:3, line:196:19>
|   |-ParagraphComment 0xe17790 <line:179:3>
|   | `-TextComment 0xe17760 <col:3> Text=" "
|   |-VerbatimLineComment 0xe177b0 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xe17820 <line:180:3>
|   | `-TextComment 0xe177f0 <col:3> Text=" "
|   |-BlockCommandComment 0xe17840 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0xe178a0 <col:10, col:60>
|   |   `-TextComment 0xe17870 <col:10, col:60> Text=" Delete a specified node from a doubly linked list."
|   |-ParagraphComment 0xe178f0 <line:182:3>
|   | `-TextComment 0xe178c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe17910 <col:4, line:186:3> Name="par"
|   | `-ParagraphComment 0xe17b30 <line:182:8, line:186:3>
|   |   |-TextComment 0xe17940 <line:182:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe17960 <line:183:3> Text=" "
|   |   |-HTMLStartTagComment 0xe17980 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe179c0 <line:184:3> Text=" "
|   |   |-HTMLStartTagComment 0xe179e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe17a20 <col:8, col:77> Text="This API is used to delete a specified node from a doubly linked list."
|   |   |-HTMLEndTagComment 0xe17a40 <col:78, col:82> Name="li"
|   |   |-TextComment 0xe17a70 <line:185:3> Text=" "
|   |   |-HTMLEndTagComment 0xe17a90 <col:4, col:8> Name="ul"
|   |   `-TextComment 0xe17ac0 <line:186:3> Text=" "
|   |-BlockCommandComment 0xe17b50 <col:4, line:189:8> Name="attention"
|   | `-ParagraphComment 0xe17d20 <line:187:3, line:189:8>
|   |   |-TextComment 0xe17b80 <line:187:3> Text=" "
|   |   |-HTMLStartTagComment 0xe17ba0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe17be0 <line:188:3> Text=" "
|   |   |-HTMLStartTagComment 0xe17c00 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe17c40 <col:8, col:71> Text="The parameter passed in should be ensured to be a legal pointer."
|   |   |-HTMLEndTagComment 0xe17c60 <col:72, col:76> Name="li"
|   |   |-TextComment 0xe17c90 <line:189:3> Text=" "
|   |   `-HTMLEndTagComment 0xe17cb0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe17d70 <line:191:3>
|   | `-TextComment 0xe17d40 <col:3> Text=" "
|   |-ParamCommandComment 0xe17d90 <col:4, col:42> [in] implicitly Param="node" ParamIndex=0
|   | `-ParagraphComment 0xe17e20 <col:15, col:42>
|   |   `-TextComment 0xe17df0 <col:15, col:42> Text="    [IN] Node to be deleted."
|   |-ParagraphComment 0xe17e70 <line:193:3>
|   | `-TextComment 0xe17e40 <col:3> Text=" "
|   |-BlockCommandComment 0xe17e90 <col:4, line:194:3> Name="retval"
|   | `-ParagraphComment 0xe17f10 <line:193:11, line:194:3>
|   |   |-TextComment 0xe17ec0 <line:193:11, col:16> Text=" None."
|   |   `-TextComment 0xe17ee0 <line:194:3> Text=" "
|   |-BlockCommandComment 0xe17f30 <col:4, line:196:3> Name="par"
|   | `-ParagraphComment 0xe18110 <line:194:8, line:196:3>
|   |   |-TextComment 0xe17f60 <line:194:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe17f90 <line:195:3> Text=" "
|   |   |-HTMLStartTagComment 0xe17fb0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe17ff0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe18030 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe18050 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe18080 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe180b0 <line:196:3> Text=" "
|   `-BlockCommandComment 0xe18130 <col:4, col:19> Name="see"
|     `-ParagraphComment 0xe18190 <col:8, col:19>
|       `-TextComment 0xe18160 <col:8, col:19> Text=" LOS_ListAdd"
|-FunctionDecl 0xdb4988 <main/los_compiler.h:130:23, main/los_list.h:230:1> line:227:43 used LOS_ListEmpty 'BOOL (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xdb4898 <col:57, col:70> col:70 used node 'LOS_DL_LIST *'
| |-CompoundStmt 0xdb4c78 <line:228:1, line:230:1>
| | `-ReturnStmt 0xdb4b80 <line:229:5, col:40>
| |   `-CStyleCastExpr 0xdb4b58 <col:12, col:40> 'BOOL':'unsigned int' <IntegralCast>
| |     `-ParenExpr 0xdb4b38 <col:18, col:40> 'int'
| |       `-BinaryOperator 0xdb4ae8 <col:19, col:36> 'int' '=='
| |         |-ImplicitCastExpr 0xdb4ab8 <col:19, col:25> 'struct LOS_DL_LIST *' <LValueToRValue>
| |         | `-MemberExpr 0xdb4a68 <col:19, col:25> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xdab550
| |         |   `-ImplicitCastExpr 0xdb4a50 <col:19> 'LOS_DL_LIST *' <LValueToRValue>
| |         |     `-DeclRefExpr 0xdb4a30 <col:19> 'LOS_DL_LIST *' lvalue ParmVar 0xdb4898 'node' 'LOS_DL_LIST *'
| |         `-ImplicitCastExpr 0xdb4ad0 <col:36> 'LOS_DL_LIST *' <LValueToRValue>
| |           `-DeclRefExpr 0xdb4a98 <col:36> 'LOS_DL_LIST *' lvalue ParmVar 0xdb4898 'node' 'LOS_DL_LIST *'
| `-FullComment 0xe18db0 <line:207:3, line:225:7>
|   |-ParagraphComment 0xe182c0 <line:207:3>
|   | `-TextComment 0xe18290 <col:3> Text=" "
|   |-VerbatimLineComment 0xe182e0 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xe18350 <line:208:3>
|   | `-TextComment 0xe18320 <col:3> Text=" "
|   |-BlockCommandComment 0xe18370 <col:4, col:67> Name="brief"
|   | `-ParagraphComment 0xe183d0 <col:10, col:67>
|   |   `-TextComment 0xe183a0 <col:10, col:67> Text=" Identify whether a specified doubly linked list is empty."
|   |-ParagraphComment 0xe18420 <line:210:3>
|   | `-TextComment 0xe183f0 <col:3> Text=" "
|   |-BlockCommandComment 0xe18440 <col:4, line:214:3> Name="par"
|   | `-ParagraphComment 0xe18660 <line:210:8, line:214:3>
|   |   |-TextComment 0xe18470 <line:210:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe18490 <line:211:3> Text=" "
|   |   |-HTMLStartTagComment 0xe184b0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe184f0 <line:212:3> Text=" "
|   |   |-HTMLStartTagComment 0xe18510 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe18550 <col:8, col:72> Text="This API is used to return whether a doubly linked list is empty."
|   |   |-HTMLEndTagComment 0xe18570 <col:73, col:77> Name="li"
|   |   |-TextComment 0xe185a0 <line:213:3> Text=" "
|   |   |-HTMLEndTagComment 0xe185c0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0xe185f0 <line:214:3> Text=" "
|   |-BlockCommandComment 0xe18680 <col:4, line:217:8> Name="attention"
|   | `-ParagraphComment 0xe18850 <line:215:3, line:217:8>
|   |   |-TextComment 0xe186b0 <line:215:3> Text=" "
|   |   |-HTMLStartTagComment 0xe186d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe18710 <line:216:3> Text=" "
|   |   |-HTMLStartTagComment 0xe18730 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe18770 <col:8, col:71> Text="The parameter passed in should be ensured to be a legal pointer."
|   |   |-HTMLEndTagComment 0xe18790 <col:72, col:76> Name="li"
|   |   |-TextComment 0xe187c0 <line:217:3> Text=" "
|   |   `-HTMLEndTagComment 0xe187e0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe188a0 <line:219:3>
|   | `-TextComment 0xe18870 <col:3> Text=" "
|   |-ParamCommandComment 0xe188c0 <col:4, col:40> [in] implicitly Param="list"
|   | `-ParagraphComment 0xe18950 <col:15, col:40>
|   |   `-TextComment 0xe18920 <col:15, col:40> Text="  [IN] Doubly linked node."
|   |-ParagraphComment 0xe189a0 <line:221:3>
|   | `-TextComment 0xe18970 <col:3> Text=" "
|   |-BlockCommandComment 0xe189c0 <col:4, line:222:3> Name="retval"
|   | `-ParagraphComment 0xe18a40 <line:221:11, line:222:3>
|   |   |-TextComment 0xe189f0 <line:221:11, col:48> Text=" TRUE The doubly linked list is empty."
|   |   `-TextComment 0xe18a10 <line:222:3> Text=" "
|   |-BlockCommandComment 0xe18a60 <col:4, line:223:3> Name="retval"
|   | `-ParagraphComment 0xe18ae0 <line:222:11, line:223:3>
|   |   |-TextComment 0xe18a90 <line:222:11, col:53> Text=" FALSE The doubly linked list is not empty."
|   |   `-TextComment 0xe18ab0 <line:223:3> Text=" "
|   |-BlockCommandComment 0xe18b00 <col:4, line:225:3> Name="par"
|   | `-ParagraphComment 0xe18cd0 <line:223:8, line:225:3>
|   |   |-TextComment 0xe18b30 <line:223:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe18b50 <line:224:3> Text=" "
|   |   |-HTMLStartTagComment 0xe18b70 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe18bb0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe18bf0 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe18c10 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe18c40 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe18c70 <line:225:3> Text=" "
|   `-BlockCommandComment 0xe18cf0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe18d20 <<invalid sloc>>
|-FunctionDecl 0xdb4d30 <main/los_compiler.h:130:23, main/los_list.h:356:1> line:351:43 LOS_ListDelInit 'void (LOS_DL_LIST *)' static inline
| |-ParmVarDecl 0xdb4ca0 <col:59, col:72> col:72 used list 'LOS_DL_LIST *'
| |-CompoundStmt 0xdb7f68 <line:352:1, line:356:1>
| | |-BinaryOperator 0xdb4f08 <line:353:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xdb4e58 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xdab4b0
| | | | `-ImplicitCastExpr 0xdb4e40 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0xdb4e10 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xdab550
| | | |     `-ImplicitCastExpr 0xdb4df8 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0xdb4dd8 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xdb4ca0 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xdb4ef0 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0xdb4ec0 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xdab4b0
| | |     `-ImplicitCastExpr 0xdb4ea8 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0xdb4e88 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0xdb4ca0 'list' 'LOS_DL_LIST *'
| | |-BinaryOperator 0xdb5058 <line:354:5, col:36> 'struct LOS_DL_LIST *' '='
| | | |-MemberExpr 0xdb4fa8 <col:5, col:20> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xdab550
| | | | `-ImplicitCastExpr 0xdb4f90 <col:5, col:11> 'struct LOS_DL_LIST *' <LValueToRValue>
| | | |   `-MemberExpr 0xdb4f60 <col:5, col:11> 'struct LOS_DL_LIST *' lvalue ->pstPrev 0xdab4b0
| | | |     `-ImplicitCastExpr 0xdb4f48 <col:5> 'LOS_DL_LIST *' <LValueToRValue>
| | | |       `-DeclRefExpr 0xdb4f28 <col:5> 'LOS_DL_LIST *' lvalue ParmVar 0xdb4ca0 'list' 'LOS_DL_LIST *'
| | | `-ImplicitCastExpr 0xdb5040 <col:30, col:36> 'struct LOS_DL_LIST *' <LValueToRValue>
| | |   `-MemberExpr 0xdb5010 <col:30, col:36> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xdab550
| | |     `-ImplicitCastExpr 0xdb4ff8 <col:30> 'LOS_DL_LIST *' <LValueToRValue>
| | |       `-DeclRefExpr 0xdb4fd8 <col:30> 'LOS_DL_LIST *' lvalue ParmVar 0xdb4ca0 'list' 'LOS_DL_LIST *'
| | `-CallExpr 0xdb5130 <line:355:5, col:22> 'void'
| |   |-ImplicitCastExpr 0xdb5118 <col:5> 'void (*)(LOS_DL_LIST *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0xdb5078 <col:5> 'void (LOS_DL_LIST *)' Function 0xdb20b8 'LOS_ListInit' 'void (LOS_DL_LIST *)'
| |   `-ImplicitCastExpr 0xdb5158 <col:18> 'LOS_DL_LIST *' <LValueToRValue>
| |     `-DeclRefExpr 0xdb5098 <col:18> 'LOS_DL_LIST *' lvalue ParmVar 0xdb4ca0 'list' 'LOS_DL_LIST *'
| `-FullComment 0xe19730 <line:334:3, line:349:7>
|   |-ParagraphComment 0xe18e50 <line:334:3>
|   | `-TextComment 0xe18e20 <col:3> Text=" "
|   |-VerbatimLineComment 0xe18e70 <col:4, col:21> Text=" los_list"
|   |-ParagraphComment 0xe18ee0 <line:335:3>
|   | `-TextComment 0xe18eb0 <col:3> Text=" "
|   |-BlockCommandComment 0xe18f00 <col:4, col:49> Name="brief"
|   | `-ParagraphComment 0xe18f60 <col:10, col:49>
|   |   `-TextComment 0xe18f30 <col:10, col:49> Text=" Delete initialize a doubly linked list."
|   |-ParagraphComment 0xe18fb0 <line:337:3>
|   | `-TextComment 0xe18f80 <col:3> Text=" "
|   |-BlockCommandComment 0xe18fd0 <col:4, line:339:3> Name="par"
|   | `-ParagraphComment 0xe19080 <line:337:8, line:339:3>
|   |   |-TextComment 0xe19000 <line:337:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe19020 <line:338:3, col:62> Text=" This API is used to delete initialize a doubly linked list."
|   |   `-TextComment 0xe19040 <line:339:3> Text=" "
|   |-BlockCommandComment 0xe190a0 <col:4, line:342:8> Name="attention"
|   | `-ParagraphComment 0xe19270 <line:340:3, line:342:8>
|   |   |-TextComment 0xe190d0 <line:340:3> Text=" "
|   |   |-HTMLStartTagComment 0xe190f0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe19130 <line:341:3> Text=" "
|   |   |-HTMLStartTagComment 0xe19150 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe19190 <col:8, col:71> Text="The parameter passed in should be ensured to be s legal pointer."
|   |   |-HTMLEndTagComment 0xe191b0 <col:72, col:76> Name="li"
|   |   |-TextComment 0xe191e0 <line:342:3> Text=" "
|   |   `-HTMLEndTagComment 0xe19200 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe192c0 <line:344:3>
|   | `-TextComment 0xe19290 <col:3> Text=" "
|   |-ParamCommandComment 0xe192e0 <col:4, col:42> [in] implicitly Param="list" ParamIndex=0
|   | `-ParagraphComment 0xe19370 <col:15, col:42>
|   |   `-TextComment 0xe19340 <col:15, col:42> Text="    [IN] Doubly linked list."
|   |-ParagraphComment 0xe193c0 <line:346:3>
|   | `-TextComment 0xe19390 <col:3> Text=" "
|   |-BlockCommandComment 0xe193e0 <col:4, line:347:3> Name="retval"
|   | `-ParagraphComment 0xe19460 <line:346:11, line:347:3>
|   |   |-TextComment 0xe19410 <line:346:11, col:16> Text=" None."
|   |   `-TextComment 0xe19430 <line:347:3> Text=" "
|   |-BlockCommandComment 0xe19480 <col:4, line:349:3> Name="par"
|   | `-ParagraphComment 0xe19650 <line:347:8, line:349:3>
|   |   |-TextComment 0xe194b0 <line:347:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe194d0 <line:348:3> Text=" "
|   |   |-HTMLStartTagComment 0xe194f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe19530 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe19570 <col:12, col:73> Text="los_list.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe19590 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe195c0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe195f0 <line:349:3> Text=" "
|   `-BlockCommandComment 0xe19670 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe196a0 <<invalid sloc>>
|-RecordDecl 0xdb7f90 <main/los_event.h:171:9, line:175:1> line:171:16 struct tagEvent definition
| |-FullComment 0xe198a0 <line:168:3, line:169:26>
| | |-ParagraphComment 0xe197d0 <line:168:3>
| | | `-TextComment 0xe197a0 <col:3> Text=" "
| | |-VerbatimLineComment 0xe197f0 <col:4, col:22> Text=" los_event"
| | `-ParagraphComment 0xe19860 <line:169:3, col:26>
| |   `-TextComment 0xe19830 <col:3, col:26> Text=" Event control structure"
| |-FieldDecl 0xdb8040 <line:172:5, col:12> col:12 uwEventID 'UINT32':'unsigned int'
| | `-FullComment 0xe19990 <col:34, line:173:90>
| |   `-ParagraphComment 0xe19960 <line:172:34, line:173:90>
| |     |-TextComment 0xe19910 <line:172:34, col:72> Text=" Event mask in the event control block,"
| |     `-TextComment 0xe19930 <line:173:1, col:90> Text="                                  indicating the event that has been logically processed. "
| `-FieldDecl 0xdb80c8 <line:174:5, col:17> col:17 stEventList 'LOS_DL_LIST':'struct LOS_DL_LIST'
|   `-FullComment 0xe19a60 <col:34, col:66>
|     `-ParagraphComment 0xe19a30 <col:34, col:66>
|       `-TextComment 0xe19a00 <col:34, col:66> Text=" Event control block linked list "
|-TypedefDecl 0xdb81a8 <line:171:1, line:175:3> col:3 referenced EVENT_CB_S 'struct tagEvent':'struct tagEvent'
| |-ElaboratedType 0xdb8150 'struct tagEvent' sugar
| | `-RecordType 0xdb8010 'struct tagEvent'
| |   `-Record 0xdb7f90 'tagEvent'
| `-FullComment 0xe19bd0 <line:168:3, line:169:26>
|   |-ParagraphComment 0xe19b00 <line:168:3>
|   | `-TextComment 0xe19ad0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe19b20 <col:4, col:22> Text=" los_event"
|   `-ParagraphComment 0xe19b90 <line:169:3, col:26>
|     `-TextComment 0xe19b60 <col:3, col:26> Text=" Event control structure"
|-TypedefDecl 0xdb8280 <line:171:1, line:175:16> col:16 referenced PEVENT_CB_S 'struct tagEvent *'
| |-PointerType 0xdb8230 'struct tagEvent *'
| | `-ElaboratedType 0xdb8150 'struct tagEvent' sugar
| |   `-RecordType 0xdb8010 'struct tagEvent'
| |     `-Record 0xdb7f90 'tagEvent'
| `-FullComment 0xe19d40 <line:168:3, line:169:26>
|   |-ParagraphComment 0xe19c70 <line:168:3>
|   | `-TextComment 0xe19c40 <col:3> Text=" "
|   |-VerbatimLineComment 0xe19c90 <col:4, col:22> Text=" los_event"
|   `-ParagraphComment 0xe19d00 <line:169:3, col:26>
|     `-TextComment 0xe19cd0 <col:3, col:26> Text=" Event control structure"
|-FunctionDecl 0xdb8458 <line:195:1, col:48> col:15 LOS_EventInit 'UINT32 (PEVENT_CB_S)' extern
| |-ParmVarDecl 0xdb8360 <col:29, col:41> col:41 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| `-FullComment 0xe1a7a0 <line:177:3, line:193:22>
|   |-ParagraphComment 0xe19de0 <line:177:3>
|   | `-TextComment 0xe19db0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe19e00 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xe19e70 <line:178:3>
|   | `-TextComment 0xe19e40 <col:3> Text=" "
|   |-BlockCommandComment 0xe19e90 <col:4, col:44> Name="brief"
|   | `-ParagraphComment 0xe19ef0 <col:10, col:44>
|   |   `-TextComment 0xe19ec0 <col:10, col:44> Text=" Initialize an event control block."
|   |-ParagraphComment 0xe19f40 <line:180:3>
|   | `-TextComment 0xe19f10 <col:3> Text=" "
|   |-BlockCommandComment 0xe19f60 <col:4, line:182:3> Name="par"
|   | `-ParagraphComment 0xe1a020 <line:180:8, line:182:3>
|   |   |-TextComment 0xe19fa0 <line:180:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe19fc0 <line:181:3, col:80> Text=" This API is used to initialize the event control block pointed to by eventCB."
|   |   `-TextComment 0xe19fe0 <line:182:3> Text=" "
|   |-BlockCommandComment 0xe1a040 <col:4, line:185:8> Name="attention"
|   | `-ParagraphComment 0xe1a210 <line:183:3, line:185:8>
|   |   |-TextComment 0xe1a070 <line:183:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1a090 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe1a0d0 <line:184:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1a0f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe1a130 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe1a150 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe1a180 <line:185:3> Text=" "
|   |   `-HTMLEndTagComment 0xe1a1a0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe1a260 <line:187:3>
|   | `-TextComment 0xe1a230 <col:3> Text=" "
|   |-ParamCommandComment 0xe1a280 <col:4, col:80> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0xe1a310 <col:18, col:80>
|   |   `-TextComment 0xe1a2e0 <col:18, col:80> Text=" [IN/OUT] Pointer to the event control block to be initialized."
|   |-ParagraphComment 0xe1a360 <line:189:3>
|   | `-TextComment 0xe1a330 <col:3> Text=" "
|   |-BlockCommandComment 0xe1a380 <col:4, line:190:3> Name="retval"
|   | `-ParagraphComment 0xe1a400 <line:189:11, line:190:3>
|   |   |-TextComment 0xe1a3b0 <line:189:11, col:51> Text=" #LOS_ERRNO_EVENT_PTR_NULL  Null pointer."
|   |   `-TextComment 0xe1a3d0 <line:190:3> Text=" "
|   |-BlockCommandComment 0xe1a420 <col:4, line:191:3> Name="retval"
|   | `-ParagraphComment 0xe1a4a0 <line:190:11, line:191:3>
|   |   |-TextComment 0xe1a450 <line:190:11, col:90> Text=" #LOS_OK                    The event control block is successfully initialized."
|   |   `-TextComment 0xe1a470 <line:191:3> Text=" "
|   |-BlockCommandComment 0xe1a4c0 <col:4, line:193:3> Name="par"
|   | `-ParagraphComment 0xe1a690 <line:191:8, line:193:3>
|   |   |-TextComment 0xe1a4f0 <line:191:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe1a510 <line:192:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1a530 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe1a570 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe1a5b0 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe1a5d0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xe1a600 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xe1a630 <line:193:3> Text=" "
|   `-BlockCommandComment 0xe1a6b0 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xe1a710 <col:8, col:22>
|       `-TextComment 0xe1a6e0 <col:8, col:22> Text=" LOS_EventClear"
|-FunctionDecl 0xdb8778 <line:221:1, col:75> col:15 LOS_EventPoll 'UINT32 (UINT32 *, UINT32, UINT32)' extern
| |-ParmVarDecl 0xdb8568 <col:29, col:37> col:37 eventID 'UINT32 *'
| |-ParmVarDecl 0xdb85e0 <col:46, col:53> col:53 eventMask 'UINT32':'unsigned int'
| |-ParmVarDecl 0xdb8658 <col:64, col:71> col:71 mode 'UINT32':'unsigned int'
| `-FullComment 0xe1b4c0 <line:198:3, line:219:38>
|   |-ParagraphComment 0xe1a840 <line:198:3>
|   | `-TextComment 0xe1a810 <col:3> Text=" "
|   |-VerbatimLineComment 0xe1a860 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xe1a8d0 <line:199:3>
|   | `-TextComment 0xe1a8a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe1a8f0 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0xe1a950 <col:10, col:52>
|   |   `-TextComment 0xe1a920 <col:10, col:52> Text=" Obtain an event specified by the event ID."
|   |-ParagraphComment 0xe1a9a0 <line:201:3>
|   | `-TextComment 0xe1a970 <col:3> Text=" "
|   |-BlockCommandComment 0xe1a9c0 <col:4, line:204:3> Name="par"
|   | `-ParagraphComment 0xe1aa90 <line:201:8, line:204:3>
|   |   |-TextComment 0xe1a9f0 <line:201:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe1aa10 <line:202:3, col:112> Text=" This API is used to check whether an event expected by the user occurs according to the event ID, event mask,"
|   |   |-TextComment 0xe1aa30 <line:203:3, col:122> Text=" and event reading mode, and process the event based on the event reading mode. The event ID must point to valid memory."
|   |   `-TextComment 0xe1aa50 <line:204:3> Text=" "
|   |-BlockCommandComment 0xe1aab0 <col:4, line:208:8> Name="attention"
|   | `-ParagraphComment 0xe1ad50 <line:205:3, line:208:8>
|   |   |-TextComment 0xe1aae0 <line:205:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1ab00 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe1ab40 <line:206:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1ab60 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe1aba0 <col:8, col:68> Text="When the mode is LOS_WAITMODE_CLR, the eventID is passed-out."
|   |   |-HTMLEndTagComment 0xe1abc0 <col:69, col:73> Name="li"
|   |   |-TextComment 0xe1abf0 <line:207:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1ac10 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe1ac50 <col:8, col:42> Text="Otherwise the eventID is passed-in."
|   |   |-HTMLEndTagComment 0xe1ac70 <col:43, col:47> Name="li"
|   |   |-TextComment 0xe1aca0 <line:208:3> Text=" "
|   |   `-HTMLEndTagComment 0xe1acc0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe1ada0 <line:210:3>
|   | `-TextComment 0xe1ad70 <col:3> Text=" "
|   |-ParamCommandComment 0xe1adc0 <col:4, line:211:3> [in] implicitly Param="eventID" ParamIndex=0
|   | `-ParagraphComment 0xe1ae70 <line:210:18, line:211:3>
|   |   |-TextComment 0xe1ae20 <line:210:18, col:77> Text="      [IN/OUT] Pointer to the ID of the event to be checked."
|   |   `-TextComment 0xe1ae40 <line:211:3> Text=" "
|   |-ParamCommandComment 0xe1ae90 <col:4, line:213:3> [in] implicitly Param="eventMask" ParamIndex=1
|   | `-ParagraphComment 0xe1af70 <line:211:20, line:213:3>
|   |   |-TextComment 0xe1aef0 <line:211:20, col:112> Text="    [IN] Mask of the event expected to occur by the user, indicating the event obtained after"
|   |   |-TextComment 0xe1af10 <line:212:3, col:68> Text=" it is logically processed that matches the ID pointed to by mode."
|   |   `-TextComment 0xe1af30 <line:213:3> Text=" "
|   |-ParamCommandComment 0xe1af90 <col:4, col:118> [in] implicitly Param="mode" ParamIndex=2
|   | `-ParagraphComment 0xe1b020 <col:15, col:118>
|   |   `-TextComment 0xe1aff0 <col:15, col:118> Text="         [IN] Event reading mode. The modes include LOS_WAITMODE_AND, LOS_WAITMODE_OR, LOS_WAITMODE_CLR."
|   |-ParagraphComment 0xe1b070 <line:215:3>
|   | `-TextComment 0xe1b040 <col:3> Text=" "
|   |-BlockCommandComment 0xe1b090 <col:4, line:216:3> Name="retval"
|   | `-ParagraphComment 0xe1b110 <line:215:11, line:216:3>
|   |   |-TextComment 0xe1b0c0 <line:215:11, col:71> Text=" 0             The event expected by the user does not occur."
|   |   `-TextComment 0xe1b0e0 <line:216:3> Text=" "
|   |-BlockCommandComment 0xe1b130 <col:4, line:217:3> Name="retval"
|   | `-ParagraphComment 0xe1b1b0 <line:216:11, line:217:3>
|   |   |-TextComment 0xe1b160 <line:216:11, col:63> Text=" #UINT32       The event expected by the user occurs."
|   |   `-TextComment 0xe1b180 <line:217:3> Text=" "
|   |-BlockCommandComment 0xe1b1d0 <col:4, line:219:3> Name="par"
|   | `-ParagraphComment 0xe1b3a0 <line:217:8, line:219:3>
|   |   |-TextComment 0xe1b200 <line:217:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe1b220 <line:218:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1b240 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe1b280 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe1b2c0 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe1b2e0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xe1b310 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xe1b340 <line:219:3> Text=" "
|   `-BlockCommandComment 0xe1b3c0 <col:4, col:38> Name="see"
|     `-ParagraphComment 0xe1b420 <col:8, col:38>
|       `-TextComment 0xe1b3f0 <col:8, col:38> Text=" LOS_EventRead | LOS_EventWrite"
|-FunctionDecl 0xdb8b18 <line:255:1, col:95> col:15 LOS_EventRead 'UINT32 (PEVENT_CB_S, UINT32, UINT32, UINT32)' extern
| |-ParmVarDecl 0xdb8868 <col:29, col:41> col:41 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0xdb88e0 <col:50, col:57> col:57 eventMask 'UINT32':'unsigned int'
| |-ParmVarDecl 0xdb8958 <col:68, col:75> col:75 mode 'UINT32':'unsigned int'
| |-ParmVarDecl 0xdb89d0 <col:81, col:88> col:88 timeOut 'UINT32':'unsigned int'
| `-FullComment 0xe1c670 <line:224:3, line:253:38>
|   |-ParagraphComment 0xe1b560 <line:224:3>
|   | `-TextComment 0xe1b530 <col:3> Text=" "
|   |-VerbatimLineComment 0xe1b580 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xe1b5f0 <line:225:3>
|   | `-TextComment 0xe1b5c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe1b610 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0xe1b670 <col:10, col:24>
|   |   `-TextComment 0xe1b640 <col:10, col:24> Text=" Read an event."
|   |-ParagraphComment 0xe1b6c0 <line:227:3>
|   | `-TextComment 0xe1b690 <col:3> Text=" "
|   |-BlockCommandComment 0xe1b6e0 <col:4, line:231:3> Name="par"
|   | `-ParagraphComment 0xe1b810 <line:227:8, line:231:3>
|   |   |-TextComment 0xe1b710 <line:227:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe1b730 <line:228:3, col:127> Text=" This API is used to block or schedule a task that reads an event of which the event control block, event mask, reading mode,"
|   |   |-TextComment 0xe1b750 <line:229:3, col:41> Text=" and timeout information are specified."
|   |   |-TextComment 0xe1b770 <line:230:3> Text=" "
|   |   |-HTMLEndTagComment 0xe1b790 <col:4, col:8> Name="ul"
|   |   `-TextComment 0xe1b7c0 <line:231:3> Text=" "
|   |-BlockCommandComment 0xe1b830 <col:4, line:235:8> Name="attention"
|   | `-ParagraphComment 0xe1ba20 <line:232:3, line:235:8>
|   |   |-TextComment 0xe1b860 <line:232:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1b880 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe1b8c0 <line:233:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1b8e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe1b920 <col:8, col:119> Text="An error code and an event return value can be same. To differentiate the error code and return value, bit 25 of"
|   |   |-TextComment 0xe1b940 <line:234:3, col:42> Text=" the event mask is forbidden to be used."
|   |   |-HTMLEndTagComment 0xe1b960 <col:43, col:47> Name="li"
|   |   |-TextComment 0xe1b990 <line:235:3> Text=" "
|   |   `-HTMLEndTagComment 0xe1b9b0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe1ba70 <line:237:3>
|   | `-TextComment 0xe1ba40 <col:3> Text=" "
|   |-ParamCommandComment 0xe1ba90 <col:4, line:238:3> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0xe1bb40 <line:237:18, line:238:3>
|   |   |-TextComment 0xe1baf0 <line:237:18, col:124> Text="      [IN/OUT] Pointer to the event control block to be checked. This parameter must point to valid memory."
|   |   `-TextComment 0xe1bb10 <line:238:3> Text=" "
|   |-ParamCommandComment 0xe1bb60 <col:4, line:240:3> [in] implicitly Param="eventMask" ParamIndex=1
|   | `-ParagraphComment 0xe1bc40 <line:238:20, line:240:3>
|   |   |-TextComment 0xe1bbc0 <line:238:20, col:116> Text="    [IN]     Mask of the event expected to occur by the user, indicating the event obtained after"
|   |   |-TextComment 0xe1bbe0 <line:239:3, col:100> Text="                              it is logically processed that matches the ID pointed to by eventID."
|   |   `-TextComment 0xe1bc00 <line:240:3> Text=" "
|   |-ParamCommandComment 0xe1bc60 <col:4, line:241:3> [in] implicitly Param="mode" ParamIndex=2
|   | `-ParagraphComment 0xe1bd10 <line:240:15, line:241:3>
|   |   |-TextComment 0xe1bcc0 <line:240:15, col:51> Text="         [IN]     Event reading mode."
|   |   `-TextComment 0xe1bce0 <line:241:3> Text=" "
|   |-ParamCommandComment 0xe1bd30 <col:4, col:79> [in] implicitly Param="timeOut" ParamIndex=3
|   | `-ParagraphComment 0xe1bdc0 <col:18, col:79>
|   |   `-TextComment 0xe1bd90 <col:18, col:79> Text="      [IN]     Timeout interval of event reading (unit: Tick)."
|   |-ParagraphComment 0xe1be10 <line:243:3>
|   | `-TextComment 0xe1bde0 <col:3> Text=" "
|   |-BlockCommandComment 0xe1be30 <col:4, line:244:3> Name="retval"
|   | `-ParagraphComment 0xe1beb0 <line:243:11, line:244:3>
|   |   |-TextComment 0xe1be60 <line:243:11, col:123> Text=" #LOS_ERRNO_EVENT_SETBIT_INVALID     Bit 25 of the event mask cannot be set because it is set to an error number."
|   |   `-TextComment 0xe1be80 <line:244:3> Text=" "
|   |-BlockCommandComment 0xe1bed0 <col:4, line:245:3> Name="retval"
|   | `-ParagraphComment 0xe1bf50 <line:244:11, line:245:3>
|   |   |-TextComment 0xe1bf00 <line:244:11, col:93> Text=" #LOS_ERRNO_EVENT_EVENTMASK_INVALID  The passed-in event reading mode is incorrect."
|   |   `-TextComment 0xe1bf20 <line:245:3> Text=" "
|   |-BlockCommandComment 0xe1bf70 <col:4, line:246:3> Name="retval"
|   | `-ParagraphComment 0xe1c000 <line:245:11, line:246:3>
|   |   |-TextComment 0xe1bfb0 <line:245:11, col:91> Text=" #LOS_ERRNO_EVENT_READ_IN_INTERRUPT  The event is being read during an interrupt."
|   |   `-TextComment 0xe1bfd0 <line:246:3> Text=" "
|   |-BlockCommandComment 0xe1c020 <col:4, line:247:3> Name="retval"
|   | `-ParagraphComment 0xe1c0a0 <line:246:11, line:247:3>
|   |   |-TextComment 0xe1c050 <line:246:11, col:73> Text=" #LOS_ERRNO_EVENT_FLAGS_INVALID      The event mode is invalid."
|   |   `-TextComment 0xe1c070 <line:247:3> Text=" "
|   |-BlockCommandComment 0xe1c0c0 <col:4, line:248:3> Name="retval"
|   | `-ParagraphComment 0xe1c140 <line:247:11, line:248:3>
|   |   |-TextComment 0xe1c0f0 <line:247:11, col:80> Text=" #LOS_ERRNO_EVENT_READ_IN_LOCK       The event reading task is locked."
|   |   `-TextComment 0xe1c110 <line:248:3> Text=" "
|   |-BlockCommandComment 0xe1c160 <col:4, line:249:3> Name="retval"
|   | `-ParagraphComment 0xe1c1e0 <line:248:11, line:249:3>
|   |   |-TextComment 0xe1c190 <line:248:11, col:77> Text=" #LOS_ERRNO_EVENT_PTR_NULL           The passed-in pointer is null."
|   |   `-TextComment 0xe1c1b0 <line:249:3> Text=" "
|   |-BlockCommandComment 0xe1c200 <col:4, line:250:3> Name="retval"
|   | `-ParagraphComment 0xe1c280 <line:249:11, line:250:3>
|   |   |-TextComment 0xe1c230 <line:249:11, col:93> Text=" 0                                   The event expected by the user does not occur."
|   |   `-TextComment 0xe1c250 <line:250:3> Text=" "
|   |-BlockCommandComment 0xe1c2a0 <col:4, line:251:3> Name="retval"
|   | `-ParagraphComment 0xe1c320 <line:250:11, line:251:3>
|   |   |-TextComment 0xe1c2d0 <line:250:11, col:85> Text=" #UINT32                             The event expected by the user occurs."
|   |   `-TextComment 0xe1c2f0 <line:251:3> Text=" "
|   |-BlockCommandComment 0xe1c340 <col:4, line:253:3> Name="par"
|   | `-ParagraphComment 0xe1c510 <line:251:8, line:253:3>
|   |   |-TextComment 0xe1c370 <line:251:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe1c390 <line:252:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1c3b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe1c3f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe1c430 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe1c450 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xe1c480 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xe1c4b0 <line:253:3> Text=" "
|   `-BlockCommandComment 0xe1c530 <col:4, col:38> Name="see"
|     `-ParagraphComment 0xe1c590 <col:8, col:38>
|       `-TextComment 0xe1c560 <col:8, col:38> Text=" LOS_EventPoll | LOS_EventWrite"
|-FunctionDecl 0xdbaf48 <line:282:1, col:64> col:15 LOS_EventWrite 'UINT32 (PEVENT_CB_S, UINT32)' extern
| |-ParmVarDecl 0xdbadc0 <col:30, col:42> col:42 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0xdbae38 <col:51, col:58> col:58 events 'UINT32':'unsigned int'
| `-FullComment 0xe1d2e0 <line:258:3, line:280:37>
|   |-ParagraphComment 0xe1c710 <line:258:3>
|   | `-TextComment 0xe1c6e0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe1c730 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xe1c7a0 <line:259:3>
|   | `-TextComment 0xe1c770 <col:3> Text=" "
|   |-BlockCommandComment 0xe1c7c0 <col:4, col:25> Name="brief"
|   | `-ParagraphComment 0xe1c820 <col:10, col:25>
|   |   `-TextComment 0xe1c7f0 <col:10, col:25> Text=" Write an event."
|   |-ParagraphComment 0xe1c870 <line:261:3>
|   | `-TextComment 0xe1c840 <col:3> Text=" "
|   |-BlockCommandComment 0xe1c890 <col:4, line:264:3> Name="par"
|   | `-ParagraphComment 0xe1c960 <line:261:8, line:264:3>
|   |   |-TextComment 0xe1c8c0 <line:261:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe1c8e0 <line:262:3, col:103> Text=" This API is used to write an event specified by the passed-in event mask into an event control block"
|   |   |-TextComment 0xe1c900 <line:263:3, col:25> Text=" pointed to by eventCB."
|   |   `-TextComment 0xe1c920 <line:264:3> Text=" "
|   |-BlockCommandComment 0xe1c980 <col:4, line:268:8> Name="attention"
|   | `-ParagraphComment 0xe1cb70 <line:265:3, line:268:8>
|   |   |-TextComment 0xe1c9b0 <line:265:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1c9d0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe1ca10 <line:266:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1ca30 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe1ca70 <col:8, col:109> Text="To determine whether the LOS_EventRead API returns an event or an error code, bit 25 of the event mask"
|   |   |-TextComment 0xe1ca90 <line:267:3, col:27> Text=" is forbidden to be used."
|   |   |-HTMLEndTagComment 0xe1cab0 <col:28, col:32> Name="li"
|   |   |-TextComment 0xe1cae0 <line:268:3> Text=" "
|   |   `-HTMLEndTagComment 0xe1cb00 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe1cbc0 <line:270:3>
|   | `-TextComment 0xe1cb90 <col:3> Text=" "
|   |-ParamCommandComment 0xe1cbe0 <col:4, line:272:3> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0xe1ccc0 <line:270:18, line:272:3>
|   |   |-TextComment 0xe1cc40 <line:270:18, col:100> Text="  [IN/OUT] Pointer to the event control block into which an event is to be written."
|   |   |-TextComment 0xe1cc60 <line:271:3, col:45> Text=" This parameter must point to valid memory."
|   |   `-TextComment 0xe1cc80 <line:272:3> Text=" "
|   |-ParamCommandComment 0xe1cce0 <col:4, col:49> [in] implicitly Param="events" ParamIndex=1
|   | `-ParagraphComment 0xe1cd70 <col:17, col:49>
|   |   `-TextComment 0xe1cd40 <col:17, col:49> Text="   [IN] Event mask to be written."
|   |-ParagraphComment 0xe1cdc0 <line:274:3>
|   | `-TextComment 0xe1cd90 <col:3> Text=" "
|   |-BlockCommandComment 0xe1cde0 <col:4, line:276:3> Name="retval"
|   | `-ParagraphComment 0xe1ce90 <line:274:11, line:276:3>
|   |   |-TextComment 0xe1ce10 <line:274:11, col:94> Text=" #LOS_ERRNO_EVENT_SETBIT_INVALID  Bit 25 of the event mask cannot be set to an event"
|   |   |-TextComment 0xe1ce30 <line:275:3, col:38> Text=" because it is set to an error code."
|   |   `-TextComment 0xe1ce50 <line:276:3> Text=" "
|   |-BlockCommandComment 0xe1ceb0 <col:4, line:277:3> Name="retval"
|   | `-ParagraphComment 0xe1cf30 <line:276:11, line:277:3>
|   |   |-TextComment 0xe1cee0 <line:276:11, col:57> Text=" #LOS_ERRNO_EVENT_PTR_NULL        Null pointer."
|   |   `-TextComment 0xe1cf00 <line:277:3> Text=" "
|   |-BlockCommandComment 0xe1cf50 <col:4, line:278:3> Name="retval"
|   | `-ParagraphComment 0xe1cfd0 <line:277:11, line:278:3>
|   |   |-TextComment 0xe1cf80 <line:277:11, col:78> Text=" #LOS_OK                          The event is successfully written."
|   |   `-TextComment 0xe1cfa0 <line:278:3> Text=" "
|   |-BlockCommandComment 0xe1cff0 <col:4, line:280:3> Name="par"
|   | `-ParagraphComment 0xe1d1c0 <line:278:8, line:280:3>
|   |   |-TextComment 0xe1d020 <line:278:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe1d040 <line:279:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1d060 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe1d0a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe1d0e0 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe1d100 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xe1d130 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xe1d160 <line:280:3> Text=" "
|   `-BlockCommandComment 0xe1d1e0 <col:4, col:37> Name="see"
|     `-ParagraphComment 0xe1d240 <col:8, col:37>
|       `-TextComment 0xe1d210 <col:8, col:37> Text=" LOS_EventPoll | LOS_EventRead"
|-FunctionDecl 0xdbb148 <line:307:1, col:67> col:15 LOS_EventClear 'UINT32 (PEVENT_CB_S, UINT32)' extern
| |-ParmVarDecl 0xdbb038 <col:30, col:42> col:42 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0xdbb0b0 <col:51, col:58> col:58 eventMask 'UINT32':'unsigned int'
| `-FullComment 0xe1dfc0 <line:285:3, line:305:54>
|   |-ParagraphComment 0xe1d380 <line:285:3>
|   | `-TextComment 0xe1d350 <col:3> Text=" "
|   |-VerbatimLineComment 0xe1d3a0 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xe1d410 <line:286:3>
|   | `-TextComment 0xe1d3e0 <col:3> Text=" "
|   |-BlockCommandComment 0xe1d430 <col:4, col:66> Name="brief"
|   | `-ParagraphComment 0xe1d490 <col:10, col:66>
|   |   `-TextComment 0xe1d460 <col:10, col:66> Text=" Clear the event of the eventCB by a specified eventMask."
|   |-ParagraphComment 0xe1d4e0 <line:288:3>
|   | `-TextComment 0xe1d4b0 <col:3> Text=" "
|   |-BlockCommandComment 0xe1d500 <col:4, line:293:3> Name="par"
|   | `-ParagraphComment 0xe1d750 <line:288:8, line:293:3>
|   |   |-TextComment 0xe1d530 <line:288:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe1d550 <line:289:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1d570 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe1d5b0 <line:290:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1d5d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe1d610 <col:8, col:117> Text="This API is used to set the ID of an event that has a specified mask and of which the information is stored in"
|   |   |-TextComment 0xe1d630 <line:291:3, col:89> Text=" an event control block pointed to by eventCB to 0. eventCB must point to valid memory."
|   |   |-HTMLEndTagComment 0xe1d650 <col:90, col:94> Name="li"
|   |   |-TextComment 0xe1d680 <line:292:3> Text=" "
|   |   |-HTMLEndTagComment 0xe1d6a0 <col:4, col:8> Name="ul"
|   |   `-TextComment 0xe1d6d0 <line:293:3> Text=" "
|   |-BlockCommandComment 0xe1d770 <col:4, line:296:8> Name="attention"
|   | `-ParagraphComment 0xe1d940 <line:294:3, line:296:8>
|   |   |-TextComment 0xe1d7a0 <line:294:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1d7c0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe1d800 <line:295:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1d820 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe1d860 <col:8, col:69> Text="The value of events needs to be reversed when it is passed-in."
|   |   |-HTMLEndTagComment 0xe1d880 <col:70, col:74> Name="li"
|   |   |-TextComment 0xe1d8b0 <line:296:3> Text=" "
|   |   `-HTMLEndTagComment 0xe1d8d0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe1d990 <line:298:3>
|   | `-TextComment 0xe1d960 <col:3> Text=" "
|   |-ParamCommandComment 0xe1d9b0 <col:4, line:299:3> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0xe1da60 <line:298:18, line:299:3>
|   |   |-TextComment 0xe1da10 <line:298:18, col:80> Text="     [IN/OUT] Pointer to the event control block to be cleared."
|   |   `-TextComment 0xe1da30 <line:299:3> Text=" "
|   |-ParamCommandComment 0xe1da80 <col:4, col:63> [in] implicitly Param="eventMask" ParamIndex=1
|   | `-ParagraphComment 0xe1db10 <col:20, col:63>
|   |   `-TextComment 0xe1dae0 <col:20, col:63> Text="   [IN]     Mask of the event to be cleared."
|   |-ParagraphComment 0xe1db60 <line:301:3>
|   | `-TextComment 0xe1db30 <col:3> Text=" "
|   |-BlockCommandComment 0xe1db80 <col:4, line:302:3> Name="retval"
|   | `-ParagraphComment 0xe1dc00 <line:301:11, line:302:3>
|   |   |-TextComment 0xe1dbb0 <line:301:11, col:51> Text=" #LOS_ERRNO_EVENT_PTR_NULL  Null pointer."
|   |   `-TextComment 0xe1dbd0 <line:302:3> Text=" "
|   |-BlockCommandComment 0xe1dc20 <col:4, line:303:3> Name="retval"
|   | `-ParagraphComment 0xe1dca0 <line:302:11, line:303:3>
|   |   |-TextComment 0xe1dc50 <line:302:11, col:72> Text=" #LOS_OK                    The event is successfully cleared."
|   |   `-TextComment 0xe1dc70 <line:303:3> Text=" "
|   |-BlockCommandComment 0xe1dcc0 <col:4, line:305:3> Name="par"
|   | `-ParagraphComment 0xe1de90 <line:303:8, line:305:3>
|   |   |-TextComment 0xe1dcf0 <line:303:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe1dd10 <line:304:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1dd30 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe1dd70 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe1ddb0 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe1ddd0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xe1de00 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xe1de30 <line:305:3> Text=" "
|   `-BlockCommandComment 0xe1deb0 <col:4, col:54> Name="see"
|     `-ParagraphComment 0xe1df10 <col:8, col:54>
|       `-TextComment 0xe1dee0 <col:8, col:54> Text=" LOS_EventPoll | LOS_EventRead | LOS_EventWrite"
|-FunctionDecl 0xdbb2c8 <line:330:1, col:51> col:15 LOS_EventDestroy 'UINT32 (PEVENT_CB_S)' extern
| |-ParmVarDecl 0xdbb238 <col:32, col:44> col:44 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| `-FullComment 0xe1eb80 <line:310:3, line:328:54>
|   |-ParagraphComment 0xe1e060 <line:310:3>
|   | `-TextComment 0xe1e030 <col:3> Text=" "
|   |-VerbatimLineComment 0xe1e080 <col:4, col:22> Text=" los_event"
|   |-ParagraphComment 0xe1e0f0 <line:311:3>
|   | `-TextComment 0xe1e0c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe1e110 <col:4, col:27> Name="brief"
|   | `-ParagraphComment 0xe1e170 <col:10, col:27>
|   |   `-TextComment 0xe1e140 <col:10, col:27> Text=" Destroy an event."
|   |-ParagraphComment 0xe1e1c0 <line:313:3>
|   | `-TextComment 0xe1e190 <col:3> Text=" "
|   |-BlockCommandComment 0xe1e1e0 <col:4, line:317:3> Name="par"
|   | `-ParagraphComment 0xe1e400 <line:313:8, line:317:3>
|   |   |-TextComment 0xe1e210 <line:313:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe1e230 <line:314:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1e250 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe1e290 <line:315:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1e2b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe1e2f0 <col:8, col:44> Text="This API is used to Destroy an event."
|   |   |-HTMLEndTagComment 0xe1e310 <col:45, col:49> Name="li"
|   |   |-TextComment 0xe1e340 <line:316:3> Text=" "
|   |   |-HTMLEndTagComment 0xe1e360 <col:4, col:8> Name="ul"
|   |   `-TextComment 0xe1e390 <line:317:3> Text=" "
|   |-BlockCommandComment 0xe1e420 <col:4, line:320:8> Name="attention"
|   | `-ParagraphComment 0xe1e5f0 <line:318:3, line:320:8>
|   |   |-TextComment 0xe1e450 <line:318:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1e470 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe1e4b0 <line:319:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1e4d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe1e510 <col:8, col:48> Text="The specific event should be a valid one."
|   |   |-HTMLEndTagComment 0xe1e530 <col:49, col:53> Name="li"
|   |   |-TextComment 0xe1e560 <line:320:3> Text=" "
|   |   `-HTMLEndTagComment 0xe1e580 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe1e640 <line:322:3>
|   | `-TextComment 0xe1e610 <col:3> Text=" "
|   |-ParamCommandComment 0xe1e660 <col:4, col:82> [in] implicitly Param="eventCB" ParamIndex=0
|   | `-ParagraphComment 0xe1e6f0 <col:18, col:82>
|   |   `-TextComment 0xe1e6c0 <col:18, col:82> Text="     [IN/OUT] Pointer to the event control block to be Destroyed."
|   |-ParagraphComment 0xe1e740 <line:324:3>
|   | `-TextComment 0xe1e710 <col:3> Text=" "
|   |-BlockCommandComment 0xe1e760 <col:4, line:325:3> Name="retval"
|   | `-ParagraphComment 0xe1e7e0 <line:324:11, line:325:3>
|   |   |-TextComment 0xe1e790 <line:324:11, col:50> Text=" #LOS_ERRNO_EVENT_PTR_NULL Null pointer."
|   |   `-TextComment 0xe1e7b0 <line:325:3> Text=" "
|   |-BlockCommandComment 0xe1e800 <col:4, line:326:3> Name="retval"
|   | `-ParagraphComment 0xe1e880 <line:325:11, line:326:3>
|   |   |-TextComment 0xe1e830 <line:325:11, col:71> Text=" #LOS_OK                   The event is successfully cleared."
|   |   `-TextComment 0xe1e850 <line:326:3> Text=" "
|   |-BlockCommandComment 0xe1e8a0 <col:4, line:328:3> Name="par"
|   | `-ParagraphComment 0xe1ea70 <line:326:8, line:328:3>
|   |   |-TextComment 0xe1e8d0 <line:326:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe1e8f0 <line:327:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1e910 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe1e950 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe1e990 <col:12, col:74> Text="los_event.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe1e9b0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xe1e9e0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xe1ea10 <line:328:3> Text=" "
|   `-BlockCommandComment 0xe1ea90 <col:4, col:54> Name="see"
|     `-ParagraphComment 0xe1eaf0 <col:8, col:54>
|       `-TextComment 0xe1eac0 <col:8, col:54> Text=" LOS_EventPoll | LOS_EventRead | LOS_EventWrite"
|-FunctionDecl 0xdbb590 <line:332:1, col:97> col:15 OsEventReadOnce 'UINT32 (PEVENT_CB_S, UINT32, UINT32, UINT32)' extern
| |-ParmVarDecl 0xdbb380 <col:31, col:43> col:43 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| |-ParmVarDecl 0xdbb3f8 <col:52, col:59> col:59 eventMask 'UINT32':'unsigned int'
| |-ParmVarDecl 0xdbb470 <col:70, col:77> col:77 mode 'UINT32':'unsigned int'
| `-ParmVarDecl 0xdbb4e8 <col:83, col:90> col:90 timeOut 'UINT32':'unsigned int'
|-FunctionDecl 0xdbb770 <line:333:1, col:66> col:15 OsEventWriteOnce 'UINT32 (PEVENT_CB_S, UINT32)' extern
| |-ParmVarDecl 0xdbb660 <col:32, col:44> col:44 eventCB 'PEVENT_CB_S':'struct tagEvent *'
| `-ParmVarDecl 0xdbb6d8 <col:53, col:60> col:60 events 'UINT32':'unsigned int'
|-TypedefDecl 0xdc4530 <main/los_error.h:130:1, line:134:51> line:130:16 referenced LOS_ERRORHANDLE_FUNC 'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
| |-PointerType 0xdc44b0 'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
| | `-ParenType 0xdc4450 'void (CHAR *, UINT32, UINT32, UINT32, void *)' sugar
| |   `-FunctionProtoType 0xdc4400 'void (CHAR *, UINT32, UINT32, UINT32, void *)' cdecl
| |     |-BuiltinType 0xc20da0 'void'
| |     |-PointerType 0xda7480 'CHAR *'
| |     | `-TypedefType 0xca1d40 'CHAR' sugar
| |     |   |-Typedef 0xc842f8 'CHAR'
| |     |   `-BuiltinType 0xc20de0 'char'
| |     |-TypedefType 0xc84730 'UINT32' sugar
| |     | |-Typedef 0xc84060 'UINT32'
| |     | `-BuiltinType 0xc20ee0 'unsigned int'
| |     |-TypedefType 0xc84730 'UINT32' sugar
| |     | |-Typedef 0xc84060 'UINT32'
| |     | `-BuiltinType 0xc20ee0 'unsigned int'
| |     |-TypedefType 0xc84730 'UINT32' sugar
| |     | |-Typedef 0xc84060 'UINT32'
| |     | `-BuiltinType 0xc20ee0 'unsigned int'
| |     `-PointerType 0xc21560 'void *'
| |       `-BuiltinType 0xc20da0 'void'
| `-FullComment 0xe1f890 <line:109:3, line:128:13>
|   |-ParagraphComment 0xe1ec20 <line:109:3>
|   | `-TextComment 0xe1ebf0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe1ec40 <col:4, col:20> Text=" los_err"
|   |-ParagraphComment 0xe1ecb0 <line:110:3>
|   | `-TextComment 0xe1ec80 <col:3> Text=" "
|   |-BlockCommandComment 0xe1ecd0 <col:4, col:60> Name="brief"
|   | `-ParagraphComment 0xe1ed30 <col:10, col:60>
|   |   `-TextComment 0xe1ed00 <col:10, col:60> Text=" Define the pointer to the error handling function."
|   |-ParagraphComment 0xe1ed80 <line:112:3>
|   | `-TextComment 0xe1ed50 <col:3> Text=" "
|   |-BlockCommandComment 0xe1eda0 <col:4, line:114:3> Name="par"
|   | `-ParagraphComment 0xe1ee50 <line:112:8, line:114:3>
|   |   |-TextComment 0xe1edd0 <line:112:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe1edf0 <line:113:3, col:73> Text=" This API is used to define the pointer to the error handling function."
|   |   `-TextComment 0xe1ee10 <line:114:3> Text=" "
|   |-BlockCommandComment 0xe1ee70 <col:4, line:117:8> Name="attention"
|   | `-ParagraphComment 0xe1f040 <line:115:3, line:117:8>
|   |   |-TextComment 0xe1eea0 <line:115:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1eec0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe1ef00 <line:116:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1ef20 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe1ef60 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe1ef80 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe1efb0 <line:117:3> Text=" "
|   |   `-HTMLEndTagComment 0xe1efd0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe1f090 <line:119:3>
|   | `-TextComment 0xe1f060 <col:3> Text=" "
|   |-ParamCommandComment 0xe1f0b0 <col:4, line:120:3> [in] implicitly Param="fileName" ParamIndex=0
|   | `-ParagraphComment 0xe1f160 <line:119:20, line:120:3>
|   |   |-TextComment 0xe1f110 <line:119:20, col:65> Text="  [IN] Log file that stores error information."
|   |   `-TextComment 0xe1f130 <line:120:3> Text=" "
|   |-ParamCommandComment 0xe1f180 <col:4, line:121:3> [in] implicitly Param="lineNo" ParamIndex=1
|   | `-ParagraphComment 0xe1f230 <line:120:18, line:121:3>
|   |   |-TextComment 0xe1f1e0 <line:120:18, col:60> Text="    [IN] Line number of the erroneous line."
|   |   `-TextComment 0xe1f200 <line:121:3> Text=" "
|   |-ParamCommandComment 0xe1f250 <col:4, line:122:3> [in] implicitly Param="errorNo" ParamIndex=2
|   | `-ParagraphComment 0xe1f300 <line:121:19, line:122:3>
|   |   |-TextComment 0xe1f2b0 <line:121:19, col:37> Text="   [IN] Error code."
|   |   `-TextComment 0xe1f2d0 <line:122:3> Text=" "
|   |-ParamCommandComment 0xe1f320 <col:4, line:123:3> [in] implicitly Param="paraLen" ParamIndex=3
|   | `-ParagraphComment 0xe1f3d0 <line:122:19, line:123:3>
|   |   |-TextComment 0xe1f380 <line:122:19, col:62> Text="   [IN] Length of the input parameter pPara."
|   |   `-TextComment 0xe1f3a0 <line:123:3> Text=" "
|   |-ParamCommandComment 0xe1f3f0 <col:4, col:50> [in] implicitly Param="para" ParamIndex=4
|   | `-ParagraphComment 0xe1f480 <col:16, col:50>
|   |   `-TextComment 0xe1f450 <col:16, col:50> Text="      [IN] User label of the error."
|   |-ParagraphComment 0xe1f4d0 <line:125:3>
|   | `-TextComment 0xe1f4a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe1f4f0 <col:4, line:126:3> Name="retval"
|   | `-ParagraphComment 0xe1f570 <line:125:11, line:126:3>
|   |   |-TextComment 0xe1f520 <line:125:11, col:16> Text=" None."
|   |   `-TextComment 0xe1f540 <line:126:3> Text=" "
|   |-BlockCommandComment 0xe1f590 <col:4, line:128:3> Name="par"
|   | `-ParagraphComment 0xe1f760 <line:126:8, line:128:3>
|   |   |-TextComment 0xe1f5c0 <line:126:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe1f5e0 <line:127:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1f600 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe1f640 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe1f680 <col:12, col:72> Text="los_err.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe1f6a0 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0xe1f6d0 <col:78, col:82> Name="ul"
|   |   `-TextComment 0xe1f700 <line:128:3> Text=" "
|   `-BlockCommandComment 0xe1f780 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xe1f7e0 <col:8, col:13>
|       `-TextComment 0xe1f7b0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xdc4908 <line:158:1, line:160:39> line:158:15 LOS_ErrHandle 'UINT32 (CHAR *, UINT32, UINT32, UINT32, void *)' extern
| |-ParmVarDecl 0xdc45c8 <col:29, col:35> col:35 fileName 'CHAR *'
| |-ParmVarDecl 0xdc4640 <col:45, col:52> col:52 lineNo 'UINT32':'unsigned int'
| |-ParmVarDecl 0xdc46b8 <line:159:29, col:36> col:36 errorNo 'UINT32':'unsigned int'
| |-ParmVarDecl 0xdc4730 <col:45, col:52> col:52 paraLen 'UINT32':'unsigned int'
| |-ParmVarDecl 0xdc47b0 <main/los_compiler.h:327:23, main/los_error.h:160:35> col:35 para 'void *'
| `-FullComment 0xe21dd0 <line:137:3, line:156:12>
|   |-ParagraphComment 0xe1f930 <line:137:3>
|   | `-TextComment 0xe1f900 <col:3> Text=" "
|   |-VerbatimLineComment 0xe1f950 <col:4, col:20> Text=" los_err"
|   |-ParagraphComment 0xe1f9c0 <line:138:3>
|   | `-TextComment 0xe1f990 <col:3> Text=" "
|   |-BlockCommandComment 0xe1f9e0 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0xe1fa40 <col:10, col:34>
|   |   `-TextComment 0xe1fa10 <col:10, col:34> Text=" Error handling function."
|   |-ParagraphComment 0xe1fa90 <line:140:3>
|   | `-TextComment 0xe1fa60 <col:3> Text=" "
|   |-BlockCommandComment 0xe1fab0 <col:4, line:142:3> Name="par"
|   | `-ParagraphComment 0xe1fb60 <line:140:8, line:142:3>
|   |   |-TextComment 0xe1fae0 <line:140:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe1fb00 <line:141:3, col:77> Text=" This API is used to perform different operations according to error types."
|   |   `-TextComment 0xe1fb20 <line:142:3> Text=" "
|   |-BlockCommandComment 0xe1fb80 <col:4, line:145:8> Name="attention"
|   | `-ParagraphComment 0xe1fd50 <line:143:3, line:145:8>
|   |   |-TextComment 0xe1fbb0 <line:143:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1fbd0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe1fc10 <line:144:3> Text=" "
|   |   |-HTMLStartTagComment 0xe1fc30 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe1fc70 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0xe1fc90 <col:12, col:16> Name="li"
|   |   |-TextComment 0xe1fcc0 <line:145:3> Text=" "
|   |   `-HTMLEndTagComment 0xe1fce0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe1fda0 <line:147:3>
|   | `-TextComment 0xe1fd70 <col:3> Text=" "
|   |-ParamCommandComment 0xe1fdc0 <col:4, line:148:3> [in] implicitly Param="fileName" ParamIndex=0
|   | `-ParagraphComment 0xe1fe70 <line:147:20, line:148:3>
|   |   |-TextComment 0xe1fe20 <line:147:20, col:65> Text="  [IN] Log file that stores error information."
|   |   `-TextComment 0xe1fe40 <line:148:3> Text=" "
|   |-ParamCommandComment 0xe1fe90 <col:4, line:149:3> [in] implicitly Param="lineNo" ParamIndex=1
|   | `-ParagraphComment 0xe1ff40 <line:148:18, line:149:3>
|   |   |-TextComment 0xe1fef0 <line:148:18, col:98> Text="    [IN] Line number of the erroneous line which should not be OS_ERR_MAGIC_WORD."
|   |   `-TextComment 0xe1ff10 <line:149:3> Text=" "
|   |-ParamCommandComment 0xe1ff60 <col:4, line:150:3> [in] implicitly Param="errorNo" ParamIndex=2
|   | `-ParagraphComment 0xe21840 <line:149:19, line:150:3>
|   |   |-TextComment 0xe217f0 <line:149:19, col:37> Text="   [IN] Error code."
|   |   `-TextComment 0xe21810 <line:150:3> Text=" "
|   |-ParamCommandComment 0xe21860 <col:4, line:151:3> [in] implicitly Param="paraLen" ParamIndex=3
|   | `-ParagraphComment 0xe21910 <line:150:19, line:151:3>
|   |   |-TextComment 0xe218c0 <line:150:19, col:62> Text="   [IN] Length of the input parameter pPara."
|   |   `-TextComment 0xe218e0 <line:151:3> Text=" "
|   |-ParamCommandComment 0xe21930 <col:4, col:50> [in] implicitly Param="para" ParamIndex=4
|   | `-ParagraphComment 0xe219c0 <col:16, col:50>
|   |   `-TextComment 0xe21990 <col:16, col:50> Text="      [IN] User label of the error."
|   |-ParagraphComment 0xe21a10 <line:153:3>
|   | `-TextComment 0xe219e0 <col:3> Text=" "
|   |-BlockCommandComment 0xe21a30 <col:4, line:154:3> Name="retval"
|   | `-ParagraphComment 0xe21ab0 <line:153:11, line:154:3>
|   |   |-TextComment 0xe21a60 <line:153:11, col:54> Text=" LOS_OK The error is successfully processed."
|   |   `-TextComment 0xe21a80 <line:154:3> Text=" "
|   |-BlockCommandComment 0xe21ad0 <col:4, line:156:3> Name="par"
|   | `-ParagraphComment 0xe21ca0 <line:154:8, line:156:3>
|   |   |-TextComment 0xe21b00 <line:154:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe21b20 <line:155:3> Text=" "
|   |   |-HTMLStartTagComment 0xe21b40 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe21b80 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe21bc0 <col:12, col:72> Text="los_err.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe21be0 <col:73, col:77> Name="li"
|   |   |-HTMLEndTagComment 0xe21c10 <col:78, col:82> Name="ul"
|   |   `-TextComment 0xe21c40 <line:156:3> Text=" "
|   `-BlockCommandComment 0xe21cc0 <col:4, col:12> Name="see"
|     `-ParagraphComment 0xe21d20 <col:8, col:12>
|       `-TextComment 0xe21cf0 <col:8, col:12> Text=" None"
|-RecordDecl 0xdc49f8 <line:166:9, line:168:1> line:166:16 struct tagUserErrFunc definition
| |-FullComment 0xe21f40 <line:163:3, line:164:37>
| | |-ParagraphComment 0xe21e70 <line:163:3>
| | | `-TextComment 0xe21e40 <col:3> Text=" "
| | |-VerbatimLineComment 0xe21e90 <col:4, col:20> Text=" los_err"
| | `-ParagraphComment 0xe21f00 <line:164:3, col:37>
| |   `-TextComment 0xe21ed0 <col:3, col:37> Text=" Error handling function structure."
| `-FieldDecl 0xdc4ad0 <line:167:5, col:27> col:27 pfnHook 'LOS_ERRORHANDLE_FUNC':'void (*)(CHAR *, UINT32, UINT32, UINT32, void *)'
|   `-FullComment 0xe22010 <col:41, col:75>
|     `-ParagraphComment 0xe21fe0 <col:41, col:75>
|       `-TextComment 0xe21fb0 <col:41, col:75> Text=" Hook function for error handling. "
|-TypedefDecl 0xdc4ba8 <line:166:1, line:168:3> col:3 UserErrFunc 'struct tagUserErrFunc':'struct tagUserErrFunc'
| |-ElaboratedType 0xdc4b50 'struct tagUserErrFunc' sugar
| | `-RecordType 0xdc4a80 'struct tagUserErrFunc'
| |   `-Record 0xdc49f8 'tagUserErrFunc'
| `-FullComment 0xe22180 <line:163:3, line:164:37>
|   |-ParagraphComment 0xe220b0 <line:163:3>
|   | `-TextComment 0xe22080 <col:3> Text=" "
|   |-VerbatimLineComment 0xe220d0 <col:4, col:20> Text=" los_err"
|   `-ParagraphComment 0xe22140 <line:164:3, col:37>
|     `-TextComment 0xe22110 <col:3, col:37> Text=" Error handling function structure."
|-EnumDecl 0xdc4c18 <line:171:1, line:207:1> line:171:6 LOS_MODULE_ID
| |-EnumConstantDecl 0xdc4d18 <line:172:5, col:32> col:5 LOS_MOD_SYS 'int'
| | `-ConstantExpr 0xdc4d00 <col:32> 'int'
| |   `-IntegerLiteral 0xdc4ce0 <col:32> 'int' 0
| |-EnumConstantDecl 0xdc4da0 <line:173:5, col:32> col:5 LOS_MOD_MEM 'int'
| | `-ConstantExpr 0xdc4d88 <col:32> 'int'
| |   `-IntegerLiteral 0xdc4d68 <col:32> 'int' 1
| |-EnumConstantDecl 0xdc4e28 <line:174:5, col:32> col:5 LOS_MOD_TSK 'int'
| | `-ConstantExpr 0xdc4e10 <col:32> 'int'
| |   `-IntegerLiteral 0xdc4df0 <col:32> 'int' 2
| |-EnumConstantDecl 0xdc4eb0 <line:175:5, col:32> col:5 LOS_MOD_SWTMR 'int'
| | `-ConstantExpr 0xdc4e98 <col:32> 'int'
| |   `-IntegerLiteral 0xdc4e78 <col:32> 'int' 3
| |-EnumConstantDecl 0xdc4f38 <line:176:5, col:32> col:5 LOS_MOD_TICK 'int'
| | `-ConstantExpr 0xdc4f20 <col:32> 'int'
| |   `-IntegerLiteral 0xdc4f00 <col:32> 'int' 4
| |-EnumConstantDecl 0xdc4fc0 <line:177:5, col:32> col:5 LOS_MOD_MSG 'int'
| | `-ConstantExpr 0xdc4fa8 <col:32> 'int'
| |   `-IntegerLiteral 0xdc4f88 <col:32> 'int' 5
| |-EnumConstantDecl 0xdc5048 <line:178:5, col:32> col:5 LOS_MOD_QUE 'int'
| | `-ConstantExpr 0xdc5030 <col:32> 'int'
| |   `-IntegerLiteral 0xdc5010 <col:32> 'int' 6
| |-EnumConstantDecl 0xdc50d0 <line:179:5, col:32> col:5 LOS_MOD_SEM 'int'
| | `-ConstantExpr 0xdc50b8 <col:32> 'int'
| |   `-IntegerLiteral 0xdc5098 <col:32> 'int' 7
| |-EnumConstantDecl 0xdc5158 <line:180:5, col:32> col:5 LOS_MOD_MBOX 'int'
| | `-ConstantExpr 0xdc5140 <col:32> 'int'
| |   `-IntegerLiteral 0xdc5120 <col:32> 'int' 8
| |-EnumConstantDecl 0xdc51e0 <line:181:5, col:32> col:5 LOS_MOD_HWI 'int'
| | `-ConstantExpr 0xdc51c8 <col:32> 'int'
| |   `-IntegerLiteral 0xdc51a8 <col:32> 'int' 9
| |-EnumConstantDecl 0xdc5268 <line:182:5, col:32> col:5 LOS_MOD_HWWDG 'int'
| | `-ConstantExpr 0xdc5250 <col:32> 'int'
| |   `-IntegerLiteral 0xdc5230 <col:32> 'int' 10
| |-EnumConstantDecl 0xdc52f0 <line:183:5, col:32> col:5 LOS_MOD_CACHE 'int'
| | `-ConstantExpr 0xdc52d8 <col:32> 'int'
| |   `-IntegerLiteral 0xdc52b8 <col:32> 'int' 11
| |-EnumConstantDecl 0xdc5378 <line:184:5, col:32> col:5 LOS_MOD_HWTMR 'int'
| | `-ConstantExpr 0xdc5360 <col:32> 'int'
| |   `-IntegerLiteral 0xdc5340 <col:32> 'int' 12
| |-EnumConstantDecl 0xdc64e0 <line:185:5, col:32> col:5 LOS_MOD_MMU 'int'
| | `-ConstantExpr 0xdc53e8 <col:32> 'int'
| |   `-IntegerLiteral 0xdc53c8 <col:32> 'int' 13
| |-EnumConstantDecl 0xdc6568 <line:187:5, col:32> col:5 LOS_MOD_LOG 'int'
| | `-ConstantExpr 0xdc6550 <col:32> 'int'
| |   `-IntegerLiteral 0xdc6530 <col:32> 'int' 14
| |-EnumConstantDecl 0xdc65f0 <line:188:5, col:32> col:5 LOS_MOD_ERR 'int'
| | `-ConstantExpr 0xdc65d8 <col:32> 'int'
| |   `-IntegerLiteral 0xdc65b8 <col:32> 'int' 15
| |-EnumConstantDecl 0xdc6678 <line:190:5, col:32> col:5 LOS_MOD_EXC 'int'
| | `-ConstantExpr 0xdc6660 <col:32> 'int'
| |   `-IntegerLiteral 0xdc6640 <col:32> 'int' 16
| |-EnumConstantDecl 0xdc6700 <line:191:5, col:32> col:5 LOS_MOD_CSTK 'int'
| | `-ConstantExpr 0xdc66e8 <col:32> 'int'
| |   `-IntegerLiteral 0xdc66c8 <col:32> 'int' 17
| |-EnumConstantDecl 0xdc6788 <line:193:5, col:32> col:5 LOS_MOD_MPU 'int'
| | `-ConstantExpr 0xdc6770 <col:32> 'int'
| |   `-IntegerLiteral 0xdc6750 <col:32> 'int' 18
| |-EnumConstantDecl 0xdc6810 <line:194:5, col:32> col:5 LOS_MOD_NMHWI 'int'
| | `-ConstantExpr 0xdc67f8 <col:32> 'int'
| |   `-IntegerLiteral 0xdc67d8 <col:32> 'int' 19
| |-EnumConstantDecl 0xdc6898 <line:195:5, col:32> col:5 LOS_MOD_TRACE 'int'
| | `-ConstantExpr 0xdc6880 <col:32> 'int'
| |   `-IntegerLiteral 0xdc6860 <col:32> 'int' 20
| |-EnumConstantDecl 0xdc6920 <line:196:5, col:32> col:5 LOS_MOD_IPC 'int'
| | `-ConstantExpr 0xdc6908 <col:32> 'int'
| |   `-IntegerLiteral 0xdc68e8 <col:32> 'int' 24
| |-EnumConstantDecl 0xdc69a8 <line:197:5, col:32> col:5 LOS_MOD_TIMER 'int'
| | `-ConstantExpr 0xdc6990 <col:32> 'int'
| |   `-IntegerLiteral 0xdc6970 <col:32> 'int' 26
| |-EnumConstantDecl 0xdc6a30 <line:198:5, col:32> col:5 LOS_MOD_EVENT 'int'
| | `-ConstantExpr 0xdc6a18 <col:32> 'int'
| |   `-IntegerLiteral 0xdc69f8 <col:32> 'int' 28
| |-EnumConstantDecl 0xdc6ab8 <line:199:5, col:32> col:5 LOS_MOD_MUX 'int'
| | `-ConstantExpr 0xdc6aa0 <col:32> 'int'
| |   `-IntegerLiteral 0xdc6a80 <col:32> 'int' 29
| |-EnumConstantDecl 0xdc6b40 <line:200:5, col:32> col:5 LOS_MOD_CPUP 'int'
| | `-ConstantExpr 0xdc6b28 <col:32> 'int'
| |   `-IntegerLiteral 0xdc6b08 <col:32> 'int' 30
| |-EnumConstantDecl 0xdc6bc8 <line:201:5, col:32> col:5 LOS_MOD_HOOK 'int'
| | `-ConstantExpr 0xdc6bb0 <col:32> 'int'
| |   `-IntegerLiteral 0xdc6b90 <col:32> 'int' 31
| |-EnumConstantDecl 0xdc6c50 <line:202:5, col:32> col:5 LOS_MOD_PM 'int'
| | `-ConstantExpr 0xdc6c38 <col:32> 'int'
| |   `-IntegerLiteral 0xdc6c18 <col:32> 'int' 32
| |-EnumConstantDecl 0xdc6cd8 <line:203:5, col:32> col:5 LOS_MOD_LMK 'int'
| | `-ConstantExpr 0xdc6cc0 <col:32> 'int'
| |   `-IntegerLiteral 0xdc6ca0 <col:32> 'int' 33
| |-EnumConstantDecl 0xdc6d60 <line:204:5, col:32> col:5 LOS_MOD_SHELL 'int'
| | `-ConstantExpr 0xdc6d48 <col:32> 'int'
| |   `-IntegerLiteral 0xdc6d28 <col:32> 'int' 49
| |-EnumConstantDecl 0xdc6de8 <line:205:5, col:32> col:5 LOS_MOD_SIGNAL 'int'
| | `-ConstantExpr 0xdc6dd0 <col:32> 'int'
| |   `-IntegerLiteral 0xdc6db0 <col:32> 'int' 50
| `-EnumConstantDecl 0xdc6e38 <line:206:5> col:5 LOS_MOD_BUTT 'int'
|-RecordDecl 0xdc6f48 <main/los_timer.h:56:9, line:66:1> line:56:9 struct definition
| |-FieldDecl 0xdc7000 <line:57:5, col:19> col:19 freq 'UINT32':'unsigned int'
| |-FieldDecl 0xdc7060 <line:58:5, col:19> col:19 irqNum 'INT32':'int'
| |-FieldDecl 0xdc70c0 <line:59:5, col:19> col:19 periodMax 'UINT64':'unsigned long long'
| |-FieldDecl 0xdc72b0 <line:60:5, col:52> col:21 init 'UINT32 (*)(HWI_PROC_FUNC)'
| |-FieldDecl 0xdc9e30 <line:61:5, col:45> col:21 getCycle 'UINT64 (*)(UINT32 *)'
| |-FieldDecl 0xdca020 <line:62:5, col:40> col:21 reload 'UINT64 (*)(UINT64)'
| |-FieldDecl 0xdca118 <main/los_compiler.h:327:23, main/los_timer.h:63:31> col:21 lock 'void (*)(void)'
| |-FieldDecl 0xdca210 <main/los_compiler.h:327:23, main/los_timer.h:64:33> col:21 unlock 'void (*)(void)'
| `-FieldDecl 0xdca270 <line:65:5, col:19> col:19 tickHandler 'HWI_PROC_FUNC':'void (*)(void)'
|-TypedefDecl 0xdca318 <line:56:1, line:66:3> col:3 referenced ArchTickTimer 'struct ArchTickTimer':'ArchTickTimer'
| `-ElaboratedType 0xdca2c0 'struct ArchTickTimer' sugar
|   `-RecordType 0xdc6fd0 'ArchTickTimer'
|     `-Record 0xdc6f48 ''
|-FunctionDecl 0xdca420 <line:68:1, col:27> col:8 ArchEnterSleep 'UINT32 (void)'
|-FunctionDecl 0xdca668 <line:84:1, col:40> col:16 ArchSysTickTimerGet 'ArchTickTimer *(void)'
| `-FullComment 0xe228d0 <line:71:3, line:82:13>
|   |-ParagraphComment 0xe22220 <line:71:3>
|   | `-TextComment 0xe221f0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe22240 <col:4, col:22> Text=" los_timer"
|   |-ParagraphComment 0xe222b0 <line:72:3>
|   | `-TextComment 0xe22280 <col:3> Text=" "
|   |-BlockCommandComment 0xe222d0 <col:4, col:39> Name="brief"
|   | `-ParagraphComment 0xe22330 <col:10, col:39>
|   |   `-TextComment 0xe22300 <col:10, col:39> Text=" Get tick timer control block."
|   |-ParagraphComment 0xe22380 <line:74:3>
|   | `-TextComment 0xe22350 <col:3> Text=" "
|   |-BlockCommandComment 0xe223a0 <col:4, line:75:52> Name="par"
|   | `-ParagraphComment 0xe22420 <line:74:8, line:75:52>
|   |   |-TextComment 0xe223d0 <line:74:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe223f0 <line:75:3, col:52> Text=" This API is used to get tick timer control block."
|   |-ParagraphComment 0xe22470 <line:77:3>
|   | `-TextComment 0xe22440 <col:3> Text=" "
|   |-ParamCommandComment 0xe22490 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0xe224f0 <<invalid sloc>>
|   |-ParagraphComment 0xe22540 <line:79:3>
|   | `-TextComment 0xe22510 <col:3> Text=" "
|   |-BlockCommandComment 0xe22560 <col:4, line:80:3> Name="retval"
|   | `-ParagraphComment 0xe225e0 <line:79:11, line:80:3>
|   |   |-TextComment 0xe22590 <line:79:11, col:36> Text=" #tick timer control block"
|   |   `-TextComment 0xe225b0 <line:80:3> Text=" "
|   |-BlockCommandComment 0xe22600 <col:4, line:82:3> Name="par"
|   | `-ParagraphComment 0xe227d0 <line:80:8, line:82:3>
|   |   |-TextComment 0xe22630 <line:80:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe22650 <line:81:3> Text=" "
|   |   |-HTMLStartTagComment 0xe22670 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe226b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe226f0 <col:12, col:74> Text="los_timer.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe22710 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xe22740 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xe22770 <line:82:3> Text=" "
|   `-BlockCommandComment 0xe227f0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xe22850 <col:8, col:13>
|       `-TextComment 0xe22820 <col:8, col:13> Text=" None."
|-FunctionDecl 0xdca8b8 <main/los_tick.h:100:1, col:35> col:15 used LOS_SysCycleGet 'UINT64 (void)' extern
| `-FullComment 0xe23300 <line:82:3, line:99:3>
|   |-ParagraphComment 0xe22970 <line:82:3, col:4>
|   | `-TextComment 0xe22940 <col:3, col:4> Text="  "
|   |-VerbatimLineComment 0xe22990 <col:5, col:23> Text="  los_tick"
|   |-ParagraphComment 0xe22a00 <line:83:3, col:4>
|   | `-TextComment 0xe229d0 <col:3, col:4> Text="  "
|   |-BlockCommandComment 0xe22a20 <col:5, col:45> Name="brief"
|   | `-ParagraphComment 0xe22a80 <col:11, col:45>
|   |   `-TextComment 0xe22a50 <col:11, col:45> Text=": System timer cycles get function."
|   |-ParagraphComment 0xe22ad0 <line:85:3, col:4>
|   | `-TextComment 0xe22aa0 <col:3, col:4> Text="  "
|   |-BlockCommandComment 0xe22af0 <col:5, line:86:48> Name="par"
|   | `-ParagraphComment 0xe22b70 <line:85:9, line:86:48>
|   |   |-TextComment 0xe22b20 <line:85:9, col:21> Text=" Description:"
|   |   `-TextComment 0xe22b40 <line:86:3, col:48> Text="  This API is used to get system timer cycles."
|   |-ParagraphComment 0xe22bc0 <line:88:3>
|   | `-TextComment 0xe22b90 <col:3> Text=" "
|   |-BlockCommandComment 0xe22be0 <col:4, line:89:26> Name="attention"
|   | `-ParagraphComment 0xe22d80 <line:88:14, line:89:26>
|   |   |-TextComment 0xe22c10 <line:88:14> Text=":"
|   |   |-TextComment 0xe22c30 <line:89:3> Text=" "
|   |   |-HTMLStartTagComment 0xe22c50 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe22c90 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe22cd0 <col:12, col:16> Text="None."
|   |   |-HTMLEndTagComment 0xe22cf0 <col:17, col:21> Name="li"
|   |   `-HTMLEndTagComment 0xe22d20 <col:22, col:26> Name="ul"
|   |-ParagraphComment 0xe22dd0 <line:91:3>
|   | `-TextComment 0xe22da0 <col:3> Text=" "
|   |-ParamCommandComment 0xe22df0 <col:4, col:16> [in] implicitly Param=":"
|   | `-ParagraphComment 0xe22e80 <col:11, col:16>
|   |   `-TextComment 0xe22e50 <col:11, col:16> Text=" None."
|   |-ParagraphComment 0xe22ed0 <line:93:3>
|   | `-TextComment 0xe22ea0 <col:3> Text=" "
|   |-BlockCommandComment 0xe22ef0 <col:4, col:34> Name="retval"
|   | `-ParagraphComment 0xe22f50 <col:11, col:34>
|   |   `-TextComment 0xe22f20 <col:11, col:34> Text=": current system cycles."
|   |-ParagraphComment 0xe22fa0 <line:95:3>
|   | `-TextComment 0xe22f70 <col:3> Text=" "
|   |-BlockCommandComment 0xe22fc0 <col:4, line:97:3> Name="par"
|   | `-ParagraphComment 0xe23190 <line:95:8, line:97:3>
|   |   |-TextComment 0xe22ff0 <line:95:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe23010 <line:96:3> Text=" "
|   |   |-HTMLStartTagComment 0xe23030 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe23070 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe230b0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe230d0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe23100 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe23130 <line:97:3> Text=" "
|   |-BlockCommandComment 0xe231b0 <col:4, col:13> Name="see"
|   | `-ParagraphComment 0xe23210 <col:8, col:13>
|   |   `-TextComment 0xe231e0 <col:8, col:13> Text=" None."
|   `-ParagraphComment 0xe23260 <line:99:3>
|     `-TextComment 0xe23230 <col:3> Text=" "
|-VarDecl 0xdca9c8 <line:112:1, col:18> col:18 g_ticksPerSec 'UINT32':'unsigned int' extern
| `-FullComment 0xe23470 <line:109:3, line:110:19>
|   |-ParagraphComment 0xe233a0 <line:109:3>
|   | `-TextComment 0xe23370 <col:3> Text=" "
|   |-VerbatimLineComment 0xe233c0 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xe23430 <line:110:3, col:19>
|     `-TextComment 0xe23400 <col:3, col:19> Text=" Ticks per second"
|-VarDecl 0xdcaa68 <line:118:1, col:18> col:18 g_uwCyclePerSec 'UINT32':'unsigned int' extern
| `-FullComment 0xe235e0 <line:115:3, line:116:20>
|   |-ParagraphComment 0xe23510 <line:115:3>
|   | `-TextComment 0xe234e0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe23530 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xe235a0 <line:116:3, col:20>
|     `-TextComment 0xe23570 <col:3, col:20> Text=" Cycles per Second"
|-VarDecl 0xdcab08 <line:124:1, col:18> col:18 g_cyclesPerTick 'UINT32':'unsigned int' extern
| `-FullComment 0xe23750 <line:121:3, line:122:18>
|   |-ParagraphComment 0xe23680 <line:121:3>
|   | `-TextComment 0xe23650 <col:3> Text=" "
|   |-VerbatimLineComment 0xe236a0 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xe23710 <line:122:3, col:18>
|     `-TextComment 0xe236e0 <col:3, col:18> Text=" Cycles per Tick"
|-VarDecl 0xdcaba8 <line:130:1, col:18> col:18 used g_sysClock 'UINT32':'unsigned int' extern
| `-FullComment 0xe238d0 <line:127:3, line:128:15>
|   |-ParagraphComment 0xe23800 <line:127:3>
|   | `-TextComment 0xe237c0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe23820 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xe23890 <line:128:3, col:15>
|     `-TextComment 0xe23860 <col:3, col:15> Text=" System Clock"
|-RecordDecl 0xdcef10 <line:244:9, line:252:1> line:244:16 struct TagSysTime definition
| |-FullComment 0xe23a40 <line:241:3, line:242:25>
| | |-ParagraphComment 0xe23970 <line:241:3>
| | | `-TextComment 0xe23940 <col:3> Text=" "
| | |-VerbatimLineComment 0xe23990 <col:4, col:21> Text=" los_tick"
| | `-ParagraphComment 0xe23a00 <line:242:3, col:25>
| |   `-TextComment 0xe239d0 <col:3, col:25> Text=" system time structure."
| |-FieldDecl 0xdcefc0 <line:245:5, col:13> col:13 uwYear 'UINT16':'unsigned short'
| | `-FullComment 0xe23b10 <col:28, col:61>
| |   `-ParagraphComment 0xe23ae0 <col:28, col:61>
| |     `-TextComment 0xe23ab0 <col:28, col:61> Text=" value 1970 ~ 2038 or 1970 ~ 2100 "
| |-FieldDecl 0xdcf048 <line:246:5, col:13> col:13 ucMonth 'UINT8':'unsigned char'
| | `-FullComment 0xe23be0 <col:28, col:41>
| |   `-ParagraphComment 0xe23bb0 <col:28, col:41>
| |     `-TextComment 0xe23b80 <col:28, col:41> Text=" value 1 - 12 "
| |-FieldDecl 0xdcf0d8 <line:247:5, col:13> col:13 ucDay 'UINT8':'unsigned char'
| | `-FullComment 0xe23cb0 <col:28, col:41>
| |   `-ParagraphComment 0xe23c80 <col:28, col:41>
| |     `-TextComment 0xe23c50 <col:28, col:41> Text=" value 1 - 31 "
| |-FieldDecl 0xdcf168 <line:248:5, col:13> col:13 ucHour 'UINT8':'unsigned char'
| | `-FullComment 0xe23d80 <col:28, col:41>
| |   `-ParagraphComment 0xe23d50 <col:28, col:41>
| |     `-TextComment 0xe23d20 <col:28, col:41> Text=" value 0 - 23 "
| |-FieldDecl 0xdcf1f8 <line:249:5, col:13> col:13 ucMinute 'UINT8':'unsigned char'
| | `-FullComment 0xe23e50 <col:28, col:41>
| |   `-ParagraphComment 0xe23e20 <col:28, col:41>
| |     `-TextComment 0xe23df0 <col:28, col:41> Text=" value 0 - 59 "
| |-FieldDecl 0xdcf288 <line:250:5, col:13> col:13 ucSecond 'UINT8':'unsigned char'
| | `-FullComment 0xe23f20 <col:28, col:41>
| |   `-ParagraphComment 0xe23ef0 <col:28, col:41>
| |     `-TextComment 0xe23ec0 <col:28, col:41> Text=" value 0 - 59 "
| `-FieldDecl 0xdcf318 <line:251:5, col:13> col:13 ucWeek 'UINT8':'unsigned char'
|   `-FullComment 0xe23ff0 <col:28, col:41>
|     `-ParagraphComment 0xe23fc0 <col:28, col:41>
|       `-TextComment 0xe23f90 <col:28, col:41> Text=" value 0 - 6  "
|-TypedefDecl 0xdcf3f8 <line:244:1, line:252:3> col:3 SYS_TIME_S 'struct TagSysTime':'struct TagSysTime'
| |-ElaboratedType 0xdcf3a0 'struct TagSysTime' sugar
| | `-RecordType 0xdcef90 'struct TagSysTime'
| |   `-Record 0xdcef10 'TagSysTime'
| `-FullComment 0xe24160 <line:241:3, line:242:25>
|   |-ParagraphComment 0xe24090 <line:241:3>
|   | `-TextComment 0xe24060 <col:3> Text=" "
|   |-VerbatimLineComment 0xe240b0 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xe24120 <line:242:3, col:25>
|     `-TextComment 0xe240f0 <col:3, col:25> Text=" system time structure."
|-FunctionDecl 0xdcf508 <line:254:1, col:39> col:8 OsTickTimerReload 'UINT64 (UINT64)'
| `-ParmVarDecl 0xdcf478 <col:26, col:33> col:33 period 'UINT64':'unsigned long long'
|-FunctionDecl 0xdcf648 <line:260:1, col:28> col:8 OsTickTimerInit 'UINT32 (void)'
|-FunctionDecl 0xdcf7e8 <main/los_compiler.h:327:23, main/los_tick.h:262:48> col:6 OsTickSysTimerStartTimeSet 'void (UINT64)'
| `-ParmVarDecl 0xdcf6f8 <col:33, col:40> col:40 currTime 'UINT64':'unsigned long long'
|-FunctionDecl 0xdcf950 <line:282:1, col:36> col:15 LOS_TickCountGet 'UINT64 (void)' extern
| `-FullComment 0xe24ae0 <line:265:3, line:280:12>
|   |-ParagraphComment 0xe24200 <line:265:3>
|   | `-TextComment 0xe241d0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe24220 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xe24290 <line:266:3>
|   | `-TextComment 0xe24260 <col:3> Text=" "
|   |-BlockCommandComment 0xe242b0 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0xe24310 <col:10, col:37>
|   |   `-TextComment 0xe242e0 <col:10, col:37> Text=" Obtain the number of Ticks."
|   |-ParagraphComment 0xe24360 <line:268:3>
|   | `-TextComment 0xe24330 <col:3> Text=" "
|   |-BlockCommandComment 0xe24380 <col:4, line:270:3> Name="par"
|   | `-ParagraphComment 0xe24430 <line:268:8, line:270:3>
|   |   |-TextComment 0xe243b0 <line:268:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe243d0 <line:269:3, col:50> Text=" This API is used to obtain the number of Ticks."
|   |   `-TextComment 0xe243f0 <line:270:3> Text=" "
|   |-BlockCommandComment 0xe24450 <col:4, line:273:8> Name="attention"
|   | `-ParagraphComment 0xe24620 <line:271:3, line:273:8>
|   |   |-TextComment 0xe24480 <line:271:3> Text=" "
|   |   |-HTMLStartTagComment 0xe244a0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe244e0 <line:272:3> Text=" "
|   |   |-HTMLStartTagComment 0xe24500 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe24540 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0xe24560 <col:12, col:16> Name="li"
|   |   |-TextComment 0xe24590 <line:273:3> Text=" "
|   |   `-HTMLEndTagComment 0xe245b0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe24670 <line:275:3>
|   | `-TextComment 0xe24640 <col:3> Text=" "
|   |-ParamCommandComment 0xe24690 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0xe246f0 <<invalid sloc>>
|   |-ParagraphComment 0xe24740 <line:277:3>
|   | `-TextComment 0xe24710 <col:3> Text=" "
|   |-BlockCommandComment 0xe24760 <col:4, line:278:3> Name="retval"
|   | `-ParagraphComment 0xe247e0 <line:277:11, line:278:3>
|   |   |-TextComment 0xe24790 <line:277:11, col:38> Text=" UINT64 The number of Ticks."
|   |   `-TextComment 0xe247b0 <line:278:3> Text=" "
|   |-BlockCommandComment 0xe24800 <col:4, line:280:3> Name="par"
|   | `-ParagraphComment 0xe249d0 <line:278:8, line:280:3>
|   |   |-TextComment 0xe24830 <line:278:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe24850 <line:279:3> Text=" "
|   |   |-HTMLStartTagComment 0xe24870 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe248b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe248f0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe24910 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe24940 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe24970 <line:280:3> Text=" "
|   `-BlockCommandComment 0xe249f0 <col:4, col:12> Name="see"
|     `-ParagraphComment 0xe24a50 <col:8, col:12>
|       `-TextComment 0xe24a20 <col:8, col:12> Text=" None"
|-FunctionDecl 0xdcfab0 <line:302:1, col:39> col:15 LOS_CyclePerTickGet 'UINT32 (void)' extern
| `-FullComment 0xe25460 <line:285:3, line:300:12>
|   |-ParagraphComment 0xe24b80 <line:285:3>
|   | `-TextComment 0xe24b50 <col:3> Text=" "
|   |-VerbatimLineComment 0xe24ba0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xe24c10 <line:286:3>
|   | `-TextComment 0xe24be0 <col:3> Text=" "
|   |-BlockCommandComment 0xe24c30 <col:4, col:52> Name="brief"
|   | `-ParagraphComment 0xe24c90 <col:10, col:52>
|   |   `-TextComment 0xe24c60 <col:10, col:52> Text=" Obtain the number of cycles in one second."
|   |-ParagraphComment 0xe24ce0 <line:288:3>
|   | `-TextComment 0xe24cb0 <col:3> Text=" "
|   |-BlockCommandComment 0xe24d00 <col:4, line:290:3> Name="par"
|   | `-ParagraphComment 0xe24db0 <line:288:8, line:290:3>
|   |   |-TextComment 0xe24d30 <line:288:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe24d50 <line:289:3, col:65> Text=" This API is used to obtain the number of cycles in one second."
|   |   `-TextComment 0xe24d70 <line:290:3> Text=" "
|   |-BlockCommandComment 0xe24dd0 <col:4, line:293:8> Name="attention"
|   | `-ParagraphComment 0xe24fa0 <line:291:3, line:293:8>
|   |   |-TextComment 0xe24e00 <line:291:3> Text=" "
|   |   |-HTMLStartTagComment 0xe24e20 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe24e60 <line:292:3> Text=" "
|   |   |-HTMLStartTagComment 0xe24e80 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe24ec0 <col:8, col:11> Text="None"
|   |   |-HTMLEndTagComment 0xe24ee0 <col:12, col:16> Name="li"
|   |   |-TextComment 0xe24f10 <line:293:3> Text=" "
|   |   `-HTMLEndTagComment 0xe24f30 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe24ff0 <line:295:3>
|   | `-TextComment 0xe24fc0 <col:3> Text=" "
|   |-ParamCommandComment 0xe25010 <col:4, col:15> [in] implicitly Param="None"
|   | `-ParagraphComment 0xe25070 <<invalid sloc>>
|   |-ParagraphComment 0xe250c0 <line:297:3>
|   | `-TextComment 0xe25090 <col:3> Text=" "
|   |-BlockCommandComment 0xe250e0 <col:4, line:298:3> Name="retval"
|   | `-ParagraphComment 0xe25160 <line:297:11, line:298:3>
|   |   |-TextComment 0xe25110 <line:297:11, col:58> Text=" UINT32 Number of cycles obtained in one second."
|   |   `-TextComment 0xe25130 <line:298:3> Text=" "
|   |-BlockCommandComment 0xe25180 <col:4, line:300:3> Name="par"
|   | `-ParagraphComment 0xe25350 <line:298:8, line:300:3>
|   |   |-TextComment 0xe251b0 <line:298:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe251d0 <line:299:3> Text=" "
|   |   |-HTMLStartTagComment 0xe251f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe25230 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe25270 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe25290 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe252c0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe252f0 <line:300:3> Text=" "
|   `-BlockCommandComment 0xe25370 <col:4, col:12> Name="see"
|     `-ParagraphComment 0xe253d0 <col:8, col:12>
|       `-TextComment 0xe253a0 <col:8, col:12> Text=" None"
|-FunctionDecl 0xdcfc48 <line:323:1, col:39> col:15 LOS_Tick2MS 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xdcfb88 <col:27, col:34> col:34 ticks 'UINT32':'unsigned int'
| `-FullComment 0xe25e50 <line:305:3, line:321:19>
|   |-ParagraphComment 0xe25500 <line:305:3>
|   | `-TextComment 0xe254d0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe25520 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xe25590 <line:306:3>
|   | `-TextComment 0xe25560 <col:3> Text=" "
|   |-BlockCommandComment 0xe255b0 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0xe25610 <col:10, col:40>
|   |   `-TextComment 0xe255e0 <col:10, col:40> Text=" Convert Ticks to milliseconds."
|   |-ParagraphComment 0xe25660 <line:308:3>
|   | `-TextComment 0xe25630 <col:3> Text=" "
|   |-BlockCommandComment 0xe25680 <col:4, line:310:3> Name="par"
|   | `-ParagraphComment 0xe25730 <line:308:8, line:310:3>
|   |   |-TextComment 0xe256b0 <line:308:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe256d0 <line:309:3, col:53> Text=" This API is used to convert Ticks to milliseconds."
|   |   `-TextComment 0xe256f0 <line:310:3> Text=" "
|   |-BlockCommandComment 0xe25750 <col:4, line:313:8> Name="attention"
|   | `-ParagraphComment 0xe25930 <line:311:3, line:313:8>
|   |   |-TextComment 0xe25780 <line:311:3> Text=" "
|   |   |-HTMLStartTagComment 0xe257a0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe257e0 <line:312:3> Text=" "
|   |   |-HTMLStartTagComment 0xe25810 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe25850 <col:8, col:76> Text="The number of milliseconds obtained through the conversion is 32-bit."
|   |   |-HTMLEndTagComment 0xe25870 <col:77, col:81> Name="li"
|   |   |-TextComment 0xe258a0 <line:313:3> Text=" "
|   |   `-HTMLEndTagComment 0xe258c0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe25980 <line:315:3>
|   | `-TextComment 0xe25950 <col:3> Text=" "
|   |-ParamCommandComment 0xe259a0 <col:4, col:76> [in] implicitly Param="ticks" ParamIndex=0
|   | `-ParagraphComment 0xe25a30 <col:17, col:76>
|   |   `-TextComment 0xe25a00 <col:17, col:76> Text="  [IN] Number of Ticks. The value range is (0,OS_SYS_CLOCK)."
|   |-ParagraphComment 0xe25a80 <line:317:3>
|   | `-TextComment 0xe25a50 <col:3> Text=" "
|   |-BlockCommandComment 0xe25aa0 <col:4, line:319:3> Name="retval"
|   | `-ParagraphComment 0xe25b50 <line:317:11, line:319:3>
|   |   |-TextComment 0xe25ad0 <line:317:11, col:109> Text=" UINT32 Number of milliseconds obtained through the conversion. Ticks are successfully converted to"
|   |   |-TextComment 0xe25af0 <line:318:3, col:16> Text=" milliseconds."
|   |   `-TextComment 0xe25b10 <line:319:3> Text=" "
|   |-BlockCommandComment 0xe25b70 <col:4, line:321:3> Name="par"
|   | `-ParagraphComment 0xe25d40 <line:319:8, line:321:3>
|   |   |-TextComment 0xe25ba0 <line:319:8, col:20> Text="  Dependency:"
|   |   |-TextComment 0xe25bc0 <line:320:3> Text=" "
|   |   |-HTMLStartTagComment 0xe25be0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe25c20 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe25c60 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe25c80 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe25cb0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe25ce0 <line:321:3> Text=" "
|   `-BlockCommandComment 0xe25d60 <col:4, col:19> Name="see"
|     `-ParagraphComment 0xe25dc0 <col:8, col:19>
|       `-TextComment 0xe25d90 <col:8, col:19> Text=" LOS_MS2Tick"
|-FunctionDecl 0xdcfdb8 <line:344:1, col:42> col:15 LOS_MS2Tick 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xdcfd28 <col:27, col:34> col:34 millisec 'UINT32':'unsigned int'
| `-FullComment 0xe26820 <line:326:3, line:342:19>
|   |-ParagraphComment 0xe25ef0 <line:326:3>
|   | `-TextComment 0xe25ec0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe25f10 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xe25f80 <line:327:3>
|   | `-TextComment 0xe25f50 <col:3> Text=" "
|   |-BlockCommandComment 0xe25fa0 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0xe26000 <col:10, col:40>
|   |   `-TextComment 0xe25fd0 <col:10, col:40> Text=" Convert milliseconds to Ticks."
|   |-ParagraphComment 0xe26050 <line:329:3>
|   | `-TextComment 0xe26020 <col:3> Text=" "
|   |-BlockCommandComment 0xe26070 <col:4, line:331:3> Name="par"
|   | `-ParagraphComment 0xe26120 <line:329:8, line:331:3>
|   |   |-TextComment 0xe260a0 <line:329:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe260c0 <line:330:3, col:53> Text=" This API is used to convert milliseconds to Ticks."
|   |   `-TextComment 0xe260e0 <line:331:3> Text=" "
|   |-BlockCommandComment 0xe26140 <col:4, line:335:8> Name="attention"
|   | `-ParagraphComment 0xe26330 <line:332:3, line:335:8>
|   |   |-TextComment 0xe26170 <line:332:3> Text=" "
|   |   |-HTMLStartTagComment 0xe26190 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe261d0 <line:333:3> Text=" "
|   |   |-HTMLStartTagComment 0xe261f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe26230 <col:8, col:116> Text="If the parameter passed in is equal to 0xFFFFFFFF, the retval is 0xFFFFFFFF. Pay attention to the value to be"
|   |   |-TextComment 0xe26250 <line:334:3, col:45> Text=" converted because data possibly overflows."
|   |   |-HTMLEndTagComment 0xe26270 <col:46, col:50> Name="li"
|   |   |-TextComment 0xe262a0 <line:335:3> Text=" "
|   |   `-HTMLEndTagComment 0xe262c0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe26380 <line:337:3>
|   | `-TextComment 0xe26350 <col:3> Text=" "
|   |-ParamCommandComment 0xe263a0 <col:4, col:49> [in] implicitly Param="millisec" ParamIndex=0
|   | `-ParagraphComment 0xe26430 <col:20, col:49>
|   |   `-TextComment 0xe26400 <col:20, col:49> Text="  [IN] Number of milliseconds."
|   |-ParagraphComment 0xe26480 <line:339:3>
|   | `-TextComment 0xe26450 <col:3> Text=" "
|   |-BlockCommandComment 0xe264a0 <col:4, line:340:3> Name="retval"
|   | `-ParagraphComment 0xe26520 <line:339:11, line:340:3>
|   |   |-TextComment 0xe264d0 <line:339:11, col:66> Text=" UINT32 Number of Ticks obtained through the conversion."
|   |   `-TextComment 0xe264f0 <line:340:3> Text=" "
|   |-BlockCommandComment 0xe26540 <col:4, line:342:3> Name="par"
|   | `-ParagraphComment 0xe26710 <line:340:8, line:342:3>
|   |   |-TextComment 0xe26570 <line:340:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe26590 <line:341:3> Text=" "
|   |   |-HTMLStartTagComment 0xe265b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe265f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe26630 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe26650 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe26680 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe266b0 <line:342:3> Text=" "
|   `-BlockCommandComment 0xe26730 <col:4, col:19> Name="see"
|     `-ParagraphComment 0xe26790 <col:8, col:19>
|       `-TextComment 0xe26760 <col:8, col:19> Text=" LOS_Tick2MS"
|-FunctionDecl 0xdd03a8 <line:362:1, col:96> col:15 LOS_TickTimerRegister 'UINT32 (const ArchTickTimer *, const HWI_PROC_FUNC)' extern
| |-ParmVarDecl 0xdd0220 <col:37, col:58> col:58 timer 'const ArchTickTimer *'
| |-ParmVarDecl 0xdd0298 <col:65, col:85> col:85 tickHandler 'const HWI_PROC_FUNC':'void (*const)(void)'
| `-FullComment 0xe270d0 <line:347:3, line:360:7>
|   |-ParagraphComment 0xe268c0 <line:347:3>
|   | `-TextComment 0xe26890 <col:3> Text=" "
|   |-VerbatimLineComment 0xe268e0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xe26950 <line:348:3>
|   | `-TextComment 0xe26920 <col:3> Text=" "
|   |-BlockCommandComment 0xe26970 <col:4, col:47> Name="brief"
|   | `-ParagraphComment 0xe269d0 <col:10, col:47>
|   |   `-TextComment 0xe269a0 <col:10, col:47> Text=" Re-initializes the system tick timer."
|   |-ParagraphComment 0xe26a20 <line:350:3>
|   | `-TextComment 0xe269f0 <col:3> Text=" "
|   |-BlockCommandComment 0xe26a40 <col:4, line:352:3> Name="par"
|   | `-ParagraphComment 0xe26af0 <line:350:8, line:352:3>
|   |   |-TextComment 0xe26a70 <line:350:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe26a90 <line:351:3, col:59> Text=" This API is used to re-initialize the system Tick timer."
|   |   `-TextComment 0xe26ab0 <line:352:3> Text=" "
|   |-BlockCommandComment 0xe26b10 <col:4, col:13> Name="attention"
|   | `-ParagraphComment 0xe26b40 <<invalid sloc>>
|   |-ParagraphComment 0xe26b90 <line:354:3>
|   | `-TextComment 0xe26b60 <col:3> Text=" "
|   |-ParamCommandComment 0xe26bb0 <col:4, line:355:3> [in] implicitly Param="timer" ParamIndex=0
|   | `-ParagraphComment 0xe26c60 <line:354:16, line:355:3>
|   |   |-TextComment 0xe26c10 <line:354:16, col:51> Text="        [IN] Specify the tick timer."
|   |   `-TextComment 0xe26c30 <line:355:3> Text=" "
|   |-ParamCommandComment 0xe26c80 <col:4, col:79> [in] implicitly Param="tickHandler" ParamIndex=1
|   | `-ParagraphComment 0xe26d10 <col:22, col:79>
|   |   `-TextComment 0xe26ce0 <col:22, col:79> Text="  [IN] Tick Interrupts the execution of the hook function."
|   |-ParagraphComment 0xe26d60 <line:357:3>
|   | `-TextComment 0xe26d30 <col:3> Text=" "
|   |-BlockCommandComment 0xe26d80 <col:4, line:358:3> Name="retval"
|   | `-ParagraphComment 0xe26e00 <line:357:11, line:358:3>
|   |   |-TextComment 0xe26db0 <line:357:11, col:32> Text=" LOS_OK or Error code."
|   |   `-TextComment 0xe26dd0 <line:358:3> Text=" "
|   |-BlockCommandComment 0xe26e20 <col:4, line:360:3> Name="par"
|   | `-ParagraphComment 0xe26ff0 <line:358:8, line:360:3>
|   |   |-TextComment 0xe26e50 <line:358:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe26e70 <line:359:3> Text=" "
|   |   |-HTMLStartTagComment 0xe26e90 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe26ed0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe26f10 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe26f30 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe26f60 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe26f90 <line:360:3> Text=" "
|   `-BlockCommandComment 0xe27010 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe27040 <<invalid sloc>>
|-FunctionDecl 0xdd04f8 <line:381:1, col:43> col:13 LOS_UDelay 'void (UINT64)' extern
| `-ParmVarDecl 0xdd0468 <col:24, col:31> col:31 microseconds 'UINT64':'unsigned long long'
|-FunctionDecl 0xdd0640 <line:400:1, col:39> col:13 LOS_MDelay 'void (UINT32)' extern
| `-ParmVarDecl 0xdd05b0 <col:24, col:31> col:31 millisec 'UINT32':'unsigned int'
|-FunctionDecl 0xdd0780 <line:419:1, col:35> col:15 LOS_CurrNanosec 'UINT64 (void)' extern
|-FunctionDecl 0xdd08e0 <line:440:1, col:31> col:13 OsTickHandler 'void (void)' extern
| `-FullComment 0xe27a90 <line:422:3, line:438:13>
|   |-ParagraphComment 0xe27170 <line:422:3>
|   | `-TextComment 0xe27140 <col:3> Text=" "
|   |-VerbatimLineComment 0xe27190 <col:4, col:22> Text="  los_tick"
|   |-ParagraphComment 0xe27200 <line:423:3>
|   | `-TextComment 0xe271d0 <col:3> Text=" "
|   |-BlockCommandComment 0xe27220 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xe27280 <col:10, col:41>
|   |   `-TextComment 0xe27250 <col:10, col:41> Text=" Handle the system tick timeout."
|   |-ParagraphComment 0xe272d0 <line:425:3>
|   | `-TextComment 0xe272a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe272f0 <col:4, line:426:78> Name="par"
|   | `-ParagraphComment 0xe27370 <line:425:8, line:426:78>
|   |   |-TextComment 0xe27320 <line:425:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe27340 <line:426:3, col:78> Text=" This API is called when the system tick timeout and triggers the interrupt."
|   |-ParagraphComment 0xe273c0 <line:428:3>
|   | `-TextComment 0xe27390 <col:3> Text=" "
|   |-BlockCommandComment 0xe273e0 <col:4, line:431:8> Name="attention"
|   | `-ParagraphComment 0xe275b0 <line:429:3, line:431:8>
|   |   |-TextComment 0xe27410 <line:429:3> Text=" "
|   |   |-HTMLStartTagComment 0xe27430 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe27470 <line:430:3> Text=" "
|   |   |-HTMLStartTagComment 0xe27490 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe274d0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe274f0 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe27520 <line:431:3> Text=" "
|   |   `-HTMLEndTagComment 0xe27540 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe27600 <line:433:3>
|   | `-TextComment 0xe275d0 <col:3> Text=" "
|   |-ParamCommandComment 0xe27620 <col:4, col:15> [in] implicitly Param="none."
|   | `-ParagraphComment 0xe27680 <<invalid sloc>>
|   |-ParagraphComment 0xe276d0 <line:435:3>
|   | `-TextComment 0xe276a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe276f0 <col:4, line:436:3> Name="retval"
|   | `-ParagraphComment 0xe27770 <line:435:11, line:436:3>
|   |   |-TextComment 0xe27720 <line:435:11, col:16> Text=" None."
|   |   `-TextComment 0xe27740 <line:436:3> Text=" "
|   |-BlockCommandComment 0xe27790 <col:4, line:438:3> Name="par"
|   | `-ParagraphComment 0xe27980 <line:436:8, line:438:3>
|   |   |-TextComment 0xe277c0 <line:436:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe277e0 <line:437:3> Text=" "
|   |   |-HTMLStartTagComment 0xe27820 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe27860 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe278a0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe278c0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe278f0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe27920 <line:438:3> Text=" "
|   `-BlockCommandComment 0xe279a0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xe27a00 <col:8, col:13>
|       `-TextComment 0xe279d0 <col:8, col:13> Text=" None."
|-RecordDecl 0xdd09a8 <line:446:9, line:449:1> line:446:16 struct TagCpuTick definition
| |-FullComment 0xe27c00 <line:443:3, line:444:33>
| | |-ParagraphComment 0xe27b30 <line:443:3>
| | | `-TextComment 0xe27b00 <col:3> Text=" "
| | |-VerbatimLineComment 0xe27b50 <col:4, col:21> Text=" los_tick"
| | `-ParagraphComment 0xe27bc0 <line:444:3, col:33>
| |   `-TextComment 0xe27b90 <col:3, col:33> Text=" Define the CPU Tick structure."
| |-FieldDecl 0xdd0a60 <line:447:5, col:12> col:12 cntHi 'UINT32':'unsigned int'
| `-FieldDecl 0xdd0ac0 <line:448:5, col:12> col:12 cntLo 'UINT32':'unsigned int'
|-TypedefDecl 0xdd0b68 <line:446:1, line:449:3> col:3 referenced CpuTick 'struct TagCpuTick':'struct TagCpuTick'
| |-ElaboratedType 0xdd0b10 'struct TagCpuTick' sugar
| | `-RecordType 0xdd0a30 'struct TagCpuTick'
| |   `-Record 0xdd09a8 'TagCpuTick'
| `-FullComment 0xe27d70 <line:443:3, line:444:33>
|   |-ParagraphComment 0xe27ca0 <line:443:3>
|   | `-TextComment 0xe27c70 <col:3> Text=" "
|   |-VerbatimLineComment 0xe27cc0 <col:4, col:21> Text=" los_tick"
|   `-ParagraphComment 0xe27d30 <line:444:3, col:33>
|     `-TextComment 0xe27d00 <col:3, col:33> Text=" Define the CPU Tick structure."
|-FunctionDecl 0xdd0fb8 <line:510:1, col:72> col:15 OsCpuTick2MS 'UINT32 (CpuTick *, UINT32 *, UINT32 *)' extern
| |-ParmVarDecl 0xdd0da8 <col:28, col:37> col:37 cpuTick 'CpuTick *'
| |-ParmVarDecl 0xdd0e20 <col:46, col:54> col:54 msHi 'UINT32 *'
| |-ParmVarDecl 0xdd0e98 <col:60, col:68> col:68 msLo 'UINT32 *'
| `-FullComment 0xe28970 <line:490:3, line:508:13>
|   |-ParagraphComment 0xe27e10 <line:490:3>
|   | `-TextComment 0xe27de0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe27e30 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xe27ea0 <line:491:3>
|   | `-TextComment 0xe27e70 <col:3> Text=" "
|   |-BlockCommandComment 0xe27ec0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xe27f20 <col:10, col:41>
|   |   `-TextComment 0xe27ef0 <col:10, col:41> Text=" Convert cycles to milliseconds."
|   |-ParagraphComment 0xe27f70 <line:493:3>
|   | `-TextComment 0xe27f40 <col:3> Text=" "
|   |-BlockCommandComment 0xe27f90 <col:4, line:495:3> Name="par"
|   | `-ParagraphComment 0xe28040 <line:493:8, line:495:3>
|   |   |-TextComment 0xe27fc0 <line:493:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe27fe0 <line:494:3, col:54> Text=" This API is used to convert cycles to milliseconds."
|   |   `-TextComment 0xe28000 <line:495:3> Text=" "
|   |-BlockCommandComment 0xe28060 <col:4, line:498:8> Name="attention"
|   | `-ParagraphComment 0xe28230 <line:496:3, line:498:8>
|   |   |-TextComment 0xe28090 <line:496:3> Text=" "
|   |   |-HTMLStartTagComment 0xe280b0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe280f0 <line:497:3> Text=" "
|   |   |-HTMLStartTagComment 0xe28110 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe28150 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe28170 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe281a0 <line:498:3> Text=" "
|   |   `-HTMLEndTagComment 0xe281c0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe28280 <line:500:3>
|   | `-TextComment 0xe28250 <col:3> Text=" "
|   |-ParamCommandComment 0xe282a0 <col:4, line:501:3> [in] implicitly Param="cpuTick" ParamIndex=0
|   | `-ParagraphComment 0xe28350 <line:500:19, line:501:3>
|   |   |-TextComment 0xe28300 <line:500:19, col:47> Text="  [IN]  Number of CPU cycles."
|   |   `-TextComment 0xe28320 <line:501:3> Text=" "
|   |-ParamCommandComment 0xe28370 <col:4, line:502:3> [in] implicitly Param="msHi" ParamIndex=1
|   | `-ParagraphComment 0xe28420 <line:501:16, line:502:3>
|   |   |-TextComment 0xe283d0 <line:501:16, col:70> Text="     [OUT] Upper 32 bits of the number of milliseconds."
|   |   `-TextComment 0xe283f0 <line:502:3> Text=" "
|   |-ParamCommandComment 0xe28440 <col:4, col:70> [in] implicitly Param="msLo" ParamIndex=2
|   | `-ParagraphComment 0xe284d0 <col:16, col:70>
|   |   `-TextComment 0xe284a0 <col:16, col:70> Text="     [OUT] Lower 32 bits of the number of milliseconds."
|   |-ParagraphComment 0xe28520 <line:504:3>
|   | `-TextComment 0xe284f0 <col:3> Text=" "
|   |-BlockCommandComment 0xe28540 <col:4, line:505:3> Name="retval"
|   | `-ParagraphComment 0xe285c0 <line:504:11, line:505:3>
|   |   |-TextComment 0xe28570 <line:504:11, col:68> Text=" #LOS_ERRNO_SYS_PTR_NULL    0x02000011: Invalid parameter."
|   |   `-TextComment 0xe28590 <line:505:3> Text=" "
|   |-BlockCommandComment 0xe285e0 <col:4, line:506:3> Name="retval"
|   | `-ParagraphComment 0xe28660 <line:505:11, line:506:3>
|   |   |-TextComment 0xe28610 <line:505:11, col:91> Text=" #LOS_OK                   0:  Cycles are successfully converted to microseconds."
|   |   `-TextComment 0xe28630 <line:506:3> Text=" "
|   |-BlockCommandComment 0xe28680 <col:4, line:508:3> Name="par"
|   | `-ParagraphComment 0xe28850 <line:506:8, line:508:3>
|   |   |-TextComment 0xe286b0 <line:506:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe286d0 <line:507:3> Text=" "
|   |   |-HTMLStartTagComment 0xe286f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe28730 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe28770 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe28790 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe287c0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe287f0 <line:508:3> Text=" "
|   `-BlockCommandComment 0xe28870 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xe288d0 <col:8, col:13>
|       `-TextComment 0xe288a0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xdd14e8 <line:533:1, col:72> col:15 OsCpuTick2US 'UINT32 (CpuTick *, UINT32 *, UINT32 *)' extern
| |-ParmVarDecl 0xdd10a8 <col:28, col:37> col:37 cpuTick 'CpuTick *'
| |-ParmVarDecl 0xdd1120 <col:46, col:54> col:54 usHi 'UINT32 *'
| |-ParmVarDecl 0xdd1198 <col:60, col:68> col:68 usLo 'UINT32 *'
| `-FullComment 0xe29570 <line:513:3, line:531:13>
|   |-ParagraphComment 0xe28a10 <line:513:3>
|   | `-TextComment 0xe289e0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe28a30 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xe28aa0 <line:514:3>
|   | `-TextComment 0xe28a70 <col:3> Text=" "
|   |-BlockCommandComment 0xe28ac0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xe28b20 <col:10, col:41>
|   |   `-TextComment 0xe28af0 <col:10, col:41> Text=" Convert cycles to microseconds."
|   |-ParagraphComment 0xe28b70 <line:516:3>
|   | `-TextComment 0xe28b40 <col:3> Text=" "
|   |-BlockCommandComment 0xe28b90 <col:4, line:518:3> Name="par"
|   | `-ParagraphComment 0xe28c40 <line:516:8, line:518:3>
|   |   |-TextComment 0xe28bc0 <line:516:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe28be0 <line:517:3, col:54> Text=" This API is used to convert cycles to microseconds."
|   |   `-TextComment 0xe28c00 <line:518:3> Text=" "
|   |-BlockCommandComment 0xe28c60 <col:4, line:521:8> Name="attention"
|   | `-ParagraphComment 0xe28e30 <line:519:3, line:521:8>
|   |   |-TextComment 0xe28c90 <line:519:3> Text=" "
|   |   |-HTMLStartTagComment 0xe28cb0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe28cf0 <line:520:3> Text=" "
|   |   |-HTMLStartTagComment 0xe28d10 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe28d50 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe28d70 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe28da0 <line:521:3> Text=" "
|   |   `-HTMLEndTagComment 0xe28dc0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe28e80 <line:523:3>
|   | `-TextComment 0xe28e50 <col:3> Text=" "
|   |-ParamCommandComment 0xe28ea0 <col:4, line:524:3> [in] implicitly Param="cpuTick" ParamIndex=0
|   | `-ParagraphComment 0xe28f50 <line:523:19, line:524:3>
|   |   |-TextComment 0xe28f00 <line:523:19, col:47> Text="  [IN]  Number of CPU cycles."
|   |   `-TextComment 0xe28f20 <line:524:3> Text=" "
|   |-ParamCommandComment 0xe28f70 <col:4, line:525:3> [in] implicitly Param="usHi" ParamIndex=1
|   | `-ParagraphComment 0xe29020 <line:524:16, line:525:3>
|   |   |-TextComment 0xe28fd0 <line:524:16, col:70> Text="     [OUT] Upper 32 bits of the number of microseconds."
|   |   `-TextComment 0xe28ff0 <line:525:3> Text=" "
|   |-ParamCommandComment 0xe29040 <col:4, col:70> [in] implicitly Param="usLo" ParamIndex=2
|   | `-ParagraphComment 0xe290d0 <col:16, col:70>
|   |   `-TextComment 0xe290a0 <col:16, col:70> Text="     [OUT] Lower 32 bits of the number of microseconds."
|   |-ParagraphComment 0xe29120 <line:527:3>
|   | `-TextComment 0xe290f0 <col:3> Text=" "
|   |-BlockCommandComment 0xe29140 <col:4, line:528:3> Name="retval"
|   | `-ParagraphComment 0xe291c0 <line:527:11, line:528:3>
|   |   |-TextComment 0xe29170 <line:527:11, col:68> Text=" #LOS_ERRNO_SYS_PTR_NULL    0x02000011: Invalid parameter."
|   |   `-TextComment 0xe29190 <line:528:3> Text=" "
|   |-BlockCommandComment 0xe291e0 <col:4, line:529:3> Name="retval"
|   | `-ParagraphComment 0xe29260 <line:528:11, line:529:3>
|   |   |-TextComment 0xe29210 <line:528:11, col:90> Text=" #LOS_OK                   0: Cycles are successfully converted to microseconds."
|   |   `-TextComment 0xe29230 <line:529:3> Text=" "
|   |-BlockCommandComment 0xe29280 <col:4, line:531:3> Name="par"
|   | `-ParagraphComment 0xe29450 <line:529:8, line:531:3>
|   |   |-TextComment 0xe292b0 <line:529:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe292d0 <line:530:3> Text=" "
|   |   |-HTMLStartTagComment 0xe292f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe29330 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe29370 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe29390 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe293c0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe293f0 <line:531:3> Text=" "
|   `-BlockCommandComment 0xe29470 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xe294d0 <col:8, col:13>
|       `-TextComment 0xe294a0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xdd1668 <main/los_compiler.h:130:23, main/los_tick.h:556:1> line:553:22 OsCycle2MS 'UINT64 (UINT64)' static inline
| |-ParmVarDecl 0xdd15d8 <col:33, col:40> col:40 used cycle 'UINT64':'unsigned long long'
| |-CompoundStmt 0xdd1908 <line:554:1, line:556:1>
| | `-ReturnStmt 0xdd18c8 <line:555:5, col:66>
| |   `-CStyleCastExpr 0xdd18a0 <col:12, col:66> 'UINT64':'unsigned long long' <NoOp>
| |     `-ParenExpr 0xdd1880 <col:20, col:66> 'unsigned long long'
| |       `-ParenExpr 0xdd1830 <col:21, col:65> 'unsigned long long'
| |         `-BinaryOperator 0xdd1810 <col:22, col:64> 'unsigned long long' '/'
| |           |-ImplicitCastExpr 0xdd17e0 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
| |           | `-DeclRefExpr 0xdd1710 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0xdd15d8 'cycle' 'UINT64':'unsigned long long'
| |           `-ImplicitCastExpr 0xdd17f8 <col:30, col:64> 'unsigned long long' <IntegralCast>
| |             `-ParenExpr 0xdd17c0 <col:30, col:64> 'unsigned int'
| |               `-BinaryOperator 0xdd17a0 <col:31, line:461:32> 'unsigned int' '/'
| |                 |-ImplicitCastExpr 0xdd1770 <line:555:31> 'UINT32':'unsigned int' <LValueToRValue>
| |                 | `-DeclRefExpr 0xdd1730 <col:31> 'UINT32':'unsigned int' lvalue Var 0xdcaba8 'g_sysClock' 'UINT32':'unsigned int'
| |                 `-ImplicitCastExpr 0xdd1788 <line:461:32> 'unsigned int' <IntegralCast>
| |                   `-IntegerLiteral 0xdd1750 <col:32> 'int' 1000
| `-FullComment 0xe29f30 <line:536:3, line:551:13>
|   |-ParagraphComment 0xe29610 <line:536:3>
|   | `-TextComment 0xe295e0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe29630 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xe296a0 <line:537:3>
|   | `-TextComment 0xe29670 <col:3> Text=" "
|   |-BlockCommandComment 0xe296c0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xe29720 <col:10, col:41>
|   |   `-TextComment 0xe296f0 <col:10, col:41> Text=" Convert cycles to milliseconds."
|   |-ParagraphComment 0xe29770 <line:539:3>
|   | `-TextComment 0xe29740 <col:3> Text=" "
|   |-BlockCommandComment 0xe29790 <col:4, line:541:3> Name="par"
|   | `-ParagraphComment 0xe29850 <line:539:8, line:541:3>
|   |   |-TextComment 0xe297c0 <line:539:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe297e0 <line:540:3, col:54> Text=" This API is used to convert cycles to milliseconds."
|   |   `-TextComment 0xe29800 <line:541:3> Text=" "
|   |-BlockCommandComment 0xe29870 <col:4, line:544:8> Name="attention"
|   | `-ParagraphComment 0xe29a40 <line:542:3, line:544:8>
|   |   |-TextComment 0xe298a0 <line:542:3> Text=" "
|   |   |-HTMLStartTagComment 0xe298c0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe29900 <line:543:3> Text=" "
|   |   |-HTMLStartTagComment 0xe29920 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe29960 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe29980 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe299b0 <line:544:3> Text=" "
|   |   `-HTMLEndTagComment 0xe299d0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe29a90 <line:546:3>
|   | `-TextComment 0xe29a60 <col:3> Text=" "
|   |-ParamCommandComment 0xe29ab0 <col:4, col:43> [in] implicitly Param="cycle" ParamIndex=0
|   | `-ParagraphComment 0xe29b40 <col:17, col:43>
|   |   `-TextComment 0xe29b10 <col:17, col:43> Text="     [IN] Number of cycles."
|   |-ParagraphComment 0xe29b90 <line:548:3>
|   | `-TextComment 0xe29b60 <col:3> Text=" "
|   |-BlockCommandComment 0xe29bb0 <col:4, line:549:3> Name="retval"
|   | `-ParagraphComment 0xe29c30 <line:548:11, line:549:3>
|   |   |-TextComment 0xe29be0 <line:548:11, col:120> Text=" Number of milliseconds obtained through the conversion.    Cycles are successfully converted to milliseconds."
|   |   `-TextComment 0xe29c00 <line:549:3> Text=" "
|   |-BlockCommandComment 0xe29c50 <col:4, line:551:3> Name="par"
|   | `-ParagraphComment 0xe29e20 <line:549:8, line:551:3>
|   |   |-TextComment 0xe29c80 <line:549:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe29ca0 <line:550:3> Text=" "
|   |   |-HTMLStartTagComment 0xe29cc0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe29d00 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe29d40 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe29d60 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe29d90 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe29dc0 <line:551:3> Text=" "
|   `-BlockCommandComment 0xe29e40 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xe29ea0 <col:8, col:13>
|       `-TextComment 0xe29e70 <col:8, col:13> Text=" None."
|-FunctionDecl 0xdd19c0 <main/los_compiler.h:130:23, main/los_tick.h:583:1> line:576:22 OsCycle2US 'UINT64 (UINT64)' static inline
| |-ParmVarDecl 0xdd1930 <col:33, col:40> col:40 used cycle 'UINT64':'unsigned long long'
| |-CompoundStmt 0xdd1dc0 <line:577:1, line:583:1>
| | |-DeclStmt 0xdd1b88 <line:578:5, col:51>
| | | `-VarDecl 0xdd1a78 <col:5, line:467:32> line:578:12 used tmp 'UINT64':'unsigned long long' cinit
| | |   `-ImplicitCastExpr 0xdd1b70 <col:18, line:467:32> 'UINT64':'unsigned long long' <IntegralCast>
| | |     `-BinaryOperator 0xdd1b50 <line:578:18, line:467:32> 'unsigned int' '/'
| | |       |-ImplicitCastExpr 0xdd1b20 <line:578:18> 'UINT32':'unsigned int' <LValueToRValue>
| | |       | `-DeclRefExpr 0xdd1ae0 <col:18> 'UINT32':'unsigned int' lvalue Var 0xdcaba8 'g_sysClock' 'UINT32':'unsigned int'
| | |       `-ImplicitCastExpr 0xdd1b38 <line:467:32> 'unsigned int' <IntegralCast>
| | |         `-IntegerLiteral 0xdd1b00 <col:32> 'int' 1000000
| | |-IfStmt 0xdd1c90 <line:579:5, line:581:5>
| | | |-BinaryOperator 0xdd1c10 <line:579:9, col:16> 'int' '=='
| | | | |-ImplicitCastExpr 0xdd1be0 <col:9> 'UINT64':'unsigned long long' <LValueToRValue>
| | | | | `-DeclRefExpr 0xdd1ba0 <col:9> 'UINT64':'unsigned long long' lvalue Var 0xdd1a78 'tmp' 'UINT64':'unsigned long long'
| | | | `-ImplicitCastExpr 0xdd1bf8 <col:16> 'unsigned long long' <IntegralCast>
| | | |   `-IntegerLiteral 0xdd1bc0 <col:16> 'int' 0
| | | `-CompoundStmt 0xdd1c78 <col:19, line:581:5>
| | |   `-ReturnStmt 0xdd1c68 <line:580:9, col:16>
| | |     `-ImplicitCastExpr 0xdd1c50 <col:16> 'UINT64':'unsigned long long' <IntegralCast>
| | |       `-IntegerLiteral 0xdd1c30 <col:16> 'int' 0
| | `-ReturnStmt 0xdd1db0 <line:582:5, col:32>
| |   `-CStyleCastExpr 0xdd1d88 <col:12, col:32> 'UINT64':'unsigned long long' <NoOp>
| |     `-ParenExpr 0xdd1d68 <col:20, col:32> 'unsigned long long'
| |       `-BinaryOperator 0xdd1d18 <col:21, col:29> 'unsigned long long' '/'
| |         |-ImplicitCastExpr 0xdd1ce8 <col:21> 'UINT64':'unsigned long long' <LValueToRValue>
| |         | `-DeclRefExpr 0xdd1ca8 <col:21> 'UINT64':'unsigned long long' lvalue ParmVar 0xdd1930 'cycle' 'UINT64':'unsigned long long'
| |         `-ImplicitCastExpr 0xdd1d00 <col:29> 'UINT64':'unsigned long long' <LValueToRValue>
| |           `-DeclRefExpr 0xdd1cc8 <col:29> 'UINT64':'unsigned long long' lvalue Var 0xdd1a78 'tmp' 'UINT64':'unsigned long long'
| `-FullComment 0xe2a8e0 <line:559:3, line:574:13>
|   |-ParagraphComment 0xe29fd0 <line:559:3>
|   | `-TextComment 0xe29fa0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe29ff0 <col:4, col:21> Text=" los_tick"
|   |-ParagraphComment 0xe2a060 <line:560:3>
|   | `-TextComment 0xe2a030 <col:3> Text=" "
|   |-BlockCommandComment 0xe2a080 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xe2a0e0 <col:10, col:41>
|   |   `-TextComment 0xe2a0b0 <col:10, col:41> Text=" Convert cycles to microseconds."
|   |-ParagraphComment 0xe2a130 <line:562:3>
|   | `-TextComment 0xe2a100 <col:3> Text=" "
|   |-BlockCommandComment 0xe2a150 <col:4, line:564:3> Name="par"
|   | `-ParagraphComment 0xe2a200 <line:562:8, line:564:3>
|   |   |-TextComment 0xe2a180 <line:562:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe2a1a0 <line:563:3, col:54> Text=" This API is used to convert cycles to microseconds."
|   |   `-TextComment 0xe2a1c0 <line:564:3> Text=" "
|   |-BlockCommandComment 0xe2a220 <col:4, line:567:8> Name="attention"
|   | `-ParagraphComment 0xe2a3f0 <line:565:3, line:567:8>
|   |   |-TextComment 0xe2a250 <line:565:3> Text=" "
|   |   |-HTMLStartTagComment 0xe2a270 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe2a2b0 <line:566:3> Text=" "
|   |   |-HTMLStartTagComment 0xe2a2d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe2a310 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe2a330 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe2a360 <line:567:3> Text=" "
|   |   `-HTMLEndTagComment 0xe2a380 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe2a440 <line:569:3>
|   | `-TextComment 0xe2a410 <col:3> Text=" "
|   |-ParamCommandComment 0xe2a460 <col:4, col:43> [in] implicitly Param="cycle" ParamIndex=0
|   | `-ParagraphComment 0xe2a4f0 <col:17, col:43>
|   |   `-TextComment 0xe2a4c0 <col:17, col:43> Text="     [IN] Number of cycles."
|   |-ParagraphComment 0xe2a540 <line:571:3>
|   | `-TextComment 0xe2a510 <col:3> Text=" "
|   |-BlockCommandComment 0xe2a560 <col:4, line:572:3> Name="retval"
|   | `-ParagraphComment 0xe2a5e0 <line:571:11, line:572:3>
|   |   |-TextComment 0xe2a590 <line:571:11, col:117> Text=" Number of microseconds obtained through the conversion. Cycles are successfully converted to microseconds."
|   |   `-TextComment 0xe2a5b0 <line:572:3> Text=" "
|   |-BlockCommandComment 0xe2a600 <col:4, line:574:3> Name="par"
|   | `-ParagraphComment 0xe2a7d0 <line:572:8, line:574:3>
|   |   |-TextComment 0xe2a630 <line:572:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe2a650 <line:573:3> Text=" "
|   |   |-HTMLStartTagComment 0xe2a670 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe2a6b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe2a6f0 <col:12, col:73> Text="los_tick.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe2a710 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe2a740 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe2a770 <line:574:3> Text=" "
|   `-BlockCommandComment 0xe2a7f0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xe2a850 <col:8, col:13>
|       `-TextComment 0xe2a820 <col:8, col:13> Text=" None."
|-EnumDecl 0xdd1de8 <main/los_sortlink.h:44:9, line:47:1> line:44:9
| |-EnumConstantDecl 0xdd1ee8 <line:45:5, col:25> col:5 OS_SORT_LINK_TASK 'int'
| | `-ConstantExpr 0xdd1ed0 <col:25> 'int'
| |   `-IntegerLiteral 0xdd1eb0 <col:25> 'int' 1
| `-EnumConstantDecl 0xdd1f70 <line:46:5, col:26> col:5 OS_SORT_LINK_SWTMR 'int'
|   `-ConstantExpr 0xdd1f58 <col:26> 'int'
|     `-IntegerLiteral 0xdd1f38 <col:26> 'int' 2
|-TypedefDecl 0xdd2018 <line:44:1, line:47:3> col:3 referenced SortLinkType 'enum SortLinkType':'SortLinkType'
| `-ElaboratedType 0xdd1fc0 'enum SortLinkType' sugar
|   `-EnumType 0xdd1e90 'SortLinkType'
|     `-Enum 0xdd1de8 ''
|-RecordDecl 0xdd2088 <line:49:9, line:52:1> line:49:9 struct definition
| |-FieldDecl 0xdd2140 <line:50:5, col:17> col:17 referenced sortLinkNode 'LOS_DL_LIST':'struct LOS_DL_LIST'
| `-FieldDecl 0xdd21a0 <line:51:5, col:17> col:17 referenced responseTime 'UINT64':'unsigned long long'
|-TypedefDecl 0xdd22a8 <line:49:1, line:52:3> col:3 referenced SortLinkList 'struct SortLinkList':'SortLinkList'
| `-ElaboratedType 0xdd2250 'struct SortLinkList' sugar
|   `-RecordType 0xdd2110 'SortLinkList'
|     `-Record 0xdd2088 ''
|-RecordDecl 0xdd2318 <line:54:9, line:56:1> line:54:9 struct definition
| `-FieldDecl 0xdd23d0 <line:55:5, col:17> col:17 referenced sortLink 'LOS_DL_LIST':'struct LOS_DL_LIST'
|-TypedefDecl 0xdd4790 <line:54:1, line:56:3> col:3 referenced SortLinkAttribute 'struct SortLinkAttribute':'SortLinkAttribute'
| `-ElaboratedType 0xdd2420 'struct SortLinkAttribute' sugar
|   `-RecordType 0xdd23a0 'SortLinkAttribute'
|     `-Record 0xdd2318 ''
|-VarDecl 0xdd4830 <line:58:1, col:26> col:26 used g_taskSortLink 'SortLinkAttribute':'SortLinkAttribute' extern
|-VarDecl 0xdd48a8 <line:59:1, col:26> col:26 used g_swtmrSortLink 'SortLinkAttribute':'SortLinkAttribute' extern
|-FunctionDecl 0xdd4b28 <main/los_compiler.h:158:22, main/los_sortlink.h:73:1> line:67:22 OsSortLinkGetRemainTime 'UINT64 (UINT64, const SortLinkList *)' static inline
| |-ParmVarDecl 0xdd4920 <col:46, col:53> col:53 used currTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xdd4a18 <col:63, col:83> col:83 used targetSortList 'const SortLinkList *'
| `-CompoundStmt 0xdd4e30 <line:68:1, line:73:1>
|   |-IfStmt 0xdd4d10 <line:69:5, line:71:5>
|   | |-BinaryOperator 0xdd4c90 <line:69:9, col:37> 'int' '>='
|   | | |-ImplicitCastExpr 0xdd4c60 <col:9> 'UINT64':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0xdd4bd8 <col:9> 'UINT64':'unsigned long long' lvalue ParmVar 0xdd4920 'currTime' 'UINT64':'unsigned long long'
|   | | `-ImplicitCastExpr 0xdd4c78 <col:21, col:37> 'UINT64':'unsigned long long' <LValueToRValue>
|   | |   `-MemberExpr 0xdd4c30 <col:21, col:37> 'const UINT64':'const unsigned long long' lvalue ->responseTime 0xdd21a0
|   | |     `-ImplicitCastExpr 0xdd4c18 <col:21> 'const SortLinkList *' <LValueToRValue>
|   | |       `-DeclRefExpr 0xdd4bf8 <col:21> 'const SortLinkList *' lvalue ParmVar 0xdd4a18 'targetSortList' 'const SortLinkList *'
|   | `-CompoundStmt 0xdd4cf8 <col:51, line:71:5>
|   |   `-ReturnStmt 0xdd4ce8 <line:70:9, col:16>
|   |     `-ImplicitCastExpr 0xdd4cd0 <col:16> 'UINT64':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0xdd4cb0 <col:16> 'int' 0
|   `-ReturnStmt 0xdd4e20 <line:72:5, col:52>
|     `-ParenExpr 0xdd4e00 <col:12, col:52> 'unsigned long long'
|       `-BinaryOperator 0xdd4de0 <col:13, col:44> 'unsigned long long' '-'
|         |-ImplicitCastExpr 0xdd4db0 <col:13, col:29> 'UINT64':'unsigned long long' <LValueToRValue>
|         | `-MemberExpr 0xdd4d60 <col:13, col:29> 'const UINT64':'const unsigned long long' lvalue ->responseTime 0xdd21a0
|         |   `-ImplicitCastExpr 0xdd4d48 <col:13> 'const SortLinkList *' <LValueToRValue>
|         |     `-DeclRefExpr 0xdd4d28 <col:13> 'const SortLinkList *' lvalue ParmVar 0xdd4a18 'targetSortList' 'const SortLinkList *'
|         `-ImplicitCastExpr 0xdd4dc8 <col:44> 'UINT64':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0xdd4d90 <col:44> 'UINT64':'unsigned long long' lvalue ParmVar 0xdd4920 'currTime' 'UINT64':'unsigned long long'
|-FunctionDecl 0xdd4fa8 <main/los_compiler.h:158:22, main/los_sortlink.h:79:1> line:75:20 OsDeleteNodeSortLink 'void (SortLinkList *)' static inline
| |-ParmVarDecl 0xdd4eb8 <col:41, col:55> col:55 used sortList 'SortLinkList *'
| `-CompoundStmt 0xdd5320 <line:76:1, line:79:1>
|   |-CallExpr 0xdd5108 <line:77:5, col:43> 'void'
|   | |-ImplicitCastExpr 0xdd50f0 <col:5> 'void (*)(LOS_DL_LIST *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xdd5050 <col:5> 'void (LOS_DL_LIST *)' Function 0xdb4220 'LOS_ListDelete' 'void (LOS_DL_LIST *)'
|   | `-UnaryOperator 0xdd50d8 <col:20, col:31> 'LOS_DL_LIST *' prefix '&' cannot overflow
|   |   `-MemberExpr 0xdd50a8 <col:21, col:31> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue ->sortLinkNode 0xdd2140
|   |     `-ImplicitCastExpr 0xdd5090 <col:21> 'SortLinkList *' <LValueToRValue>
|   |       `-DeclRefExpr 0xdd5070 <col:21> 'SortLinkList *' lvalue ParmVar 0xdd4eb8 'sortList' 'SortLinkList *'
|   `-ParenExpr 0xdd5300 <line:62:45, col:98> 'UINT64':'unsigned long long'
|     `-BinaryOperator 0xdd52e0 <col:46, col:97> 'UINT64':'unsigned long long' '='
|       |-MemberExpr 0xdd5200 <col:46, col:76> 'UINT64':'unsigned long long' lvalue ->responseTime 0xdd21a0
|       | `-ParenExpr 0xdd51e0 <col:46, col:73> 'SortLinkList *'
|       |   `-CStyleCastExpr 0xdd51b8 <col:47, col:72> 'SortLinkList *' <NoOp>
|       |     `-ImplicitCastExpr 0xdd51a0 <col:63, col:72> 'SortLinkList *' <LValueToRValue> part_of_explicit_cast
|       |       `-ParenExpr 0xdd5180 <col:63, col:72> 'SortLinkList *' lvalue
|       |         `-DeclRefExpr 0xdd5130 <line:78:24> 'SortLinkList *' lvalue ParmVar 0xdd4eb8 'sortList' 'SortLinkList *'
|       `-ParenExpr 0xdd52c0 <line:62:91, col:97> 'UINT64':'unsigned long long'
|         `-ParenExpr 0xdd52a0 <line:61:35, col:46> 'UINT64':'unsigned long long'
|           `-CStyleCastExpr 0xdd5278 <col:36, col:45> 'UINT64':'unsigned long long' <IntegralCast>
|             `-UnaryOperator 0xdd5250 <col:44, col:45> 'int' prefix '-'
|               `-IntegerLiteral 0xdd5230 <col:45> 'int' 1
|-FunctionDecl 0xdd55b8 <main/los_compiler.h:158:22, main/los_sortlink.h:96:1> line:81:22 used GetSortLinkNextExpireTime 'UINT64 (SortLinkAttribute *, UINT64, UINT32)' static inline
| |-ParmVarDecl 0xdd53a8 <col:48, col:67> col:67 used sortHeader 'SortLinkAttribute *'
| |-ParmVarDecl 0xdd5420 <col:79, col:86> col:86 used startTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xdd5498 <col:97, col:104> col:104 used tickPrecision 'UINT32':'unsigned int'
| `-CompoundStmt 0xdd6518 <line:82:1, line:96:1>
|   |-DeclStmt 0xdd5768 <line:83:5, col:46>
|   | `-VarDecl 0xdd5680 <col:5, col:38> col:18 used head 'LOS_DL_LIST *' cinit
|   |   `-UnaryOperator 0xdd5750 <col:25, col:38> 'LOS_DL_LIST *' prefix '&' cannot overflow
|   |     `-MemberExpr 0xdd5720 <col:26, col:38> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue ->sortLink 0xdd23d0
|   |       `-ImplicitCastExpr 0xdd5708 <col:26> 'SortLinkAttribute *' <LValueToRValue>
|   |         `-DeclRefExpr 0xdd56e8 <col:26> 'SortLinkAttribute *' lvalue ParmVar 0xdd53a8 'sortHeader' 'SortLinkAttribute *'
|   |-DeclStmt 0xdd5c08 <line:84:5, col:38>
|   | `-VarDecl 0xdd5b20 <col:5, col:31> col:18 used list 'LOS_DL_LIST *' cinit
|   |   `-ImplicitCastExpr 0xdd5bf0 <col:25, col:31> 'struct LOS_DL_LIST *' <LValueToRValue>
|   |     `-MemberExpr 0xdd5bc0 <col:25, col:31> 'struct LOS_DL_LIST *' lvalue ->pstNext 0xdab550
|   |       `-ImplicitCastExpr 0xdd5ba8 <col:25> 'LOS_DL_LIST *' <LValueToRValue>
|   |         `-DeclRefExpr 0xdd5b88 <col:25> 'LOS_DL_LIST *' lvalue Var 0xdd5680 'head' 'LOS_DL_LIST *'
|   |-IfStmt 0xdd5e38 <line:86:5, line:88:5>
|   | |-CallExpr 0xdd5cd0 <line:86:9, col:27> 'BOOL':'unsigned int'
|   | | |-ImplicitCastExpr 0xdd5cb8 <col:9> 'BOOL (*)(LOS_DL_LIST *)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0xdd5c20 <col:9> 'BOOL (LOS_DL_LIST *)' Function 0xdb4988 'LOS_ListEmpty' 'BOOL (LOS_DL_LIST *)'
|   | | `-ImplicitCastExpr 0xdd5cf8 <col:23> 'LOS_DL_LIST *' <LValueToRValue>
|   | |   `-DeclRefExpr 0xdd5c40 <col:23> 'LOS_DL_LIST *' lvalue Var 0xdd5680 'head' 'LOS_DL_LIST *'
|   | `-CompoundStmt 0xdd5e20 <col:30, line:88:5>
|   |   `-ReturnStmt 0xdd5e10 <line:87:9, col:42>
|   |     `-BinaryOperator 0xdd5df0 <line:65:33, line:87:42> 'unsigned long long' '-'
|   |       |-ParenExpr 0xdd5d80 <line:65:33, col:44> 'UINT64':'unsigned long long'
|   |       | `-CStyleCastExpr 0xdd5d58 <col:34, col:43> 'UINT64':'unsigned long long' <IntegralCast>
|   |       |   `-UnaryOperator 0xdd5d30 <col:42, col:43> 'int' prefix '-'
|   |       |     `-IntegerLiteral 0xdd5d10 <col:43> 'int' 1
|   |       `-ImplicitCastExpr 0xdd5dd8 <line:87:42> 'unsigned long long' <IntegralCast>
|   |         `-ImplicitCastExpr 0xdd5dc0 <col:42> 'UINT32':'unsigned int' <LValueToRValue>
|   |           `-DeclRefExpr 0xdd5da0 <col:42> 'UINT32':'unsigned int' lvalue ParmVar 0xdd5498 'tickPrecision' 'UINT32':'unsigned int'
|   |-DeclStmt 0xdd6200 <line:90:5, col:83>
|   | `-VarDecl 0xdd5e60 <col:5, main/los_list.h:277:69> main/los_sortlink.h:90:19 used listSorted 'SortLinkList *' cinit
|   |   `-ParenExpr 0xdd6188 <main/los_list.h:277:5, col:69> 'SortLinkList *'
|   |     `-CStyleCastExpr 0xdd6160 <col:6, col:68> 'SortLinkList *' <BitCast>
|   |       `-CStyleCastExpr 0xdd6128 <col:14, col:68> 'void *' <BitCast>
|   |         `-ParenExpr 0xdd6108 <col:22, col:68> 'CHAR *'
|   |           `-BinaryOperator 0xdd60b0 <col:23, line:251:69> 'CHAR *' '-'
|   |             |-CStyleCastExpr 0xdd5f50 <line:277:23, col:36> 'CHAR *' <BitCast>
|   |             | `-ImplicitCastExpr 0xdd5f38 <col:31, col:36> 'LOS_DL_LIST *' <LValueToRValue> part_of_explicit_cast
|   |             |   `-ParenExpr 0xdd5f18 <col:31, col:36> 'LOS_DL_LIST *' lvalue
|   |             |     `-DeclRefExpr 0xdd5ec8 <main/los_sortlink.h:90:50> 'LOS_DL_LIST *' lvalue Var 0xdd5b20 'list' 'LOS_DL_LIST *'
|   |             `-ParenExpr 0xdd6090 <main/los_list.h:251:38, col:69> 'UINT32':'unsigned int'
|   |               `-CStyleCastExpr 0xdd6068 <col:39, col:68> 'UINT32':'unsigned int' <PointerToIntegral>
|   |                 `-UnaryOperator 0xdd6040 <col:47, col:68> 'LOS_DL_LIST *' prefix '&' cannot overflow
|   |                   `-ParenExpr 0xdd6020 <col:48, col:68> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue
|   |                     `-MemberExpr 0xdd5ff0 <col:49, main/los_sortlink.h:90:70> 'LOS_DL_LIST':'struct LOS_DL_LIST' lvalue ->sortLinkNode 0xdd2140
|   |                       `-ParenExpr 0xdd5fd0 <main/los_list.h:251:49, col:59> 'SortLinkList *'
|   |                         `-CStyleCastExpr 0xdd5fa8 <col:50, col:58> 'SortLinkList *' <NullToPointer>
|   |                           `-IntegerLiteral 0xdd5f78 <col:58> 'int' 0
|   |-IfStmt 0xdd6470 <main/los_sortlink.h:91:5, line:93:5>
|   | |-BinaryOperator 0xdd6360 <line:91:9, col:63> 'int' '<='
|   | | |-ImplicitCastExpr 0xdd6348 <col:9, col:21> 'UINT64':'unsigned long long' <LValueToRValue>
|   | | | `-MemberExpr 0xdd6250 <col:9, col:21> 'UINT64':'unsigned long long' lvalue ->responseTime 0xdd21a0
|   | | |   `-ImplicitCastExpr 0xdd6238 <col:9> 'SortLinkList *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0xdd6218 <col:9> 'SortLinkList *' lvalue Var 0xdd5e60 'listSorted' 'SortLinkList *'
|   | | `-ParenExpr 0xdd6328 <col:37, col:63> 'unsigned long long'
|   | |   `-BinaryOperator 0xdd6308 <col:38, col:50> 'unsigned long long' '+'
|   | |     |-ImplicitCastExpr 0xdd62c0 <col:38> 'UINT64':'unsigned long long' <LValueToRValue>
|   | |     | `-DeclRefExpr 0xdd6280 <col:38> 'UINT64':'unsigned long long' lvalue ParmVar 0xdd5420 'startTime' 'UINT64':'unsigned long long'
|   | |     `-ImplicitCastExpr 0xdd62f0 <col:50> 'unsigned long long' <IntegralCast>
|   | |       `-ImplicitCastExpr 0xdd62d8 <col:50> 'UINT32':'unsigned int' <LValueToRValue>
|   | |         `-DeclRefExpr 0xdd62a0 <col:50> 'UINT32':'unsigned int' lvalue ParmVar 0xdd5498 'tickPrecision' 'UINT32':'unsigned int'
|   | `-CompoundStmt 0xdd6458 <col:66, line:93:5>
|   |   `-ReturnStmt 0xdd6448 <line:92:9, col:42>
|   |     `-ParenExpr 0xdd6428 <col:16, col:42> 'unsigned long long'
|   |       `-BinaryOperator 0xdd6408 <col:17, col:29> 'unsigned long long' '+'
|   |         |-ImplicitCastExpr 0xdd63c0 <col:17> 'UINT64':'unsigned long long' <LValueToRValue>
|   |         | `-DeclRefExpr 0xdd6380 <col:17> 'UINT64':'unsigned long long' lvalue ParmVar 0xdd5420 'startTime' 'UINT64':'unsigned long long'
|   |         `-ImplicitCastExpr 0xdd63f0 <col:29> 'unsigned long long' <IntegralCast>
|   |           `-ImplicitCastExpr 0xdd63d8 <col:29> 'UINT32':'unsigned int' <LValueToRValue>
|   |             `-DeclRefExpr 0xdd63a0 <col:29> 'UINT32':'unsigned int' lvalue ParmVar 0xdd5498 'tickPrecision' 'UINT32':'unsigned int'
|   `-ReturnStmt 0xdd6508 <line:95:5, col:24>
|     `-ImplicitCastExpr 0xdd64f0 <col:12, col:24> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-MemberExpr 0xdd64c0 <col:12, col:24> 'UINT64':'unsigned long long' lvalue ->responseTime 0xdd21a0
|         `-ImplicitCastExpr 0xdd64a8 <col:12> 'SortLinkList *' <LValueToRValue>
|           `-DeclRefExpr 0xdd6488 <col:12> 'SortLinkList *' lvalue Var 0xdd5e60 'listSorted' 'SortLinkList *'
|-FunctionDecl 0xdd66f8 <main/los_compiler.h:158:22, main/los_sortlink.h:103:1> line:98:22 OsGetNextExpireTime 'UINT64 (UINT64, UINT32)' static inline
| |-ParmVarDecl 0xdd6568 <col:42, col:49> col:49 used startTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xdd65e0 <col:60, col:67> col:67 used tickPrecision 'UINT32':'unsigned int'
| `-CompoundStmt 0xdd6cd8 <line:99:1, line:103:1>
|   |-DeclStmt 0xdd6998 <line:100:5, col:97>
|   | `-VarDecl 0xdd67b8 <col:5, col:96> col:12 used taskExpireTime 'UINT64':'unsigned long long' cinit
|   |   `-CallExpr 0xdd6930 <col:29, col:96> 'UINT64':'unsigned long long'
|   |     |-ImplicitCastExpr 0xdd6918 <col:29> 'UINT64 (*)(SortLinkAttribute *, UINT64, UINT32)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0xdd6820 <col:29> 'UINT64 (SortLinkAttribute *, UINT64, UINT32)' Function 0xdd55b8 'GetSortLinkNextExpireTime' 'UINT64 (SortLinkAttribute *, UINT64, UINT32)'
|   |     |-UnaryOperator 0xdd6860 <col:55, col:56> 'SortLinkAttribute *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0xdd6840 <col:56> 'SortLinkAttribute':'SortLinkAttribute' lvalue Var 0xdd4830 'g_taskSortLink' 'SortLinkAttribute':'SortLinkAttribute'
|   |     |-ImplicitCastExpr 0xdd6968 <col:72> 'UINT64':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0xdd6878 <col:72> 'UINT64':'unsigned long long' lvalue ParmVar 0xdd6568 'startTime' 'UINT64':'unsigned long long'
|   |     `-ImplicitCastExpr 0xdd6980 <col:83> 'UINT32':'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0xdd6898 <col:83> 'UINT32':'unsigned int' lvalue ParmVar 0xdd65e0 'tickPrecision' 'UINT32':'unsigned int'
|   |-DeclStmt 0xdd6b60 <line:101:5, col:99>
|   | `-VarDecl 0xdd69c0 <col:5, col:98> col:12 used swtmrExpireTime 'UINT64':'unsigned long long' cinit
|   |   `-CallExpr 0xdd6ad8 <col:30, col:98> 'UINT64':'unsigned long long'
|   |     |-ImplicitCastExpr 0xdd6ac0 <col:30> 'UINT64 (*)(SortLinkAttribute *, UINT64, UINT32)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0xdd6a28 <col:30> 'UINT64 (SortLinkAttribute *, UINT64, UINT32)' Function 0xdd55b8 'GetSortLinkNextExpireTime' 'UINT64 (SortLinkAttribute *, UINT64, UINT32)'
|   |     |-UnaryOperator 0xdd6a68 <col:56, col:57> 'SortLinkAttribute *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0xdd6a48 <col:57> 'SortLinkAttribute':'SortLinkAttribute' lvalue Var 0xdd48a8 'g_swtmrSortLink' 'SortLinkAttribute':'SortLinkAttribute'
|   |     |-ImplicitCastExpr 0xdd6b30 <col:74> 'UINT64':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0xdd6a80 <col:74> 'UINT64':'unsigned long long' lvalue ParmVar 0xdd6568 'startTime' 'UINT64':'unsigned long long'
|   |     `-ImplicitCastExpr 0xdd6b48 <col:85> 'UINT32':'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0xdd6aa0 <col:85> 'UINT32':'unsigned int' lvalue ParmVar 0xdd65e0 'tickPrecision' 'UINT32':'unsigned int'
|   `-ReturnStmt 0xdd6cc8 <line:102:5, col:66>
|     `-ConditionalOperator 0xdd6c98 <col:12, col:66> 'unsigned long long'
|       |-ParenExpr 0xdd6c08 <col:12, col:45> 'int'
|       | `-BinaryOperator 0xdd6be8 <col:13, col:30> 'int' '<'
|       |   |-ImplicitCastExpr 0xdd6bb8 <col:13> 'UINT64':'unsigned long long' <LValueToRValue>
|       |   | `-DeclRefExpr 0xdd6b78 <col:13> 'UINT64':'unsigned long long' lvalue Var 0xdd67b8 'taskExpireTime' 'UINT64':'unsigned long long'
|       |   `-ImplicitCastExpr 0xdd6bd0 <col:30> 'UINT64':'unsigned long long' <LValueToRValue>
|       |     `-DeclRefExpr 0xdd6b98 <col:30> 'UINT64':'unsigned long long' lvalue Var 0xdd69c0 'swtmrExpireTime' 'UINT64':'unsigned long long'
|       |-ImplicitCastExpr 0xdd6c68 <col:49> 'UINT64':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0xdd6c28 <col:49> 'UINT64':'unsigned long long' lvalue Var 0xdd67b8 'taskExpireTime' 'UINT64':'unsigned long long'
|       `-ImplicitCastExpr 0xdd6c80 <col:66> 'UINT64':'unsigned long long' <LValueToRValue>
|         `-DeclRefExpr 0xdd6c48 <col:66> 'UINT64':'unsigned long long' lvalue Var 0xdd69c0 'swtmrExpireTime' 'UINT64':'unsigned long long'
|-FunctionDecl 0xdd6e28 <line:105:1, col:60> col:20 OsGetSortLinkAttribute 'SortLinkAttribute *(SortLinkType)'
| `-ParmVarDecl 0xdd6d30 <col:43, col:56> col:56 type 'SortLinkType':'SortLinkType'
|-FunctionDecl 0xdd6fd8 <line:106:1, col:56> col:8 OsSortLinkInit 'UINT32 (SortLinkAttribute *)'
| `-ParmVarDecl 0xdd6ee0 <col:23, col:42> col:42 sortLinkHeader 'SortLinkAttribute *'
|-FunctionDecl 0xdd7338 <main/los_compiler.h:327:23, main/los_sortlink.h:107:94> col:6 OsAdd2SortLink 'void (SortLinkList *, UINT64, UINT32, SortLinkType)'
| |-ParmVarDecl 0xdd7090 <col:21, col:35> col:35 node 'SortLinkList *'
| |-ParmVarDecl 0xdd7108 <col:41, col:48> col:48 startTime 'UINT64':'unsigned long long'
| |-ParmVarDecl 0xdd7180 <col:59, col:66> col:66 waitTicks 'UINT32':'unsigned int'
| `-ParmVarDecl 0xdd71f8 <col:77, col:90> col:90 type 'SortLinkType':'SortLinkType'
|-FunctionDecl 0xdd7498 <main/los_compiler.h:327:23, main/los_sortlink.h:108:41> col:6 OsDeleteSortLink 'void (SortLinkList *)'
| `-ParmVarDecl 0xdd7408 <col:23, col:37> col:37 node 'SortLinkList *'
|-FunctionDecl 0xdd7660 <line:109:1, col:89> col:8 OsSortLinkGetTargetExpireTime 'UINT64 (UINT64, const SortLinkList *)'
| |-ParmVarDecl 0xdd7550 <col:38, col:45> col:45 currTime 'UINT64':'unsigned long long'
| `-ParmVarDecl 0xdd75c8 <col:55, col:75> col:75 targetSortList 'const SortLinkList *'
|-FunctionDecl 0xdd7868 <line:110:1, col:75> col:8 OsSortLinkGetNextExpireTime 'UINT64 (const SortLinkAttribute *)'
| `-ParmVarDecl 0xdd7778 <col:36, col:61> col:61 sortLinkHeader 'const SortLinkAttribute *'
|-TypedefDecl 0xdd94d8 <main/los_task.h:448:1, col:43> col:17 referenced TSK_ENTRY_FUNC 'void *(*)(UINT32)'
| |-PointerType 0xdd9470 'void *(*)(UINT32)'
| | `-ParenType 0xdd9410 'void *(UINT32)' sugar
| |   `-FunctionProtoType 0xdd93e0 'void *(UINT32)' cdecl
| |     |-PointerType 0xc21560 'void *'
| |     | `-BuiltinType 0xc20da0 'void'
| |     `-TypedefType 0xc84730 'UINT32' sugar
| |       |-Typedef 0xc84060 'UINT32'
| |       `-BuiltinType 0xc20ee0 'unsigned int'
| `-FullComment 0xe2aaa0 <line:444:3, line:447:1>
|   |-ParagraphComment 0xe2a980 <line:444:3>
|   | `-TextComment 0xe2a950 <col:3> Text=" "
|   |-VerbatimLineComment 0xe2a9a0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xe2aa10 <line:445:3, col:46>
|   | `-TextComment 0xe2a9e0 <col:3, col:46> Text=" Define the type of the task entry function."
|   `-ParagraphComment 0xe2aa60 <line:447:1>
|     `-TextComment 0xe2aa30 <col:1> Text=" "
|-RecordDecl 0xdd9558 <line:456:9, line:464:1> line:456:16 struct tagTskInitParam definition
| |-FullComment 0xe2ac60 <line:451:3, line:454:70>
| | |-ParagraphComment 0xe2ab40 <line:451:3>
| | | `-TextComment 0xe2ab10 <col:3> Text=" "
| | |-VerbatimLineComment 0xe2ab60 <col:4, col:21> Text=" los_task"
| | |-ParagraphComment 0xe2abd0 <line:452:3, col:65>
| | | `-TextComment 0xe2aba0 <col:3, col:65> Text=" Define the structure of the parameters used for task creation."
| | `-ParagraphComment 0xe2ac20 <line:454:3, col:70>
| |   `-TextComment 0xe2abf0 <col:3, col:70> Text=" Information of specified parameters passed in during task creation."
| |-FieldDecl 0xdd9630 <line:457:5, col:26> col:26 pfnTaskEntry 'TSK_ENTRY_FUNC':'void *(*)(UINT32)'
| | `-FullComment 0xe2ad30 <col:57, col:96>
| |   `-ParagraphComment 0xe2ad00 <col:57, col:96>
| |     `-TextComment 0xe2acd0 <col:57, col:96> Text=" Task entrance function                 "
| |-FieldDecl 0xdd96b8 <line:458:5, col:26> col:26 usTaskPrio 'UINT16':'unsigned short'
| | `-FullComment 0xe2ae00 <col:57, col:96>
| |   `-ParagraphComment 0xe2add0 <col:57, col:96>
| |     `-TextComment 0xe2ada0 <col:57, col:96> Text=" Task priority                          "
| |-FieldDecl 0xdd9748 <line:459:5, col:26> col:26 uwArg 'UINT32':'unsigned int'
| | `-FullComment 0xe2aed0 <col:57, col:96>
| |   `-ParagraphComment 0xe2aea0 <col:57, col:96>
| |     `-TextComment 0xe2ae70 <col:57, col:96> Text=" Task parameters                        "
| |-FieldDecl 0xdd97d8 <line:460:5, col:26> col:26 stackAddr 'UINTPTR':'unsigned int'
| | `-FullComment 0xe2afa0 <col:57, col:96>
| |   `-ParagraphComment 0xe2af70 <col:57, col:96>
| |     `-TextComment 0xe2af40 <col:57, col:96> Text=" Task satck memory                      "
| |-FieldDecl 0xdd9868 <line:461:5, col:26> col:26 uwStackSize 'UINT32':'unsigned int'
| | `-FullComment 0xe2b070 <col:57, col:96>
| |   `-ParagraphComment 0xe2b040 <col:57, col:96>
| |     `-TextComment 0xe2b010 <col:57, col:96> Text=" Task stack size                        "
| |-FieldDecl 0xdd98f8 <line:462:5, col:27> col:27 pcName 'CHAR *'
| | `-FullComment 0xe2b140 <col:57, col:96>
| |   `-ParagraphComment 0xe2b110 <col:57, col:96>
| |     `-TextComment 0xe2b0e0 <col:57, col:96> Text=" Task name                              "
| `-FieldDecl 0xdd9988 <line:463:5, col:26> col:26 uwResved 'UINT32':'unsigned int'
|   `-FullComment 0xe2b210 <col:57, col:96>
|     `-ParagraphComment 0xe2b1e0 <col:57, col:96>
|       `-TextComment 0xe2b1b0 <col:57, col:96> Text=" Reserved                               "
|-TypedefDecl 0xdd9a68 <line:456:1, line:464:3> col:3 referenced TSK_INIT_PARAM_S 'struct tagTskInitParam':'struct tagTskInitParam'
| |-ElaboratedType 0xdd9a10 'struct tagTskInitParam' sugar
| | `-RecordType 0xdd95e0 'struct tagTskInitParam'
| |   `-Record 0xdd9558 'tagTskInitParam'
| `-FullComment 0xe2b3d0 <line:451:3, line:454:70>
|   |-ParagraphComment 0xe2b2b0 <line:451:3>
|   | `-TextComment 0xe2b280 <col:3> Text=" "
|   |-VerbatimLineComment 0xe2b2d0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xe2b340 <line:452:3, col:65>
|   | `-TextComment 0xe2b310 <col:3, col:65> Text=" Define the structure of the parameters used for task creation."
|   `-ParagraphComment 0xe2b390 <line:454:3, col:70>
|     `-TextComment 0xe2b360 <col:3, col:70> Text=" Information of specified parameters passed in during task creation."
|-RecordDecl 0xdd9b60 <line:482:9, line:500:1> line:482:16 struct tagTskInfo definition
| |-FullComment 0xe2b540 <line:479:3, line:480:30>
| | |-ParagraphComment 0xe2b470 <line:479:3>
| | | `-TextComment 0xe2b440 <col:3> Text=" "
| | |-VerbatimLineComment 0xe2b490 <col:4, col:21> Text=" los_task"
| | `-ParagraphComment 0xe2b500 <line:480:3, col:30>
| |   `-TextComment 0xe2b4d0 <col:3, col:30> Text=" Task information structure."
| |-FieldDecl 0xdd9c98 <line:483:5, col:48> col:25 acName 'CHAR [32]'
| | `-FullComment 0xe2b610 <col:57, col:88>
| |   `-ParagraphComment 0xe2b5e0 <col:57, col:88>
| |     `-TextComment 0xe2b5b0 <col:57, col:88> Text=" Task entrance function         "
| |-FieldDecl 0xdd9d28 <line:484:5, col:25> col:25 uwTaskID 'UINT32':'unsigned int'
| | `-FullComment 0xe2b6e0 <col:57, col:88>
| |   `-ParagraphComment 0xe2b6b0 <col:57, col:88>
| |     `-TextComment 0xe2b680 <col:57, col:88> Text=" Task ID                        "
| |-FieldDecl 0xdddca0 <line:485:5, col:25> col:25 usTaskStatus 'UINT16':'unsigned short'
| | `-FullComment 0xe2b7b0 <col:57, col:88>
| |   `-ParagraphComment 0xe2b780 <col:57, col:88>
| |     `-TextComment 0xe2b750 <col:57, col:88> Text=" Task status                    "
| |-FieldDecl 0xdddd28 <line:486:5, col:25> col:25 usTaskPrio 'UINT16':'unsigned short'
| | `-FullComment 0xe2c8b0 <col:57, col:88>
| |   `-ParagraphComment 0xe2c880 <col:57, col:88>
| |     `-TextComment 0xe2c850 <col:57, col:88> Text=" Task priority                  "
| |-FieldDecl 0xddddc0 <main/los_compiler.h:327:23, main/los_task.h:487:26> col:26 pTaskSem 'void *'
| | `-FullComment 0xe2c980 <col:57, col:88>
| |   `-ParagraphComment 0xe2c950 <col:57, col:88>
| |     `-TextComment 0xe2c920 <col:57, col:88> Text=" Semaphore pointer              "
| |-FieldDecl 0xddde50 <main/los_compiler.h:327:23, main/los_task.h:488:26> col:26 pTaskMux 'void *'
| | `-FullComment 0xe2ca50 <col:57, col:88>
| |   `-ParagraphComment 0xe2ca20 <col:57, col:88>
| |     `-TextComment 0xe2c9f0 <col:57, col:88> Text=" Mutex pointer                  "
| |-FieldDecl 0xddded8 <line:489:5, col:25> col:25 uwSemID 'UINT32':'unsigned int'
| | `-FullComment 0xe2cb20 <col:57, col:88>
| |   `-ParagraphComment 0xe2caf0 <col:57, col:88>
| |     `-TextComment 0xe2cac0 <col:57, col:88> Text=" Sem ID                         "
| |-FieldDecl 0xdddf68 <line:490:5, col:25> col:25 uwMuxID 'UINT32':'unsigned int'
| | `-FullComment 0xe2cbf0 <col:57, col:88>
| |   `-ParagraphComment 0xe2cbc0 <col:57, col:88>
| |     `-TextComment 0xe2cb90 <col:57, col:88> Text=" Mux ID                         "
| |-FieldDecl 0xdde020 <line:491:5, col:25> col:25 uwEvent 'EVENT_CB_S':'struct tagEvent'
| | `-FullComment 0xe2ccc0 <col:57, col:88>
| |   `-ParagraphComment 0xe2cc90 <col:57, col:88>
| |     `-TextComment 0xe2cc60 <col:57, col:88> Text=" Event                          "
| |-FieldDecl 0xdde0a8 <line:492:5, col:25> col:25 uwEventMask 'UINT32':'unsigned int'
| | `-FullComment 0xe2cd90 <col:57, col:88>
| |   `-ParagraphComment 0xe2cd60 <col:57, col:88>
| |     `-TextComment 0xe2cd30 <col:57, col:88> Text=" Event mask                     "
| |-FieldDecl 0xdde138 <line:493:5, col:25> col:25 uwStackSize 'UINT32':'unsigned int'
| | `-FullComment 0xe2ce60 <col:57, col:88>
| |   `-ParagraphComment 0xe2ce30 <col:57, col:88>
| |     `-TextComment 0xe2ce00 <col:57, col:88> Text=" Task stack size                "
| |-FieldDecl 0xdde1c8 <line:494:5, col:25> col:25 uwTopOfStack 'UINT32':'unsigned int'
| | `-FullComment 0xe2cf30 <col:57, col:88>
| |   `-ParagraphComment 0xe2cf00 <col:57, col:88>
| |     `-TextComment 0xe2ced0 <col:57, col:88> Text=" Task stack top                 "
| |-FieldDecl 0xdde258 <line:495:5, col:25> col:25 uwBottomOfStack 'UINT32':'unsigned int'
| | `-FullComment 0xe2d000 <col:57, col:88>
| |   `-ParagraphComment 0xe2cfd0 <col:57, col:88>
| |     `-TextComment 0xe2cfa0 <col:57, col:88> Text=" Task stack bottom              "
| |-FieldDecl 0xdde2e8 <line:496:5, col:25> col:25 uwSP 'UINT32':'unsigned int'
| | `-FullComment 0xe2d0d0 <col:57, col:88>
| |   `-ParagraphComment 0xe2d0a0 <col:57, col:88>
| |     `-TextComment 0xe2d070 <col:57, col:88> Text=" Task SP pointer                "
| |-FieldDecl 0xdde378 <line:497:5, col:25> col:25 uwCurrUsed 'UINT32':'unsigned int'
| | `-FullComment 0xe2d1a0 <col:57, col:88>
| |   `-ParagraphComment 0xe2d170 <col:57, col:88>
| |     `-TextComment 0xe2d140 <col:57, col:88> Text=" Current task stack usage       "
| |-FieldDecl 0xdde408 <line:498:5, col:25> col:25 uwPeakUsed 'UINT32':'unsigned int'
| | `-FullComment 0xe2d270 <col:57, col:88>
| |   `-ParagraphComment 0xe2d240 <col:57, col:88>
| |     `-TextComment 0xe2d210 <col:57, col:88> Text=" Task stack usage peak          "
| `-FieldDecl 0xdde498 <line:499:5, col:25> col:25 bOvf 'BOOL':'unsigned int'
|   `-FullComment 0xe2d340 <col:57, col:114>
|     `-ParagraphComment 0xe2d310 <col:57, col:114>
|       `-TextComment 0xe2d2e0 <col:57, col:114> Text=" Flag that indicates whether a task stack overflow occurs "
|-TypedefDecl 0xdde578 <line:482:1, line:500:3> col:3 referenced TSK_INFO_S 'struct tagTskInfo':'struct tagTskInfo'
| |-ElaboratedType 0xdde520 'struct tagTskInfo' sugar
| | `-RecordType 0xdd9be0 'struct tagTskInfo'
| |   `-Record 0xdd9b60 'tagTskInfo'
| `-FullComment 0xe2d4b0 <line:479:3, line:480:30>
|   |-ParagraphComment 0xe2d3e0 <line:479:3>
|   | `-TextComment 0xe2d3b0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe2d400 <col:4, col:21> Text=" los_task"
|   `-ParagraphComment 0xe2d470 <line:480:3, col:30>
|     `-TextComment 0xe2d440 <col:3, col:30> Text=" Task information structure."
|-FunctionDecl 0xdde710 <line:540:1, col:36> col:13 LOS_Msleep 'void (UINT32)' extern
| |-ParmVarDecl 0xdde680 <col:24, col:31> col:31 mSecs 'UINT32':'unsigned int'
| `-FullComment 0xe2e0f0 <line:515:3, line:538:12>
|   |-ParagraphComment 0xe2d550 <line:515:3>
|   | `-TextComment 0xe2d520 <col:3> Text=" "
|   |-VerbatimLineComment 0xe2d570 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xe2d5e0 <line:516:3>
|   | `-TextComment 0xe2d5b0 <col:3> Text=" "
|   |-BlockCommandComment 0xe2d600 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0xe2d660 <col:10, col:33>
|   |   `-TextComment 0xe2d630 <col:10, col:33> Text=" Sleep the current task."
|   |-ParagraphComment 0xe2d6b0 <line:518:3>
|   | `-TextComment 0xe2d680 <col:3> Text=" "
|   |-BlockCommandComment 0xe2d6d0 <col:4, line:520:55> Name="par"
|   | `-ParagraphComment 0xe2d780 <line:518:8, line:520:55>
|   |   |-TextComment 0xe2d700 <line:518:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe2d720 <line:519:3, col:96> Text=" This API is used to delay the execution of the current task. The task is able to be scheduled"
|   |   `-TextComment 0xe2d740 <line:520:3, col:55> Text=" after it is delayed for a specified number of Ticks."
|   |-ParagraphComment 0xe2d7d0 <line:522:3>
|   | `-TextComment 0xe2d7a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe2d7f0 <col:4, line:531:8> Name="attention"
|   | `-ParagraphComment 0xe2dc00 <line:523:3, line:531:8>
|   |   |-TextComment 0xe2d820 <line:523:3> Text=" "
|   |   |-HTMLStartTagComment 0xe2d840 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe2d880 <line:524:3> Text=" "
|   |   |-HTMLStartTagComment 0xe2d8a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe2d8e0 <col:8, col:103> Text="The task fails to be delayed if it is being delayed during interrupt processing or it is locked."
|   |   |-HTMLEndTagComment 0xe2d900 <col:104, col:108> Name="li"
|   |   |-TextComment 0xe2d930 <line:525:3> Text=" "
|   |   |-HTMLStartTagComment 0xe2d950 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe2d990 <col:8, col:63> Text="If 0 is passed in and the task scheduling is not locked,"
|   |   |-TextComment 0xe2d9b0 <line:526:3, col:85> Text=" execute the next task in the queue of tasks with the priority of the current task."
|   |   |-TextComment 0xe2d9d0 <line:527:3, col:71> Text=" If no ready task with the priority of the current task is available,"
|   |   |-TextComment 0xe2d9f0 <line:528:3, col:85> Text=" the task scheduling will not occur, and the current task continues to be executed."
|   |   |-HTMLEndTagComment 0xe2da10 <col:86, col:90> Name="li"
|   |   |-TextComment 0xe2da40 <line:529:3> Text=" "
|   |   |-HTMLStartTagComment 0xe2da60 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe2daa0 <col:8, col:80> Text="The parameter passed in can not be equal to LOS_WAIT_FOREVER(0xFFFFFFFF)."
|   |   |-TextComment 0xe2dac0 <line:530:3, col:112> Text=" If that happens, the task will not sleep 0xFFFFFFFF milliseconds or sleep forever but sleep 0xFFFFFFFF Ticks."
|   |   |-HTMLEndTagComment 0xe2dae0 <col:113, col:117> Name="li"
|   |   |-TextComment 0xe2db10 <line:531:3> Text=" "
|   |   `-HTMLEndTagComment 0xe2db30 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe2dc50 <line:533:3>
|   | `-TextComment 0xe2dc20 <col:3> Text=" "
|   |-ParamCommandComment 0xe2dc70 <col:4, col:77> [in] implicitly Param="mSecs" ParamIndex=0
|   | `-ParagraphComment 0xe2dd00 <col:16, col:77>
|   |   `-TextComment 0xe2dcd0 <col:16, col:77> Text=" [IN] Type #UINT32 Number of MS for which the task is delayed."
|   |-ParagraphComment 0xe2dd50 <line:535:3>
|   | `-TextComment 0xe2dd20 <col:3> Text=" "
|   |-BlockCommandComment 0xe2dd70 <col:4, line:536:3> Name="retval"
|   | `-ParagraphComment 0xe2ddf0 <line:535:11, line:536:3>
|   |   |-TextComment 0xe2dda0 <line:535:11, col:15> Text=" None"
|   |   `-TextComment 0xe2ddc0 <line:536:3> Text=" "
|   |-BlockCommandComment 0xe2de10 <col:4, line:538:3> Name="par"
|   | `-ParagraphComment 0xe2dfe0 <line:536:8, line:538:3>
|   |   |-TextComment 0xe2de40 <line:536:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe2de60 <line:537:3> Text=" "
|   |   |-HTMLStartTagComment 0xe2de80 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe2dec0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe2df00 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe2df20 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe2df50 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe2df80 <line:538:3> Text=" "
|   `-BlockCommandComment 0xe2e000 <col:4, col:12> Name="see"
|     `-ParagraphComment 0xe2e060 <col:8, col:12>
|       `-TextComment 0xe2e030 <col:8, col:12> Text=" None"
|-FunctionDecl 0xdde880 <line:562:1, col:29> col:15 LOS_Start 'UINT32 (void)' extern
| `-FullComment 0xe306f0 <line:543:3, line:560:7>
|   |-ParagraphComment 0xe2e190 <line:543:3>
|   | `-TextComment 0xe2e160 <col:3> Text=" "
|   |-VerbatimLineComment 0xe2e1b0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xe2e220 <line:544:3>
|   | `-TextComment 0xe2e1f0 <col:3> Text=" "
|   |-BlockCommandComment 0xe2e240 <col:4, col:48> Name="brief"
|   | `-ParagraphComment 0xe2e2a0 <col:10, col:48>
|   |   `-TextComment 0xe2e270 <col:10, col:48> Text=" System kernel initialization function."
|   |-ParagraphComment 0xe2e2f0 <line:546:3>
|   | `-TextComment 0xe2e2c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe2e310 <col:4, line:547:37> Name="par"
|   | `-ParagraphComment 0xe2e390 <line:546:8, line:547:37>
|   |   |-TextComment 0xe2e340 <line:546:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe2e360 <line:547:3, col:37> Text=" This API is used to start liteOS ."
|   |-ParagraphComment 0xe2e3e0 <line:549:3>
|   | `-TextComment 0xe2e3b0 <col:3> Text=" "
|   |-BlockCommandComment 0xe2e400 <col:4, line:552:8> Name="attention"
|   | `-ParagraphComment 0xe2e5d0 <line:550:3, line:552:8>
|   |   |-TextComment 0xe2e430 <line:550:3> Text=" "
|   |   |-HTMLStartTagComment 0xe2e450 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe2e490 <line:551:3> Text=" "
|   |   |-HTMLStartTagComment 0xe2e4b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe2e4f0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe2e510 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe2e540 <line:552:3> Text=" "
|   |   `-HTMLEndTagComment 0xe2e560 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe2e620 <line:554:3>
|   | `-TextComment 0xe2e5f0 <col:3> Text=" "
|   |-ParamCommandComment 0xe2e640 <col:4, col:16> [in] implicitly Param=":"
|   | `-ParagraphComment 0xe2e6d0 <col:11, col:16>
|   |   `-TextComment 0xe2e6a0 <col:11, col:16> Text=" None."
|   |-ParagraphComment 0xe2e720 <line:556:3>
|   | `-TextComment 0xe2e6f0 <col:3> Text=" "
|   |-BlockCommandComment 0xe2e740 <col:4, col:75> Name="retval"
|   | `-ParagraphComment 0xe2e7a0 <col:11, col:75>
|   |   `-TextComment 0xe2e770 <col:11, col:75> Text=" #LOS_OK                                  0:LiteOS start success."
|   |-ParagraphComment 0xe2e7f0 <line:558:3>
|   | `-TextComment 0xe2e7c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe2e810 <col:4, line:560:3> Name="par"
|   | `-ParagraphComment 0xe30600 <line:558:8, line:560:3>
|   |   |-TextComment 0xe30460 <line:558:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe30480 <line:559:3> Text=" "
|   |   |-HTMLStartTagComment 0xe304a0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe304e0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe30520 <col:12, col:75> Text="los_config.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe30540 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0xe30570 <col:81, col:85> Name="ul"
|   |   `-TextComment 0xe305a0 <line:560:3> Text=" "
|   `-BlockCommandComment 0xe30620 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe30650 <<invalid sloc>>
|-FunctionDecl 0xdde9b8 <line:563:1, col:37> col:22 LOS_Reboot 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0xddebf0 <line:564:1, col:52> col:22 LOS_Panic 'void (const CHAR *, ...) __attribute__((noreturn))' extern
| `-ParmVarDecl 0xddea68 <col:32, col:44> col:44 fmt 'const CHAR *'
|-FunctionDecl 0xde0240 <line:586:1, col:34> col:15 LOS_KernelInit 'UINT32 (void)' extern
| `-FullComment 0xe310d0 <line:567:3, line:584:7>
|   |-ParagraphComment 0xe30790 <line:567:3>
|   | `-TextComment 0xe30760 <col:3> Text=" "
|   |-VerbatimLineComment 0xe307b0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xe30820 <line:568:3>
|   | `-TextComment 0xe307f0 <col:3> Text=" "
|   |-BlockCommandComment 0xe30840 <col:4, col:48> Name="brief"
|   | `-ParagraphComment 0xe308a0 <col:10, col:48>
|   |   `-TextComment 0xe30870 <col:10, col:48> Text=" System kernel initialization function."
|   |-ParagraphComment 0xe308f0 <line:570:3>
|   | `-TextComment 0xe308c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe30910 <col:4, line:571:71> Name="par"
|   | `-ParagraphComment 0xe30990 <line:570:8, line:571:71>
|   |   |-TextComment 0xe30940 <line:570:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe30960 <line:571:3, col:71> Text=" This API is used to Initialize kernel ,configure all system modules."
|   |-ParagraphComment 0xe309e0 <line:573:3>
|   | `-TextComment 0xe309b0 <col:3> Text=" "
|   |-BlockCommandComment 0xe30a00 <col:4, line:576:8> Name="attention"
|   | `-ParagraphComment 0xe30bd0 <line:574:3, line:576:8>
|   |   |-TextComment 0xe30a30 <line:574:3> Text=" "
|   |   |-HTMLStartTagComment 0xe30a50 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe30a90 <line:575:3> Text=" "
|   |   |-HTMLStartTagComment 0xe30ab0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe30af0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe30b10 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe30b40 <line:576:3> Text=" "
|   |   `-HTMLEndTagComment 0xe30b60 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe30c20 <line:578:3>
|   | `-TextComment 0xe30bf0 <col:3> Text=" "
|   |-ParamCommandComment 0xe30c40 <col:4, col:16> [in] implicitly Param=":"
|   | `-ParagraphComment 0xe30cd0 <col:11, col:16>
|   |   `-TextComment 0xe30ca0 <col:11, col:16> Text=" None."
|   |-ParagraphComment 0xe30d20 <line:580:3>
|   | `-TextComment 0xe30cf0 <col:3> Text=" "
|   |-BlockCommandComment 0xe30d40 <col:4, col:91> Name="retval"
|   | `-ParagraphComment 0xe30da0 <col:11, col:91>
|   |   `-TextComment 0xe30d70 <col:11, col:91> Text=" #LOS_OK                                  0:System kernel initialization success."
|   |-ParagraphComment 0xe30df0 <line:582:3>
|   | `-TextComment 0xe30dc0 <col:3> Text=" "
|   |-BlockCommandComment 0xe30e10 <col:4, line:584:3> Name="par"
|   | `-ParagraphComment 0xe30fe0 <line:582:8, line:584:3>
|   |   |-TextComment 0xe30e40 <line:582:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe30e60 <line:583:3> Text=" "
|   |   |-HTMLStartTagComment 0xe30e80 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe30ec0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe30f00 <col:12, col:75> Text="los_config.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe30f20 <col:76, col:80> Name="li"
|   |   |-HTMLEndTagComment 0xe30f50 <col:81, col:85> Name="ul"
|   |   `-TextComment 0xe30f80 <line:584:3> Text=" "
|   `-BlockCommandComment 0xe31000 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe31030 <<invalid sloc>>
|-FunctionDecl 0xde0518 <line:633:1, col:81> col:15 LOS_TaskCreateOnly 'UINT32 (UINT32 *, TSK_INIT_PARAM_S *)' extern
| |-ParmVarDecl 0xde0318 <col:34, col:42> col:42 taskID 'UINT32 *'
| |-ParmVarDecl 0xde0408 <col:50, col:68> col:68 taskInitParam 'TSK_INIT_PARAM_S *'
| `-FullComment 0xe32a60 <line:589:3, line:631:22>
|   |-ParagraphComment 0xe31170 <line:589:3>
|   | `-TextComment 0xe31140 <col:3> Text=" "
|   |-VerbatimLineComment 0xe31190 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe31200 <line:590:3>
|   | `-TextComment 0xe311d0 <col:3> Text=" "
|   |-BlockCommandComment 0xe31220 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0xe31280 <col:10, col:36>
|   |   `-TextComment 0xe31250 <col:10, col:36> Text=" Create a task and suspend."
|   |-ParagraphComment 0xe312d0 <line:592:3>
|   | `-TextComment 0xe312a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe312f0 <col:4, line:594:13> Name="par"
|   | `-ParagraphComment 0xe313a0 <line:592:8, line:594:13>
|   |   |-TextComment 0xe31320 <line:592:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe31340 <line:593:3, col:115> Text=" This API is used to create a task and suspend it. This task will not be added to the queue of ready tasks before"
|   |   `-TextComment 0xe31360 <line:594:3, col:13> Text=" resume it."
|   |-ParagraphComment 0xe313f0 <line:596:3>
|   | `-TextComment 0xe313c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe31410 <col:4, line:613:8> Name="attention"
|   | `-ParagraphComment 0xe31d50 <line:597:3, line:613:8>
|   |   |-TextComment 0xe31440 <line:597:3> Text=" "
|   |   |-HTMLStartTagComment 0xe31460 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe314a0 <line:598:3> Text=" "
|   |   |-HTMLStartTagComment 0xe314c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe31500 <col:8, col:119> Text="During task creation, the task control block and task stack of the task that is previously automatically deleted"
|   |   |-TextComment 0xe31520 <line:599:3, col:19> Text=" are deallocated."
|   |   |-HTMLEndTagComment 0xe31540 <col:20, col:24> Name="li"
|   |   |-TextComment 0xe31570 <line:600:3> Text=" "
|   |   |-HTMLStartTagComment 0xe31590 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe315d0 <col:8, col:62> Text="The task name is a pointer and is not allocated memory."
|   |   |-HTMLEndTagComment 0xe315f0 <col:63, col:67> Name="li"
|   |   |-TextComment 0xe31620 <line:601:3> Text=" "
|   |   |-HTMLStartTagComment 0xe31640 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe31680 <col:8, col:119> Text="If the size of the task stack of the task to be created is 0, configure #LOSCFG_BASE_CORE_TSK_DEFAULT_STACK_SIZE"
|   |   |-TextComment 0xe316a0 <line:602:3, col:117> Text=" to specify the default task stack size. The stack size should be a reasonable value, if the size is too large, may"
|   |   |-TextComment 0xe316c0 <line:603:3, col:27> Text=" cause memory exhaustion."
|   |   |-HTMLEndTagComment 0xe316e0 <col:28, col:32> Name="li"
|   |   |-TextComment 0xe31710 <line:604:3> Text=" "
|   |   |-HTMLStartTagComment 0xe31730 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe31770 <col:8, col:114> Text="The task stack size must be aligned on the boundary of 8 bytes. The size is determined by whether it is big"
|   |   |-TextComment 0xe31790 <line:605:3, col:39> Text=" enough to avoid task stack overflow."
|   |   |-HTMLEndTagComment 0xe317b0 <col:40, col:44> Name="li"
|   |   |-TextComment 0xe317e0 <line:606:3> Text=" "
|   |   |-HTMLStartTagComment 0xe31800 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe31840 <col:8, col:59> Text="Less parameter value indicates higher task priority."
|   |   |-HTMLEndTagComment 0xe31860 <col:60, col:64> Name="li"
|   |   |-TextComment 0xe31890 <line:607:3> Text=" "
|   |   |-HTMLStartTagComment 0xe318b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe318f0 <col:8, col:36> Text="The task name cannot be null."
|   |   |-HTMLEndTagComment 0xe31910 <col:37, col:41> Name="li"
|   |   |-TextComment 0xe31940 <line:608:3> Text=" "
|   |   |-HTMLStartTagComment 0xe31960 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe319a0 <col:8, col:65> Text="The pointer to the task executing function cannot be null."
|   |   |-HTMLEndTagComment 0xe319c0 <col:66, col:70> Name="li"
|   |   |-TextComment 0xe319f0 <line:609:3> Text=" "
|   |   |-HTMLStartTagComment 0xe31a10 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe31a50 <col:8, col:114> Text="The two parameters of this interface is pointer, it should be a correct value, otherwise, the system may be"
|   |   |-TextComment 0xe31a70 <line:610:3, col:12> Text=" abnormal."
|   |   |-HTMLEndTagComment 0xe31a90 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe31ac0 <line:611:3> Text=" "
|   |   |-HTMLStartTagComment 0xe31ae0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe31b20 <col:8, col:115> Text="If user mode is enabled, user should input user stack pointer and size, the size must fit the stack pointer,"
|   |   |-TextComment 0xe31b40 <line:612:3, col:47> Text=" uwStackSize remain as the kernel stack size."
|   |   |-HTMLEndTagComment 0xe31b60 <col:48, col:52> Name="li"
|   |   |-TextComment 0xe31b90 <line:613:3> Text=" "
|   |   `-HTMLEndTagComment 0xe31bb0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe31da0 <line:615:3>
|   | `-TextComment 0xe31d70 <col:3> Text=" "
|   |-ParamCommandComment 0xe31dc0 <col:4, line:616:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xe31e70 <line:615:18, line:616:3>
|   |   |-TextComment 0xe31e20 <line:615:18, col:55> Text="        [OUT] Type  #UINT32 * Task ID."
|   |   `-TextComment 0xe31e40 <line:616:3> Text=" "
|   |-ParamCommandComment 0xe31e90 <col:4, col:85> [in] implicitly Param="taskInitParam" ParamIndex=1
|   | `-ParagraphComment 0xe31f20 <col:25, col:85>
|   |   `-TextComment 0xe31ef0 <col:25, col:85> Text=" [IN]  Type  #TSK_INIT_PARAM_S * Parameter for task creation."
|   |-ParagraphComment 0xe31f70 <line:618:3>
|   | `-TextComment 0xe31f40 <col:3> Text=" "
|   |-BlockCommandComment 0xe31f90 <col:4, line:619:3> Name="retval"
|   | `-ParagraphComment 0xe32010 <line:618:11, line:619:3>
|   |   |-TextComment 0xe31fc0 <line:618:11, col:85> Text=" #LOS_ERRNO_TSK_ID_INVALID        Invalid Task ID, param puwTaskID is NULL."
|   |   `-TextComment 0xe31fe0 <line:619:3> Text=" "
|   |-BlockCommandComment 0xe32030 <col:4, line:620:3> Name="retval"
|   | `-ParagraphComment 0xe320b0 <line:619:11, line:620:3>
|   |   |-TextComment 0xe32060 <line:619:11, col:71> Text=" #LOS_ERRNO_TSK_PTR_NULL          Param pstInitParam is NULL."
|   |   `-TextComment 0xe32080 <line:620:3> Text=" "
|   |-BlockCommandComment 0xe320d0 <col:4, line:621:3> Name="retval"
|   | `-ParagraphComment 0xe32150 <line:620:11, line:621:3>
|   |   |-TextComment 0xe32100 <line:620:11, col:66> Text=" #LOS_ERRNO_TSK_NAME_EMPTY        The task name is NULL."
|   |   `-TextComment 0xe32120 <line:621:3> Text=" "
|   |-BlockCommandComment 0xe32170 <col:4, line:622:3> Name="retval"
|   | `-ParagraphComment 0xe321f0 <line:621:11, line:622:3>
|   |   |-TextComment 0xe321a0 <line:621:11, col:70> Text=" #LOS_ERRNO_TSK_ENTRY_NULL        The task entrance is NULL."
|   |   `-TextComment 0xe321c0 <line:622:3> Text=" "
|   |-BlockCommandComment 0xe32210 <col:4, line:623:3> Name="retval"
|   | `-ParagraphComment 0xe32290 <line:622:11, line:623:3>
|   |   |-TextComment 0xe32240 <line:622:11, col:68> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR       Incorrect task priority."
|   |   `-TextComment 0xe32260 <line:623:3> Text=" "
|   |-BlockCommandComment 0xe322b0 <col:4, line:624:3> Name="retval"
|   | `-ParagraphComment 0xe32330 <line:623:11, line:624:3>
|   |   |-TextComment 0xe322e0 <line:623:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_LARGE   The task stack size is too large."
|   |   `-TextComment 0xe32300 <line:624:3> Text=" "
|   |-BlockCommandComment 0xe32350 <col:4, line:625:3> Name="retval"
|   | `-ParagraphComment 0xe323d0 <line:624:11, line:625:3>
|   |   |-TextComment 0xe32380 <line:624:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_SMALL   The task stack size is too small."
|   |   `-TextComment 0xe323a0 <line:625:3> Text=" "
|   |-BlockCommandComment 0xe323f0 <col:4, line:626:3> Name="retval"
|   | `-ParagraphComment 0xe32480 <line:625:11, line:626:3>
|   |   |-TextComment 0xe32420 <line:625:11, col:84> Text=" #LOS_ERRNO_TSK_TCB_UNAVAILABLE   No free task control block is available."
|   |   `-TextComment 0xe32440 <line:626:3> Text=" "
|   |-BlockCommandComment 0xe324a0 <col:4, line:627:3> Name="retval"
|   | `-ParagraphComment 0xe32520 <line:626:11, line:627:3>
|   |   |-TextComment 0xe324d0 <line:626:11, col:82> Text=" #LOS_ERRNO_TSK_NO_MEMORY         Insufficient memory for task creation."
|   |   `-TextComment 0xe324f0 <line:627:3> Text=" "
|   |-BlockCommandComment 0xe32540 <col:4, line:628:3> Name="retval"
|   | `-ParagraphComment 0xe325c0 <line:627:11, line:628:3>
|   |   |-TextComment 0xe32570 <line:627:11, col:77> Text=" #LOS_OK                          The task is successfully created."
|   |   `-TextComment 0xe32590 <line:628:3> Text=" "
|   |-BlockCommandComment 0xe325e0 <col:4, line:631:3> Name="par"
|   | `-ParagraphComment 0xe32900 <line:628:8, line:631:3>
|   |   |-TextComment 0xe32610 <line:628:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe32630 <line:629:3> Text=" "
|   |   |-HTMLStartTagComment 0xe32650 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe32690 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe326d0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe326f0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe32720 <col:79, col:83> Name="ul"
|   |   |-TextComment 0xe32750 <line:630:3> Text=" "
|   |   |-HTMLStartTagComment 0xe32770 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe327b0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe327f0 <col:12, col:82> Text="los_config.h: the header file that contains system configuration items."
|   |   |-HTMLEndTagComment 0xe32810 <col:83, col:87> Name="li"
|   |   |-HTMLEndTagComment 0xe32840 <col:88, col:92> Name="ul"
|   |   `-TextComment 0xe32870 <line:631:3> Text=" "
|   `-BlockCommandComment 0xe32920 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xe32980 <col:8, col:22>
|       `-TextComment 0xe32950 <col:8, col:22> Text=" LOS_TaskDelete"
|-FunctionDecl 0xde0718 <line:680:1, col:77> col:15 LOS_TaskCreate 'UINT32 (UINT32 *, TSK_INIT_PARAM_S *)' extern
| |-ParmVarDecl 0xde0608 <col:30, col:38> col:38 taskID 'UINT32 *'
| |-ParmVarDecl 0xde0680 <col:46, col:64> col:64 taskInitParam 'TSK_INIT_PARAM_S *'
| `-FullComment 0xe343d0 <line:636:3, line:678:22>
|   |-ParagraphComment 0xe32b00 <line:636:3>
|   | `-TextComment 0xe32ad0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe32b20 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe32b90 <line:637:3>
|   | `-TextComment 0xe32b60 <col:3> Text=" "
|   |-BlockCommandComment 0xe32bb0 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0xe32c10 <col:10, col:24>
|   |   `-TextComment 0xe32be0 <col:10, col:24> Text=" Create a task."
|   |-ParagraphComment 0xe32c60 <line:639:3>
|   | `-TextComment 0xe32c30 <col:3> Text=" "
|   |-BlockCommandComment 0xe32c80 <col:4, line:642:65> Name="par"
|   | `-ParagraphComment 0xe32d50 <line:639:8, line:642:65>
|   |   |-TextComment 0xe32cb0 <line:639:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe32cd0 <line:640:3, col:113> Text=" This API is used to create a task. If the priority of the task created after system initialized is higher than"
|   |   |-TextComment 0xe32cf0 <line:641:3, col:83> Text=" the current task and task scheduling is not locked, it is scheduled for running."
|   |   `-TextComment 0xe32d10 <line:642:3, col:65> Text=" If not, the created task is added to the queue of ready tasks."
|   |-ParagraphComment 0xe32da0 <line:644:3>
|   | `-TextComment 0xe32d70 <col:3> Text=" "
|   |-BlockCommandComment 0xe32dc0 <col:4, line:660:8> Name="attention"
|   | `-ParagraphComment 0xe336d0 <line:645:3, line:660:8>
|   |   |-TextComment 0xe32df0 <line:645:3> Text=" "
|   |   |-HTMLStartTagComment 0xe32e10 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe32e50 <line:646:3> Text=" "
|   |   |-HTMLStartTagComment 0xe32e70 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe32eb0 <col:8, col:111> Text="During task creation, the task control block and task stack of the task that is previously automatically"
|   |   |-TextComment 0xe32ed0 <line:647:3, col:27> Text=" deleted are deallocated."
|   |   |-HTMLEndTagComment 0xe32ef0 <col:28, col:32> Name="li"
|   |   |-TextComment 0xe32f20 <line:648:3> Text=" "
|   |   |-HTMLStartTagComment 0xe32f40 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe32f80 <col:8, col:62> Text="The task name is a pointer and is not allocated memory."
|   |   |-HTMLEndTagComment 0xe32fa0 <col:63, col:67> Name="li"
|   |   |-TextComment 0xe32fd0 <line:649:3> Text=" "
|   |   |-HTMLStartTagComment 0xe32ff0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe33030 <col:8, col:119> Text="If the size of the task stack of the task to be created is 0, configure #LOSCFG_BASE_CORE_TSK_DEFAULT_STACK_SIZE"
|   |   |-TextComment 0xe33050 <line:650:3, col:42> Text=" to specify the default task stack size."
|   |   |-HTMLEndTagComment 0xe33070 <col:43, col:47> Name="li"
|   |   |-TextComment 0xe330a0 <line:651:3> Text=" "
|   |   |-HTMLStartTagComment 0xe330c0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe33100 <col:8, col:114> Text="The task stack size must be aligned on the boundary of 8 bytes. The size is determined by whether it is big"
|   |   |-TextComment 0xe33120 <line:652:3, col:39> Text=" enough to avoid task stack overflow."
|   |   |-HTMLEndTagComment 0xe33140 <col:40, col:44> Name="li"
|   |   |-TextComment 0xe33170 <line:653:3> Text=" "
|   |   |-HTMLStartTagComment 0xe33190 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe331d0 <col:8, col:59> Text="Less parameter value indicates higher task priority."
|   |   |-HTMLEndTagComment 0xe331f0 <col:60, col:64> Name="li"
|   |   |-TextComment 0xe33220 <line:654:3> Text=" "
|   |   |-HTMLStartTagComment 0xe33240 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe33280 <col:8, col:36> Text="The task name cannot be null."
|   |   |-HTMLEndTagComment 0xe332a0 <col:37, col:41> Name="li"
|   |   |-TextComment 0xe332d0 <line:655:3> Text=" "
|   |   |-HTMLStartTagComment 0xe332f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe33330 <col:8, col:65> Text="The pointer to the task executing function cannot be null."
|   |   |-HTMLEndTagComment 0xe33350 <col:66, col:70> Name="li"
|   |   |-TextComment 0xe33380 <line:656:3> Text=" "
|   |   |-HTMLStartTagComment 0xe333a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe333e0 <col:8, col:114> Text="The two parameters of this interface is pointer, it should be a correct value, otherwise, the system may be"
|   |   |-TextComment 0xe33400 <line:657:3, col:12> Text=" abnormal."
|   |   |-HTMLEndTagComment 0xe33420 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe33450 <line:658:3> Text=" "
|   |   |-HTMLStartTagComment 0xe33470 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe334b0 <col:8, col:115> Text="If user mode is enabled, user should input user stack pointer and size, the size must fit the stack pointer,"
|   |   |-TextComment 0xe334d0 <line:659:3, col:47> Text=" uwStackSize remain as the kernel stack size."
|   |   |-HTMLEndTagComment 0xe334f0 <col:48, col:52> Name="li"
|   |   |-TextComment 0xe33520 <line:660:3> Text=" "
|   |   `-HTMLEndTagComment 0xe33540 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe33720 <line:662:3>
|   | `-TextComment 0xe336f0 <col:3> Text=" "
|   |-ParamCommandComment 0xe33740 <col:4, line:663:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xe337f0 <line:662:18, line:663:3>
|   |   |-TextComment 0xe337a0 <line:662:18, col:55> Text="        [OUT] Type  #UINT32 * Task ID."
|   |   `-TextComment 0xe337c0 <line:663:3> Text=" "
|   |-ParamCommandComment 0xe33810 <col:4, col:85> [in] implicitly Param="taskInitParam" ParamIndex=1
|   | `-ParagraphComment 0xe338a0 <col:25, col:85>
|   |   `-TextComment 0xe33870 <col:25, col:85> Text=" [IN]  Type  #TSK_INIT_PARAM_S * Parameter for task creation."
|   |-ParagraphComment 0xe338f0 <line:665:3>
|   | `-TextComment 0xe338c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe33910 <col:4, line:666:3> Name="retval"
|   | `-ParagraphComment 0xe33990 <line:665:11, line:666:3>
|   |   |-TextComment 0xe33940 <line:665:11, col:85> Text=" #LOS_ERRNO_TSK_ID_INVALID        Invalid Task ID, param puwTaskID is NULL."
|   |   `-TextComment 0xe33960 <line:666:3> Text=" "
|   |-BlockCommandComment 0xe339b0 <col:4, line:667:3> Name="retval"
|   | `-ParagraphComment 0xe33a30 <line:666:11, line:667:3>
|   |   |-TextComment 0xe339e0 <line:666:11, col:71> Text=" #LOS_ERRNO_TSK_PTR_NULL          Param pstInitParam is NULL."
|   |   `-TextComment 0xe33a00 <line:667:3> Text=" "
|   |-BlockCommandComment 0xe33a50 <col:4, line:668:3> Name="retval"
|   | `-ParagraphComment 0xe33ad0 <line:667:11, line:668:3>
|   |   |-TextComment 0xe33a80 <line:667:11, col:66> Text=" #LOS_ERRNO_TSK_NAME_EMPTY        The task name is NULL."
|   |   `-TextComment 0xe33aa0 <line:668:3> Text=" "
|   |-BlockCommandComment 0xe33af0 <col:4, line:669:3> Name="retval"
|   | `-ParagraphComment 0xe33b70 <line:668:11, line:669:3>
|   |   |-TextComment 0xe33b20 <line:668:11, col:70> Text=" #LOS_ERRNO_TSK_ENTRY_NULL        The task entrance is NULL."
|   |   `-TextComment 0xe33b40 <line:669:3> Text=" "
|   |-BlockCommandComment 0xe33b90 <col:4, line:670:3> Name="retval"
|   | `-ParagraphComment 0xe33c10 <line:669:11, line:670:3>
|   |   |-TextComment 0xe33bc0 <line:669:11, col:68> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR       Incorrect task priority."
|   |   `-TextComment 0xe33be0 <line:670:3> Text=" "
|   |-BlockCommandComment 0xe33c30 <col:4, line:671:3> Name="retval"
|   | `-ParagraphComment 0xe33cb0 <line:670:11, line:671:3>
|   |   |-TextComment 0xe33c60 <line:670:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_LARGE   The task stack size is too large."
|   |   `-TextComment 0xe33c80 <line:671:3> Text=" "
|   |-BlockCommandComment 0xe33cd0 <col:4, line:672:3> Name="retval"
|   | `-ParagraphComment 0xe33d50 <line:671:11, line:672:3>
|   |   |-TextComment 0xe33d00 <line:671:11, col:77> Text=" #LOS_ERRNO_TSK_STKSZ_TOO_SMALL   The task stack size is too small."
|   |   `-TextComment 0xe33d20 <line:672:3> Text=" "
|   |-BlockCommandComment 0xe33d70 <col:4, line:673:3> Name="retval"
|   | `-ParagraphComment 0xe33df0 <line:672:11, line:673:3>
|   |   |-TextComment 0xe33da0 <line:672:11, col:84> Text=" #LOS_ERRNO_TSK_TCB_UNAVAILABLE   No free task control block is available."
|   |   `-TextComment 0xe33dc0 <line:673:3> Text=" "
|   |-BlockCommandComment 0xe33e10 <col:4, line:674:3> Name="retval"
|   | `-ParagraphComment 0xe33e90 <line:673:11, line:674:3>
|   |   |-TextComment 0xe33e40 <line:673:11, col:82> Text=" #LOS_ERRNO_TSK_NO_MEMORY         Insufficient memory for task creation."
|   |   `-TextComment 0xe33e60 <line:674:3> Text=" "
|   |-BlockCommandComment 0xe33eb0 <col:4, line:675:3> Name="retval"
|   | `-ParagraphComment 0xe33f30 <line:674:11, line:675:3>
|   |   |-TextComment 0xe33ee0 <line:674:11, col:77> Text=" #LOS_OK                          The task is successfully created."
|   |   `-TextComment 0xe33f00 <line:675:3> Text=" "
|   |-BlockCommandComment 0xe33f50 <col:4, line:678:3> Name="par"
|   | `-ParagraphComment 0xe34270 <line:675:8, line:678:3>
|   |   |-TextComment 0xe33f80 <line:675:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe33fa0 <line:676:3> Text=" "
|   |   |-HTMLStartTagComment 0xe33fc0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe34000 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe34040 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe34060 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe34090 <col:79, col:83> Name="ul"
|   |   |-TextComment 0xe340c0 <line:677:3> Text=" "
|   |   |-HTMLStartTagComment 0xe340e0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe34120 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe34160 <col:12, col:82> Text="los_config.h: the header file that contains system configuration items."
|   |   |-HTMLEndTagComment 0xe34180 <col:83, col:87> Name="li"
|   |   |-HTMLEndTagComment 0xe341b0 <col:88, col:92> Name="ul"
|   |   `-TextComment 0xe341e0 <line:678:3> Text=" "
|   `-BlockCommandComment 0xe34290 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xe342f0 <col:8, col:22>
|       `-TextComment 0xe342c0 <col:8, col:22> Text=" LOS_TaskDelete"
|-FunctionDecl 0xde0898 <line:706:1, col:43> col:15 LOS_TaskResume 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xde0808 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0xe350a0 <line:683:3, line:704:23>
|   |-ParagraphComment 0xe34480 <line:683:3>
|   | `-TextComment 0xe34440 <col:3> Text=" "
|   |-VerbatimLineComment 0xe344a0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe34510 <line:684:3>
|   | `-TextComment 0xe344e0 <col:3> Text=" "
|   |-BlockCommandComment 0xe34530 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0xe34590 <col:10, col:24>
|   |   `-TextComment 0xe34560 <col:10, col:24> Text=" Resume a task."
|   |-ParagraphComment 0xe345e0 <line:686:3>
|   | `-TextComment 0xe345b0 <col:3> Text=" "
|   |-BlockCommandComment 0xe34600 <col:4, line:687:47> Name="par"
|   | `-ParagraphComment 0xe34680 <line:686:8, line:687:47>
|   |   |-TextComment 0xe34630 <line:686:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe34650 <line:687:3, col:47> Text=" This API is used to resume a suspended task."
|   |-ParagraphComment 0xe346d0 <line:689:3>
|   | `-TextComment 0xe346a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe346f0 <col:4, line:694:8> Name="attention"
|   | `-ParagraphComment 0xe349b0 <line:690:3, line:694:8>
|   |   |-TextComment 0xe34720 <line:690:3> Text=" "
|   |   |-HTMLStartTagComment 0xe34740 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe34780 <line:691:3> Text=" "
|   |   |-HTMLStartTagComment 0xe347a0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe347e0 <col:8, col:104> Text="If the task is delayed or blocked, resume the task without adding it to the queue of ready tasks."
|   |   |-HTMLEndTagComment 0xe34800 <col:105, col:109> Name="li"
|   |   |-TextComment 0xe34830 <line:692:3> Text=" "
|   |   |-HTMLStartTagComment 0xe34850 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe34890 <col:8, col:119> Text="If the priority of the task resumed after system initialized is higher than the current task and task scheduling"
|   |   |-TextComment 0xe348b0 <line:693:3, col:46> Text=" is not locked, it is scheduled for running."
|   |   |-HTMLEndTagComment 0xe348d0 <col:47, col:51> Name="li"
|   |   |-TextComment 0xe34900 <line:694:3> Text=" "
|   |   `-HTMLEndTagComment 0xe34920 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe34a00 <line:696:3>
|   | `-TextComment 0xe349d0 <col:3> Text=" "
|   |-ParamCommandComment 0xe34a20 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xe34ab0 <col:18, col:94>
|   |   `-TextComment 0xe34a80 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0xe34b00 <line:698:3>
|   | `-TextComment 0xe34ad0 <col:3> Text=" "
|   |-BlockCommandComment 0xe34b20 <col:4, line:699:3> Name="retval"
|   | `-ParagraphComment 0xe34ba0 <line:698:11, line:699:3>
|   |   |-TextComment 0xe34b50 <line:698:11, col:59> Text=" #LOS_ERRNO_TSK_ID_INVALID        Invalid Task ID"
|   |   `-TextComment 0xe34b70 <line:699:3> Text=" "
|   |-BlockCommandComment 0xe34bc0 <col:4, line:700:3> Name="retval"
|   | `-ParagraphComment 0xe34c40 <line:699:11, line:700:3>
|   |   |-TextComment 0xe34bf0 <line:699:11, col:68> Text=" #LOS_ERRNO_TSK_NOT_CREATED       The task is not created."
|   |   `-TextComment 0xe34c10 <line:700:3> Text=" "
|   |-BlockCommandComment 0xe34c60 <col:4, line:701:3> Name="retval"
|   | `-ParagraphComment 0xe34ce0 <line:700:11, line:701:3>
|   |   |-TextComment 0xe34c90 <line:700:11, col:70> Text=" #LOS_ERRNO_TSK_NOT_SUSPENDED     The task is not suspended."
|   |   `-TextComment 0xe34cb0 <line:701:3> Text=" "
|   |-BlockCommandComment 0xe34d00 <col:4, line:702:3> Name="retval"
|   | `-ParagraphComment 0xe34d80 <line:701:11, line:702:3>
|   |   |-TextComment 0xe34d30 <line:701:11, col:77> Text=" #LOS_OK                          The task is successfully resumed."
|   |   `-TextComment 0xe34d50 <line:702:3> Text=" "
|   |-BlockCommandComment 0xe34da0 <col:4, line:704:3> Name="par"
|   | `-ParagraphComment 0xe34f70 <line:702:8, line:704:3>
|   |   |-TextComment 0xe34dd0 <line:702:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe34df0 <line:703:3> Text=" "
|   |   |-HTMLStartTagComment 0xe34e10 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe34e50 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe34e90 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe34eb0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe34ee0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe34f10 <line:704:3> Text=" "
|   `-BlockCommandComment 0xe34f90 <col:4, col:23> Name="see"
|     `-ParagraphComment 0xe34ff0 <col:8, col:23>
|       `-TextComment 0xe34fc0 <col:8, col:23> Text=" LOS_TaskSuspend"
|-FunctionDecl 0xde0a08 <line:735:1, col:44> col:15 LOS_TaskSuspend 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xde0978 <col:31, col:38> col:38 taskID 'UINT32':'unsigned int'
| `-FullComment 0xe35f60 <line:709:3, line:733:22>
|   |-ParagraphComment 0xe35140 <line:709:3>
|   | `-TextComment 0xe35110 <col:3> Text=" "
|   |-VerbatimLineComment 0xe35160 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe351d0 <line:710:3>
|   | `-TextComment 0xe351a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe351f0 <col:4, col:25> Name="brief"
|   | `-ParagraphComment 0xe35250 <col:10, col:25>
|   |   `-TextComment 0xe35220 <col:10, col:25> Text=" Suspend a task."
|   |-ParagraphComment 0xe352a0 <line:712:3>
|   | `-TextComment 0xe35270 <col:3> Text=" "
|   |-BlockCommandComment 0xe352c0 <col:4, line:713:108> Name="par"
|   | `-ParagraphComment 0xe35340 <line:712:8, line:713:108>
|   |   |-TextComment 0xe352f0 <line:712:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe35310 <line:713:3, col:108> Text=" This API is used to suspend a specified task, and the task will be removed from the queue of ready tasks."
|   |-ParagraphComment 0xe35390 <line:715:3>
|   | `-TextComment 0xe35360 <col:3> Text=" "
|   |-BlockCommandComment 0xe353b0 <col:4, line:719:8> Name="attention"
|   | `-ParagraphComment 0xe35650 <line:716:3, line:719:8>
|   |   |-TextComment 0xe353e0 <line:716:3> Text=" "
|   |   |-HTMLStartTagComment 0xe35400 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe35440 <line:717:3> Text=" "
|   |   |-HTMLStartTagComment 0xe35460 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe354a0 <col:8, col:63> Text="The task that is running and locked cannot be suspended."
|   |   |-HTMLEndTagComment 0xe354c0 <col:64, col:68> Name="li"
|   |   |-TextComment 0xe354f0 <line:718:3> Text=" "
|   |   |-HTMLStartTagComment 0xe35510 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe35550 <col:8, col:56> Text="The idle task and swtmr task cannot be suspended."
|   |   |-HTMLEndTagComment 0xe35570 <col:57, col:61> Name="li"
|   |   |-TextComment 0xe355a0 <line:719:3> Text=" "
|   |   `-HTMLEndTagComment 0xe355c0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe356a0 <line:721:3>
|   | `-TextComment 0xe35670 <col:3> Text=" "
|   |-ParamCommandComment 0xe356c0 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xe35750 <col:18, col:94>
|   |   `-TextComment 0xe35720 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0xe357a0 <line:723:3>
|   | `-TextComment 0xe35770 <col:3> Text=" "
|   |-BlockCommandComment 0xe357c0 <col:4, line:724:3> Name="retval"
|   | `-ParagraphComment 0xe35840 <line:723:11, line:724:3>
|   |   |-TextComment 0xe357f0 <line:723:11, col:110> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE                  Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0xe35810 <line:724:3> Text=" "
|   |-BlockCommandComment 0xe35860 <col:4, line:725:3> Name="retval"
|   | `-ParagraphComment 0xe358e0 <line:724:11, line:725:3>
|   |   |-TextComment 0xe35890 <line:724:11, col:111> Text=" #LOS_ERRNO_TSK_SUSPEND_SWTMR_NOT_ALLOWED     Check the task ID and do not operate on the swtmr task."
|   |   `-TextComment 0xe358b0 <line:725:3> Text=" "
|   |-BlockCommandComment 0xe35900 <col:4, line:726:3> Name="retval"
|   | `-ParagraphComment 0xe35980 <line:725:11, line:726:3>
|   |   |-TextComment 0xe35930 <line:725:11, col:71> Text=" #LOS_ERRNO_TSK_ID_INVALID                    Invalid Task ID"
|   |   `-TextComment 0xe35950 <line:726:3> Text=" "
|   |-BlockCommandComment 0xe359a0 <col:4, line:727:3> Name="retval"
|   | `-ParagraphComment 0xe35a20 <line:726:11, line:727:3>
|   |   |-TextComment 0xe359d0 <line:726:11, col:80> Text=" #LOS_ERRNO_TSK_NOT_CREATED                   The task is not created."
|   |   `-TextComment 0xe359f0 <line:727:3> Text=" "
|   |-BlockCommandComment 0xe35a40 <col:4, line:728:3> Name="retval"
|   | `-ParagraphComment 0xe35ac0 <line:727:11, line:728:3>
|   |   |-TextComment 0xe35a70 <line:727:11, col:86> Text=" #LOS_ERRNO_TSK_ALREADY_SUSPENDED             The task is already suspended."
|   |   `-TextComment 0xe35a90 <line:728:3> Text=" "
|   |-BlockCommandComment 0xe35ae0 <col:4, line:730:3> Name="retval"
|   | `-ParagraphComment 0xe35b90 <line:728:11, line:730:3>
|   |   |-TextComment 0xe35b10 <line:728:11, col:116> Text=" #LOS_ERRNO_TSK_SUSPEND_LOCKED                The task being suspended is current task and task scheduling"
|   |   |-TextComment 0xe35b30 <line:729:3, col:66> Text="                                                      is locked."
|   |   `-TextComment 0xe35b50 <line:730:3> Text=" "
|   |-BlockCommandComment 0xe35bb0 <col:4, line:731:3> Name="retval"
|   | `-ParagraphComment 0xe35c30 <line:730:11, line:731:3>
|   |   |-TextComment 0xe35be0 <line:730:11, col:91> Text=" #LOS_OK                                      The task is successfully suspended."
|   |   `-TextComment 0xe35c00 <line:731:3> Text=" "
|   |-BlockCommandComment 0xe35c50 <col:4, line:733:3> Name="par"
|   | `-ParagraphComment 0xe35e20 <line:731:8, line:733:3>
|   |   |-TextComment 0xe35c80 <line:731:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe35ca0 <line:732:3> Text=" "
|   |   |-HTMLStartTagComment 0xe35cc0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe35d00 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe35d40 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe35d60 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe35d90 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe35dc0 <line:733:3> Text=" "
|   `-BlockCommandComment 0xe35e40 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xe35ea0 <col:8, col:22>
|       `-TextComment 0xe35e70 <col:8, col:22> Text=" LOS_TaskResume"
|-FunctionDecl 0xde0b78 <line:763:1, col:43> col:15 LOS_TaskDelete 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xde0ae8 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0xe36da0 <line:738:3, line:761:43>
|   |-ParagraphComment 0xe36000 <line:738:3>
|   | `-TextComment 0xe35fd0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe36020 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe36090 <line:739:3>
|   | `-TextComment 0xe36060 <col:3> Text=" "
|   |-BlockCommandComment 0xe360b0 <col:4, col:24> Name="brief"
|   | `-ParagraphComment 0xe36110 <col:10, col:24>
|   |   `-TextComment 0xe360e0 <col:10, col:24> Text=" Delete a task."
|   |-ParagraphComment 0xe36160 <line:741:3>
|   | `-TextComment 0xe36130 <col:3> Text=" "
|   |-BlockCommandComment 0xe36180 <col:4, line:742:115> Name="par"
|   | `-ParagraphComment 0xe36200 <line:741:8, line:742:115>
|   |   |-TextComment 0xe361b0 <line:741:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe361d0 <line:742:3, col:115> Text=" This API is used to delete a specified task and release the resources for its task stack and task control block."
|   |-ParagraphComment 0xe36250 <line:744:3>
|   | `-TextComment 0xe36220 <col:3> Text=" "
|   |-BlockCommandComment 0xe36270 <col:4, line:750:8> Name="attention"
|   | `-ParagraphComment 0xe36610 <line:745:3, line:750:8>
|   |   |-TextComment 0xe362a0 <line:745:3> Text=" "
|   |   |-HTMLStartTagComment 0xe362c0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe36300 <line:746:3> Text=" "
|   |   |-HTMLStartTagComment 0xe36320 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe36360 <col:8, col:54> Text="The idle task and swtmr task cannot be deleted."
|   |   |-HTMLEndTagComment 0xe36380 <col:55, col:59> Name="li"
|   |   |-TextComment 0xe363b0 <line:747:3> Text=" "
|   |   |-HTMLStartTagComment 0xe363d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe36410 <col:8, col:59> Text="If delete current task maybe cause unexpected error."
|   |   |-HTMLEndTagComment 0xe36430 <col:60, col:64> Name="li"
|   |   |-TextComment 0xe36460 <line:748:3> Text=" "
|   |   |-HTMLStartTagComment 0xe36490 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe364d0 <col:8, col:110> Text="If a task get a mutex is deleted or automatically deleted before release this mutex, other tasks pended"
|   |   |-TextComment 0xe364f0 <line:749:3, col:39> Text=" this mutex maybe never be shchduled."
|   |   |-HTMLEndTagComment 0xe36510 <col:40, col:44> Name="li"
|   |   |-TextComment 0xe36540 <line:750:3> Text=" "
|   |   `-HTMLEndTagComment 0xe36560 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe36660 <line:752:3>
|   | `-TextComment 0xe36630 <col:3> Text=" "
|   |-ParamCommandComment 0xe36680 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xe36710 <col:18, col:94>
|   |   `-TextComment 0xe366e0 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0xe36760 <line:754:3>
|   | `-TextComment 0xe36730 <col:3> Text=" "
|   |-BlockCommandComment 0xe36780 <col:4, line:755:3> Name="retval"
|   | `-ParagraphComment 0xe36800 <line:754:11, line:755:3>
|   |   |-TextComment 0xe367b0 <line:754:11, col:110> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE                  Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0xe367d0 <line:755:3> Text=" "
|   |-BlockCommandComment 0xe36820 <col:4, line:756:3> Name="retval"
|   | `-ParagraphComment 0xe368a0 <line:755:11, line:756:3>
|   |   |-TextComment 0xe36850 <line:755:11, col:111> Text=" #LOS_ERRNO_TSK_SUSPEND_SWTMR_NOT_ALLOWED     Check the task ID and do not operate on the swtmr task."
|   |   `-TextComment 0xe36870 <line:756:3> Text=" "
|   |-BlockCommandComment 0xe368c0 <col:4, line:757:3> Name="retval"
|   | `-ParagraphComment 0xe36940 <line:756:11, line:757:3>
|   |   |-TextComment 0xe368f0 <line:756:11, col:71> Text=" #LOS_ERRNO_TSK_ID_INVALID                    Invalid Task ID"
|   |   `-TextComment 0xe36910 <line:757:3> Text=" "
|   |-BlockCommandComment 0xe36960 <col:4, line:758:3> Name="retval"
|   | `-ParagraphComment 0xe369e0 <line:757:11, line:758:3>
|   |   |-TextComment 0xe36990 <line:757:11, col:80> Text=" #LOS_ERRNO_TSK_NOT_CREATED                   The task is not created."
|   |   `-TextComment 0xe369b0 <line:758:3> Text=" "
|   |-BlockCommandComment 0xe36a00 <col:4, line:759:3> Name="retval"
|   | `-ParagraphComment 0xe36a80 <line:758:11, line:759:3>
|   |   |-TextComment 0xe36a30 <line:758:11, col:89> Text=" #LOS_OK                                      The task is successfully deleted."
|   |   `-TextComment 0xe36a50 <line:759:3> Text=" "
|   |-BlockCommandComment 0xe36aa0 <col:4, line:761:3> Name="par"
|   | `-ParagraphComment 0xe36c70 <line:759:8, line:761:3>
|   |   |-TextComment 0xe36ad0 <line:759:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe36af0 <line:760:3> Text=" "
|   |   |-HTMLStartTagComment 0xe36b10 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe36b50 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe36b90 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe36bb0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe36be0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe36c10 <line:761:3> Text=" "
|   `-BlockCommandComment 0xe36c90 <col:4, col:43> Name="see"
|     `-ParagraphComment 0xe36cf0 <col:8, col:43>
|       `-TextComment 0xe36cc0 <col:8, col:43> Text=" LOS_TaskCreate | LOS_TaskCreateOnly"
|-FunctionDecl 0xde0ce8 <line:794:1, col:40> col:15 LOS_TaskDelay 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xde0c58 <col:29, col:36> col:36 tick 'UINT32':'unsigned int'
| `-FullComment 0xe37c20 <line:766:3, line:792:7>
|   |-ParagraphComment 0xe36e40 <line:766:3>
|   | `-TextComment 0xe36e10 <col:3> Text=" "
|   |-VerbatimLineComment 0xe36e60 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe36ed0 <line:767:3>
|   | `-TextComment 0xe36ea0 <col:3> Text=" "
|   |-BlockCommandComment 0xe36ef0 <col:4, col:23> Name="brief"
|   | `-ParagraphComment 0xe36f50 <col:10, col:23>
|   |   `-TextComment 0xe36f20 <col:10, col:23> Text=" Delay a task."
|   |-ParagraphComment 0xe36fa0 <line:769:3>
|   | `-TextComment 0xe36f70 <col:3> Text=" "
|   |-BlockCommandComment 0xe36fc0 <col:4, line:771:35> Name="par"
|   | `-ParagraphComment 0xe37070 <line:769:8, line:771:35>
|   |   |-TextComment 0xe36ff0 <line:769:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe37010 <line:770:3, col:116> Text=" This API is used to delay the execution of the current task. The task is able to be scheduled after it is delayed"
|   |   `-TextComment 0xe37030 <line:771:3, col:35> Text=" for a specified number of Ticks."
|   |-ParagraphComment 0xe370c0 <line:773:3>
|   | `-TextComment 0xe37090 <col:3> Text=" "
|   |-BlockCommandComment 0xe370e0 <col:4, line:781:8> Name="attention"
|   | `-ParagraphComment 0xe374c0 <line:774:3, line:781:8>
|   |   |-TextComment 0xe37110 <line:774:3> Text=" "
|   |   |-HTMLStartTagComment 0xe37130 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe37170 <line:775:3> Text=" "
|   |   |-HTMLStartTagComment 0xe37190 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe371d0 <col:8, col:103> Text="The task fails to be delayed if it is being delayed during interrupt processing or it is locked."
|   |   |-HTMLEndTagComment 0xe371f0 <col:104, col:108> Name="li"
|   |   |-TextComment 0xe37220 <line:776:3> Text=" "
|   |   |-HTMLStartTagComment 0xe37240 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe37280 <col:8, col:112> Text="If 0 is passed in and the task scheduling is not locked, execute the next task in the queue of tasks with"
|   |   |-TextComment 0xe372a0 <line:777:3, col:41> Text=" the same priority of the current task."
|   |   |-TextComment 0xe372c0 <line:778:3, col:115> Text=" If no ready task with the priority of the current task is available, the task scheduling will not occur, and the"
|   |   |-TextComment 0xe372e0 <line:779:3, col:41> Text=" current task continues to be executed."
|   |   |-HTMLEndTagComment 0xe37300 <col:42, col:46> Name="li"
|   |   |-TextComment 0xe37330 <line:780:3> Text=" "
|   |   |-HTMLStartTagComment 0xe37350 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe37390 <col:8, col:68> Text="Using the interface before system initialized is not allowed."
|   |   |-HTMLEndTagComment 0xe373b0 <col:69, col:73> Name="li"
|   |   |-TextComment 0xe373e0 <line:781:3> Text=" "
|   |   `-HTMLEndTagComment 0xe37400 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe37510 <line:783:3>
|   | `-TextComment 0xe374e0 <col:3> Text=" "
|   |-ParamCommandComment 0xe37530 <col:4, col:80> [in] implicitly Param="tick" ParamIndex=0
|   | `-ParagraphComment 0xe375c0 <col:16, col:80>
|   |   `-TextComment 0xe37590 <col:16, col:80> Text=" [IN] Type #UINT32 Number of Ticks for which the task is delayed."
|   |-ParagraphComment 0xe37610 <line:785:3>
|   | `-TextComment 0xe375e0 <col:3> Text=" "
|   |-BlockCommandComment 0xe37630 <col:4, line:786:3> Name="retval"
|   | `-ParagraphComment 0xe376b0 <line:785:11, line:786:3>
|   |   |-TextComment 0xe37660 <line:785:11, col:94> Text=" #LOS_ERRNO_TSK_DELAY_IN_INT              The task delay occurs during an interrupt."
|   |   `-TextComment 0xe37680 <line:786:3> Text=" "
|   |-BlockCommandComment 0xe376d0 <col:4, line:787:3> Name="retval"
|   | `-ParagraphComment 0xe37750 <line:786:11, line:787:3>
|   |   |-TextComment 0xe37700 <line:786:11, col:109> Text=" #LOS_ERRNO_TSK_DELAY_IN_LOCK             The task delay occurs when the task scheduling is locked."
|   |   `-TextComment 0xe37720 <line:787:3> Text=" "
|   |-BlockCommandComment 0xe37770 <col:4, line:788:3> Name="retval"
|   | `-ParagraphComment 0xe377f0 <line:787:11, line:788:3>
|   |   |-TextComment 0xe377a0 <line:787:11, col:67> Text=" #LOS_ERRNO_TSK_ID_INVALID                Invalid Task ID"
|   |   `-TextComment 0xe377c0 <line:788:3> Text=" "
|   |-BlockCommandComment 0xe37810 <col:4, line:789:3> Name="retval"
|   | `-ParagraphComment 0xe37890 <line:788:11, line:789:3>
|   |   |-TextComment 0xe37840 <line:788:11, col:112> Text=" #LOS_ERRNO_TSK_YIELD_NOT_ENOUGH_TASK     No tasks with the same priority is available for scheduling."
|   |   `-TextComment 0xe37860 <line:789:3> Text=" "
|   |-BlockCommandComment 0xe378b0 <col:4, line:790:3> Name="retval"
|   | `-ParagraphComment 0xe37930 <line:789:11, line:790:3>
|   |   |-TextComment 0xe378e0 <line:789:11, col:85> Text=" #LOS_OK                                  The task is successfully delayed."
|   |   `-TextComment 0xe37900 <line:790:3> Text=" "
|   |-BlockCommandComment 0xe37950 <col:4, line:792:3> Name="par"
|   | `-ParagraphComment 0xe37b20 <line:790:8, line:792:3>
|   |   |-TextComment 0xe37980 <line:790:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe379a0 <line:791:3> Text=" "
|   |   |-HTMLStartTagComment 0xe379c0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe37a00 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe37a40 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe37a60 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe37a90 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe37ac0 <line:792:3> Text=" "
|   `-BlockCommandComment 0xe37b40 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe37b70 <<invalid sloc>>
|-FunctionDecl 0xde0e50 <line:817:1, col:30> col:13 LOS_TaskLock 'void (void)' extern
| `-FullComment 0xe386d0 <line:797:3, line:815:22>
|   |-ParagraphComment 0xe37cc0 <line:797:3>
|   | `-TextComment 0xe37c90 <col:3> Text=" "
|   |-VerbatimLineComment 0xe37ce0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe37d50 <line:798:3>
|   | `-TextComment 0xe37d20 <col:3> Text=" "
|   |-BlockCommandComment 0xe37d70 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0xe37dd0 <col:10, col:35>
|   |   `-TextComment 0xe37da0 <col:10, col:35> Text=" Lock the task scheduling."
|   |-ParagraphComment 0xe37e20 <line:800:3>
|   | `-TextComment 0xe37df0 <col:3> Text=" "
|   |-BlockCommandComment 0xe37e40 <col:4, line:801:112> Name="par"
|   | `-ParagraphComment 0xe37ec0 <line:800:8, line:801:112>
|   |   |-TextComment 0xe37e70 <line:800:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe37e90 <line:801:3, col:112> Text=" This API is used to lock the task scheduling. Task switching will not occur if the task scheduling is locked."
|   |-ParagraphComment 0xe37f10 <line:803:3>
|   | `-TextComment 0xe37ee0 <col:3> Text=" "
|   |-BlockCommandComment 0xe37f30 <col:4, line:808:8> Name="attention"
|   | `-ParagraphComment 0xe381f0 <line:804:3, line:808:8>
|   |   |-TextComment 0xe37f60 <line:804:3> Text=" "
|   |   |-HTMLStartTagComment 0xe37f80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe37fc0 <line:805:3> Text=" "
|   |   |-HTMLStartTagComment 0xe37fe0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe38020 <col:8, col:113> Text="If the task scheduling is locked, but interrupts are not disabled, tasks are still able to be interrupted."
|   |   |-HTMLEndTagComment 0xe38040 <col:114, col:118> Name="li"
|   |   |-TextComment 0xe38070 <line:806:3> Text=" "
|   |   |-HTMLStartTagComment 0xe38090 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe380d0 <col:8, col:117> Text="One is added to the number of task scheduling locks if this API is called. The number of locks is decreased by"
|   |   |-TextComment 0xe380f0 <line:807:3, col:107> Text=" one if the task scheduling is unlocked. Therefore, this API should be used together with LOS_TaskUnlock."
|   |   |-HTMLEndTagComment 0xe38110 <col:108, col:112> Name="li"
|   |   |-TextComment 0xe38140 <line:808:3> Text=" "
|   |   `-HTMLEndTagComment 0xe38160 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe38240 <line:810:3>
|   | `-TextComment 0xe38210 <col:3> Text=" "
|   |-ParamCommandComment 0xe38260 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xe382c0 <<invalid sloc>>
|   |-ParagraphComment 0xe38310 <line:812:3>
|   | `-TextComment 0xe382e0 <col:3> Text=" "
|   |-BlockCommandComment 0xe38330 <col:4, line:813:3> Name="retval"
|   | `-ParagraphComment 0xe383b0 <line:812:11, line:813:3>
|   |   |-TextComment 0xe38360 <line:812:11, col:16> Text=" None."
|   |   `-TextComment 0xe38380 <line:813:3> Text=" "
|   |-BlockCommandComment 0xe383d0 <col:4, line:815:3> Name="par"
|   | `-ParagraphComment 0xe385c0 <line:813:8, line:815:3>
|   |   |-TextComment 0xe38400 <line:813:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe38420 <line:814:3> Text=" "
|   |   |-HTMLStartTagComment 0xe38440 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe384a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe384e0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe38500 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe38530 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe38560 <line:815:3> Text=" "
|   `-BlockCommandComment 0xe385e0 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xe38640 <col:8, col:22>
|       `-TextComment 0xe38610 <col:8, col:22> Text=" LOS_TaskUnlock"
|-FunctionDecl 0xde0fb0 <line:840:1, col:32> col:13 LOS_TaskUnlock 'void (void)' extern
| `-FullComment 0xe390c0 <line:820:3, line:838:20>
|   |-ParagraphComment 0xe38770 <line:820:3>
|   | `-TextComment 0xe38740 <col:3> Text=" "
|   |-VerbatimLineComment 0xe38790 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe38800 <line:821:3>
|   | `-TextComment 0xe387d0 <col:3> Text=" "
|   |-BlockCommandComment 0xe38820 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0xe38880 <col:10, col:37>
|   |   `-TextComment 0xe38850 <col:10, col:37> Text=" Unlock the task scheduling."
|   |-ParagraphComment 0xe388d0 <line:823:3>
|   | `-TextComment 0xe388a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe388f0 <col:4, line:825:119> Name="par"
|   | `-ParagraphComment 0xe389a0 <line:823:8, line:825:119>
|   |   |-TextComment 0xe38920 <line:823:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe38940 <line:824:3, col:114> Text=" This API is used to unlock the task scheduling. Calling this API will decrease the number of task locks by one."
|   |   `-TextComment 0xe38960 <line:825:3, col:119> Text=" If a task is locked more than once, the task scheduling will be unlocked only when the number of locks becomes zero."
|   |-ParagraphComment 0xe389f0 <line:827:3>
|   | `-TextComment 0xe389c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe38a10 <col:4, line:831:8> Name="attention"
|   | `-ParagraphComment 0xe38c00 <line:828:3, line:831:8>
|   |   |-TextComment 0xe38a40 <line:828:3> Text=" "
|   |   |-HTMLStartTagComment 0xe38a60 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe38aa0 <line:829:3> Text=" "
|   |   |-HTMLStartTagComment 0xe38ac0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe38b00 <col:8, col:115> Text="The number of locks is decreased by one if this API is called. One is added to the number of task scheduling"
|   |   |-TextComment 0xe38b20 <line:830:3, col:105> Text=" locks if the task scheduling is locked. Therefore, this API should be used together with LOS_TaskLock."
|   |   |-HTMLEndTagComment 0xe38b40 <col:106, col:110> Name="li"
|   |   |-TextComment 0xe38b70 <line:831:3> Text=" "
|   |   `-HTMLEndTagComment 0xe38b90 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe38c50 <line:833:3>
|   | `-TextComment 0xe38c20 <col:3> Text=" "
|   |-ParamCommandComment 0xe38c70 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xe38cd0 <<invalid sloc>>
|   |-ParagraphComment 0xe38d20 <line:835:3>
|   | `-TextComment 0xe38cf0 <col:3> Text=" "
|   |-BlockCommandComment 0xe38d40 <col:4, line:836:3> Name="retval"
|   | `-ParagraphComment 0xe38dc0 <line:835:11, line:836:3>
|   |   |-TextComment 0xe38d70 <line:835:11, col:16> Text=" None."
|   |   `-TextComment 0xe38d90 <line:836:3> Text=" "
|   |-BlockCommandComment 0xe38de0 <col:4, line:838:3> Name="par"
|   | `-ParagraphComment 0xe38fb0 <line:836:8, line:838:3>
|   |   |-TextComment 0xe38e10 <line:836:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe38e30 <line:837:3> Text=" "
|   |   |-HTMLStartTagComment 0xe38e50 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe38e90 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe38ed0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe38ef0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe38f20 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe38f50 <line:838:3> Text=" "
|   `-BlockCommandComment 0xe38fd0 <col:4, col:20> Name="see"
|     `-ParagraphComment 0xe39030 <col:8, col:20>
|       `-TextComment 0xe39000 <col:8, col:20> Text=" LOS_TaskLock"
|-FunctionDecl 0xde1478 <line:870:1, col:60> col:15 LOS_TaskPriSet 'UINT32 (UINT32, UINT16)' extern
| |-ParmVarDecl 0xde1088 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xde1100 <col:45, col:52> col:52 taskPrio 'UINT16':'unsigned short'
| `-FullComment 0xe3a0a0 <line:843:3, line:868:22>
|   |-ParagraphComment 0xe39160 <line:843:3>
|   | `-TextComment 0xe39130 <col:3> Text=" "
|   |-VerbatimLineComment 0xe39180 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe391f0 <line:844:3>
|   | `-TextComment 0xe391c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe39210 <col:4, col:30> Name="brief"
|   | `-ParagraphComment 0xe39270 <col:10, col:30>
|   |   `-TextComment 0xe39240 <col:10, col:30> Text=" Set a task priority."
|   |-ParagraphComment 0xe392c0 <line:846:3>
|   | `-TextComment 0xe39290 <col:3> Text=" "
|   |-BlockCommandComment 0xe392e0 <col:4, line:847:60> Name="par"
|   | `-ParagraphComment 0xe39360 <line:846:8, line:847:60>
|   |   |-TextComment 0xe39310 <line:846:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe39330 <line:847:3, col:60> Text=" This API is used to set the priority of a specified task."
|   |-ParagraphComment 0xe393b0 <line:849:3>
|   | `-TextComment 0xe39380 <col:3> Text=" "
|   |-BlockCommandComment 0xe393d0 <col:4, line:856:8> Name="attention"
|   | `-ParagraphComment 0xe39830 <line:850:3, line:856:8>
|   |   |-TextComment 0xe39400 <line:850:3> Text=" "
|   |   |-HTMLStartTagComment 0xe39420 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe39460 <line:851:3> Text=" "
|   |   |-HTMLStartTagComment 0xe39480 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe394c0 <col:8, col:116> Text="If the set priority is higher than the priority of the current running task, task scheduling probably occurs."
|   |   |-TextComment 0xe394e0 <line:852:3> Text=" "
|   |   |-HTMLEndTagComment 0xe39500 <col:4, col:8> Name="li"
|   |   |-TextComment 0xe39530 <line:853:3> Text=" "
|   |   |-HTMLStartTagComment 0xe39550 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe39590 <col:8, col:94> Text="Changing the priority of the current running task also probably causes task scheduling."
|   |   |-HTMLEndTagComment 0xe395b0 <col:95, col:99> Name="li"
|   |   |-TextComment 0xe395e0 <line:854:3> Text=" "
|   |   |-HTMLStartTagComment 0xe39600 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe39640 <col:8, col:102> Text="Using the interface to change the priority of software timer task and idle task is not allowed."
|   |   |-HTMLEndTagComment 0xe39660 <col:103, col:107> Name="li"
|   |   |-TextComment 0xe39690 <line:855:3> Text=" "
|   |   |-HTMLStartTagComment 0xe396b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe396f0 <col:8, col:59> Text="Using the interface in the interrupt is not allowed."
|   |   |-HTMLEndTagComment 0xe39710 <col:60, col:64> Name="li"
|   |   |-TextComment 0xe39740 <line:856:3> Text=" "
|   |   `-HTMLEndTagComment 0xe39760 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe39880 <line:858:3>
|   | `-TextComment 0xe39850 <col:3> Text=" "
|   |-ParamCommandComment 0xe398a0 <col:4, line:859:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xe39950 <line:858:18, line:859:3>
|   |   |-TextComment 0xe39900 <line:858:18, col:96> Text="   [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |   `-TextComment 0xe39920 <line:859:3> Text=" "
|   |-ParamCommandComment 0xe39970 <col:4, col:52> [in] implicitly Param="taskPrio" ParamIndex=1
|   | `-ParagraphComment 0xe39a00 <col:20, col:52>
|   |   `-TextComment 0xe399d0 <col:20, col:52> Text=" [IN] Type #UINT16 Task priority."
|   |-ParagraphComment 0xe39a50 <line:861:3>
|   | `-TextComment 0xe39a20 <col:3> Text=" "
|   |-BlockCommandComment 0xe39a70 <col:4, line:862:3> Name="retval"
|   | `-ParagraphComment 0xe39af0 <line:861:11, line:862:3>
|   |   |-TextComment 0xe39aa0 <line:861:11, col:95> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR    Incorrect task priority.Re-configure the task priority"
|   |   `-TextComment 0xe39ac0 <line:862:3> Text=" "
|   |-BlockCommandComment 0xe39b10 <col:4, line:863:3> Name="retval"
|   | `-ParagraphComment 0xe39b90 <line:862:11, line:863:3>
|   |   |-TextComment 0xe39b40 <line:862:11, col:95> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE   Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0xe39b60 <line:863:3> Text=" "
|   |-BlockCommandComment 0xe39bb0 <col:4, line:864:3> Name="retval"
|   | `-ParagraphComment 0xe39c30 <line:863:11, line:864:3>
|   |   |-TextComment 0xe39be0 <line:863:11, col:56> Text=" #LOS_ERRNO_TSK_ID_INVALID     Invalid Task ID"
|   |   `-TextComment 0xe39c00 <line:864:3> Text=" "
|   |-BlockCommandComment 0xe39c50 <col:4, line:865:3> Name="retval"
|   | `-ParagraphComment 0xe39cd0 <line:864:11, line:865:3>
|   |   |-TextComment 0xe39c80 <line:864:11, col:65> Text=" #LOS_ERRNO_TSK_NOT_CREATED    The task is not created."
|   |   `-TextComment 0xe39ca0 <line:865:3> Text=" "
|   |-BlockCommandComment 0xe39cf0 <col:4, line:866:3> Name="retval"
|   | `-ParagraphComment 0xe39d70 <line:865:11, line:866:3>
|   |   |-TextComment 0xe39d20 <line:865:11, col:103> Text=" #LOS_OK                       The task priority is successfully set to a specified priority."
|   |   `-TextComment 0xe39d40 <line:866:3> Text=" "
|   |-BlockCommandComment 0xe39d90 <col:4, line:868:3> Name="par"
|   | `-ParagraphComment 0xe39f60 <line:866:8, line:868:3>
|   |   |-TextComment 0xe39dc0 <line:866:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe39de0 <line:867:3> Text=" "
|   |   |-HTMLStartTagComment 0xe39e00 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe39e40 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe39e80 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe39ea0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe39ed0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe39f00 <line:868:3> Text=" "
|   `-BlockCommandComment 0xe39f80 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xe39fe0 <col:8, col:22>
|       `-TextComment 0xe39fb0 <col:8, col:22> Text=" LOS_TaskPriSet"
|-FunctionDecl 0xde1658 <line:898:1, col:48> col:15 LOS_CurTaskPriSet 'UINT32 (UINT16)' extern
| |-ParmVarDecl 0xde1568 <col:33, col:40> col:40 taskPrio 'UINT16':'unsigned short'
| `-FullComment 0xe3bf00 <line:873:3, line:896:22>
|   |-ParagraphComment 0xe3a140 <line:873:3>
|   | `-TextComment 0xe3a110 <col:3> Text=" "
|   |-VerbatimLineComment 0xe3a160 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe3a1d0 <line:874:3>
|   | `-TextComment 0xe3a1a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe3a1f0 <col:4, col:79> Name="brief"
|   | `-ParagraphComment 0xe3a250 <col:10, col:79>
|   |   `-TextComment 0xe3a220 <col:10, col:79> Text=" Set the priority of the current running task to a specified priority."
|   |-ParagraphComment 0xe3a2a0 <line:876:3>
|   | `-TextComment 0xe3a270 <col:3> Text=" "
|   |-BlockCommandComment 0xe3a2c0 <col:4, line:877:92> Name="par"
|   | `-ParagraphComment 0xe3a340 <line:876:8, line:877:92>
|   |   |-TextComment 0xe3a2f0 <line:876:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe3a310 <line:877:3, col:92> Text=" This API is used to set the priority of the current running task to a specified priority."
|   |-ParagraphComment 0xe3a390 <line:879:3>
|   | `-TextComment 0xe3a360 <col:3> Text=" "
|   |-BlockCommandComment 0xe3a3b0 <col:4, line:884:8> Name="attention"
|   | `-ParagraphComment 0xe3b740 <line:880:3, line:884:8>
|   |   |-TextComment 0xe3a3e0 <line:880:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3a400 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe3a440 <line:881:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3a460 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe3b4c0 <col:8, col:89> Text="Changing the priority of the current running task probably causes task scheduling."
|   |   |-HTMLEndTagComment 0xe3b4e0 <col:90, col:94> Name="li"
|   |   |-TextComment 0xe3b510 <line:882:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3b530 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe3b570 <col:8, col:102> Text="Using the interface to change the priority of software timer task and idle task is not allowed."
|   |   |-HTMLEndTagComment 0xe3b590 <col:103, col:107> Name="li"
|   |   |-TextComment 0xe3b5c0 <line:883:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3b5e0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe3b620 <col:8, col:59> Text="Using the interface in the interrupt is not allowed."
|   |   |-HTMLEndTagComment 0xe3b640 <col:60, col:64> Name="li"
|   |   |-TextComment 0xe3b670 <line:884:3> Text=" "
|   |   `-HTMLEndTagComment 0xe3b690 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe3b790 <line:886:3>
|   | `-TextComment 0xe3b760 <col:3> Text=" "
|   |-ParamCommandComment 0xe3b7b0 <col:4, col:52> [in] implicitly Param="taskPrio" ParamIndex=0
|   | `-ParagraphComment 0xe3b840 <col:20, col:52>
|   |   `-TextComment 0xe3b810 <col:20, col:52> Text=" [IN] Type #UINT16 Task priority."
|   |-ParagraphComment 0xe3b890 <line:888:3>
|   | `-TextComment 0xe3b860 <col:3> Text=" "
|   |-BlockCommandComment 0xe3b8b0 <col:4, line:889:3> Name="retval"
|   | `-ParagraphComment 0xe3b930 <line:888:11, line:889:3>
|   |   |-TextComment 0xe3b8e0 <line:888:11, col:96> Text=" #LOS_ERRNO_TSK_PRIOR_ERROR     Incorrect task priority.Re-configure the task priority"
|   |   `-TextComment 0xe3b900 <line:889:3> Text=" "
|   |-BlockCommandComment 0xe3b950 <col:4, line:890:3> Name="retval"
|   | `-ParagraphComment 0xe3b9d0 <line:889:11, line:890:3>
|   |   |-TextComment 0xe3b980 <line:889:11, col:96> Text=" #LOS_ERRNO_TSK_OPERATE_IDLE    Check the task ID and do not operate on the idle task."
|   |   `-TextComment 0xe3b9a0 <line:890:3> Text=" "
|   |-BlockCommandComment 0xe3b9f0 <col:4, line:891:3> Name="retval"
|   | `-ParagraphComment 0xe3ba70 <line:890:11, line:891:3>
|   |   |-TextComment 0xe3ba20 <line:890:11, col:57> Text=" #LOS_ERRNO_TSK_ID_INVALID      Invalid Task ID"
|   |   `-TextComment 0xe3ba40 <line:891:3> Text=" "
|   |-BlockCommandComment 0xe3ba90 <col:4, line:892:3> Name="retval"
|   | `-ParagraphComment 0xe3bb10 <line:891:11, line:892:3>
|   |   |-TextComment 0xe3bac0 <line:891:11, col:66> Text=" #LOS_ERRNO_TSK_NOT_CREATED     The task is not created."
|   |   `-TextComment 0xe3bae0 <line:892:3> Text=" "
|   |-BlockCommandComment 0xe3bb30 <col:4, line:894:3> Name="retval"
|   | `-ParagraphComment 0xe3bbe0 <line:892:11, line:894:3>
|   |   |-TextComment 0xe3bb60 <line:892:11, col:117> Text=" #LOS_OK                        The priority of the current running task is successfully set to a specified"
|   |   |-TextComment 0xe3bb80 <line:893:3, col:51> Text="                                        priority."
|   |   `-TextComment 0xe3bba0 <line:894:3> Text=" "
|   |-BlockCommandComment 0xe3bc00 <col:4, line:896:3> Name="par"
|   | `-ParagraphComment 0xe3bdd0 <line:894:8, line:896:3>
|   |   |-TextComment 0xe3bc30 <line:894:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe3bc50 <line:895:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3bc70 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe3bcb0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe3bcf0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe3bd10 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe3bd40 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe3bd70 <line:896:3> Text=" "
|   `-BlockCommandComment 0xe3bdf0 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xe3be50 <col:8, col:22>
|       `-TextComment 0xe3be20 <col:8, col:22> Text=" LOS_TaskPriGet"
|-FunctionDecl 0xde17c0 <line:924:1, col:33> col:15 LOS_TaskYield 'UINT32 (void)' extern
| `-FullComment 0xe3ca40 <line:901:3, line:922:7>
|   |-ParagraphComment 0xe3bfa0 <line:901:3>
|   | `-TextComment 0xe3bf70 <col:3> Text=" "
|   |-VerbatimLineComment 0xe3bfc0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe3c030 <line:902:3>
|   | `-TextComment 0xe3c000 <col:3> Text=" "
|   |-BlockCommandComment 0xe3c050 <col:4, col:73> Name="brief"
|   | `-ParagraphComment 0xe3c0b0 <col:10, col:73>
|   |   `-TextComment 0xe3c080 <col:10, col:73> Text=" Change the scheduling sequence of tasks with the same priority."
|   |-ParagraphComment 0xe3c100 <line:904:3>
|   | `-TextComment 0xe3c0d0 <col:3> Text=" "
|   |-BlockCommandComment 0xe3c120 <col:4, line:906:9> Name="par"
|   | `-ParagraphComment 0xe3c1d0 <line:904:8, line:906:9>
|   |   |-TextComment 0xe3c150 <line:904:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe3c170 <line:905:3, col:117> Text=" This API is used to move current task in a queue of tasks with the same priority to the tail of the queue of ready"
|   |   `-TextComment 0xe3c190 <line:906:3, col:9> Text=" tasks."
|   |-ParagraphComment 0xe3c220 <line:908:3>
|   | `-TextComment 0xe3c1f0 <col:3> Text=" "
|   |-BlockCommandComment 0xe3c240 <col:4, line:912:8> Name="attention"
|   | `-ParagraphComment 0xe3c430 <line:909:3, line:912:8>
|   |   |-TextComment 0xe3c270 <line:909:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3c290 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe3c2d0 <line:910:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3c2f0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe3c330 <col:8, col:110> Text="At least two ready tasks need to be included in the queue of ready tasks with the same priority. If the"
|   |   |-TextComment 0xe3c350 <line:911:3, col:77> Text=" less than two ready tasks are included in the queue, an error is reported."
|   |   |-HTMLEndTagComment 0xe3c370 <col:78, col:82> Name="li"
|   |   |-TextComment 0xe3c3a0 <line:912:3> Text=" "
|   |   `-HTMLEndTagComment 0xe3c3c0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe3c480 <line:914:3>
|   | `-TextComment 0xe3c450 <col:3> Text=" "
|   |-ParamCommandComment 0xe3c4a0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xe3c500 <<invalid sloc>>
|   |-ParagraphComment 0xe3c550 <line:916:3>
|   | `-TextComment 0xe3c520 <col:3> Text=" "
|   |-BlockCommandComment 0xe3c570 <col:4, line:917:3> Name="retval"
|   | `-ParagraphComment 0xe3c5f0 <line:916:11, line:917:3>
|   |   |-TextComment 0xe3c5a0 <line:916:11, col:71> Text=" #LOS_ERRNO_TSK_ID_INVALID                    Invalid Task ID"
|   |   `-TextComment 0xe3c5c0 <line:917:3> Text=" "
|   |-BlockCommandComment 0xe3c610 <col:4, line:918:3> Name="retval"
|   | `-ParagraphComment 0xe3c690 <line:917:11, line:918:3>
|   |   |-TextComment 0xe3c640 <line:917:11, col:116> Text=" #LOS_ERRNO_TSK_YIELD_NOT_ENOUGH_TASK         No tasks with the same priority is available for scheduling."
|   |   `-TextComment 0xe3c660 <line:918:3> Text=" "
|   |-BlockCommandComment 0xe3c6b0 <col:4, line:920:3> Name="retval"
|   | `-ParagraphComment 0xe3c760 <line:918:11, line:920:3>
|   |   |-TextComment 0xe3c6e0 <line:918:11, col:110> Text=" #LOS_OK                                      The scheduling sequence of tasks with same priority is"
|   |   |-TextComment 0xe3c700 <line:919:3, col:77> Text="                                                      successfully changed."
|   |   `-TextComment 0xe3c720 <line:920:3> Text=" "
|   |-BlockCommandComment 0xe3c780 <col:4, line:922:3> Name="par"
|   | `-ParagraphComment 0xe3c950 <line:920:8, line:922:3>
|   |   |-TextComment 0xe3c7b0 <line:920:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe3c7d0 <line:921:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3c7f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe3c830 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe3c870 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe3c890 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe3c8c0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe3c8f0 <line:922:3> Text=" "
|   `-BlockCommandComment 0xe3c970 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe3c9a0 <<invalid sloc>>
|-FunctionDecl 0xde1988 <line:943:1, col:43> col:15 LOS_TaskPriGet 'UINT16 (UINT32)' extern
| |-ParmVarDecl 0xde1898 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0xe3d350 <line:927:3, line:941:22>
|   |-ParagraphComment 0xe3cae0 <line:927:3>
|   | `-TextComment 0xe3cab0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe3cb00 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe3cb70 <line:928:3>
|   | `-TextComment 0xe3cb40 <col:3> Text=" "
|   |-BlockCommandComment 0xe3cb90 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0xe3cbf0 <col:10, col:33>
|   |   `-TextComment 0xe3cbc0 <col:10, col:33> Text=" Obtain a task priority."
|   |-ParagraphComment 0xe3cc40 <line:930:3>
|   | `-TextComment 0xe3cc10 <col:3> Text=" "
|   |-BlockCommandComment 0xe3cc60 <col:4, line:931:63> Name="par"
|   | `-ParagraphComment 0xe3cce0 <line:930:8, line:931:63>
|   |   |-TextComment 0xe3cc90 <line:930:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe3ccb0 <line:931:3, col:63> Text=" This API is used to obtain the priority of a specified task."
|   |-ParagraphComment 0xe3cd30 <line:933:3>
|   | `-TextComment 0xe3cd00 <col:3> Text=" "
|   |-BlockCommandComment 0xe3cd50 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xe3cdb0 <col:14, col:19>
|   |   `-TextComment 0xe3cd80 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xe3ce00 <line:935:3>
|   | `-TextComment 0xe3cdd0 <col:3> Text=" "
|   |-ParamCommandComment 0xe3ce20 <col:4, col:94> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xe3ceb0 <col:18, col:94>
|   |   `-TextComment 0xe3ce80 <col:18, col:94> Text=" [IN] Type #UINT32 Task ID. The task id value is obtained from task creation."
|   |-ParagraphComment 0xe3cf00 <line:937:3>
|   | `-TextComment 0xe3ced0 <col:3> Text=" "
|   |-BlockCommandComment 0xe3cf20 <col:4, line:938:3> Name="retval"
|   | `-ParagraphComment 0xe3cfa0 <line:937:11, line:938:3>
|   |   |-TextComment 0xe3cf50 <line:937:11, col:67> Text=" #OS_INVALID      The task priority fails to be obtained."
|   |   `-TextComment 0xe3cf70 <line:938:3> Text=" "
|   |-BlockCommandComment 0xe3cfc0 <col:4, line:939:3> Name="retval"
|   | `-ParagraphComment 0xe3d040 <line:938:11, line:939:3>
|   |   |-TextComment 0xe3cff0 <line:938:11, col:46> Text=" #UINT16          The task priority."
|   |   `-TextComment 0xe3d010 <line:939:3> Text=" "
|   |-BlockCommandComment 0xe3d060 <col:4, line:941:3> Name="par"
|   | `-ParagraphComment 0xe3d230 <line:939:8, line:941:3>
|   |   |-TextComment 0xe3d090 <line:939:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe3d0b0 <line:940:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3d0d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe3d110 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe3d150 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe3d170 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe3d1a0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe3d1d0 <line:941:3> Text=" "
|   `-BlockCommandComment 0xe3d250 <col:4, col:22> Name="see"
|     `-ParagraphComment 0xe3d2b0 <col:8, col:22>
|       `-TextComment 0xe3d280 <col:8, col:22> Text=" LOS_TaskPriSet"
|-FunctionDecl 0xde1af0 <line:963:1, col:36> col:15 LOS_CurTaskIDGet 'UINT32 (void)' extern
| `-FullComment 0xe3dcc0 <line:946:3, line:961:7>
|   |-ParagraphComment 0xe3d3f0 <line:946:3>
|   | `-TextComment 0xe3d3c0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe3d410 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe3d480 <line:947:3>
|   | `-TextComment 0xe3d450 <col:3> Text=" "
|   |-BlockCommandComment 0xe3d4d0 <col:4, col:41> Name="brief"
|   | `-ParagraphComment 0xe3d530 <col:10, col:41>
|   |   `-TextComment 0xe3d500 <col:10, col:41> Text=" Obtain current running task ID."
|   |-ParagraphComment 0xe3d580 <line:949:3>
|   | `-TextComment 0xe3d550 <col:3> Text=" "
|   |-BlockCommandComment 0xe3d5a0 <col:4, line:950:61> Name="par"
|   | `-ParagraphComment 0xe3d620 <line:949:8, line:950:61>
|   |   |-TextComment 0xe3d5d0 <line:949:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe3d5f0 <line:950:3, col:61> Text=" This API is used to obtain the ID of current running task."
|   |-ParagraphComment 0xe3d670 <line:952:3>
|   | `-TextComment 0xe3d640 <col:3> Text=" "
|   |-BlockCommandComment 0xe3d690 <col:4, line:955:8> Name="attention"
|   | `-ParagraphComment 0xe3d860 <line:953:3, line:955:8>
|   |   |-TextComment 0xe3d6c0 <line:953:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3d6e0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe3d720 <line:954:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3d740 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe3d780 <col:8, col:70> Text=" This interface should not be called before system initialized."
|   |   |-HTMLEndTagComment 0xe3d7a0 <col:71, col:75> Name="li"
|   |   |-TextComment 0xe3d7d0 <line:955:3> Text=" "
|   |   `-HTMLEndTagComment 0xe3d7f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe3d8b0 <line:957:3>
|   | `-TextComment 0xe3d880 <col:3> Text=" "
|   |-BlockCommandComment 0xe3d8d0 <col:4, line:958:3> Name="retval"
|   | `-ParagraphComment 0xe3d950 <line:957:11, line:958:3>
|   |   |-TextComment 0xe3d900 <line:957:11, col:56> Text=" #LOS_ERRNO_TSK_ID_INVALID    Invalid Task ID."
|   |   `-TextComment 0xe3d920 <line:958:3> Text=" "
|   |-BlockCommandComment 0xe3d970 <col:4, line:959:3> Name="retval"
|   | `-ParagraphComment 0xe3d9f0 <line:958:11, line:959:3>
|   |   |-TextComment 0xe3d9a0 <line:958:11, col:48> Text=" #UINT32                      Task ID."
|   |   `-TextComment 0xe3d9c0 <line:959:3> Text=" "
|   |-BlockCommandComment 0xe3da10 <col:4, line:961:3> Name="par"
|   | `-ParagraphComment 0xe3dbe0 <line:959:8, line:961:3>
|   |   |-TextComment 0xe3da40 <line:959:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe3da60 <line:960:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3da80 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe3dac0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe3db00 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe3db20 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe3db50 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe3db80 <line:961:3> Text=" "
|   `-BlockCommandComment 0xe3dc00 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe3dc30 <<invalid sloc>>
|-FunctionDecl 0xde1c50 <line:981:1, col:37> col:15 LOS_NextTaskIDGet 'UINT32 (void)' extern
| `-FullComment 0xe3e490 <line:966:3, line:979:7>
|   |-ParagraphComment 0xe3dd60 <line:966:3>
|   | `-TextComment 0xe3dd30 <col:3> Text=" "
|   |-VerbatimLineComment 0xe3dd80 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe3ddf0 <line:967:3>
|   | `-TextComment 0xe3ddc0 <col:3> Text=" "
|   |-BlockCommandComment 0xe3de10 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0xe3de70 <col:10, col:38>
|   |   `-TextComment 0xe3de40 <col:10, col:38> Text=" Obtain next running task ID."
|   |-ParagraphComment 0xe3dec0 <line:969:3>
|   | `-TextComment 0xe3de90 <col:3> Text=" "
|   |-BlockCommandComment 0xe3dee0 <col:4, line:970:58> Name="par"
|   | `-ParagraphComment 0xe3df60 <line:969:8, line:970:58>
|   |   |-TextComment 0xe3df10 <line:969:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe3df30 <line:970:3, col:58> Text=" This API is used to obtain the ID of next running task."
|   |-ParagraphComment 0xe3dfb0 <line:972:3>
|   | `-TextComment 0xe3df80 <col:3> Text=" "
|   |-BlockCommandComment 0xe3dfd0 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xe3e030 <col:14, col:19>
|   |   `-TextComment 0xe3e000 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xe3e080 <line:975:3>
|   | `-TextComment 0xe3e050 <col:3> Text=" "
|   |-BlockCommandComment 0xe3e0a0 <col:4, line:976:3> Name="retval"
|   | `-ParagraphComment 0xe3e120 <line:975:11, line:976:3>
|   |   |-TextComment 0xe3e0d0 <line:975:11, col:56> Text=" #LOS_ERRNO_TSK_ID_INVALID    invalid Task ID."
|   |   `-TextComment 0xe3e0f0 <line:976:3> Text=" "
|   |-BlockCommandComment 0xe3e140 <col:4, line:977:3> Name="retval"
|   | `-ParagraphComment 0xe3e1c0 <line:976:11, line:977:3>
|   |   |-TextComment 0xe3e170 <line:976:11, col:48> Text=" #UINT32                      task id."
|   |   `-TextComment 0xe3e190 <line:977:3> Text=" "
|   |-BlockCommandComment 0xe3e1e0 <col:4, line:979:3> Name="par"
|   | `-ParagraphComment 0xe3e3b0 <line:977:8, line:979:3>
|   |   |-TextComment 0xe3e210 <line:977:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe3e230 <line:978:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3e250 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe3e290 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe3e2d0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe3e2f0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe3e320 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe3e350 <line:979:3> Text=" "
|   `-BlockCommandComment 0xe3e3d0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe3e400 <<invalid sloc>>
|-FunctionDecl 0xde1e08 <line:999:1, col:37> col:14 LOS_CurTaskNameGet 'CHAR *(void)' extern
| `-FullComment 0xe3ec60 <line:984:3, line:997:7>
|   |-ParagraphComment 0xe3e530 <line:984:3>
|   | `-TextComment 0xe3e500 <col:3> Text=" "
|   |-VerbatimLineComment 0xe3e550 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe3e5c0 <line:985:3>
|   | `-TextComment 0xe3e590 <col:3> Text=" "
|   |-BlockCommandComment 0xe3e5e0 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0xe3e640 <col:10, col:38>
|   |   `-TextComment 0xe3e610 <col:10, col:38> Text=" Obtain next running task ID."
|   |-ParagraphComment 0xe3e690 <line:987:3>
|   | `-TextComment 0xe3e660 <col:3> Text=" "
|   |-BlockCommandComment 0xe3e6b0 <col:4, line:988:58> Name="par"
|   | `-ParagraphComment 0xe3e730 <line:987:8, line:988:58>
|   |   |-TextComment 0xe3e6e0 <line:987:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe3e700 <line:988:3, col:58> Text=" This API is used to obtain the ID of next running task."
|   |-ParagraphComment 0xe3e780 <line:990:3>
|   | `-TextComment 0xe3e750 <col:3> Text=" "
|   |-BlockCommandComment 0xe3e7a0 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xe3e800 <col:14, col:19>
|   |   `-TextComment 0xe3e7d0 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xe3e850 <line:993:3>
|   | `-TextComment 0xe3e820 <col:3> Text=" "
|   |-BlockCommandComment 0xe3e870 <col:4, line:994:3> Name="retval"
|   | `-ParagraphComment 0xe3e8f0 <line:993:11, line:994:3>
|   |   |-TextComment 0xe3e8a0 <line:993:11, col:46> Text=" #NULL            invalid Task name."
|   |   `-TextComment 0xe3e8c0 <line:994:3> Text=" "
|   |-BlockCommandComment 0xe3e910 <col:4, line:995:3> Name="retval"
|   | `-ParagraphComment 0xe3e990 <line:994:11, line:995:3>
|   |   |-TextComment 0xe3e940 <line:994:11, col:38> Text=" #CHAR*           task name."
|   |   `-TextComment 0xe3e960 <line:995:3> Text=" "
|   |-BlockCommandComment 0xe3e9b0 <col:4, line:997:3> Name="par"
|   | `-ParagraphComment 0xe3eb80 <line:995:8, line:997:3>
|   |   |-TextComment 0xe3e9e0 <line:995:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe3ea00 <line:996:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3ea20 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe3ea60 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe3eaa0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe3eac0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe3eaf0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe3eb20 <line:997:3> Text=" "
|   `-BlockCommandComment 0xe3eba0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe3ebd0 <<invalid sloc>>
|-FunctionDecl 0xde20e8 <line:1025:1, col:66> col:15 LOS_TaskInfoGet 'UINT32 (UINT32, TSK_INFO_S *)' extern
| |-ParmVarDecl 0xde1ee8 <col:31, col:38> col:38 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xde1fd8 <col:46, col:58> col:58 taskInfo 'TSK_INFO_S *'
| `-FullComment 0xe3f910 <line:1002:3, line:1023:7>
|   |-ParagraphComment 0xe3ed00 <line:1002:3>
|   | `-TextComment 0xe3ecd0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe3ed20 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe3ed90 <line:1003:3>
|   | `-TextComment 0xe3ed60 <col:3> Text=" "
|   |-BlockCommandComment 0xe3edb0 <col:4, col:46> Name="brief"
|   | `-ParagraphComment 0xe3ee10 <col:10, col:46>
|   |   `-TextComment 0xe3ede0 <col:10, col:46> Text=" Obtain a task information structure."
|   |-ParagraphComment 0xe3ee60 <line:1005:3>
|   | `-TextComment 0xe3ee30 <col:3> Text=" "
|   |-BlockCommandComment 0xe3ee80 <col:4, line:1006:59> Name="par"
|   | `-ParagraphComment 0xe3ef00 <line:1005:8, line:1006:59>
|   |   |-TextComment 0xe3eeb0 <line:1005:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe3eed0 <line:1006:3, col:59> Text=" This API is used to obtain a task information structure."
|   |-ParagraphComment 0xe3ef50 <line:1008:3>
|   | `-TextComment 0xe3ef20 <col:3> Text=" "
|   |-BlockCommandComment 0xe3ef70 <col:4, line:1012:8> Name="attention"
|   | `-ParagraphComment 0xe3f160 <line:1009:3, line:1012:8>
|   |   |-TextComment 0xe3efa0 <line:1009:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3efc0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe3f000 <line:1010:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3f020 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe3f060 <col:8, col:111> Text="One parameter of this interface is a pointer, it should be a correct value, otherwise, the system may be"
|   |   |-TextComment 0xe3f080 <line:1011:3, col:12> Text=" abnormal."
|   |   |-HTMLEndTagComment 0xe3f0a0 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe3f0d0 <line:1012:3> Text=" "
|   |   `-HTMLEndTagComment 0xe3f0f0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe3f1b0 <line:1014:3>
|   | `-TextComment 0xe3f180 <col:3> Text=" "
|   |-ParamCommandComment 0xe3f1d0 <col:4, line:1015:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xe3f280 <line:1014:18, line:1015:3>
|   |   |-TextComment 0xe3f230 <line:1014:18, col:99> Text="    [IN]  Type  #UINT32 Task ID. The task id value is obtained from task creation."
|   |   `-TextComment 0xe3f250 <line:1015:3> Text=" "
|   |-ParamCommandComment 0xe3f2a0 <col:4, col:103> [in] implicitly Param="taskInfo" ParamIndex=1
|   | `-ParagraphComment 0xe3f330 <col:20, col:103>
|   |   `-TextComment 0xe3f300 <col:20, col:103> Text="  [OUT] Type  #TSK_INFO_S* Pointer to the task information structure to be obtained."
|   |-ParagraphComment 0xe3f380 <line:1017:3>
|   | `-TextComment 0xe3f350 <col:3> Text=" "
|   |-BlockCommandComment 0xe3f3a0 <col:4, line:1018:3> Name="retval"
|   | `-ParagraphComment 0xe3f420 <line:1017:11, line:1018:3>
|   |   |-TextComment 0xe3f3d0 <line:1017:11, col:57> Text=" #LOS_ERRNO_TSK_PTR_NULL        Null parameter."
|   |   `-TextComment 0xe3f3f0 <line:1018:3> Text=" "
|   |-BlockCommandComment 0xe3f440 <col:4, line:1019:3> Name="retval"
|   | `-ParagraphComment 0xe3f4e0 <line:1018:11, line:1019:3>
|   |   |-TextComment 0xe3f470 <line:1018:11, col:58> Text=" #LOS_ERRNO_TSK_ID_INVALID      Invalid task ID."
|   |   `-TextComment 0xe3f490 <line:1019:3> Text=" "
|   |-BlockCommandComment 0xe3f500 <col:4, line:1020:3> Name="retval"
|   | `-ParagraphComment 0xe3f580 <line:1019:11, line:1020:3>
|   |   |-TextComment 0xe3f530 <line:1019:11, col:66> Text=" #LOS_ERRNO_TSK_NOT_CREATED     The task is not created."
|   |   `-TextComment 0xe3f550 <line:1020:3> Text=" "
|   |-BlockCommandComment 0xe3f5a0 <col:4, line:1021:3> Name="retval"
|   | `-ParagraphComment 0xe3f620 <line:1020:11, line:1021:3>
|   |   |-TextComment 0xe3f5d0 <line:1020:11, col:98> Text=" #LOS_OK                        The task information structure is successfully obtained."
|   |   `-TextComment 0xe3f5f0 <line:1021:3> Text=" "
|   |-BlockCommandComment 0xe3f640 <col:4, line:1023:3> Name="par"
|   | `-ParagraphComment 0xe3f810 <line:1021:8, line:1023:3>
|   |   |-TextComment 0xe3f670 <line:1021:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe3f690 <line:1022:3> Text=" "
|   |   |-HTMLStartTagComment 0xe3f6b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe3f6f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe3f730 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe3f750 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe3f780 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe3f7b0 <line:1023:3> Text=" "
|   `-BlockCommandComment 0xe3f830 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe3f860 <<invalid sloc>>
|-FunctionDecl 0xde2368 <line:1047:1, col:66> col:15 LOS_TaskStatusGet 'UINT32 (UINT32, UINT32 *)' extern
| |-ParmVarDecl 0xde21d8 <col:33, col:40> col:40 taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xde2250 <col:48, col:56> col:56 taskStatus 'UINT32 *'
| `-FullComment 0xe40410 <line:1028:3, line:1045:7>
|   |-ParagraphComment 0xe3f9b0 <line:1028:3>
|   | `-TextComment 0xe3f980 <col:3> Text=" "
|   |-VerbatimLineComment 0xe3f9d0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe3fa40 <line:1029:3>
|   | `-TextComment 0xe3fa10 <col:3> Text=" "
|   |-BlockCommandComment 0xe3fa60 <col:4, col:33> Name="brief"
|   | `-ParagraphComment 0xe3fac0 <col:10, col:33>
|   |   `-TextComment 0xe3fa90 <col:10, col:33> Text=" Obtain the task status."
|   |-ParagraphComment 0xe3fb10 <line:1031:3>
|   | `-TextComment 0xe3fae0 <col:3> Text=" "
|   |-BlockCommandComment 0xe3fb30 <col:4, line:1032:46> Name="par"
|   | `-ParagraphComment 0xe3fbb0 <line:1031:8, line:1032:46>
|   |   |-TextComment 0xe3fb60 <line:1031:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe3fb80 <line:1032:3, col:46> Text=" This API is used to obtain the task status."
|   |-ParagraphComment 0xe3fc00 <line:1034:3>
|   | `-TextComment 0xe3fbd0 <col:3> Text=" "
|   |-BlockCommandComment 0xe3fc20 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xe3fc80 <col:14, col:19>
|   |   `-TextComment 0xe3fc50 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xe3fcd0 <line:1036:3>
|   | `-TextComment 0xe3fca0 <col:3> Text=" "
|   |-ParamCommandComment 0xe3fcf0 <col:4, line:1037:3> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xe3fda0 <line:1036:18, line:1037:3>
|   |   |-TextComment 0xe3fd50 <line:1036:18, col:55> Text="     [IN] Type  #TSK_HANDLE_T Task ID."
|   |   `-TextComment 0xe3fd70 <line:1037:3> Text=" "
|   |-ParamCommandComment 0xe3fdc0 <col:4, col:84> [in] implicitly Param="taskStatus" ParamIndex=1
|   | `-ParagraphComment 0xe3fe50 <col:22, col:84>
|   |   `-TextComment 0xe3fe20 <col:22, col:84> Text=" [OUT] Type  #UINT32 Pointer to the task status to be obtained."
|   |-ParagraphComment 0xe3fea0 <line:1039:3>
|   | `-TextComment 0xe3fe70 <col:3> Text=" "
|   |-BlockCommandComment 0xe3fec0 <col:4, line:1040:3> Name="retval"
|   | `-ParagraphComment 0xe3ff40 <line:1039:11, line:1040:3>
|   |   |-TextComment 0xe3fef0 <line:1039:11, col:81> Text=" #LOS_ERRNO_TSK_PTR_NULL                    0x02000201: Null parameter."
|   |   `-TextComment 0xe3ff10 <line:1040:3> Text=" "
|   |-BlockCommandComment 0xe3ff60 <col:4, line:1041:3> Name="retval"
|   | `-ParagraphComment 0xe3ffe0 <line:1040:11, line:1041:3>
|   |   |-TextComment 0xe3ff90 <line:1040:11, col:82> Text=" #LOS_ERRNO_TSK_ID_INVALID                  0x02000207: Invalid task ID."
|   |   `-TextComment 0xe3ffb0 <line:1041:3> Text=" "
|   |-BlockCommandComment 0xe40000 <col:4, line:1042:3> Name="retval"
|   | `-ParagraphComment 0xe40080 <line:1041:11, line:1042:3>
|   |   |-TextComment 0xe40030 <line:1041:11, col:90> Text=" #LOS_ERRNO_TSK_NOT_CREATED                 0x0200020a: The task is not created."
|   |   `-TextComment 0xe40050 <line:1042:3> Text=" "
|   |-BlockCommandComment 0xe400a0 <col:4, line:1043:3> Name="retval"
|   | `-ParagraphComment 0xe40120 <line:1042:11, line:1043:3>
|   |   |-TextComment 0xe400d0 <line:1042:11, col:112> Text=" #LOS_OK                                   0: The task information structure is successfully obtained."
|   |   `-TextComment 0xe400f0 <line:1043:3> Text=" "
|   |-BlockCommandComment 0xe40140 <col:4, line:1045:3> Name="par"
|   | `-ParagraphComment 0xe40310 <line:1043:8, line:1045:3>
|   |   |-TextComment 0xe40170 <line:1043:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe40190 <line:1044:3> Text=" "
|   |   |-HTMLStartTagComment 0xe401b0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe401f0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe40230 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe40250 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe40280 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe402b0 <line:1045:3> Text=" "
|   `-BlockCommandComment 0xe40330 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe40360 <<invalid sloc>>
|-FunctionDecl 0xde3700 <line:1068:1, col:39> col:15 LOS_TaskInfoMonitor 'UINT32 (void)' extern
| `-FullComment 0xe40e30 <line:1050:3, line:1066:27>
|   |-ParagraphComment 0xe404b0 <line:1050:3>
|   | `-TextComment 0xe40480 <col:3> Text=" "
|   |-VerbatimLineComment 0xe404d0 <col:4, col:24> Text=" los_monitor"
|   |-ParagraphComment 0xe40540 <line:1051:3>
|   | `-TextComment 0xe40510 <col:3> Text=" "
|   |-BlockCommandComment 0xe40560 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0xe405c0 <col:10, col:32>
|   |   `-TextComment 0xe40590 <col:10, col:32> Text=" Obtain all tasks info."
|   |-ParagraphComment 0xe40610 <line:1053:3>
|   | `-TextComment 0xe405e0 <col:3> Text=" "
|   |-BlockCommandComment 0xe40630 <col:4, line:1055:3> Name="par"
|   | `-ParagraphComment 0xe406e0 <line:1053:8, line:1055:3>
|   |   |-TextComment 0xe40660 <line:1053:8, col:20> Text=" Description:"
|   |   |-TextComment 0xe40680 <line:1054:3, col:45> Text=" This API is used to obtain all tasks info."
|   |   `-TextComment 0xe406a0 <line:1055:3> Text=" "
|   |-BlockCommandComment 0xe40700 <col:4, line:1058:8> Name="attention"
|   | `-ParagraphComment 0xe408d0 <line:1056:3, line:1058:8>
|   |   |-TextComment 0xe40730 <line:1056:3> Text=" "
|   |   |-HTMLStartTagComment 0xe40750 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe40790 <line:1057:3> Text=" "
|   |   |-HTMLStartTagComment 0xe407b0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe407f0 <col:8, col:102> Text="This API can be called only after the CPU usage is initialized. Otherwise, -1 will be returned."
|   |   |-HTMLEndTagComment 0xe40810 <col:103, col:107> Name="li"
|   |   |-TextComment 0xe40840 <line:1058:3> Text=" "
|   |   `-HTMLEndTagComment 0xe40860 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe40920 <line:1060:3>
|   | `-TextComment 0xe408f0 <col:3> Text=" "
|   |-ParamCommandComment 0xe40940 <col:4, col:15> [in] implicitly Param="None."
|   | `-ParagraphComment 0xe409a0 <<invalid sloc>>
|   |-ParagraphComment 0xe409f0 <line:1062:3>
|   | `-TextComment 0xe409c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe40a10 <col:4, line:1063:3> Name="retval"
|   | `-ParagraphComment 0xe40a90 <line:1062:11, line:1063:3>
|   |   |-TextComment 0xe40a40 <line:1062:11, col:63> Text=" #OS_ERROR           -1:all tasks info obtain failed."
|   |   `-TextComment 0xe40a60 <line:1063:3> Text=" "
|   |-BlockCommandComment 0xe40ab0 <col:4, line:1064:3> Name="retval"
|   | `-ParagraphComment 0xe40b30 <line:1063:11, line:1064:3>
|   |   |-TextComment 0xe40ae0 <line:1063:11, col:74> Text=" #LOS_OK              0:all tasks info is successfully obtained."
|   |   `-TextComment 0xe40b00 <line:1064:3> Text=" "
|   |-BlockCommandComment 0xe40b50 <col:4, line:1066:3> Name="par"
|   | `-ParagraphComment 0xe40d20 <line:1064:8, line:1066:3>
|   |   |-TextComment 0xe40b80 <line:1064:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe40ba0 <line:1065:3> Text=" "
|   |   |-HTMLStartTagComment 0xe40bc0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe40c00 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe40c40 <col:12, col:76> Text="los_monitor.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe40c60 <col:77, col:81> Name="li"
|   |   |-HTMLEndTagComment 0xe40c90 <col:82, col:86> Name="ul"
|   |   `-TextComment 0xe40cc0 <line:1066:3> Text=" "
|   `-BlockCommandComment 0xe40d40 <col:4, col:27> Name="see"
|     `-ParagraphComment 0xe40da0 <col:8, col:27>
|       `-TextComment 0xe40d70 <col:8, col:27> Text=" LOS_TaskInfoMonitor"
|-FunctionDecl 0xde38e8 <line:1089:1, col:73> col:15 LOS_TaskSwitchInfoGet 'UINT32 (UINT32, UINT32 *)' extern
| |-ParmVarDecl 0xde37d8 <col:37, col:44> col:44 index 'UINT32':'unsigned int'
| |-ParmVarDecl 0xde3850 <col:51, col:59> col:59 taskSwitchInfo 'UINT32 *'
| `-FullComment 0xe41820 <line:1071:3, line:1087:7>
|   |-ParagraphComment 0xe40ed0 <line:1071:3>
|   | `-TextComment 0xe40ea0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe40ef0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe40f60 <line:1072:3>
|   | `-TextComment 0xe40f30 <col:3> Text=" "
|   |-BlockCommandComment 0xe40f80 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0xe40fe0 <col:10, col:35>
|   |   `-TextComment 0xe40fb0 <col:10, col:35> Text=" Obtain tasks switch info."
|   |-ParagraphComment 0xe41030 <line:1074:3>
|   | `-TextComment 0xe41000 <col:3> Text=" "
|   |-BlockCommandComment 0xe41050 <col:4, line:1075:48> Name="par"
|   | `-ParagraphComment 0xe410d0 <line:1074:8, line:1075:48>
|   |   |-TextComment 0xe41080 <line:1074:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe410a0 <line:1075:3, col:48> Text=" This API is used to obtain tasks switch info."
|   |-ParagraphComment 0xe41120 <line:1077:3>
|   | `-TextComment 0xe410f0 <col:3> Text=" "
|   |-BlockCommandComment 0xe41140 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xe411a0 <col:14, col:19>
|   |   `-TextComment 0xe41170 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xe411f0 <line:1079:3>
|   | `-TextComment 0xe411c0 <col:3> Text=" "
|   |-ParamCommandComment 0xe41210 <col:4, line:1080:3> [in] implicitly Param="index" ParamIndex=0
|   | `-ParagraphComment 0xe412c0 <line:1079:17, line:1080:3>
|   |   |-TextComment 0xe41270 <line:1079:17, col:73> Text="            [IN]  Type  #UINT32  Switch info array index."
|   |   `-TextComment 0xe41290 <line:1080:3> Text=" "
|   |-ParamCommandComment 0xe412e0 <col:4, line:1081:50> [in] implicitly Param="taskSwitchInfo" ParamIndex=1
|   | `-ParagraphComment 0xe41390 <line:1080:26, line:1081:50>
|   |   |-TextComment 0xe41340 <line:1080:26, col:109> Text="   [OUT] Type  #UINT32* First 4 bytes is task id, and then is task name, name len is"
|   |   `-TextComment 0xe41360 <line:1081:3, col:50> Text="                                OS_TSK_NAME_LEN."
|   |-ParagraphComment 0xe413e0 <line:1083:3>
|   | `-TextComment 0xe413b0 <col:3> Text=" "
|   |-BlockCommandComment 0xe41400 <col:4, line:1084:3> Name="retval"
|   | `-ParagraphComment 0xe41480 <line:1083:11, line:1084:3>
|   |   |-TextComment 0xe41430 <line:1083:11, col:72> Text=" #LOS_ERRNO_TSK_PTR_NULL           0x02000201: Null parameter."
|   |   `-TextComment 0xe41450 <line:1084:3> Text=" "
|   |-BlockCommandComment 0xe414a0 <col:4, line:1085:3> Name="retval"
|   | `-ParagraphComment 0xe41540 <line:1084:11, line:1085:3>
|   |   |-TextComment 0xe414f0 <line:1084:11, col:101> Text=" #LOS_OK                           0: The task switch information is successfully obtained."
|   |   `-TextComment 0xe41510 <line:1085:3> Text=" "
|   |-BlockCommandComment 0xe41560 <col:4, line:1087:3> Name="par"
|   | `-ParagraphComment 0xe41730 <line:1085:8, line:1087:3>
|   |   |-TextComment 0xe41590 <line:1085:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe415b0 <line:1086:3> Text=" "
|   |   |-HTMLStartTagComment 0xe415d0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe41610 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe41650 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe41670 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe416a0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe416d0 <line:1087:3> Text=" "
|   `-BlockCommandComment 0xe41750 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe41780 <<invalid sloc>>
|-FunctionDecl 0xde3a88 <line:1108:1, col:35> col:13 LOS_TaskIsRunning 'BOOL (void)' extern
| `-FullComment 0xe420d0 <line:1092:3, line:1106:7>
|   |-ParagraphComment 0xe418c0 <line:1092:3>
|   | `-TextComment 0xe41890 <col:3> Text=" "
|   |-VerbatimLineComment 0xe418e0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe41950 <line:1093:3>
|   | `-TextComment 0xe41920 <col:3> Text=" "
|   |-BlockCommandComment 0xe41970 <col:4, col:38> Name="brief"
|   | `-ParagraphComment 0xe419d0 <col:10, col:38>
|   |   `-TextComment 0xe419a0 <col:10, col:38> Text=" Obtain tasks schduling info."
|   |-ParagraphComment 0xe41a20 <line:1095:3>
|   | `-TextComment 0xe419f0 <col:3> Text=" "
|   |-BlockCommandComment 0xe41a40 <col:4, line:1096:48> Name="par"
|   | `-ParagraphComment 0xe41ac0 <line:1095:8, line:1096:48>
|   |   |-TextComment 0xe41a70 <line:1095:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe41a90 <line:1096:3, col:48> Text=" This API is used to obtain task is scheduled."
|   |-ParagraphComment 0xe41b10 <line:1098:3>
|   | `-TextComment 0xe41ae0 <col:3> Text=" "
|   |-BlockCommandComment 0xe41b30 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xe41b90 <col:14, col:19>
|   |   `-TextComment 0xe41b60 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xe41be0 <line:1100:3>
|   | `-TextComment 0xe41bb0 <col:3> Text=" "
|   |-ParamCommandComment 0xe41c00 <col:4, col:15> [in] implicitly Param="None."
|   | `-ParagraphComment 0xe41c60 <<invalid sloc>>
|   |-ParagraphComment 0xe41cb0 <line:1102:3>
|   | `-TextComment 0xe41c80 <col:3> Text=" "
|   |-BlockCommandComment 0xe41cd0 <col:4, line:1103:3> Name="retval"
|   | `-ParagraphComment 0xe41d50 <line:1102:11, line:1103:3>
|   |   |-TextComment 0xe41d00 <line:1102:11, col:44> Text=" #TRUE         Tasks is scheduled."
|   |   `-TextComment 0xe41d20 <line:1103:3> Text=" "
|   |-BlockCommandComment 0xe41d70 <col:4, line:1104:3> Name="retval"
|   | `-ParagraphComment 0xe41df0 <line:1103:11, line:1104:3>
|   |   |-TextComment 0xe41da0 <line:1103:11, col:50> Text=" #FALSE        Tasks not scheduling yet."
|   |   `-TextComment 0xe41dc0 <line:1104:3> Text=" "
|   |-BlockCommandComment 0xe41e10 <col:4, line:1106:3> Name="par"
|   | `-ParagraphComment 0xe41fe0 <line:1104:8, line:1106:3>
|   |   |-TextComment 0xe41e40 <line:1104:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe41e60 <line:1105:3> Text=" "
|   |   |-HTMLStartTagComment 0xe41e80 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe41ec0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe41f00 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe41f20 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe41f50 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe41f80 <line:1106:3> Text=" "
|   `-BlockCommandComment 0xe42000 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe42030 <<invalid sloc>>
|-FunctionDecl 0xde3bf0 <line:1126:1, col:37> col:16 LOS_NewTaskIDGet 'UINT32 (void)' extern
| `-FullComment 0xe428a0 <line:1111:3, line:1124:7>
|   |-ParagraphComment 0xe42170 <line:1111:3>
|   | `-TextComment 0xe42140 <col:3> Text=" "
|   |-VerbatimLineComment 0xe42190 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe42200 <line:1112:3>
|   | `-TextComment 0xe421d0 <col:3> Text=" "
|   |-BlockCommandComment 0xe42220 <col:4, col:37> Name="brief"
|   | `-ParagraphComment 0xe42280 <col:10, col:37>
|   |   `-TextComment 0xe42250 <col:10, col:37> Text=" Obtain current new task ID."
|   |-ParagraphComment 0xe422d0 <line:1114:3>
|   | `-TextComment 0xe422a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe422f0 <col:4, line:1115:49> Name="par"
|   | `-ParagraphComment 0xe42370 <line:1114:8, line:1115:49>
|   |   |-TextComment 0xe42320 <line:1114:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe42340 <line:1115:3, col:49> Text=" This API is used to obtain the ID of new task."
|   |-ParagraphComment 0xe423c0 <line:1117:3>
|   | `-TextComment 0xe42390 <col:3> Text=" "
|   |-BlockCommandComment 0xe423e0 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xe42440 <col:14, col:19>
|   |   `-TextComment 0xe42410 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xe42490 <line:1120:3>
|   | `-TextComment 0xe42460 <col:3> Text=" "
|   |-BlockCommandComment 0xe424b0 <col:4, line:1121:3> Name="retval"
|   | `-ParagraphComment 0xe42530 <line:1120:11, line:1121:3>
|   |   |-TextComment 0xe424e0 <line:1120:11, col:68> Text=" #LOS_ERRNO_TSK_ID_INVALID    0x02000207: invalid Task ID."
|   |   `-TextComment 0xe42500 <line:1121:3> Text=" "
|   |-BlockCommandComment 0xe42550 <col:4, line:1122:3> Name="retval"
|   | `-ParagraphComment 0xe425d0 <line:1121:11, line:1122:3>
|   |   |-TextComment 0xe42580 <line:1121:11, col:21> Text=" # Task ID."
|   |   `-TextComment 0xe425a0 <line:1122:3> Text=" "
|   |-BlockCommandComment 0xe425f0 <col:4, line:1124:3> Name="par"
|   | `-ParagraphComment 0xe427c0 <line:1122:8, line:1124:3>
|   |   |-TextComment 0xe42620 <line:1122:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe42640 <line:1123:3> Text=" "
|   |   |-HTMLStartTagComment 0xe42660 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe426a0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe426e0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe42700 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe42730 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe42760 <line:1124:3> Text=" "
|   `-BlockCommandComment 0xe427e0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe42810 <<invalid sloc>>
|-FunctionDecl 0xde3db8 <line:1144:1, col:43> col:14 LOS_TaskNameGet 'CHAR *(UINT32)' extern
| |-ParmVarDecl 0xde3cc8 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
| `-FullComment 0xe43180 <line:1128:4, line:1142:8>
|   |-ParagraphComment 0xe42940 <line:1128:4>
|   | `-TextComment 0xe42910 <col:4> Text=" "
|   |-VerbatimLineComment 0xe42960 <col:5, col:23> Text="  los_task"
|   |-ParagraphComment 0xe429d0 <line:1129:4>
|   | `-TextComment 0xe429a0 <col:4> Text=" "
|   |-BlockCommandComment 0xe429f0 <col:5, col:32> Name="brief"
|   | `-ParagraphComment 0xe42a50 <col:11, col:32>
|   |   `-TextComment 0xe42a20 <col:11, col:32> Text=" Obtain the task name."
|   |-ParagraphComment 0xe42aa0 <line:1131:4>
|   | `-TextComment 0xe42a70 <col:4> Text=" "
|   |-BlockCommandComment 0xe42ac0 <col:5, line:1132:45> Name="par"
|   | `-ParagraphComment 0xe42b40 <line:1131:9, line:1132:45>
|   |   |-TextComment 0xe42af0 <line:1131:9, col:21> Text=" Description:"
|   |   `-TextComment 0xe42b10 <line:1132:4, col:45> Text=" This API is used to obtain the task name."
|   |-ParagraphComment 0xe42b90 <line:1134:4>
|   | `-TextComment 0xe42b60 <col:4> Text=" "
|   |-BlockCommandComment 0xe42bb0 <col:5, col:20> Name="attention"
|   | `-ParagraphComment 0xe42c10 <col:15, col:20>
|   |   `-TextComment 0xe42be0 <col:15, col:20> Text=" None."
|   |-ParagraphComment 0xe42c60 <line:1136:4>
|   | `-TextComment 0xe42c30 <col:4> Text=" "
|   |-ParamCommandComment 0xe42c80 <col:5, col:44> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xe42d10 <col:19, col:44>
|   |   `-TextComment 0xe42ce0 <col:19, col:44> Text="            [IN]  Task ID."
|   |-ParagraphComment 0xe42d60 <line:1138:4>
|   | `-TextComment 0xe42d30 <col:4> Text=" "
|   |-BlockCommandComment 0xe42d80 <col:5, line:1139:4> Name="retval"
|   | `-ParagraphComment 0xe42e00 <line:1138:12, line:1139:4>
|   |   |-TextComment 0xe42db0 <line:1138:12, col:37> Text=" #NULL: invalid Task name."
|   |   `-TextComment 0xe42dd0 <line:1139:4> Text=" "
|   |-BlockCommandComment 0xe42e20 <col:5, line:1140:4> Name="retval"
|   | `-ParagraphComment 0xe42ea0 <line:1139:12, line:1140:4>
|   |   |-TextComment 0xe42e50 <line:1139:12, col:24> Text=" # Task name."
|   |   `-TextComment 0xe42e70 <line:1140:4> Text=" "
|   |-BlockCommandComment 0xe42ec0 <col:5, line:1142:4> Name="par"
|   | `-ParagraphComment 0xe43090 <line:1140:9, line:1142:4>
|   |   |-TextComment 0xe42ef0 <line:1140:9, col:20> Text=" Dependency:"
|   |   |-TextComment 0xe42f10 <line:1141:4> Text=" "
|   |   |-HTMLStartTagComment 0xe42f30 <col:5, col:8> Name="ul"
|   |   |-HTMLStartTagComment 0xe42f70 <col:9, col:12> Name="li"
|   |   |-TextComment 0xe42fb0 <col:13, col:74> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe42fd0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xe43000 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xe43030 <line:1142:4> Text=" "
|   `-BlockCommandComment 0xe430b0 <col:5, col:8> Name="see"
|     `-ParagraphComment 0xe430e0 <<invalid sloc>>
|-FunctionDecl 0xde3fb8 <line:1164:1, col:58> col:15 LOS_TaskJoin 'UINT32 (UINT32, UINTPTR *)' extern
| |-ParmVarDecl 0xde3e70 <col:28, col:35> col:35 taskID 'UINT32':'unsigned int'
| `-ParmVarDecl 0xde3ee8 <col:43, col:52> col:52 retval 'UINTPTR *'
|-FunctionDecl 0xde4108 <line:1183:1, col:43> col:15 LOS_TaskDetach 'UINT32 (UINT32)' extern
| `-ParmVarDecl 0xde4078 <col:30, col:37> col:37 taskID 'UINT32':'unsigned int'
|-RecordDecl 0xde6138 <line:1465:9, line:1494:1> line:1465:9 struct definition
| |-FullComment 0xe432f0 <line:1462:3, line:1463:43>
| | |-ParagraphComment 0xe43220 <line:1462:3>
| | | `-TextComment 0xe431f0 <col:3> Text=" "
| | |-VerbatimLineComment 0xe43240 <col:4, col:21> Text=" los_task"
| | `-ParagraphComment 0xe432b0 <line:1463:3, col:43>
| |   `-TextComment 0xe43280 <col:3, col:43> Text=" Define the task control block structure."
| |-FieldDecl 0xde61f8 <main/los_compiler.h:327:23, main/los_task.h:1466:34> col:34 stackPointer 'void *'
| | `-FullComment 0xe433c0 <col:63, col:82>
| |   `-ParagraphComment 0xe43390 <col:63, col:82>
| |     `-TextComment 0xe43360 <col:63, col:82> Text=" Task stack pointer "
| |-FieldDecl 0xde6288 <line:1467:5, col:33> col:33 taskStatus 'UINT16':'unsigned short'
| |-FieldDecl 0xde62e8 <line:1468:5, col:33> col:33 priority 'UINT16':'unsigned short'
| |-FieldDecl 0xde6348 <line:1469:5, col:33> col:33 timeSlice 'INT32':'int'
| |-FieldDecl 0xde63a8 <line:1470:5, col:33> col:33 waitTimes 'UINT32':'unsigned int'
| |-FieldDecl 0xde6408 <line:1471:5, col:33> col:33 sortList 'SortLinkList':'SortLinkList'
| |-FieldDecl 0xde6468 <line:1472:5, col:33> col:33 startTime 'UINT64':'unsigned long long'
| |-FieldDecl 0xde64c8 <line:1473:5, col:33> col:33 stackSize 'UINT32':'unsigned int'
| | `-FullComment 0xe43490 <col:63, col:79>
| |   `-ParagraphComment 0xe43460 <col:63, col:79>
| |     `-TextComment 0xe43430 <col:63, col:79> Text=" Task stack size "
| |-FieldDecl 0xde6558 <line:1474:5, col:33> col:33 topOfStack 'UINT32':'unsigned int'
| | `-FullComment 0xe435a0 <col:63, col:78>
| |   `-ParagraphComment 0xe43570 <col:63, col:78>
| |     `-TextComment 0xe43540 <col:63, col:78> Text=" Task stack top "
| |-FieldDecl 0xde65e8 <line:1475:5, col:33> col:33 taskID 'UINT32':'unsigned int'
| | `-FullComment 0xe43670 <col:63, col:71>
| |   `-ParagraphComment 0xe43640 <col:63, col:71>
| |     `-TextComment 0xe43610 <col:63, col:71> Text=" Task ID "
| |-FieldDecl 0xde6678 <line:1476:5, col:33> col:33 taskEntry 'TSK_ENTRY_FUNC':'void *(*)(UINT32)'
| | `-FullComment 0xe43740 <col:63, col:86>
| |   `-ParagraphComment 0xe43710 <col:63, col:86>
| |     `-TextComment 0xe436e0 <col:63, col:86> Text=" Task entrance function "
| |-FieldDecl 0xde6710 <main/los_compiler.h:327:23, main/los_task.h:1477:34> col:34 taskSem 'void *'
| | `-FullComment 0xe43810 <col:63, col:83>
| |   `-ParagraphComment 0xe437e0 <col:63, col:83>
| |     `-TextComment 0xe437b0 <col:63, col:83> Text=" Task-held semaphore "
| |-FieldDecl 0xde67a0 <main/los_compiler.h:327:23, main/los_task.h:1478:34> col:34 taskMux 'void *'
| | `-FullComment 0xe438e0 <col:63, col:79>
| |   `-ParagraphComment 0xe438b0 <col:63, col:79>
| |     `-TextComment 0xe43880 <col:63, col:79> Text=" Task-held mutex "
| |-FieldDecl 0xde6828 <line:1479:5, col:33> col:33 arg 'UINT32':'unsigned int'
| | `-FullComment 0xe439b0 <col:63, col:73>
| |   `-ParagraphComment 0xe43980 <col:63, col:73>
| |     `-TextComment 0xe43950 <col:63, col:73> Text=" Parameter "
| |-FieldDecl 0xde68b8 <line:1480:5, col:34> col:34 taskName 'CHAR *'
| | `-FullComment 0xe43a80 <col:63, col:73>
| |   `-ParagraphComment 0xe43a50 <col:63, col:73>
| |     `-TextComment 0xe43a20 <col:63, col:73> Text=" Task name "
| |-FieldDecl 0xde6948 <line:1481:5, col:33> col:33 pendList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| |-FieldDecl 0xde69a8 <line:1482:5, col:33> col:33 timerList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| |-FieldDecl 0xde6a08 <line:1483:5, col:33> col:33 joinList 'LOS_DL_LIST':'struct LOS_DL_LIST'
| |-FieldDecl 0xde6a68 <line:1484:5, col:33> col:33 joinRetval 'UINTPTR':'unsigned int'
| | `-FullComment 0xe43b50 <col:63, col:190>
| |   `-ParagraphComment 0xe43b20 <col:63, col:190>
| |     `-TextComment 0xe43af0 <col:63, col:190> Text=" Return value of the end of the task, If the task does not exit by itself, the ID of the task that killed the task is recorded. "
| |-FieldDecl 0xde6af8 <line:1485:5, col:33> col:33 event 'EVENT_CB_S':'struct tagEvent'
| |-FieldDecl 0xde6b58 <line:1486:5, col:33> col:33 eventMask 'UINT32':'unsigned int'
| | `-FullComment 0xe43c20 <col:63, col:74>
| |   `-ParagraphComment 0xe43bf0 <col:63, col:74>
| |     `-TextComment 0xe43bc0 <col:63, col:74> Text=" Event mask "
| |-FieldDecl 0xde6be8 <line:1487:5, col:33> col:33 eventMode 'UINT32':'unsigned int'
| | `-FullComment 0xe43cf0 <col:63, col:74>
| |   `-ParagraphComment 0xe43cc0 <col:63, col:74>
| |     `-TextComment 0xe43c90 <col:63, col:74> Text=" Event mode "
| |-FieldDecl 0xde6c80 <main/los_compiler.h:327:23, main/los_task.h:1488:34> col:34 msg 'void *'
| | `-FullComment 0xe43dc0 <col:63, col:90>
| |   `-ParagraphComment 0xe43d90 <col:63, col:90>
| |     `-TextComment 0xe43d60 <col:63, col:90> Text=" Memory allocated to queues "
| `-FieldDecl 0xde6d08 <line:1489:5, col:33> col:33 errorNo 'INT32':'int'
|-TypedefDecl 0xde6de8 <line:1465:1, line:1494:3> col:3 referenced LosTaskCB 'struct LosTaskCB':'LosTaskCB'
| |-ElaboratedType 0xde6d90 'struct LosTaskCB' sugar
| | `-RecordType 0xde61c0 'LosTaskCB'
| |   `-Record 0xde6138 ''
| `-FullComment 0xe43f30 <line:1462:3, line:1463:43>
|   |-ParagraphComment 0xe43e60 <line:1462:3>
|   | `-TextComment 0xe43e30 <col:3> Text=" "
|   |-VerbatimLineComment 0xe43e80 <col:4, col:21> Text=" los_task"
|   `-ParagraphComment 0xe43ef0 <line:1463:3, col:43>
|     `-TextComment 0xe43ec0 <col:3, col:43> Text=" Define the task control block structure."
|-RecordDecl 0xde6e58 <line:1496:9, line:1499:1> line:1496:9 struct definition
| |-FieldDecl 0xde8798 <line:1497:5, col:18> col:18 referenced runTask 'LosTaskCB *'
| `-FieldDecl 0xde87f8 <line:1498:5, col:18> col:18 newTask 'LosTaskCB *'
|-TypedefDecl 0xde88a8 <line:1496:1, line:1499:3> col:3 referenced LosTask 'struct LosTask':'LosTask'
| `-ElaboratedType 0xde8850 'struct LosTask' sugar
|   `-RecordType 0xde6ee0 'LosTask'
|     `-Record 0xde6e58 ''
|-RecordDecl 0xde8918 <line:1501:9, line:1505:1> line:1501:9 struct definition
| |-FieldDecl 0xde89d0 <line:1502:5, col:18> col:18 sortLink 'LOS_DL_LIST *'
| |-FieldDecl 0xde8a30 <line:1503:5, col:17> col:17 cursor 'UINT16':'unsigned short'
| `-FieldDecl 0xde8a90 <line:1504:5, col:17> col:17 reserved 'UINT16':'unsigned short'
|-TypedefDecl 0xde8b38 <line:1501:1, line:1505:3> col:3 TaskSortLinkAttr 'struct TaskSortLinkAttr':'TaskSortLinkAttr'
| `-ElaboratedType 0xde8ae0 'struct TaskSortLinkAttr' sugar
|   `-RecordType 0xde89a0 'TaskSortLinkAttr'
|     `-Record 0xde8918 ''
|-RecordDecl 0xde8bd0 <line:1511:9, line:1515:1> line:1511:16 struct TaskTimeSlice definition
| |-FullComment 0xe440a0 <line:1508:3, line:1509:24>
| | |-ParagraphComment 0xe43fd0 <line:1508:3>
| | | `-TextComment 0xe43fa0 <col:3> Text=" "
| | |-VerbatimLineComment 0xe43ff0 <col:4, col:21> Text=" los_task"
| | `-ParagraphComment 0xe44060 <line:1509:3, col:24>
| |   `-TextComment 0xe44030 <col:3, col:24> Text=" Time slice structure."
| |-FieldDecl 0xde8c80 <line:1512:5, col:30> col:30 task 'LosTaskCB *'
| | `-FullComment 0xe44170 <col:63, col:84>
| |   `-ParagraphComment 0xe44140 <col:63, col:84>
| |     `-TextComment 0xe44110 <col:63, col:84> Text=" Current running task "
| |-FieldDecl 0xde8d08 <line:1513:5, col:29> col:29 time 'UINT16':'unsigned short'
| | `-FullComment 0xe44240 <col:63, col:85>
| |   `-ParagraphComment 0xe44210 <col:63, col:85>
| |     `-TextComment 0xe441e0 <col:63, col:85> Text=" Expiration time point "
| `-FieldDecl 0xde8d98 <line:1514:5, col:29> col:29 tout 'UINT16':'unsigned short'
|   `-FullComment 0xe44310 <col:63, col:83>
|     `-ParagraphComment 0xe442e0 <col:63, col:83>
|       `-TextComment 0xe442b0 <col:63, col:83> Text=" Expiration duration "
|-TypedefDecl 0xde8e78 <line:1511:1, line:1515:3> col:3 OsTaskRobin 'struct TaskTimeSlice':'struct TaskTimeSlice'
| |-ElaboratedType 0xde8e20 'struct TaskTimeSlice' sugar
| | `-RecordType 0xde8c50 'struct TaskTimeSlice'
| |   `-Record 0xde8bd0 'TaskTimeSlice'
| `-FullComment 0xe44480 <line:1508:3, line:1509:24>
|   |-ParagraphComment 0xe443b0 <line:1508:3>
|   | `-TextComment 0xe44380 <col:3> Text=" "
|   |-VerbatimLineComment 0xe443d0 <col:4, col:21> Text=" los_task"
|   `-ParagraphComment 0xe44440 <line:1509:3, col:24>
|     `-TextComment 0xe44410 <col:3, col:24> Text=" Time slice structure."
|-RecordDecl 0xde8ee8 <line:1517:9, line:1520:1> line:1517:9 struct definition
| |-FieldDecl 0xde8fd8 <line:1518:5, col:20> col:11 maxCnt 'UINT8':'unsigned char'
| | `-ConstantExpr 0xde8fc0 <col:20> 'int'
| |   `-IntegerLiteral 0xde8f90 <col:20> 'int' 7
| `-FieldDecl 0xde9070 <line:1519:5, col:20> col:11 isFull 'UINT8':'unsigned char'
|   `-ConstantExpr 0xde9058 <col:20> 'int'
|     `-IntegerLiteral 0xde9028 <col:20> 'int' 1
|-TypedefDecl 0xde9118 <line:1517:1, line:1520:3> col:3 referenced TaskCountInfo 'struct TaskCountInfo':'TaskCountInfo'
| `-ElaboratedType 0xde90c0 'struct TaskCountInfo' sugar
|   `-RecordType 0xde8f70 'TaskCountInfo'
|     `-Record 0xde8ee8 ''
|-RecordDecl 0xde91b0 <line:1527:9, line:1532:1> line:1527:9 struct definition
| |-FullComment 0xe44640 <line:1523:3, line:1526:1>
| | |-ParagraphComment 0xe44520 <line:1523:3>
| | | `-TextComment 0xe444f0 <col:3> Text=" "
| | |-VerbatimLineComment 0xe44540 <col:4, col:21> Text=" los_task"
| | |-ParagraphComment 0xe445b0 <line:1524:3, col:37>
| | | `-TextComment 0xe44580 <col:3, col:37> Text=" Task switch information structure."
| | `-ParagraphComment 0xe44600 <line:1526:1>
| |   `-TextComment 0xe445d0 <col:1> Text=" "
| |-FieldDecl 0xde9260 <line:1528:5, col:11> col:11 idx 'UINT8':'unsigned char'
| |-FieldDecl 0xde92e0 <line:1529:5, col:19> col:19 cntInfo 'TaskCountInfo':'TaskCountInfo'
| |-FieldDecl 0xde9408 <line:1530:5, col:41> col:12 pid 'UINT16 [10]'
| `-FieldDecl 0xde9578 <line:1531:5, col:60> col:12 name 'CHAR [10][32]'
|-TypedefDecl 0xde9628 <line:1527:1, line:1532:3> col:3 TaskSwitchInfo 'struct TaskSwitchInfo':'TaskSwitchInfo'
| |-ElaboratedType 0xde95d0 'struct TaskSwitchInfo' sugar
| | `-RecordType 0xde9230 'TaskSwitchInfo'
| |   `-Record 0xde91b0 ''
| `-FullComment 0xe44800 <line:1523:3, line:1526:1>
|   |-ParagraphComment 0xe446e0 <line:1523:3>
|   | `-TextComment 0xe446b0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe44700 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xe44770 <line:1524:3, col:37>
|   | `-TextComment 0xe44740 <col:3, col:37> Text=" Task switch information structure."
|   `-ParagraphComment 0xe447c0 <line:1526:1>
|     `-TextComment 0xe44790 <col:1> Text=" "
|-VarDecl 0xdea890 <line:1538:1, col:29> col:29 used g_losTask 'LosTask':'LosTask' extern
|-VarDecl 0xdea938 <line:1545:1, col:29> col:29 used g_losTaskLock 'UINT16':'unsigned short' extern
| `-FullComment 0xe449c0 <line:1541:3, line:1544:1>
|   |-ParagraphComment 0xe448a0 <line:1541:3>
|   | `-TextComment 0xe44870 <col:3> Text=" "
|   |-VerbatimLineComment 0xe448c0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xe44930 <line:1542:3, col:18>
|   | `-TextComment 0xe44900 <col:3, col:18> Text=" Task lock flag."
|   `-ParagraphComment 0xe44980 <line:1544:1>
|     `-TextComment 0xe44950 <col:1> Text=" "
|-VarDecl 0xdea9d8 <line:1558:1, col:29> col:29 g_taskMaxNum 'UINT32':'unsigned int' extern
| `-FullComment 0xe44b80 <line:1554:3, line:1557:1>
|   |-ParagraphComment 0xe44a60 <line:1554:3>
|   | `-TextComment 0xe44a30 <col:3> Text=" "
|   |-VerbatimLineComment 0xe44a80 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xe44af0 <line:1555:3, col:27>
|   | `-TextComment 0xe44ac0 <col:3, col:27> Text=" Maximum number of tasks."
|   `-ParagraphComment 0xe44b40 <line:1557:1>
|     `-TextComment 0xe44b10 <col:1> Text=" "
|-VarDecl 0xdeaa78 <line:1565:1, col:29> col:29 g_idleTaskID 'UINT32':'unsigned int' extern
| `-FullComment 0xe44d40 <line:1561:3, line:1564:1>
|   |-ParagraphComment 0xe44c20 <line:1561:3>
|   | `-TextComment 0xe44bf0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe44c40 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xe44cb0 <line:1562:3, col:16>
|   | `-TextComment 0xe44c80 <col:3, col:16> Text=" Idle task ID."
|   `-ParagraphComment 0xe44d00 <line:1564:1>
|     `-TextComment 0xe44cd0 <col:1> Text=" "
|-VarDecl 0xdeab18 <line:1572:1, col:29> col:29 g_swtmrTaskID 'UINT32':'unsigned int' extern
| `-FullComment 0xe44f00 <line:1568:3, line:1571:1>
|   |-ParagraphComment 0xe44de0 <line:1568:3>
|   | `-TextComment 0xe44db0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe44e00 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xe44e70 <line:1569:3, col:26>
|   | `-TextComment 0xe44e40 <col:3, col:26> Text=" Software timer task ID."
|   `-ParagraphComment 0xe44ec0 <line:1571:1>
|     `-TextComment 0xe44e90 <col:1> Text=" "
|-VarDecl 0xdeabb8 <line:1579:1, col:30> col:30 g_taskCBArray 'LosTaskCB *' extern
| `-FullComment 0xe450c0 <line:1575:3, line:1578:1>
|   |-ParagraphComment 0xe44fa0 <line:1575:3>
|   | `-TextComment 0xe44f70 <col:3> Text=" "
|   |-VerbatimLineComment 0xe44fc0 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xe45030 <line:1576:3, col:30>
|   | `-TextComment 0xe45000 <col:3, col:30> Text=" Starting address of a task."
|   `-ParagraphComment 0xe45080 <line:1578:1>
|     `-TextComment 0xe45050 <col:1> Text=" "
|-VarDecl 0xdeac58 <line:1586:1, col:29> col:29 g_losFreeTask 'LOS_DL_LIST':'struct LOS_DL_LIST' extern
| `-FullComment 0xe45280 <line:1582:3, line:1585:1>
|   |-ParagraphComment 0xe45160 <line:1582:3>
|   | `-TextComment 0xe45130 <col:3> Text=" "
|   |-VerbatimLineComment 0xe45180 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xe451f0 <line:1583:3, col:25>
|   | `-TextComment 0xe451c0 <col:3, col:25> Text=" Free task linked list."
|   `-ParagraphComment 0xe45240 <line:1585:1>
|     `-TextComment 0xe45210 <col:1> Text=" "
|-VarDecl 0xdeacf8 <line:1593:1, col:29> col:29 g_taskRecycleList 'LOS_DL_LIST':'struct LOS_DL_LIST' extern
| `-FullComment 0xe45440 <line:1589:3, line:1592:1>
|   |-ParagraphComment 0xe45320 <line:1589:3>
|   | `-TextComment 0xe452f0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe45340 <col:4, col:21> Text=" los_task"
|   |-ParagraphComment 0xe453b0 <line:1590:3, col:73>
|   | `-TextComment 0xe45380 <col:3, col:73> Text=" Circular linked list that stores tasks that are deleted automatically."
|   `-ParagraphComment 0xe45400 <line:1592:1>
|     `-TextComment 0xe453d0 <col:1> Text=" "
|-FunctionDecl 0xdeae20 <line:1614:1, col:30> col:15 OsTaskInit 'UINT32 (void)' extern
| `-FullComment 0xe45dc0 <line:1596:3, line:1612:7>
|   |-ParagraphComment 0xe454e0 <line:1596:3>
|   | `-TextComment 0xe454b0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe45510 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe45580 <line:1597:3>
|   | `-TextComment 0xe45550 <col:3> Text=" "
|   |-BlockCommandComment 0xe455a0 <col:4, col:32> Name="brief"
|   | `-ParagraphComment 0xe45600 <col:10, col:32>
|   |   `-TextComment 0xe455d0 <col:10, col:32> Text=" Initialization a task."
|   |-ParagraphComment 0xe45650 <line:1599:3>
|   | `-TextComment 0xe45620 <col:3> Text=" "
|   |-BlockCommandComment 0xe45670 <col:4, line:1600:45> Name="par"
|   | `-ParagraphComment 0xe456f0 <line:1599:8, line:1600:45>
|   |   |-TextComment 0xe456a0 <line:1599:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe456c0 <line:1600:3, col:45> Text=" This API is used to initialization a task."
|   |-ParagraphComment 0xe45740 <line:1602:3>
|   | `-TextComment 0xe45710 <col:3> Text=" "
|   |-BlockCommandComment 0xe45760 <col:4, line:1605:8> Name="attention"
|   | `-ParagraphComment 0xe45930 <line:1603:3, line:1605:8>
|   |   |-TextComment 0xe45790 <line:1603:3> Text=" "
|   |   |-HTMLStartTagComment 0xe457b0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe457f0 <line:1604:3> Text=" "
|   |   |-HTMLStartTagComment 0xe45810 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe45850 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe45870 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe458a0 <line:1605:3> Text=" "
|   |   `-HTMLEndTagComment 0xe458c0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe45980 <line:1607:3>
|   | `-TextComment 0xe45950 <col:3> Text=" "
|   |-ParamCommandComment 0xe459a0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xe45a00 <<invalid sloc>>
|   |-ParagraphComment 0xe45a50 <line:1609:3>
|   | `-TextComment 0xe45a20 <col:3> Text=" "
|   |-BlockCommandComment 0xe45a70 <col:4, line:1610:3> Name="retval"
|   | `-ParagraphComment 0xe45af0 <line:1609:11, line:1610:3>
|   |   |-TextComment 0xe45aa0 <line:1609:11, col:44> Text="  UINT32    Initialization result."
|   |   `-TextComment 0xe45ac0 <line:1610:3> Text=" "
|   |-BlockCommandComment 0xe45b10 <col:4, line:1612:3> Name="par"
|   | `-ParagraphComment 0xe45ce0 <line:1610:8, line:1612:3>
|   |   |-TextComment 0xe45b40 <line:1610:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe45b60 <line:1611:3> Text=" "
|   |   |-HTMLStartTagComment 0xe45b80 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe45bc0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe45c00 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe45c20 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe45c50 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe45c80 <line:1612:3> Text=" "
|   `-BlockCommandComment 0xe45d00 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe45d30 <<invalid sloc>>
|-FunctionDecl 0xdeaf80 <line:1635:1, col:36> col:15 OsIdleTaskCreate 'UINT32 (void)' extern
| `-FullComment 0xe46730 <line:1617:3, line:1633:7>
|   |-ParagraphComment 0xe45e60 <line:1617:3>
|   | `-TextComment 0xe45e30 <col:3> Text=" "
|   |-VerbatimLineComment 0xe45e80 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe45ef0 <line:1618:3>
|   | `-TextComment 0xe45ec0 <col:3> Text=" "
|   |-BlockCommandComment 0xe45f10 <col:4, col:27> Name="brief"
|   | `-ParagraphComment 0xe45f70 <col:10, col:27>
|   |   `-TextComment 0xe45f40 <col:10, col:27> Text=" Create idle task."
|   |-ParagraphComment 0xe45fc0 <line:1620:3>
|   | `-TextComment 0xe45f90 <col:3> Text=" "
|   |-BlockCommandComment 0xe45fe0 <col:4, line:1621:40> Name="par"
|   | `-ParagraphComment 0xe46060 <line:1620:8, line:1621:40>
|   |   |-TextComment 0xe46010 <line:1620:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe46030 <line:1621:3, col:40> Text=" This API is used to create idle task."
|   |-ParagraphComment 0xe460b0 <line:1623:3>
|   | `-TextComment 0xe46080 <col:3> Text=" "
|   |-BlockCommandComment 0xe460d0 <col:4, line:1626:8> Name="attention"
|   | `-ParagraphComment 0xe462a0 <line:1624:3, line:1626:8>
|   |   |-TextComment 0xe46100 <line:1624:3> Text=" "
|   |   |-HTMLStartTagComment 0xe46120 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe46160 <line:1625:3> Text=" "
|   |   |-HTMLStartTagComment 0xe46180 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe461c0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe461e0 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe46210 <line:1626:3> Text=" "
|   |   `-HTMLEndTagComment 0xe46230 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe462f0 <line:1628:3>
|   | `-TextComment 0xe462c0 <col:3> Text=" "
|   |-ParamCommandComment 0xe46310 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xe46370 <<invalid sloc>>
|   |-ParagraphComment 0xe463c0 <line:1630:3>
|   | `-TextComment 0xe46390 <col:3> Text=" "
|   |-BlockCommandComment 0xe463e0 <col:4, line:1631:3> Name="retval"
|   | `-ParagraphComment 0xe46460 <line:1630:11, line:1631:3>
|   |   |-TextComment 0xe46410 <line:1630:11, col:35> Text="  UINT32   Create result."
|   |   `-TextComment 0xe46430 <line:1631:3> Text=" "
|   |-BlockCommandComment 0xe46480 <col:4, line:1633:3> Name="par"
|   | `-ParagraphComment 0xe46650 <line:1631:8, line:1633:3>
|   |   |-TextComment 0xe464b0 <line:1631:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe464d0 <line:1632:3> Text=" "
|   |   |-HTMLStartTagComment 0xe464f0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe46530 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe46570 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe46590 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe465c0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe465f0 <line:1633:3> Text=" "
|   `-BlockCommandComment 0xe46670 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe466a0 <<invalid sloc>>
|-FunctionDecl 0xdeb0e0 <line:1656:1, col:35> col:13 OsTaskSwitchCheck 'void (void)' extern
| `-FullComment 0xe470a0 <line:1638:3, line:1654:7>
|   |-ParagraphComment 0xe467d0 <line:1638:3>
|   | `-TextComment 0xe467a0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe467f0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe46860 <line:1639:3>
|   | `-TextComment 0xe46830 <col:3> Text=" "
|   |-BlockCommandComment 0xe46880 <col:4, col:28> Name="brief"
|   | `-ParagraphComment 0xe468e0 <col:10, col:28>
|   |   `-TextComment 0xe468b0 <col:10, col:28> Text=" Check task switch."
|   |-ParagraphComment 0xe46930 <line:1641:3>
|   | `-TextComment 0xe46900 <col:3> Text=" "
|   |-BlockCommandComment 0xe46950 <col:4, line:1642:41> Name="par"
|   | `-ParagraphComment 0xe469d0 <line:1641:8, line:1642:41>
|   |   |-TextComment 0xe46980 <line:1641:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe469a0 <line:1642:3, col:41> Text=" This API is used to check task switch."
|   |-ParagraphComment 0xe46a20 <line:1644:3>
|   | `-TextComment 0xe469f0 <col:3> Text=" "
|   |-BlockCommandComment 0xe46a40 <col:4, line:1647:8> Name="attention"
|   | `-ParagraphComment 0xe46c10 <line:1645:3, line:1647:8>
|   |   |-TextComment 0xe46a70 <line:1645:3> Text=" "
|   |   |-HTMLStartTagComment 0xe46a90 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe46ad0 <line:1646:3> Text=" "
|   |   |-HTMLStartTagComment 0xe46af0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe46b30 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe46b50 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe46b80 <line:1647:3> Text=" "
|   |   `-HTMLEndTagComment 0xe46ba0 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe46c60 <line:1649:3>
|   | `-TextComment 0xe46c30 <col:3> Text=" "
|   |-ParamCommandComment 0xe46c80 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xe46ce0 <<invalid sloc>>
|   |-ParagraphComment 0xe46d30 <line:1651:3>
|   | `-TextComment 0xe46d00 <col:3> Text=" "
|   |-BlockCommandComment 0xe46d50 <col:4, line:1652:3> Name="retval"
|   | `-ParagraphComment 0xe46dd0 <line:1651:11, line:1652:3>
|   |   |-TextComment 0xe46d80 <line:1651:11, col:17> Text="  None."
|   |   `-TextComment 0xe46da0 <line:1652:3> Text=" "
|   |-BlockCommandComment 0xe46df0 <col:4, line:1654:3> Name="par"
|   | `-ParagraphComment 0xe46fc0 <line:1652:8, line:1654:3>
|   |   |-TextComment 0xe46e20 <line:1652:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe46e40 <line:1653:3> Text=" "
|   |   |-HTMLStartTagComment 0xe46e60 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe46ea0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe46ee0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe46f00 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe46f30 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe46f60 <line:1654:3> Text=" "
|   `-BlockCommandComment 0xe46fe0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe47010 <<invalid sloc>>
|-FunctionDecl 0xdeb240 <line:1677:1, col:31> col:13 OsTaskMonInit 'void (void)' extern
| `-FullComment 0xe47a20 <line:1659:3, line:1675:7>
|   |-ParagraphComment 0xe47140 <line:1659:3>
|   | `-TextComment 0xe47110 <col:3> Text=" "
|   |-VerbatimLineComment 0xe47160 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe471d0 <line:1660:3>
|   | `-TextComment 0xe471a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe471f0 <col:4, col:22> Name="brief"
|   | `-ParagraphComment 0xe47250 <col:10, col:22>
|   |   `-TextComment 0xe47220 <col:10, col:22> Text=" TaskMonInit."
|   |-ParagraphComment 0xe472a0 <line:1662:3>
|   | `-TextComment 0xe47270 <col:3> Text=" "
|   |-BlockCommandComment 0xe472c0 <col:4, line:1663:35> Name="par"
|   | `-ParagraphComment 0xe47340 <line:1662:8, line:1663:35>
|   |   |-TextComment 0xe472f0 <line:1662:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe47310 <line:1663:3, col:35> Text=" This API is used to taskMonInit."
|   |-ParagraphComment 0xe47390 <line:1665:3>
|   | `-TextComment 0xe47360 <col:3> Text=" "
|   |-BlockCommandComment 0xe473b0 <col:4, line:1668:8> Name="attention"
|   | `-ParagraphComment 0xe47590 <line:1666:3, line:1668:8>
|   |   |-TextComment 0xe473e0 <line:1666:3> Text=" "
|   |   |-HTMLStartTagComment 0xe47400 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe47440 <line:1667:3> Text=" "
|   |   |-HTMLStartTagComment 0xe47460 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe474a0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe474c0 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe474f0 <line:1668:3> Text=" "
|   |   `-HTMLEndTagComment 0xe47520 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe475e0 <line:1670:3>
|   | `-TextComment 0xe475b0 <col:3> Text=" "
|   |-ParamCommandComment 0xe47600 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xe47660 <<invalid sloc>>
|   |-ParagraphComment 0xe476b0 <line:1672:3>
|   | `-TextComment 0xe47680 <col:3> Text=" "
|   |-BlockCommandComment 0xe476d0 <col:4, line:1673:3> Name="retval"
|   | `-ParagraphComment 0xe47750 <line:1672:11, line:1673:3>
|   |   |-TextComment 0xe47700 <line:1672:11, col:17> Text="  None."
|   |   `-TextComment 0xe47720 <line:1673:3> Text=" "
|   |-BlockCommandComment 0xe47770 <col:4, line:1675:3> Name="par"
|   | `-ParagraphComment 0xe47940 <line:1673:8, line:1675:3>
|   |   |-TextComment 0xe477a0 <line:1673:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe477c0 <line:1674:3> Text=" "
|   |   |-HTMLStartTagComment 0xe477e0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe47820 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe47860 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe47880 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe478b0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe478e0 <line:1675:3> Text=" "
|   `-BlockCommandComment 0xe47960 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe47990 <<invalid sloc>>
|-FunctionDecl 0xdeb3a8 <line:1698:1, col:38> col:13 used OsTaskEntry 'void (UINT32)' extern
| |-ParmVarDecl 0xdeb318 <col:25, col:32> col:32 taskID 'UINT32':'unsigned int'
| `-FullComment 0xe483c0 <line:1680:3, line:1696:7>
|   |-ParagraphComment 0xe47ac0 <line:1680:3>
|   | `-TextComment 0xe47a90 <col:3> Text=" "
|   |-VerbatimLineComment 0xe47ae0 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe47b50 <line:1681:3>
|   | `-TextComment 0xe47b20 <col:3> Text=" "
|   |-BlockCommandComment 0xe47b70 <col:4, col:21> Name="brief"
|   | `-ParagraphComment 0xe47bd0 <col:10, col:21>
|   |   `-TextComment 0xe47ba0 <col:10, col:21> Text=" Task entry."
|   |-ParagraphComment 0xe47c20 <line:1683:3>
|   | `-TextComment 0xe47bf0 <col:3> Text=" "
|   |-BlockCommandComment 0xe47c40 <col:4, line:1684:34> Name="par"
|   | `-ParagraphComment 0xe47cc0 <line:1683:8, line:1684:34>
|   |   |-TextComment 0xe47c70 <line:1683:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe47c90 <line:1684:3, col:34> Text=" This API is used to task entry."
|   |-ParagraphComment 0xe47d10 <line:1686:3>
|   | `-TextComment 0xe47ce0 <col:3> Text=" "
|   |-BlockCommandComment 0xe47d30 <col:4, line:1689:8> Name="attention"
|   | `-ParagraphComment 0xe47f00 <line:1687:3, line:1689:8>
|   |   |-TextComment 0xe47d60 <line:1687:3> Text=" "
|   |   |-HTMLStartTagComment 0xe47d80 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe47dc0 <line:1688:3> Text=" "
|   |   |-HTMLStartTagComment 0xe47de0 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe47e20 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe47e40 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe47e70 <line:1689:3> Text=" "
|   |   `-HTMLEndTagComment 0xe47e90 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe47f50 <line:1691:3>
|   | `-TextComment 0xe47f20 <col:3> Text=" "
|   |-ParamCommandComment 0xe47f70 <col:4, col:47> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xe48000 <col:18, col:47>
|   |   `-TextComment 0xe47fd0 <col:18, col:47> Text="  [IN] Type #UINT32   task id."
|   |-ParagraphComment 0xe48050 <line:1693:3>
|   | `-TextComment 0xe48020 <col:3> Text=" "
|   |-BlockCommandComment 0xe48070 <col:4, line:1694:3> Name="retval"
|   | `-ParagraphComment 0xe480f0 <line:1693:11, line:1694:3>
|   |   |-TextComment 0xe480a0 <line:1693:11, col:17> Text="  None."
|   |   `-TextComment 0xe480c0 <line:1694:3> Text=" "
|   |-BlockCommandComment 0xe48110 <col:4, line:1696:3> Name="par"
|   | `-ParagraphComment 0xe482e0 <line:1694:8, line:1696:3>
|   |   |-TextComment 0xe48140 <line:1694:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe48160 <line:1695:3> Text=" "
|   |   |-HTMLStartTagComment 0xe48180 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe481c0 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe48200 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe48220 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe48250 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe48280 <line:1696:3> Text=" "
|   `-BlockCommandComment 0xe48300 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe48330 <<invalid sloc>>
|-FunctionDecl 0xdeb518 <line:1719:1, col:47> col:15 OsGetTaskWaterLine 'UINT32 (UINT32)' extern
| |-ParmVarDecl 0xdeb488 <col:34, col:41> col:41 taskID 'UINT32':'unsigned int'
| `-FullComment 0xe48d90 <line:1701:3, line:1717:13>
|   |-ParagraphComment 0xe48460 <line:1701:3>
|   | `-TextComment 0xe48430 <col:3> Text=" "
|   |-VerbatimLineComment 0xe48480 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe484f0 <line:1702:3>
|   | `-TextComment 0xe484c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe48510 <col:4, col:34> Name="brief"
|   | `-ParagraphComment 0xe48570 <col:10, col:34>
|   |   `-TextComment 0xe48540 <col:10, col:34> Text=" Get the task water line."
|   |-ParagraphComment 0xe485c0 <line:1704:3>
|   | `-TextComment 0xe48590 <col:3> Text=" "
|   |-BlockCommandComment 0xe485e0 <col:4, line:1705:47> Name="par"
|   | `-ParagraphComment 0xe48660 <line:1704:8, line:1705:47>
|   |   |-TextComment 0xe48610 <line:1704:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe48630 <line:1705:3, col:47> Text=" This API is used to get the task water line."
|   |-ParagraphComment 0xe486b0 <line:1707:3>
|   | `-TextComment 0xe48680 <col:3> Text=" "
|   |-BlockCommandComment 0xe486d0 <col:4, line:1710:8> Name="attention"
|   | `-ParagraphComment 0xe488a0 <line:1708:3, line:1710:8>
|   |   |-TextComment 0xe48700 <line:1708:3> Text=" "
|   |   |-HTMLStartTagComment 0xe48720 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe48760 <line:1709:3> Text=" "
|   |   |-HTMLStartTagComment 0xe48780 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe487c0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe487e0 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe48810 <line:1710:3> Text=" "
|   |   `-HTMLEndTagComment 0xe48830 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe488f0 <line:1712:3>
|   | `-TextComment 0xe488c0 <col:3> Text=" "
|   |-ParamCommandComment 0xe48910 <col:4, col:44> [in] implicitly Param="taskID" ParamIndex=0
|   | `-ParagraphComment 0xe489a0 <col:18, col:44>
|   |   `-TextComment 0xe48970 <col:18, col:44> Text=" [IN] Type #UINT32 task id."
|   |-ParagraphComment 0xe489f0 <line:1714:3>
|   | `-TextComment 0xe489c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe48a10 <col:4, line:1715:3> Name="retval"
|   | `-ParagraphComment 0xe48a90 <line:1714:11, line:1715:3>
|   |   |-TextComment 0xe48a40 <line:1714:11, col:36> Text="  UINT32  Task water line."
|   |   `-TextComment 0xe48a60 <line:1715:3> Text=" "
|   |-BlockCommandComment 0xe48ab0 <col:4, line:1717:3> Name="par"
|   | `-ParagraphComment 0xe48c80 <line:1715:8, line:1717:3>
|   |   |-TextComment 0xe48ae0 <line:1715:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe48b00 <line:1716:3> Text=" "
|   |   |-HTMLStartTagComment 0xe48b20 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe48b60 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe48ba0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe48bc0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe48bf0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe48c20 <line:1717:3> Text=" "
|   `-BlockCommandComment 0xe48ca0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xe48d00 <col:8, col:13>
|       `-TextComment 0xe48cd0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xdeb6e8 <line:1740:1, col:51> col:15 OsConvertTskStatus 'UINT8 *(UINT16)' extern
| |-ParmVarDecl 0xdeb5f8 <col:34, col:41> col:41 taskStatus 'UINT16':'unsigned short'
| `-FullComment 0xe497a0 <line:1722:3, line:1738:13>
|   |-ParagraphComment 0xe48e30 <line:1722:3>
|   | `-TextComment 0xe48e00 <col:3> Text=" "
|   |-VerbatimLineComment 0xe48e50 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe48ec0 <line:1723:3>
|   | `-TextComment 0xe48e90 <col:3> Text=" "
|   |-BlockCommandComment 0xe48ee0 <col:4, col:40> Name="brief"
|   | `-ParagraphComment 0xe48f40 <col:10, col:40>
|   |   `-TextComment 0xe48f10 <col:10, col:40> Text=" Convert task status to string."
|   |-ParagraphComment 0xe48f90 <line:1725:3>
|   | `-TextComment 0xe48f60 <col:3> Text=" "
|   |-BlockCommandComment 0xe48fb0 <col:4, line:1726:53> Name="par"
|   | `-ParagraphComment 0xe49030 <line:1725:8, line:1726:53>
|   |   |-TextComment 0xe48fe0 <line:1725:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe49000 <line:1726:3, col:53> Text=" This API is used to convert task status to string."
|   |-ParagraphComment 0xe49080 <line:1728:3>
|   | `-TextComment 0xe49050 <col:3> Text=" "
|   |-BlockCommandComment 0xe490a0 <col:4, line:1731:8> Name="attention"
|   | `-ParagraphComment 0xe49270 <line:1729:3, line:1731:8>
|   |   |-TextComment 0xe490d0 <line:1729:3> Text=" "
|   |   |-HTMLStartTagComment 0xe490f0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe49130 <line:1730:3> Text=" "
|   |   |-HTMLStartTagComment 0xe49150 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe49190 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe491b0 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe491e0 <line:1731:3> Text=" "
|   |   `-HTMLEndTagComment 0xe49200 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe492c0 <line:1733:3>
|   | `-TextComment 0xe49290 <col:3> Text=" "
|   |-ParamCommandComment 0xe492e0 <col:4, col:52> [in] implicitly Param="taskStatus" ParamIndex=0
|   | `-ParagraphComment 0xe49370 <col:22, col:52>
|   |   `-TextComment 0xe49340 <col:22, col:52> Text=" [IN] Type #UINT16 task status."
|   |-ParagraphComment 0xe493c0 <line:1735:3>
|   | `-TextComment 0xe49390 <col:3> Text=" "
|   |-BlockCommandComment 0xe493e0 <col:4, line:1736:3> Name="retval"
|   | `-ParagraphComment 0xe49460 <line:1735:11, line:1736:3>
|   |   |-TextComment 0xe49410 <line:1735:11, col:28> Text="  UINT8 *  String."
|   |   `-TextComment 0xe49430 <line:1736:3> Text=" "
|   |-BlockCommandComment 0xe49480 <col:4, line:1738:3> Name="par"
|   | `-ParagraphComment 0xe49690 <line:1736:8, line:1738:3>
|   |   |-TextComment 0xe494b0 <line:1736:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe494d0 <line:1737:3> Text=" "
|   |   |-HTMLStartTagComment 0xe49530 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe49570 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe495b0 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe495d0 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe49600 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe49630 <line:1738:3> Text=" "
|   `-BlockCommandComment 0xe496b0 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xe49710 <col:8, col:13>
|       `-TextComment 0xe496e0 <col:8, col:13> Text=" None."
|-FunctionDecl 0xdebc60 <line:1761:1, col:35> col:15 OsGetAllTskInfo 'UINT32 (void)' extern
| `-FullComment 0xe4a140 <line:1743:3, line:1759:13>
|   |-ParagraphComment 0xe49840 <line:1743:3>
|   | `-TextComment 0xe49810 <col:3> Text=" "
|   |-VerbatimLineComment 0xe49860 <col:4, col:22> Text="  los_task"
|   |-ParagraphComment 0xe498d0 <line:1744:3>
|   | `-TextComment 0xe498a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe498f0 <col:4, col:35> Name="brief"
|   | `-ParagraphComment 0xe49950 <col:10, col:35>
|   |   `-TextComment 0xe49920 <col:10, col:35> Text=" Get all task information."
|   |-ParagraphComment 0xe499a0 <line:1746:3>
|   | `-TextComment 0xe49970 <col:3> Text=" "
|   |-BlockCommandComment 0xe499c0 <col:4, line:1747:48> Name="par"
|   | `-ParagraphComment 0xe49a40 <line:1746:8, line:1747:48>
|   |   |-TextComment 0xe499f0 <line:1746:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe49a10 <line:1747:3, col:48> Text=" This API is used to get all task information."
|   |-ParagraphComment 0xe49a90 <line:1749:3>
|   | `-TextComment 0xe49a60 <col:3> Text=" "
|   |-BlockCommandComment 0xe49ab0 <col:4, line:1752:8> Name="attention"
|   | `-ParagraphComment 0xe49c80 <line:1750:3, line:1752:8>
|   |   |-TextComment 0xe49ae0 <line:1750:3> Text=" "
|   |   |-HTMLStartTagComment 0xe49b00 <col:4, col:7> Name="ul"
|   |   |-TextComment 0xe49b40 <line:1751:3> Text=" "
|   |   |-HTMLStartTagComment 0xe49b60 <col:4, col:7> Name="li"
|   |   |-TextComment 0xe49ba0 <col:8, col:12> Text="None."
|   |   |-HTMLEndTagComment 0xe49bc0 <col:13, col:17> Name="li"
|   |   |-TextComment 0xe49bf0 <line:1752:3> Text=" "
|   |   `-HTMLEndTagComment 0xe49c10 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0xe49cd0 <line:1754:3>
|   | `-TextComment 0xe49ca0 <col:3> Text=" "
|   |-ParamCommandComment 0xe49cf0 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xe49d50 <<invalid sloc>>
|   |-ParagraphComment 0xe49da0 <line:1756:3>
|   | `-TextComment 0xe49d70 <col:3> Text=" "
|   |-BlockCommandComment 0xe49dc0 <col:4, line:1757:3> Name="retval"
|   | `-ParagraphComment 0xe49e40 <line:1756:11, line:1757:3>
|   |   |-TextComment 0xe49df0 <line:1756:11, col:41> Text="  UINT32  All task information."
|   |   `-TextComment 0xe49e10 <line:1757:3> Text=" "
|   |-BlockCommandComment 0xe49e60 <col:4, line:1759:3> Name="par"
|   | `-ParagraphComment 0xe4a030 <line:1757:8, line:1759:3>
|   |   |-TextComment 0xe49e90 <line:1757:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe49eb0 <line:1758:3> Text=" "
|   |   |-HTMLStartTagComment 0xe49ed0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe49f10 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe49f50 <col:12, col:73> Text="los_task.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe49f70 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0xe49fa0 <col:79, col:83> Name="ul"
|   |   `-TextComment 0xe49fd0 <line:1759:3> Text=" "
|   `-BlockCommandComment 0xe4a050 <col:4, col:13> Name="see"
|     `-ParagraphComment 0xe4a0b0 <col:8, col:13>
|       `-TextComment 0xe4a080 <col:8, col:13> Text=" None."
|-FunctionDecl 0xdebf40 <line:1763:1, col:83> col:14 OsTskUserStackInit 'void *(void *, void *, UINT32)' extern
| |-ParmVarDecl 0xdebd18 <main/los_compiler.h:327:23, main/los_task.h:1763:39> col:39 stackPtr 'void *'
| |-ParmVarDecl 0xdebd98 <main/los_compiler.h:327:23, main/los_task.h:1763:55> col:55 userSP 'void *'
| `-ParmVarDecl 0xdebe10 <col:63, col:70> col:70 userStackSize 'UINT32':'unsigned int'
|-FunctionDecl 0xdec168 <line:1765:1, col:53> col:15 OsPmEnterHandlerSet 'UINT32 (void (*)(void))' extern
| `-ParmVarDecl 0xdec0a0 <main/los_compiler.h:327:23, main/los_task.h:1765:52> col:42 func 'void (*)(void)'
|-FunctionDecl 0xdec308 <main/los_compiler.h:158:22, main/los_task.h:1770:1> line:1767:26 OsCurrTaskGet 'LosTaskCB *(void)' static inline
| `-CompoundStmt 0xdec420 <line:1768:1, line:1770:1>
|   `-ReturnStmt 0xdec410 <line:1769:5, col:22>
|     `-ImplicitCastExpr 0xdec3f8 <col:12, col:22> 'LosTaskCB *' <LValueToRValue>
|       `-MemberExpr 0xdec3c8 <col:12, col:22> 'LosTaskCB *' lvalue .runTask 0xde8798
|         `-DeclRefExpr 0xdec3a8 <col:12> 'LosTask':'LosTask' lvalue Var 0xdea890 'g_losTask' 'LosTask':'LosTask'
|-FunctionDecl 0xdec4d0 <line:1772:1, col:36> col:13 LOS_TaskResRecycle 'void (void)' extern
|-VarDecl 0xdec580 <main/los_sched.h:49:1, col:15> col:15 used g_taskScheduled 'UINT32':'unsigned int' extern
|-TypedefDecl 0xdec6e8 <line:50:1, col:31> col:16 referenced SchedScan 'BOOL (*)(void)'
| `-PointerType 0xdec690 'BOOL (*)(void)'
|   `-ParenType 0xdec660 'BOOL (void)' sugar
|     `-FunctionProtoType 0xde3a40 'BOOL (void)' cdecl
|       `-TypedefType 0xc90060 'BOOL' sugar
|         |-Typedef 0xc84368 'BOOL'
|         `-BuiltinType 0xc20ee0 'unsigned int'
|-FunctionDecl 0xdec7e0 <main/los_compiler.h:327:23, main/los_sched.h:52:55> col:6 OsSchedResetSchedResponseTime 'void (UINT64)'
| `-ParmVarDecl 0xdec750 <col:36, col:43> col:43 responseTime 'UINT64':'unsigned long long'
|-FunctionDecl 0xdec988 <main/los_compiler.h:327:23, main/los_sched.h:54:54> col:6 OsSchedSetIdleTaskSchedParam 'void (LosTaskCB *)'
| `-ParmVarDecl 0xdec898 <col:35, col:46> col:46 idleTask 'LosTaskCB *'
|-FunctionDecl 0xdecb58 <line:56:1, col:47> col:8 OsSchedSwtmrScanRegister 'UINT32 (SchedScan)'
| `-ParmVarDecl 0xdeca60 <col:33, col:43> col:43 func 'SchedScan':'BOOL (*)(void)'
|-FunctionDecl 0xdedfe8 <main/los_compiler.h:327:23, main/los_sched.h:58:34> col:6 OsSchedUpdateExpireTime 'void (void)'
|-FunctionDecl 0xdee128 <line:60:1, col:49> col:8 OsSchedGetNextExpireTime 'UINT64 (UINT64)'
| `-ParmVarDecl 0xdee098 <col:33, col:40> col:40 startTime 'UINT64':'unsigned long long'
|-FunctionDecl 0xdee270 <main/los_compiler.h:327:23, main/los_sched.h:62:42> col:6 OsSchedTaskDeQueue 'void (LosTaskCB *)'
| `-ParmVarDecl 0xdee1e0 <col:25, col:36> col:36 taskCB 'LosTaskCB *'
|-FunctionDecl 0xdee3b8 <main/los_compiler.h:327:23, main/los_sched.h:64:42> col:6 OsSchedTaskEnQueue 'void (LosTaskCB *)'
| `-ParmVarDecl 0xdee328 <col:25, col:36> col:36 taskCB 'LosTaskCB *'
|-FunctionDecl 0xdee5f8 <main/los_compiler.h:327:23, main/los_sched.h:66:55> col:6 OsSchedTaskWait 'void (LOS_DL_LIST *, UINT32)'
| |-ParmVarDecl 0xdee470 <col:22, col:35> col:35 list 'LOS_DL_LIST *'
| `-ParmVarDecl 0xdee4e8 <col:41, col:48> col:48 timeout 'UINT32':'unsigned int'
|-FunctionDecl 0xdee748 <main/los_compiler.h:327:23, main/los_sched.h:68:44> col:6 OsSchedTaskWake 'void (LosTaskCB *)'
| `-ParmVarDecl 0xdee6b8 <col:22, col:33> col:33 resumedTask 'LosTaskCB *'
|-FunctionDecl 0xdee988 <line:70:1, col:68> col:6 OsSchedModifyTaskSchedParam 'BOOL (LosTaskCB *, UINT16)'
| |-ParmVarDecl 0xdee800 <col:34, col:45> col:45 taskCB 'LosTaskCB *'
| `-ParmVarDecl 0xdee878 <col:53, col:60> col:60 priority 'UINT16':'unsigned short'
|-FunctionDecl 0xdeebd8 <main/los_compiler.h:327:23, main/los_sched.h:72:50> col:6 OsSchedDelay 'void (LosTaskCB *, UINT32)'
| |-ParmVarDecl 0xdeea48 <col:19, col:30> col:30 runTask 'LosTaskCB *'
| `-ParmVarDecl 0xdeeac0 <col:39, col:46> col:46 tick 'UINT32':'unsigned int'
|-FunctionDecl 0xdeed20 <main/los_compiler.h:327:23, main/los_sched.h:74:23> col:6 OsSchedYield 'void (void)'
|-FunctionDecl 0xdeee60 <main/los_compiler.h:327:23, main/los_sched.h:76:39> col:6 OsSchedTaskExit 'void (LosTaskCB *)'
| `-ParmVarDecl 0xdeedd0 <col:22, col:33> col:33 taskCB 'LosTaskCB *'
|-FunctionDecl 0xdef000 <main/los_compiler.h:327:23, main/los_sched.h:78:38> col:6 OsSchedSuspend 'void (LosTaskCB *)'
| `-ParmVarDecl 0xdeef70 <col:21, col:32> col:32 taskCB 'LosTaskCB *'
|-FunctionDecl 0xdef1a8 <line:80:1, col:37> col:6 OsSchedResume 'BOOL (LosTaskCB *)'
| `-ParmVarDecl 0xdef0b8 <col:20, col:31> col:31 taskCB 'LosTaskCB *'
|-FunctionDecl 0xdef2e8 <main/los_compiler.h:327:23, main/los_sched.h:82:22> col:6 OsSchedTick 'void (void)'
|-FunctionDecl 0xdef420 <line:84:1, col:24> col:8 OsSchedInit 'UINT32 (void)'
|-FunctionDecl 0xdef558 <main/los_compiler.h:327:23, main/los_sched.h:86:23> col:6 used OsSchedStart 'void (void)'
|-FunctionDecl 0xdef690 <line:88:1, col:28> col:6 used OsSchedTaskSwitch 'BOOL (void)'
|-FunctionDecl 0xdef7c8 <line:90:1, col:29> col:12 OsGetTopTask 'LosTaskCB *(void)'
|-FunctionDecl 0xdef900 <main/los_compiler.h:158:22, main/los_sched.h:95:1> line:92:22 OsGetCurrSchedTimeCycle 'UINT64 (void)' static inline
| `-CompoundStmt 0xdefa88 <line:93:1, line:95:1>
|   `-ReturnStmt 0xdefa50 <line:94:5, col:28>
|     `-CallExpr 0xdefa30 <col:12, col:28> 'UINT64':'unsigned long long'
|       `-ImplicitCastExpr 0xdefa18 <col:12> 'UINT64 (*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0xdef9a0 <col:12> 'UINT64 (void)' Function 0xdca8b8 'LOS_SysCycleGet' 'UINT64 (void)'
|-FunctionDecl 0xdefb38 <line:113:1, col:45> col:15 LOS_SchedTickTimeoutNsGet 'UINT64 (void)' extern
| `-FullComment 0xe4a940 <line:98:3, line:111:7>
|   |-ParagraphComment 0xe4a1e0 <line:98:3>
|   | `-TextComment 0xe4a1b0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe4a200 <col:4, col:22> Text=" los_sched"
|   |-ParagraphComment 0xe4a270 <line:99:3>
|   | `-TextComment 0xe4a240 <col:3> Text=" "
|   |-BlockCommandComment 0xe4a290 <col:4, col:90> Name="brief"
|   | `-ParagraphComment 0xe4a2f0 <col:10, col:90>
|   |   `-TextComment 0xe4a2c0 <col:10, col:90> Text=" Get the time, in nanoseconds, remaining before the next tick interrupt response."
|   |-ParagraphComment 0xe4a340 <line:101:3>
|   | `-TextComment 0xe4a310 <col:3> Text=" "
|   |-BlockCommandComment 0xe4a360 <col:4, line:102:103> Name="par"
|   | `-ParagraphComment 0xe4a3e0 <line:101:8, line:102:103>
|   |   |-TextComment 0xe4a390 <line:101:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe4a3b0 <line:102:3, col:103> Text=" This API is used to get the time, in nanoseconds, remaining before the next tick interrupt response."
|   |-ParagraphComment 0xe4a430 <line:104:3>
|   | `-TextComment 0xe4a400 <col:3> Text=" "
|   |-BlockCommandComment 0xe4a450 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xe4a4b0 <col:14, col:19>
|   |   `-TextComment 0xe4a480 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xe4a500 <line:106:3>
|   | `-TextComment 0xe4a4d0 <col:3> Text=" "
|   |-ParamCommandComment 0xe4a520 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xe4a580 <<invalid sloc>>
|   |-ParagraphComment 0xe4a5d0 <line:108:3>
|   | `-TextComment 0xe4a5a0 <col:3> Text=" "
|   |-BlockCommandComment 0xe4a5f0 <col:4, line:109:3> Name="retval"
|   | `-ParagraphComment 0xe4a670 <line:108:11, line:109:3>
|   |   |-TextComment 0xe4a620 <line:108:11, col:33> Text=" #time, in nanoseconds."
|   |   `-TextComment 0xe4a640 <line:109:3> Text=" "
|   |-BlockCommandComment 0xe4a690 <col:4, line:111:3> Name="par"
|   | `-ParagraphComment 0xe4a860 <line:109:8, line:111:3>
|   |   |-TextComment 0xe4a6c0 <line:109:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe4a6e0 <line:110:3> Text=" "
|   |   |-HTMLStartTagComment 0xe4a700 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe4a740 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe4a780 <col:12, col:74> Text="los_sched.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe4a7a0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xe4a7d0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xe4a800 <line:111:3> Text=" "
|   `-BlockCommandComment 0xe4a880 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe4a8b0 <<invalid sloc>>
|-FunctionDecl 0xdefca0 <line:131:1, col:38> col:13 LOS_SchedTickHandler 'void (void)' extern
| `-FullComment 0xe4b140 <line:116:3, line:129:7>
|   |-ParagraphComment 0xe4a9e0 <line:116:3>
|   | `-TextComment 0xe4a9b0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe4aa00 <col:4, col:22> Text=" los_sched"
|   |-ParagraphComment 0xe4aa70 <line:117:3>
|   | `-TextComment 0xe4aa40 <col:3> Text=" "
|   |-BlockCommandComment 0xe4aa90 <col:4, col:53> Name="brief"
|   | `-ParagraphComment 0xe4aaf0 <col:10, col:53>
|   |   `-TextComment 0xe4aac0 <col:10, col:53> Text=" The system-provided tick interrupt handler."
|   |-ParagraphComment 0xe4ab40 <line:119:3>
|   | `-TextComment 0xe4ab10 <col:3> Text=" "
|   |-BlockCommandComment 0xe4ab60 <col:4, line:120:62> Name="par"
|   | `-ParagraphComment 0xe4abe0 <line:119:8, line:120:62>
|   |   |-TextComment 0xe4ab90 <line:119:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe4abb0 <line:120:3, col:62> Text=" This API is used to wake up a task that is blocked by time."
|   |-ParagraphComment 0xe4ac30 <line:122:3>
|   | `-TextComment 0xe4ac00 <col:3> Text=" "
|   |-BlockCommandComment 0xe4ac50 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xe4acb0 <col:14, col:19>
|   |   `-TextComment 0xe4ac80 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xe4ad00 <line:124:3>
|   | `-TextComment 0xe4acd0 <col:3> Text=" "
|   |-ParamCommandComment 0xe4ad20 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xe4ad80 <<invalid sloc>>
|   |-ParagraphComment 0xe4add0 <line:126:3>
|   | `-TextComment 0xe4ada0 <col:3> Text=" "
|   |-BlockCommandComment 0xe4adf0 <col:4, line:127:3> Name="retval"
|   | `-ParagraphComment 0xe4ae70 <line:126:11, line:127:3>
|   |   |-TextComment 0xe4ae20 <line:126:11, col:16> Text=" None."
|   |   `-TextComment 0xe4ae40 <line:127:3> Text=" "
|   |-BlockCommandComment 0xe4ae90 <col:4, line:129:3> Name="par"
|   | `-ParagraphComment 0xe4b060 <line:127:8, line:129:3>
|   |   |-TextComment 0xe4aec0 <line:127:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe4aee0 <line:128:3> Text=" "
|   |   |-HTMLStartTagComment 0xe4af00 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe4af40 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe4af80 <col:12, col:74> Text="los_sched.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe4afa0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xe4afd0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xe4b000 <line:129:3> Text=" "
|   `-BlockCommandComment 0xe4b080 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe4b0b0 <<invalid sloc>>
|-FunctionDecl 0xdefe00 <line:149:1, col:30> col:13 LOS_Schedule 'void (void)' extern
| `-FullComment 0xe4b960 <line:134:3, line:147:7>
|   |-ParagraphComment 0xe4b1e0 <line:134:3>
|   | `-TextComment 0xe4b1b0 <col:3> Text=" "
|   |-VerbatimLineComment 0xe4b200 <col:4, col:22> Text=" los_sched"
|   |-ParagraphComment 0xe4b270 <line:135:3>
|   | `-TextComment 0xe4b240 <col:3> Text=" "
|   |-BlockCommandComment 0xe4b290 <col:4, col:36> Name="brief"
|   | `-ParagraphComment 0xe4b2f0 <col:10, col:36>
|   |   `-TextComment 0xe4b2c0 <col:10, col:36> Text=" Trigger a system dispatch."
|   |-ParagraphComment 0xe4b340 <line:137:3>
|   | `-TextComment 0xe4b310 <col:3> Text=" "
|   |-BlockCommandComment 0xe4b360 <col:4, line:138:49> Name="par"
|   | `-ParagraphComment 0xe4b3e0 <line:137:8, line:138:49>
|   |   |-TextComment 0xe4b390 <line:137:8, col:20> Text=" Description:"
|   |   `-TextComment 0xe4b3b0 <line:138:3, col:49> Text=" This API is used to trigger a system dispatch."
|   |-ParagraphComment 0xe4b430 <line:140:3>
|   | `-TextComment 0xe4b400 <col:3> Text=" "
|   |-BlockCommandComment 0xe4b450 <col:4, col:19> Name="attention"
|   | `-ParagraphComment 0xe4b4b0 <col:14, col:19>
|   |   `-TextComment 0xe4b480 <col:14, col:19> Text=" None."
|   |-ParagraphComment 0xe4b500 <line:142:3>
|   | `-TextComment 0xe4b4d0 <col:3> Text=" "
|   |-ParamCommandComment 0xe4b540 <col:4, col:16> [in] implicitly Param="None."
|   | `-ParagraphComment 0xe4b5a0 <<invalid sloc>>
|   |-ParagraphComment 0xe4b5f0 <line:144:3>
|   | `-TextComment 0xe4b5c0 <col:3> Text=" "
|   |-BlockCommandComment 0xe4b610 <col:4, line:145:3> Name="retval"
|   | `-ParagraphComment 0xe4b690 <line:144:11, line:145:3>
|   |   |-TextComment 0xe4b640 <line:144:11, col:16> Text=" None."
|   |   `-TextComment 0xe4b660 <line:145:3> Text=" "
|   |-BlockCommandComment 0xe4b6b0 <col:4, line:147:3> Name="par"
|   | `-ParagraphComment 0xe4b880 <line:145:8, line:147:3>
|   |   |-TextComment 0xe4b6e0 <line:145:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0xe4b700 <line:146:3> Text=" "
|   |   |-HTMLStartTagComment 0xe4b720 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0xe4b760 <col:8, col:11> Name="li"
|   |   |-TextComment 0xe4b7a0 <col:12, col:74> Text="los_sched.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0xe4b7c0 <col:75, col:79> Name="li"
|   |   |-HTMLEndTagComment 0xe4b7f0 <col:80, col:84> Name="ul"
|   |   `-TextComment 0xe4b820 <line:147:3> Text=" "
|   `-BlockCommandComment 0xe4b8a0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0xe4b8d0 <<invalid sloc>>
|-FunctionDecl 0xdf0d90 <main/los_compiler.h:327:23, main/los_arch_timer.h:45:26> col:6 SysTick_Handler 'void (void)'
|-RecordDecl 0xdf0e30 <line:57:9, line:64:1> line:57:9 struct definition
| |-FieldDecl 0xdf0ee0 <line:58:5, col:12> col:12 CTRL 'UINT32':'unsigned int'
| |-FieldDecl 0xdf0f40 <line:59:5, col:12> col:12 VAL 'UINT64':'unsigned long long'
| |-FieldDecl 0xdf0fa0 <line:60:5, col:12> col:12 UPDATE 'UINT32':'unsigned int'
| |-FieldDecl 0xdf1000 <line:61:5, col:12> col:12 ALARM 'UINT64':'unsigned long long'
| |-FieldDecl 0xdf1060 <line:62:5, col:12> col:12 LOAD 'UINT64':'unsigned long long'
| `-FieldDecl 0xdf10c0 <line:63:5, col:12> col:12 LOAD_TRI 'UINT32':'unsigned int'
|-TypedefDecl 0xdf1168 <line:57:1, line:64:3> col:3 Systick_t 'struct Systick_t':'Systick_t'
| `-ElaboratedType 0xdf1110 'struct Systick_t' sugar
|   `-RecordType 0xdf0eb0 'Systick_t'
|     `-Record 0xdf0e30 ''
|-FunctionDecl 0xdf1270 <main/los_compiler.h:158:22, main/los_arch_timer.h:71:1> line:66:22 GetCcount 'UINT32 (void)' static inline
| `-CompoundStmt 0xdf1500 <line:67:1, line:71:1>
|   |-DeclStmt 0xdf1388 <line:68:5, col:19>
|   | `-VarDecl 0xdf1320 <col:5, col:12> col:12 used intSave 'UINT32':'unsigned int'
|   |-GCCAsmStmt 0xdf1448 <line:69:5, col:60>
|   | `-DeclRefExpr 0xdf1428 <col:50> 'UINT32':'unsigned int' lvalue Var 0xdf1320 'intSave' 'UINT32':'unsigned int'
|   `-ReturnStmt 0xdf14f0 <line:70:5, col:12>
|     `-ImplicitCastExpr 0xdf14d8 <col:12> 'UINT32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0xdf14b8 <col:12> 'UINT32':'unsigned int' lvalue Var 0xdf1320 'intSave' 'UINT32':'unsigned int'
|-FunctionDecl 0xdf15c0 <main/los_compiler.h:158:22, main/los_arch_timer.h:76:1> line:73:20 ResetCcount 'void (void)' static inline
| `-CompoundStmt 0xdf17b8 <line:74:1, line:76:1>
|   `-GCCAsmStmt 0xdf1748 <line:75:5, col:59>
|     `-IntegerLiteral 0xdf1728 <col:57> 'int' 0
|-FunctionDecl 0xdf1868 <main/los_compiler.h:158:22, main/los_arch_timer.h:83:1> line:78:22 GetCcompare 'UINT32 (void)' static inline
| `-CompoundStmt 0xdf1b00 <line:79:1, line:83:1>
|   |-DeclStmt 0xdf1980 <line:80:5, col:19>
|   | `-VarDecl 0xdf1918 <col:5, col:12> col:12 used intSave 'UINT32':'unsigned int'
|   |-GCCAsmStmt 0xdf1a48 <line:81:5, col:63>
|   | `-DeclRefExpr 0xdf1a28 <col:53> 'UINT32':'unsigned int' lvalue Var 0xdf1918 'intSave' 'UINT32':'unsigned int'
|   `-ReturnStmt 0xdf1af0 <line:82:5, col:12>
|     `-ImplicitCastExpr 0xdf1ad8 <col:12> 'UINT32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0xdf1ab8 <col:12> 'UINT32':'unsigned int' lvalue Var 0xdf1918 'intSave' 'UINT32':'unsigned int'
|-FunctionDecl 0xdf1bc8 <main/los_compiler.h:158:22, main/los_arch_timer.h:88:1> line:85:20 SetCcompare 'void (UINT32)' static inline
| |-ParmVarDecl 0xdf1b38 <col:32, col:39> col:39 used newCompareVal 'UINT32':'unsigned int'
| `-CompoundStmt 0xdf4038 <line:86:1, line:88:1>
|   `-GCCAsmStmt 0xdf1d30 <line:87:5, col:75>
|     `-ImplicitCastExpr 0xdf1d18 <col:61> 'UINT32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0xdf1cf8 <col:61> 'UINT32':'unsigned int' lvalue ParmVar 0xdf1b38 'newCompareVal' 'UINT32':'unsigned int'
|-EnumDecl 0xdf4050 <main/los_debug.h:74:9, line:80:1> line:74:9
| |-EnumConstantDecl 0xdf4110 <line:75:5> col:5 EXC_REBOOT 'int'
| |-EnumConstantDecl 0xdf4160 <line:76:5> col:5 EXC_ASSERT 'int'
| |-EnumConstantDecl 0xdf41b0 <line:77:5> col:5 EXC_STACKOVERFLOW 'int'
| |-EnumConstantDecl 0xdf4200 <line:78:5> col:5 EXC_INTERRUPT 'int'
| `-EnumConstantDecl 0xdf4250 <line:79:5> col:5 EXC_TYPE_END 'int'
|-TypedefDecl 0xdf42f8 <line:74:1, line:80:3> col:3 referenced EXC_TYPE 'enum EXC_TYPE':'EXC_TYPE'
| `-ElaboratedType 0xdf42a0 'enum EXC_TYPE' sugar
|   `-EnumType 0xdf40f0 'EXC_TYPE'
|     `-Enum 0xdf4050 ''
|-TypedefDecl 0xdf4530 <line:82:1, col:43> col:16 referenced ExcHookFn 'void (*)(EXC_TYPE)'
| `-PointerType 0xdf44d0 'void (*)(EXC_TYPE)'
|   `-ParenType 0xdf4470 'void (EXC_TYPE)' sugar
|     `-FunctionProtoType 0xdf4440 'void (EXC_TYPE)' cdecl
|       |-BuiltinType 0xc20da0 'void'
|       `-TypedefType 0xdf4370 'EXC_TYPE' sugar
|         |-Typedef 0xdf42f8 'EXC_TYPE'
|         `-ElaboratedType 0xdf42a0 'enum EXC_TYPE' sugar
|           `-EnumType 0xdf40f0 'EXC_TYPE'
|             `-Enum 0xdf4050 ''
|-FunctionDecl 0xdf46b8 <main/los_compiler.h:327:23, main/los_debug.h:84:43> col:6 OsExcHookRegister 'void (ExcHookFn)'
| `-ParmVarDecl 0xdf45c0 <col:24, col:34> col:34 excHookFn 'ExcHookFn':'void (*)(EXC_TYPE)'
|-FunctionDecl 0xdf4800 <main/los_compiler.h:327:23, main/los_debug.h:86:34> col:6 OsDoExcHook 'void (EXC_TYPE)'
| `-ParmVarDecl 0xdf4770 <col:18, col:27> col:27 excType 'EXC_TYPE':'EXC_TYPE'
|-EnumDecl 0xdf48a8 <line:104:9, line:108:1> line:104:9
| |-EnumConstantDecl 0xdf4970 <line:105:5> col:5 LOG_MODULE_KERNEL 'int'
| |-EnumConstantDecl 0xdf49c0 <line:106:5> col:5 LOG_MODULE_FS 'int'
| `-EnumConstantDecl 0xdf4a10 <line:107:5> col:5 LOS_MODULE_OTHERS 'int'
|-TypedefDecl 0xdf4ab8 <line:104:1, line:108:3> col:3 LogModuleType 'enum LogModuleType':'LogModuleType'
| `-ElaboratedType 0xdf4a60 'enum LogModuleType' sugar
|   `-EnumType 0xdf4950 'LogModuleType'
|     `-Enum 0xdf48a8 ''
|-FunctionDecl 0xdf4c30 prev 0xce5080 <line:132:1, col:41> col:14 used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0xdf4b60 <col:21, col:33> col:33 fmt 'const CHAR *'
| `-FormatAttr 0xdf4d08 </usr/include/stdio.h:332:12> Inherited printf 1 2
|-FunctionDecl 0xdf4e18 <main/los_debug.h:133:1, col:41> col:14 used OsLogLevelCheck 'INT32 (INT32)' extern
| `-ParmVarDecl 0xdf4d50 <col:30, col:36> col:36 level 'INT32':'int'
|-TypedefDecl 0xdf8e08 <line:167:1, col:89> col:16 referenced BACK_TRACE_HOOK 'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
| `-PointerType 0xdf8d90 'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
|   `-ParenType 0xdf8d30 'void (UINTPTR *, UINT32, UINT32, UINTPTR)' sugar
|     `-FunctionProtoType 0xdf8ce0 'void (UINTPTR *, UINT32, UINT32, UINTPTR)' cdecl
|       |-BuiltinType 0xc20da0 'void'
|       |-PointerType 0xc90f10 'UINTPTR *'
|       | `-TypedefType 0xc90e50 'UINTPTR' sugar
|       |   |-Typedef 0xc844b8 'UINTPTR'
|       |   `-BuiltinType 0xc20ee0 'unsigned int'
|       |-TypedefType 0xc84730 'UINT32' sugar
|       | |-Typedef 0xc84060 'UINT32'
|       | `-BuiltinType 0xc20ee0 'unsigned int'
|       |-TypedefType 0xc84730 'UINT32' sugar
|       | |-Typedef 0xc84060 'UINT32'
|       | `-BuiltinType 0xc20ee0 'unsigned int'
|       `-TypedefType 0xc90e50 'UINTPTR' sugar
|         |-Typedef 0xc844b8 'UINTPTR'
|         `-BuiltinType 0xc20ee0 'unsigned int'
|-FunctionDecl 0xdf8f88 <line:168:1, col:52> col:13 OsBackTraceHookSet 'void (BACK_TRACE_HOOK)' extern
| `-ParmVarDecl 0xdf8e90 <col:32, col:48> col:48 hook 'BACK_TRACE_HOOK':'void (*)(UINTPTR *, UINT32, UINT32, UINTPTR)'
|-FunctionDecl 0xdf9250 <line:169:1, col:89> col:13 OsBackTraceHookCall 'void (UINTPTR *, UINT32, UINT32, UINTPTR)' extern
| |-ParmVarDecl 0xdf9040 <col:33, col:42> col:42 LR 'UINTPTR *'
| |-ParmVarDecl 0xdf90b8 <col:46, col:53> col:53 LRSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0xdf9130 <col:61, col:68> col:68 jumpCount 'UINT32':'unsigned int'
| `-ParmVarDecl 0xdf91a8 <col:79, col:87> col:87 SP 'UINTPTR':'unsigned int'
|-VarDecl 0xdf9320 <main/los_compiler.h:158:22, line:330:31> main/los_context.c:44:15 used g_sysNeedSched 'UINT32':'unsigned int' static cinit
| `-ParenExpr 0xdf93e0 <main/los_compiler.h:330:23, col:31> 'BOOL':'unsigned int'
|   `-CStyleCastExpr 0xdf93b8 <col:24, col:30> 'BOOL':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0xdf9388 <col:30> 'int' 0
|-FunctionDecl 0xdf9498 prev 0xcacf80 <line:327:23, main/los_context.c:45:31> col:6 used HalTaskContextSwitch 'void (void)'
|-VarDecl 0xdf95b8 <line:46:1, line:97:1> line:46:8 used g_stackDefault 'UINT32 [28]' cinit
| `-InitListExpr 0xdf9ad0 <col:27, line:97:1> 'UINT32 [28]'
|   |-ImplicitCastExpr 0xdf9b10 <line:47:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9620 <col:5> 'int' 0
|   |-ImplicitCastExpr 0xdf9b30 <line:48:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9640 <col:5> 'int' 0
|   |-ImplicitCastExpr 0xdf9b58 <line:49:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9660 <col:5> 'int' 2560
|   |-ImplicitCastExpr 0xdf9b90 <line:50:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9680 <col:5> 'int' 2561
|   |-ImplicitCastExpr 0xdf9d60 <line:51:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf96a0 <col:5> 'int' 2562
|   |-ImplicitCastExpr 0xdf9db8 <line:52:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf96c0 <col:5> 'int' 2563
|   |-ImplicitCastExpr 0xdf9dd0 <line:53:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf96e0 <col:5> 'int' 2564
|   |-ImplicitCastExpr 0xdf9de8 <line:54:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9700 <col:5> 'int' 2565
|   |-ImplicitCastExpr 0xdf9e00 <line:55:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9720 <col:5> 'int' 2566
|   |-ImplicitCastExpr 0xdf9e98 <line:56:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9740 <col:5> 'int' 2567
|   |-ImplicitCastExpr 0xdf9eb0 <line:57:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9760 <col:5> 'int' 2568
|   |-ImplicitCastExpr 0xdf9ec8 <line:58:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9780 <col:5> 'int' 2569
|   |-ImplicitCastExpr 0xdf9ee0 <line:59:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf97a0 <col:5> 'int' 2576
|   |-ImplicitCastExpr 0xdf9ef8 <line:60:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf97c0 <col:5> 'int' 2577
|   |-ImplicitCastExpr 0xdf9f10 <line:61:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf97e0 <col:5> 'int' 2578
|   |-ImplicitCastExpr 0xdf9f28 <line:62:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9800 <col:5> 'int' 2579
|   |-ImplicitCastExpr 0xdf9f40 <line:63:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9820 <col:5> 'int' 2580
|   |-ImplicitCastExpr 0xdfa058 <line:64:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9840 <col:5> 'int' 2581
|   |-ImplicitCastExpr 0xdfa070 <line:65:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9860 <col:5> 'int' 0
|   |-ImplicitCastExpr 0xdfa088 <line:66:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9880 <col:5> 'int' 0
|   |-ImplicitCastExpr 0xdfa0a0 <line:67:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf98a0 <col:5> 'int' 0
|   |-ImplicitCastExpr 0xdfa0b8 <line:68:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf98c0 <col:5> 'int' 0
|   |-ImplicitCastExpr 0xdfa0d0 <line:69:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf98e0 <col:5> 'int' 0
|   |-ImplicitCastExpr 0xdfa0e8 <line:70:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9900 <col:5> 'int' 0
|   |-ImplicitCastExpr 0xdfa100 <line:93:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9920 <col:5> 'int' 0
|   |-ImplicitCastExpr 0xdfa118 <line:94:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9940 <col:5> 'int' 0
|   |-ImplicitCastExpr 0xdfa130 <line:95:5> 'UINT32':'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0xdf9960 <col:5> 'int' 0
|   `-ImplicitCastExpr 0xdfa148 <line:96:5> 'UINT32':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0xdf9980 <col:5> 'int' 0
|-FunctionDecl 0xdfa270 <main/los_compiler.h:327:23, main/los_context.c:102:1> line:99:28 ArchInit 'void (void)'
| `-CompoundStmt 0xdfa368 <line:100:1, line:102:1>
|   `-CallExpr 0xdfa348 <line:101:5, col:16> 'void'
|     `-ImplicitCastExpr 0xdfa330 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
|       `-DeclRefExpr 0xdfa310 <col:5> 'void (void)' Function 0xdaaca8 'HalHwiInit' 'void (void)'
|-FunctionDecl 0xdfa418 prev 0xcad108 <main/los_compiler.h:327:23, main/los_context.c:109:1> line:104:29 ArchSysExit 'void (void) __attribute__((noreturn))'
| `-CompoundStmt 0xdfa588 <line:105:1, line:109:1>
|   |-CallExpr 0xdfa520 <main/los_interrupt.h:92:21, main/los_context.c:106:17> 'UINT32':'unsigned int'
|   | `-ImplicitCastExpr 0xdfa508 <main/los_interrupt.h:92:21> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0xdfa4b8 <col:21> 'UINT32 (void)' Function 0xca5418 'ArchIntLock' 'UINT32 (void)'
|   `-WhileStmt 0xdfa570 <main/los_context.c:107:5, line:108:5>
|     |-IntegerLiteral 0xdfa540 <line:107:12> 'int' 1
|     `-CompoundStmt 0xdfa560 <col:15, line:108:5>
|-FunctionDecl 0xdfa758 prev 0xcacbc0 <main/los_compiler.h:327:23, main/los_context.c:128:1> line:111:29 ArchTskStackInit 'void *(UINT32, UINT32, void *)'
| |-ParmVarDecl 0xdfa5b8 <col:46, col:53> col:53 used taskID 'UINT32':'unsigned int'
| |-ParmVarDecl 0xdfa630 <col:61, col:68> col:68 used stackSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0xdfa6b0 <main/los_compiler.h:327:23, main/los_context.c:111:85> col:85 used topStack 'void *'
| `-CompoundStmt 0xdfba58 <line:112:1, line:128:1>
|   |-DeclStmt 0xdfa888 <line:113:5, col:19>
|   | `-VarDecl 0xdfa820 <col:5, col:13> col:13 used result 'errno_t':'int'
|   |-DeclStmt 0xdfabd0 <line:114:5, col:96>
|   | `-VarDecl 0xdfa928 <col:5, col:95> col:18 used context 'TaskContext *' cinit
|   |   `-CStyleCastExpr 0xdfab10 <col:28, col:95> 'TaskContext *' <IntegralToPointer>
|   |     `-ParenExpr 0xdfaaf0 <col:43, col:95> 'unsigned long'
|   |       `-BinaryOperator 0xdfaaa0 <col:44, col:94> 'unsigned long' '-'
|   |         |-ImplicitCastExpr 0xdfaa88 <col:44, col:64> 'unsigned long' <IntegralCast>
|   |         | `-BinaryOperator 0xdfaa38 <col:44, col:64> 'unsigned int' '+'
|   |         |   |-CStyleCastExpr 0xdfa9d8 <col:44, col:53> 'UINTPTR':'unsigned int' <PointerToIntegral>
|   |         |   | `-ImplicitCastExpr 0xdfa9c0 <col:53> 'void *' <LValueToRValue> part_of_explicit_cast
|   |         |   |   `-DeclRefExpr 0xdfa990 <col:53> 'void *' lvalue ParmVar 0xdfa6b0 'topStack' 'void *'
|   |         |   `-ImplicitCastExpr 0xdfaa20 <col:64> 'UINT32':'unsigned int' <LValueToRValue>
|   |         |     `-DeclRefExpr 0xdfaa00 <col:64> 'UINT32':'unsigned int' lvalue ParmVar 0xdfa630 'stackSize' 'UINT32':'unsigned int'
|   |         `-UnaryExprOrTypeTraitExpr 0xdfaa68 <col:76, col:94> 'unsigned long' sizeof 'TaskContext':'TaskContext'
|   |-BinaryOperator 0xdfaf00 <line:117:5, col:88> 'errno_t':'int' '='
|   | |-DeclRefExpr 0xdfabe8 <col:5> 'errno_t':'int' lvalue Var 0xdfa820 'result' 'errno_t':'int'
|   | `-CallExpr 0xdfae60 <col:14, col:88> 'errno_t':'int'
|   |   |-ImplicitCastExpr 0xdfad28 <col:14> 'errno_t (*)(void *, size_t, const void *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0xdfac08 <col:14> 'errno_t (void *, size_t, const void *, size_t)' Function 0xd94438 'memcpy_s' 'errno_t (void *, size_t, const void *, size_t)'
|   |   |-ImplicitCastExpr 0xdfaeb8 <col:23> 'void *' <BitCast>
|   |   | `-ImplicitCastExpr 0xdfaea0 <col:23> 'TaskContext *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0xdfac28 <col:23> 'TaskContext *' lvalue Var 0xdfa928 'context' 'TaskContext *'
|   |   |-UnaryExprOrTypeTraitExpr 0xdfac58 <col:32, col:50> 'unsigned long' sizeof 'TaskContext':'TaskContext'
|   |   |-ImplicitCastExpr 0xdfaee8 <col:53> 'const void *' <BitCast>
|   |   | `-ImplicitCastExpr 0xdfaed0 <col:53> 'UINT32 *' <ArrayToPointerDecay>
|   |   |   `-DeclRefExpr 0xdfac78 <col:53> 'UINT32 [28]' lvalue Var 0xdf95b8 'g_stackDefault' 'UINT32 [28]'
|   |   `-UnaryExprOrTypeTraitExpr 0xdfaca8 <col:69, col:87> 'unsigned long' sizeof 'TaskContext':'TaskContext'
|   |-IfStmt 0xdfb3e8 <line:118:5, line:120:5>
|   | |-BinaryOperator 0xdfaf98 <line:118:9, main/securec.h:73:15> 'int' '!='
|   | | |-ImplicitCastExpr 0xdfaf80 <main/los_context.c:118:9> 'errno_t':'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0xdfaf20 <col:9> 'errno_t':'int' lvalue Var 0xdfa820 'result' 'errno_t':'int'
|   | | `-ParenExpr 0xdfaf60 <main/securec.h:73:13, col:15> 'int'
|   | |   `-IntegerLiteral 0xdfaf40 <col:14> 'int' 0
|   | `-CompoundStmt 0xdfb3d0 <main/los_context.c:118:24, line:120:5>
|   |   `-DoStmt 0xdfb3b0 <main/los_debug.h:134:49, line:138:11>
|   |     |-CompoundStmt 0xdfb378 <line:134:52, line:137:54>
|   |     | `-IfStmt 0xdfb360 <line:135:5, line:137:5>
|   |     |   |-UnaryOperator 0xdfb158 <line:135:9, col:31> 'int' prefix '!' cannot overflow
|   |     |   | `-CallExpr 0xdfb130 <col:10, col:31> 'INT32':'int'
|   |     |   |   |-ImplicitCastExpr 0xdfb118 <col:10> 'INT32 (*)(INT32)' <FunctionToPointerDecay>
|   |     |   |   | `-DeclRefExpr 0xdfafb8 <col:10> 'INT32 (INT32)' Function 0xdf4e18 'OsLogLevelCheck' 'INT32 (INT32)'
|   |     |   |   `-ParenExpr 0xdfb098 <line:92:29, col:50> 'int'
|   |     |   |     `-BinaryOperator 0xdfb078 <line:90:29, line:92:49> 'int' '+'
|   |     |   |       |-ParenExpr 0xdfb038 <line:90:29, col:47> 'int'
|   |     |   |       | `-BinaryOperator 0xdfb018 <line:88:29, line:90:46> 'int' '+'
|   |     |   |       |   |-IntegerLiteral 0xdfafd8 <line:88:29> 'int' 0
|   |     |   |       |   `-IntegerLiteral 0xdfaff8 <line:90:46> 'int' 1
|   |     |   |       `-IntegerLiteral 0xdfb058 <line:92:49> 'int' 1
|   |     |   `-CompoundStmt 0xdfb348 <line:135:34, line:137:5>
|   |     |     `-CallExpr 0xdfb2d0 <line:136:9, col:27> 'int'
|   |     |       |-ImplicitCastExpr 0xdfb2b8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |     |       | `-DeclRefExpr 0xdfb170 <col:9> 'int (const char *, ...)' Function 0xdf4c30 'printf' 'int (const char *, ...)'
|   |     |       |-ImplicitCastExpr 0xdfb318 <main/los_context.c:119:19> 'const char *' <NoOp>
|   |     |       | `-ImplicitCastExpr 0xdfb300 <col:19> 'char *' <ArrayToPointerDecay>
|   |     |       |   `-StringLiteral 0xdfb1c8 <col:19> 'char [23]' lvalue "[%s] memcpy_s failed!\n"
|   |     |       `-ImplicitCastExpr 0xdfb330 <col:46> 'const char *' <ArrayToPointerDecay>
|   |     |         `-PredefinedExpr 0xdfb260 <col:46> 'const char [17]' lvalue __func__
|   |     |           `-StringLiteral 0xdfb238 <col:46> 'const char [17]' lvalue "ArchTskStackInit"
|   |     `-IntegerLiteral 0xdfb390 <main/los_debug.h:138:10> 'int' 0
|   |-BinaryOperator 0xdfb570 <main/los_context.c:122:5, col:42> 'UINT32':'unsigned int' '='
|   | |-MemberExpr 0xdfb438 <col:5, col:14> 'UINT32':'unsigned int' lvalue ->pc 0xd96680
|   | | `-ImplicitCastExpr 0xdfb420 <col:5> 'TaskContext *' <LValueToRValue>
|   | |   `-DeclRefExpr 0xdfb400 <col:5> 'TaskContext *' lvalue Var 0xdfa928 'context' 'TaskContext *'
|   | `-CStyleCastExpr 0xdfb548 <col:25, col:42> 'UINT32':'unsigned int' <NoOp>
|   |   `-CStyleCastExpr 0xdfb510 <col:33, col:42> 'UINTPTR':'unsigned int' <PointerToIntegral>
|   |     `-ImplicitCastExpr 0xdfb4f8 <col:42> 'void (*)(UINT32)' <FunctionToPointerDecay> part_of_explicit_cast
|   |       `-DeclRefExpr 0xdfb468 <col:42> 'void (UINT32)' Function 0xdeb3a8 'OsTaskEntry' 'void (UINT32)'
|   |-BinaryOperator 0xdfb718 <line:123:5, col:55> 'UINT32':'unsigned int' '='
|   | |-ArraySubscriptExpr 0xdfb630 <col:5, col:30> 'UINT32':'unsigned int' lvalue
|   | | |-ImplicitCastExpr 0xdfb618 <col:5, col:14> 'UINT32 *' <ArrayToPointerDecay>
|   | | | `-MemberExpr 0xdfb5c8 <col:5, col:14> 'UINT32 [16]' lvalue ->regA 0xd967c8
|   | | |   `-ImplicitCastExpr 0xdfb5b0 <col:5> 'TaskContext *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0xdfb590 <col:5> 'TaskContext *' lvalue Var 0xdfa928 'context' 'TaskContext *'
|   | | `-IntegerLiteral 0xdfb5f8 <main/los_arch_regs.h:152:62> 'int' 1
|   | `-BinaryOperator 0xdfb6f8 <main/los_context.c:123:35, col:55> 'unsigned int' '+'
|   |   |-CStyleCastExpr 0xdfb698 <col:35, col:44> 'UINTPTR':'unsigned int' <PointerToIntegral>
|   |   | `-ImplicitCastExpr 0xdfb680 <col:44> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   |   `-DeclRefExpr 0xdfb650 <col:44> 'void *' lvalue ParmVar 0xdfa6b0 'topStack' 'void *'
|   |   `-ImplicitCastExpr 0xdfb6e0 <col:55> 'UINT32':'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0xdfb6c0 <col:55> 'UINT32':'unsigned int' lvalue ParmVar 0xdfa630 'stackSize' 'UINT32':'unsigned int'
|   |-BinaryOperator 0xdfb830 <line:124:5, col:38> 'UINT32':'unsigned int' '='
|   | |-ArraySubscriptExpr 0xdfb7d8 <col:5, col:33> 'UINT32':'unsigned int' lvalue
|   | | |-ImplicitCastExpr 0xdfb7c0 <col:5, col:14> 'UINT32 *' <ArrayToPointerDecay>
|   | | | `-MemberExpr 0xdfb770 <col:5, col:14> 'UINT32 [16]' lvalue ->regA 0xd967c8
|   | | |   `-ImplicitCastExpr 0xdfb758 <col:5> 'TaskContext *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0xdfb738 <col:5> 'TaskContext *' lvalue Var 0xdfa928 'context' 'TaskContext *'
|   | | `-IntegerLiteral 0xdfb7a0 <main/los_arch_regs.h:153:62> 'int' 6
|   | `-ImplicitCastExpr 0xdfb818 <main/los_context.c:124:38> 'UINT32':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0xdfb7f8 <col:38> 'UINT32':'unsigned int' lvalue ParmVar 0xdfa5b8 'taskID' 'UINT32':'unsigned int'
|   |-BinaryOperator 0xdfb9b0 <line:125:5, main/los_arch_regs.h:160:62> 'UINT32':'unsigned int' '='
|   | |-MemberExpr 0xdfb888 <main/los_context.c:125:5, col:14> 'UINT32':'unsigned int' lvalue ->ps 0xd966e0
|   | | `-ImplicitCastExpr 0xdfb870 <col:5> 'TaskContext *' <LValueToRValue>
|   | |   `-DeclRefExpr 0xdfb850 <col:5> 'TaskContext *' lvalue Var 0xdfa928 'context' 'TaskContext *'
|   | `-ImplicitCastExpr 0xdfb998 <main/los_arch_regs.h:59:62, line:160:62> 'UINT32':'unsigned int' <IntegralCast>
|   |   `-BinaryOperator 0xdfb978 <line:59:62, line:160:62> 'int' '|'
|   |     |-BinaryOperator 0xdfb8f8 <line:59:62, line:159:62> 'int' '|'
|   |     | |-IntegerLiteral 0xdfb8b8 <line:59:62> 'int' 32
|   |     | `-IntegerLiteral 0xdfb8d8 <line:159:62> 'int' 262144
|   |     `-BinaryOperator 0xdfb958 <main/los_context.c:125:61, main/los_arch_regs.h:160:62> 'int' '<<'
|   |       |-IntegerLiteral 0xdfb918 <main/los_context.c:125:61> 'int' 1
|   |       `-IntegerLiteral 0xdfb938 <main/los_arch_regs.h:160:62> 'int' 16
|   `-ReturnStmt 0xdfba48 <main/los_context.c:127:5, col:20>
|     `-CStyleCastExpr 0xdfba20 <col:12, col:20> 'void *' <BitCast>
|       `-ImplicitCastExpr 0xdfba08 <col:20> 'TaskContext *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0xdfb9d0 <col:20> 'TaskContext *' lvalue Var 0xdfa928 'context' 'TaskContext *'
|-FunctionDecl 0xdfbb48 <main/los_compiler.h:327:23, main/los_context.c:133:1> line:130:6 used HalStartToRun 'void (void)'
| `-CompoundStmt 0xdfbcb0 <line:131:1, line:133:1>
|   `-GCCAsmStmt 0xdfbc58 <line:132:5, col:43>
|-FunctionDecl 0xdfbd60 prev 0xcae3d0 <line:135:23, line:141:1> line:135:30 ArchStartSchedule 'UINT32 (void)'
| `-CompoundStmt 0xdfc998 <line:136:1, line:141:1>
|   |-CStyleCastExpr 0xdfc890 <line:137:5, col:23> 'void' <ToVoid>
|   | `-CallExpr 0xdfbe38 <main/los_interrupt.h:92:21, main/los_context.c:137:23> 'UINT32':'unsigned int'
|   |   `-ImplicitCastExpr 0xdfbe20 <main/los_interrupt.h:92:21> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0xdfbe00 <col:21> 'UINT32 (void)' Function 0xca5418 'ArchIntLock' 'UINT32 (void)'
|   |-CallExpr 0xdfc8f0 <main/los_context.c:138:5, col:18> 'void'
|   | `-ImplicitCastExpr 0xdfc8d8 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0xdfc8b8 <col:5> 'void (void)' Function 0xdef558 'OsSchedStart' 'void (void)'
|   |-CallExpr 0xdfc948 <line:139:5, col:19> 'void'
|   | `-ImplicitCastExpr 0xdfc930 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0xdfc910 <col:5> 'void (void)' Function 0xdfbb48 'HalStartToRun' 'void (void)'
|   `-ReturnStmt 0xdfc988 <line:140:5, main/los_compiler.h:350:23>
|     `-IntegerLiteral 0xdfc968 <col:23> 'unsigned int' 0
|-FunctionDecl 0xdfca60 prev 0xcad270 <line:327:23, main/los_context.c:161:1> line:143:6 used ArchTaskSchedule 'void (void)'
| `-CompoundStmt 0xdfd0d0 <line:144:1, line:161:1>
|   |-DeclStmt 0xdfcb78 <line:145:5, col:19>
|   | `-VarDecl 0xdfcb10 <col:5, col:12> col:12 used intSave 'UINT32':'unsigned int'
|   |-IfStmt 0xdfccf0 <line:147:5, line:150:5>
|   | |-ParenExpr 0xdfcbe8 <main/los_interrupt.h:80:26, col:44> 'UINT32':'unsigned int'
|   | | `-CallExpr 0xdfcbc8 <col:27, col:43> 'UINT32':'unsigned int'
|   | |   `-ImplicitCastExpr 0xdfcbb0 <col:27> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   | |     `-DeclRefExpr 0xdfcb90 <col:27> 'UINT32 (void)' Function 0xca52e0 'ArchIsIntActive' 'UINT32 (void)'
|   | `-CompoundStmt 0xdfccd0 <main/los_context.c:147:24, line:150:5>
|   |   |-BinaryOperator 0xdfcca0 <line:148:9, main/los_compiler.h:334:31> 'UINT32':'unsigned int' '='
|   |   | |-DeclRefExpr 0xdfcc08 <main/los_context.c:148:9> 'UINT32':'unsigned int' lvalue Var 0xdf9320 'g_sysNeedSched' 'UINT32':'unsigned int'
|   |   | `-ParenExpr 0xdfcc80 <main/los_compiler.h:334:23, col:31> 'BOOL':'unsigned int'
|   |   |   `-CStyleCastExpr 0xdfcc58 <col:24, col:30> 'BOOL':'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0xdfcc28 <col:30> 'int' 1
|   |   `-ReturnStmt 0xdfccc0 <main/los_context.c:149:9>
|   |-BinaryOperator 0xdfcd80 <line:152:5, col:27> 'UINT32':'unsigned int' '='
|   | |-DeclRefExpr 0xdfcd08 <col:5> 'UINT32':'unsigned int' lvalue Var 0xdfcb10 'intSave' 'UINT32':'unsigned int'
|   | `-CallExpr 0xdfcd60 <main/los_interrupt.h:92:21, main/los_context.c:152:27> 'UINT32':'unsigned int'
|   |   `-ImplicitCastExpr 0xdfcd48 <main/los_interrupt.h:92:21> 'UINT32 (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0xdfcd28 <col:21> 'UINT32 (void)' Function 0xca5418 'ArchIntLock' 'UINT32 (void)'
|   |-BinaryOperator 0xdfce38 <main/los_context.c:153:5, main/los_compiler.h:330:31> 'UINT32':'unsigned int' '='
|   | |-DeclRefExpr 0xdfcda0 <main/los_context.c:153:5> 'UINT32':'unsigned int' lvalue Var 0xdf9320 'g_sysNeedSched' 'UINT32':'unsigned int'
|   | `-ParenExpr 0xdfce18 <main/los_compiler.h:330:23, col:31> 'BOOL':'unsigned int'
|   |   `-CStyleCastExpr 0xdfcdf0 <col:24, col:30> 'BOOL':'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0xdfcdc0 <col:30> 'int' 0
|   |-DeclStmt 0xdfcf50 <main/los_context.c:154:5, col:40>
|   | `-VarDecl 0xdfce68 <col:5, col:39> col:10 used isSwitch 'BOOL':'unsigned int' cinit
|   |   `-CallExpr 0xdfcf30 <col:21, col:39> 'BOOL':'unsigned int'
|   |     `-ImplicitCastExpr 0xdfcf18 <col:21> 'BOOL (*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0xdfced0 <col:21> 'BOOL (void)' Function 0xdef690 'OsSchedTaskSwitch' 'BOOL (void)'
|   |-IfStmt 0xdfd010 <line:155:5, line:157:5>
|   | |-ImplicitCastExpr 0xdfcf88 <line:155:9> 'BOOL':'unsigned int' <LValueToRValue>
|   | | `-DeclRefExpr 0xdfcf68 <col:9> 'BOOL':'unsigned int' lvalue Var 0xdfce68 'isSwitch' 'BOOL':'unsigned int'
|   | `-CompoundStmt 0xdfcff8 <col:19, line:157:5>
|   |   `-CallExpr 0xdfcfd8 <line:156:9, col:30> 'void'
|   |     `-ImplicitCastExpr 0xdfcfc0 <col:9> 'void (*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0xdfcfa0 <col:9> 'void (void)' Function 0xdf9498 'HalTaskContextSwitch' 'void (void)'
|   |-CallExpr 0xdfd080 <main/los_interrupt.h:96:24, main/los_context.c:159:27> 'void'
|   | |-ImplicitCastExpr 0xdfd068 <main/los_interrupt.h:96:24> 'void (*)(UINT32)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0xdfd028 <col:24> 'void (UINT32)' Function 0xca5848 'ArchIntRestore' 'void (UINT32)'
|   | `-ImplicitCastExpr 0xdfd0a8 <main/los_context.c:159:20> 'UINT32':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0xdfd048 <col:20> 'UINT32':'unsigned int' lvalue Var 0xdfcb10 'intSave' 'UINT32':'unsigned int'
|   `-ReturnStmt 0xdfd0c0 <line:160:5>
`-FunctionDecl 0xdfd1b8 prev 0xcacd10 <main/los_compiler.h:327:23, main/los_context.c:168:1> line:163:6 HalIrqEndCheckNeedSched 'void (void)'
  `-CompoundStmt 0xdfd400 <line:164:1, line:168:1>
    `-IfStmt 0xdfd3e8 <line:165:5, line:167:5>
      |-BinaryOperator 0xdfd358 <line:165:9, main/los_task.h:1551:43> 'int' '&&'
      | |-BinaryOperator 0xdfd2c8 <main/los_context.c:165:9, col:27> 'int' '&&'
      | | |-ImplicitCastExpr 0xdfd298 <col:9> 'UINT32':'unsigned int' <LValueToRValue>
      | | | `-DeclRefExpr 0xdfd258 <col:9> 'UINT32':'unsigned int' lvalue Var 0xdf9320 'g_sysNeedSched' 'UINT32':'unsigned int'
      | | `-ImplicitCastExpr 0xdfd2b0 <col:27> 'UINT32':'unsigned int' <LValueToRValue>
      | |   `-DeclRefExpr 0xdfd278 <col:27> 'UINT32':'unsigned int' lvalue Var 0xdec580 'g_taskScheduled' 'UINT32':'unsigned int'
      | `-ParenExpr 0xdfd338 <main/los_task.h:1551:28, col:43> 'int'
      |   `-UnaryOperator 0xdfd320 <col:29, col:30> 'int' prefix '!' cannot overflow
      |     `-ImplicitCastExpr 0xdfd308 <col:30> 'UINT16':'unsigned short' <LValueToRValue>
      |       `-DeclRefExpr 0xdfd2e8 <col:30> 'UINT16':'unsigned short' lvalue Var 0xdea938 'g_losTaskLock' 'UINT16':'unsigned short'
      `-CompoundStmt 0xdfd3d0 <main/los_context.c:165:66, line:167:5>
        `-CallExpr 0xdfd3b0 <line:166:9, col:26> 'void'
          `-ImplicitCastExpr 0xdfd398 <col:9> 'void (*)(void)' <FunctionToPointerDecay>
            `-DeclRefExpr 0xdfd378 <col:9> 'void (void)' Function 0xdfca60 'ArchTaskSchedule' 'void (void)'

TranslationUnitDecl 0xd03b08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0xd043a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0xd040a0 '__int128'
|-TypedefDecl 0xd04410 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0xd040c0 'unsigned __int128'
|-TypedefDecl 0xd04718 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0xd044f0 'struct __NSConstantString_tag'
|   `-Record 0xd04468 '__NSConstantString_tag'
|-TypedefDecl 0xd047b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0xd04770 'char *'
|   `-BuiltinType 0xd03ba0 'char'
`-TypedefDecl 0xd04aa8 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
  `-ConstantArrayType 0xd04a50 'struct __va_list_tag [1]' 1 
    `-RecordType 0xd04890 'struct __va_list_tag'
      `-Record 0xd04808 '__va_list_tag'

TranslationUnitDecl 0x239b9e8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x239c280 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x239bf80 '__int128'
|-TypedefDecl 0x239c2f0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x239bfa0 'unsigned __int128'
|-TypedefDecl 0x239c5f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x239c3d0 'struct __NSConstantString_tag'
|   `-Record 0x239c348 '__NSConstantString_tag'
|-TypedefDecl 0x239c690 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x239c650 'char *'
|   `-BuiltinType 0x239ba80 'char'
|-TypedefDecl 0x239c988 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x239c930 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x239c770 'struct __va_list_tag'
|     `-Record 0x239c6e8 '__va_list_tag'
|-TypedefDecl 0x24012d0 <main/hals/driver/../../los_compiler.h:308:1, col:32> col:32 UINT8 'unsigned char'
| `-BuiltinType 0x239bb40 'unsigned char'
|-TypedefDecl 0x2401340 <line:309:1, col:32> col:32 UINT16 'unsigned short'
| `-BuiltinType 0x239bb60 'unsigned short'
|-TypedefDecl 0x24013b0 <line:310:1, col:32> col:32 referenced UINT32 'unsigned int'
| `-BuiltinType 0x239bb80 'unsigned int'
|-TypedefDecl 0x2401420 <line:311:1, col:32> col:32 INT8 'signed char'
| `-BuiltinType 0x239baa0 'signed char'
|-TypedefDecl 0x2401490 <line:312:1, col:32> col:32 INT16 'short'
| `-BuiltinType 0x239bac0 'short'
|-TypedefDecl 0x2401500 <line:313:1, col:32> col:32 referenced INT32 'int'
| `-BuiltinType 0x239bae0 'int'
|-TypedefDecl 0x2401570 <line:314:1, col:32> col:32 FLOAT 'float'
| `-BuiltinType 0x239bbe0 'float'
|-TypedefDecl 0x24015e0 <line:315:1, col:32> col:32 DOUBLE 'double'
| `-BuiltinType 0x239bc00 'double'
|-TypedefDecl 0x2401648 <line:316:1, col:32> col:32 CHAR 'char'
| `-BuiltinType 0x239ba80 'char'
|-TypedefDecl 0x24016b8 <line:318:1, col:32> col:32 referenced BOOL 'unsigned int'
| `-BuiltinType 0x239bb80 'unsigned int'
|-TypedefDecl 0x2401728 <line:319:1, col:32> col:32 referenced UINT64 'unsigned long long'
| `-BuiltinType 0x239bbc0 'unsigned long long'
|-TypedefDecl 0x2401798 <line:320:1, col:32> col:32 referenced INT64 'long long'
| `-BuiltinType 0x239bb20 'long long'
|-TypedefDecl 0x2401808 <line:321:1, col:32> col:32 referenced UINTPTR 'unsigned int'
| `-BuiltinType 0x239bb80 'unsigned int'
|-TypedefDecl 0x2401878 <line:322:1, col:32> col:32 INTPTR 'int'
| `-BuiltinType 0x239bae0 'int'
|-TypedefDecl 0x2401900 <line:324:1, col:24> col:24 Atomic 'volatile INT32':'volatile int'
| `-QualType 0x24018d4 'volatile INT32' volatile
|   `-TypedefType 0x24018d0 'INT32' sugar
|     |-Typedef 0x2401500 'INT32'
|     `-BuiltinType 0x239bae0 'int'
|-TypedefDecl 0x2401990 <line:325:1, col:24> col:24 Atomic64 'volatile INT64':'volatile long long'
| `-QualType 0x2401964 'volatile INT64' volatile
|   `-TypedefType 0x2401960 'INT64' sugar
|     |-Typedef 0x2401798 'INT64'
|     `-BuiltinType 0x239bb20 'long long'
|-FunctionDecl 0x2401c38 <line:407:1, line:410:1> line:407:22 LOS_Align 'UINT32 (UINT32, UINT32)' static inline
| |-ParmVarDecl 0x2401ab0 <col:32, col:39> col:39 used addr 'UINT32':'unsigned int'
| |-ParmVarDecl 0x2401b28 <col:45, col:52> col:52 used boundary 'UINT32':'unsigned int'
| |-CompoundStmt 0x2409580 <line:408:1, line:410:1>
| | `-ReturnStmt 0x2409570 <line:409:5, col:93>
| |   `-BinaryOperator 0x2409550 <col:12, col:93> 'unsigned int' '&'
| |     |-ParenExpr 0x2409468 <col:12, col:75> 'unsigned int'
| |     | `-BinaryOperator 0x2409448 <col:13, col:74> 'unsigned int' '+'
| |     |   |-ImplicitCastExpr 0x2409430 <col:13> 'UINT32':'unsigned int' <LValueToRValue>
| |     |   | `-DeclRefExpr 0x2401d30 <col:13> 'UINT32':'unsigned int' lvalue ParmVar 0x2401ab0 'addr' 'UINT32':'unsigned int'
| |     |   `-ParenExpr 0x2409410 <col:20, col:74> 'unsigned int'
| |     |     `-ConditionalOperator 0x2401fd8 <col:21, col:73> 'unsigned int'
| |     |       |-ParenExpr 0x2401ed0 <col:21, col:52> 'int'
| |     |       | `-BinaryOperator 0x2401eb0 <col:22, col:48> 'int' '>'
| |     |       |   |-ParenExpr 0x2401e58 <col:22, col:44> 'unsigned int'
| |     |       |   | `-BinaryOperator 0x2401e38 <col:23, col:43> 'unsigned int' '+'
| |     |       |   |   |-ImplicitCastExpr 0x2401e20 <col:23> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |   | `-DeclRefExpr 0x2401d50 <col:23> 'UINT32':'unsigned int' lvalue ParmVar 0x2401ab0 'addr' 'UINT32':'unsigned int'
| |     |       |   |   `-ParenExpr 0x2401e00 <col:30, col:43> 'unsigned int'
| |     |       |   |     `-BinaryOperator 0x2401de0 <col:31, col:42> 'unsigned int' '-'
| |     |       |   |       |-ImplicitCastExpr 0x2401db0 <col:31> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |       | `-DeclRefExpr 0x2401d70 <col:31> 'UINT32':'unsigned int' lvalue ParmVar 0x2401b28 'boundary' 'UINT32':'unsigned int'
| |     |       |   |       `-ImplicitCastExpr 0x2401dc8 <col:42> 'unsigned int' <IntegralCast>
| |     |       |   |         `-IntegerLiteral 0x2401d90 <col:42> 'int' 1
| |     |       |   `-ImplicitCastExpr 0x2401e98 <col:48> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |     `-DeclRefExpr 0x2401e78 <col:48> 'UINT32':'unsigned int' lvalue ParmVar 0x2401ab0 'addr' 'UINT32':'unsigned int'
| |     |       |-ParenExpr 0x2401f80 <col:56, col:69> 'unsigned int'
| |     |       | `-BinaryOperator 0x2401f60 <col:57, col:68> 'unsigned int' '-'
| |     |       |   |-ImplicitCastExpr 0x2401f30 <col:57> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   | `-DeclRefExpr 0x2401ef0 <col:57> 'UINT32':'unsigned int' lvalue ParmVar 0x2401b28 'boundary' 'UINT32':'unsigned int'
| |     |       |   `-ImplicitCastExpr 0x2401f48 <col:68> 'unsigned int' <IntegralCast>
| |     |       |     `-IntegerLiteral 0x2401f10 <col:68> 'int' 1
| |     |       `-ImplicitCastExpr 0x2401fc0 <col:73> 'unsigned int' <IntegralCast>
| |     |         `-IntegerLiteral 0x2401fa0 <col:73> 'int' 0
| |     `-UnaryOperator 0x2409538 <col:79, col:93> 'unsigned int' prefix '~' cannot overflow
| |       `-ParenExpr 0x2409518 <col:80, col:93> 'unsigned int'
| |         `-BinaryOperator 0x24094f8 <col:81, col:92> 'unsigned int' '-'
| |           |-ImplicitCastExpr 0x24094c8 <col:81> 'UINT32':'unsigned int' <LValueToRValue>
| |           | `-DeclRefExpr 0x2409488 <col:81> 'UINT32':'unsigned int' lvalue ParmVar 0x2401b28 'boundary' 'UINT32':'unsigned int'
| |           `-ImplicitCastExpr 0x24094e0 <col:92> 'unsigned int' <IntegralCast>
| |             `-IntegerLiteral 0x24094a8 <col:92> 'int' 1
| `-FullComment 0x241b110 <line:388:3, line:405:7>
|   |-ParagraphComment 0x2415730 <line:388:3>
|   | `-TextComment 0x2415700 <col:3> Text=" "
|   |-VerbatimLineComment 0x2415750 <col:4, col:21> Text=" los_base"
|   |-ParagraphComment 0x24157c0 <line:389:3>
|   | `-TextComment 0x2415790 <col:3> Text=" "
|   |-BlockCommandComment 0x24157e0 <col:4, col:70> Name="brief"
|   | `-ParagraphComment 0x2415840 <col:10, col:70>
|   |   `-TextComment 0x2415810 <col:10, col:70> Text=" Align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0x2415890 <line:391:3>
|   | `-TextComment 0x2415860 <col:3> Text=" "
|   |-BlockCommandComment 0x24158b0 <col:4, line:392:83> Name="par"
|   | `-ParagraphComment 0x2415930 <line:391:8, line:392:83>
|   |   |-TextComment 0x24158e0 <line:391:8, col:20> Text=" Description:"
|   |   `-TextComment 0x2415900 <line:392:3, col:83> Text=" This API is used to align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0x2415980 <line:394:3>
|   | `-TextComment 0x2415950 <col:3> Text=" "
|   |-BlockCommandComment 0x24159a0 <col:4, line:397:8> Name="attention"
|   | `-ParagraphComment 0x2415b70 <line:395:3, line:397:8>
|   |   |-TextComment 0x24159d0 <line:395:3> Text=" "
|   |   |-HTMLStartTagComment 0x24159f0 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x2415a30 <line:396:3> Text=" "
|   |   |-HTMLStartTagComment 0x2415a50 <col:4, col:7> Name="li"
|   |   |-TextComment 0x2415a90 <col:8, col:50> Text="the value of boundary usually is 4,8,16,32."
|   |   |-HTMLEndTagComment 0x2415ab0 <col:51, col:55> Name="li"
|   |   |-TextComment 0x2415ae0 <line:397:3> Text=" "
|   |   `-HTMLEndTagComment 0x2415b00 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x2415bc0 <line:399:3>
|   | `-TextComment 0x2415b90 <col:3> Text=" "
|   |-ParamCommandComment 0x2415be0 <col:4, line:400:3> [in] implicitly Param="addr" ParamIndex=0
|   | `-ParagraphComment 0x2415c90 <line:399:15, line:400:3>
|   |   |-TextComment 0x2415c40 <line:399:15, col:61> Text="     [IN]  The variable what you want to align."
|   |   `-TextComment 0x2415c60 <line:400:3> Text=" "
|   |-ParamCommandComment 0x2415cb0 <col:4, col:63> [in] implicitly Param="boundary" ParamIndex=1
|   | `-ParagraphComment 0x2415d40 <col:19, col:63>
|   |   `-TextComment 0x2415d10 <col:19, col:63> Text=" [IN]  The align size what you want to align."
|   |-ParagraphComment 0x2415d90 <line:402:3>
|   | `-TextComment 0x2415d60 <col:3> Text=" "
|   |-BlockCommandComment 0x2415db0 <col:4, line:403:3> Name="retval"
|   | `-ParagraphComment 0x2415e30 <line:402:11, line:403:3>
|   |   |-TextComment 0x2415de0 <line:402:11, col:55> Text=" #UINT32 The variable what have been aligned."
|   |   `-TextComment 0x2415e00 <line:403:3> Text=" "
|   |-BlockCommandComment 0x2415e50 <col:4, line:405:3> Name="par"
|   | `-ParagraphComment 0x241b020 <line:403:8, line:405:3>
|   |   |-TextComment 0x2415e80 <line:403:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x2415ea0 <line:404:3> Text=" "
|   |   |-HTMLStartTagComment 0x2415ec0 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x241af00 <col:8, col:11> Name="li"
|   |   |-TextComment 0x241af40 <col:12, col:73> Text="los_base.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x241af60 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x241af90 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x241afc0 <line:405:3> Text=" "
|   `-BlockCommandComment 0x241b040 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x241b070 <<invalid sloc>>
|-FunctionDecl 0x2409678 <line:423:1, line:438:1> line:423:20 used maybe_release_fence 'void (int)' static inline
| |-ParmVarDecl 0x24095b0 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0x2409c30 <line:424:1, line:438:1>
|   `-SwitchStmt 0x2409758 <line:425:5, line:437:5>
|     |-ImplicitCastExpr 0x2409740 <line:425:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x2409720 <col:13> 'int' lvalue ParmVar 0x24095b0 'model' 'int'
|     `-CompoundStmt 0x2409be8 <col:20, line:437:5>
|       |-CaseStmt 0x24097b0 <line:426:9, line:427:52>
|       | |-ConstantExpr 0x2409798 <<built-in>:14:26> 'int'
|       | | `-IntegerLiteral 0x2409778 <col:26> 'int' 3
|       | `-CallExpr 0x24099c0 <main/hals/driver/../../los_compiler.h:427:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x24099a8 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x2409940 <col:13> '<builtin fn type>' Function 0x24097d8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x2409960 <<built-in>:14:26> 'int' 3
|       |-BreakStmt 0x24099e8 <main/hals/driver/../../los_compiler.h:428:13>
|       |-CaseStmt 0x2409a28 <line:429:9, line:430:52>
|       | |-ConstantExpr 0x2409a10 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0x24099f0 <col:26> 'int' 4
|       | `-CallExpr 0x2409aa8 <main/hals/driver/../../los_compiler.h:430:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x2409a90 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x2409a50 <col:13> '<builtin fn type>' Function 0x24097d8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x2409a70 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0x2409ad0 <main/hals/driver/../../los_compiler.h:431:13>
|       |-CaseStmt 0x2409b10 <line:432:9, line:433:52>
|       | |-ConstantExpr 0x2409af8 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0x2409ad8 <col:26> 'int' 5
|       | `-CallExpr 0x2409b90 <main/hals/driver/../../los_compiler.h:433:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x2409b78 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x2409b38 <col:13> '<builtin fn type>' Function 0x24097d8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x2409b58 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0x2409bb8 <main/hals/driver/../../los_compiler.h:434:13>
|       `-DefaultStmt 0x2409bc8 <line:435:9, line:436:13>
|         `-BreakStmt 0x2409bc0 <col:13>
|-FunctionDecl 0x24097d8 <line:427:13> col:13 implicit used __atomic_thread_fence 'void (int)' extern
| |-ParmVarDecl 0x2409878 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x24098e8 <col:13> Implicit
|-FunctionDecl 0x2409cf0 <line:440:1, line:455:1> line:440:20 used maybe_acquire_fence 'void (int)' static inline
| |-ParmVarDecl 0x2409c60 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0x240a118 <line:441:1, line:455:1>
|   `-SwitchStmt 0x2409dd0 <line:442:5, line:454:5>
|     |-ImplicitCastExpr 0x2409db8 <line:442:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x2409d98 <col:13> 'int' lvalue ParmVar 0x2409c60 'model' 'int'
|     `-CompoundStmt 0x240a0d0 <col:20, line:454:5>
|       |-CaseStmt 0x2409e28 <line:443:9, line:444:52>
|       | |-ConstantExpr 0x2409e10 <<built-in>:13:26> 'int'
|       | | `-IntegerLiteral 0x2409df0 <col:26> 'int' 2
|       | `-CallExpr 0x2409ea8 <main/hals/driver/../../los_compiler.h:444:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x2409e90 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x2409e50 <col:13> '<builtin fn type>' Function 0x24097d8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x2409e70 <<built-in>:13:26> 'int' 2
|       |-BreakStmt 0x2409ed0 <main/hals/driver/../../los_compiler.h:445:13>
|       |-CaseStmt 0x2409f10 <line:446:9, line:447:52>
|       | |-ConstantExpr 0x2409ef8 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0x2409ed8 <col:26> 'int' 4
|       | `-CallExpr 0x2409f90 <main/hals/driver/../../los_compiler.h:447:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x2409f78 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x2409f38 <col:13> '<builtin fn type>' Function 0x24097d8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x2409f58 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0x2409fb8 <main/hals/driver/../../los_compiler.h:448:13>
|       |-CaseStmt 0x2409ff8 <line:449:9, line:450:52>
|       | |-ConstantExpr 0x2409fe0 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0x2409fc0 <col:26> 'int' 5
|       | `-CallExpr 0x240a078 <main/hals/driver/../../los_compiler.h:450:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x240a060 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x240a020 <col:13> '<builtin fn type>' Function 0x24097d8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x240a040 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0x240a0a0 <main/hals/driver/../../los_compiler.h:451:13>
|       `-DefaultStmt 0x240a0b0 <line:452:9, line:453:13>
|         `-BreakStmt 0x240a0a8 <col:13>
|-FunctionDecl 0x240a2b8 <line:458:1, line:472:1> line:458:21 used __libatomic_flag_for_address 'BOOL *(void *)' static inline
| |-ParmVarDecl 0x240a168 <col:50, col:56> col:56 used addr 'void *'
| `-CompoundStmt 0x240ca20 <line:459:1, line:472:1>
|   |-DeclStmt 0x240af10 <line:460:5, col:99>
|   | `-VarDecl 0x240a998 <col:5, col:98> col:17 used flag_table 'BOOL [16]' static cinit
|   |   `-InitListExpr 0x240acd0 <col:51, col:98> 'BOOL [16]'
|   |     |-ImplicitCastExpr 0x240ad90 <col:52> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x240aa00 <col:52> 'int' 0
|   |     |-ImplicitCastExpr 0x240ada8 <col:55> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x240aa20 <col:55> 'int' 0
|   |     |-ImplicitCastExpr 0x240adc0 <col:58> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x240aa40 <col:58> 'int' 0
|   |     |-ImplicitCastExpr 0x240add8 <col:61> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x240aa60 <col:61> 'int' 0
|   |     |-ImplicitCastExpr 0x240adf0 <col:64> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x240aa80 <col:64> 'int' 0
|   |     |-ImplicitCastExpr 0x240ae08 <col:67> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x240aaa0 <col:67> 'int' 0
|   |     |-ImplicitCastExpr 0x240ae20 <col:70> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x240aac0 <col:70> 'int' 0
|   |     |-ImplicitCastExpr 0x240ae38 <col:73> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x240aae0 <col:73> 'int' 0
|   |     |-ImplicitCastExpr 0x240ae50 <col:76> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x240ab00 <col:76> 'int' 0
|   |     |-ImplicitCastExpr 0x240ae68 <col:79> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x240ab20 <col:79> 'int' 0
|   |     |-ImplicitCastExpr 0x240ae80 <col:82> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x240ab40 <col:82> 'int' 0
|   |     |-ImplicitCastExpr 0x240ae98 <col:85> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x240ab60 <col:85> 'int' 0
|   |     |-ImplicitCastExpr 0x240aeb0 <col:88> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x240ab80 <col:88> 'int' 0
|   |     |-ImplicitCastExpr 0x240aec8 <col:91> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x240aba0 <col:91> 'int' 0
|   |     |-ImplicitCastExpr 0x240aee0 <col:94> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x240abc0 <col:94> 'int' 0
|   |     `-ImplicitCastExpr 0x240aef8 <col:97> 'BOOL':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x240abe0 <col:97> 'int' 0
|   |-DeclStmt 0x240b0a0 <line:461:5, col:41>
|   | `-VarDecl 0x240af60 <col:5, col:37> col:13 used p 'UINTPTR':'unsigned int' cinit
|   |   `-CStyleCastExpr 0x240b078 <col:17, col:37> 'UINTPTR':'unsigned int' <PointerToIntegral>
|   |     `-CStyleCastExpr 0x240b040 <col:26, col:37> 'UINTPTR *' <BitCast>
|   |       `-ImplicitCastExpr 0x240b028 <col:37> 'void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x240afc8 <col:37> 'void *' lvalue ParmVar 0x240a168 'addr' 'void *'
|   |-CompoundAssignOperator 0x240b228 <line:462:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x240b0b8 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x240af60 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x240b208 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0x240b150 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x240b130 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x240b118 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x240b0d8 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x240af60 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x240b0f8 <col:16> 'int' 2
|   |   `-ParenExpr 0x240b1e8 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x240b1c8 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x240b1b0 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x240b170 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0x240af60 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x240b190 <col:27> 'int' 4
|   |-CompoundAssignOperator 0x240b3c8 <line:463:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x240b258 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x240af60 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x240b3a8 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0x240b2f0 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x240b2d0 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x240b2b8 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x240b278 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x240af60 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x240b298 <col:16> 'int' 7
|   |   `-ParenExpr 0x240b388 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x240b368 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x240b350 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x240b310 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0x240af60 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x240b330 <col:27> 'int' 5
|   |-CompoundAssignOperator 0x240b568 <line:464:5, col:30> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x240b3f8 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x240af60 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x240b548 <col:10, col:30> 'unsigned int' '+'
|   |   |-ParenExpr 0x240b490 <col:10, col:18> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x240b470 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x240b458 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x240b418 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x240af60 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x240b438 <col:16> 'int' 17
|   |   `-ParenExpr 0x240b528 <col:22, col:30> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x240b508 <col:23, col:28> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x240b4f0 <col:23> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x240b4b0 <col:23> 'UINTPTR':'unsigned int' lvalue Var 0x240af60 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x240b4d0 <col:28> 'int' 13
|   |-IfStmt 0x240b728 <line:466:5, line:468:5>
|   | |-BinaryOperator 0x240b608 <line:466:9, col:26> 'int' '>'
|   | | |-UnaryExprOrTypeTraitExpr 0x240b5b0 <col:9, col:22> 'unsigned long' sizeof 'void *'
|   | | `-ImplicitCastExpr 0x240b5f0 <col:26> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x240b5d0 <col:26> 'int' 4
|   | `-CompoundStmt 0x240b710 <col:29, line:468:5>
|   |   `-CompoundAssignOperator 0x240b6e0 <line:467:9, col:22> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0x240b628 <col:9> 'UINTPTR':'unsigned int' lvalue Var 0x240af60 'p' 'UINTPTR':'unsigned int'
|   |     `-ParenExpr 0x240b6c0 <col:14, col:22> 'UINTPTR':'unsigned int'
|   |       `-BinaryOperator 0x240b6a0 <col:15, col:20> 'UINTPTR':'unsigned int' '>>'
|   |         |-ImplicitCastExpr 0x240b688 <col:15> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x240b648 <col:15> 'UINTPTR':'unsigned int' lvalue Var 0x240af60 'p' 'UINTPTR':'unsigned int'
|   |         `-IntegerLiteral 0x240b668 <col:20> 'int' 31
|   |-CompoundAssignOperator 0x240b858 <line:470:5, col:34> 'UINTPTR':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x240b740 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x240af60 'p' 'UINTPTR':'unsigned int'
|   | `-ImplicitCastExpr 0x240b840 <col:10, col:34> 'unsigned int' <IntegralCast>
|   |   `-ParenExpr 0x240b820 <col:10, col:34> 'int'
|   |     `-BinaryOperator 0x240b800 <line:457:29, line:470:33> 'int' '-'
|   |       |-ParenExpr 0x240b7c0 <line:457:29, col:36> 'int'
|   |       | `-BinaryOperator 0x240b7a0 <col:30, col:35> 'int' '<<'
|   |       |   |-IntegerLiteral 0x240b760 <col:30> 'int' 1
|   |       |   `-IntegerLiteral 0x240b780 <col:35> 'int' 4
|   |       `-IntegerLiteral 0x240b7e0 <line:470:33> 'int' 1
|   `-ReturnStmt 0x240ca10 <line:471:5, col:25>
|     `-BinaryOperator 0x240c9f0 <col:12, col:25> 'BOOL *' '+'
|       |-ImplicitCastExpr 0x240b8c8 <col:12> 'BOOL *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x240b888 <col:12> 'BOOL [16]' lvalue Var 0x240a998 'flag_table' 'BOOL [16]'
|       `-ImplicitCastExpr 0x240b8e0 <col:25> 'UINTPTR':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x240b8a8 <col:25> 'UINTPTR':'unsigned int' lvalue Var 0x240af60 'p' 'UINTPTR':'unsigned int'
|-FunctionDecl 0x240cbd8 <line:474:1, line:482:1> line:474:20 used get_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0x240ca88 <col:29, col:35> col:35 used addr 'void *'
| |-ParmVarDecl 0x240cb08 <col:41, col:45> col:45 used model 'int'
| `-CompoundStmt 0x240d290 <line:475:1, line:482:1>
|   |-DeclStmt 0x240cdf0 <line:476:5, col:57>
|   | `-VarDecl 0x240cc98 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0x240cdb0 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0x240cd98 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x240cd00 <col:22> 'BOOL *(void *)' Function 0x240a2b8 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0x240cdd8 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x240cd20 <col:52> 'void *' lvalue ParmVar 0x240ca88 'addr' 'void *'
|   |-CallExpr 0x240ce60 <line:478:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x240ce48 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x240ce08 <col:5> 'void (int)' Function 0x2409678 'maybe_release_fence' 'void (int)'
|   | `-ImplicitCastExpr 0x240ce88 <col:26> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x240ce28 <col:26> 'int' lvalue ParmVar 0x240cb08 'model' 'int'
|   `-WhileStmt 0x240d278 <line:479:5, line:481:5>
|     |-BinaryOperator 0x240d238 <line:479:12, col:66> 'int' '=='
|     | |-ImplicitCastExpr 0x240d220 <col:12, col:61> 'int' <IntegralCast>
|     | | `-CallExpr 0x240d1a0 <col:12, col:61> '_Bool'
|     | |   |-ImplicitCastExpr 0x240d188 <col:12> '_Bool (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|     | |   | `-DeclRefExpr 0x240d0e0 <col:12> '<builtin fn type>' Function 0x240cf08 '__atomic_test_and_set' '_Bool (volatile void *, int)'
|     | |   |-ImplicitCastExpr 0x240d1e8 <col:35> 'volatile void *' <BitCast>
|     | |   | `-ImplicitCastExpr 0x240d1d0 <col:35> 'BOOL *' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x240d100 <col:35> 'BOOL *' lvalue Var 0x240cc98 'lock_ptr' 'BOOL *'
|     | |   `-IntegerLiteral 0x240d120 <<built-in>:13:26> 'int' 2
|     | `-IntegerLiteral 0x240d200 <main/hals/driver/../../los_compiler.h:479:66> 'int' 1
|     `-CompoundStmt 0x240d260 <col:69, line:481:5>
|       `-NullStmt 0x240d258 <line:480:9>
|-FunctionDecl 0x240cf08 <line:479:12> col:12 implicit used __atomic_test_and_set '_Bool (volatile void *, int)' extern
| |-ParmVarDecl 0x240cfa8 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0x240d010 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x240d088 <col:12> Implicit
|-FunctionDecl 0x240d3e8 <line:484:1, line:490:1> line:484:20 used free_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0x240d2d0 <col:30, col:36> col:36 used addr 'void *'
| |-ParmVarDecl 0x240d350 <col:42, col:46> col:46 used model 'int'
| `-CompoundStmt 0x240d988 <line:485:1, line:490:1>
|   |-DeclStmt 0x240d5a8 <line:486:5, col:57>
|   | `-VarDecl 0x240d4a8 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0x240d568 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0x240d550 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x240d510 <col:22> 'BOOL *(void *)' Function 0x240a2b8 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0x240d590 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x240d530 <col:52> 'void *' lvalue ParmVar 0x240d2d0 'addr' 'void *'
|   |-CallExpr 0x240d890 <line:488:5, col:47> 'void'
|   | |-ImplicitCastExpr 0x240d878 <col:5> 'void (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x240d7d0 <col:5> '<builtin fn type>' Function 0x240d5f8 '__atomic_clear' 'void (volatile void *, int)'
|   | |-ImplicitCastExpr 0x240d8d8 <col:21> 'volatile void *' <BitCast>
|   | | `-ImplicitCastExpr 0x240d8c0 <col:21> 'BOOL *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x240d7f0 <col:21> 'BOOL *' lvalue Var 0x240d4a8 'lock_ptr' 'BOOL *'
|   | `-IntegerLiteral 0x240d810 <<built-in>:14:26> 'int' 3
|   `-CallExpr 0x240d948 <main/hals/driver/../../los_compiler.h:489:5, col:31> 'void'
|     |-ImplicitCastExpr 0x240d930 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x240d8f0 <col:5> 'void (int)' Function 0x2409cf0 'maybe_acquire_fence' 'void (int)'
|     `-ImplicitCastExpr 0x240d970 <col:26> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x240d910 <col:26> 'int' lvalue ParmVar 0x240d350 'model' 'int'
|-FunctionDecl 0x240d5f8 <line:488:5> col:5 implicit used __atomic_clear 'void (volatile void *, int)' extern
| |-ParmVarDecl 0x240d698 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0x240d700 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x240d778 <col:5> Implicit
|-FunctionDecl 0x240ec38 <line:492:1, line:501:1> line:492:23 __atomic_load_8 'UINT64 (const volatile void *, int)' static inline
| |-ParmVarDecl 0x240eaa0 <col:39, col:60> col:60 used mem 'const volatile void *'
| |-ParmVarDecl 0x240eb20 <col:65, col:69> col:69 used model 'int'
| `-CompoundStmt 0x240f1e8 <line:493:1, line:501:1>
|   |-DeclStmt 0x240ed60 <line:494:5, col:15>
|   | `-VarDecl 0x240ecf8 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0x240ee70 <line:496:5, col:29>
|   | `-VarDecl 0x240ed90 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x240ee48 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x240ee30 <col:26> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x240edf8 <col:26> 'const volatile void *' lvalue ParmVar 0x240eaa0 'mem' 'const volatile void *'
|   |-CallExpr 0x240ef30 <line:497:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x240ef18 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x240ee88 <col:5> 'void (void *, int)' Function 0x240cbd8 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x240ef60 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x240eea8 <col:15> 'void *' lvalue Var 0x240ed90 'memP' 'void *'
|   | `-ImplicitCastExpr 0x240ef78 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x240eec8 <col:21> 'int' lvalue ParmVar 0x240eb20 'model' 'int'
|   |-BinaryOperator 0x240f0a8 <line:498:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0x240ef90 <col:5> 'UINT64':'unsigned long long' lvalue Var 0x240ecf8 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0x240f090 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0x240f078 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0x240f050 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0x240f038 <col:22> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x240f008 <col:22> 'const volatile void *' lvalue ParmVar 0x240eaa0 'mem' 'const volatile void *'
|   |-CallExpr 0x240f140 <line:499:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x240f128 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x240f0c8 <col:5> 'void (void *, int)' Function 0x240d3e8 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x240f170 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x240f0e8 <col:16> 'void *' lvalue Var 0x240ed90 'memP' 'void *'
|   | `-ImplicitCastExpr 0x240f188 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x240f108 <col:22> 'int' lvalue ParmVar 0x240eb20 'model' 'int'
|   `-ReturnStmt 0x240f1d8 <line:500:5, col:12>
|     `-ImplicitCastExpr 0x240f1c0 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x240f1a0 <col:12> 'UINT64':'unsigned long long' lvalue Var 0x240ecf8 'ret' 'UINT64':'unsigned long long'
|-FunctionDecl 0x240f458 <line:503:1, line:509:1> line:503:20 __atomic_store_8 'void (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0x240f240 <col:37, col:52> col:52 used mem 'volatile void *'
| |-ParmVarDecl 0x240f2b8 <col:57, col:64> col:64 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x240f338 <col:69, col:73> col:73 used model 'int'
| `-CompoundStmt 0x240f8b0 <line:504:1, line:509:1>
|   |-DeclStmt 0x240f608 <line:505:5, col:29>
|   | `-VarDecl 0x240f528 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x240f5e0 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x240f5c8 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x240f590 <col:26> 'volatile void *' lvalue ParmVar 0x240f240 'mem' 'volatile void *'
|   |-CallExpr 0x240f698 <line:506:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x240f680 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x240f620 <col:5> 'void (void *, int)' Function 0x240cbd8 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x240f6c8 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x240f640 <col:15> 'void *' lvalue Var 0x240f528 'memP' 'void *'
|   | `-ImplicitCastExpr 0x240f6e0 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x240f660 <col:21> 'int' lvalue ParmVar 0x240f338 'model' 'int'
|   |-BinaryOperator 0x240f7b8 <line:507:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0x240f768 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0x240f740 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0x240f728 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x240f6f8 <col:16> 'volatile void *' lvalue ParmVar 0x240f240 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0x240f7a0 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x240f780 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0x240f2b8 'val' 'UINT64':'unsigned long long'
|   `-CallExpr 0x240f850 <line:508:5, col:27> 'void'
|     |-ImplicitCastExpr 0x240f838 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x240f7d8 <col:5> 'void (void *, int)' Function 0x240d3e8 'free_lock' 'void (void *, int)'
|     |-ImplicitCastExpr 0x240f880 <col:16> 'void *' <LValueToRValue>
|     | `-DeclRefExpr 0x240f7f8 <col:16> 'void *' lvalue Var 0x240f528 'memP' 'void *'
|     `-ImplicitCastExpr 0x240f898 <col:22> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x240f818 <col:22> 'int' lvalue ParmVar 0x240f338 'model' 'int'
|-FunctionDecl 0x240fb28 <line:511:1, line:521:1> line:511:22 __atomic_exchange_8 'UINT64 (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0x240f8f8 <col:42, col:57> col:57 used mem 'volatile void *'
| |-ParmVarDecl 0x240f970 <col:62, col:69> col:69 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x240f9f0 <col:74, col:78> col:78 used model 'int'
| `-CompoundStmt 0x2410138 <line:512:1, line:521:1>
|   |-DeclStmt 0x240fc58 <line:513:5, col:15>
|   | `-VarDecl 0x240fbf0 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0x240fd68 <line:515:5, col:29>
|   | `-VarDecl 0x240fc88 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x240fd40 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x240fd28 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x240fcf0 <col:26> 'volatile void *' lvalue ParmVar 0x240f8f8 'mem' 'volatile void *'
|   |-CallExpr 0x240fdf8 <line:516:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x240fde0 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x240fd80 <col:5> 'void (void *, int)' Function 0x240cbd8 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x240fe28 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x240fda0 <col:15> 'void *' lvalue Var 0x240fc88 'memP' 'void *'
|   | `-ImplicitCastExpr 0x240fe40 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x240fdc0 <col:21> 'int' lvalue ParmVar 0x240f9f0 'model' 'int'
|   |-BinaryOperator 0x240ff18 <line:517:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0x240fe58 <col:5> 'UINT64':'unsigned long long' lvalue Var 0x240fbf0 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0x240ff00 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0x240fee8 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0x240fec0 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0x240fea8 <col:22> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x240fe78 <col:22> 'volatile void *' lvalue ParmVar 0x240f8f8 'mem' 'volatile void *'
|   |-BinaryOperator 0x240fff8 <line:518:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0x240ffa8 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0x240ff80 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0x240ff68 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x240ff38 <col:16> 'volatile void *' lvalue ParmVar 0x240f8f8 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0x240ffe0 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x240ffc0 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0x240f970 'val' 'UINT64':'unsigned long long'
|   |-CallExpr 0x2410090 <line:519:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x2410078 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2410018 <col:5> 'void (void *, int)' Function 0x240d3e8 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x24100c0 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x2410038 <col:16> 'void *' lvalue Var 0x240fc88 'memP' 'void *'
|   | `-ImplicitCastExpr 0x24100d8 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2410058 <col:22> 'int' lvalue ParmVar 0x240f9f0 'model' 'int'
|   `-ReturnStmt 0x2410128 <line:520:5, col:12>
|     `-ImplicitCastExpr 0x2410110 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x24100f0 <col:12> 'UINT64':'unsigned long long' lvalue Var 0x240fbf0 'ret' 'UINT64':'unsigned long long'
|-FunctionDecl 0x2410248 <line:327:23, main/hals/driver/hal_watchdog.h:66:20> col:6 used WdtEnable 'void (void)'
|-FunctionDecl 0x2410380 <main/hals/driver/../../los_compiler.h:327:23, main/hals/driver/hal_watchdog.h:67:21> col:6 used WdtDisable 'void (void)'
|-FunctionDecl 0x24104b8 <main/hals/driver/../../los_compiler.h:327:23, main/hals/driver/hal_watchdog.h:68:18> col:6 used WdtFeed 'void (void)'
|-FunctionDecl 0x24105f0 prev 0x2410248 <main/hals/driver/../../los_compiler.h:327:23, main/hals/driver/hal_watchdog.c:51:1> line:34:6 used WdtEnable 'void (void)'
| `-CompoundStmt 0x2414950 <line:35:1, line:51:1>
|   |-IfStmt 0x24108d0 <line:36:5, line:38:5>
|   | |-BinaryOperator 0x2410888 <main/hals/driver/hal_watchdog.h:63:40, main/hals/driver/hal_watchdog.c:36:57> 'unsigned int' '&'
|   | | |-ImplicitCastExpr 0x2410858 <main/hals/driver/hal_watchdog.h:63:40, col:66> 'UINT32':'unsigned int' <LValueToRValue>
|   | | | `-ParenExpr 0x2410798 <col:40, col:66> 'volatile UINT32':'volatile unsigned int' lvalue
|   | | |   `-UnaryOperator 0x2410780 <col:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   | | |     `-CStyleCastExpr 0x2410758 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   | | |       `-ParenExpr 0x2410738 <col:61, col:65> 'int'
|   | | |         `-IntegerLiteral 0x2410690 <line:46:40> 'int' 1072988300
|   | | `-ImplicitCastExpr 0x2410870 <main/hals/driver/hal_watchdog.c:36:36, col:57> 'unsigned int' <IntegralCast>
|   | |   `-ParenExpr 0x2410838 <col:36, col:57> 'int'
|   | |     `-BinaryOperator 0x2410818 <col:37, main/hals/driver/hal_watchdog.h:53:43> 'int' '<<'
|   | |       |-IntegerLiteral 0x24107b8 <main/hals/driver/hal_watchdog.c:36:37> 'int' 1
|   | |       `-ParenExpr 0x24107f8 <main/hals/driver/hal_watchdog.h:53:40, col:43> 'int'
|   | |         `-IntegerLiteral 0x24107d8 <col:41> 'int' 31
|   | `-CompoundStmt 0x24108b8 <main/hals/driver/hal_watchdog.c:36:60, line:38:5>
|   |   `-ReturnStmt 0x24108a8 <line:37:9>
|   |-IfStmt 0x2413d70 <line:40:5, line:42:5>
|   | |-BinaryOperator 0x2410a08 <main/hals/driver/hal_watchdog.h:63:40, line:43:40> 'int' '!='
|   | | |-ImplicitCastExpr 0x24109d8 <line:63:40, col:66> 'UINT32':'unsigned int' <LValueToRValue>
|   | | | `-ParenExpr 0x2410998 <col:40, col:66> 'volatile UINT32':'volatile unsigned int' lvalue
|   | | |   `-UnaryOperator 0x2410980 <col:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   | | |     `-CStyleCastExpr 0x2410958 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   | | |       `-ParenExpr 0x2410938 <col:61, col:65> 'int'
|   | | |         `-IntegerLiteral 0x24108e8 <line:45:40> 'int' 1072988324
|   | | `-ImplicitCastExpr 0x24109f0 <line:43:40> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x24109b8 <col:40> 'int' 1356348065
|   | `-CompoundStmt 0x2413d58 <main/hals/driver/hal_watchdog.c:40:57, line:42:5>
|   |   `-ParenExpr 0x2413d38 <main/hals/driver/hal_watchdog.h:64:40, col:75> 'UINT32':'unsigned int'
|   |     `-CompoundAssignOperator 0x2413d08 <col:41, line:43:40> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |       |-UnaryOperator 0x2413cb8 <line:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   |       | `-CStyleCastExpr 0x2413c90 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   |       |   `-ParenExpr 0x2413c70 <col:61, col:65> 'int'
|   |       |     `-IntegerLiteral 0x2410a28 <line:45:40> 'int' 1072988324
|   |       `-ImplicitCastExpr 0x2413cf0 <line:43:40> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x2413cd0 <col:40> 'int' 1356348065
|   |-ParenExpr 0x2413f20 <line:64:40, col:75> 'UINT32':'unsigned int'
|   | `-CompoundAssignOperator 0x2413ef0 <col:41, main/hals/driver/hal_watchdog.c:44:54> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |-UnaryOperator 0x2413e20 <main/hals/driver/hal_watchdog.h:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   |   | `-CStyleCastExpr 0x2413df8 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   |   |   `-ParenExpr 0x2413dd8 <col:61, col:65> 'int'
|   |   |     `-IntegerLiteral 0x2413d88 <line:47:40> 'int' 1072988320
|   |   `-ImplicitCastExpr 0x2413ed8 <main/hals/driver/hal_watchdog.c:44:31, col:54> 'unsigned int' <IntegralCast>
|   |     `-ParenExpr 0x2413eb8 <col:31, col:54> 'int'
|   |       `-BinaryOperator 0x2413e98 <col:32, main/hals/driver/hal_watchdog.h:52:43> 'int' '<<'
|   |         |-IntegerLiteral 0x2413e38 <main/hals/driver/hal_watchdog.c:44:32> 'int' 1
|   |         `-ParenExpr 0x2413e78 <main/hals/driver/hal_watchdog.h:52:40, col:43> 'int'
|   |           `-IntegerLiteral 0x2413e58 <col:41> 'int' 31
|   |-ParenExpr 0x24140f8 <line:64:40, col:75> 'UINT32':'unsigned int'
|   | `-CompoundAssignOperator 0x24140c8 <col:41, main/hals/driver/hal_watchdog.c:45:75> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |-UnaryOperator 0x2413fd8 <main/hals/driver/hal_watchdog.h:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   |   | `-CStyleCastExpr 0x2413fb0 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   |   |   `-ParenExpr 0x2413f90 <col:61, col:65> 'int'
|   |   |     `-IntegerLiteral 0x2413f40 <line:46:40> 'int' 1072988300
|   |   `-ImplicitCastExpr 0x24140b0 <main/hals/driver/hal_watchdog.c:45:31, col:75> 'unsigned int' <IntegralCast>
|   |     `-ParenExpr 0x2414090 <col:31, col:75> 'int'
|   |       `-BinaryOperator 0x2414070 <main/hals/driver/hal_watchdog.h:58:40, line:54:43> 'int' '<<'
|   |         |-ParenExpr 0x2414010 <line:58:40, col:42> 'int'
|   |         | `-IntegerLiteral 0x2413ff0 <col:41> 'int' 3
|   |         `-ParenExpr 0x2414050 <line:54:40, col:43> 'int'
|   |           `-IntegerLiteral 0x2414030 <col:41> 'int' 28
|   |-ParenExpr 0x24142d0 <line:64:40, col:75> 'UINT32':'unsigned int'
|   | `-CompoundAssignOperator 0x24142a0 <col:41, main/hals/driver/hal_watchdog.c:46:92> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |-UnaryOperator 0x24141b0 <main/hals/driver/hal_watchdog.h:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   |   | `-CStyleCastExpr 0x2414188 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   |   |   `-ParenExpr 0x2414168 <col:61, col:65> 'int'
|   |   |     `-IntegerLiteral 0x2414118 <line:46:40> 'int' 1072988300
|   |   `-ImplicitCastExpr 0x2414288 <main/hals/driver/hal_watchdog.c:46:31, col:92> 'unsigned int' <IntegralCast>
|   |     `-ParenExpr 0x2414268 <col:31, col:92> 'int'
|   |       `-BinaryOperator 0x2414248 <main/hals/driver/hal_watchdog.h:60:40, line:61:43> 'int' '<<'
|   |         |-ParenExpr 0x24141e8 <line:60:40, col:42> 'int'
|   |         | `-IntegerLiteral 0x24141c8 <col:41> 'int' 7
|   |         `-ParenExpr 0x2414228 <line:61:40, col:43> 'int'
|   |           `-IntegerLiteral 0x2414208 <col:41> 'int' 11
|   |-ParenExpr 0x2414488 <line:64:40, col:75> 'UINT32':'unsigned int'
|   | `-CompoundAssignOperator 0x2414458 <col:41, main/hals/driver/hal_watchdog.c:47:66> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |-UnaryOperator 0x2414388 <main/hals/driver/hal_watchdog.h:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   |   | `-CStyleCastExpr 0x2414360 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   |   |   `-ParenExpr 0x2414340 <col:61, col:65> 'int'
|   |   |     `-IntegerLiteral 0x24142f0 <line:46:40> 'int' 1072988300
|   |   `-ImplicitCastExpr 0x2414440 <main/hals/driver/hal_watchdog.c:47:31, col:66> 'unsigned int' <IntegralCast>
|   |     `-ParenExpr 0x2414420 <col:31, col:66> 'int'
|   |       `-BinaryOperator 0x2414400 <col:32, main/hals/driver/hal_watchdog.h:55:43> 'int' '<<'
|   |         |-IntegerLiteral 0x24143a0 <main/hals/driver/hal_watchdog.c:47:32> 'int' 1
|   |         `-ParenExpr 0x24143e0 <main/hals/driver/hal_watchdog.h:55:40, col:43> 'int'
|   |           `-IntegerLiteral 0x24143c0 <col:41> 'int' 10
|   |-ParenExpr 0x2414640 <line:64:40, col:75> 'UINT32':'unsigned int'
|   | `-CompoundAssignOperator 0x2414610 <col:41, main/hals/driver/hal_watchdog.c:48:66> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |-UnaryOperator 0x2414540 <main/hals/driver/hal_watchdog.h:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   |   | `-CStyleCastExpr 0x2414518 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   |   |   `-ParenExpr 0x24144f8 <col:61, col:65> 'int'
|   |   |     `-IntegerLiteral 0x24144a8 <line:46:40> 'int' 1072988300
|   |   `-ImplicitCastExpr 0x24145f8 <main/hals/driver/hal_watchdog.c:48:31, col:66> 'unsigned int' <IntegralCast>
|   |     `-ParenExpr 0x24145d8 <col:31, col:66> 'int'
|   |       `-BinaryOperator 0x24145b8 <col:32, main/hals/driver/hal_watchdog.h:55:43> 'int' '<<'
|   |         |-IntegerLiteral 0x2414558 <main/hals/driver/hal_watchdog.c:48:32> 'int' 1
|   |         `-ParenExpr 0x2414598 <main/hals/driver/hal_watchdog.h:55:40, col:43> 'int'
|   |           `-IntegerLiteral 0x2414578 <col:41> 'int' 10
|   |-ParenExpr 0x24147f8 <line:64:40, col:75> 'UINT32':'unsigned int'
|   | `-CompoundAssignOperator 0x24147c8 <col:41, main/hals/driver/hal_watchdog.c:49:52> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |-UnaryOperator 0x24146f8 <main/hals/driver/hal_watchdog.h:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   |   | `-CStyleCastExpr 0x24146d0 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   |   |   `-ParenExpr 0x24146b0 <col:61, col:65> 'int'
|   |   |     `-IntegerLiteral 0x2414660 <line:46:40> 'int' 1072988300
|   |   `-ImplicitCastExpr 0x24147b0 <main/hals/driver/hal_watchdog.c:49:31, col:52> 'unsigned int' <IntegralCast>
|   |     `-ParenExpr 0x2414790 <col:31, col:52> 'int'
|   |       `-BinaryOperator 0x2414770 <col:32, main/hals/driver/hal_watchdog.h:53:43> 'int' '<<'
|   |         |-IntegerLiteral 0x2414710 <main/hals/driver/hal_watchdog.c:49:32> 'int' 1
|   |         `-ParenExpr 0x2414750 <main/hals/driver/hal_watchdog.h:53:40, col:43> 'int'
|   |           `-IntegerLiteral 0x2414730 <col:41> 'int' 31
|   `-ParenExpr 0x2414930 <line:64:40, col:75> 'UINT32':'unsigned int'
|     `-CompoundAssignOperator 0x2414900 <col:41, main/hals/driver/hal_watchdog.c:50:34> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|       |-UnaryOperator 0x24148b0 <main/hals/driver/hal_watchdog.h:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|       | `-CStyleCastExpr 0x2414888 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|       |   `-ParenExpr 0x2414868 <col:61, col:65> 'int'
|       |     `-IntegerLiteral 0x2414818 <line:45:40> 'int' 1072988324
|       `-ImplicitCastExpr 0x24148e8 <main/hals/driver/hal_watchdog.c:50:34> 'unsigned int' <IntegralCast>
|         `-IntegerLiteral 0x24148c8 <col:34> 'int' 0
|-FunctionDecl 0x2414a40 prev 0x2410380 <main/hals/driver/../../los_compiler.h:327:23, main/hals/driver/hal_watchdog.c:64:1> line:53:6 used WdtDisable 'void (void)'
| `-CompoundStmt 0x2416e30 <line:54:1, line:64:1>
|   |-IfStmt 0x2416400 <line:55:5, line:57:5>
|   | |-BinaryOperator 0x2414c00 <main/hals/driver/hal_watchdog.h:63:40, line:43:40> 'int' '!='
|   | | |-ImplicitCastExpr 0x2414bd0 <line:63:40, col:66> 'UINT32':'unsigned int' <LValueToRValue>
|   | | | `-ParenExpr 0x2414b90 <col:40, col:66> 'volatile UINT32':'volatile unsigned int' lvalue
|   | | |   `-UnaryOperator 0x2414b78 <col:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   | | |     `-CStyleCastExpr 0x2414b50 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   | | |       `-ParenExpr 0x2414b30 <col:61, col:65> 'int'
|   | | |         `-IntegerLiteral 0x2414ae0 <line:45:40> 'int' 1072988324
|   | | `-ImplicitCastExpr 0x2414be8 <line:43:40> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x2414bb0 <col:40> 'int' 1356348065
|   | `-CompoundStmt 0x24163e8 <main/hals/driver/hal_watchdog.c:55:57, line:57:5>
|   |   `-ParenExpr 0x24163c8 <main/hals/driver/hal_watchdog.h:64:40, col:75> 'UINT32':'unsigned int'
|   |     `-CompoundAssignOperator 0x2416398 <col:41, line:43:40> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |       |-UnaryOperator 0x2416348 <line:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   |       | `-CStyleCastExpr 0x2416320 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   |       |   `-ParenExpr 0x2416300 <col:61, col:65> 'int'
|   |       |     `-IntegerLiteral 0x2414c20 <line:45:40> 'int' 1072988324
|   |       `-ImplicitCastExpr 0x2416380 <line:43:40> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x2416360 <col:40> 'int' 1356348065
|   |-ParenExpr 0x24165b0 <line:64:40, col:75> 'UINT32':'unsigned int'
|   | `-CompoundAssignOperator 0x2416580 <col:41, main/hals/driver/hal_watchdog.c:58:54> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |-UnaryOperator 0x24164b0 <main/hals/driver/hal_watchdog.h:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   |   | `-CStyleCastExpr 0x2416488 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   |   |   `-ParenExpr 0x2416468 <col:61, col:65> 'int'
|   |   |     `-IntegerLiteral 0x2416418 <line:47:40> 'int' 1072988320
|   |   `-ImplicitCastExpr 0x2416568 <main/hals/driver/hal_watchdog.c:58:31, col:54> 'unsigned int' <IntegralCast>
|   |     `-ParenExpr 0x2416548 <col:31, col:54> 'int'
|   |       `-BinaryOperator 0x2416528 <col:32, main/hals/driver/hal_watchdog.h:52:43> 'int' '<<'
|   |         |-IntegerLiteral 0x24164c8 <main/hals/driver/hal_watchdog.c:58:32> 'int' 1
|   |         `-ParenExpr 0x2416508 <main/hals/driver/hal_watchdog.h:52:40, col:43> 'int'
|   |           `-IntegerLiteral 0x24164e8 <col:41> 'int' 31
|   |-ParenExpr 0x2416768 <line:64:40, col:75> 'UINT32':'unsigned int'
|   | `-CompoundAssignOperator 0x2416738 <col:41, main/hals/driver/hal_watchdog.c:59:54> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |-UnaryOperator 0x2416668 <main/hals/driver/hal_watchdog.h:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   |   | `-CStyleCastExpr 0x2416640 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   |   |   `-ParenExpr 0x2416620 <col:61, col:65> 'int'
|   |   |     `-IntegerLiteral 0x24165d0 <line:46:40> 'int' 1072988300
|   |   `-ImplicitCastExpr 0x2416720 <main/hals/driver/hal_watchdog.c:59:31, col:54> 'unsigned int' <IntegralCast>
|   |     `-ParenExpr 0x2416700 <col:31, col:54> 'int'
|   |       `-BinaryOperator 0x24166e0 <col:32, main/hals/driver/hal_watchdog.h:54:43> 'int' '<<'
|   |         |-IntegerLiteral 0x2416680 <main/hals/driver/hal_watchdog.c:59:32> 'int' 0
|   |         `-ParenExpr 0x24166c0 <main/hals/driver/hal_watchdog.h:54:40, col:43> 'int'
|   |           `-IntegerLiteral 0x24166a0 <col:41> 'int' 28
|   |-ParenExpr 0x2416938 <line:64:40, col:75> 'UINT32':'unsigned int'
|   | `-CompoundAssignOperator 0x2416908 <col:41, main/hals/driver/hal_watchdog.c:60:67> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |-UnaryOperator 0x2416820 <main/hals/driver/hal_watchdog.h:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   |   | `-CStyleCastExpr 0x24167f8 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   |   |   `-ParenExpr 0x24167d8 <col:61, col:65> 'int'
|   |   |     `-IntegerLiteral 0x2416788 <line:46:40> 'int' 1072988300
|   |   `-ImplicitCastExpr 0x24168f0 <main/hals/driver/hal_watchdog.c:60:31, col:67> 'unsigned int' <IntegralCast>
|   |     `-UnaryOperator 0x24168d8 <col:31, col:67> 'int' prefix '~' cannot overflow
|   |       `-ParenExpr 0x24168b8 <col:32, col:67> 'int'
|   |         `-BinaryOperator 0x2416898 <col:33, main/hals/driver/hal_watchdog.h:55:43> 'int' '<<'
|   |           |-IntegerLiteral 0x2416838 <main/hals/driver/hal_watchdog.c:60:33> 'int' 1
|   |           `-ParenExpr 0x2416878 <main/hals/driver/hal_watchdog.h:55:40, col:43> 'int'
|   |             `-IntegerLiteral 0x2416858 <col:41> 'int' 10
|   |-ParenExpr 0x2416b08 <line:64:40, col:75> 'UINT32':'unsigned int'
|   | `-CompoundAssignOperator 0x2416ad8 <col:41, main/hals/driver/hal_watchdog.c:61:67> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |-UnaryOperator 0x24169f0 <main/hals/driver/hal_watchdog.h:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   |   | `-CStyleCastExpr 0x24169c8 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   |   |   `-ParenExpr 0x24169a8 <col:61, col:65> 'int'
|   |   |     `-IntegerLiteral 0x2416958 <line:46:40> 'int' 1072988300
|   |   `-ImplicitCastExpr 0x2416ac0 <main/hals/driver/hal_watchdog.c:61:31, col:67> 'unsigned int' <IntegralCast>
|   |     `-UnaryOperator 0x2416aa8 <col:31, col:67> 'int' prefix '~' cannot overflow
|   |       `-ParenExpr 0x2416a88 <col:32, col:67> 'int'
|   |         `-BinaryOperator 0x2416a68 <col:33, main/hals/driver/hal_watchdog.h:55:43> 'int' '<<'
|   |           |-IntegerLiteral 0x2416a08 <main/hals/driver/hal_watchdog.c:61:33> 'int' 1
|   |           `-ParenExpr 0x2416a48 <main/hals/driver/hal_watchdog.h:55:40, col:43> 'int'
|   |             `-IntegerLiteral 0x2416a28 <col:41> 'int' 10
|   |-ParenExpr 0x2416cd8 <line:64:40, col:75> 'UINT32':'unsigned int'
|   | `-CompoundAssignOperator 0x2416ca8 <col:41, main/hals/driver/hal_watchdog.c:62:53> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |-UnaryOperator 0x2416bc0 <main/hals/driver/hal_watchdog.h:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   |   | `-CStyleCastExpr 0x2416b98 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   |   |   `-ParenExpr 0x2416b78 <col:61, col:65> 'int'
|   |   |     `-IntegerLiteral 0x2416b28 <line:46:40> 'int' 1072988300
|   |   `-ImplicitCastExpr 0x2416c90 <main/hals/driver/hal_watchdog.c:62:31, col:53> 'unsigned int' <IntegralCast>
|   |     `-UnaryOperator 0x2416c78 <col:31, col:53> 'int' prefix '~' cannot overflow
|   |       `-ParenExpr 0x2416c58 <col:32, col:53> 'int'
|   |         `-BinaryOperator 0x2416c38 <col:33, main/hals/driver/hal_watchdog.h:53:43> 'int' '<<'
|   |           |-IntegerLiteral 0x2416bd8 <main/hals/driver/hal_watchdog.c:62:33> 'int' 1
|   |           `-ParenExpr 0x2416c18 <main/hals/driver/hal_watchdog.h:53:40, col:43> 'int'
|   |             `-IntegerLiteral 0x2416bf8 <col:41> 'int' 31
|   `-ParenExpr 0x2416e10 <line:64:40, col:75> 'UINT32':'unsigned int'
|     `-CompoundAssignOperator 0x2416de0 <col:41, main/hals/driver/hal_watchdog.c:63:34> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|       |-UnaryOperator 0x2416d90 <main/hals/driver/hal_watchdog.h:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|       | `-CStyleCastExpr 0x2416d68 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|       |   `-ParenExpr 0x2416d48 <col:61, col:65> 'int'
|       |     `-IntegerLiteral 0x2416cf8 <line:45:40> 'int' 1072988324
|       `-ImplicitCastExpr 0x2416dc8 <main/hals/driver/hal_watchdog.c:63:34> 'unsigned int' <IntegralCast>
|         `-IntegerLiteral 0x2416da8 <col:34> 'int' 0
|-FunctionDecl 0x2416f10 prev 0x24104b8 <main/hals/driver/../../los_compiler.h:327:23, main/hals/driver/hal_watchdog.c:73:1> line:66:6 used WdtFeed 'void (void)'
| `-CompoundStmt 0x2415168 <line:67:1, line:73:1>
|   |-IfStmt 0x2417240 <line:68:5, line:70:5>
|   | |-BinaryOperator 0x24170d0 <main/hals/driver/hal_watchdog.h:63:40, line:43:40> 'int' '!='
|   | | |-ImplicitCastExpr 0x24170a0 <line:63:40, col:66> 'UINT32':'unsigned int' <LValueToRValue>
|   | | | `-ParenExpr 0x2417060 <col:40, col:66> 'volatile UINT32':'volatile unsigned int' lvalue
|   | | |   `-UnaryOperator 0x2417048 <col:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   | | |     `-CStyleCastExpr 0x2417020 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   | | |       `-ParenExpr 0x2417000 <col:61, col:65> 'int'
|   | | |         `-IntegerLiteral 0x2416fb0 <line:45:40> 'int' 1072988324
|   | | `-ImplicitCastExpr 0x24170b8 <line:43:40> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x2417080 <col:40> 'int' 1356348065
|   | `-CompoundStmt 0x2417228 <main/hals/driver/hal_watchdog.c:68:57, line:70:5>
|   |   `-ParenExpr 0x2417208 <main/hals/driver/hal_watchdog.h:64:40, col:75> 'UINT32':'unsigned int'
|   |     `-CompoundAssignOperator 0x24171d8 <col:41, line:43:40> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |       |-UnaryOperator 0x2417188 <line:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   |       | `-CStyleCastExpr 0x2417160 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   |       |   `-ParenExpr 0x2417140 <col:61, col:65> 'int'
|   |       |     `-IntegerLiteral 0x24170f0 <line:45:40> 'int' 1072988324
|   |       `-ImplicitCastExpr 0x24171c0 <line:43:40> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x24171a0 <col:40> 'int' 1356348065
|   |-ParenExpr 0x2415010 <line:64:40, col:75> 'UINT32':'unsigned int'
|   | `-CompoundAssignOperator 0x2414fe0 <col:41, main/hals/driver/hal_watchdog.c:71:54> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |-UnaryOperator 0x2414f10 <main/hals/driver/hal_watchdog.h:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|   |   | `-CStyleCastExpr 0x24172c8 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|   |   |   `-ParenExpr 0x24172a8 <col:61, col:65> 'int'
|   |   |     `-IntegerLiteral 0x2417258 <line:47:40> 'int' 1072988320
|   |   `-ImplicitCastExpr 0x2414fc8 <main/hals/driver/hal_watchdog.c:71:31, col:54> 'unsigned int' <IntegralCast>
|   |     `-ParenExpr 0x2414fa8 <col:31, col:54> 'int'
|   |       `-BinaryOperator 0x2414f88 <col:32, main/hals/driver/hal_watchdog.h:52:43> 'int' '<<'
|   |         |-IntegerLiteral 0x2414f28 <main/hals/driver/hal_watchdog.c:71:32> 'int' 1
|   |         `-ParenExpr 0x2414f68 <main/hals/driver/hal_watchdog.h:52:40, col:43> 'int'
|   |           `-IntegerLiteral 0x2414f48 <col:41> 'int' 31
|   `-ParenExpr 0x2415148 <line:64:40, col:75> 'UINT32':'unsigned int'
|     `-CompoundAssignOperator 0x2415118 <col:41, main/hals/driver/hal_watchdog.c:72:34> 'UINT32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|       |-UnaryOperator 0x24150c8 <main/hals/driver/hal_watchdog.h:64:41, col:65> 'volatile UINT32':'volatile unsigned int' lvalue prefix '*' cannot overflow
|       | `-CStyleCastExpr 0x24150a0 <col:42, col:65> 'volatile UINT32 *' <IntegralToPointer>
|       |   `-ParenExpr 0x2415080 <col:61, col:65> 'int'
|       |     `-IntegerLiteral 0x2415030 <line:45:40> 'int' 1072988324
|       `-ImplicitCastExpr 0x2415100 <main/hals/driver/hal_watchdog.c:72:34> 'unsigned int' <IntegralCast>
|         `-IntegerLiteral 0x24150e0 <col:34> 'int' 0
|-FunctionDecl 0x2415228 <line:75:1, line:78:1> line:75:6 IoTWatchDogEnable 'void (void)'
| `-CompoundStmt 0x2415350 <line:76:1, line:78:1>
|   `-CallExpr 0x2415330 <line:77:5, col:15> 'void'
|     `-ImplicitCastExpr 0x2415318 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
|       `-DeclRefExpr 0x24152c8 <col:5> 'void (void)' Function 0x24105f0 'WdtEnable' 'void (void)'
|-FunctionDecl 0x2415400 <line:80:1, line:83:1> line:80:6 IoTWatchDogKick 'void (void)'
| `-CompoundStmt 0x24154f8 <line:81:1, line:83:1>
|   `-CallExpr 0x24154d8 <line:82:5, col:13> 'void'
|     `-ImplicitCastExpr 0x24154c0 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
|       `-DeclRefExpr 0x24154a0 <col:5> 'void (void)' Function 0x2416f10 'WdtFeed' 'void (void)'
`-FunctionDecl 0x24155a8 <line:85:1, line:88:1> line:85:6 IoTWatchDogDisable 'void (void)'
  `-CompoundStmt 0x24156a0 <line:86:1, line:88:1>
    `-CallExpr 0x2415680 <line:87:5, col:16> 'void'
      `-ImplicitCastExpr 0x2415668 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
        `-DeclRefExpr 0x2415648 <col:5> 'void (void)' Function 0x2414a40 'WdtDisable' 'void (void)'

TranslationUnitDecl 0xe84d48 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0xe855e0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0xe852e0 '__int128'
|-TypedefDecl 0xe85650 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0xe85300 'unsigned __int128'
|-TypedefDecl 0xe85958 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0xe85730 'struct __NSConstantString_tag'
|   `-Record 0xe856a8 '__NSConstantString_tag'
|-TypedefDecl 0xe859f0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0xe859b0 'char *'
|   `-BuiltinType 0xe84de0 'char'
|-TypedefDecl 0xe85ce8 <<invalid sloc>> <invalid sloc> implicit referenced __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0xe85c90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0xe85ad0 'struct __va_list_tag'
|     `-Record 0xe85a48 '__va_list_tag'
|-TypedefDecl 0xefde48 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:46:1, col:23> col:23 referenced size_t 'unsigned long'
| `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xefded0 </usr/lib/llvm-10/lib/clang/10.0.0/include/stdarg.h:14:1, col:27> col:27 va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0xefdea0 '__builtin_va_list' sugar
|   |-Typedef 0xe85ce8 '__builtin_va_list'
|   `-ConstantArrayType 0xe85c90 'struct __va_list_tag [1]' 1 
|     `-RecordType 0xe85ad0 'struct __va_list_tag'
|       `-Record 0xe85a48 '__va_list_tag'
|-TypedefDecl 0xefdf38 <line:32:1, col:27> col:27 referenced __gnuc_va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0xefdea0 '__builtin_va_list' sugar
|   |-Typedef 0xe85ce8 '__builtin_va_list'
|   `-ConstantArrayType 0xe85c90 'struct __va_list_tag [1]' 1 
|     `-RecordType 0xe85ad0 'struct __va_list_tag'
|       `-Record 0xe85a48 '__va_list_tag'
|-TypedefDecl 0xefdfa8 </usr/include/x86_64-linux-gnu/bits/types.h:31:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0xe84ea0 'unsigned char'
|-TypedefDecl 0xefe018 <line:32:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0xe84ec0 'unsigned short'
|-TypedefDecl 0xefe088 <line:33:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0xe84ee0 'unsigned int'
|-TypedefDecl 0xefe0f8 <line:34:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xefe168 <line:37:1, col:21> col:21 referenced __int8_t 'signed char'
| `-BuiltinType 0xe84e00 'signed char'
|-TypedefDecl 0xefe1d8 <line:38:1, col:23> col:23 referenced __uint8_t 'unsigned char'
| `-BuiltinType 0xe84ea0 'unsigned char'
|-TypedefDecl 0xefe248 <line:39:1, col:26> col:26 referenced __int16_t 'short'
| `-BuiltinType 0xe84e20 'short'
|-TypedefDecl 0xefe2b8 <line:40:1, col:28> col:28 referenced __uint16_t 'unsigned short'
| `-BuiltinType 0xe84ec0 'unsigned short'
|-TypedefDecl 0xefe328 <line:41:1, col:20> col:20 referenced __int32_t 'int'
| `-BuiltinType 0xe84e40 'int'
|-TypedefDecl 0xefe398 <line:42:1, col:22> col:22 referenced __uint32_t 'unsigned int'
| `-BuiltinType 0xe84ee0 'unsigned int'
|-TypedefDecl 0xefe408 <line:44:1, col:25> col:25 referenced __int64_t 'long'
| `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xefe478 <line:45:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xefe500 <line:52:1, col:18> col:18 __int_least8_t '__int8_t':'signed char'
| `-TypedefType 0xefe4d0 '__int8_t' sugar
|   |-Typedef 0xefe168 '__int8_t'
|   `-BuiltinType 0xe84e00 'signed char'
|-TypedefDecl 0xefe590 <line:53:1, col:19> col:19 __uint_least8_t '__uint8_t':'unsigned char'
| `-TypedefType 0xefe560 '__uint8_t' sugar
|   |-Typedef 0xefe1d8 '__uint8_t'
|   `-BuiltinType 0xe84ea0 'unsigned char'
|-TypedefDecl 0xefe620 <line:54:1, col:19> col:19 __int_least16_t '__int16_t':'short'
| `-TypedefType 0xefe5f0 '__int16_t' sugar
|   |-Typedef 0xefe248 '__int16_t'
|   `-BuiltinType 0xe84e20 'short'
|-TypedefDecl 0xefe6b0 <line:55:1, col:20> col:20 __uint_least16_t '__uint16_t':'unsigned short'
| `-TypedefType 0xefe680 '__uint16_t' sugar
|   |-Typedef 0xefe2b8 '__uint16_t'
|   `-BuiltinType 0xe84ec0 'unsigned short'
|-TypedefDecl 0xefe740 <line:56:1, col:19> col:19 __int_least32_t '__int32_t':'int'
| `-TypedefType 0xefe710 '__int32_t' sugar
|   |-Typedef 0xefe328 '__int32_t'
|   `-BuiltinType 0xe84e40 'int'
|-TypedefDecl 0xefe7d0 <line:57:1, col:20> col:20 __uint_least32_t '__uint32_t':'unsigned int'
| `-TypedefType 0xefe7a0 '__uint32_t' sugar
|   |-Typedef 0xefe398 '__uint32_t'
|   `-BuiltinType 0xe84ee0 'unsigned int'
|-TypedefDecl 0xefe860 <line:58:1, col:19> col:19 __int_least64_t '__int64_t':'long'
| `-TypedefType 0xefe830 '__int64_t' sugar
|   |-Typedef 0xefe408 '__int64_t'
|   `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xefe8f0 <line:59:1, col:20> col:20 __uint_least64_t '__uint64_t':'unsigned long'
| `-TypedefType 0xefe8c0 '__uint64_t' sugar
|   |-Typedef 0xefe478 '__uint64_t'
|   `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xefe960 <line:63:1, col:18> col:18 __quad_t 'long'
| `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xefe9d0 <line:64:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xefea40 <line:72:1, col:18> col:18 __intmax_t 'long'
| `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xefeab0 <line:73:1, col:27> col:27 __uintmax_t 'unsigned long'
| `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xefeb20 <line:137:22, line:145:25> col:25 __dev_t 'unsigned long'
| `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xefeb90 <line:137:22, line:146:25> col:25 __uid_t 'unsigned int'
| `-BuiltinType 0xe84ee0 'unsigned int'
|-TypedefDecl 0xefec00 <line:137:22, line:147:25> col:25 __gid_t 'unsigned int'
| `-BuiltinType 0xe84ee0 'unsigned int'
|-TypedefDecl 0xefec70 <line:137:22, line:148:25> col:25 __ino_t 'unsigned long'
| `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xefece0 <line:137:22, line:149:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xefed50 <line:137:22, line:150:26> col:26 __mode_t 'unsigned int'
| `-BuiltinType 0xe84ee0 'unsigned int'
|-TypedefDecl 0xefedc0 <line:137:22, line:151:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xf0ac20 <line:137:22, line:152:25> col:25 referenced __off_t 'long'
| `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xf0ac90 <line:137:22, line:153:27> col:27 referenced __off64_t 'long'
| `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xf0ad00 <line:137:22, line:154:25> col:25 __pid_t 'int'
| `-BuiltinType 0xe84e40 'int'
|-RecordDecl 0xf0ad58 </usr/include/x86_64-linux-gnu/bits/typesizes.h:72:24, col:47> col:24 struct definition
| `-FieldDecl 0xf0aea0 <col:33, col:44> col:37 __val 'int [2]'
|-TypedefDecl 0xf0af48 </usr/include/x86_64-linux-gnu/bits/types.h:137:22, line:155:26> col:26 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0xf0aef0 'struct __fsid_t' sugar
|   `-RecordType 0xf0ade0 '__fsid_t'
|     `-Record 0xf0ad58 ''
|-TypedefDecl 0xf0afd0 <line:137:22, line:156:27> col:27 __clock_t 'long'
| `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xf0b040 <line:137:22, line:157:26> col:26 __rlim_t 'unsigned long'
| `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xf0b0b0 <line:137:22, line:158:28> col:28 __rlim64_t 'unsigned long'
| `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xf0b120 <line:137:22, line:159:24> col:24 __id_t 'unsigned int'
| `-BuiltinType 0xe84ee0 'unsigned int'
|-TypedefDecl 0xf0b190 <line:137:22, line:160:26> col:26 __time_t 'long'
| `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xf0b200 <line:137:22, line:161:30> col:30 __useconds_t 'unsigned int'
| `-BuiltinType 0xe84ee0 'unsigned int'
|-TypedefDecl 0xf0b270 <line:137:22, line:162:31> col:31 __suseconds_t 'long'
| `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xf0b2e0 <line:137:22, line:164:27> col:27 __daddr_t 'int'
| `-BuiltinType 0xe84e40 'int'
|-TypedefDecl 0xf0b350 <line:137:22, line:165:25> col:25 __key_t 'int'
| `-BuiltinType 0xe84e40 'int'
|-TypedefDecl 0xf0b3c0 <line:137:22, line:168:29> col:29 __clockid_t 'int'
| `-BuiltinType 0xe84e40 'int'
|-TypedefDecl 0xf0b430 <line:137:22, line:171:27> col:27 __timer_t 'void *'
| `-PointerType 0xe85560 'void *'
|   `-BuiltinType 0xe84da0 'void'
|-TypedefDecl 0xf0b4a0 <line:137:22, line:174:29> col:29 __blksize_t 'long'
| `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xf0b510 <line:137:22, line:179:28> col:28 __blkcnt_t 'long'
| `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xf0b580 <line:137:22, line:180:30> col:30 __blkcnt64_t 'long'
| `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xf0b5f0 <line:137:22, line:183:30> col:30 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xf0b660 <line:137:22, line:184:32> col:32 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xf0b6d0 <line:137:22, line:187:30> col:30 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xf0b740 <line:137:22, line:188:32> col:32 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xf0b7b0 <line:137:22, line:191:28> col:28 __fsword_t 'long'
| `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xf0b820 <line:137:22, line:193:27> col:27 referenced __ssize_t 'long'
| `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xf0b890 <line:137:22, line:196:33> col:33 __syscall_slong_t 'long'
| `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xf0b900 <line:137:22, line:198:33> col:33 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0xe84f00 'unsigned long'
|-TypedefDecl 0xf0b990 <line:202:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0xf0b960 '__off64_t' sugar
|   |-Typedef 0xf0ac90 '__off64_t'
|   `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xf0ba00 <line:203:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0xe859b0 'char *'
|   `-BuiltinType 0xe84de0 'char'
|-TypedefDecl 0xf0ba70 <line:137:22, line:206:25> col:25 __intptr_t 'long'
| `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xf0bae0 <line:137:22, line:209:23> col:23 __socklen_t 'unsigned int'
| `-BuiltinType 0xe84ee0 'unsigned int'
|-TypedefDecl 0xf0bb50 <line:214:1, col:13> col:13 __sig_atomic_t 'int'
| `-BuiltinType 0xe84e40 'int'
|-RecordDecl 0xef8380 </usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:13:9, line:21:1> line:13:9 struct definition
| |-FieldDecl 0xef8438 <line:15:3, col:7> col:7 __count 'int'
| |-RecordDecl 0xef8488 <line:16:3, line:20:3> line:16:3 union definition
| | |-FieldDecl 0xef8548 <<built-in>:87:23, /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:18:19> col:19 __wch 'unsigned int'
| | `-FieldDecl 0xef8628 <line:19:5, col:18> col:10 __wchb 'char [4]'
| `-FieldDecl 0xef86d8 <line:16:3, line:20:5> col:5 __value 'union (anonymous union at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)':'union __mbstate_t::(anonymous at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)'
|-TypedefDecl 0xef8788 <line:13:1, line:21:3> col:3 referenced __mbstate_t 'struct __mbstate_t':'__mbstate_t'
| `-ElaboratedType 0xef8730 'struct __mbstate_t' sugar
|   `-RecordType 0xef8400 '__mbstate_t'
|     `-Record 0xef8380 ''
|-RecordDecl 0xef87f8 </usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h:10:9, line:14:1> line:10:16 struct _G_fpos_t definition
| |-FieldDecl 0xef88d0 <line:12:3, col:11> col:11 __pos '__off_t':'long'
| `-FieldDecl 0xef8950 <line:13:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
|-TypedefDecl 0xef89f8 <line:10:1, line:14:3> col:3 referenced __fpos_t 'struct _G_fpos_t':'struct _G_fpos_t'
| `-ElaboratedType 0xef89a0 'struct _G_fpos_t' sugar
|   `-RecordType 0xef8880 'struct _G_fpos_t'
|     `-Record 0xef87f8 '_G_fpos_t'
|-RecordDecl 0xef8a68 </usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h:10:9, line:14:1> line:10:16 struct _G_fpos64_t definition
| |-FieldDecl 0xef8b20 <line:12:3, col:13> col:13 __pos '__off64_t':'long'
| `-FieldDecl 0xef8b80 <line:13:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
|-TypedefDecl 0xef8c28 <line:10:1, line:14:3> col:3 __fpos64_t 'struct _G_fpos64_t':'struct _G_fpos64_t'
| `-ElaboratedType 0xef8bd0 'struct _G_fpos64_t' sugar
|   `-RecordType 0xef8af0 'struct _G_fpos64_t'
|     `-Record 0xef8a68 '_G_fpos64_t'
|-RecordDecl 0xef8c98 </usr/include/x86_64-linux-gnu/bits/types/__FILE.h:4:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0xef8d90 <line:5:1, col:25> col:25 __FILE 'struct _IO_FILE':'struct _IO_FILE'
| `-ElaboratedType 0xef8d40 'struct _IO_FILE' sugar
|   `-RecordType 0xef8d20 'struct _IO_FILE'
|     `-Record 0xef91a8 '_IO_FILE'
|-RecordDecl 0xef8de8 prev 0xef8c98 </usr/include/x86_64-linux-gnu/bits/types/FILE.h:4:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0xef8e88 <line:7:1, col:25> col:25 referenced FILE 'struct _IO_FILE':'struct _IO_FILE'
| `-ElaboratedType 0xef8d40 'struct _IO_FILE' sugar
|   `-RecordType 0xef8d20 'struct _IO_FILE'
|     `-Record 0xef91a8 '_IO_FILE'
|-RecordDecl 0xef8ee0 prev 0xef8de8 </usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h:35:1, col:8> col:8 struct _IO_FILE
|-RecordDecl 0xef8f60 <line:36:1, col:8> col:8 struct _IO_marker
|-RecordDecl 0xef9000 <line:37:1, col:8> col:8 struct _IO_codecvt
|-RecordDecl 0xef90a0 <line:38:1, col:8> col:8 struct _IO_wide_data
|-TypedefDecl 0xef9150 <line:43:1, col:14> col:14 referenced _IO_lock_t 'void'
| `-BuiltinType 0xe84da0 'void'
|-RecordDecl 0xef91a8 prev 0xef8ee0 <line:49:1, line:99:1> line:49:8 struct _IO_FILE definition
| |-FieldDecl 0xef9240 <line:51:3, col:7> col:7 _flags 'int'
| |-FieldDecl 0xef92a8 <line:54:3, col:9> col:9 _IO_read_ptr 'char *'
| |-FieldDecl 0xef9310 <line:55:3, col:9> col:9 _IO_read_end 'char *'
| |-FieldDecl 0xf12fd0 <line:56:3, col:9> col:9 _IO_read_base 'char *'
| |-FieldDecl 0xf13038 <line:57:3, col:9> col:9 _IO_write_base 'char *'
| |-FieldDecl 0xf130a0 <line:58:3, col:9> col:9 _IO_write_ptr 'char *'
| |-FieldDecl 0xf13108 <line:59:3, col:9> col:9 _IO_write_end 'char *'
| |-FieldDecl 0xf13170 <line:60:3, col:9> col:9 _IO_buf_base 'char *'
| |-FieldDecl 0xf131d8 <line:61:3, col:9> col:9 _IO_buf_end 'char *'
| |-FieldDecl 0xf13240 <line:64:3, col:9> col:9 _IO_save_base 'char *'
| |-FieldDecl 0xf132a8 <line:65:3, col:9> col:9 _IO_backup_base 'char *'
| |-FieldDecl 0xf13310 <line:66:3, col:9> col:9 _IO_save_end 'char *'
| |-FieldDecl 0xf13410 <line:68:3, col:22> col:22 _markers 'struct _IO_marker *'
| |-FieldDecl 0xf134e0 <line:70:3, col:20> col:20 _chain 'struct _IO_FILE *'
| |-FieldDecl 0xf13548 <line:72:3, col:7> col:7 _fileno 'int'
| |-FieldDecl 0xf135b0 <line:73:3, col:7> col:7 _flags2 'int'
| |-FieldDecl 0xf13610 <line:74:3, col:11> col:11 _old_offset '__off_t':'long'
| |-FieldDecl 0xf13678 <line:77:3, col:18> col:18 _cur_column 'unsigned short'
| |-FieldDecl 0xf136e0 <line:78:3, col:15> col:15 _vtable_offset 'signed char'
| |-FieldDecl 0xf137c8 <line:79:3, col:19> col:8 _shortbuf 'char [1]'
| |-FieldDecl 0xf13878 <line:81:3, col:15> col:15 _lock '_IO_lock_t *'
| |-FieldDecl 0xf138d8 <line:89:3, col:13> col:13 _offset '__off64_t':'long'
| |-FieldDecl 0xf139e0 <line:91:3, col:23> col:23 _codecvt 'struct _IO_codecvt *'
| |-FieldDecl 0xf13ae0 <line:92:3, col:25> col:25 _wide_data 'struct _IO_wide_data *'
| |-FieldDecl 0xf13b58 <line:93:3, col:20> col:20 _freeres_list 'struct _IO_FILE *'
| |-FieldDecl 0xf13bc0 <line:94:3, col:9> col:9 _freeres_buf 'void *'
| |-FieldDecl 0xf13c40 <line:95:3, col:10> col:10 __pad5 'size_t':'unsigned long'
| |-FieldDecl 0xf13ca8 <line:96:3, col:7> col:7 _mode 'int'
| `-FieldDecl 0xf13ef8 <line:98:3, col:74> col:8 _unused2 'char [20]'
|-TypedefDecl 0xf16d90 prev 0xefded0 </usr/include/stdio.h:52:1, col:24> col:24 va_list '__gnuc_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0xf13f50 '__gnuc_va_list' sugar
|   |-Typedef 0xefdf38 '__gnuc_va_list'
|   `-TypedefType 0xefdea0 '__builtin_va_list' sugar
|     |-Typedef 0xe85ce8 '__builtin_va_list'
|     `-ConstantArrayType 0xe85c90 'struct __va_list_tag [1]' 1 
|       `-RecordType 0xe85ad0 'struct __va_list_tag'
|         `-Record 0xe85a48 '__va_list_tag'
|-TypedefDecl 0xf16df8 <line:63:1, col:17> col:17 off_t '__off_t':'long'
| `-TypedefType 0xef88a0 '__off_t' sugar
|   |-Typedef 0xf0ac20 '__off_t'
|   `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xf16e80 <line:77:1, col:19> col:19 ssize_t '__ssize_t':'long'
| `-TypedefType 0xf16e50 '__ssize_t' sugar
|   |-Typedef 0xf0b820 '__ssize_t'
|   `-BuiltinType 0xe84e60 'long'
|-TypedefDecl 0xf16f10 <line:84:1, col:18> col:18 referenced fpos_t '__fpos_t':'struct _G_fpos_t'
| `-TypedefType 0xf16ee0 '__fpos_t' sugar
|   |-Typedef 0xef89f8 '__fpos_t'
|   `-ElaboratedType 0xef89a0 'struct _G_fpos_t' sugar
|     `-RecordType 0xef8880 'struct _G_fpos_t'
|       `-Record 0xef87f8 '_G_fpos_t'
|-VarDecl 0xf16fc8 <line:137:1, col:14> col:14 stdin 'FILE *' extern
|-VarDecl 0xf17088 <line:138:1, col:14> col:14 stdout 'FILE *' extern
|-VarDecl 0xf17100 <line:139:1, col:14> col:14 stderr 'FILE *' extern
|-FunctionDecl 0xf17250 <line:146:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:146:12 remove 'int (const char *)' extern
| |-ParmVarDecl 0xf17180 <col:20, col:32> col:32 __filename 'const char *'
| `-NoThrowAttr 0xf172f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf174c0 </usr/include/stdio.h:148:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:148:12 rename 'int (const char *, const char *)' extern
| |-ParmVarDecl 0xf17368 <col:20, col:32> col:32 __old 'const char *'
| |-ParmVarDecl 0xf173e8 <col:39, col:51> col:51 __new 'const char *'
| `-NoThrowAttr 0xf17570 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf17860 </usr/include/stdio.h:152:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:152:12 renameat 'int (int, const char *, int, const char *)' extern
| |-ParmVarDecl 0xf175e0 <col:22, col:26> col:26 __oldfd 'int'
| |-ParmVarDecl 0xf17660 <col:35, col:47> col:47 __old 'const char *'
| |-ParmVarDecl 0xf176e0 <col:54, col:58> col:58 __newfd 'int'
| |-ParmVarDecl 0xf17760 <line:153:8, col:20> col:20 __new 'const char *'
| `-NoThrowAttr 0xf17920 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf17a68 </usr/include/stdio.h:173:1, col:27> col:14 tmpfile 'FILE *(void)' extern
|-FunctionDecl 0xf17bf0 <line:187:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:187:14 tmpnam 'char *(char *)' extern
| |-ParmVarDecl 0xf17b20 <col:22, col:28> col:28 __s 'char *'
| `-NoThrowAttr 0xf17c98 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf1b400 </usr/include/stdio.h:192:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:192:14 tmpnam_r 'char *(char *)' extern
| |-ParmVarDecl 0xf17d08 <col:24, col:30> col:30 __s 'char *'
| `-NoThrowAttr 0xf1b4a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf1b670 </usr/include/stdio.h:204:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdio.h:204:14 tempnam 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0xf1b518 <col:23, col:35> col:35 __dir 'const char *'
| |-ParmVarDecl 0xf1b598 <col:42, col:54> col:54 __pfx 'const char *'
| |-NoThrowAttr 0xf1b720 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0xf1b778 <line:208:47> malloc
|-FunctionDecl 0xf1b8b0 </usr/include/stdio.h:213:1, col:34> col:12 fclose 'int (FILE *)' extern
| `-ParmVarDecl 0xf1b7b0 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0xf1ba00 <line:218:1, col:34> col:12 fflush 'int (FILE *)' extern
| `-ParmVarDecl 0xf1b968 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0xf1bb50 <line:227:1, col:43> col:12 fflush_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0xf1bab8 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0xf1bde8 <line:246:14> col:14 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0xf1be88 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf1bef0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xf1bf68 prev 0xf1bde8 <col:1, line:247:37> line:246:14 fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0xf1bc10 <col:21, col:44> col:44 __filename 'const char *restrict'
| `-ParmVarDecl 0xf1bc90 <line:247:7, col:30> col:30 __modes 'const char *restrict'
|-FunctionDecl 0xf1c248 <line:252:1, line:254:34> line:252:14 freopen 'FILE *(const char *restrict, const char *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0xf1c030 <col:23, col:46> col:46 __filename 'const char *restrict'
| |-ParmVarDecl 0xf1c0b0 <line:253:9, col:32> col:32 __modes 'const char *restrict'
| `-ParmVarDecl 0xf1c128 <line:254:9, col:26> col:26 __stream 'FILE *restrict'
|-FunctionDecl 0xf1e528 <line:279:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:279:14 fdopen 'FILE *(int, const char *)' extern
| |-ParmVarDecl 0xf1c318 <col:22, col:26> col:26 __fd 'int'
| |-ParmVarDecl 0xf1e410 <col:32, col:44> col:44 __modes 'const char *'
| `-NoThrowAttr 0xf1e5d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf1e868 </usr/include/stdio.h:292:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:292:14 fmemopen 'FILE *(void *, size_t, const char *)' extern
| |-ParmVarDecl 0xf1e648 <col:24, col:30> col:30 __s 'void *'
| |-ParmVarDecl 0xf1e6c0 <col:35, col:42> col:42 __len 'size_t':'unsigned long'
| |-ParmVarDecl 0xf1e740 <col:49, col:61> col:61 __modes 'const char *'
| `-NoThrowAttr 0xf1e920 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf1eba8 </usr/include/stdio.h:298:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:298:14 open_memstream 'FILE *(char **, size_t *)' extern
| |-ParmVarDecl 0xf1e9c0 <col:30, col:37> col:37 __bufloc 'char **'
| |-ParmVarDecl 0xf1ea98 <col:47, col:55> col:55 __sizeloc 'size_t *'
| `-NoThrowAttr 0xf1ec58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf1ee58 </usr/include/stdio.h:304:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:304:13 setbuf 'void (FILE *restrict, char *restrict)' extern
| |-ParmVarDecl 0xf1ecc0 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0xf1ed40 <col:48, col:65> col:65 __buf 'char *restrict'
| `-NoThrowAttr 0xf1ef08 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf1f230 </usr/include/stdio.h:308:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:308:12 setvbuf 'int (FILE *restrict, char *restrict, int, size_t)' extern
| |-ParmVarDecl 0xf1ef70 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0xf1eff0 <col:48, col:65> col:65 __buf 'char *restrict'
| |-ParmVarDecl 0xf1f070 <line:309:7, col:11> col:11 __modes 'int'
| |-ParmVarDecl 0xf1f0e8 <col:20, col:27> col:27 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0xf1f2f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf1f5b8 </usr/include/stdio.h:314:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:314:13 setbuffer 'void (FILE *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0xf1f358 <col:24, col:41> col:41 __stream 'FILE *restrict'
| |-ParmVarDecl 0xf1f420 <col:51, col:68> col:68 __buf 'char *restrict'
| |-ParmVarDecl 0xf1f498 <line:315:10, col:17> col:17 __size 'size_t':'unsigned long'
| `-NoThrowAttr 0xf1f670 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf1f7c8 </usr/include/stdio.h:318:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:318:13 setlinebuf 'void (FILE *)' extern
| |-ParmVarDecl 0xf1f6d8 <col:25, col:31> col:31 __stream 'FILE *'
| `-NoThrowAttr 0xf1f870 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf1fac0 </usr/include/stdio.h:326:12> col:12 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0xf1fb60 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0xf1fbc8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0xf1fc40 <col:12> Implicit printf 2 3
|-FunctionDecl 0xf1fca8 prev 0xf1fac0 <col:1, line:327:43> line:326:12 fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0xf1f8d8 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0xf1f958 <line:327:7, col:30> col:30 __format 'const char *restrict'
| `-FormatAttr 0xf1fd88 <line:326:12> Inherited printf 2 3
|-FunctionDecl 0xf1fee8 <line:332:12> col:12 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0xf1ff88 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0xf1fff8 <col:12> Implicit printf 1 2
|-FunctionDecl 0xf20060 prev 0xf1fee8 <col:1, col:56> col:12 printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0xf1fdd8 <col:20, col:43> col:43 __format 'const char *restrict'
| `-FormatAttr 0xf20138 <col:12> Inherited printf 1 2
|-FunctionDecl 0xf20328 <line:334:12> col:12 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0xf20430 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0xf20498 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0xf20510 <col:12> Implicit printf 2 3
|-FunctionDecl 0xf20578 prev 0xf20328 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:56:49> /usr/include/stdio.h:334:12 sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0xf20188 <col:21, col:38> col:38 __s 'char *restrict'
| |-ParmVarDecl 0xf20208 <line:335:7, col:30> col:30 __format 'const char *restrict'
| |-FormatAttr 0xf20680 <line:334:12> Inherited printf 2 3
| `-NoThrowAttr 0xf20628 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
|-FunctionDecl 0xf20990 </usr/include/stdio.h:341:12> col:12 implicit vfprintf 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf20a30 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0xf20a98 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0xf20b00 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0xf20b80 <col:12> Implicit printf 2 0
|-FunctionDecl 0xf20be8 prev 0xf20990 <col:1, line:342:28> line:341:12 vfprintf 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf206c8 <col:22, col:39> col:39 __s 'FILE *restrict'
| |-ParmVarDecl 0xf20748 <col:44, col:67> col:67 __format 'const char *restrict'
| |-ParmVarDecl 0xf20820 <line:342:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0xf20cd0 <line:341:12> Inherited printf 2 0
|-FunctionDecl 0xf20eb0 <line:347:12> col:12 implicit vprintf 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf20f50 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0xf20fb8 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0xf21030 <col:12> Implicit printf 1 0
|-FunctionDecl 0xf21098 prev 0xf20eb0 <col:1, col:74> col:12 vprintf 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf20d20 <col:21, col:44> col:44 __format 'const char *restrict'
| |-ParmVarDecl 0xf20d98 <col:54, col:69> col:69 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0xf21178 <col:12> Inherited printf 1 0
|-FunctionDecl 0xf214e0 <line:349:12> col:12 implicit vsprintf 'int (char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf21580 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0xf215e8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0xf21650 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0xf216d0 <col:12> Implicit printf 2 0
|-FunctionDecl 0xf21738 prev 0xf214e0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:56:49> /usr/include/stdio.h:349:12 vsprintf 'int (char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf211c8 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0xf21248 <col:44, col:67> col:67 __format 'const char *restrict'
| |-ParmVarDecl 0xf212c0 <line:350:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-FormatAttr 0xf21848 <line:349:12> Inherited printf 2 0
| `-NoThrowAttr 0xf217f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
|-FunctionDecl 0xf21b28 </usr/include/stdio.h:354:12> col:12 implicit snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0xf21bc8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0xf21c30 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0xf21c98 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0xf21d18 <col:12> Implicit printf 3 4
|-FunctionDecl 0xf21d80 prev 0xf21b28 <col:1, line:356:62> line:354:12 snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0xf21898 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0xf21910 <col:44, col:51> col:51 __maxlen 'size_t':'unsigned long'
| |-ParmVarDecl 0xf21990 <line:355:8, col:31> col:31 __format 'const char *restrict'
| |-NoThrowAttr 0xf21e38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
| `-FormatAttr 0xf21e90 </usr/include/stdio.h:356:32, col:60> printf 3 4
|-FunctionDecl 0xf221f0 <line:358:12> col:12 implicit vsnprintf 'int (char *, unsigned long, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf22290 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0xf222f8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0xf22360 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0xf223c8 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0xf22450 <col:12> Implicit printf 3 0
|-FunctionDecl 0xf224f0 prev 0xf221f0 <col:1, line:360:62> line:358:12 vsnprintf 'int (char *, unsigned long, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf21ee0 <col:23, col:40> col:40 __s 'char *restrict'
| |-ParmVarDecl 0xf21f58 <col:45, col:52> col:52 __maxlen 'size_t':'unsigned long'
| |-ParmVarDecl 0xf21fd8 <line:359:9, col:32> col:32 __format 'const char *restrict'
| |-ParmVarDecl 0xf22050 <col:42, col:57> col:57 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-NoThrowAttr 0xf225b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
| `-FormatAttr 0xf22608 </usr/include/stdio.h:360:32, col:60> printf 3 0
|-FunctionDecl 0xf228d0 <line:379:1, line:381:52> line:379:12 vdprintf 'int (int, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf22658 <col:22, col:26> col:26 __fd 'int'
| |-ParmVarDecl 0xf226d8 <col:32, col:55> col:55 __fmt 'const char *restrict'
| |-ParmVarDecl 0xf22750 <line:380:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0xf22988 <line:381:22, col:50> printf 2 0
|-FunctionDecl 0xf22bf8 <line:382:1, line:383:52> line:382:12 dprintf 'int (int, const char *restrict, ...)' extern
| |-ParmVarDecl 0xf22a08 <col:21, col:25> col:25 __fd 'int'
| |-ParmVarDecl 0xf22a88 <col:31, col:54> col:54 __fmt 'const char *restrict'
| `-FormatAttr 0xf22ca8 <line:383:22, col:50> printf 2 3
|-FunctionDecl 0xf22e40 <line:391:12> col:12 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0xf22ee0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0xf22f48 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0xf22fc0 <col:12> Implicit scanf 2 3
|-FunctionDecl 0xf23028 prev 0xf22e40 <col:1, line:392:42> line:391:12 fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0xf22d20 <col:20, col:37> col:37 __stream 'FILE *restrict'
| |-ParmVarDecl 0xf22da0 <line:392:6, col:29> col:29 __format 'const char *restrict'
| `-FormatAttr 0xf23108 <line:391:12> Inherited scanf 2 3
|-FunctionDecl 0xf231f0 <line:397:12> col:12 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0xf23290 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0xf23300 <col:12> Implicit scanf 1 2
|-FunctionDecl 0xf23368 prev 0xf231f0 <col:1, col:55> col:12 scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0xf23158 <col:19, col:42> col:42 __format 'const char *restrict'
| `-FormatAttr 0xf23440 <col:12> Inherited scanf 1 2
|-FunctionDecl 0xf246c8 <line:399:12> col:12 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0xf24768 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0xf247d0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0xf24848 <col:12> Implicit scanf 2 3
|-FunctionDecl 0xf248b0 prev 0xf246c8 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:399:12 sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0xf24520 <col:20, col:43> col:43 __s 'const char *restrict'
| |-ParmVarDecl 0xf245a0 <line:400:6, col:29> col:29 __format 'const char *restrict'
| |-FormatAttr 0xf249b8 <line:399:12> Inherited scanf 2 3
| `-NoThrowAttr 0xf24960 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf24b90 prev 0xf23028 </usr/include/stdio.h:407:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/stdio.h:407:24 fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0xf24a00 <col:33, col:50> col:50 __stream 'FILE *restrict'
| |-ParmVarDecl 0xf24a80 <line:408:5, col:28> col:28 __format 'const char *restrict'
| |-FormatAttr 0xf24cb8 <line:391:12> Inherited scanf 2 3
| `-AsmLabelAttr 0xf24c30 <<scratch space>:14:1> "__isoc99_fscanf" IsLiteralLabel
|-FunctionDecl 0xf24e08 prev 0xf23368 </usr/include/stdio.h:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/stdio.h:410:24 scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0xf24d08 <col:32, col:55> col:55 __format 'const char *restrict'
| |-FormatAttr 0xf24f28 <line:397:12> Inherited scanf 1 2
| `-AsmLabelAttr 0xf24ea8 <<scratch space>:16:1> "__isoc99_scanf" IsLiteralLabel
|-FunctionDecl 0xf250c8 prev 0xf248b0 </usr/include/stdio.h:412:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:412:28 sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0xf24f78 <col:37, col:60> col:60 __s 'const char *restrict'
| |-ParmVarDecl 0xf24ff8 <line:413:9, col:32> col:32 __format 'const char *restrict'
| |-FormatAttr 0xf25218 <line:399:12> Inherited scanf 2 3
| |-AsmLabelAttr 0xf25168 <<scratch space>:18:1> "__isoc99_sscanf" IsLiteralLabel
| `-NoThrowAttr 0xf251f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf25e00 </usr/include/stdio.h:432:12> col:12 implicit vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf25ea0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0xf25f08 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0xf25f70 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0xf25ff0 <col:12> Implicit scanf 2 0
|-FunctionDecl 0xf26058 prev 0xf25e00 <col:1, line:434:51> line:432:12 vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf25260 <col:21, col:38> col:38 __s 'FILE *restrict'
| |-ParmVarDecl 0xf252e0 <col:43, col:66> col:66 __format 'const char *restrict'
| |-ParmVarDecl 0xf25358 <line:433:7, col:22> col:22 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0xf26110 <line:434:22, col:49> scanf 2 0
|-FunctionDecl 0xf26338 <line:440:12> col:12 implicit vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf263d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0xf26440 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0xf264b8 <col:12> Implicit scanf 1 0
|-FunctionDecl 0xf26520 prev 0xf26338 <col:1, line:441:51> line:440:12 vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf26190 <col:20, col:43> col:43 __format 'const char *restrict'
| |-ParmVarDecl 0xf26208 <col:53, col:68> col:68 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0xf265d0 <line:441:22, col:49> scanf 1 0
|-FunctionDecl 0xf26900 <line:444:12> col:12 implicit vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf269a0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0xf26a08 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0xf26a70 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0xf26af0 <col:12> Implicit scanf 2 0
|-FunctionDecl 0xf26b58 prev 0xf26900 <col:1, line:446:59> line:444:12 vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf26650 <col:21, col:44> col:44 __s 'const char *restrict'
| |-ParmVarDecl 0xf266d0 <line:445:7, col:30> col:30 __format 'const char *restrict'
| |-ParmVarDecl 0xf26748 <col:40, col:55> col:55 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-NoThrowAttr 0xf26c10 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-FormatAttr 0xf26c68 </usr/include/stdio.h:446:30, col:57> scanf 2 0
|-FunctionDecl 0xf27808 prev 0xf26058 <line:451:1, line:455:51> line:451:24 vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf26cb0 <line:452:11, col:28> col:28 __s 'FILE *restrict'
| |-ParmVarDecl 0xf26d30 <line:453:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0xf276a0 <col:37, col:52> col:52 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0xf278a8 <<scratch space>:21:1> "__isoc99_vfscanf" IsLiteralLabel
| `-FormatAttr 0xf27938 </usr/include/stdio.h:455:22, col:49> scanf 2 0
|-FunctionDecl 0xf27b20 prev 0xf26520 <line:456:1, line:458:51> line:456:24 vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf27988 <col:33, col:56> col:56 __format 'const char *restrict'
| |-ParmVarDecl 0xf27a00 <line:457:5, col:20> col:20 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0xf27bc0 <<scratch space>:23:1> "__isoc99_vscanf" IsLiteralLabel
| `-FormatAttr 0xf27c48 </usr/include/stdio.h:458:22, col:49> scanf 1 0
|-FunctionDecl 0xf27eb8 prev 0xf26b58 <line:459:1, line:463:51> line:459:28 vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0xf27c98 <line:460:8, col:31> col:31 __s 'const char *restrict'
| |-ParmVarDecl 0xf27d18 <line:461:8, col:31> col:31 __format 'const char *restrict'
| |-ParmVarDecl 0xf27d90 <line:462:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0xf27f58 <<scratch space>:25:1> "__isoc99_vsscanf" IsLiteralLabel
| |-NoThrowAttr 0xf27fe8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-FormatAttr 0xf28010 </usr/include/stdio.h:463:22, col:49> scanf 2 0
|-FunctionDecl 0xf280f0 <line:485:1, col:33> col:12 fgetc 'int (FILE *)' extern
| `-ParmVarDecl 0xf28058 <col:19, col:25> col:25 __stream 'FILE *'
|-FunctionDecl 0xf28240 <line:486:1, col:32> col:12 getc 'int (FILE *)' extern
| `-ParmVarDecl 0xf281a8 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0xf283b0 <line:492:1, col:25> col:12 getchar 'int (void)' extern
|-FunctionDecl 0xf284f8 <line:499:1, col:41> col:12 getc_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0xf28460 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0xf28a80 <line:500:1, col:34> col:12 getchar_unlocked 'int (void)' extern
|-FunctionDecl 0xf28bc8 <line:510:1, col:42> col:12 fgetc_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0xf28b30 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0xf28e20 <line:521:1, col:42> col:12 fputc 'int (int, FILE *)' extern
| |-ParmVarDecl 0xf28c88 <col:19, col:23> col:23 __c 'int'
| `-ParmVarDecl 0xf28d00 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0xf29000 <line:522:1, col:41> col:12 putc 'int (int, FILE *)' extern
| |-ParmVarDecl 0xf28ee8 <col:18, col:22> col:22 __c 'int'
| `-ParmVarDecl 0xf28f60 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0xf29190 <line:528:1, col:28> col:12 putchar 'int (int)' extern
| `-ParmVarDecl 0xf290c8 <col:21, col:25> col:25 __c 'int'
|-FunctionDecl 0xf29368 <line:537:1, col:51> col:12 fputc_unlocked 'int (int, FILE *)' extern
| |-ParmVarDecl 0xf29250 <col:28, col:32> col:32 __c 'int'
| `-ParmVarDecl 0xf292c8 <col:37, col:43> col:43 __stream 'FILE *'
|-FunctionDecl 0xf29548 <line:545:1, col:50> col:12 putc_unlocked 'int (int, FILE *)' extern
| |-ParmVarDecl 0xf29430 <col:27, col:31> col:31 __c 'int'
| `-ParmVarDecl 0xf294a8 <col:36, col:42> col:42 __stream 'FILE *'
|-FunctionDecl 0xf296a8 <line:546:1, col:37> col:12 putchar_unlocked 'int (int)' extern
| `-ParmVarDecl 0xf29610 <col:30, col:34> col:34 __c 'int'
|-FunctionDecl 0xf297f8 <line:553:1, col:32> col:12 getw 'int (FILE *)' extern
| `-ParmVarDecl 0xf29760 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0xf299d0 <line:556:1, col:41> col:12 putw 'int (int, FILE *)' extern
| |-ParmVarDecl 0xf298b8 <col:18, col:22> col:22 __w 'int'
| `-ParmVarDecl 0xf29930 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0xf29cd0 <line:564:1, col:77> col:14 fgets 'char *(char *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0xf29aa8 <col:21, col:38> col:38 __s 'char *restrict'
| |-ParmVarDecl 0xf29b28 <col:43, col:47> col:47 __n 'int'
| `-ParmVarDecl 0xf29ba0 <col:52, col:69> col:69 __stream 'FILE *restrict'
|-FunctionDecl 0xf2a058 <line:603:1, line:605:55> line:603:18 __getdelim '__ssize_t (char **restrict, size_t *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0xf29da0 <col:30, col:48> col:48 __lineptr 'char **restrict'
| |-ParmVarDecl 0xf29e18 <line:604:30, col:49> col:49 __n 'size_t *restrict'
| |-ParmVarDecl 0xf29e98 <col:54, col:58> col:58 __delimiter 'int'
| `-ParmVarDecl 0xf29f10 <line:605:30, col:47> col:47 __stream 'FILE *restrict'
|-FunctionDecl 0xf2a348 <line:606:1, line:608:53> line:606:18 getdelim '__ssize_t (char **restrict, size_t *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0xf2a130 <col:28, col:46> col:46 __lineptr 'char **restrict'
| |-ParmVarDecl 0xf2a1a8 <line:607:28, col:47> col:47 __n 'size_t *restrict'
| |-ParmVarDecl 0xf2a228 <col:52, col:56> col:56 __delimiter 'int'
| `-ParmVarDecl 0xf2a2a0 <line:608:28, col:45> col:45 __stream 'FILE *restrict'
|-FunctionDecl 0xf2a638 <line:616:1, line:618:52> line:616:18 getline '__ssize_t (char **restrict, size_t *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0xf2a420 <col:27, col:45> col:45 __lineptr 'char **restrict'
| |-ParmVarDecl 0xf2a498 <line:617:27, col:46> col:46 __n 'size_t *restrict'
| `-ParmVarDecl 0xf2a510 <line:618:27, col:44> col:44 __stream 'FILE *restrict'
|-FunctionDecl 0xf2a8a0 <line:626:1, col:72> col:12 fputs 'int (const char *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0xf2a708 <col:19, col:42> col:42 __s 'const char *restrict'
| `-ParmVarDecl 0xf2a780 <col:47, col:64> col:64 __stream 'FILE *restrict'
|-FunctionDecl 0xf2aaa0 <line:632:1, col:33> col:12 puts 'int (const char *)' extern
| `-ParmVarDecl 0xf2a968 <col:18, col:30> col:30 __s 'const char *'
|-FunctionDecl 0xf2ac78 <line:639:1, col:43> col:12 ungetc 'int (int, FILE *)' extern
| |-ParmVarDecl 0xf2ab60 <col:20, col:24> col:24 __c 'int'
| `-ParmVarDecl 0xf2abd8 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0xf2b038 <line:646:15> col:15 implicit fread 'unsigned long (void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0xf2b0d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0xf2b140 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0xf2b1a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0xf2b210 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0xf2b298 prev 0xf2b038 <col:1, line:647:45> line:646:15 fread 'unsigned long (void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0xf2ad40 <col:22, col:39> col:39 __ptr 'void *restrict'
| |-ParmVarDecl 0xf2adb8 <col:46, col:53> col:53 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0xf2ae30 <line:647:8, col:15> col:15 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0xf2aea8 <col:20, col:37> col:37 __stream 'FILE *restrict'
|-FunctionDecl 0xf2b698 <line:652:15> col:15 implicit fwrite 'unsigned long (const void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0xf2b738 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0xf2b7a0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0xf2b808 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0xf2b870 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0xf2b8f8 prev 0xf2b698 <col:1, line:653:41> line:652:15 fwrite 'unsigned long (const void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0xf2b3a0 <col:23, col:46> col:46 __ptr 'const void *restrict'
| |-ParmVarDecl 0xf2b418 <col:53, col:60> col:60 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0xf2b490 <line:653:9, col:16> col:16 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0xf2b508 <col:21, col:38> col:38 __s 'FILE *restrict'
|-FunctionDecl 0xf2cc58 <line:673:1, line:674:47> line:673:15 fread_unlocked 'size_t (void *restrict, size_t, size_t, FILE *restrict)' extern
| |-ParmVarDecl 0xf2b9d0 <col:31, col:48> col:48 __ptr 'void *restrict'
| |-ParmVarDecl 0xf2cac0 <col:55, col:62> col:62 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0xf2cb38 <line:674:10, col:17> col:17 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0xf2cbb0 <col:22, col:39> col:39 __stream 'FILE *restrict'
|-FunctionDecl 0xf2cf40 <line:675:1, line:676:48> line:675:15 fwrite_unlocked 'size_t (const void *restrict, size_t, size_t, FILE *restrict)' extern
| |-ParmVarDecl 0xf2cd30 <col:32, col:55> col:55 __ptr 'const void *restrict'
| |-ParmVarDecl 0xf2cda8 <col:62, col:69> col:69 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0xf2ce20 <line:676:11, col:18> col:18 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0xf2ce98 <col:23, col:40> col:40 __stream 'FILE *restrict'
|-FunctionDecl 0xf2d240 <line:684:1, col:63> col:12 fseek 'int (FILE *, long, int)' extern
| |-ParmVarDecl 0xf2d010 <col:19, col:25> col:25 __stream 'FILE *'
| |-ParmVarDecl 0xf2d090 <col:35, col:44> col:44 __off 'long'
| `-ParmVarDecl 0xf2d110 <col:51, col:55> col:55 __whence 'int'
|-FunctionDecl 0xf2d400 <line:689:1, col:38> col:17 ftell 'long (FILE *)' extern
| `-ParmVarDecl 0xf2d308 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0xf2d548 <line:694:1, col:35> col:13 rewind 'void (FILE *)' extern
| `-ParmVarDecl 0xf2d4b8 <col:21, col:27> col:27 __stream 'FILE *'
|-FunctionDecl 0xf2d7e0 <line:707:1, col:63> col:12 fseeko 'int (FILE *, __off_t, int)' extern
| |-ParmVarDecl 0xf2d600 <col:20, col:26> col:26 __stream 'FILE *'
| |-ParmVarDecl 0xf2d678 <col:36, col:44> col:44 __off '__off_t':'long'
| `-ParmVarDecl 0xf2d6f8 <col:51, col:55> col:55 __whence 'int'
|-FunctionDecl 0xf2d968 <line:712:1, col:38> col:16 ftello '__off_t (FILE *)' extern
| `-ParmVarDecl 0xf2d8a8 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0xf2dc50 <line:731:1, col:72> col:12 fgetpos 'int (FILE *restrict, fpos_t *restrict)' extern
| |-ParmVarDecl 0xf2da20 <col:21, col:38> col:38 __stream 'FILE *restrict'
| `-ParmVarDecl 0xf2db38 <col:48, col:67> col:67 __pos 'fpos_t *restrict'
|-FunctionDecl 0xf2df00 <line:736:1, col:56> col:12 fsetpos 'int (FILE *, const fpos_t *)' extern
| |-ParmVarDecl 0xf2dd10 <col:21, col:27> col:27 __stream 'FILE *'
| `-ParmVarDecl 0xf2dde8 <col:37, col:51> col:51 __pos 'const fpos_t *'
|-FunctionDecl 0xf2e050 <line:757:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:757:13 clearerr 'void (FILE *)' extern
| |-ParmVarDecl 0xf2dfc0 <col:23, col:29> col:29 __stream 'FILE *'
| `-NoThrowAttr 0xf2e0f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf2e1f8 </usr/include/stdio.h:759:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:759:12 feof 'int (FILE *)' extern
| |-ParmVarDecl 0xf2e160 <col:18, col:24> col:24 __stream 'FILE *'
| `-NoThrowAttr 0xf2e2a0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf2e3a0 </usr/include/stdio.h:761:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:761:12 ferror 'int (FILE *)' extern
| |-ParmVarDecl 0xf2e308 <col:20, col:26> col:26 __stream 'FILE *'
| `-NoThrowAttr 0xf2e448 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf2e540 </usr/include/stdio.h:765:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:765:13 clearerr_unlocked 'void (FILE *)' extern
| |-ParmVarDecl 0xf2e4b0 <col:32, col:38> col:38 __stream 'FILE *'
| `-NoThrowAttr 0xf2e5e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf2e6e8 </usr/include/stdio.h:766:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:766:12 feof_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0xf2e650 <col:27, col:33> col:33 __stream 'FILE *'
| `-NoThrowAttr 0xf2e790 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf2e890 </usr/include/stdio.h:767:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:767:12 ferror_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0xf2e7f8 <col:29, col:35> col:35 __stream 'FILE *'
| `-NoThrowAttr 0xf2e938 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf2ec20 </usr/include/stdio.h:775:1, col:36> col:13 perror 'void (const char *)' extern
| `-ParmVarDecl 0xf2e9a8 <col:21, col:33> col:33 __s 'const char *'
|-VarDecl 0xf2ece0 </usr/include/x86_64-linux-gnu/bits/sys_errlist.h:26:1, col:12> col:12 sys_nerr 'int' extern
|-VarDecl 0xf2edd0 <line:27:1, col:38> col:26 sys_errlist 'const char *const []' extern
|-FunctionDecl 0xf2eee0 </usr/include/stdio.h:786:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:786:12 fileno 'int (FILE *)' extern
| |-ParmVarDecl 0xf2ee48 <col:20, col:26> col:26 __stream 'FILE *'
| `-NoThrowAttr 0xf2ef88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf2f088 </usr/include/stdio.h:791:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:791:12 fileno_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0xf2eff0 <col:29, col:35> col:35 __stream 'FILE *'
| `-NoThrowAttr 0xf2f130 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf2f2b8 </usr/include/stdio.h:800:1, col:63> col:14 popen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0xf2f1a0 <col:21, col:33> col:33 __command 'const char *'
| `-ParmVarDecl 0xf2f220 <col:44, col:56> col:56 __modes 'const char *'
|-FunctionDecl 0xf2f410 <line:806:1, col:34> col:12 pclose 'int (FILE *)' extern
| `-ParmVarDecl 0xf2f378 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0xf2f568 <line:812:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:812:14 ctermid 'char *(char *)' extern
| |-ParmVarDecl 0xf2f4d0 <col:23, col:29> col:29 __s 'char *'
| `-NoThrowAttr 0xf2f610 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf2f708 </usr/include/stdio.h:840:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:840:13 flockfile 'void (FILE *)' extern
| |-ParmVarDecl 0xf2f678 <col:24, col:30> col:30 __stream 'FILE *'
| `-NoThrowAttr 0xf2f7b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf2f8b0 </usr/include/stdio.h:844:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:844:12 ftrylockfile 'int (FILE *)' extern
| |-ParmVarDecl 0xf2f818 <col:26, col:32> col:32 __stream 'FILE *'
| `-NoThrowAttr 0xf2f958 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf2fa50 </usr/include/stdio.h:847:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:847:13 funlockfile 'void (FILE *)' extern
| |-ParmVarDecl 0xf2f9c0 <col:26, col:32> col:32 __stream 'FILE *'
| `-NoThrowAttr 0xf2faf8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf30190 </usr/include/stdio.h:858:1, col:27> col:12 __uflow 'int (FILE *)' extern
| `-ParmVarDecl 0xf2fb60 <col:21, col:26> col:27 'FILE *'
|-FunctionDecl 0xf303e0 <line:859:1, col:35> col:12 __overflow 'int (FILE *, int)' extern
| |-ParmVarDecl 0xf30248 <col:24, col:29> col:30 'FILE *'
| `-ParmVarDecl 0xf302c8 <col:32> col:35 'int'
|-FunctionDecl 0xf30570 <main/libc/swap.c:35:14> col:14 implicit __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0xf30610 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0xf30680 <col:14> Implicit
| `-ConstAttr 0xf306d8 <col:14> Implicit
`-FunctionDecl 0xf30700 prev 0xf30570 <col:1, line:41:1> line:35:14 invalid __builtin_bswap32 'unsigned int (unsigned int)'
  |-ParmVarDecl 0xf304a8 <col:32, col:45> col:45 used a 'unsigned int'
  |-CompoundStmt 0xf30c40 <line:36:1, line:41:1>
  | `-ReturnStmt 0xf30c30 <line:37:5, line:40:34>
  |   `-BinaryOperator 0xf30c10 <line:37:12, line:40:34> 'unsigned int' '|'
  |     |-BinaryOperator 0xf30b18 <line:37:12, line:39:32> 'unsigned int' '|'
  |     | |-BinaryOperator 0xf30a08 <line:37:12, line:38:30> 'unsigned int' '|'
  |     | | |-BinaryOperator 0xf308f8 <line:37:12, col:26> 'unsigned int' '<<'
  |     | | | |-ParenExpr 0xf308b8 <col:12, col:21> 'unsigned int'
  |     | | | | `-BinaryOperator 0xf30898 <col:13, col:17> 'unsigned int' '&'
  |     | | | |   |-ImplicitCastExpr 0xf30868 <col:13> 'unsigned int' <LValueToRValue>
  |     | | | |   | `-DeclRefExpr 0xf30828 <col:13> 'unsigned int' lvalue ParmVar 0xf304a8 'a' 'unsigned int'
  |     | | | |   `-ImplicitCastExpr 0xf30880 <col:17> 'unsigned int' <IntegralCast>
  |     | | | |     `-IntegerLiteral 0xf30848 <col:17> 'int' 255
  |     | | | `-IntegerLiteral 0xf308d8 <col:26> 'int' 24
  |     | | `-BinaryOperator 0xf309e8 <line:38:14, col:30> 'unsigned int' '<<'
  |     | |   |-ParenExpr 0xf309a8 <col:14, col:25> 'unsigned int'
  |     | |   | `-BinaryOperator 0xf30988 <col:15, col:19> 'unsigned int' '&'
  |     | |   |   |-ImplicitCastExpr 0xf30958 <col:15> 'unsigned int' <LValueToRValue>
  |     | |   |   | `-DeclRefExpr 0xf30918 <col:15> 'unsigned int' lvalue ParmVar 0xf304a8 'a' 'unsigned int'
  |     | |   |   `-ImplicitCastExpr 0xf30970 <col:19> 'unsigned int' <IntegralCast>
  |     | |   |     `-IntegerLiteral 0xf30938 <col:19> 'int' 65280
  |     | |   `-IntegerLiteral 0xf309c8 <col:30> 'int' 8
  |     | `-BinaryOperator 0xf30af8 <line:39:14, col:32> 'unsigned int' '>>'
  |     |   |-ParenExpr 0xf30ab8 <col:14, col:27> 'unsigned int'
  |     |   | `-BinaryOperator 0xf30a98 <col:15, col:19> 'unsigned int' '&'
  |     |   |   |-ImplicitCastExpr 0xf30a68 <col:15> 'unsigned int' <LValueToRValue>
  |     |   |   | `-DeclRefExpr 0xf30a28 <col:15> 'unsigned int' lvalue ParmVar 0xf304a8 'a' 'unsigned int'
  |     |   |   `-ImplicitCastExpr 0xf30a80 <col:19> 'unsigned int' <IntegralCast>
  |     |   |     `-IntegerLiteral 0xf30a48 <col:19> 'int' 16711680
  |     |   `-IntegerLiteral 0xf30ad8 <col:32> 'int' 8
  |     `-BinaryOperator 0xf30bf0 <line:40:14, col:34> 'unsigned int' '>>'
  |       |-ParenExpr 0xf30bb0 <col:14, col:29> 'unsigned int'
  |       | `-BinaryOperator 0xf30b90 <col:15, col:19> 'unsigned int' '&'
  |       |   |-ImplicitCastExpr 0xf30b78 <col:15> 'unsigned int' <LValueToRValue>
  |       |   | `-DeclRefExpr 0xf30b38 <col:15> 'unsigned int' lvalue ParmVar 0xf304a8 'a' 'unsigned int'
  |       |   `-IntegerLiteral 0xf30b58 <col:19> 'unsigned int' 4278190080
  |       `-IntegerLiteral 0xf30bd0 <col:34> 'int' 24
  |-NoThrowAttr 0xf307d8 <line:35:14> Inherited Implicit
  `-ConstAttr 0xf30800 <col:14> Inherited Implicit

TranslationUnitDecl 0x229dd48 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x229e5e0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x229e2e0 '__int128'
|-TypedefDecl 0x229e650 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x229e300 'unsigned __int128'
|-TypedefDecl 0x229e958 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x229e730 'struct __NSConstantString_tag'
|   `-Record 0x229e6a8 '__NSConstantString_tag'
|-TypedefDecl 0x229e9f0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x229e9b0 'char *'
|   `-BuiltinType 0x229dde0 'char'
|-TypedefDecl 0x229ece8 <<invalid sloc>> <invalid sloc> implicit referenced __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x229ec90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x229ead0 'struct __va_list_tag'
|     `-Record 0x229ea48 '__va_list_tag'
|-TypedefDecl 0x22ff7b0 </usr/lib/llvm-10/lib/clang/10.0.0/include/stdarg.h:14:1, col:27> col:27 va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0x22ff780 '__builtin_va_list' sugar
|   |-Typedef 0x229ece8 '__builtin_va_list'
|   `-ConstantArrayType 0x229ec90 'struct __va_list_tag [1]' 1 
|     `-RecordType 0x229ead0 'struct __va_list_tag'
|       `-Record 0x229ea48 '__va_list_tag'
|-TypedefDecl 0x22ff818 <line:32:1, col:27> col:27 referenced __gnuc_va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0x22ff780 '__builtin_va_list' sugar
|   |-Typedef 0x229ece8 '__builtin_va_list'
|   `-ConstantArrayType 0x229ec90 'struct __va_list_tag [1]' 1 
|     `-RecordType 0x229ead0 'struct __va_list_tag'
|       `-Record 0x229ea48 '__va_list_tag'
|-TypedefDecl 0x22ff888 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:46:1, col:23> col:23 referenced size_t 'unsigned long'
| `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x22ff8f8 </usr/include/x86_64-linux-gnu/bits/types.h:31:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x229dea0 'unsigned char'
|-TypedefDecl 0x22ff968 <line:32:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x229dec0 'unsigned short'
|-TypedefDecl 0x22ff9d8 <line:33:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x229dee0 'unsigned int'
|-TypedefDecl 0x22ffa48 <line:34:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x22ffab8 <line:37:1, col:21> col:21 referenced __int8_t 'signed char'
| `-BuiltinType 0x229de00 'signed char'
|-TypedefDecl 0x22ffb28 <line:38:1, col:23> col:23 referenced __uint8_t 'unsigned char'
| `-BuiltinType 0x229dea0 'unsigned char'
|-TypedefDecl 0x22ffb98 <line:39:1, col:26> col:26 referenced __int16_t 'short'
| `-BuiltinType 0x229de20 'short'
|-TypedefDecl 0x22ffc08 <line:40:1, col:28> col:28 referenced __uint16_t 'unsigned short'
| `-BuiltinType 0x229dec0 'unsigned short'
|-TypedefDecl 0x22ffc78 <line:41:1, col:20> col:20 referenced __int32_t 'int'
| `-BuiltinType 0x229de40 'int'
|-TypedefDecl 0x22ffce8 <line:42:1, col:22> col:22 referenced __uint32_t 'unsigned int'
| `-BuiltinType 0x229dee0 'unsigned int'
|-TypedefDecl 0x22ffd58 <line:44:1, col:25> col:25 referenced __int64_t 'long'
| `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x22ffdc8 <line:45:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x22ffe50 <line:52:1, col:18> col:18 __int_least8_t '__int8_t':'signed char'
| `-TypedefType 0x22ffe20 '__int8_t' sugar
|   |-Typedef 0x22ffab8 '__int8_t'
|   `-BuiltinType 0x229de00 'signed char'
|-TypedefDecl 0x22ffee0 <line:53:1, col:19> col:19 __uint_least8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x22ffeb0 '__uint8_t' sugar
|   |-Typedef 0x22ffb28 '__uint8_t'
|   `-BuiltinType 0x229dea0 'unsigned char'
|-TypedefDecl 0x22fff70 <line:54:1, col:19> col:19 __int_least16_t '__int16_t':'short'
| `-TypedefType 0x22fff40 '__int16_t' sugar
|   |-Typedef 0x22ffb98 '__int16_t'
|   `-BuiltinType 0x229de20 'short'
|-TypedefDecl 0x2300000 <line:55:1, col:20> col:20 __uint_least16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x22fffd0 '__uint16_t' sugar
|   |-Typedef 0x22ffc08 '__uint16_t'
|   `-BuiltinType 0x229dec0 'unsigned short'
|-TypedefDecl 0x2300090 <line:56:1, col:19> col:19 __int_least32_t '__int32_t':'int'
| `-TypedefType 0x2300060 '__int32_t' sugar
|   |-Typedef 0x22ffc78 '__int32_t'
|   `-BuiltinType 0x229de40 'int'
|-TypedefDecl 0x2300120 <line:57:1, col:20> col:20 __uint_least32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x23000f0 '__uint32_t' sugar
|   |-Typedef 0x22ffce8 '__uint32_t'
|   `-BuiltinType 0x229dee0 'unsigned int'
|-TypedefDecl 0x23001b0 <line:58:1, col:19> col:19 __int_least64_t '__int64_t':'long'
| `-TypedefType 0x2300180 '__int64_t' sugar
|   |-Typedef 0x22ffd58 '__int64_t'
|   `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x2300240 <line:59:1, col:20> col:20 __uint_least64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x2300210 '__uint64_t' sugar
|   |-Typedef 0x22ffdc8 '__uint64_t'
|   `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x23002b0 <line:63:1, col:18> col:18 __quad_t 'long'
| `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x2300320 <line:64:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x2300390 <line:72:1, col:18> col:18 __intmax_t 'long'
| `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x2300400 <line:73:1, col:27> col:27 __uintmax_t 'unsigned long'
| `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x2300470 <line:137:22, line:145:25> col:25 __dev_t 'unsigned long'
| `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x23004e0 <line:137:22, line:146:25> col:25 __uid_t 'unsigned int'
| `-BuiltinType 0x229dee0 'unsigned int'
|-TypedefDecl 0x2300550 <line:137:22, line:147:25> col:25 __gid_t 'unsigned int'
| `-BuiltinType 0x229dee0 'unsigned int'
|-TypedefDecl 0x23005c0 <line:137:22, line:148:25> col:25 __ino_t 'unsigned long'
| `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x2300630 <line:137:22, line:149:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x23006a0 <line:137:22, line:150:26> col:26 __mode_t 'unsigned int'
| `-BuiltinType 0x229dee0 'unsigned int'
|-TypedefDecl 0x2300710 <line:137:22, line:151:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x2322500 <line:137:22, line:152:25> col:25 referenced __off_t 'long'
| `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x2322570 <line:137:22, line:153:27> col:27 referenced __off64_t 'long'
| `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x23225e0 <line:137:22, line:154:25> col:25 __pid_t 'int'
| `-BuiltinType 0x229de40 'int'
|-RecordDecl 0x2322638 </usr/include/x86_64-linux-gnu/bits/typesizes.h:72:24, col:47> col:24 struct definition
| `-FieldDecl 0x2322780 <col:33, col:44> col:37 __val 'int [2]'
|-TypedefDecl 0x2322828 </usr/include/x86_64-linux-gnu/bits/types.h:137:22, line:155:26> col:26 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x23227d0 'struct __fsid_t' sugar
|   `-RecordType 0x23226c0 '__fsid_t'
|     `-Record 0x2322638 ''
|-TypedefDecl 0x23228b0 <line:137:22, line:156:27> col:27 __clock_t 'long'
| `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x2322920 <line:137:22, line:157:26> col:26 __rlim_t 'unsigned long'
| `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x2322990 <line:137:22, line:158:28> col:28 __rlim64_t 'unsigned long'
| `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x2322a00 <line:137:22, line:159:24> col:24 __id_t 'unsigned int'
| `-BuiltinType 0x229dee0 'unsigned int'
|-TypedefDecl 0x2322a70 <line:137:22, line:160:26> col:26 __time_t 'long'
| `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x2322ae0 <line:137:22, line:161:30> col:30 __useconds_t 'unsigned int'
| `-BuiltinType 0x229dee0 'unsigned int'
|-TypedefDecl 0x2322b50 <line:137:22, line:162:31> col:31 __suseconds_t 'long'
| `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x2322bc0 <line:137:22, line:164:27> col:27 __daddr_t 'int'
| `-BuiltinType 0x229de40 'int'
|-TypedefDecl 0x2322c30 <line:137:22, line:165:25> col:25 __key_t 'int'
| `-BuiltinType 0x229de40 'int'
|-TypedefDecl 0x2322ca0 <line:137:22, line:168:29> col:29 __clockid_t 'int'
| `-BuiltinType 0x229de40 'int'
|-TypedefDecl 0x2322d10 <line:137:22, line:171:27> col:27 __timer_t 'void *'
| `-PointerType 0x229e560 'void *'
|   `-BuiltinType 0x229dda0 'void'
|-TypedefDecl 0x2322d80 <line:137:22, line:174:29> col:29 __blksize_t 'long'
| `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x2322df0 <line:137:22, line:179:28> col:28 __blkcnt_t 'long'
| `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x2322e60 <line:137:22, line:180:30> col:30 __blkcnt64_t 'long'
| `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x2322ed0 <line:137:22, line:183:30> col:30 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x2322f40 <line:137:22, line:184:32> col:32 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x2322fb0 <line:137:22, line:187:30> col:30 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x2323020 <line:137:22, line:188:32> col:32 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x2323090 <line:137:22, line:191:28> col:28 __fsword_t 'long'
| `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x2323100 <line:137:22, line:193:27> col:27 referenced __ssize_t 'long'
| `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x2323170 <line:137:22, line:196:33> col:33 __syscall_slong_t 'long'
| `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x23231e0 <line:137:22, line:198:33> col:33 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x229df00 'unsigned long'
|-TypedefDecl 0x2323270 <line:202:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x2323240 '__off64_t' sugar
|   |-Typedef 0x2322570 '__off64_t'
|   `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x23232e0 <line:203:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x229e9b0 'char *'
|   `-BuiltinType 0x229dde0 'char'
|-TypedefDecl 0x2323350 <line:137:22, line:206:25> col:25 __intptr_t 'long'
| `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x23233c0 <line:137:22, line:209:23> col:23 __socklen_t 'unsigned int'
| `-BuiltinType 0x229dee0 'unsigned int'
|-TypedefDecl 0x2323430 <line:214:1, col:13> col:13 __sig_atomic_t 'int'
| `-BuiltinType 0x229de40 'int'
|-RecordDecl 0x23284f0 </usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:13:9, line:21:1> line:13:9 struct definition
| |-FieldDecl 0x23285a8 <line:15:3, col:7> col:7 __count 'int'
| |-RecordDecl 0x23285f8 <line:16:3, line:20:3> line:16:3 union definition
| | |-FieldDecl 0x23286b8 <<built-in>:87:23, /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:18:19> col:19 __wch 'unsigned int'
| | `-FieldDecl 0x2328798 <line:19:5, col:18> col:10 __wchb 'char [4]'
| `-FieldDecl 0x2328848 <line:16:3, line:20:5> col:5 __value 'union (anonymous union at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)':'union __mbstate_t::(anonymous at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)'
|-TypedefDecl 0x23288f8 <line:13:1, line:21:3> col:3 referenced __mbstate_t 'struct __mbstate_t':'__mbstate_t'
| `-ElaboratedType 0x23288a0 'struct __mbstate_t' sugar
|   `-RecordType 0x2328570 '__mbstate_t'
|     `-Record 0x23284f0 ''
|-RecordDecl 0x2328968 </usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h:10:9, line:14:1> line:10:16 struct _G_fpos_t definition
| |-FieldDecl 0x2328a40 <line:12:3, col:11> col:11 __pos '__off_t':'long'
| `-FieldDecl 0x2328ac0 <line:13:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
|-TypedefDecl 0x2328b68 <line:10:1, line:14:3> col:3 referenced __fpos_t 'struct _G_fpos_t':'struct _G_fpos_t'
| `-ElaboratedType 0x2328b10 'struct _G_fpos_t' sugar
|   `-RecordType 0x23289f0 'struct _G_fpos_t'
|     `-Record 0x2328968 '_G_fpos_t'
|-RecordDecl 0x2328bd8 </usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h:10:9, line:14:1> line:10:16 struct _G_fpos64_t definition
| |-FieldDecl 0x2328c90 <line:12:3, col:13> col:13 __pos '__off64_t':'long'
| `-FieldDecl 0x2328cf0 <line:13:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
|-TypedefDecl 0x2328d98 <line:10:1, line:14:3> col:3 __fpos64_t 'struct _G_fpos64_t':'struct _G_fpos64_t'
| `-ElaboratedType 0x2328d40 'struct _G_fpos64_t' sugar
|   `-RecordType 0x2328c60 'struct _G_fpos64_t'
|     `-Record 0x2328bd8 '_G_fpos64_t'
|-RecordDecl 0x2328e08 </usr/include/x86_64-linux-gnu/bits/types/__FILE.h:4:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0x2328f00 <line:5:1, col:25> col:25 __FILE 'struct _IO_FILE':'struct _IO_FILE'
| `-ElaboratedType 0x2328eb0 'struct _IO_FILE' sugar
|   `-RecordType 0x2328e90 'struct _IO_FILE'
|     `-Record 0x2329318 '_IO_FILE'
|-RecordDecl 0x2328f58 prev 0x2328e08 </usr/include/x86_64-linux-gnu/bits/types/FILE.h:4:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0x2328ff8 <line:7:1, col:25> col:25 referenced FILE 'struct _IO_FILE':'struct _IO_FILE'
| `-ElaboratedType 0x2328eb0 'struct _IO_FILE' sugar
|   `-RecordType 0x2328e90 'struct _IO_FILE'
|     `-Record 0x2329318 '_IO_FILE'
|-RecordDecl 0x2329050 prev 0x2328f58 </usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h:35:1, col:8> col:8 struct _IO_FILE
|-RecordDecl 0x23290d0 <line:36:1, col:8> col:8 struct _IO_marker
|-RecordDecl 0x2329170 <line:37:1, col:8> col:8 struct _IO_codecvt
|-RecordDecl 0x2329210 <line:38:1, col:8> col:8 struct _IO_wide_data
|-TypedefDecl 0x23292c0 <line:43:1, col:14> col:14 referenced _IO_lock_t 'void'
| `-BuiltinType 0x229dda0 'void'
|-RecordDecl 0x2329318 prev 0x2329050 <line:49:1, line:99:1> line:49:8 struct _IO_FILE definition
| |-FieldDecl 0x23293b0 <line:51:3, col:7> col:7 _flags 'int'
| |-FieldDecl 0x2329418 <line:54:3, col:9> col:9 _IO_read_ptr 'char *'
| |-FieldDecl 0x2329480 <line:55:3, col:9> col:9 _IO_read_end 'char *'
| |-FieldDecl 0x232c590 <line:56:3, col:9> col:9 _IO_read_base 'char *'
| |-FieldDecl 0x232c5f8 <line:57:3, col:9> col:9 _IO_write_base 'char *'
| |-FieldDecl 0x232c660 <line:58:3, col:9> col:9 _IO_write_ptr 'char *'
| |-FieldDecl 0x232c6c8 <line:59:3, col:9> col:9 _IO_write_end 'char *'
| |-FieldDecl 0x232c730 <line:60:3, col:9> col:9 _IO_buf_base 'char *'
| |-FieldDecl 0x232c798 <line:61:3, col:9> col:9 _IO_buf_end 'char *'
| |-FieldDecl 0x232c800 <line:64:3, col:9> col:9 _IO_save_base 'char *'
| |-FieldDecl 0x232c868 <line:65:3, col:9> col:9 _IO_backup_base 'char *'
| |-FieldDecl 0x232c8d0 <line:66:3, col:9> col:9 _IO_save_end 'char *'
| |-FieldDecl 0x232c9d0 <line:68:3, col:22> col:22 _markers 'struct _IO_marker *'
| |-FieldDecl 0x232caa0 <line:70:3, col:20> col:20 _chain 'struct _IO_FILE *'
| |-FieldDecl 0x232cb08 <line:72:3, col:7> col:7 _fileno 'int'
| |-FieldDecl 0x232cb70 <line:73:3, col:7> col:7 _flags2 'int'
| |-FieldDecl 0x232cbd0 <line:74:3, col:11> col:11 _old_offset '__off_t':'long'
| |-FieldDecl 0x232cc38 <line:77:3, col:18> col:18 _cur_column 'unsigned short'
| |-FieldDecl 0x232cca0 <line:78:3, col:15> col:15 _vtable_offset 'signed char'
| |-FieldDecl 0x232cd88 <line:79:3, col:19> col:8 _shortbuf 'char [1]'
| |-FieldDecl 0x232ce38 <line:81:3, col:15> col:15 _lock '_IO_lock_t *'
| |-FieldDecl 0x232ce98 <line:89:3, col:13> col:13 _offset '__off64_t':'long'
| |-FieldDecl 0x232cfa0 <line:91:3, col:23> col:23 _codecvt 'struct _IO_codecvt *'
| |-FieldDecl 0x232d0a0 <line:92:3, col:25> col:25 _wide_data 'struct _IO_wide_data *'
| |-FieldDecl 0x232d118 <line:93:3, col:20> col:20 _freeres_list 'struct _IO_FILE *'
| |-FieldDecl 0x232d180 <line:94:3, col:9> col:9 _freeres_buf 'void *'
| |-FieldDecl 0x232d200 <line:95:3, col:10> col:10 __pad5 'size_t':'unsigned long'
| |-FieldDecl 0x232d268 <line:96:3, col:7> col:7 _mode 'int'
| `-FieldDecl 0x232d4b8 <line:98:3, col:74> col:8 _unused2 'char [20]'
|-TypedefDecl 0x232efa0 prev 0x22ff7b0 </usr/include/stdio.h:52:1, col:24> col:24 va_list '__gnuc_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0x232d510 '__gnuc_va_list' sugar
|   |-Typedef 0x22ff818 '__gnuc_va_list'
|   `-TypedefType 0x22ff780 '__builtin_va_list' sugar
|     |-Typedef 0x229ece8 '__builtin_va_list'
|     `-ConstantArrayType 0x229ec90 'struct __va_list_tag [1]' 1 
|       `-RecordType 0x229ead0 'struct __va_list_tag'
|         `-Record 0x229ea48 '__va_list_tag'
|-TypedefDecl 0x232f008 <line:63:1, col:17> col:17 off_t '__off_t':'long'
| `-TypedefType 0x2328a10 '__off_t' sugar
|   |-Typedef 0x2322500 '__off_t'
|   `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x232f090 <line:77:1, col:19> col:19 ssize_t '__ssize_t':'long'
| `-TypedefType 0x232f060 '__ssize_t' sugar
|   |-Typedef 0x2323100 '__ssize_t'
|   `-BuiltinType 0x229de60 'long'
|-TypedefDecl 0x232f120 <line:84:1, col:18> col:18 referenced fpos_t '__fpos_t':'struct _G_fpos_t'
| `-TypedefType 0x232f0f0 '__fpos_t' sugar
|   |-Typedef 0x2328b68 '__fpos_t'
|   `-ElaboratedType 0x2328b10 'struct _G_fpos_t' sugar
|     `-RecordType 0x23289f0 'struct _G_fpos_t'
|       `-Record 0x2328968 '_G_fpos_t'
|-VarDecl 0x232f1d8 <line:137:1, col:14> col:14 stdin 'FILE *' extern
|-VarDecl 0x232f298 <line:138:1, col:14> col:14 stdout 'FILE *' extern
|-VarDecl 0x232f310 <line:139:1, col:14> col:14 stderr 'FILE *' extern
|-FunctionDecl 0x232f460 <line:146:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:146:12 remove 'int (const char *)' extern
| |-ParmVarDecl 0x232f390 <col:20, col:32> col:32 __filename 'const char *'
| `-NoThrowAttr 0x232f508 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x232f6d0 </usr/include/stdio.h:148:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:148:12 rename 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x232f578 <col:20, col:32> col:32 __old 'const char *'
| |-ParmVarDecl 0x232f5f8 <col:39, col:51> col:51 __new 'const char *'
| `-NoThrowAttr 0x232f780 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x232fa70 </usr/include/stdio.h:152:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:152:12 renameat 'int (int, const char *, int, const char *)' extern
| |-ParmVarDecl 0x232f7f0 <col:22, col:26> col:26 __oldfd 'int'
| |-ParmVarDecl 0x232f870 <col:35, col:47> col:47 __old 'const char *'
| |-ParmVarDecl 0x232f8f0 <col:54, col:58> col:58 __newfd 'int'
| |-ParmVarDecl 0x232f970 <line:153:8, col:20> col:20 __new 'const char *'
| `-NoThrowAttr 0x232fb30 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x232fc78 </usr/include/stdio.h:173:1, col:27> col:14 tmpfile 'FILE *(void)' extern
|-FunctionDecl 0x232fe00 <line:187:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:187:14 tmpnam 'char *(char *)' extern
| |-ParmVarDecl 0x232fd30 <col:22, col:28> col:28 __s 'char *'
| `-NoThrowAttr 0x232fea8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x2334620 </usr/include/stdio.h:192:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:192:14 tmpnam_r 'char *(char *)' extern
| |-ParmVarDecl 0x232ff18 <col:24, col:30> col:30 __s 'char *'
| `-NoThrowAttr 0x23346c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x2334890 </usr/include/stdio.h:204:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdio.h:204:14 tempnam 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2334738 <col:23, col:35> col:35 __dir 'const char *'
| |-ParmVarDecl 0x23347b8 <col:42, col:54> col:54 __pfx 'const char *'
| |-NoThrowAttr 0x2334940 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0x2334998 <line:208:47> malloc
|-FunctionDecl 0x2334ad0 </usr/include/stdio.h:213:1, col:34> col:12 fclose 'int (FILE *)' extern
| `-ParmVarDecl 0x23349d0 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x2334c20 <line:218:1, col:34> col:12 fflush 'int (FILE *)' extern
| `-ParmVarDecl 0x2334b88 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x2334d70 <line:227:1, col:43> col:12 fflush_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x2334cd8 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0x2335008 <line:246:14> col:14 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x23350a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2335110 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2335188 prev 0x2335008 <col:1, line:247:37> line:246:14 fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x2334e30 <col:21, col:44> col:44 __filename 'const char *restrict'
| `-ParmVarDecl 0x2334eb0 <line:247:7, col:30> col:30 __modes 'const char *restrict'
|-FunctionDecl 0x2335468 <line:252:1, line:254:34> line:252:14 freopen 'FILE *(const char *restrict, const char *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0x2335250 <col:23, col:46> col:46 __filename 'const char *restrict'
| |-ParmVarDecl 0x23352d0 <line:253:9, col:32> col:32 __modes 'const char *restrict'
| `-ParmVarDecl 0x2335348 <line:254:9, col:26> col:26 __stream 'FILE *restrict'
|-FunctionDecl 0x2337748 <line:279:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:279:14 fdopen 'FILE *(int, const char *)' extern
| |-ParmVarDecl 0x2335538 <col:22, col:26> col:26 __fd 'int'
| |-ParmVarDecl 0x2337630 <col:32, col:44> col:44 __modes 'const char *'
| `-NoThrowAttr 0x23377f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x2337a88 </usr/include/stdio.h:292:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:292:14 fmemopen 'FILE *(void *, size_t, const char *)' extern
| |-ParmVarDecl 0x2337868 <col:24, col:30> col:30 __s 'void *'
| |-ParmVarDecl 0x23378e0 <col:35, col:42> col:42 __len 'size_t':'unsigned long'
| |-ParmVarDecl 0x2337960 <col:49, col:61> col:61 __modes 'const char *'
| `-NoThrowAttr 0x2337b40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x2337dc8 </usr/include/stdio.h:298:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:298:14 open_memstream 'FILE *(char **, size_t *)' extern
| |-ParmVarDecl 0x2337be0 <col:30, col:37> col:37 __bufloc 'char **'
| |-ParmVarDecl 0x2337cb8 <col:47, col:55> col:55 __sizeloc 'size_t *'
| `-NoThrowAttr 0x2337e78 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x2338078 </usr/include/stdio.h:304:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:304:13 setbuf 'void (FILE *restrict, char *restrict)' extern
| |-ParmVarDecl 0x2337ee0 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0x2337f60 <col:48, col:65> col:65 __buf 'char *restrict'
| `-NoThrowAttr 0x2338128 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x2338450 </usr/include/stdio.h:308:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:308:12 setvbuf 'int (FILE *restrict, char *restrict, int, size_t)' extern
| |-ParmVarDecl 0x2338190 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0x2338210 <col:48, col:65> col:65 __buf 'char *restrict'
| |-ParmVarDecl 0x2338290 <line:309:7, col:11> col:11 __modes 'int'
| |-ParmVarDecl 0x2338308 <col:20, col:27> col:27 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0x2338510 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x23387d8 </usr/include/stdio.h:314:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:314:13 setbuffer 'void (FILE *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0x2338578 <col:24, col:41> col:41 __stream 'FILE *restrict'
| |-ParmVarDecl 0x2338640 <col:51, col:68> col:68 __buf 'char *restrict'
| |-ParmVarDecl 0x23386b8 <line:315:10, col:17> col:17 __size 'size_t':'unsigned long'
| `-NoThrowAttr 0x2338890 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x23389e8 </usr/include/stdio.h:318:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:318:13 setlinebuf 'void (FILE *)' extern
| |-ParmVarDecl 0x23388f8 <col:25, col:31> col:31 __stream 'FILE *'
| `-NoThrowAttr 0x2338a90 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x2338ce0 </usr/include/stdio.h:326:12> col:12 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x2338d80 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2338de8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2338e60 <col:12> Implicit printf 2 3
|-FunctionDecl 0x2338ec8 prev 0x2338ce0 <col:1, line:327:43> line:326:12 fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x2338af8 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0x2338b78 <line:327:7, col:30> col:30 __format 'const char *restrict'
| `-FormatAttr 0x2338fa8 <line:326:12> Inherited printf 2 3
|-FunctionDecl 0x2339108 <line:332:12> col:12 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x23391a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2339218 <col:12> Implicit printf 1 2
|-FunctionDecl 0x2339280 prev 0x2339108 <col:1, col:56> col:12 printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x2338ff8 <col:20, col:43> col:43 __format 'const char *restrict'
| `-FormatAttr 0x2339358 <col:12> Inherited printf 1 2
|-FunctionDecl 0x2339548 <line:334:12> col:12 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x2339650 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x23396b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2339730 <col:12> Implicit printf 2 3
|-FunctionDecl 0x2339798 prev 0x2339548 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:56:49> /usr/include/stdio.h:334:12 sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x23393a8 <col:21, col:38> col:38 __s 'char *restrict'
| |-ParmVarDecl 0x2339428 <line:335:7, col:30> col:30 __format 'const char *restrict'
| |-FormatAttr 0x23398a0 <line:334:12> Inherited printf 2 3
| `-NoThrowAttr 0x2339848 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
|-FunctionDecl 0x2339bb0 </usr/include/stdio.h:341:12> col:12 implicit vfprintf 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x2339c50 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2339cb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2339d20 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x2339da0 <col:12> Implicit printf 2 0
|-FunctionDecl 0x2339e08 prev 0x2339bb0 <col:1, line:342:28> line:341:12 vfprintf 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x23398e8 <col:22, col:39> col:39 __s 'FILE *restrict'
| |-ParmVarDecl 0x2339968 <col:44, col:67> col:67 __format 'const char *restrict'
| |-ParmVarDecl 0x2339a40 <line:342:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x2339ef0 <line:341:12> Inherited printf 2 0
|-FunctionDecl 0x233a0d0 <line:347:12> col:12 implicit vprintf 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x233a170 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x233a1d8 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x233a250 <col:12> Implicit printf 1 0
|-FunctionDecl 0x233a2b8 prev 0x233a0d0 <col:1, col:74> col:12 vprintf 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x2339f40 <col:21, col:44> col:44 __format 'const char *restrict'
| |-ParmVarDecl 0x2339fb8 <col:54, col:69> col:69 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x233a398 <col:12> Inherited printf 1 0
|-FunctionDecl 0x233a700 <line:349:12> col:12 implicit vsprintf 'int (char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x233a7a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x233a808 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x233a870 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x233a8f0 <col:12> Implicit printf 2 0
|-FunctionDecl 0x233a958 prev 0x233a700 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:56:49> /usr/include/stdio.h:349:12 vsprintf 'int (char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x233a3e8 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0x233a468 <col:44, col:67> col:67 __format 'const char *restrict'
| |-ParmVarDecl 0x233a4e0 <line:350:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-FormatAttr 0x233aa68 <line:349:12> Inherited printf 2 0
| `-NoThrowAttr 0x233aa10 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
|-FunctionDecl 0x233ad48 </usr/include/stdio.h:354:12> col:12 implicit snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x233ade8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x233ae50 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x233aeb8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x233af38 <col:12> Implicit printf 3 4
|-FunctionDecl 0x233afa0 prev 0x233ad48 <col:1, line:356:62> line:354:12 snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x233aab8 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0x233ab30 <col:44, col:51> col:51 __maxlen 'size_t':'unsigned long'
| |-ParmVarDecl 0x233abb0 <line:355:8, col:31> col:31 __format 'const char *restrict'
| |-NoThrowAttr 0x233b058 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
| `-FormatAttr 0x233b0b0 </usr/include/stdio.h:356:32, col:60> printf 3 4
|-FunctionDecl 0x233b410 <line:358:12> col:12 implicit vsnprintf 'int (char *, unsigned long, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x233b4b0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x233b518 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x233b580 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x233b5e8 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x233b670 <col:12> Implicit printf 3 0
|-FunctionDecl 0x233b710 prev 0x233b410 <col:1, line:360:62> line:358:12 vsnprintf 'int (char *, unsigned long, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x233b100 <col:23, col:40> col:40 __s 'char *restrict'
| |-ParmVarDecl 0x233b178 <col:45, col:52> col:52 __maxlen 'size_t':'unsigned long'
| |-ParmVarDecl 0x233b1f8 <line:359:9, col:32> col:32 __format 'const char *restrict'
| |-ParmVarDecl 0x233b270 <col:42, col:57> col:57 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-NoThrowAttr 0x233b7d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
| `-FormatAttr 0x233b828 </usr/include/stdio.h:360:32, col:60> printf 3 0
|-FunctionDecl 0x233baf0 <line:379:1, line:381:52> line:379:12 vdprintf 'int (int, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x233b878 <col:22, col:26> col:26 __fd 'int'
| |-ParmVarDecl 0x233b8f8 <col:32, col:55> col:55 __fmt 'const char *restrict'
| |-ParmVarDecl 0x233b970 <line:380:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x233bba8 <line:381:22, col:50> printf 2 0
|-FunctionDecl 0x233be18 <line:382:1, line:383:52> line:382:12 dprintf 'int (int, const char *restrict, ...)' extern
| |-ParmVarDecl 0x233bc28 <col:21, col:25> col:25 __fd 'int'
| |-ParmVarDecl 0x233bca8 <col:31, col:54> col:54 __fmt 'const char *restrict'
| `-FormatAttr 0x233bec8 <line:383:22, col:50> printf 2 3
|-FunctionDecl 0x233c060 <line:391:12> col:12 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x233c100 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x233c168 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x233c1e0 <col:12> Implicit scanf 2 3
|-FunctionDecl 0x233c248 prev 0x233c060 <col:1, line:392:42> line:391:12 fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x233bf40 <col:20, col:37> col:37 __stream 'FILE *restrict'
| |-ParmVarDecl 0x233bfc0 <line:392:6, col:29> col:29 __format 'const char *restrict'
| `-FormatAttr 0x233c328 <line:391:12> Inherited scanf 2 3
|-FunctionDecl 0x233c410 <line:397:12> col:12 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x233c4b0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x233c520 <col:12> Implicit scanf 1 2
|-FunctionDecl 0x233c588 prev 0x233c410 <col:1, col:55> col:12 scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x233c378 <col:19, col:42> col:42 __format 'const char *restrict'
| `-FormatAttr 0x233c660 <col:12> Inherited scanf 1 2
|-FunctionDecl 0x233d8e8 <line:399:12> col:12 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x233d988 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x233d9f0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x233da68 <col:12> Implicit scanf 2 3
|-FunctionDecl 0x233dad0 prev 0x233d8e8 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:399:12 sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x233d740 <col:20, col:43> col:43 __s 'const char *restrict'
| |-ParmVarDecl 0x233d7c0 <line:400:6, col:29> col:29 __format 'const char *restrict'
| |-FormatAttr 0x233dbd8 <line:399:12> Inherited scanf 2 3
| `-NoThrowAttr 0x233db80 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x233ddb0 prev 0x233c248 </usr/include/stdio.h:407:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/stdio.h:407:24 fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x233dc20 <col:33, col:50> col:50 __stream 'FILE *restrict'
| |-ParmVarDecl 0x233dca0 <line:408:5, col:28> col:28 __format 'const char *restrict'
| |-FormatAttr 0x233ded8 <line:391:12> Inherited scanf 2 3
| `-AsmLabelAttr 0x233de50 <<scratch space>:14:1> "__isoc99_fscanf" IsLiteralLabel
|-FunctionDecl 0x233e028 prev 0x233c588 </usr/include/stdio.h:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/stdio.h:410:24 scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x233df28 <col:32, col:55> col:55 __format 'const char *restrict'
| |-FormatAttr 0x233e148 <line:397:12> Inherited scanf 1 2
| `-AsmLabelAttr 0x233e0c8 <<scratch space>:16:1> "__isoc99_scanf" IsLiteralLabel
|-FunctionDecl 0x233e2e8 prev 0x233dad0 </usr/include/stdio.h:412:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:412:28 sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x233e198 <col:37, col:60> col:60 __s 'const char *restrict'
| |-ParmVarDecl 0x233e218 <line:413:9, col:32> col:32 __format 'const char *restrict'
| |-FormatAttr 0x233e438 <line:399:12> Inherited scanf 2 3
| |-AsmLabelAttr 0x233e388 <<scratch space>:18:1> "__isoc99_sscanf" IsLiteralLabel
| `-NoThrowAttr 0x233e410 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x233f020 </usr/include/stdio.h:432:12> col:12 implicit vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x233f0c0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x233f128 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x233f190 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x233f210 <col:12> Implicit scanf 2 0
|-FunctionDecl 0x233f278 prev 0x233f020 <col:1, line:434:51> line:432:12 vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x233e480 <col:21, col:38> col:38 __s 'FILE *restrict'
| |-ParmVarDecl 0x233e500 <col:43, col:66> col:66 __format 'const char *restrict'
| |-ParmVarDecl 0x233e578 <line:433:7, col:22> col:22 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x233f330 <line:434:22, col:49> scanf 2 0
|-FunctionDecl 0x233f558 <line:440:12> col:12 implicit vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x233f5f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x233f660 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x233f6d8 <col:12> Implicit scanf 1 0
|-FunctionDecl 0x233f740 prev 0x233f558 <col:1, line:441:51> line:440:12 vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x233f3b0 <col:20, col:43> col:43 __format 'const char *restrict'
| |-ParmVarDecl 0x233f428 <col:53, col:68> col:68 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x233f7f0 <line:441:22, col:49> scanf 1 0
|-FunctionDecl 0x233fb20 <line:444:12> col:12 implicit vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x233fbc0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x233fc28 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x233fc90 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x233fd10 <col:12> Implicit scanf 2 0
|-FunctionDecl 0x233fd78 prev 0x233fb20 <col:1, line:446:59> line:444:12 vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x233f870 <col:21, col:44> col:44 __s 'const char *restrict'
| |-ParmVarDecl 0x233f8f0 <line:445:7, col:30> col:30 __format 'const char *restrict'
| |-ParmVarDecl 0x233f968 <col:40, col:55> col:55 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-NoThrowAttr 0x233fe30 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-FormatAttr 0x233fe88 </usr/include/stdio.h:446:30, col:57> scanf 2 0
|-FunctionDecl 0x2340a28 prev 0x233f278 <line:451:1, line:455:51> line:451:24 vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x233fed0 <line:452:11, col:28> col:28 __s 'FILE *restrict'
| |-ParmVarDecl 0x233ff50 <line:453:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x23408c0 <col:37, col:52> col:52 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0x2340ac8 <<scratch space>:21:1> "__isoc99_vfscanf" IsLiteralLabel
| `-FormatAttr 0x2340b58 </usr/include/stdio.h:455:22, col:49> scanf 2 0
|-FunctionDecl 0x2340d40 prev 0x233f740 <line:456:1, line:458:51> line:456:24 vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x2340ba8 <col:33, col:56> col:56 __format 'const char *restrict'
| |-ParmVarDecl 0x2340c20 <line:457:5, col:20> col:20 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0x2340de0 <<scratch space>:23:1> "__isoc99_vscanf" IsLiteralLabel
| `-FormatAttr 0x2340e68 </usr/include/stdio.h:458:22, col:49> scanf 1 0
|-FunctionDecl 0x23410d8 prev 0x233fd78 <line:459:1, line:463:51> line:459:28 vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x2340eb8 <line:460:8, col:31> col:31 __s 'const char *restrict'
| |-ParmVarDecl 0x2340f38 <line:461:8, col:31> col:31 __format 'const char *restrict'
| |-ParmVarDecl 0x2340fb0 <line:462:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0x2341178 <<scratch space>:25:1> "__isoc99_vsscanf" IsLiteralLabel
| |-NoThrowAttr 0x2341208 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-FormatAttr 0x2341230 </usr/include/stdio.h:463:22, col:49> scanf 2 0
|-FunctionDecl 0x2341310 <line:485:1, col:33> col:12 fgetc 'int (FILE *)' extern
| `-ParmVarDecl 0x2341278 <col:19, col:25> col:25 __stream 'FILE *'
|-FunctionDecl 0x2341460 <line:486:1, col:32> col:12 getc 'int (FILE *)' extern
| `-ParmVarDecl 0x23413c8 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0x23415d0 <line:492:1, col:25> col:12 getchar 'int (void)' extern
|-FunctionDecl 0x2341718 <line:499:1, col:41> col:12 getc_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x2341680 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x2341ca0 <line:500:1, col:34> col:12 getchar_unlocked 'int (void)' extern
|-FunctionDecl 0x2341de8 <line:510:1, col:42> col:12 fgetc_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x2341d50 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0x2342040 <line:521:1, col:42> col:12 fputc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x2341ea8 <col:19, col:23> col:23 __c 'int'
| `-ParmVarDecl 0x2341f20 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0x2342220 <line:522:1, col:41> col:12 putc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x2342108 <col:18, col:22> col:22 __c 'int'
| `-ParmVarDecl 0x2342180 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x23423b0 <line:528:1, col:28> col:12 putchar 'int (int)' extern
| `-ParmVarDecl 0x23422e8 <col:21, col:25> col:25 __c 'int'
|-FunctionDecl 0x2342588 <line:537:1, col:51> col:12 fputc_unlocked 'int (int, FILE *)' extern
| |-ParmVarDecl 0x2342470 <col:28, col:32> col:32 __c 'int'
| `-ParmVarDecl 0x23424e8 <col:37, col:43> col:43 __stream 'FILE *'
|-FunctionDecl 0x2342768 <line:545:1, col:50> col:12 putc_unlocked 'int (int, FILE *)' extern
| |-ParmVarDecl 0x2342650 <col:27, col:31> col:31 __c 'int'
| `-ParmVarDecl 0x23426c8 <col:36, col:42> col:42 __stream 'FILE *'
|-FunctionDecl 0x23428c8 <line:546:1, col:37> col:12 putchar_unlocked 'int (int)' extern
| `-ParmVarDecl 0x2342830 <col:30, col:34> col:34 __c 'int'
|-FunctionDecl 0x2342a18 <line:553:1, col:32> col:12 getw 'int (FILE *)' extern
| `-ParmVarDecl 0x2342980 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0x2342bf0 <line:556:1, col:41> col:12 putw 'int (int, FILE *)' extern
| |-ParmVarDecl 0x2342ad8 <col:18, col:22> col:22 __w 'int'
| `-ParmVarDecl 0x2342b50 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x2342ef0 <line:564:1, col:77> col:14 fgets 'char *(char *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0x2342cc8 <col:21, col:38> col:38 __s 'char *restrict'
| |-ParmVarDecl 0x2342d48 <col:43, col:47> col:47 __n 'int'
| `-ParmVarDecl 0x2342dc0 <col:52, col:69> col:69 __stream 'FILE *restrict'
|-FunctionDecl 0x2343278 <line:603:1, line:605:55> line:603:18 __getdelim '__ssize_t (char **restrict, size_t *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0x2342fc0 <col:30, col:48> col:48 __lineptr 'char **restrict'
| |-ParmVarDecl 0x2343038 <line:604:30, col:49> col:49 __n 'size_t *restrict'
| |-ParmVarDecl 0x23430b8 <col:54, col:58> col:58 __delimiter 'int'
| `-ParmVarDecl 0x2343130 <line:605:30, col:47> col:47 __stream 'FILE *restrict'
|-FunctionDecl 0x2343568 <line:606:1, line:608:53> line:606:18 getdelim '__ssize_t (char **restrict, size_t *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0x2343350 <col:28, col:46> col:46 __lineptr 'char **restrict'
| |-ParmVarDecl 0x23433c8 <line:607:28, col:47> col:47 __n 'size_t *restrict'
| |-ParmVarDecl 0x2343448 <col:52, col:56> col:56 __delimiter 'int'
| `-ParmVarDecl 0x23434c0 <line:608:28, col:45> col:45 __stream 'FILE *restrict'
|-FunctionDecl 0x2343858 <line:616:1, line:618:52> line:616:18 getline '__ssize_t (char **restrict, size_t *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0x2343640 <col:27, col:45> col:45 __lineptr 'char **restrict'
| |-ParmVarDecl 0x23436b8 <line:617:27, col:46> col:46 __n 'size_t *restrict'
| `-ParmVarDecl 0x2343730 <line:618:27, col:44> col:44 __stream 'FILE *restrict'
|-FunctionDecl 0x2343ac0 <line:626:1, col:72> col:12 fputs 'int (const char *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0x2343928 <col:19, col:42> col:42 __s 'const char *restrict'
| `-ParmVarDecl 0x23439a0 <col:47, col:64> col:64 __stream 'FILE *restrict'
|-FunctionDecl 0x2343cc0 <line:632:1, col:33> col:12 puts 'int (const char *)' extern
| `-ParmVarDecl 0x2343b88 <col:18, col:30> col:30 __s 'const char *'
|-FunctionDecl 0x2343e98 <line:639:1, col:43> col:12 ungetc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x2343d80 <col:20, col:24> col:24 __c 'int'
| `-ParmVarDecl 0x2343df8 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0x2344258 <line:646:15> col:15 implicit fread 'unsigned long (void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x23442f8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2344360 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x23443c8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0x2344430 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x23444b8 prev 0x2344258 <col:1, line:647:45> line:646:15 fread 'unsigned long (void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x2343f60 <col:22, col:39> col:39 __ptr 'void *restrict'
| |-ParmVarDecl 0x2343fd8 <col:46, col:53> col:53 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x2344050 <line:647:8, col:15> col:15 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x23440c8 <col:20, col:37> col:37 __stream 'FILE *restrict'
|-FunctionDecl 0x23448b8 <line:652:15> col:15 implicit fwrite 'unsigned long (const void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x2344958 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x23449c0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x2344a28 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0x2344a90 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2344b18 prev 0x23448b8 <col:1, line:653:41> line:652:15 fwrite 'unsigned long (const void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x23445c0 <col:23, col:46> col:46 __ptr 'const void *restrict'
| |-ParmVarDecl 0x2344638 <col:53, col:60> col:60 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x23446b0 <line:653:9, col:16> col:16 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x2344728 <col:21, col:38> col:38 __s 'FILE *restrict'
|-FunctionDecl 0x2344e68 <line:673:1, line:674:47> line:673:15 fread_unlocked 'size_t (void *restrict, size_t, size_t, FILE *restrict)' extern
| |-ParmVarDecl 0x2344bf0 <col:31, col:48> col:48 __ptr 'void *restrict'
| |-ParmVarDecl 0x2344cd0 <col:55, col:62> col:62 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x2344d48 <line:674:10, col:17> col:17 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x2344dc0 <col:22, col:39> col:39 __stream 'FILE *restrict'
|-FunctionDecl 0x2345150 <line:675:1, line:676:48> line:675:15 fwrite_unlocked 'size_t (const void *restrict, size_t, size_t, FILE *restrict)' extern
| |-ParmVarDecl 0x2344f40 <col:32, col:55> col:55 __ptr 'const void *restrict'
| |-ParmVarDecl 0x2344fb8 <col:62, col:69> col:69 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x2345030 <line:676:11, col:18> col:18 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x23450a8 <col:23, col:40> col:40 __stream 'FILE *restrict'
|-FunctionDecl 0x2345450 <line:684:1, col:63> col:12 fseek 'int (FILE *, long, int)' extern
| |-ParmVarDecl 0x2345220 <col:19, col:25> col:25 __stream 'FILE *'
| |-ParmVarDecl 0x23452a0 <col:35, col:44> col:44 __off 'long'
| `-ParmVarDecl 0x2345320 <col:51, col:55> col:55 __whence 'int'
|-FunctionDecl 0x2345610 <line:689:1, col:38> col:17 ftell 'long (FILE *)' extern
| `-ParmVarDecl 0x2345518 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0x2345758 <line:694:1, col:35> col:13 rewind 'void (FILE *)' extern
| `-ParmVarDecl 0x23456c8 <col:21, col:27> col:27 __stream 'FILE *'
|-FunctionDecl 0x23459f0 <line:707:1, col:63> col:12 fseeko 'int (FILE *, __off_t, int)' extern
| |-ParmVarDecl 0x2345810 <col:20, col:26> col:26 __stream 'FILE *'
| |-ParmVarDecl 0x2345888 <col:36, col:44> col:44 __off '__off_t':'long'
| `-ParmVarDecl 0x2345908 <col:51, col:55> col:55 __whence 'int'
|-FunctionDecl 0x2345b78 <line:712:1, col:38> col:16 ftello '__off_t (FILE *)' extern
| `-ParmVarDecl 0x2345ab8 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0x2346e70 <line:731:1, col:72> col:12 fgetpos 'int (FILE *restrict, fpos_t *restrict)' extern
| |-ParmVarDecl 0x2345c30 <col:21, col:38> col:38 __stream 'FILE *restrict'
| `-ParmVarDecl 0x2346d58 <col:48, col:67> col:67 __pos 'fpos_t *restrict'
|-FunctionDecl 0x2347120 <line:736:1, col:56> col:12 fsetpos 'int (FILE *, const fpos_t *)' extern
| |-ParmVarDecl 0x2346f30 <col:21, col:27> col:27 __stream 'FILE *'
| `-ParmVarDecl 0x2347008 <col:37, col:51> col:51 __pos 'const fpos_t *'
|-FunctionDecl 0x2347270 <line:757:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:757:13 clearerr 'void (FILE *)' extern
| |-ParmVarDecl 0x23471e0 <col:23, col:29> col:29 __stream 'FILE *'
| `-NoThrowAttr 0x2347318 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x2347418 </usr/include/stdio.h:759:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:759:12 feof 'int (FILE *)' extern
| |-ParmVarDecl 0x2347380 <col:18, col:24> col:24 __stream 'FILE *'
| `-NoThrowAttr 0x23474c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x23475c0 </usr/include/stdio.h:761:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:761:12 ferror 'int (FILE *)' extern
| |-ParmVarDecl 0x2347528 <col:20, col:26> col:26 __stream 'FILE *'
| `-NoThrowAttr 0x2347668 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x2347760 </usr/include/stdio.h:765:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:765:13 clearerr_unlocked 'void (FILE *)' extern
| |-ParmVarDecl 0x23476d0 <col:32, col:38> col:38 __stream 'FILE *'
| `-NoThrowAttr 0x2347808 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x2347908 </usr/include/stdio.h:766:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:766:12 feof_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0x2347870 <col:27, col:33> col:33 __stream 'FILE *'
| `-NoThrowAttr 0x23479b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x2347ab0 </usr/include/stdio.h:767:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:767:12 ferror_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0x2347a18 <col:29, col:35> col:35 __stream 'FILE *'
| `-NoThrowAttr 0x2347b58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x2347e40 </usr/include/stdio.h:775:1, col:36> col:13 perror 'void (const char *)' extern
| `-ParmVarDecl 0x2347bc8 <col:21, col:33> col:33 __s 'const char *'
|-VarDecl 0x2347f00 </usr/include/x86_64-linux-gnu/bits/sys_errlist.h:26:1, col:12> col:12 sys_nerr 'int' extern
|-VarDecl 0x2347ff0 <line:27:1, col:38> col:26 sys_errlist 'const char *const []' extern
|-FunctionDecl 0x2348100 </usr/include/stdio.h:786:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:786:12 fileno 'int (FILE *)' extern
| |-ParmVarDecl 0x2348068 <col:20, col:26> col:26 __stream 'FILE *'
| `-NoThrowAttr 0x23481a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x23482a8 </usr/include/stdio.h:791:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:791:12 fileno_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0x2348210 <col:29, col:35> col:35 __stream 'FILE *'
| `-NoThrowAttr 0x2348350 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x23484d8 </usr/include/stdio.h:800:1, col:63> col:14 popen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x23483c0 <col:21, col:33> col:33 __command 'const char *'
| `-ParmVarDecl 0x2348440 <col:44, col:56> col:56 __modes 'const char *'
|-FunctionDecl 0x2348630 <line:806:1, col:34> col:12 pclose 'int (FILE *)' extern
| `-ParmVarDecl 0x2348598 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x2348788 <line:812:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:812:14 ctermid 'char *(char *)' extern
| |-ParmVarDecl 0x23486f0 <col:23, col:29> col:29 __s 'char *'
| `-NoThrowAttr 0x2348830 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x2348928 </usr/include/stdio.h:840:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:840:13 flockfile 'void (FILE *)' extern
| |-ParmVarDecl 0x2348898 <col:24, col:30> col:30 __stream 'FILE *'
| `-NoThrowAttr 0x23489d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x2348ad0 </usr/include/stdio.h:844:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:844:12 ftrylockfile 'int (FILE *)' extern
| |-ParmVarDecl 0x2348a38 <col:26, col:32> col:32 __stream 'FILE *'
| `-NoThrowAttr 0x2348b78 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x2348c70 </usr/include/stdio.h:847:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:847:13 funlockfile 'void (FILE *)' extern
| |-ParmVarDecl 0x2348be0 <col:26, col:32> col:32 __stream 'FILE *'
| `-NoThrowAttr 0x2348d18 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x23493b0 </usr/include/stdio.h:858:1, col:27> col:12 __uflow 'int (FILE *)' extern
| `-ParmVarDecl 0x2348d80 <col:21, col:26> col:27 'FILE *'
|-FunctionDecl 0x2349600 <line:859:1, col:35> col:12 __overflow 'int (FILE *, int)' extern
| |-ParmVarDecl 0x2349468 <col:24, col:29> col:30 'FILE *'
| `-ParmVarDecl 0x23494e8 <col:32> col:35 'int'
`-VarDecl 0x23496e0 <main/libc/dprintf.c:38:1, col:8> col:8 invalid VOID 'int'

TranslationUnitDecl 0xeb19c8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0xeb2260 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0xeb1f60 '__int128'
|-TypedefDecl 0xeb22d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0xeb1f80 'unsigned __int128'
|-TypedefDecl 0xeb25d8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0xeb23b0 'struct __NSConstantString_tag'
|   `-Record 0xeb2328 '__NSConstantString_tag'
|-TypedefDecl 0xeb2670 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0xeb2630 'char *'
|   `-BuiltinType 0xeb1a60 'char'
|-TypedefDecl 0xeb2968 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0xeb2910 'struct __va_list_tag [1]' 1 
|   `-RecordType 0xeb2750 'struct __va_list_tag'
|     `-Record 0xeb26c8 '__va_list_tag'
|-TypedefDecl 0xf29ba8 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:46:1, col:23> col:23 referenced size_t 'unsigned long'
| `-BuiltinType 0xeb1b80 'unsigned long'
|-FunctionDecl 0xf29ed0 </usr/include/string.h:43:14> col:14 implicit memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0xf29f70 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0xf29fd8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0xf2a040 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xf2a0c0 prev 0xf29ed0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:43:14 memcpy 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0xf29c18 <col:22, col:39> col:39 __dest 'void *restrict'
| |-ParmVarDecl 0xf29cc0 <col:47, col:70> col:70 __src 'const void *restrict'
| |-ParmVarDecl 0xf29d60 <line:44:8, col:15> col:15 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf2a178 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf2a1d0 <line:293:44, /usr/include/string.h:44:44> 1 2
|-FunctionDecl 0xf2a440 <line:47:14> col:14 implicit memmove 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0xf2a4e0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0xf2a548 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0xf2a5b0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xf2a630 prev 0xf2a440 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:47:14 memmove 'void *(void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0xf2a220 <col:23, col:29> col:29 __dest 'void *'
| |-ParmVarDecl 0xf2a2a0 <col:37, col:49> col:49 __src 'const void *'
| |-ParmVarDecl 0xf2a318 <col:56, col:63> col:63 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf2a6e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf2a740 <line:293:44, /usr/include/string.h:48:30> 1 2
|-FunctionDecl 0xf2aa90 <line:54:14> col:14 implicit memccpy 'void *(void *, const void *, int, unsigned long)' extern
| |-ParmVarDecl 0xf2be00 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0xf2be68 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0xf2bed0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0xf2bf38 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xf2bfc0 prev 0xf2aa90 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:54:14 memccpy 'void *(void *, const void *, int, unsigned long)' extern
| |-ParmVarDecl 0xf2a790 <col:23, col:40> col:40 __dest 'void *restrict'
| |-ParmVarDecl 0xf2a810 <col:48, col:71> col:71 __src 'const void *restrict'
| |-ParmVarDecl 0xf2a890 <line:55:9, col:13> col:13 __c 'int'
| |-ParmVarDecl 0xf2a908 <col:18, col:25> col:25 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf2c080 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf2c0d8 <line:293:44, /usr/include/string.h:56:30> 1 2
|-FunctionDecl 0xf2c370 <line:61:14> col:14 implicit memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0xf2c410 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0xf2c478 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0xf2c4e0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xf2c560 prev 0xf2c370 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:61:14 memset 'void *(void *, int, unsigned long)' extern
| |-ParmVarDecl 0xf2c130 <col:22, col:28> col:28 __s 'void *'
| |-ParmVarDecl 0xf2c1b0 <col:33, col:37> col:37 __c 'int'
| |-ParmVarDecl 0xf2c228 <col:42, col:49> col:49 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf2c618 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf2c670 <line:293:44, /usr/include/string.h:61:75> 1
|-FunctionDecl 0xf2c920 <line:64:12> col:12 implicit memcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0xf2c9c0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0xf2ca28 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0xf2ca90 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xf2cb10 prev 0xf2c920 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:64:12 memcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0xf2c6c0 <col:20, col:32> col:32 __s1 'const void *'
| |-ParmVarDecl 0xf2c740 <col:38, col:50> col:50 __s2 'const void *'
| |-ParmVarDecl 0xf2c7b8 <col:56, col:63> col:63 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf2cbc8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf2cc20 <line:226:45>
| `-NonNullAttr 0xf2cc48 <line:293:44, /usr/include/string.h:65:49> 1 2
|-FunctionDecl 0xf2cef0 <line:91:14> col:14 implicit memchr 'void *(const void *, int, unsigned long)' extern
| |-ParmVarDecl 0xf2cf90 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0xf2cff8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0xf2d060 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xf2d0e0 prev 0xf2cef0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:91:14 memchr 'void *(const void *, int, unsigned long)' extern
| |-ParmVarDecl 0xf2cca0 <col:22, col:34> col:34 __s 'const void *'
| |-ParmVarDecl 0xf2cd20 <col:39, col:43> col:43 __c 'int'
| |-ParmVarDecl 0xf2cd98 <col:48, col:55> col:55 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf2d198 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf2d1f0 <line:226:45>
| `-NonNullAttr 0xf2d218 <line:293:44, /usr/include/string.h:92:47> 1
|-FunctionDecl 0xf2d450 <line:122:14> col:14 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0xf2d4f0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0xf2d558 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xf2d5d0 prev 0xf2d450 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:122:14 strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0xf2d270 <col:22, col:39> col:39 __dest 'char *restrict'
| |-ParmVarDecl 0xf2d2f0 <col:47, col:70> col:70 __src 'const char *restrict'
| |-NoThrowAttr 0xf2d680 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf2d6d8 <line:293:44, /usr/include/string.h:123:30> 1 2
|-FunctionDecl 0xf2d990 <line:125:14> col:14 implicit strncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xf2da30 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0xf2da98 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf2db00 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xf2db80 prev 0xf2d990 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:125:14 strncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xf2d730 <col:23, col:40> col:40 __dest 'char *restrict'
| |-ParmVarDecl 0xf2d7b0 <line:126:9, col:32> col:32 __src 'const char *restrict'
| |-ParmVarDecl 0xf2d828 <col:39, col:46> col:46 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf2dc38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf2dc90 <line:293:44, /usr/include/string.h:127:30> 1 2
|-FunctionDecl 0xf2de58 <line:130:14> col:14 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0xf2def8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0xf2df60 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xf2dfd8 prev 0xf2de58 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:130:14 strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0xf2dce0 <col:22, col:39> col:39 __dest 'char *restrict'
| |-ParmVarDecl 0xf2dd60 <col:47, col:70> col:70 __src 'const char *restrict'
| |-NoThrowAttr 0xf2e088 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf2e0e0 <line:293:44, /usr/include/string.h:131:30> 1 2
|-FunctionDecl 0xf2e310 <line:133:14> col:14 implicit strncat 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xf2e3b0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0xf2e418 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf2e480 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xf2e500 prev 0xf2e310 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:133:14 strncat 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xf2e130 <col:23, col:40> col:40 __dest 'char *restrict'
| |-ParmVarDecl 0xf2e1b0 <col:48, col:71> col:71 __src 'const char *restrict'
| |-ParmVarDecl 0xf2e228 <line:134:9, col:16> col:16 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf2e5b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf2e610 <line:293:44, /usr/include/string.h:134:45> 1 2
|-FunctionDecl 0xf2e800 <line:137:12> col:12 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0xf2e8a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf2e908 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xf2e980 prev 0xf2e800 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:137:12 strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0xf2e660 <col:20, col:32> col:32 __s1 'const char *'
| |-ParmVarDecl 0xf2e6e0 <col:38, col:50> col:50 __s2 'const char *'
| |-NoThrowAttr 0xf2ea30 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf2ea88 <line:226:45>
| `-NonNullAttr 0xf2eab0 <line:293:44, /usr/include/string.h:138:49> 1 2
|-FunctionDecl 0xf2ed60 <line:140:12> col:12 implicit strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xf22b30 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0xf22b98 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf22c00 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xf22c80 prev 0xf2ed60 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:140:12 strncmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xf2eb00 <col:21, col:33> col:33 __s1 'const char *'
| |-ParmVarDecl 0xf2eb80 <col:39, col:51> col:51 __s2 'const char *'
| |-ParmVarDecl 0xf2ebf8 <col:57, col:64> col:64 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf22d38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf22d90 <line:226:45>
| `-NonNullAttr 0xf22db8 <line:293:44, /usr/include/string.h:141:49> 1 2
|-FunctionDecl 0xf22f70 <line:144:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:144:12 strcoll 'int (const char *, const char *)' extern
| |-ParmVarDecl 0xf22e10 <col:21, col:33> col:33 __s1 'const char *'
| |-ParmVarDecl 0xf22e90 <col:39, col:51> col:51 __s2 'const char *'
| |-NoThrowAttr 0xf23020 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf23078 <line:226:45>
| `-NonNullAttr 0xf230a0 <line:293:44, /usr/include/string.h:145:49> 1 2
|-FunctionDecl 0xf23378 <line:147:15> col:15 implicit strxfrm 'unsigned long (char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xf23418 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0xf23480 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf234e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xf23568 prev 0xf23378 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:147:15 strxfrm 'unsigned long (char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xf23138 <col:24, col:41> col:41 __dest 'char *restrict'
| |-ParmVarDecl 0xf231b8 <line:148:10, col:33> col:33 __src 'const char *restrict'
| |-ParmVarDecl 0xf23230 <col:40, col:47> col:47 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf23620 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf23678 <line:293:44, /usr/include/string.h:149:27> 2
|-RecordDecl 0xf236b8 </usr/include/x86_64-linux-gnu/bits/types/__locale_t.h:28:1, line:40:1> line:28:8 struct __locale_struct definition
| |-RecordDecl 0xf23760 parent 0xeb19c8 <line:31:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0xf23990 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0xf23a20 <line:34:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0xf23a88 <line:35:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0xf34530 <line:36:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0xf34620 <line:39:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0xf34720 <line:42:1, col:33> col:33 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0xf346d0 'struct __locale_struct *'
|   `-ElaboratedType 0xf34670 'struct __locale_struct' sugar
|     `-RecordType 0xf23740 'struct __locale_struct'
|       `-Record 0xf236b8 '__locale_struct'
|-TypedefDecl 0xf347b0 </usr/include/x86_64-linux-gnu/bits/types/locale_t.h:24:1, col:20> col:20 referenced locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0xf34780 '__locale_t' sugar
|   |-Typedef 0xf34720 '__locale_t'
|   `-PointerType 0xf346d0 'struct __locale_struct *'
|     `-ElaboratedType 0xf34670 'struct __locale_struct' sugar
|       `-RecordType 0xf23740 'struct __locale_struct'
|         `-Record 0xf236b8 '__locale_struct'
|-FunctionDecl 0xf34ad0 </usr/include/string.h:156:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:156:12 strcoll_l 'int (const char *, const char *, locale_t)' extern
| |-ParmVarDecl 0xf34820 <col:23, col:35> col:35 __s1 'const char *'
| |-ParmVarDecl 0xf348a0 <col:41, col:53> col:53 __s2 'const char *'
| |-ParmVarDecl 0xf34940 <col:59, col:68> col:68 __l 'locale_t':'struct __locale_struct *'
| |-NoThrowAttr 0xf34b88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf34be0 <line:226:45>
| `-NonNullAttr 0xf34c08 <line:293:44, /usr/include/string.h:157:52> 1 2 3
|-FunctionDecl 0xf34f58 <line:160:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:160:15 strxfrm_l 'size_t (char *, const char *, size_t, locale_t)' extern
| |-ParmVarDecl 0xf34c68 <col:26, col:32> col:32 __dest 'char *'
| |-ParmVarDecl 0xf34ce8 <col:40, col:52> col:52 __src 'const char *'
| |-ParmVarDecl 0xf34d60 <col:59, col:66> col:66 __n 'size_t':'unsigned long'
| |-ParmVarDecl 0xf34dd8 <line:161:5, col:14> col:14 __l 'locale_t':'struct __locale_struct *'
| |-NoThrowAttr 0xf35018 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf35070 <line:293:44, /usr/include/string.h:161:43> 2 4
|-FunctionDecl 0xf351b0 <line:167:14> col:14 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0xf35250 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xf352c0 prev 0xf351b0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:167:14 strdup 'char *(const char *)' extern
| |-ParmVarDecl 0xf350c0 <col:22, col:34> col:34 __s 'const char *'
| |-NoThrowAttr 0xf35368 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-RestrictAttr 0xf353c0 <line:208:47> malloc
| `-NonNullAttr 0xf353e8 <line:293:44, /usr/include/string.h:168:48> 1
|-FunctionDecl 0xf35610 <line:175:14> col:14 implicit strndup 'char *(const char *, unsigned long)' extern
| |-ParmVarDecl 0xf356b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf35718 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xf35790 prev 0xf35610 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:175:14 strndup 'char *(const char *, unsigned long)' extern
| |-ParmVarDecl 0xf35440 <col:23, col:35> col:35 __string 'const char *'
| |-ParmVarDecl 0xf354b8 <col:45, col:52> col:52 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf35840 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-RestrictAttr 0xf35898 <line:208:47> malloc
| `-NonNullAttr 0xf358c0 <line:293:44, /usr/include/string.h:176:48> 1
|-FunctionDecl 0xf35a90 <line:226:14> col:14 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0xf35b30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf35b98 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0xf35c10 prev 0xf35a90 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:226:14 strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0xf35910 <col:22, col:34> col:34 __s 'const char *'
| |-ParmVarDecl 0xf35990 <col:39, col:43> col:43 __c 'int'
| |-NoThrowAttr 0xf35cc0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf35d18 <line:226:45>
| `-NonNullAttr 0xf35d40 <line:293:44, /usr/include/string.h:227:46> 1
|-FunctionDecl 0xf35ed0 <line:253:14> col:14 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0xf35f70 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf35fd8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0xf36050 prev 0xf35ed0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:253:14 strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0xf35d90 <col:23, col:35> col:35 __s 'const char *'
| |-ParmVarDecl 0xf35e10 <col:40, col:44> col:44 __c 'int'
| |-NoThrowAttr 0xf36100 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf36158 <line:226:45>
| `-NonNullAttr 0xf36180 <line:293:44, /usr/include/string.h:254:46> 1
|-FunctionDecl 0xf363a8 <line:273:15> col:15 implicit strcspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0xf36448 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf364b0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xf36550 prev 0xf363a8 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:273:15 strcspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0xf361d0 <col:24, col:36> col:36 __s 'const char *'
| |-ParmVarDecl 0xf36250 <col:41, col:53> col:53 __reject 'const char *'
| |-NoThrowAttr 0xf36600 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf36658 <line:226:45>
| `-NonNullAttr 0xf36680 <line:293:44, /usr/include/string.h:274:49> 1 2
|-FunctionDecl 0xf36828 <line:277:15> col:15 implicit strspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0xf368c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf36930 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xf369a8 prev 0xf36828 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:277:15 strspn 'unsigned long (const char *, const char *)' extern
| |-ParmVarDecl 0xf366d0 <col:23, col:35> col:35 __s 'const char *'
| |-ParmVarDecl 0xf36750 <col:40, col:52> col:52 __accept 'const char *'
| |-NoThrowAttr 0xf36a58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf36ab0 <line:226:45>
| `-NonNullAttr 0xf36ad8 <line:293:44, /usr/include/string.h:278:49> 1 2
|-FunctionDecl 0xf36cd0 <line:303:14> col:14 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0xf36d70 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf36dd8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xf36e50 prev 0xf36cd0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:303:14 strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0xf36b30 <col:23, col:35> col:35 __s 'const char *'
| |-ParmVarDecl 0xf36bb0 <col:40, col:52> col:52 __accept 'const char *'
| |-NoThrowAttr 0xf36f00 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf36f58 <line:226:45>
| `-NonNullAttr 0xf36f80 <line:293:44, /usr/include/string.h:304:49> 1 2
|-FunctionDecl 0xf37130 <line:330:14> col:14 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0xf371d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf37238 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xf372b0 prev 0xf37130 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:330:14 strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0xf36fd0 <col:22, col:34> col:34 __haystack 'const char *'
| |-ParmVarDecl 0xf37050 <col:46, col:58> col:58 __needle 'const char *'
| |-NoThrowAttr 0xf37360 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf373b8 <line:226:45>
| `-NonNullAttr 0xf373e0 <line:293:44, /usr/include/string.h:331:49> 1 2
|-FunctionDecl 0xf37598 <line:336:14> col:14 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0xf37638 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0xf376a0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xf37718 prev 0xf37598 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:336:14 strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0xf37430 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0xf374b0 <col:44, col:67> col:67 __delim 'const char *restrict'
| |-NoThrowAttr 0xf377c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf37820 <line:293:44, /usr/include/string.h:337:27> 2
|-FunctionDecl 0xf37b10 <line:341:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:341:14 __strtok_r 'char *(char *restrict, const char *restrict, char **restrict)' extern
| |-ParmVarDecl 0xf37870 <col:26, col:43> col:43 __s 'char *restrict'
| |-ParmVarDecl 0xf378f0 <line:342:5, col:28> col:28 __delim 'const char *restrict'
| |-ParmVarDecl 0xf379a0 <line:343:5, col:23> col:23 __save_ptr 'char **restrict'
| |-NoThrowAttr 0xf37bc8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf37c20 <line:293:44, /usr/include/string.h:344:30> 2 3
|-FunctionDecl 0xf37e58 <line:346:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:346:14 strtok_r 'char *(char *restrict, const char *restrict, char **restrict)' extern
| |-ParmVarDecl 0xf37c70 <col:24, col:41> col:41 __s 'char *restrict'
| |-ParmVarDecl 0xf37cf0 <col:46, col:69> col:69 __delim 'const char *restrict'
| |-ParmVarDecl 0xf37d70 <line:347:10, col:28> col:28 __save_ptr 'char **restrict'
| |-NoThrowAttr 0xf37f10 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf37f68 <line:293:44, /usr/include/string.h:348:30> 2 3
|-FunctionDecl 0xf380d8 <line:385:15> col:15 implicit strlen 'unsigned long (const char *)' extern
| `-ParmVarDecl 0xf38178 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xf381e8 prev 0xf380d8 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:385:15 strlen 'unsigned long (const char *)' extern
| |-ParmVarDecl 0xf37fc0 <col:23, col:35> col:35 __s 'const char *'
| |-NoThrowAttr 0xf38290 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf382e8 <line:226:45>
| `-NonNullAttr 0xf38310 <line:293:44, /usr/include/string.h:386:46> 1
|-FunctionDecl 0xf38570 <line:391:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:391:15 strnlen 'size_t (const char *, size_t)' extern
| |-ParmVarDecl 0xf38360 <col:24, col:36> col:36 __string 'const char *'
| |-ParmVarDecl 0xf383d8 <col:46, col:53> col:53 __maxlen 'size_t':'unsigned long'
| |-NoThrowAttr 0xf38620 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf38678 <line:226:45>
| `-NonNullAttr 0xf386a0 <line:293:44, /usr/include/string.h:392:46> 1
|-FunctionDecl 0xf387c0 <line:397:14> col:14 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0xf38860 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0xf388d0 prev 0xf387c0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/string.h:397:14 strerror 'char *(int)' extern
| |-ParmVarDecl 0xf386f0 <col:24, col:28> col:28 __errnum 'int'
| `-NoThrowAttr 0xf38978 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf38ca0 </usr/include/string.h:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:410:28 strerror_r 'int (int, char *, size_t)' extern
| |-ParmVarDecl 0xf389e8 <line:411:8, col:12> col:12 __errnum 'int'
| |-ParmVarDecl 0xf38a68 <col:22, col:28> col:28 __buf 'char *'
| |-ParmVarDecl 0xf38ae0 <col:35, col:42> col:42 __buflen 'size_t':'unsigned long'
| |-AsmLabelAttr 0xf38d40 <<scratch space>:16:1> "__xpg_strerror_r" IsLiteralLabel
| |-NoThrowAttr 0xf38dd0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf38df8 <line:293:44, /usr/include/string.h:412:38> 2
|-FunctionDecl 0xf38fe0 <line:428:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/string.h:428:14 strerror_l 'char *(int, locale_t)' extern
| |-ParmVarDecl 0xf38e50 <col:26, col:30> col:30 __errnum 'int'
| |-ParmVarDecl 0xf38ec8 <col:40, col:49> col:49 __l 'locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0xf39090 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf392e0 </usr/include/strings.h:34:12> col:12 implicit bcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0xf39380 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0xf393e8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0xf39450 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xf394d0 prev 0xf392e0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:34:12 bcmp 'int (const void *, const void *, unsigned long)' extern
| |-ParmVarDecl 0xf39100 <col:18, col:30> col:30 __s1 'const void *'
| |-ParmVarDecl 0xf39180 <col:36, col:48> col:48 __s2 'const void *'
| |-ParmVarDecl 0xf391f8 <col:54, col:61> col:61 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf3c4c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf3c520 <line:226:45>
| `-NonNullAttr 0xf3c548 <line:293:44, /usr/include/strings.h:35:49> 1 2
|-FunctionDecl 0xf3c7f8 <line:38:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:38:13 bcopy 'void (const void *, void *, size_t)' extern
| |-ParmVarDecl 0xf3c5a0 <col:20, col:32> col:32 __src 'const void *'
| |-ParmVarDecl 0xf3c620 <col:39, col:45> col:45 __dest 'void *'
| |-ParmVarDecl 0xf3c698 <col:53, col:60> col:60 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf3c8b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf3c908 <line:293:44, /usr/include/strings.h:39:27> 1 2
|-FunctionDecl 0xf3cb08 <line:42:13> col:13 implicit bzero 'void (void *, unsigned long)' extern
| |-ParmVarDecl 0xf3cba8 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0xf3cc10 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xf3cc88 prev 0xf3cb08 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:42:13 bzero 'void (void *, unsigned long)' extern
| |-ParmVarDecl 0xf3c960 <col:20, col:26> col:26 __s 'void *'
| |-ParmVarDecl 0xf3c9d8 <col:31, col:38> col:38 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf3cd38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf3cd90 <line:293:44, /usr/include/strings.h:42:64> 1
|-FunctionDecl 0xf3cf20 <line:68:14> col:14 implicit index 'char *(const char *, int)' extern
| |-ParmVarDecl 0xf3cfc0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf3d028 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0xf3d0a0 prev 0xf3cf20 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:68:14 index 'char *(const char *, int)' extern
| |-ParmVarDecl 0xf3cde0 <col:21, col:33> col:33 __s 'const char *'
| |-ParmVarDecl 0xf3ce60 <col:38, col:42> col:42 __c 'int'
| |-NoThrowAttr 0xf3d150 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf3d1a8 <line:226:45>
| `-NonNullAttr 0xf3d1d0 <line:293:44, /usr/include/strings.h:69:46> 1
|-FunctionDecl 0xf3d360 <line:96:14> col:14 implicit rindex 'char *(const char *, int)' extern
| |-ParmVarDecl 0xf3d400 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf3d4c0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0xf3d538 prev 0xf3d360 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:96:14 rindex 'char *(const char *, int)' extern
| |-ParmVarDecl 0xf3d220 <col:22, col:34> col:34 __s 'const char *'
| |-ParmVarDecl 0xf3d2a0 <col:39, col:43> col:43 __c 'int'
| |-NoThrowAttr 0xf3d5e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf3d640 <line:226:45>
| `-NonNullAttr 0xf3d668 <line:293:44, /usr/include/strings.h:97:46> 1
|-FunctionDecl 0xf3d790 <line:104:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:233:56> /usr/include/strings.h:104:12 ffs 'int (int)' extern
| |-ParmVarDecl 0xf3d6c0 <col:17, col:21> col:21 __i 'int'
| |-NoThrowAttr 0xf3d838 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0xf3d890 <line:233:46>
|-FunctionDecl 0xf3d9a0 </usr/include/strings.h:110:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:233:56> /usr/include/strings.h:110:12 ffsl 'int (long)' extern
| |-ParmVarDecl 0xf3d8d0 <col:18, col:27> col:27 __l 'long'
| |-NoThrowAttr 0xf3da48 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0xf3daa0 <line:233:46>
|-FunctionDecl 0xf3dbb0 </usr/include/strings.h:111:15, /usr/include/x86_64-linux-gnu/sys/cdefs.h:233:56> /usr/include/strings.h:111:26 ffsll 'int (long long)' extern
| |-ParmVarDecl 0xf3dae0 <col:33, col:47> col:47 __ll 'long long'
| |-NoThrowAttr 0xf3dc58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-ConstAttr 0xf3dcb0 <line:233:46>
|-FunctionDecl 0xf3de50 </usr/include/strings.h:116:12> col:12 implicit strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0xf3def0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf3df58 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xf3dfd0 prev 0xf3de50 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:116:12 strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0xf3dcf0 <col:24, col:36> col:36 __s1 'const char *'
| |-ParmVarDecl 0xf3dd70 <col:42, col:54> col:54 __s2 'const char *'
| |-NoThrowAttr 0xf3e080 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf3e0d8 <line:226:45>
| `-NonNullAttr 0xf3e100 <line:293:44, /usr/include/strings.h:117:49> 1 2
|-FunctionDecl 0xf3e330 <line:120:12> col:12 implicit strncasecmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xf3e3d0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0xf3e438 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf3e4d0 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xf3e550 prev 0xf3e330 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:120:12 strncasecmp 'int (const char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xf3e150 <col:25, col:37> col:37 __s1 'const char *'
| |-ParmVarDecl 0xf3e1d0 <col:43, col:55> col:55 __s2 'const char *'
| |-ParmVarDecl 0xf3e248 <col:61, col:68> col:68 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf3e608 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf3e660 <line:226:45>
| `-NonNullAttr 0xf3e688 <line:293:44, /usr/include/strings.h:121:49> 1 2
|-FunctionDecl 0xf3e8e0 <line:128:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:128:12 strcasecmp_l 'int (const char *, const char *, locale_t)' extern
| |-ParmVarDecl 0xf3e6e0 <col:26, col:38> col:38 __s1 'const char *'
| |-ParmVarDecl 0xf3e760 <col:44, col:56> col:56 __s2 'const char *'
| |-ParmVarDecl 0xf3e7d8 <col:62, col:71> col:71 __loc 'locale_t':'struct __locale_struct *'
| |-NoThrowAttr 0xf3e998 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf3e9f0 <line:226:45>
| `-NonNullAttr 0xf3ea18 <line:293:44, /usr/include/strings.h:129:52> 1 2 3
|-FunctionDecl 0xf3ed90 <line:133:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/strings.h:133:12 strncasecmp_l 'int (const char *, const char *, size_t, locale_t)' extern
| |-ParmVarDecl 0xf3ea78 <col:27, col:39> col:39 __s1 'const char *'
| |-ParmVarDecl 0xf3eaf8 <col:45, col:57> col:57 __s2 'const char *'
| |-ParmVarDecl 0xf3eb70 <line:134:6, col:13> col:13 __n 'size_t':'unsigned long'
| |-ParmVarDecl 0xf3ebe8 <col:18, col:27> col:27 __loc 'locale_t':'struct __locale_struct *'
| |-NoThrowAttr 0xf3ee50 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| |-PureAttr 0xf3eea8 <line:226:45>
| `-NonNullAttr 0xf3eed0 <line:293:44, /usr/include/strings.h:135:52> 1 2 4
|-FunctionDecl 0xf3f058 </usr/include/string.h:436:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:436:13 explicit_bzero 'void (void *, size_t)' extern
| |-ParmVarDecl 0xf3ef28 <col:29, col:35> col:35 __s 'void *'
| |-ParmVarDecl 0xf3efa0 <col:40, col:47> col:47 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf3f108 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf3f160 <line:293:44, /usr/include/string.h:436:73> 1
|-FunctionDecl 0xf3f390 <line:440:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:440:14 strsep 'char *(char **restrict, const char *restrict)' extern
| |-ParmVarDecl 0xf3f1b0 <col:22, col:40> col:40 __stringp 'char **restrict'
| |-ParmVarDecl 0xf3f230 <line:441:8, col:31> col:31 __delim 'const char *restrict'
| |-NoThrowAttr 0xf3f440 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf3f498 <line:293:44, /usr/include/string.h:442:30> 1 2
|-FunctionDecl 0xf3fda8 <line:447:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/string.h:447:14 strsignal 'char *(int)' extern
| |-ParmVarDecl 0xf3fd10 <col:25, col:29> col:29 __sig 'int'
| `-NoThrowAttr 0xf3fe50 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0xf40020 </usr/include/string.h:450:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:450:14 __stpcpy 'char *(char *restrict, const char *restrict)' extern
| |-ParmVarDecl 0xf3fec0 <col:24, col:41> col:41 __dest 'char *restrict'
| |-ParmVarDecl 0xf3ff40 <col:49, col:72> col:72 __src 'const char *restrict'
| |-NoThrowAttr 0xf400d0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf40128 <line:293:44, /usr/include/string.h:451:30> 1 2
|-FunctionDecl 0xf402e0 <line:452:14> col:14 implicit stpcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0xf40380 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0xf403e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0xf40460 prev 0xf402e0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:452:14 stpcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0xf40180 <col:22, col:39> col:39 __dest 'char *restrict'
| |-ParmVarDecl 0xf40200 <col:47, col:70> col:70 __src 'const char *restrict'
| |-NoThrowAttr 0xf40510 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf40568 <line:293:44, /usr/include/string.h:453:30> 1 2
|-FunctionDecl 0xf407a0 <line:457:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:457:14 __stpncpy 'char *(char *restrict, const char *restrict, size_t)' extern
| |-ParmVarDecl 0xf405c0 <col:25, col:42> col:42 __dest 'char *restrict'
| |-ParmVarDecl 0xf40640 <line:458:4, col:27> col:27 __src 'const char *restrict'
| |-ParmVarDecl 0xf406b8 <col:34, col:41> col:41 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf40858 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf408b0 <line:293:44, /usr/include/string.h:459:30> 1 2
|-FunctionDecl 0xf40ae0 <line:460:14> col:14 implicit stpncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xf40b80 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0xf40be8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0xf40c50 <<invalid sloc>> <invalid sloc> 'unsigned long'
|-FunctionDecl 0xf40d00 prev 0xf40ae0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:293:63> /usr/include/string.h:460:14 stpncpy 'char *(char *, const char *, unsigned long)' extern
| |-ParmVarDecl 0xf40900 <col:23, col:40> col:40 __dest 'char *restrict'
| |-ParmVarDecl 0xf40980 <line:461:9, col:32> col:32 __src 'const char *restrict'
| |-ParmVarDecl 0xf409f8 <col:39, col:46> col:46 __n 'size_t':'unsigned long'
| |-NoThrowAttr 0xf40db8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-NonNullAttr 0xf40e10 <line:293:44, /usr/include/string.h:462:30> 1 2
|-FunctionDecl 0xf41310 <main/fs/littlefs_hal.c:45:1, line:51:1> line:45:12 invalid LittlefsRead 'int (const struct lfs_config *, int, int, void *, int)' static
| |-ParmVarDecl 0xf40fb0 <col:25, col:50> col:50 used cfg 'const struct lfs_config *'
| |-ParmVarDecl 0xf41030 <col:55, col:67> col:67 invalid block 'int'
| |-ParmVarDecl 0xf410b0 <line:46:25, col:35> col:35 invalid off 'int'
| |-ParmVarDecl 0xf41130 <col:40, col:46> col:46 used buffer 'void *'
| |-ParmVarDecl 0xf411b0 <col:54, col:65> col:65 invalid size 'int'
| `-CompoundStmt 0xf41540 <line:47:1, line:51:1>
|-FunctionDecl 0xf41a10 <line:53:1, line:59:1> line:53:12 invalid LittlefsProg 'int (const struct lfs_config *, int, int, const void *, int)' static
| |-ParmVarDecl 0xf416b0 <col:25, col:50> col:50 used cfg 'const struct lfs_config *'
| |-ParmVarDecl 0xf41730 <col:55, col:67> col:67 invalid block 'int'
| |-ParmVarDecl 0xf417b0 <line:54:25, col:35> col:35 invalid off 'int'
| |-ParmVarDecl 0xf41830 <col:40, col:52> col:52 used buffer 'const void *'
| |-ParmVarDecl 0xf418b0 <col:60, col:71> col:71 invalid size 'int'
| `-CompoundStmt 0xf41c10 <line:55:1, line:59:1>
|-FunctionDecl 0xf45430 <line:61:1, line:66:1> line:61:12 invalid LittlefsErase 'int (const struct lfs_config *, int)' static
| |-ParmVarDecl 0xf45290 <col:26, col:51> col:51 used cfg 'const struct lfs_config *'
| |-ParmVarDecl 0xf45310 <col:56, col:68> col:68 invalid block 'int'
| `-CompoundStmt 0xf455f8 <line:62:1, line:66:1>
|-FunctionDecl 0xf45870 <line:68:1, line:71:1> line:68:12 used LittlefsSync 'int (const struct lfs_config *)' static
| |-ParmVarDecl 0xf45770 <col:25, col:50> col:50 cfg 'const struct lfs_config *'
| `-CompoundStmt 0xf45918 <line:69:1, line:71:1>
|-RecordDecl 0xf45928 <line:73:8, col:15> col:15 struct lfs_config
|-VarDecl 0xf45a28 <col:1, col:26> col:26 invalid g_lfsConfig 'struct lfs_config':'struct lfs_config' static
|-FunctionDecl 0xf47230 <line:94:1, line:100:1> line:94:6 LittlefsDriverInit 'void (int)'
| |-ParmVarDecl 0xf460c0 <col:25, col:29> col:29 needErase 'int'
| `-CompoundStmt 0xf474e8 <line:95:1, line:100:1>
`-FunctionDecl 0xf47690 <line:102:1, line:105:1> line:102:20 LittlefsConfigGet 'struct lfs_config *(void)'
  `-CompoundStmt 0xf47730 <line:103:1, line:105:1>

TranslationUnitDecl 0x201ed48 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x201f5e0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x201f2e0 '__int128'
|-TypedefDecl 0x201f650 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x201f300 'unsigned __int128'
|-TypedefDecl 0x201f958 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x201f730 'struct __NSConstantString_tag'
|   `-Record 0x201f6a8 '__NSConstantString_tag'
|-TypedefDecl 0x201f9f0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x201f9b0 'char *'
|   `-BuiltinType 0x201ede0 'char'
|-TypedefDecl 0x201fce8 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x201fc90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x201fad0 'struct __va_list_tag'
|     `-Record 0x201fa48 '__va_list_tag'
|-FunctionDecl 0x207fe08 <main/fs/fs_init.h:41:1, col:25> col:6 FileSystemInit 'void (void)'
|-VarDecl 0x207ff08 <main/fs/fs_init.c:42:1, col:17> col:17 invalid g_taskId 'int' static
|-FunctionDecl 0x2080008 <line:44:1, line:62:1> line:44:13 FileSystemEntry 'void (void)' static
| `-CompoundStmt 0x2082938 <line:45:1, line:62:1>
|   |-DeclStmt 0x2080148 <line:46:5, col:16>
|   | `-VarDecl 0x20800c0 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x2080128 <col:15> 'int' 0
|   |-DeclStmt 0x20804e0 <line:47:5, col:60>
|   | |-RecordDecl 0x2080160 <col:5, col:12> col:12 struct lfs_config
|   | `-VarDecl 0x20802c0 <col:5, col:59> col:24 used littlefsConfig 'struct lfs_config *' cinit
|   |   `-ImplicitCastExpr 0x20804b0 <col:41, col:59> 'struct lfs_config *' <IntegralToPointer>
|   |     `-CallExpr 0x2080490 <col:41, col:59> 'int'
|   |       `-ImplicitCastExpr 0x2080478 <col:41> 'int (*)()' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x2080430 <col:41> 'int ()' Function 0x2080380 'LittlefsConfigGet' 'int ()'
|   |-CallExpr 0x2080628 <line:48:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x2080610 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x20805d0 <col:5> 'int ()' Function 0x2080520 'LittlefsDriverInit' 'int ()'
|   | `-IntegerLiteral 0x20805f0 <col:24> 'int' 0
|   |-CallExpr 0x20807e8 <line:49:5, col:39> 'int'
|   | |-ImplicitCastExpr 0x20807d0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2080728 <col:5> 'int ()' Function 0x2080678 'SetDefaultMountPath' 'int ()'
|   | |-IntegerLiteral 0x2080748 <col:25> 'int' 0
|   | `-ImplicitCastExpr 0x2080818 <col:28> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x20807a8 <col:28> 'char [10]' lvalue "/littlefs"
|   |-IfStmt 0x2082458 <line:51:5, line:54:5>
|   | |-OpaqueValueExpr 0x2082440 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2082420 <line:51:24, line:54:5>
|   |   |-CallExpr 0x2080cf0 <line:52:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x2080cd8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2080be0 <col:9> 'int (const char *, ...)' Function 0x2080a68 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x20823e0 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2080d20 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x2080c38 <col:16> 'char [28]' lvalue "Littlefs init failed 0x%x.\n"
|   |   | `-ImplicitCastExpr 0x20823f8 <col:48> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2080c70 <col:48> 'int' lvalue Var 0x20800c0 'ret' 'int'
|   |   `-ReturnStmt 0x2082410 <line:53:9>
|   |-BinaryOperator 0x2082630 <line:56:5, col:51> 'int' '='
|   | |-DeclRefExpr 0x2082470 <col:5> 'int' lvalue Var 0x20800c0 'ret' 'int'
|   | `-CallExpr 0x20825e8 <col:11, col:51> 'int'
|   |   |-ImplicitCastExpr 0x20825d0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2082568 <col:11> 'int ()' Function 0x20824b8 'mkdir' 'int ()'
|   |   |-ImplicitCastExpr 0x2082618 <col:17> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x2082588 <col:17> 'char [10]' lvalue "/littlefs"
|   |   `-IntegerLiteral 0x20825b0 <line:40:33> 'int' 775
|   |-IfStmt 0x2082808 <line:57:5, line:60:5>
|   | |-OpaqueValueExpr 0x20827f0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x20827d0 <line:57:24, line:60:5>
|   |   |-CallExpr 0x2082748 <line:58:9, col:43> 'int'
|   |   | |-ImplicitCastExpr 0x2082730 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2082670 <col:9> 'int (const char *, ...)' Function 0x2080a68 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x2082790 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2082778 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x20826c8 <col:16> 'char [20]' lvalue "Mkdir failed 0x%x.\n"
|   |   | `-ImplicitCastExpr 0x20827a8 <col:40> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20826f8 <col:40> 'int' lvalue Var 0x20800c0 'ret' 'int'
|   |   `-ReturnStmt 0x20827c0 <line:59:9>
|   `-CallExpr 0x20828e0 <line:61:5, col:40> 'int'
|     |-ImplicitCastExpr 0x20828c8 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x2082820 <col:5> 'int (const char *, ...)' Function 0x2080a68 'printf' 'int (const char *, ...)'
|     `-ImplicitCastExpr 0x2082920 <col:12> 'const char *' <NoOp>
|       `-ImplicitCastExpr 0x2082908 <col:12> 'char *' <ArrayToPointerDecay>
|         `-StringLiteral 0x2082878 <col:12> 'char [26]' lvalue "Littlefs init successed!\n"
|-FunctionDecl 0x2080a68 <line:52:9> col:9 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x2080b08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2080b78 <col:9> Implicit printf 1 2
`-FunctionDecl 0x2082a20 prev 0x207fe08 <line:64:1, line:82:1> line:64:6 FileSystemInit 'void (void)'
  `-CompoundStmt 0x2083078 <line:65:1, line:82:1>
    |-DeclStmt 0x2082b60 <line:66:5, col:16>
    | `-VarDecl 0x2082ad8 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x2082b40 <col:15> 'int' 0
    |-IfStmt 0x2082d10 <line:70:5, line:72:5>
    | |-OpaqueValueExpr 0x2082cf8 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x2082ce0 <line:70:21, line:72:5>
    |   `-ReturnStmt 0x2082cd0 <line:71:9>
    `-IfStmt 0x2083060 <line:79:5, line:81:5>
      |-OpaqueValueExpr 0x2083048 <<invalid sloc>> '_Bool'
      `-CompoundStmt 0x2083030 <line:79:24, line:81:5>
        `-CallExpr 0x2082fd8 <line:80:9, col:55> 'int'
          |-ImplicitCastExpr 0x2082fc0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x2082f08 <col:9> 'int (const char *, ...)' Function 0x2080a68 'printf' 'int (const char *, ...)'
          `-ImplicitCastExpr 0x2083018 <col:16> 'const char *' <NoOp>
            `-ImplicitCastExpr 0x2083000 <col:16> 'char *' <ArrayToPointerDecay>
              `-StringLiteral 0x2082f68 <col:16> 'char [37]' lvalue "Create filesystem init task failed.\n"

TranslationUnitDecl 0x10b0d48 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x10b15e0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x10b12e0 '__int128'
|-TypedefDecl 0x10b1650 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x10b1300 'unsigned __int128'
|-TypedefDecl 0x10b1958 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x10b1730 'struct __NSConstantString_tag'
|   `-Record 0x10b16a8 '__NSConstantString_tag'
|-TypedefDecl 0x10b19f0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x10b19b0 'char *'
|   `-BuiltinType 0x10b0de0 'char'
|-TypedefDecl 0x10b1ce8 <<invalid sloc>> <invalid sloc> implicit referenced __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x10b1c90 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x10b1ad0 'struct __va_list_tag'
|     `-Record 0x10b1a48 '__va_list_tag'
|-TypedefDecl 0x11160e0 <main/test/../los_compiler.h:308:1, col:32> col:32 UINT8 'unsigned char'
| `-BuiltinType 0x10b0ea0 'unsigned char'
|-TypedefDecl 0x1116150 <line:309:1, col:32> col:32 UINT16 'unsigned short'
| `-BuiltinType 0x10b0ec0 'unsigned short'
|-TypedefDecl 0x11161c0 <line:310:1, col:32> col:32 referenced UINT32 'unsigned int'
| `-BuiltinType 0x10b0ee0 'unsigned int'
|-TypedefDecl 0x1116230 <line:311:1, col:32> col:32 INT8 'signed char'
| `-BuiltinType 0x10b0e00 'signed char'
|-TypedefDecl 0x11162a0 <line:312:1, col:32> col:32 INT16 'short'
| `-BuiltinType 0x10b0e20 'short'
|-TypedefDecl 0x1116310 <line:313:1, col:32> col:32 referenced INT32 'int'
| `-BuiltinType 0x10b0e40 'int'
|-TypedefDecl 0x1116380 <line:314:1, col:32> col:32 FLOAT 'float'
| `-BuiltinType 0x10b0f40 'float'
|-TypedefDecl 0x11163f0 <line:315:1, col:32> col:32 DOUBLE 'double'
| `-BuiltinType 0x10b0f60 'double'
|-TypedefDecl 0x1116458 <line:316:1, col:32> col:32 CHAR 'char'
| `-BuiltinType 0x10b0de0 'char'
|-TypedefDecl 0x11164c8 <line:318:1, col:32> col:32 referenced BOOL 'unsigned int'
| `-BuiltinType 0x10b0ee0 'unsigned int'
|-TypedefDecl 0x1116538 <line:319:1, col:32> col:32 referenced UINT64 'unsigned long long'
| `-BuiltinType 0x10b0f20 'unsigned long long'
|-TypedefDecl 0x11165a8 <line:320:1, col:32> col:32 referenced INT64 'long long'
| `-BuiltinType 0x10b0e80 'long long'
|-TypedefDecl 0x1116618 <line:321:1, col:32> col:32 referenced UINTPTR 'unsigned int'
| `-BuiltinType 0x10b0ee0 'unsigned int'
|-TypedefDecl 0x1116688 <line:322:1, col:32> col:32 INTPTR 'int'
| `-BuiltinType 0x10b0e40 'int'
|-TypedefDecl 0x1116710 <line:324:1, col:24> col:24 Atomic 'volatile INT32':'volatile int'
| `-QualType 0x11166e4 'volatile INT32' volatile
|   `-TypedefType 0x11166e0 'INT32' sugar
|     |-Typedef 0x1116310 'INT32'
|     `-BuiltinType 0x10b0e40 'int'
|-TypedefDecl 0x11167a0 <line:325:1, col:24> col:24 Atomic64 'volatile INT64':'volatile long long'
| `-QualType 0x1116774 'volatile INT64' volatile
|   `-TypedefType 0x1116770 'INT64' sugar
|     |-Typedef 0x11165a8 'INT64'
|     `-BuiltinType 0x10b0e80 'long long'
|-FunctionDecl 0x1116a48 <line:407:1, line:410:1> line:407:22 LOS_Align 'UINT32 (UINT32, UINT32)' static inline
| |-ParmVarDecl 0x11168c0 <col:32, col:39> col:39 used addr 'UINT32':'unsigned int'
| |-ParmVarDecl 0x1116938 <col:45, col:52> col:52 used boundary 'UINT32':'unsigned int'
| |-CompoundStmt 0x111e390 <line:408:1, line:410:1>
| | `-ReturnStmt 0x111e380 <line:409:5, col:93>
| |   `-BinaryOperator 0x111e360 <col:12, col:93> 'unsigned int' '&'
| |     |-ParenExpr 0x111e278 <col:12, col:75> 'unsigned int'
| |     | `-BinaryOperator 0x111e258 <col:13, col:74> 'unsigned int' '+'
| |     |   |-ImplicitCastExpr 0x111e240 <col:13> 'UINT32':'unsigned int' <LValueToRValue>
| |     |   | `-DeclRefExpr 0x1116b40 <col:13> 'UINT32':'unsigned int' lvalue ParmVar 0x11168c0 'addr' 'UINT32':'unsigned int'
| |     |   `-ParenExpr 0x111e220 <col:20, col:74> 'unsigned int'
| |     |     `-ConditionalOperator 0x1116de8 <col:21, col:73> 'unsigned int'
| |     |       |-ParenExpr 0x1116ce0 <col:21, col:52> 'int'
| |     |       | `-BinaryOperator 0x1116cc0 <col:22, col:48> 'int' '>'
| |     |       |   |-ParenExpr 0x1116c68 <col:22, col:44> 'unsigned int'
| |     |       |   | `-BinaryOperator 0x1116c48 <col:23, col:43> 'unsigned int' '+'
| |     |       |   |   |-ImplicitCastExpr 0x1116c30 <col:23> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |   | `-DeclRefExpr 0x1116b60 <col:23> 'UINT32':'unsigned int' lvalue ParmVar 0x11168c0 'addr' 'UINT32':'unsigned int'
| |     |       |   |   `-ParenExpr 0x1116c10 <col:30, col:43> 'unsigned int'
| |     |       |   |     `-BinaryOperator 0x1116bf0 <col:31, col:42> 'unsigned int' '-'
| |     |       |   |       |-ImplicitCastExpr 0x1116bc0 <col:31> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   |       | `-DeclRefExpr 0x1116b80 <col:31> 'UINT32':'unsigned int' lvalue ParmVar 0x1116938 'boundary' 'UINT32':'unsigned int'
| |     |       |   |       `-ImplicitCastExpr 0x1116bd8 <col:42> 'unsigned int' <IntegralCast>
| |     |       |   |         `-IntegerLiteral 0x1116ba0 <col:42> 'int' 1
| |     |       |   `-ImplicitCastExpr 0x1116ca8 <col:48> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |     `-DeclRefExpr 0x1116c88 <col:48> 'UINT32':'unsigned int' lvalue ParmVar 0x11168c0 'addr' 'UINT32':'unsigned int'
| |     |       |-ParenExpr 0x1116d90 <col:56, col:69> 'unsigned int'
| |     |       | `-BinaryOperator 0x1116d70 <col:57, col:68> 'unsigned int' '-'
| |     |       |   |-ImplicitCastExpr 0x1116d40 <col:57> 'UINT32':'unsigned int' <LValueToRValue>
| |     |       |   | `-DeclRefExpr 0x1116d00 <col:57> 'UINT32':'unsigned int' lvalue ParmVar 0x1116938 'boundary' 'UINT32':'unsigned int'
| |     |       |   `-ImplicitCastExpr 0x1116d58 <col:68> 'unsigned int' <IntegralCast>
| |     |       |     `-IntegerLiteral 0x1116d20 <col:68> 'int' 1
| |     |       `-ImplicitCastExpr 0x1116dd0 <col:73> 'unsigned int' <IntegralCast>
| |     |         `-IntegerLiteral 0x1116db0 <col:73> 'int' 0
| |     `-UnaryOperator 0x111e348 <col:79, col:93> 'unsigned int' prefix '~' cannot overflow
| |       `-ParenExpr 0x111e328 <col:80, col:93> 'unsigned int'
| |         `-BinaryOperator 0x111e308 <col:81, col:92> 'unsigned int' '-'
| |           |-ImplicitCastExpr 0x111e2d8 <col:81> 'UINT32':'unsigned int' <LValueToRValue>
| |           | `-DeclRefExpr 0x111e298 <col:81> 'UINT32':'unsigned int' lvalue ParmVar 0x1116938 'boundary' 'UINT32':'unsigned int'
| |           `-ImplicitCastExpr 0x111e2f0 <col:92> 'unsigned int' <IntegralCast>
| |             `-IntegerLiteral 0x111e2b8 <col:92> 'int' 1
| `-FullComment 0x1170ec0 <line:388:3, line:405:7>
|   |-ParagraphComment 0x116f4b0 <line:388:3>
|   | `-TextComment 0x116f480 <col:3> Text=" "
|   |-VerbatimLineComment 0x116f4d0 <col:4, col:21> Text=" los_base"
|   |-ParagraphComment 0x116f540 <line:389:3>
|   | `-TextComment 0x116f510 <col:3> Text=" "
|   |-BlockCommandComment 0x116f560 <col:4, col:70> Name="brief"
|   | `-ParagraphComment 0x116f5c0 <col:10, col:70>
|   |   `-TextComment 0x116f590 <col:10, col:70> Text=" Align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0x116f610 <line:391:3>
|   | `-TextComment 0x116f5e0 <col:3> Text=" "
|   |-BlockCommandComment 0x116f630 <col:4, line:392:83> Name="par"
|   | `-ParagraphComment 0x116f6b0 <line:391:8, line:392:83>
|   |   |-TextComment 0x116f660 <line:391:8, col:20> Text=" Description:"
|   |   `-TextComment 0x116f680 <line:392:3, col:83> Text=" This API is used to align the value (addr) by some bytes (boundary) you specify."
|   |-ParagraphComment 0x116f700 <line:394:3>
|   | `-TextComment 0x116f6d0 <col:3> Text=" "
|   |-BlockCommandComment 0x116f720 <col:4, line:397:8> Name="attention"
|   | `-ParagraphComment 0x116f8f0 <line:395:3, line:397:8>
|   |   |-TextComment 0x116f750 <line:395:3> Text=" "
|   |   |-HTMLStartTagComment 0x116f770 <col:4, col:7> Name="ul"
|   |   |-TextComment 0x116f7b0 <line:396:3> Text=" "
|   |   |-HTMLStartTagComment 0x116f7d0 <col:4, col:7> Name="li"
|   |   |-TextComment 0x116f810 <col:8, col:50> Text="the value of boundary usually is 4,8,16,32."
|   |   |-HTMLEndTagComment 0x116f830 <col:51, col:55> Name="li"
|   |   |-TextComment 0x116f860 <line:397:3> Text=" "
|   |   `-HTMLEndTagComment 0x116f880 <col:4, col:8> Name="ul"
|   |-ParagraphComment 0x116f940 <line:399:3>
|   | `-TextComment 0x116f910 <col:3> Text=" "
|   |-ParamCommandComment 0x116f960 <col:4, line:400:3> [in] implicitly Param="addr" ParamIndex=0
|   | `-ParagraphComment 0x1170a40 <line:399:15, line:400:3>
|   |   |-TextComment 0x116f9c0 <line:399:15, col:61> Text="     [IN]  The variable what you want to align."
|   |   `-TextComment 0x116f9e0 <line:400:3> Text=" "
|   |-ParamCommandComment 0x1170a60 <col:4, col:63> [in] implicitly Param="boundary" ParamIndex=1
|   | `-ParagraphComment 0x1170af0 <col:19, col:63>
|   |   `-TextComment 0x1170ac0 <col:19, col:63> Text=" [IN]  The align size what you want to align."
|   |-ParagraphComment 0x1170b40 <line:402:3>
|   | `-TextComment 0x1170b10 <col:3> Text=" "
|   |-BlockCommandComment 0x1170b60 <col:4, line:403:3> Name="retval"
|   | `-ParagraphComment 0x1170be0 <line:402:11, line:403:3>
|   |   |-TextComment 0x1170b90 <line:402:11, col:55> Text=" #UINT32 The variable what have been aligned."
|   |   `-TextComment 0x1170bb0 <line:403:3> Text=" "
|   |-BlockCommandComment 0x1170c00 <col:4, line:405:3> Name="par"
|   | `-ParagraphComment 0x1170dd0 <line:403:8, line:405:3>
|   |   |-TextComment 0x1170c30 <line:403:8, col:19> Text=" Dependency:"
|   |   |-TextComment 0x1170c50 <line:404:3> Text=" "
|   |   |-HTMLStartTagComment 0x1170c70 <col:4, col:7> Name="ul"
|   |   |-HTMLStartTagComment 0x1170cb0 <col:8, col:11> Name="li"
|   |   |-TextComment 0x1170cf0 <col:12, col:73> Text="los_base.h: the header file that contains the API declaration."
|   |   |-HTMLEndTagComment 0x1170d10 <col:74, col:78> Name="li"
|   |   |-HTMLEndTagComment 0x1170d40 <col:79, col:83> Name="ul"
|   |   `-TextComment 0x1170d70 <line:405:3> Text=" "
|   `-BlockCommandComment 0x1170df0 <col:4, col:7> Name="see"
|     `-ParagraphComment 0x1170e20 <<invalid sloc>>
|-FunctionDecl 0x111e488 <line:423:1, line:438:1> line:423:20 used maybe_release_fence 'void (int)' static inline
| |-ParmVarDecl 0x111e3c0 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0x111ea40 <line:424:1, line:438:1>
|   `-SwitchStmt 0x111e568 <line:425:5, line:437:5>
|     |-ImplicitCastExpr 0x111e550 <line:425:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x111e530 <col:13> 'int' lvalue ParmVar 0x111e3c0 'model' 'int'
|     `-CompoundStmt 0x111e9f8 <col:20, line:437:5>
|       |-CaseStmt 0x111e5c0 <line:426:9, line:427:52>
|       | |-ConstantExpr 0x111e5a8 <<built-in>:14:26> 'int'
|       | | `-IntegerLiteral 0x111e588 <col:26> 'int' 3
|       | `-CallExpr 0x111e7d0 <main/test/../los_compiler.h:427:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x111e7b8 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x111e750 <col:13> '<builtin fn type>' Function 0x111e5e8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x111e770 <<built-in>:14:26> 'int' 3
|       |-BreakStmt 0x111e7f8 <main/test/../los_compiler.h:428:13>
|       |-CaseStmt 0x111e838 <line:429:9, line:430:52>
|       | |-ConstantExpr 0x111e820 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0x111e800 <col:26> 'int' 4
|       | `-CallExpr 0x111e8b8 <main/test/../los_compiler.h:430:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x111e8a0 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x111e860 <col:13> '<builtin fn type>' Function 0x111e5e8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x111e880 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0x111e8e0 <main/test/../los_compiler.h:431:13>
|       |-CaseStmt 0x111e920 <line:432:9, line:433:52>
|       | |-ConstantExpr 0x111e908 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0x111e8e8 <col:26> 'int' 5
|       | `-CallExpr 0x111e9a0 <main/test/../los_compiler.h:433:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x111e988 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x111e948 <col:13> '<builtin fn type>' Function 0x111e5e8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x111e968 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0x111e9c8 <main/test/../los_compiler.h:434:13>
|       `-DefaultStmt 0x111e9d8 <line:435:9, line:436:13>
|         `-BreakStmt 0x111e9d0 <col:13>
|-FunctionDecl 0x111e5e8 <line:427:13> col:13 implicit used __atomic_thread_fence 'void (int)' extern
| |-ParmVarDecl 0x111e688 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x111e6f8 <col:13> Implicit
|-FunctionDecl 0x111eb00 <line:440:1, line:455:1> line:440:20 used maybe_acquire_fence 'void (int)' static inline
| |-ParmVarDecl 0x111ea70 <col:40, col:44> col:44 used model 'int'
| `-CompoundStmt 0x111ef28 <line:441:1, line:455:1>
|   `-SwitchStmt 0x111ebe0 <line:442:5, line:454:5>
|     |-ImplicitCastExpr 0x111ebc8 <line:442:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x111eba8 <col:13> 'int' lvalue ParmVar 0x111ea70 'model' 'int'
|     `-CompoundStmt 0x111eee0 <col:20, line:454:5>
|       |-CaseStmt 0x111ec38 <line:443:9, line:444:52>
|       | |-ConstantExpr 0x111ec20 <<built-in>:13:26> 'int'
|       | | `-IntegerLiteral 0x111ec00 <col:26> 'int' 2
|       | `-CallExpr 0x111ecb8 <main/test/../los_compiler.h:444:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x111eca0 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x111ec60 <col:13> '<builtin fn type>' Function 0x111e5e8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x111ec80 <<built-in>:13:26> 'int' 2
|       |-BreakStmt 0x111ece0 <main/test/../los_compiler.h:445:13>
|       |-CaseStmt 0x111ed20 <line:446:9, line:447:52>
|       | |-ConstantExpr 0x111ed08 <<built-in>:15:26> 'int'
|       | | `-IntegerLiteral 0x111ece8 <col:26> 'int' 4
|       | `-CallExpr 0x111eda0 <main/test/../los_compiler.h:447:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x111ed88 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x111ed48 <col:13> '<builtin fn type>' Function 0x111e5e8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x111ed68 <<built-in>:15:26> 'int' 4
|       |-BreakStmt 0x111edc8 <main/test/../los_compiler.h:448:13>
|       |-CaseStmt 0x111ee08 <line:449:9, line:450:52>
|       | |-ConstantExpr 0x111edf0 <<built-in>:16:26> 'int'
|       | | `-IntegerLiteral 0x111edd0 <col:26> 'int' 5
|       | `-CallExpr 0x111ee88 <main/test/../los_compiler.h:450:13, col:52> 'void'
|       |   |-ImplicitCastExpr 0x111ee70 <col:13> 'void (*)(int)' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x111ee30 <col:13> '<builtin fn type>' Function 0x111e5e8 '__atomic_thread_fence' 'void (int)'
|       |   `-IntegerLiteral 0x111ee50 <<built-in>:16:26> 'int' 5
|       |-BreakStmt 0x111eeb0 <main/test/../los_compiler.h:451:13>
|       `-DefaultStmt 0x111eec0 <line:452:9, line:453:13>
|         `-BreakStmt 0x111eeb8 <col:13>
|-FunctionDecl 0x111f0c8 <line:458:1, line:472:1> line:458:21 used __libatomic_flag_for_address 'BOOL *(void *)' static inline
| |-ParmVarDecl 0x111ef78 <col:50, col:56> col:56 used addr 'void *'
| `-CompoundStmt 0x1121830 <line:459:1, line:472:1>
|   |-DeclStmt 0x111fd20 <line:460:5, col:99>
|   | `-VarDecl 0x111f7a8 <col:5, col:98> col:17 used flag_table 'BOOL [16]' static cinit
|   |   `-InitListExpr 0x111fae0 <col:51, col:98> 'BOOL [16]'
|   |     |-ImplicitCastExpr 0x111fba0 <col:52> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x111f810 <col:52> 'int' 0
|   |     |-ImplicitCastExpr 0x111fbb8 <col:55> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x111f830 <col:55> 'int' 0
|   |     |-ImplicitCastExpr 0x111fbd0 <col:58> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x111f850 <col:58> 'int' 0
|   |     |-ImplicitCastExpr 0x111fbe8 <col:61> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x111f870 <col:61> 'int' 0
|   |     |-ImplicitCastExpr 0x111fc00 <col:64> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x111f890 <col:64> 'int' 0
|   |     |-ImplicitCastExpr 0x111fc18 <col:67> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x111f8b0 <col:67> 'int' 0
|   |     |-ImplicitCastExpr 0x111fc30 <col:70> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x111f8d0 <col:70> 'int' 0
|   |     |-ImplicitCastExpr 0x111fc48 <col:73> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x111f8f0 <col:73> 'int' 0
|   |     |-ImplicitCastExpr 0x111fc60 <col:76> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x111f910 <col:76> 'int' 0
|   |     |-ImplicitCastExpr 0x111fc78 <col:79> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x111f930 <col:79> 'int' 0
|   |     |-ImplicitCastExpr 0x111fc90 <col:82> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x111f950 <col:82> 'int' 0
|   |     |-ImplicitCastExpr 0x111fca8 <col:85> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x111f970 <col:85> 'int' 0
|   |     |-ImplicitCastExpr 0x111fcc0 <col:88> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x111f990 <col:88> 'int' 0
|   |     |-ImplicitCastExpr 0x111fcd8 <col:91> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x111f9b0 <col:91> 'int' 0
|   |     |-ImplicitCastExpr 0x111fcf0 <col:94> 'BOOL':'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x111f9d0 <col:94> 'int' 0
|   |     `-ImplicitCastExpr 0x111fd08 <col:97> 'BOOL':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x111f9f0 <col:97> 'int' 0
|   |-DeclStmt 0x111feb0 <line:461:5, col:41>
|   | `-VarDecl 0x111fd70 <col:5, col:37> col:13 used p 'UINTPTR':'unsigned int' cinit
|   |   `-CStyleCastExpr 0x111fe88 <col:17, col:37> 'UINTPTR':'unsigned int' <PointerToIntegral>
|   |     `-CStyleCastExpr 0x111fe50 <col:26, col:37> 'UINTPTR *' <BitCast>
|   |       `-ImplicitCastExpr 0x111fe38 <col:37> 'void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x111fdd8 <col:37> 'void *' lvalue ParmVar 0x111ef78 'addr' 'void *'
|   |-CompoundAssignOperator 0x1120038 <line:462:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x111fec8 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x111fd70 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x1120018 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0x111ff60 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x111ff40 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x111ff28 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x111fee8 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x111fd70 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x111ff08 <col:16> 'int' 2
|   |   `-ParenExpr 0x111fff8 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x111ffd8 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x111ffc0 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x111ff80 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0x111fd70 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x111ffa0 <col:27> 'int' 4
|   |-CompoundAssignOperator 0x11201d8 <line:463:5, col:28> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x1120068 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x111fd70 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x11201b8 <col:10, col:28> 'unsigned int' '+'
|   |   |-ParenExpr 0x1120100 <col:10, col:17> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x11200e0 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x11200c8 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1120088 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x111fd70 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x11200a8 <col:16> 'int' 7
|   |   `-ParenExpr 0x1120198 <col:21, col:28> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x1120178 <col:22, col:27> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x1120160 <col:22> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1120120 <col:22> 'UINTPTR':'unsigned int' lvalue Var 0x111fd70 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x1120140 <col:27> 'int' 5
|   |-CompoundAssignOperator 0x1120378 <line:464:5, col:30> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x1120208 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x111fd70 'p' 'UINTPTR':'unsigned int'
|   | `-BinaryOperator 0x1120358 <col:10, col:30> 'unsigned int' '+'
|   |   |-ParenExpr 0x11202a0 <col:10, col:18> 'UINTPTR':'unsigned int'
|   |   | `-BinaryOperator 0x1120280 <col:11, col:16> 'UINTPTR':'unsigned int' '>>'
|   |   |   |-ImplicitCastExpr 0x1120268 <col:11> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1120228 <col:11> 'UINTPTR':'unsigned int' lvalue Var 0x111fd70 'p' 'UINTPTR':'unsigned int'
|   |   |   `-IntegerLiteral 0x1120248 <col:16> 'int' 17
|   |   `-ParenExpr 0x1120338 <col:22, col:30> 'UINTPTR':'unsigned int'
|   |     `-BinaryOperator 0x1120318 <col:23, col:28> 'UINTPTR':'unsigned int' '<<'
|   |       |-ImplicitCastExpr 0x1120300 <col:23> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x11202c0 <col:23> 'UINTPTR':'unsigned int' lvalue Var 0x111fd70 'p' 'UINTPTR':'unsigned int'
|   |       `-IntegerLiteral 0x11202e0 <col:28> 'int' 13
|   |-IfStmt 0x1120538 <line:466:5, line:468:5>
|   | |-BinaryOperator 0x1120418 <line:466:9, col:26> 'int' '>'
|   | | |-UnaryExprOrTypeTraitExpr 0x11203c0 <col:9, col:22> 'unsigned long' sizeof 'void *'
|   | | `-ImplicitCastExpr 0x1120400 <col:26> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x11203e0 <col:26> 'int' 4
|   | `-CompoundStmt 0x1120520 <col:29, line:468:5>
|   |   `-CompoundAssignOperator 0x11204f0 <line:467:9, col:22> 'UINTPTR':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0x1120438 <col:9> 'UINTPTR':'unsigned int' lvalue Var 0x111fd70 'p' 'UINTPTR':'unsigned int'
|   |     `-ParenExpr 0x11204d0 <col:14, col:22> 'UINTPTR':'unsigned int'
|   |       `-BinaryOperator 0x11204b0 <col:15, col:20> 'UINTPTR':'unsigned int' '>>'
|   |         |-ImplicitCastExpr 0x1120498 <col:15> 'UINTPTR':'unsigned int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1120458 <col:15> 'UINTPTR':'unsigned int' lvalue Var 0x111fd70 'p' 'UINTPTR':'unsigned int'
|   |         `-IntegerLiteral 0x1120478 <col:20> 'int' 31
|   |-CompoundAssignOperator 0x1120668 <line:470:5, col:34> 'UINTPTR':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x1120550 <col:5> 'UINTPTR':'unsigned int' lvalue Var 0x111fd70 'p' 'UINTPTR':'unsigned int'
|   | `-ImplicitCastExpr 0x1120650 <col:10, col:34> 'unsigned int' <IntegralCast>
|   |   `-ParenExpr 0x1120630 <col:10, col:34> 'int'
|   |     `-BinaryOperator 0x1120610 <line:457:29, line:470:33> 'int' '-'
|   |       |-ParenExpr 0x11205d0 <line:457:29, col:36> 'int'
|   |       | `-BinaryOperator 0x11205b0 <col:30, col:35> 'int' '<<'
|   |       |   |-IntegerLiteral 0x1120570 <col:30> 'int' 1
|   |       |   `-IntegerLiteral 0x1120590 <col:35> 'int' 4
|   |       `-IntegerLiteral 0x11205f0 <line:470:33> 'int' 1
|   `-ReturnStmt 0x1121820 <line:471:5, col:25>
|     `-BinaryOperator 0x1121800 <col:12, col:25> 'BOOL *' '+'
|       |-ImplicitCastExpr 0x11206d8 <col:12> 'BOOL *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x1120698 <col:12> 'BOOL [16]' lvalue Var 0x111f7a8 'flag_table' 'BOOL [16]'
|       `-ImplicitCastExpr 0x11206f0 <col:25> 'UINTPTR':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x11206b8 <col:25> 'UINTPTR':'unsigned int' lvalue Var 0x111fd70 'p' 'UINTPTR':'unsigned int'
|-FunctionDecl 0x11219e8 <line:474:1, line:482:1> line:474:20 used get_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0x1121898 <col:29, col:35> col:35 used addr 'void *'
| |-ParmVarDecl 0x1121918 <col:41, col:45> col:45 used model 'int'
| `-CompoundStmt 0x11220a0 <line:475:1, line:482:1>
|   |-DeclStmt 0x1121c00 <line:476:5, col:57>
|   | `-VarDecl 0x1121aa8 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0x1121bc0 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0x1121ba8 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1121b10 <col:22> 'BOOL *(void *)' Function 0x111f0c8 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0x1121be8 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1121b30 <col:52> 'void *' lvalue ParmVar 0x1121898 'addr' 'void *'
|   |-CallExpr 0x1121c70 <line:478:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x1121c58 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1121c18 <col:5> 'void (int)' Function 0x111e488 'maybe_release_fence' 'void (int)'
|   | `-ImplicitCastExpr 0x1121c98 <col:26> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1121c38 <col:26> 'int' lvalue ParmVar 0x1121918 'model' 'int'
|   `-WhileStmt 0x1122088 <line:479:5, line:481:5>
|     |-BinaryOperator 0x1122048 <line:479:12, col:66> 'int' '=='
|     | |-ImplicitCastExpr 0x1122030 <col:12, col:61> 'int' <IntegralCast>
|     | | `-CallExpr 0x1121fb0 <col:12, col:61> '_Bool'
|     | |   |-ImplicitCastExpr 0x1121f98 <col:12> '_Bool (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|     | |   | `-DeclRefExpr 0x1121ef0 <col:12> '<builtin fn type>' Function 0x1121d18 '__atomic_test_and_set' '_Bool (volatile void *, int)'
|     | |   |-ImplicitCastExpr 0x1121ff8 <col:35> 'volatile void *' <BitCast>
|     | |   | `-ImplicitCastExpr 0x1121fe0 <col:35> 'BOOL *' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x1121f10 <col:35> 'BOOL *' lvalue Var 0x1121aa8 'lock_ptr' 'BOOL *'
|     | |   `-IntegerLiteral 0x1121f30 <<built-in>:13:26> 'int' 2
|     | `-IntegerLiteral 0x1122010 <main/test/../los_compiler.h:479:66> 'int' 1
|     `-CompoundStmt 0x1122070 <col:69, line:481:5>
|       `-NullStmt 0x1122068 <line:480:9>
|-FunctionDecl 0x1121d18 <line:479:12> col:12 implicit used __atomic_test_and_set '_Bool (volatile void *, int)' extern
| |-ParmVarDecl 0x1121db8 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0x1121e20 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1121e98 <col:12> Implicit
|-FunctionDecl 0x11221f8 <line:484:1, line:490:1> line:484:20 used free_lock 'void (void *, int)' static inline
| |-ParmVarDecl 0x11220e0 <col:30, col:36> col:36 used addr 'void *'
| |-ParmVarDecl 0x1122160 <col:42, col:46> col:46 used model 'int'
| `-CompoundStmt 0x1122798 <line:485:1, line:490:1>
|   |-DeclStmt 0x11223b8 <line:486:5, col:57>
|   | `-VarDecl 0x11222b8 <col:5, col:56> col:11 used lock_ptr 'BOOL *' cinit
|   |   `-CallExpr 0x1122378 <col:22, col:56> 'BOOL *'
|   |     |-ImplicitCastExpr 0x1122360 <col:22> 'BOOL *(*)(void *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1122320 <col:22> 'BOOL *(void *)' Function 0x111f0c8 '__libatomic_flag_for_address' 'BOOL *(void *)'
|   |     `-ImplicitCastExpr 0x11223a0 <col:52> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1122340 <col:52> 'void *' lvalue ParmVar 0x11220e0 'addr' 'void *'
|   |-CallExpr 0x11226a0 <line:488:5, col:47> 'void'
|   | |-ImplicitCastExpr 0x1122688 <col:5> 'void (*)(volatile void *, int)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x11225e0 <col:5> '<builtin fn type>' Function 0x1122408 '__atomic_clear' 'void (volatile void *, int)'
|   | |-ImplicitCastExpr 0x11226e8 <col:21> 'volatile void *' <BitCast>
|   | | `-ImplicitCastExpr 0x11226d0 <col:21> 'BOOL *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1122600 <col:21> 'BOOL *' lvalue Var 0x11222b8 'lock_ptr' 'BOOL *'
|   | `-IntegerLiteral 0x1122620 <<built-in>:14:26> 'int' 3
|   `-CallExpr 0x1122758 <main/test/../los_compiler.h:489:5, col:31> 'void'
|     |-ImplicitCastExpr 0x1122740 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1122700 <col:5> 'void (int)' Function 0x111eb00 'maybe_acquire_fence' 'void (int)'
|     `-ImplicitCastExpr 0x1122780 <col:26> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1122720 <col:26> 'int' lvalue ParmVar 0x1122160 'model' 'int'
|-FunctionDecl 0x1122408 <line:488:5> col:5 implicit used __atomic_clear 'void (volatile void *, int)' extern
| |-ParmVarDecl 0x11224a8 <<invalid sloc>> <invalid sloc> 'volatile void *'
| |-ParmVarDecl 0x1122510 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1122588 <col:5> Implicit
|-FunctionDecl 0x1123a48 <line:492:1, line:501:1> line:492:23 __atomic_load_8 'UINT64 (const volatile void *, int)' static inline
| |-ParmVarDecl 0x11238b0 <col:39, col:60> col:60 used mem 'const volatile void *'
| |-ParmVarDecl 0x1123930 <col:65, col:69> col:69 used model 'int'
| `-CompoundStmt 0x1123ff8 <line:493:1, line:501:1>
|   |-DeclStmt 0x1123b70 <line:494:5, col:15>
|   | `-VarDecl 0x1123b08 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0x1123c80 <line:496:5, col:29>
|   | `-VarDecl 0x1123ba0 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x1123c58 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x1123c40 <col:26> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1123c08 <col:26> 'const volatile void *' lvalue ParmVar 0x11238b0 'mem' 'const volatile void *'
|   |-CallExpr 0x1123d40 <line:497:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x1123d28 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1123c98 <col:5> 'void (void *, int)' Function 0x11219e8 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x1123d70 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1123cb8 <col:15> 'void *' lvalue Var 0x1123ba0 'memP' 'void *'
|   | `-ImplicitCastExpr 0x1123d88 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1123cd8 <col:21> 'int' lvalue ParmVar 0x1123930 'model' 'int'
|   |-BinaryOperator 0x1123eb8 <line:498:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0x1123da0 <col:5> 'UINT64':'unsigned long long' lvalue Var 0x1123b08 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0x1123ea0 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0x1123e88 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0x1123e60 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0x1123e48 <col:22> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x1123e18 <col:22> 'const volatile void *' lvalue ParmVar 0x11238b0 'mem' 'const volatile void *'
|   |-CallExpr 0x1123f50 <line:499:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1123f38 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1123ed8 <col:5> 'void (void *, int)' Function 0x11221f8 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x1123f80 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1123ef8 <col:16> 'void *' lvalue Var 0x1123ba0 'memP' 'void *'
|   | `-ImplicitCastExpr 0x1123f98 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1123f18 <col:22> 'int' lvalue ParmVar 0x1123930 'model' 'int'
|   `-ReturnStmt 0x1123fe8 <line:500:5, col:12>
|     `-ImplicitCastExpr 0x1123fd0 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x1123fb0 <col:12> 'UINT64':'unsigned long long' lvalue Var 0x1123b08 'ret' 'UINT64':'unsigned long long'
|-FunctionDecl 0x1124268 <line:503:1, line:509:1> line:503:20 __atomic_store_8 'void (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0x1124050 <col:37, col:52> col:52 used mem 'volatile void *'
| |-ParmVarDecl 0x11240c8 <col:57, col:64> col:64 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x1124148 <col:69, col:73> col:73 used model 'int'
| `-CompoundStmt 0x11246c0 <line:504:1, line:509:1>
|   |-DeclStmt 0x1124418 <line:505:5, col:29>
|   | `-VarDecl 0x1124338 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x11243f0 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x11243d8 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x11243a0 <col:26> 'volatile void *' lvalue ParmVar 0x1124050 'mem' 'volatile void *'
|   |-CallExpr 0x11244a8 <line:506:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x1124490 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1124430 <col:5> 'void (void *, int)' Function 0x11219e8 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x11244d8 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1124450 <col:15> 'void *' lvalue Var 0x1124338 'memP' 'void *'
|   | `-ImplicitCastExpr 0x11244f0 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1124470 <col:21> 'int' lvalue ParmVar 0x1124148 'model' 'int'
|   |-BinaryOperator 0x11245c8 <line:507:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0x1124578 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0x1124550 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0x1124538 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x1124508 <col:16> 'volatile void *' lvalue ParmVar 0x1124050 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0x11245b0 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1124590 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0x11240c8 'val' 'UINT64':'unsigned long long'
|   `-CallExpr 0x1124660 <line:508:5, col:27> 'void'
|     |-ImplicitCastExpr 0x1124648 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x11245e8 <col:5> 'void (void *, int)' Function 0x11221f8 'free_lock' 'void (void *, int)'
|     |-ImplicitCastExpr 0x1124690 <col:16> 'void *' <LValueToRValue>
|     | `-DeclRefExpr 0x1124608 <col:16> 'void *' lvalue Var 0x1124338 'memP' 'void *'
|     `-ImplicitCastExpr 0x11246a8 <col:22> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1124628 <col:22> 'int' lvalue ParmVar 0x1124148 'model' 'int'
|-FunctionDecl 0x1124938 <line:511:1, line:521:1> line:511:22 __atomic_exchange_8 'UINT64 (volatile void *, UINT64, int)' static inline
| |-ParmVarDecl 0x1124708 <col:42, col:57> col:57 used mem 'volatile void *'
| |-ParmVarDecl 0x1124780 <col:62, col:69> col:69 used val 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x1124800 <col:74, col:78> col:78 used model 'int'
| `-CompoundStmt 0x1124f48 <line:512:1, line:521:1>
|   |-DeclStmt 0x1124a68 <line:513:5, col:15>
|   | `-VarDecl 0x1124a00 <col:5, col:12> col:12 used ret 'UINT64':'unsigned long long'
|   |-DeclStmt 0x1124b78 <line:515:5, col:29>
|   | `-VarDecl 0x1124a98 <col:5, col:26> col:11 used memP 'void *' cinit
|   |   `-CStyleCastExpr 0x1124b50 <col:18, col:26> 'void *' <NoOp>
|   |     `-ImplicitCastExpr 0x1124b38 <col:26> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1124b00 <col:26> 'volatile void *' lvalue ParmVar 0x1124708 'mem' 'volatile void *'
|   |-CallExpr 0x1124c08 <line:516:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x1124bf0 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1124b90 <col:5> 'void (void *, int)' Function 0x11219e8 'get_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x1124c38 <col:15> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1124bb0 <col:15> 'void *' lvalue Var 0x1124a98 'memP' 'void *'
|   | `-ImplicitCastExpr 0x1124c50 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1124bd0 <col:21> 'int' lvalue ParmVar 0x1124800 'model' 'int'
|   |-BinaryOperator 0x1124d28 <line:517:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-DeclRefExpr 0x1124c68 <col:5> 'UINT64':'unsigned long long' lvalue Var 0x1124a00 'ret' 'UINT64':'unsigned long long'
|   | `-ImplicitCastExpr 0x1124d10 <col:11, col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-UnaryOperator 0x1124cf8 <col:11, col:22> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     `-CStyleCastExpr 0x1124cd0 <col:12, col:22> 'UINT64 *' <BitCast>
|   |       `-ImplicitCastExpr 0x1124cb8 <col:22> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x1124c88 <col:22> 'volatile void *' lvalue ParmVar 0x1124708 'mem' 'volatile void *'
|   |-BinaryOperator 0x1124e08 <line:518:5, col:22> 'UINT64':'unsigned long long' '='
|   | |-UnaryOperator 0x1124db8 <col:5, col:16> 'UINT64':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-CStyleCastExpr 0x1124d90 <col:6, col:16> 'UINT64 *' <BitCast>
|   | |   `-ImplicitCastExpr 0x1124d78 <col:16> 'volatile void *' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x1124d48 <col:16> 'volatile void *' lvalue ParmVar 0x1124708 'mem' 'volatile void *'
|   | `-ImplicitCastExpr 0x1124df0 <col:22> 'UINT64':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1124dd0 <col:22> 'UINT64':'unsigned long long' lvalue ParmVar 0x1124780 'val' 'UINT64':'unsigned long long'
|   |-CallExpr 0x1124ea0 <line:519:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x1124e88 <col:5> 'void (*)(void *, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1124e28 <col:5> 'void (void *, int)' Function 0x11221f8 'free_lock' 'void (void *, int)'
|   | |-ImplicitCastExpr 0x1124ed0 <col:16> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1124e48 <col:16> 'void *' lvalue Var 0x1124a98 'memP' 'void *'
|   | `-ImplicitCastExpr 0x1124ee8 <col:22> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1124e68 <col:22> 'int' lvalue ParmVar 0x1124800 'model' 'int'
|   `-ReturnStmt 0x1124f38 <line:520:5, col:12>
|     `-ImplicitCastExpr 0x1124f20 <col:12> 'UINT64':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x1124f00 <col:12> 'UINT64':'unsigned long long' lvalue Var 0x1124a00 'ret' 'UINT64':'unsigned long long'
|-FunctionDecl 0x1125088 <main/test/task_demo.h:45:1, col:23> col:8 LosAppInit 'UINT32 (void)'
|-TypedefDecl 0x1125140 </usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h:46:1, col:23> col:23 referenced size_t 'unsigned long'
| `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x11251d0 </usr/lib/llvm-10/lib/clang/10.0.0/include/stdarg.h:14:1, col:27> col:27 va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0x11251a0 '__builtin_va_list' sugar
|   |-Typedef 0x10b1ce8 '__builtin_va_list'
|   `-ConstantArrayType 0x10b1c90 'struct __va_list_tag [1]' 1 
|     `-RecordType 0x10b1ad0 'struct __va_list_tag'
|       `-Record 0x10b1a48 '__va_list_tag'
|-TypedefDecl 0x1125238 <line:32:1, col:27> col:27 referenced __gnuc_va_list '__builtin_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0x11251a0 '__builtin_va_list' sugar
|   |-Typedef 0x10b1ce8 '__builtin_va_list'
|   `-ConstantArrayType 0x10b1c90 'struct __va_list_tag [1]' 1 
|     `-RecordType 0x10b1ad0 'struct __va_list_tag'
|       `-Record 0x10b1a48 '__va_list_tag'
|-TypedefDecl 0x11252a8 </usr/include/x86_64-linux-gnu/bits/types.h:31:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x10b0ea0 'unsigned char'
|-TypedefDecl 0x1125318 <line:32:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x10b0ec0 'unsigned short'
|-TypedefDecl 0x1125388 <line:33:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x10b0ee0 'unsigned int'
|-TypedefDecl 0x11253f8 <line:34:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x1125468 <line:37:1, col:21> col:21 referenced __int8_t 'signed char'
| `-BuiltinType 0x10b0e00 'signed char'
|-TypedefDecl 0x11254d8 <line:38:1, col:23> col:23 referenced __uint8_t 'unsigned char'
| `-BuiltinType 0x10b0ea0 'unsigned char'
|-TypedefDecl 0x1125548 <line:39:1, col:26> col:26 referenced __int16_t 'short'
| `-BuiltinType 0x10b0e20 'short'
|-TypedefDecl 0x11255b8 <line:40:1, col:28> col:28 referenced __uint16_t 'unsigned short'
| `-BuiltinType 0x10b0ec0 'unsigned short'
|-TypedefDecl 0x1125628 <line:41:1, col:20> col:20 referenced __int32_t 'int'
| `-BuiltinType 0x10b0e40 'int'
|-TypedefDecl 0x1125698 <line:42:1, col:22> col:22 referenced __uint32_t 'unsigned int'
| `-BuiltinType 0x10b0ee0 'unsigned int'
|-TypedefDecl 0x1125708 <line:44:1, col:25> col:25 referenced __int64_t 'long'
| `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x1125778 <line:45:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x1125800 <line:52:1, col:18> col:18 __int_least8_t '__int8_t':'signed char'
| `-TypedefType 0x11257d0 '__int8_t' sugar
|   |-Typedef 0x1125468 '__int8_t'
|   `-BuiltinType 0x10b0e00 'signed char'
|-TypedefDecl 0x113ff40 <line:53:1, col:19> col:19 __uint_least8_t '__uint8_t':'unsigned char'
| `-TypedefType 0x1125860 '__uint8_t' sugar
|   |-Typedef 0x11254d8 '__uint8_t'
|   `-BuiltinType 0x10b0ea0 'unsigned char'
|-TypedefDecl 0x113ffd0 <line:54:1, col:19> col:19 __int_least16_t '__int16_t':'short'
| `-TypedefType 0x113ffa0 '__int16_t' sugar
|   |-Typedef 0x1125548 '__int16_t'
|   `-BuiltinType 0x10b0e20 'short'
|-TypedefDecl 0x1140060 <line:55:1, col:20> col:20 __uint_least16_t '__uint16_t':'unsigned short'
| `-TypedefType 0x1140030 '__uint16_t' sugar
|   |-Typedef 0x11255b8 '__uint16_t'
|   `-BuiltinType 0x10b0ec0 'unsigned short'
|-TypedefDecl 0x11400f0 <line:56:1, col:19> col:19 __int_least32_t '__int32_t':'int'
| `-TypedefType 0x11400c0 '__int32_t' sugar
|   |-Typedef 0x1125628 '__int32_t'
|   `-BuiltinType 0x10b0e40 'int'
|-TypedefDecl 0x1140180 <line:57:1, col:20> col:20 __uint_least32_t '__uint32_t':'unsigned int'
| `-TypedefType 0x1140150 '__uint32_t' sugar
|   |-Typedef 0x1125698 '__uint32_t'
|   `-BuiltinType 0x10b0ee0 'unsigned int'
|-TypedefDecl 0x1140210 <line:58:1, col:19> col:19 __int_least64_t '__int64_t':'long'
| `-TypedefType 0x11401e0 '__int64_t' sugar
|   |-Typedef 0x1125708 '__int64_t'
|   `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x11402a0 <line:59:1, col:20> col:20 __uint_least64_t '__uint64_t':'unsigned long'
| `-TypedefType 0x1140270 '__uint64_t' sugar
|   |-Typedef 0x1125778 '__uint64_t'
|   `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x1140310 <line:63:1, col:18> col:18 __quad_t 'long'
| `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x1140380 <line:64:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x11403f0 <line:72:1, col:18> col:18 __intmax_t 'long'
| `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x1140460 <line:73:1, col:27> col:27 __uintmax_t 'unsigned long'
| `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x11404d0 <line:137:22, line:145:25> col:25 __dev_t 'unsigned long'
| `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x1140540 <line:137:22, line:146:25> col:25 __uid_t 'unsigned int'
| `-BuiltinType 0x10b0ee0 'unsigned int'
|-TypedefDecl 0x11405b0 <line:137:22, line:147:25> col:25 __gid_t 'unsigned int'
| `-BuiltinType 0x10b0ee0 'unsigned int'
|-TypedefDecl 0x1140620 <line:137:22, line:148:25> col:25 __ino_t 'unsigned long'
| `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x1140690 <line:137:22, line:149:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x1140700 <line:137:22, line:150:26> col:26 __mode_t 'unsigned int'
| `-BuiltinType 0x10b0ee0 'unsigned int'
|-TypedefDecl 0x1140770 <line:137:22, line:151:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x11407e0 <line:137:22, line:152:25> col:25 referenced __off_t 'long'
| `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x1140850 <line:137:22, line:153:27> col:27 referenced __off64_t 'long'
| `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x11408c0 <line:137:22, line:154:25> col:25 __pid_t 'int'
| `-BuiltinType 0x10b0e40 'int'
|-RecordDecl 0x1140918 </usr/include/x86_64-linux-gnu/bits/typesizes.h:72:24, col:47> col:24 struct definition
| `-FieldDecl 0x1140a60 <col:33, col:44> col:37 __val 'int [2]'
|-TypedefDecl 0x1140b08 </usr/include/x86_64-linux-gnu/bits/types.h:137:22, line:155:26> col:26 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x1140ab0 'struct __fsid_t' sugar
|   `-RecordType 0x11409a0 '__fsid_t'
|     `-Record 0x1140918 ''
|-TypedefDecl 0x1140b90 <line:137:22, line:156:27> col:27 __clock_t 'long'
| `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x1140c00 <line:137:22, line:157:26> col:26 __rlim_t 'unsigned long'
| `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x1140c70 <line:137:22, line:158:28> col:28 __rlim64_t 'unsigned long'
| `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x1140ce0 <line:137:22, line:159:24> col:24 __id_t 'unsigned int'
| `-BuiltinType 0x10b0ee0 'unsigned int'
|-TypedefDecl 0x1140d50 <line:137:22, line:160:26> col:26 __time_t 'long'
| `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x1140dc0 <line:137:22, line:161:30> col:30 __useconds_t 'unsigned int'
| `-BuiltinType 0x10b0ee0 'unsigned int'
|-TypedefDecl 0x1140e30 <line:137:22, line:162:31> col:31 __suseconds_t 'long'
| `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x1140ea0 <line:137:22, line:164:27> col:27 __daddr_t 'int'
| `-BuiltinType 0x10b0e40 'int'
|-TypedefDecl 0x1134cf0 <line:137:22, line:165:25> col:25 __key_t 'int'
| `-BuiltinType 0x10b0e40 'int'
|-TypedefDecl 0x1134d60 <line:137:22, line:168:29> col:29 __clockid_t 'int'
| `-BuiltinType 0x10b0e40 'int'
|-TypedefDecl 0x1134dd0 <line:137:22, line:171:27> col:27 __timer_t 'void *'
| `-PointerType 0x10b1560 'void *'
|   `-BuiltinType 0x10b0da0 'void'
|-TypedefDecl 0x1134e40 <line:137:22, line:174:29> col:29 __blksize_t 'long'
| `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x1134eb0 <line:137:22, line:179:28> col:28 __blkcnt_t 'long'
| `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x1134f20 <line:137:22, line:180:30> col:30 __blkcnt64_t 'long'
| `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x1134f90 <line:137:22, line:183:30> col:30 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x1135000 <line:137:22, line:184:32> col:32 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x1135070 <line:137:22, line:187:30> col:30 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x11350e0 <line:137:22, line:188:32> col:32 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x1135150 <line:137:22, line:191:28> col:28 __fsword_t 'long'
| `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x11351c0 <line:137:22, line:193:27> col:27 referenced __ssize_t 'long'
| `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x1135230 <line:137:22, line:196:33> col:33 __syscall_slong_t 'long'
| `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x11352a0 <line:137:22, line:198:33> col:33 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x10b0f00 'unsigned long'
|-TypedefDecl 0x1135330 <line:202:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x1135300 '__off64_t' sugar
|   |-Typedef 0x1140850 '__off64_t'
|   `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x11353a0 <line:203:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x10b19b0 'char *'
|   `-BuiltinType 0x10b0de0 'char'
|-TypedefDecl 0x1135410 <line:137:22, line:206:25> col:25 __intptr_t 'long'
| `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x1135480 <line:137:22, line:209:23> col:23 __socklen_t 'unsigned int'
| `-BuiltinType 0x10b0ee0 'unsigned int'
|-TypedefDecl 0x11354f0 <line:214:1, col:13> col:13 __sig_atomic_t 'int'
| `-BuiltinType 0x10b0e40 'int'
|-RecordDecl 0x1135548 </usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:13:9, line:21:1> line:13:9 struct definition
| |-FieldDecl 0x1135608 <line:15:3, col:7> col:7 __count 'int'
| |-RecordDecl 0x1135658 <line:16:3, line:20:3> line:16:3 union definition
| | |-FieldDecl 0x1135718 <<built-in>:87:23, /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:18:19> col:19 __wch 'unsigned int'
| | `-FieldDecl 0x11357f8 <line:19:5, col:18> col:10 __wchb 'char [4]'
| `-FieldDecl 0x11358a8 <line:16:3, line:20:5> col:5 __value 'union (anonymous union at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)':'union __mbstate_t::(anonymous at /usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:16:3)'
|-TypedefDecl 0x1135958 <line:13:1, line:21:3> col:3 referenced __mbstate_t 'struct __mbstate_t':'__mbstate_t'
| `-ElaboratedType 0x1135900 'struct __mbstate_t' sugar
|   `-RecordType 0x11355d0 '__mbstate_t'
|     `-Record 0x1135548 ''
|-RecordDecl 0x11359c8 </usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h:10:9, line:14:1> line:10:16 struct _G_fpos_t definition
| |-FieldDecl 0x1135aa0 <line:12:3, col:11> col:11 __pos '__off_t':'long'
| `-FieldDecl 0x1135b20 <line:13:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
|-TypedefDecl 0x1135bc8 <line:10:1, line:14:3> col:3 referenced __fpos_t 'struct _G_fpos_t':'struct _G_fpos_t'
| `-ElaboratedType 0x1135b70 'struct _G_fpos_t' sugar
|   `-RecordType 0x1135a50 'struct _G_fpos_t'
|     `-Record 0x11359c8 '_G_fpos_t'
|-RecordDecl 0x1135c38 </usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h:10:9, line:14:1> line:10:16 struct _G_fpos64_t definition
| |-FieldDecl 0x114eb30 <line:12:3, col:13> col:13 __pos '__off64_t':'long'
| `-FieldDecl 0x114eb90 <line:13:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
|-TypedefDecl 0x114ec38 <line:10:1, line:14:3> col:3 __fpos64_t 'struct _G_fpos64_t':'struct _G_fpos64_t'
| `-ElaboratedType 0x114ebe0 'struct _G_fpos64_t' sugar
|   `-RecordType 0x1135cc0 'struct _G_fpos64_t'
|     `-Record 0x1135c38 '_G_fpos64_t'
|-RecordDecl 0x114eca8 </usr/include/x86_64-linux-gnu/bits/types/__FILE.h:4:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0x114eda0 <line:5:1, col:25> col:25 __FILE 'struct _IO_FILE':'struct _IO_FILE'
| `-ElaboratedType 0x114ed50 'struct _IO_FILE' sugar
|   `-RecordType 0x114ed30 'struct _IO_FILE'
|     `-Record 0x114f1b8 '_IO_FILE'
|-RecordDecl 0x114edf8 prev 0x114eca8 </usr/include/x86_64-linux-gnu/bits/types/FILE.h:4:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0x114ee98 <line:7:1, col:25> col:25 referenced FILE 'struct _IO_FILE':'struct _IO_FILE'
| `-ElaboratedType 0x114ed50 'struct _IO_FILE' sugar
|   `-RecordType 0x114ed30 'struct _IO_FILE'
|     `-Record 0x114f1b8 '_IO_FILE'
|-RecordDecl 0x114eef0 prev 0x114edf8 </usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h:35:1, col:8> col:8 struct _IO_FILE
|-RecordDecl 0x114ef70 <line:36:1, col:8> col:8 struct _IO_marker
|-RecordDecl 0x114f010 <line:37:1, col:8> col:8 struct _IO_codecvt
|-RecordDecl 0x114f0b0 <line:38:1, col:8> col:8 struct _IO_wide_data
|-TypedefDecl 0x114f160 <line:43:1, col:14> col:14 referenced _IO_lock_t 'void'
| `-BuiltinType 0x10b0da0 'void'
|-RecordDecl 0x114f1b8 prev 0x114eef0 <line:49:1, line:99:1> line:49:8 struct _IO_FILE definition
| |-FieldDecl 0x114f250 <line:51:3, col:7> col:7 _flags 'int'
| |-FieldDecl 0x114f2b8 <line:54:3, col:9> col:9 _IO_read_ptr 'char *'
| |-FieldDecl 0x114f320 <line:55:3, col:9> col:9 _IO_read_end 'char *'
| |-FieldDecl 0x114f388 <line:56:3, col:9> col:9 _IO_read_base 'char *'
| |-FieldDecl 0x114f3f0 <line:57:3, col:9> col:9 _IO_write_base 'char *'
| |-FieldDecl 0x114f458 <line:58:3, col:9> col:9 _IO_write_ptr 'char *'
| |-FieldDecl 0x114f4c0 <line:59:3, col:9> col:9 _IO_write_end 'char *'
| |-FieldDecl 0x114f528 <line:60:3, col:9> col:9 _IO_buf_base 'char *'
| |-FieldDecl 0x114f590 <line:61:3, col:9> col:9 _IO_buf_end 'char *'
| |-FieldDecl 0x114f5f8 <line:64:3, col:9> col:9 _IO_save_base 'char *'
| |-FieldDecl 0x114f660 <line:65:3, col:9> col:9 _IO_backup_base 'char *'
| |-FieldDecl 0x114f6c8 <line:66:3, col:9> col:9 _IO_save_end 'char *'
| |-FieldDecl 0x114f7d0 <line:68:3, col:22> col:22 _markers 'struct _IO_marker *'
| |-FieldDecl 0x114f8a0 <line:70:3, col:20> col:20 _chain 'struct _IO_FILE *'
| |-FieldDecl 0x114f908 <line:72:3, col:7> col:7 _fileno 'int'
| |-FieldDecl 0x114f970 <line:73:3, col:7> col:7 _flags2 'int'
| |-FieldDecl 0x114f9d0 <line:74:3, col:11> col:11 _old_offset '__off_t':'long'
| |-FieldDecl 0x114fa38 <line:77:3, col:18> col:18 _cur_column 'unsigned short'
| |-FieldDecl 0x114faa0 <line:78:3, col:15> col:15 _vtable_offset 'signed char'
| |-FieldDecl 0x1151f18 <line:79:3, col:19> col:8 _shortbuf 'char [1]'
| |-FieldDecl 0x1151fc8 <line:81:3, col:15> col:15 _lock '_IO_lock_t *'
| |-FieldDecl 0x1152028 <line:89:3, col:13> col:13 _offset '__off64_t':'long'
| |-FieldDecl 0x1152130 <line:91:3, col:23> col:23 _codecvt 'struct _IO_codecvt *'
| |-FieldDecl 0x1152230 <line:92:3, col:25> col:25 _wide_data 'struct _IO_wide_data *'
| |-FieldDecl 0x11522a8 <line:93:3, col:20> col:20 _freeres_list 'struct _IO_FILE *'
| |-FieldDecl 0x1152310 <line:94:3, col:9> col:9 _freeres_buf 'void *'
| |-FieldDecl 0x1152390 <line:95:3, col:10> col:10 __pad5 'size_t':'unsigned long'
| |-FieldDecl 0x11523f8 <line:96:3, col:7> col:7 _mode 'int'
| `-FieldDecl 0x1152648 <line:98:3, col:74> col:8 _unused2 'char [20]'
|-TypedefDecl 0x11526d0 prev 0x11251d0 </usr/include/stdio.h:52:1, col:24> col:24 va_list '__gnuc_va_list':'struct __va_list_tag [1]'
| `-TypedefType 0x11526a0 '__gnuc_va_list' sugar
|   |-Typedef 0x1125238 '__gnuc_va_list'
|   `-TypedefType 0x11251a0 '__builtin_va_list' sugar
|     |-Typedef 0x10b1ce8 '__builtin_va_list'
|     `-ConstantArrayType 0x10b1c90 'struct __va_list_tag [1]' 1 
|       `-RecordType 0x10b1ad0 'struct __va_list_tag'
|         `-Record 0x10b1a48 '__va_list_tag'
|-TypedefDecl 0x1152738 <line:63:1, col:17> col:17 off_t '__off_t':'long'
| `-TypedefType 0x1135a70 '__off_t' sugar
|   |-Typedef 0x11407e0 '__off_t'
|   `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x11527c0 <line:77:1, col:19> col:19 ssize_t '__ssize_t':'long'
| `-TypedefType 0x1152790 '__ssize_t' sugar
|   |-Typedef 0x11351c0 '__ssize_t'
|   `-BuiltinType 0x10b0e60 'long'
|-TypedefDecl 0x1152850 <line:84:1, col:18> col:18 referenced fpos_t '__fpos_t':'struct _G_fpos_t'
| `-TypedefType 0x1152820 '__fpos_t' sugar
|   |-Typedef 0x1135bc8 '__fpos_t'
|   `-ElaboratedType 0x1135b70 'struct _G_fpos_t' sugar
|     `-RecordType 0x1135a50 'struct _G_fpos_t'
|       `-Record 0x11359c8 '_G_fpos_t'
|-VarDecl 0x1152908 <line:137:1, col:14> col:14 stdin 'FILE *' extern
|-VarDecl 0x1152980 <line:138:1, col:14> col:14 stdout 'FILE *' extern
|-VarDecl 0x11529f8 <line:139:1, col:14> col:14 stderr 'FILE *' extern
|-FunctionDecl 0x1152b40 <line:146:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:146:12 remove 'int (const char *)' extern
| |-ParmVarDecl 0x1152a78 <col:20, col:32> col:32 __filename 'const char *'
| `-NoThrowAttr 0x1152be8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x1152db0 </usr/include/stdio.h:148:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:148:12 rename 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1152c58 <col:20, col:32> col:32 __old 'const char *'
| |-ParmVarDecl 0x1152cd8 <col:39, col:51> col:51 __new 'const char *'
| `-NoThrowAttr 0x1152e60 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x11584e0 </usr/include/stdio.h:152:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:152:12 renameat 'int (int, const char *, int, const char *)' extern
| |-ParmVarDecl 0x1158268 <col:22, col:26> col:26 __oldfd 'int'
| |-ParmVarDecl 0x11582e8 <col:35, col:47> col:47 __old 'const char *'
| |-ParmVarDecl 0x1158368 <col:54, col:58> col:58 __newfd 'int'
| |-ParmVarDecl 0x11583e8 <line:153:8, col:20> col:20 __new 'const char *'
| `-NoThrowAttr 0x11585a0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x11586e8 </usr/include/stdio.h:173:1, col:27> col:14 tmpfile 'FILE *(void)' extern
|-FunctionDecl 0x1158870 <line:187:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:187:14 tmpnam 'char *(char *)' extern
| |-ParmVarDecl 0x11587a0 <col:22, col:28> col:28 __s 'char *'
| `-NoThrowAttr 0x1158918 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x1158a20 </usr/include/stdio.h:192:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:192:14 tmpnam_r 'char *(char *)' extern
| |-ParmVarDecl 0x1158988 <col:24, col:30> col:30 __s 'char *'
| `-NoThrowAttr 0x1158ac8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x1158c90 </usr/include/stdio.h:204:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:208:58> /usr/include/stdio.h:204:14 tempnam 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1158b38 <col:23, col:35> col:35 __dir 'const char *'
| |-ParmVarDecl 0x1158bb8 <col:42, col:54> col:54 __pfx 'const char *'
| |-NoThrowAttr 0x1158d40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-RestrictAttr 0x1158d98 <line:208:47> malloc
|-FunctionDecl 0x1158ed0 </usr/include/stdio.h:213:1, col:34> col:12 fclose 'int (FILE *)' extern
| `-ParmVarDecl 0x1158dd0 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x1159020 <line:218:1, col:34> col:12 fflush 'int (FILE *)' extern
| `-ParmVarDecl 0x1158f88 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x1159170 <line:227:1, col:43> col:12 fflush_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x11590d8 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0x115a458 <line:246:14> col:14 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x115a4f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x115a560 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x115a5d8 prev 0x115a458 <col:1, line:247:37> line:246:14 fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x115a280 <col:21, col:44> col:44 __filename 'const char *restrict'
| `-ParmVarDecl 0x115a300 <line:247:7, col:30> col:30 __modes 'const char *restrict'
|-FunctionDecl 0x115a8b8 <line:252:1, line:254:34> line:252:14 freopen 'FILE *(const char *restrict, const char *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0x115a6a0 <col:23, col:46> col:46 __filename 'const char *restrict'
| |-ParmVarDecl 0x115a720 <line:253:9, col:32> col:32 __modes 'const char *restrict'
| `-ParmVarDecl 0x115a798 <line:254:9, col:26> col:26 __stream 'FILE *restrict'
|-FunctionDecl 0x115ab18 <line:279:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:279:14 fdopen 'FILE *(int, const char *)' extern
| |-ParmVarDecl 0x115a988 <col:22, col:26> col:26 __fd 'int'
| |-ParmVarDecl 0x115aa08 <col:32, col:44> col:44 __modes 'const char *'
| `-NoThrowAttr 0x115abc8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x115ae58 </usr/include/stdio.h:292:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:292:14 fmemopen 'FILE *(void *, size_t, const char *)' extern
| |-ParmVarDecl 0x115ac38 <col:24, col:30> col:30 __s 'void *'
| |-ParmVarDecl 0x115acb0 <col:35, col:42> col:42 __len 'size_t':'unsigned long'
| |-ParmVarDecl 0x115ad30 <col:49, col:61> col:61 __modes 'const char *'
| `-NoThrowAttr 0x115af10 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x115b198 </usr/include/stdio.h:298:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:298:14 open_memstream 'FILE *(char **, size_t *)' extern
| |-ParmVarDecl 0x115afb0 <col:30, col:37> col:37 __bufloc 'char **'
| |-ParmVarDecl 0x115b088 <col:47, col:55> col:55 __sizeloc 'size_t *'
| `-NoThrowAttr 0x115b248 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x115b468 </usr/include/stdio.h:304:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:304:13 setbuf 'void (FILE *restrict, char *restrict)' extern
| |-ParmVarDecl 0x115b2d0 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0x115b350 <col:48, col:65> col:65 __buf 'char *restrict'
| `-NoThrowAttr 0x115b518 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x115b840 </usr/include/stdio.h:308:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:308:12 setvbuf 'int (FILE *restrict, char *restrict, int, size_t)' extern
| |-ParmVarDecl 0x115b580 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0x115b600 <col:48, col:65> col:65 __buf 'char *restrict'
| |-ParmVarDecl 0x115b680 <line:309:7, col:11> col:11 __modes 'int'
| |-ParmVarDecl 0x115b6f8 <col:20, col:27> col:27 __n 'size_t':'unsigned long'
| `-NoThrowAttr 0x115b900 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x115bb88 </usr/include/stdio.h:314:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:314:13 setbuffer 'void (FILE *restrict, char *restrict, size_t)' extern
| |-ParmVarDecl 0x115b968 <col:24, col:41> col:41 __stream 'FILE *restrict'
| |-ParmVarDecl 0x115b9e8 <col:51, col:68> col:68 __buf 'char *restrict'
| |-ParmVarDecl 0x115ba60 <line:315:10, col:17> col:17 __size 'size_t':'unsigned long'
| `-NoThrowAttr 0x115bc40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x115bd98 </usr/include/stdio.h:318:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:318:13 setlinebuf 'void (FILE *)' extern
| |-ParmVarDecl 0x115bca8 <col:25, col:31> col:31 __stream 'FILE *'
| `-NoThrowAttr 0x115be40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x115c090 </usr/include/stdio.h:326:12> col:12 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x115c130 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x115c198 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x115c210 <col:12> Implicit printf 2 3
|-FunctionDecl 0x115c2a0 prev 0x115c090 <col:1, line:327:43> line:326:12 fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x115bea8 <col:21, col:38> col:38 __stream 'FILE *restrict'
| |-ParmVarDecl 0x115bf28 <line:327:7, col:30> col:30 __format 'const char *restrict'
| `-FormatAttr 0x115c380 <line:326:12> Inherited printf 2 3
|-FunctionDecl 0x115c4e8 <line:332:12> col:12 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x115c588 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x115c5f8 <col:12> Implicit printf 1 2
|-FunctionDecl 0x115c660 prev 0x115c4e8 <col:1, col:56> col:12 used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x115c3d0 <col:20, col:43> col:43 __format 'const char *restrict'
| `-FormatAttr 0x115c738 <col:12> Inherited printf 1 2
|-FunctionDecl 0x115c928 <line:334:12> col:12 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x115c9c8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x115ca30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x115caa8 <col:12> Implicit printf 2 3
|-FunctionDecl 0x115cb10 prev 0x115c928 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:56:49> /usr/include/stdio.h:334:12 sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x115c788 <col:21, col:38> col:38 __s 'char *restrict'
| |-ParmVarDecl 0x115c808 <line:335:7, col:30> col:30 __format 'const char *restrict'
| |-FormatAttr 0x115cc18 <line:334:12> Inherited printf 2 3
| `-NoThrowAttr 0x115cbc0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
|-FunctionDecl 0x115cf30 </usr/include/stdio.h:341:12> col:12 implicit vfprintf 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x115cfd0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x115d038 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x115d0a0 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x115d120 <col:12> Implicit printf 2 0
|-FunctionDecl 0x115d188 prev 0x115cf30 <col:1, line:342:28> line:341:12 vfprintf 'int (FILE *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x115cc60 <col:22, col:39> col:39 __s 'FILE *restrict'
| |-ParmVarDecl 0x115cce0 <col:44, col:67> col:67 __format 'const char *restrict'
| |-ParmVarDecl 0x115cdc0 <line:342:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x115d2b0 <line:341:12> Inherited printf 2 0
|-FunctionDecl 0x115d490 <line:347:12> col:12 implicit vprintf 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x115d530 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x115d598 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x115d610 <col:12> Implicit printf 1 0
|-FunctionDecl 0x115d678 prev 0x115d490 <col:1, col:74> col:12 vprintf 'int (const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x115d300 <col:21, col:44> col:44 __format 'const char *restrict'
| |-ParmVarDecl 0x115d378 <col:54, col:69> col:69 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x115d758 <col:12> Inherited printf 1 0
|-FunctionDecl 0x115d9d0 <line:349:12> col:12 implicit vsprintf 'int (char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x115da70 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x115dad8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x115db40 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x115dbc0 <col:12> Implicit printf 2 0
|-FunctionDecl 0x115dc28 prev 0x115d9d0 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:56:49> /usr/include/stdio.h:349:12 vsprintf 'int (char *, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x115d7a8 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0x115d828 <col:44, col:67> col:67 __format 'const char *restrict'
| |-ParmVarDecl 0x115d8a0 <line:350:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-FormatAttr 0x115dd38 <line:349:12> Inherited printf 2 0
| `-NoThrowAttr 0x115dce0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
|-FunctionDecl 0x115e018 </usr/include/stdio.h:354:12> col:12 implicit snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x115e0b8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x115e120 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x115e188 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x115e208 <col:12> Implicit printf 3 4
|-FunctionDecl 0x115e2c0 prev 0x115e018 <col:1, line:356:62> line:354:12 snprintf 'int (char *, unsigned long, const char *, ...)' extern
| |-ParmVarDecl 0x115dd88 <col:22, col:39> col:39 __s 'char *restrict'
| |-ParmVarDecl 0x115de00 <col:44, col:51> col:51 __maxlen 'size_t':'unsigned long'
| |-ParmVarDecl 0x115de80 <line:355:8, col:31> col:31 __format 'const char *restrict'
| |-NoThrowAttr 0x115e378 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
| `-FormatAttr 0x115e3d0 </usr/include/stdio.h:356:32, col:60> printf 3 4
|-FunctionDecl 0x115e730 <line:358:12> col:12 implicit vsnprintf 'int (char *, unsigned long, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x115e7d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x115e838 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x115e8a0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x115e908 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x115e990 <col:12> Implicit printf 3 0
|-FunctionDecl 0x115e9f8 prev 0x115e730 <col:1, line:360:62> line:358:12 vsnprintf 'int (char *, unsigned long, const char *, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x115e420 <col:23, col:40> col:40 __s 'char *restrict'
| |-ParmVarDecl 0x115e498 <col:45, col:52> col:52 __maxlen 'size_t':'unsigned long'
| |-ParmVarDecl 0x115e518 <line:359:9, col:32> col:32 __format 'const char *restrict'
| |-ParmVarDecl 0x115e590 <col:42, col:57> col:57 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-NoThrowAttr 0x115eab8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:56:37>
| `-FormatAttr 0x115eb10 </usr/include/stdio.h:360:32, col:60> printf 3 0
|-FunctionDecl 0x115edd0 <line:379:1, line:381:52> line:379:12 vdprintf 'int (int, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x115eb60 <col:22, col:26> col:26 __fd 'int'
| |-ParmVarDecl 0x115ebe0 <col:32, col:55> col:55 __fmt 'const char *restrict'
| |-ParmVarDecl 0x115ec58 <line:380:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x115ee88 <line:381:22, col:50> printf 2 0
|-FunctionDecl 0x115f0f8 <line:382:1, line:383:52> line:382:12 dprintf 'int (int, const char *restrict, ...)' extern
| |-ParmVarDecl 0x115ef08 <col:21, col:25> col:25 __fd 'int'
| |-ParmVarDecl 0x115ef88 <col:31, col:54> col:54 __fmt 'const char *restrict'
| `-FormatAttr 0x115f1a8 <line:383:22, col:50> printf 2 3
|-FunctionDecl 0x1160390 <line:391:12> col:12 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1160430 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1160498 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1160510 <col:12> Implicit scanf 2 3
|-FunctionDecl 0x1160578 prev 0x1160390 <col:1, line:392:42> line:391:12 fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x115f220 <col:20, col:37> col:37 __stream 'FILE *restrict'
| |-ParmVarDecl 0x11602f0 <line:392:6, col:29> col:29 __format 'const char *restrict'
| `-FormatAttr 0x1160658 <line:391:12> Inherited scanf 2 3
|-FunctionDecl 0x1160740 <line:397:12> col:12 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x11607e0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1160850 <col:12> Implicit scanf 1 2
|-FunctionDecl 0x11608b8 prev 0x1160740 <col:1, col:55> col:12 scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x11606a8 <col:19, col:42> col:42 __format 'const char *restrict'
| `-FormatAttr 0x1160990 <col:12> Inherited scanf 1 2
|-FunctionDecl 0x1160b88 <line:399:12> col:12 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1160c28 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1160c90 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1160d08 <col:12> Implicit scanf 2 3
|-FunctionDecl 0x1160d70 prev 0x1160b88 <col:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:399:12 sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x11609e0 <col:20, col:43> col:43 __s 'const char *restrict'
| |-ParmVarDecl 0x1160a60 <line:400:6, col:29> col:29 __format 'const char *restrict'
| |-FormatAttr 0x1160e78 <line:399:12> Inherited scanf 2 3
| `-NoThrowAttr 0x1160e20 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x1161050 prev 0x1160578 </usr/include/stdio.h:407:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/stdio.h:407:24 fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1160ec0 <col:33, col:50> col:50 __stream 'FILE *restrict'
| |-ParmVarDecl 0x1160f40 <line:408:5, col:28> col:28 __format 'const char *restrict'
| |-FormatAttr 0x1161178 <line:391:12> Inherited scanf 2 3
| `-AsmLabelAttr 0x11610f0 <<scratch space>:14:1> "__isoc99_fscanf" IsLiteralLabel
|-FunctionDecl 0x1161580 prev 0x11608b8 </usr/include/stdio.h:410:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:174:79> /usr/include/stdio.h:410:24 scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x11611c8 <col:32, col:55> col:55 __format 'const char *restrict'
| |-FormatAttr 0x11616a0 <line:397:12> Inherited scanf 1 2
| `-AsmLabelAttr 0x1161620 <<scratch space>:16:1> "__isoc99_scanf" IsLiteralLabel
|-FunctionDecl 0x1161840 prev 0x1160d70 </usr/include/stdio.h:412:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:412:28 sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x11616f0 <col:37, col:60> col:60 __s 'const char *restrict'
| |-ParmVarDecl 0x1161770 <line:413:9, col:32> col:32 __format 'const char *restrict'
| |-FormatAttr 0x1161990 <line:399:12> Inherited scanf 2 3
| |-AsmLabelAttr 0x11618e0 <<scratch space>:18:1> "__isoc99_sscanf" IsLiteralLabel
| `-NoThrowAttr 0x1161968 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x1161c10 </usr/include/stdio.h:432:12> col:12 implicit vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x1161cb0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1161d18 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1161d80 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x1161e00 <col:12> Implicit scanf 2 0
|-FunctionDecl 0x1161e68 prev 0x1161c10 <col:1, line:434:51> line:432:12 vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x11619d8 <col:21, col:38> col:38 __s 'FILE *restrict'
| |-ParmVarDecl 0x1161a58 <col:43, col:66> col:66 __format 'const char *restrict'
| |-ParmVarDecl 0x1161ad0 <line:433:7, col:22> col:22 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x1161f20 <line:434:22, col:49> scanf 2 0
|-FunctionDecl 0x1162148 <line:440:12> col:12 implicit vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x11621e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1162250 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x11622c8 <col:12> Implicit scanf 1 0
|-FunctionDecl 0x1162330 prev 0x1162148 <col:1, line:441:51> line:440:12 vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x1161fa0 <col:20, col:43> col:43 __format 'const char *restrict'
| |-ParmVarDecl 0x1162018 <col:53, col:68> col:68 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| `-FormatAttr 0x11623e0 <line:441:22, col:49> scanf 1 0
|-FunctionDecl 0x11635b0 <line:444:12> col:12 implicit vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x1163650 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x11636b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1163720 <<invalid sloc>> <invalid sloc> 'struct __va_list_tag *'
| `-FormatAttr 0x11637a0 <col:12> Implicit scanf 2 0
|-FunctionDecl 0x1163808 prev 0x11635b0 <col:1, line:446:59> line:444:12 vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x1162460 <col:21, col:44> col:44 __s 'const char *restrict'
| |-ParmVarDecl 0x11624e0 <line:445:7, col:30> col:30 __format 'const char *restrict'
| |-ParmVarDecl 0x11633f0 <col:40, col:55> col:55 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-NoThrowAttr 0x11638c0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-FormatAttr 0x1163918 </usr/include/stdio.h:446:30, col:57> scanf 2 0
|-FunctionDecl 0x1163bb8 prev 0x1161e68 <line:451:1, line:455:51> line:451:24 vfscanf 'int (FILE *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x1163960 <line:452:11, col:28> col:28 __s 'FILE *restrict'
| |-ParmVarDecl 0x11639e0 <line:453:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x1163a58 <col:37, col:52> col:52 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0x1163c58 <<scratch space>:21:1> "__isoc99_vfscanf" IsLiteralLabel
| `-FormatAttr 0x1163ce8 </usr/include/stdio.h:455:22, col:49> scanf 2 0
|-FunctionDecl 0x1163ed0 prev 0x1162330 <line:456:1, line:458:51> line:456:24 vscanf 'int (const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x1163d38 <col:33, col:56> col:56 __format 'const char *restrict'
| |-ParmVarDecl 0x1163db0 <line:457:5, col:20> col:20 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0x1163f70 <<scratch space>:23:1> "__isoc99_vscanf" IsLiteralLabel
| `-FormatAttr 0x1163ff8 </usr/include/stdio.h:458:22, col:49> scanf 1 0
|-FunctionDecl 0x1164268 prev 0x1163808 <line:459:1, line:463:51> line:459:28 vsscanf 'int (const char *restrict, const char *restrict, struct __va_list_tag *)' extern
| |-ParmVarDecl 0x1164048 <line:460:8, col:31> col:31 __s 'const char *restrict'
| |-ParmVarDecl 0x11640c8 <line:461:8, col:31> col:31 __format 'const char *restrict'
| |-ParmVarDecl 0x1164140 <line:462:8, col:23> col:23 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-AsmLabelAttr 0x1164308 <<scratch space>:25:1> "__isoc99_vsscanf" IsLiteralLabel
| |-NoThrowAttr 0x1164398 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
| `-FormatAttr 0x1164990 </usr/include/stdio.h:463:22, col:49> scanf 2 0
|-FunctionDecl 0x1164a70 <line:485:1, col:33> col:12 fgetc 'int (FILE *)' extern
| `-ParmVarDecl 0x11649d8 <col:19, col:25> col:25 __stream 'FILE *'
|-FunctionDecl 0x1164bc0 <line:486:1, col:32> col:12 getc 'int (FILE *)' extern
| `-ParmVarDecl 0x1164b28 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0x1164d30 <line:492:1, col:25> col:12 getchar 'int (void)' extern
|-FunctionDecl 0x1164e78 <line:499:1, col:41> col:12 getc_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x1164de0 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x1164fc0 <line:500:1, col:34> col:12 getchar_unlocked 'int (void)' extern
|-FunctionDecl 0x1165108 <line:510:1, col:42> col:12 fgetc_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x1165070 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0x1165360 <line:521:1, col:42> col:12 fputc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x11651c8 <col:19, col:23> col:23 __c 'int'
| `-ParmVarDecl 0x1165240 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0x1165540 <line:522:1, col:41> col:12 putc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x1165428 <col:18, col:22> col:22 __c 'int'
| `-ParmVarDecl 0x11654a0 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x11656d0 <line:528:1, col:28> col:12 putchar 'int (int)' extern
| `-ParmVarDecl 0x1165608 <col:21, col:25> col:25 __c 'int'
|-FunctionDecl 0x11658a8 <line:537:1, col:51> col:12 fputc_unlocked 'int (int, FILE *)' extern
| |-ParmVarDecl 0x1165790 <col:28, col:32> col:32 __c 'int'
| `-ParmVarDecl 0x1165808 <col:37, col:43> col:43 __stream 'FILE *'
|-FunctionDecl 0x1166ac8 <line:545:1, col:50> col:12 putc_unlocked 'int (int, FILE *)' extern
| |-ParmVarDecl 0x11669b0 <col:27, col:31> col:31 __c 'int'
| `-ParmVarDecl 0x1166a28 <col:36, col:42> col:42 __stream 'FILE *'
|-FunctionDecl 0x1166c28 <line:546:1, col:37> col:12 putchar_unlocked 'int (int)' extern
| `-ParmVarDecl 0x1166b90 <col:30, col:34> col:34 __c 'int'
|-FunctionDecl 0x1166d78 <line:553:1, col:32> col:12 getw 'int (FILE *)' extern
| `-ParmVarDecl 0x1166ce0 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0x1166f50 <line:556:1, col:41> col:12 putw 'int (int, FILE *)' extern
| |-ParmVarDecl 0x1166e38 <col:18, col:22> col:22 __w 'int'
| `-ParmVarDecl 0x1166eb0 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x1167240 <line:564:1, col:77> col:14 fgets 'char *(char *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0x1167018 <col:21, col:38> col:38 __s 'char *restrict'
| |-ParmVarDecl 0x1167098 <col:43, col:47> col:47 __n 'int'
| `-ParmVarDecl 0x1167110 <col:52, col:69> col:69 __stream 'FILE *restrict'
|-FunctionDecl 0x11675c8 <line:603:1, line:605:55> line:603:18 __getdelim '__ssize_t (char **restrict, size_t *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0x1167310 <col:30, col:48> col:48 __lineptr 'char **restrict'
| |-ParmVarDecl 0x1167388 <line:604:30, col:49> col:49 __n 'size_t *restrict'
| |-ParmVarDecl 0x1167408 <col:54, col:58> col:58 __delimiter 'int'
| `-ParmVarDecl 0x1167480 <line:605:30, col:47> col:47 __stream 'FILE *restrict'
|-FunctionDecl 0x11678b8 <line:606:1, line:608:53> line:606:18 getdelim '__ssize_t (char **restrict, size_t *restrict, int, FILE *restrict)' extern
| |-ParmVarDecl 0x11676a0 <col:28, col:46> col:46 __lineptr 'char **restrict'
| |-ParmVarDecl 0x1167718 <line:607:28, col:47> col:47 __n 'size_t *restrict'
| |-ParmVarDecl 0x1167798 <col:52, col:56> col:56 __delimiter 'int'
| `-ParmVarDecl 0x1167810 <line:608:28, col:45> col:45 __stream 'FILE *restrict'
|-FunctionDecl 0x1167bd8 <line:616:1, line:618:52> line:616:18 getline '__ssize_t (char **restrict, size_t *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0x11679c0 <col:27, col:45> col:45 __lineptr 'char **restrict'
| |-ParmVarDecl 0x1167a38 <line:617:27, col:46> col:46 __n 'size_t *restrict'
| `-ParmVarDecl 0x1167ab0 <line:618:27, col:44> col:44 __stream 'FILE *restrict'
|-FunctionDecl 0x1167e40 <line:626:1, col:72> col:12 fputs 'int (const char *restrict, FILE *restrict)' extern
| |-ParmVarDecl 0x1167ca8 <col:19, col:42> col:42 __s 'const char *restrict'
| `-ParmVarDecl 0x1167d20 <col:47, col:64> col:64 __stream 'FILE *restrict'
|-FunctionDecl 0x1167fa0 <line:632:1, col:33> col:12 puts 'int (const char *)' extern
| `-ParmVarDecl 0x1167f08 <col:18, col:30> col:30 __s 'const char *'
|-FunctionDecl 0x1168178 <line:639:1, col:43> col:12 ungetc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x1168060 <col:20, col:24> col:24 __c 'int'
| `-ParmVarDecl 0x11680d8 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0x1168538 <line:646:15> col:15 implicit fread 'unsigned long (void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x11685d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1168640 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x11686a8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0x1168710 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1168798 prev 0x1168538 <col:1, line:647:45> line:646:15 fread 'unsigned long (void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x1168240 <col:22, col:39> col:39 __ptr 'void *restrict'
| |-ParmVarDecl 0x11682b8 <col:46, col:53> col:53 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x1168330 <line:647:8, col:15> col:15 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x11683a8 <col:20, col:37> col:37 __stream 'FILE *restrict'
|-FunctionDecl 0x1168bd8 <line:652:15> col:15 implicit fwrite 'unsigned long (const void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x1168c78 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1168ce0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1168d48 <<invalid sloc>> <invalid sloc> 'unsigned long'
| `-ParmVarDecl 0x1168db0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1168e38 prev 0x1168bd8 <col:1, line:653:41> line:652:15 fwrite 'unsigned long (const void *, unsigned long, unsigned long, FILE *)' extern
| |-ParmVarDecl 0x11688a0 <col:23, col:46> col:46 __ptr 'const void *restrict'
| |-ParmVarDecl 0x1168918 <col:53, col:60> col:60 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x11689d0 <line:653:9, col:16> col:16 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x1168a48 <col:21, col:38> col:38 __s 'FILE *restrict'
|-FunctionDecl 0x1169120 <line:673:1, line:674:47> line:673:15 fread_unlocked 'size_t (void *restrict, size_t, size_t, FILE *restrict)' extern
| |-ParmVarDecl 0x1168f10 <col:31, col:48> col:48 __ptr 'void *restrict'
| |-ParmVarDecl 0x1168f88 <col:55, col:62> col:62 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x1169000 <line:674:10, col:17> col:17 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x1169078 <col:22, col:39> col:39 __stream 'FILE *restrict'
|-FunctionDecl 0x1169408 <line:675:1, line:676:48> line:675:15 fwrite_unlocked 'size_t (const void *restrict, size_t, size_t, FILE *restrict)' extern
| |-ParmVarDecl 0x11691f8 <col:32, col:55> col:55 __ptr 'const void *restrict'
| |-ParmVarDecl 0x1169270 <col:62, col:69> col:69 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x11692e8 <line:676:11, col:18> col:18 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x1169360 <col:23, col:40> col:40 __stream 'FILE *restrict'
|-FunctionDecl 0x1169700 <line:684:1, col:63> col:12 fseek 'int (FILE *, long, int)' extern
| |-ParmVarDecl 0x11694d8 <col:19, col:25> col:25 __stream 'FILE *'
| |-ParmVarDecl 0x1169558 <col:35, col:44> col:44 __off 'long'
| `-ParmVarDecl 0x11695d8 <col:51, col:55> col:55 __whence 'int'
|-FunctionDecl 0x11698c0 <line:689:1, col:38> col:17 ftell 'long (FILE *)' extern
| `-ParmVarDecl 0x11697c8 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0x1169a70 <line:694:1, col:35> col:13 rewind 'void (FILE *)' extern
| `-ParmVarDecl 0x11699e0 <col:21, col:27> col:27 __stream 'FILE *'
|-FunctionDecl 0x1169d10 <line:707:1, col:63> col:12 fseeko 'int (FILE *, __off_t, int)' extern
| |-ParmVarDecl 0x1169b28 <col:20, col:26> col:26 __stream 'FILE *'
| |-ParmVarDecl 0x1169ba0 <col:36, col:44> col:44 __off '__off_t':'long'
| `-ParmVarDecl 0x1169c20 <col:51, col:55> col:55 __whence 'int'
|-FunctionDecl 0x1169e98 <line:712:1, col:38> col:16 ftello '__off_t (FILE *)' extern
| `-ParmVarDecl 0x1169dd8 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0x116a160 <line:731:1, col:72> col:12 fgetpos 'int (FILE *restrict, fpos_t *restrict)' extern
| |-ParmVarDecl 0x1169f50 <col:21, col:38> col:38 __stream 'FILE *restrict'
| `-ParmVarDecl 0x116a048 <col:48, col:67> col:67 __pos 'fpos_t *restrict'
|-FunctionDecl 0x116a410 <line:736:1, col:56> col:12 fsetpos 'int (FILE *, const fpos_t *)' extern
| |-ParmVarDecl 0x116a220 <col:21, col:27> col:27 __stream 'FILE *'
| `-ParmVarDecl 0x116a2f8 <col:37, col:51> col:51 __pos 'const fpos_t *'
|-FunctionDecl 0x116a560 <line:757:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:757:13 clearerr 'void (FILE *)' extern
| |-ParmVarDecl 0x116a4d0 <col:23, col:29> col:29 __stream 'FILE *'
| `-NoThrowAttr 0x116a608 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x116a708 </usr/include/stdio.h:759:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:759:12 feof 'int (FILE *)' extern
| |-ParmVarDecl 0x116a670 <col:18, col:24> col:24 __stream 'FILE *'
| `-NoThrowAttr 0x116a7b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x116a8b0 </usr/include/stdio.h:761:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:761:12 ferror 'int (FILE *)' extern
| |-ParmVarDecl 0x116a818 <col:20, col:26> col:26 __stream 'FILE *'
| `-NoThrowAttr 0x116a958 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x116aa80 </usr/include/stdio.h:765:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:765:13 clearerr_unlocked 'void (FILE *)' extern
| |-ParmVarDecl 0x116a9f0 <col:32, col:38> col:38 __stream 'FILE *'
| `-NoThrowAttr 0x116ab28 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x116ac28 </usr/include/stdio.h:766:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:766:12 feof_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0x116ab90 <col:27, col:33> col:33 __stream 'FILE *'
| `-NoThrowAttr 0x116acd0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x116add0 </usr/include/stdio.h:767:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:767:12 ferror_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0x116ad38 <col:29, col:35> col:35 __stream 'FILE *'
| `-NoThrowAttr 0x116ae78 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x116afa8 </usr/include/stdio.h:775:1, col:36> col:13 perror 'void (const char *)' extern
| `-ParmVarDecl 0x116aee8 <col:21, col:33> col:33 __s 'const char *'
|-VarDecl 0x116b068 </usr/include/x86_64-linux-gnu/bits/sys_errlist.h:26:1, col:12> col:12 sys_nerr 'int' extern
|-VarDecl 0x116b150 <line:27:1, col:38> col:26 sys_errlist 'const char *const []' extern
|-FunctionDecl 0x116b260 </usr/include/stdio.h:786:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:786:12 fileno 'int (FILE *)' extern
| |-ParmVarDecl 0x116b1c8 <col:20, col:26> col:26 __stream 'FILE *'
| `-NoThrowAttr 0x116b308 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x116b408 </usr/include/stdio.h:791:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:791:12 fileno_unlocked 'int (FILE *)' extern
| |-ParmVarDecl 0x116b370 <col:29, col:35> col:35 __stream 'FILE *'
| `-NoThrowAttr 0x116b4b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x116b638 </usr/include/stdio.h:800:1, col:63> col:14 popen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x116b520 <col:21, col:33> col:33 __command 'const char *'
| `-ParmVarDecl 0x116b5a0 <col:44, col:56> col:56 __modes 'const char *'
|-FunctionDecl 0x116b790 <line:806:1, col:34> col:12 pclose 'int (FILE *)' extern
| `-ParmVarDecl 0x116b6f8 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x116b8e8 <line:812:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:812:14 ctermid 'char *(char *)' extern
| |-ParmVarDecl 0x116b850 <col:23, col:29> col:29 __s 'char *'
| `-NoThrowAttr 0x116b990 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x116dab0 </usr/include/stdio.h:840:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:840:13 flockfile 'void (FILE *)' extern
| |-ParmVarDecl 0x116da20 <col:24, col:30> col:30 __stream 'FILE *'
| `-NoThrowAttr 0x116db58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x116dc58 </usr/include/stdio.h:844:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:844:12 ftrylockfile 'int (FILE *)' extern
| |-ParmVarDecl 0x116dbc0 <col:26, col:32> col:32 __stream 'FILE *'
| `-NoThrowAttr 0x116dd00 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x116ddf8 </usr/include/stdio.h:847:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:55:54> /usr/include/stdio.h:847:13 funlockfile 'void (FILE *)' extern
| |-ParmVarDecl 0x116dd68 <col:26, col:32> col:32 __stream 'FILE *'
| `-NoThrowAttr 0x116dea0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:55:35>
|-FunctionDecl 0x116dfa0 </usr/include/stdio.h:858:1, col:27> col:12 __uflow 'int (FILE *)' extern
| `-ParmVarDecl 0x116df08 <col:21, col:26> col:27 'FILE *'
|-FunctionDecl 0x116e1f0 <line:859:1, col:35> col:12 __overflow 'int (FILE *, int)' extern
| |-ParmVarDecl 0x116e058 <col:24, col:29> col:30 'FILE *'
| `-ParmVarDecl 0x116e0d8 <col:32> col:35 'int'
|-FunctionDecl 0x116e368 <main/test/../los_compiler.h:327:23, main/test/task_demo.c:48:1> line:42:6 TaskSampleEntry2 'void (void)'
| `-CompoundStmt 0x116e798 <line:43:1, line:48:1>
|   `-WhileStmt 0x116e780 <line:44:5, line:47:5>
|     |-IntegerLiteral 0x116e408 <line:44:12> 'int' 1
|     `-CompoundStmt 0x116e760 <col:15, line:47:5>
|       |-CallExpr 0x116e520 <line:45:9, col:47> 'int'
|       | |-ImplicitCastExpr 0x116e508 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x116e428 <col:9> 'int (const char *, ...)' Function 0x115c660 'printf' 'int (const char *, ...)'
|       | `-ImplicitCastExpr 0x116e560 <col:16> 'const char *' <NoOp>
|       |   `-ImplicitCastExpr 0x116e548 <col:16> 'char *' <ArrayToPointerDecay>
|       |     `-StringLiteral 0x116e488 <col:16> 'char [29]' lvalue "TaskSampleEntry2 running...\n"
|       `-CStyleCastExpr 0x116e738 <line:46:9, col:33> 'void' <ToVoid>
|         `-CallExpr 0x116e700 <col:15, col:33> 'int'
|           |-ImplicitCastExpr 0x116e6e8 <col:15> 'int (*)()' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x116e680 <col:15> 'int ()' Function 0x116e5d0 'LOS_TaskDelay' 'int ()'
|           `-IntegerLiteral 0x116e6a0 <col:29> 'int' 2000
|-FunctionDecl 0x116e848 <main/test/../los_compiler.h:327:23, main/test/task_demo.c:56:1> line:50:6 TaskSampleEntry1 'void (void)'
| `-CompoundStmt 0x116eaf0 <line:51:1, line:56:1>
|   `-WhileStmt 0x116ead8 <line:52:5, line:55:5>
|     |-IntegerLiteral 0x116e8e8 <line:52:12> 'int' 1
|     `-CompoundStmt 0x116eab8 <col:15, line:55:5>
|       |-CallExpr 0x116e990 <line:53:9, col:47> 'int'
|       | |-ImplicitCastExpr 0x116e978 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x116e908 <col:9> 'int (const char *, ...)' Function 0x115c660 'printf' 'int (const char *, ...)'
|       | `-ImplicitCastExpr 0x116e9d0 <col:16> 'const char *' <NoOp>
|       |   `-ImplicitCastExpr 0x116e9b8 <col:16> 'char *' <ArrayToPointerDecay>
|       |     `-StringLiteral 0x116e928 <col:16> 'char [29]' lvalue "TaskSampleEntry1 running...\n"
|       `-CStyleCastExpr 0x116ea90 <line:54:9, col:33> 'void' <ToVoid>
|         `-CallExpr 0x116ea58 <col:15, col:33> 'int'
|           |-ImplicitCastExpr 0x116ea40 <col:15> 'int (*)()' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x116e9e8 <col:15> 'int ()' Function 0x116e5d0 'LOS_TaskDelay' 'int ()'
|           `-IntegerLiteral 0x116ea20 <col:29> 'int' 2000
`-FunctionDecl 0x116eba0 prev 0x1125088 <line:58:1, line:84:1> line:58:8 LosAppInit 'UINT32 (void)'
  `-CompoundStmt 0x116f3f8 <line:59:1, line:84:1>
    |-DeclStmt 0x116ecb8 <line:60:5, col:15>
    | `-VarDecl 0x116ec50 <col:5, col:12> col:12 used ret 'UINT32':'unsigned int'
    |-DeclStmt 0x116ed48 <line:61:5, col:19>
    | `-VarDecl 0x116ece0 <col:5, col:12> col:12 used taskID1 'UINT32':'unsigned int'
    |-DeclStmt 0x116edd8 <line:62:5, col:19>
    | `-VarDecl 0x116ed70 <col:5, col:12> col:12 used taskID2 'UINT32':'unsigned int'
    |-IfStmt 0x116f158 <line:70:5, line:72:5>
    | |-BinaryOperator 0x116f008 <line:70:9, main/test/../los_compiler.h:350:23> 'int' '!='
    | | |-ImplicitCastExpr 0x116eff0 <main/test/task_demo.c:70:9> 'UINT32':'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x116efb0 <col:9> 'UINT32':'unsigned int' lvalue Var 0x116ec50 'ret' 'UINT32':'unsigned int'
    | | `-IntegerLiteral 0x116efd0 <main/test/../los_compiler.h:350:23> 'unsigned int' 0
    | `-CompoundStmt 0x116f140 <main/test/task_demo.c:70:24, line:72:5>
    |   `-CallExpr 0x116f0e8 <line:71:9, col:39> 'int'
    |     |-ImplicitCastExpr 0x116f0d0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x116f028 <col:9> 'int (const char *, ...)' Function 0x115c660 'printf' 'int (const char *, ...)'
    |     `-ImplicitCastExpr 0x116f128 <col:16> 'const char *' <NoOp>
    |       `-ImplicitCastExpr 0x116f110 <col:16> 'char *' <ArrayToPointerDecay>
    |         `-StringLiteral 0x116f088 <col:16> 'char [21]' lvalue "Task1 create failed\n"
    |-IfStmt 0x116f398 <line:79:5, line:81:5>
    | |-BinaryOperator 0x116f288 <line:79:9, main/test/../los_compiler.h:350:23> 'int' '!='
    | | |-ImplicitCastExpr 0x116f270 <main/test/task_demo.c:79:9> 'UINT32':'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x116f230 <col:9> 'UINT32':'unsigned int' lvalue Var 0x116ec50 'ret' 'UINT32':'unsigned int'
    | | `-IntegerLiteral 0x116f250 <main/test/../los_compiler.h:350:23> 'unsigned int' 0
    | `-CompoundStmt 0x116f380 <main/test/task_demo.c:79:24, line:81:5>
    |   `-CallExpr 0x116f328 <line:80:9, col:39> 'int'
    |     |-ImplicitCastExpr 0x116f310 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x116f2a8 <col:9> 'int (const char *, ...)' Function 0x115c660 'printf' 'int (const char *, ...)'
    |     `-ImplicitCastExpr 0x116f368 <col:16> 'const char *' <NoOp>
    |       `-ImplicitCastExpr 0x116f350 <col:16> 'char *' <ArrayToPointerDecay>
    |         `-StringLiteral 0x116f2c8 <col:16> 'char [21]' lvalue "Task2 create failed\n"
    `-ReturnStmt 0x116f3e8 <line:83:5, col:12>
      `-ImplicitCastExpr 0x116f3d0 <col:12> 'UINT32':'unsigned int' <LValueToRValue>
        `-DeclRefExpr 0x116f3b0 <col:12> 'UINT32':'unsigned int' lvalue Var 0x116ec50 'ret' 'UINT32':'unsigned int'

Call graph has been saved to call_graph.json
